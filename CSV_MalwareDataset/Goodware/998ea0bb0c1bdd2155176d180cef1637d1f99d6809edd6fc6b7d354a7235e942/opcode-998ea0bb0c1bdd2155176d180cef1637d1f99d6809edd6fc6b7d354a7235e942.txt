push mov mov mov mov mov pop ret push mov mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov movl mov mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov test je mov cmp jbe mov mov test je mov test je mov add xor test je mov test je mov jmp mov call jmp mov push sub mov mov movl mov mov mov mov mov movl add mov mov mov movl mov mov lea mov call add mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov jmp add xor mov push sub mov mov test movl mov mov mov movl movl je mov test je mov mov mov mov lea mov movl mov mov mov mov call add mov push sub mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl movl movl movl push call add mov movl mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl movl movl movl push call add mov movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov call mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call pushl call add movl pop pop ret int3 int3 push mov push push mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov movl movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl mov mov mov test je mov lock cmp jne mov call mov pop pop pop ret int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 push mov push push push mov mov mov mov movl movl mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movl movl movl movl movl push call add mov movl mov mov mov test je mov mov mov nopl mov mov mov shr mov mov mov add mov and and mov shl add push call inc dec jne mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pushl call add movl pop pop pop ret call int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov mov test je cmp mov jbe mov mov test je mov test je mov add movl mov test je mov test je mov mov jmp test je movl movl mov mov jmp nopl push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl jmp mov mov mov mov mov test mov mov mov mov je mov mov test je mov test je mov mov movl test je mov test je mov mov xor test jne jmp add movl mov mov mov mov xor mov test mov mov je mov mov test je mov mov test je mov test je mov test je mov xor test je mov test je mov test je mov mov mov mov cmp je mov data16 mov mov mov mov mov shr add mov and mov inc and mov mov mov shr mov mov mov mov add mov and mov mov mov mov inc and mov mov mov cmp jne mov mov push sub mov mov mov mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call jmp mov movl xor test je mov test je mov test je mov cmpl je mov mov mov mov mov mov mov lea mov mov data16 mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add mov and mov mov mov mov inc and dec mov mov jne mov mov mov add sub mov mov test movl movl je mov test je mov mov mov mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movsd mov movsd pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov mov push pushl push call pushl call add mov call add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov mov pushl call mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov pop pop pop ret int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov test je data16 mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov jne movl mov mov jmp data16 push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pop pop pop ret call int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test mov je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov movl pop ret int3 int3 int3 push mov push mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov setne pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov push push push mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call movl movl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl movl movl movl push call mov add mov movl mov mov test je mov mov mov nopl mov mov mov mov mov dec and pushl call inc mov dec jne mov add pop pop pop pop ret int3 int3 push mov push push push mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add and mov mov test jne push call add mov mov mov mov movl movl movsd movsd movsd movsd movsd movsd movl movl movw incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov test cmovne cmp jae jmp nopw add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae mov add push call add lea and mov jmp mov push call add mov lea mov mov mov mov mov mov mov lea lea sub push push pushl call add add mov mov sub mov jae lea mov push push push call add mov mov mov lea lea sub push push mov push call add add pushl push push jmp mov mov lea mov push push push call add mov shl lea push push push call add pushl push mov push call add mov mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov lea mov mov mov mov mov mov dec and mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw decl je pop pop pop ret movl pop pop pop ret call int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov mov mov lea mov mov add mov mov mov mov mov mov dec and mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov mov jmp mov movl movl mov mov mov mov sub sub add mov mov sub push sub mov cmp mov movl movl jae mov test je mov test je mov mov mov mov mov movl movl test je mov test je mov mov mov lea mov movl mov mov mov mov call add mov cmpl mov je mov sub data16 mov mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov mov inc decl cmove inc mov jne jmp mov test je mov test je mov mov mov mov add movl mov mov mov mov movl movl test je mov test je mov mov mov lea mov mov call add mov cmpl je mov sub nopl mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov je inc jne jmp xchg movl inc jne mov mov test je mov test je mov add mov lea test movl movl je mov test je mov mov jmp mov add lea movl movl mov mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov sub cmp je mov mov mov mov mov shr cmp jbe data16 mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov push sub mov mov mov movl movl add test mov je mov test mov je mov test je mov mov add movl movl test je mov test je mov mov mov mov mov add mov test je mov test je mov add movl movl test je mov test je mov mov mov mov jmp mov nopw mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov mov sub test mov je mov test je mov test je mov mov lea test je mov test je mov mov test je mov mov test jne movl cmp je jmp mov movl movl mov add add test mov mov je mov test jne mov movl add movl lea mov mov call add mov jmp mov lea mov movl test je mov mov cmp jne jmp lea movl movl cmp je dec data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov push sub mov mov mov test mov je mov test je mov test je mov add mov test je mov test je mov test je mov test je mov mov movl movl lea test je mov test je mov mov mov mov mov mov add mov test jne jmp mov add mov jmp mov mov movl movl mov lea mov mov add test je mov test je mov test je mov movl movl test je mov test je mov mov mov mov jmp mov movl movl mov mov test mov movl movl mov je mov mov lea mov call add mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp movl add movl mov mov mov call mov lea pop pop pop pop ret movl test jne jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov test je mov mov jmp movl mov mov mov mov test je mov test je mov mov test je mov mov mov sub jne jmp mov movl mov sub je mov mov mov data16 mov mov mov mov dec and mov mov mov dec and mov cmp je mov cmpl jbe mov mov cmp jae sub movzbl mov mov mov call inc inc cmp jne jmp nopw cmp mov jb mov mov mov lea push push push call add mov movw inc inc cmp jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov cmp jae or cmp ja mov mov mov shr sub cmp ja add mov mov cmp cmovae mov inc je test js add cmp jb cmp jae add push call mov add lea and mov jmp xor mov jmp push call mov add mov mov mov mov mov lea push push push call add movw mov cmp jb mov inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add pop pop pop pop ret call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call int3 int3 int3 push mov push push push sub mov mov mov lea test je mov mov jmp movl mov mov mov test je mov test je mov mov test je mov mov mov cmp jne jmp mov movl mov cmp je neg dec mov data16 mov dec mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov lea dec cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl mov cmp jne jmp call int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test je mov mov jmp movl mov mov mov mov mov test je mov test je mov mov test je mov mov cmp mov jne jmp mov movl cmp mov je data16 mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov inc inc cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl cmp mov jne jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov inc cmp ja push mov call mov mov mov lea mov and mov cmove mov dec and mov test jne push mov call mov add mov mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov mov or cmp cmovb mov inc js add mov mov mov cmp jb mov cmp jae add push call add mov lea and mov jmp push call add mov mov mov lea push push mov push call add mov mov mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov mov movl test je mov mov mov test mov je mov mov mov mov test je mov mov mov cmp jne mov jmp movl mov cmp je mov sub jne mov jmp mov lea mov mov mov mov data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov dec nop cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov cmp je mov dec data16 cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret mov pop ret int3 int3 int3 int3 int3 push mov push push push push mov movl movl mov test je mov test je mov nop lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je lock mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret push mov mov test je mov lock cmp jne mov pop jmp pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov test je mov test je mov data16 lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov test cmovne cmp jae jmp nopl add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae add push call add lea and mov jmp push call add mov mov shr mov lea mov mov mov mov lea lea sub push push push call add mov add mov sub mov jae lea mov push push push call add mov mov lea lea sub push push mov push call add add pushl push push jmp mov and push push push mov call add mov add shl push push push call add push push pushl call add mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push mov mov mov mov mov lea mov and shr shl mov mov mov mov add mov and add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push decl mov je pop ret movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov mov mov lea mov mov add mov mov mov and shr shl mov mov mov add mov and add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov jmp mov movl xor mov mov mov mov mov sub add mov mov sub mov sub push sub mov cmp mov mov movl movl mov jae test je mov test je mov mov mov mov mov mov mov movl movl test je mov test je mov mov mov mov mov movl mov mov mov lea mov mov mov test je mov mov mov mov test je mov test je mov mov mov mov test mov je mov mov jmp mov test je mov test je mov mov mov mov mov mov mov add movl test mov mov mov mov movl movl je mov test je mov mov mov movl mov lea mov mov test je mov mov test je mov mov jmp movl mov mov test jne mov movl mov mov mov sub jne mov mov jmp mov mov mov mov mov mov test je mov test je mov mov test je mov jmp mov xor mov mov movl test je mov test je mov test je mov mov mov cmp je mov mov mov mov nopl mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add and mov mov mov mov inc and mov cmp jne mov mov mov mov add sub mov test movl movl je mov test je mov mov mov mov mov cmpl je mov mov sub add sub data16 test je inc inc jne jmp data16 movl inc inc jne sub jmp movl mov mov mov sub je mov neg dec mov mov mov dec xchg mov mov mov shr mov mov add and mov mov and mov mov mov shr mov mov mov add and mov mov mov mov dec and mov mov lea dec cmp jne mov mov mov mov add mov movl movl mov test je mov test je mov mov mov mov cmpl je mov mov mov mov mov mov sub add sub xchg inc test cmove inc inc jne sub mov mov mov mov test je mov test je mov test je mov add mov test movl movl je mov test je mov mov mov jmp mov add movl movl mov lea mov mov mov call mov lea pop pop pop pop ret int3 int3 int3 push mov push push push sub mov lea mov mov mov sub mov mov mov cmp je mov mov mov mov mov shr cmp jbe mov jmp nop mov mov mov mov shr mov mov mov add and test mov mov je mov jmp data16 mov mov add shr cmp ja movl call sub mov mov nopw mov and mov lea and lea mov cmove add dec mov shr and mov test jne movl call mov mov mov mov mov mov mov and mov mov mov mov incl lea mov inc mov cmp jne mov mov mov sub test mov je mov test je mov mov lea test je mov test je mov test je mov mov mov mov cmp jne jmp nopl mov mov mov mov mov mov shr mov mov mov add and mov mov mov lea mov test mov je mov jmp data16 mov lea shr cmp ja movl call sub mov mov mov mov nopl mov mov mov and lea add and mov add mov shr and mov test jne movl call mov mov mov mov mov mov and mov mov incl lea mov inc mov cmp jne mov mov mov mov mov add test je mov test je mov mov add test je mov test je mov mov mov mov test jne add jmp lea movl movl cmp jne jmp mov xor movl xor add add cmp je cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call jmp mov lea movl mov mov cmp je dec data16 cmp je mov mov mov mov mov mov mov shr add mov and mov mov mov shr and mov mov mov add mov and mov and mov mov mov mov mov mov mov mov inc mov mov cmp lea jne mov mov test je mov test je mov test je mov mov add test je mov test je mov test je mov test je mov mov mov lea test mov mov je mov test je mov jmp mov add mov lea mov xor mov xor mov mov mov test je mov test je mov test je mov test je mov mov mov test mov jne jmp xor xor mov test mov je mov xor test mov je mov mov test mov je mov mov mov mov mov cmp jne mov mov mov jmp mov mov movl xor xor add lea mov mov mov mov cmp je mov cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call mov lea jmp mov add movl mov mov test je mov add test je mov test je mov jmp xor mov mov xor mov test mov je mov test je mov mov mov lea cmp jne mov mov mov mov mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp add movl movl mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov sub mov je mov mov lea data16 cmp je mov mov mov shr mov mov mov add and mov mov mov and shr mov mov mov mov add mov and mov inc and cmp lea mov mov mov mov mov mov mov mov mov mov jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov add mov mov and mov and mov mov shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov mov add mov and mov mov mov and shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov mov mov add mov mov add pop pop pop pop ret int3 int3 push mov mov test je mov pop ret xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je mov test je mov data16 lea lock je mov test jne xor pop pop pop pop ret mov test je mov lock cmp jne mov mov call mov mov lock cmp jne mov mov call mov mov mov mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov lock cmp jne mov call movl movl pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret xor pop ret int3 int3 int3 int3 int3 push mov mov test je mov pop jmp xor pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov mov add mov cmp je mov or mov mov cmp mov mov je nopw mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov mov shl add mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add xor jmp mov mov call mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmpl jbe mov mov test je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov push mov mov mov mov cmp je add or mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push flds mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movss movsd movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss movss flds add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov cmove cmove mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov jmp add mov mov pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov push call add test mov cmove mov mov cmove mov mov movsd movsd movsd movsd movsd movsd movl movl movb mov mov cmp je inc mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push push mov mov cmpl jbe mov mov test jne jmp lea mov test je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push call cmp mov jne jmp mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 mov add mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 push mov push push push sub mov mov cmpl jbe mov mov test mov mov je mov nop movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov mov data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add test mov je cmp jne mov mov mov add pop pop pop pop ret push pushl push call add mov test jne mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret push mov push mov push call add mov mov mov movw mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call add mov mov mov movw pop ret int3 int3 int3 push mov pushl call add pop ret int3 push mov pushl call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push call add mov mov mov mov pop pop ret int3 int3 int3 push mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov pushl call mov mov mov mov mov mov movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmpb jne data16 mov pushl call mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmpb mov je pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea mov mov push pushl push call mov call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov pushl call mov mov mov mov mov mov movl mov mov jmp cmp je mov jmp nopw mov cmpb je mov mov cmpb jne nopl mov mov cmp jne mov cmpb je jmp nop mov mov cmpb je jmp mov jmp nopw cmpb je mov push lea push call cmp mov jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb mov mov je mov cmpb mov jne cmpb je mov mov cmpb je mov cmp je cmp lea cmove mov mov cmp je cmp je cmpb jne mov mov cmp mov je nopw cmpb mov jne mov cmp je cmpb je cmpb jne jmp nop mov cmpb je cmpb jne jmp nopl mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov mov cmpb jne mov mov mov cmpb movzbl jne cmp jne movb jmp add mov mov mov mov mov mov cmpb jne mov lea mov mov cmpb movzbl jne cmp jne movb mov mov mov mov cmp mov jne movb mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add jmp cmpb je mov cmpb jne mov nopl mov mov mov cmp jne mov mov cmpb je jmp mov mov cmp jne add mov mov cmp jne cmpb mov jne mov xchg mov mov cmpb je mov mov mov mov cmp jne cmpb mov jne mov nop mov mov cmpb je mov mov mov cmpb je mov cmp jae mov mov push call add mov test je dec mov mov mov add pop pop pop pop ret mov movb mov cmp jae jmp mov cmp je mov mov mov mov mov cmp je mov mov cmpb jne mov mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov xchg mov mov cmpb je jmp mov movb mov cmp jae jmp mov mov mov cmpb mov jne jmp add mov mov mov mov mov mov mov mov cmpb jne jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmovne jmp mov jmp add mov mov mov mov mov mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov jmp add mov mov mov mov mov lea mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov movb mov cmp jae jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov pop pop ret int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov pop pop ret push mov push push sub mov mov mov cmp mov je mov mov mov mov call sub mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp nopl mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb jne movl call mov mov mov mov mov mov movw movl movl mov cmpl mov jbe mov jmp lea mov mov lea cmp mov ja mov movsd movsd mov movsd movsd mov jmp mov mov or mov mov cmp cmovb cmp jb lea mov call mov lea and mov jmp lea mov call mov mov mov mov lea mov mov mov call mov mov mov mov mov mov mov mov mov mov mov cmpb mov mov mov cmovne mov call sub mov mov mov mov mov mov mov mov call sub mov mov call mov add pop pop pop pop ret int3 push mov mov mov mov mov pop ret push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov push call add mov mov mov mov movw movl movl mov cmpl jbe mov mov lea cmp mov ja movsd movsd mov movsd movsd mov mov jmp mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call add mov mov mov mov mov mov incl mov mov add cmp mov je mov test je mov mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov mov jmp mov mov mov mov cmp jne mov mov mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov mov push call add mov mov mov mov movw movsd movsd movsd movsd movsd movsd movl movl movb incl mov lea cmp mov je mov test je mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov jmp mov mov mov cmp jne mov mov mov cmpb jne mov lea lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov movb mov mov mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je data16 mov push pushl lea push call add cmp jne mov call add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov mov mov mov mov mov movw movl mov movl mov cmpl jbe mov mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov inc push pushl push call mov add mov mov mov mov push push push mov push call mov add pop pop pop pop ret push mov push push push sub mov mov mov mov mov cmpl je mov mov cmp je cmp je mov cmpl jbe mov jmp mov pushl push pushl push jmp mov cmpl jbe mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl mov jbe mov jmp lea mov mov mov mov mov cmpl jbe mov cmp mov mov cmovb push mov push push call add xor cmp setb shl test cmovne mov mov test mov jns mov mov cmpb je mov mov cmpl ja lea jmp lea mov cmpl mov jbe mov cmp mov cmovb push push push call mov add xor cmp mov setb shl test cmovne test jns mov push push pushl push jmp lea cmp mov cmovb push push push call add xor cmp mov mov setb shl test cmovne test jns mov push push pushl jmp mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne mov test js xor cmp setb cmp cmovb push pushl push call add shl test mov mov cmovne test mov js lea mov push push push push call mov mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov pushl pushl push jmp mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp nopl mov mov cmpb je jmp lea mov cmp mov cmovb push push pushl call add xor cmp mov mov mov setb shl test cmovne test jns mov mov cmpb je mov mov push push push push mov push call mov call mov add pop pop pop pop ret mov push push push jmp mov pushl pushl jmp mov cmp jne jmp int3 int3 int3 int3 int3 push mov push push push sub mov mov cmp jae mov inc mov lea mov cmp mov je mov test je mov mov cmp jne mov mov cmpb jne jmp mov mov mov mov mov mov cmpb jne jmp mov mov cmp je mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp data16 movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret mov mov cmpb jne jmp push call push call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb mov je mov mov cmp je cmpb je mov mov jmp mov mov cmpl mov jbe mov mov test mov je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne mov lea pushl push push push push call mov jmp mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov jmp mov cmpb je mov cmpb je mov mov mov mov mov cmpl jbe mov mov cmpl mov mov jbe mov jmp nopl mov mov cmpb je jmp lea mov mov cmp cmovb push push push call add xor cmp setb shl test cmovne test js mov mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov movb jmp movzbl mov lea pushl pushl push push push call mov mov mov movb mov call mov add pop pop pop pop ret mov data16 mov cmp jne mov mov mov cmpb je cmpb jne jmp mov cmpb jne jmp call push mov push mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov push push call mov mov xor cmp je mov data16 cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov push push lea push call mov call mov add pop pop pop pop ret int3 int3 int3 push mov push sub mov mov mov mov lea push push call mov mov mov mov mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov lea mov mov cmpb je mov jmp mov mov cmpl mov jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl mov push call add xor cmp setb shl test cmovne test js mov cmpb je mov xor cmp setb cmp cmovae mov push pushl pushl call add mov shl test cmovne test cmovs mov mov mov cmpb je jmp nopl mov mov add mov cmpb je cmpb mov cmove mov cmpb jne mov mov cmpl jbe mov mov mov cmpl mov jbe mov jmp nopl lea mov mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov add pop pop pop pop ret push mov push push mov mov mov cmpl jbe mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmove shr pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpb je mov mov add pop pop pop pop ret mov mov mov cmpl mov jbe mov mov mov mov nopl mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov cmp je mov cmpl jbe mov mov mov cmpl ja jmp lea mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmovne mov test mov jns jmp int3 push mov push push sub mov mov mov lea push push call mov mov xor cmp je xchg cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov call mov add pop pop pop ret int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov add pop pop pop pop ret push mov push mov cmp je mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov pushl call mov cmp mov mov mov mov mov movl je mov push pushl lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 push mov push push mov movl movl test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea mov sub sar cmp jae cmp jae mov push call mov mov mov lea push push call mov mov lea mov mov mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov sub mov sar cmp jae cmp mov mov jae mov mov shr sub cmp mov ja add cmp cmovb mov mov test je cmp ja cmpl jb test jne mov cmp jae add sub cmp jb call mov mov sub sar mov sub jae cmp mov mov je mov mov mov data16 mov mov add cmp jne mov mov mov sub jne jmp lea test je mov shl nopw mov mov add add jne jmp mov push call add test movl movl movl je cmp jae lea cmp jb cmp jae add push call add mov lea and mov jmp xor jmp push call add lea mov mov mov mov mov mov data16 mov mov add dec jne mov lea jmp mov sub je mov mov mov nopw mov mov add inc jne mov mov lea mov add pop pop pop pop ret call call int3 int3 int3 push mov push call int3 int3 int3 push mov push push push push mov mov mov sub test mov je cmp jae lea cmp jb cmp jae add push call add lea and mov mov mov cmp jne test jne jmp xor mov mov cmp jne jmp push call add mov mov mov cmp je sub xor data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov lea mov sar lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov nopl mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov add mov mov cmp mov je mov or mov mov cmp mov je mov mov cmp jne test je mov cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov mov cmp jne mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea mov cmp je cmp je mov or mov mov cmp mov je mov mov lea mov mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov xor jmp mov or mov shl add mov mov mov mov call mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je movl call mov lea mov mov mov mov call sub mov lea mov movl movl call sub mov mov mov call sub mov mov mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae mov call mov call cmp mov jne mov call mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov lea mov mov mov mov lea mov sub sar push push call mov mov mov cmp je mov mov nop mov add mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov cmp mov jne mov call add pop pop pop pop ret call push call int3 int3 int3 push mov push push push sub mov mov mov cmp mov mov mov je cmp je mov xchg mov lea cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push mov call mov add add movl movl movw push call mov mov cmp je mov mov cmp jne cmp mov jne jmp mov cmp mov jne jmp mov cmp mov je mov data16 mov add mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov cmp mov jne lea pushl pushl push call mov call add pop pop pop pop ret push call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov push push mov mov cmpl jbe mov mov add je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xorps movss ucomiss jb movss pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpl mov jbe mov mov mov mov mov add je mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov mov cmp je mov or mov mov cmp mov je mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 mov movzwl cmp jne inc cmp jne jmp nop cmp jne mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov pushl call mov mov cmp je inc mov mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov xor jmp mov mov mov mov lea cmp je cmp mov mov je or mov mov mov cmp je mov lea mov mov jmp mov or shl mov mov mov add mov mov call mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov cmpl mov jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call add mov mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov cmp mov je mov mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add mov cmp jne mov call add pop pop pop pop ret push call push mov push push push push mov mov cmpl jbe mov mov add jne jmp lea mov add je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 push mov push push push push mov mov mov lea lea cmp mov mov je cmp jne mov jmp cmp je lea add jmp mov mov lea shl mov lea add mov mov mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp jne jmp data16 inc cmp jne jmp nop lea cmp je mov cmp je mov cmpl jbe mov cmp jne cmpl je xor nopl movzwl cmp je jmp cmpl je xor nop movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov cmpl jbe mov cmp jne jmp nopw mov add cmp jne cmpl je xor nopw movzwl cmp jne inc cmp jne jmp nopl mov cmp jne jmp cmpl je xor nopl movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov cmp je lea mov mov mov cmp mov je mov mov mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov cmp jne mov mov jmp mov cmp je mov mov mov mov cmp mov je mov cmp jne test mov je mov cmpl jbe mov jmp lea xor nopw movzwl cmp jne inc cmp jne mov mov cmp mov jne jmp mov cmp je cmp jne test mov je mov cmpl jbe mov jmp lea xor data16 movzwl cmp jne inc cmp jne mov mov mov cmp jne jmp mov mov jmp mov mov jmp mov mov mov cmp cmove cmove mov mov mov mov add pop pop pop pop ret mov jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov cmp mov je add or mov mov jmp nop mov cmpl jbe mov cmp jne test je xor data16 movzwl cmp jne inc cmp jne jmp nopl lea cmp je cmp jne jmp test je xor data16 movzwl cmp jne inc cmp jne mov mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov mov mov movl movl movl call mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov call sub mov call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movw movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea movl push push call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov movl mov push push call cmp je mov nopl mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov lea lea mov lea mov push push push push push call mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov test mov je mov mov mov mov mov movl movl mov cmpl jbe mov lea cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add mov mov lea push push push call mov add mov mov mov movl mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov push push push mov mov mov lea lea mov cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov shl add mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je nopw mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov sub mov sar mov mov sub mov sar cmp jbe mov cmp mov mov jae mov mov mov shr sub cmp ja mov add cmp cmovae mov cmpl mov je cmp mov ja cmp jb test jne mov cmp jae add sub cmp jb call mov mov mov mov sub mov sar cmp jbe mov lea push push push call add mov mov mov mov cmp je shl lea sub sub xor mov nopl mov mov add cmp jne sub and lea jmp lea mov pushl push push call add jmp mov push call add movl movl movl mov test je cmp jae lea cmp jb cmp jae add push call add lea and mov jmp xor mov cmp jne jmp push call add mov mov mov mov lea mov mov cmp je mov mov add mov xor data16 mov mov add cmp jne sub and lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov xor cmp jbe mov mov cmp je add or mov mov cmp je xor nopw mov inc cmp jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov shl add pop ret push mov mov mov cmp jbe shl add mov mov pop ret add mov mov mov pop ret int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov push call add mov mov test mov mov cmove mov cmove mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov movsd movsd mov jmp mov mov mov mov or cmp cmovb cmp mov jb lea push call add mov lea and mov jmp xor jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov cmp je lea mov mov mov cmp je mov mov mov mov nopw cmp jne cmpl jbe mov jmp nopl lea push pushl push call add test je mov cmp jne mov mov mov mov mov add pop pop pop pop ret mov cmp je mov mov mov mov cmp mov je mov nopl cmp jne cmpl mov jbe mov jmp xchg lea mov push push push call add test jne mov mov cmp mov jne jmp mov cmp je nopl cmp jne cmpl jbe mov jmp lea push push pushl call add test jne mov cmp jne mov jmp mov mov jmp mov jmp mov jmp mov mov mov cmp cmove cmove mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 lea mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movb movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea push push call mov cmp je mov movb jmp lea lea mov lea push push push call mov lea mov mov push add push push call mov mov add call mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov or mov cmp cmovb cmp mov jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call mov add mov mov mov mov movl mov cmp je inc mov mov mov mov mov mov mov add add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov sub mov mov cmpl je mov cmpl je call mov mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov cmpl je mov cmpl jne movl jmp movl mov mov jmp mov mov mov mov mov mov mov mov pop ret push mov push mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov cmpl jne call mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar and mov mov and or mov mov mov movl mov mov shl sar mov cmpl ja mov jmp mov mov mov mov mov mov jmp mov cmpl je call mov mov push mov mov push mov mov mov mov call mov mov mov mov or mov mov jmp mov movl jmp push call add mov movl cmpl je mov mov mov mov mov mov mov mov mov lea push mov push mov call mov mov jmp movl mov mov movl mov mov mov mov cmpl je push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov movl jmp mov add mov cmpl jge mov mov mov lea mov mov cmpl je mov mov push mov mov mov lea call jmp mov mov mov mov pop ret rorb adc or adc or adc or adc or int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp loop mov bound fisttp push test dec pop test loop pop lods pop mov pop xchg push cmp out pop fistl mov cmp jns popf cli cs jbe test xor or jne add adc push push and (bad) mov lret push leave ljmp push rorl or pop lcall or cltd rolb ret pop or and bound mov mov pop in imul adc fnsave (bad) inc jbe add mov ret sti and dec loopne mov (bad) sahf mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov movsd movsd mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov and or mov mov mov mov or mov mov mov movl call mov mov push mov push mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp loop xchg pop (bad) and test sarb cmp jo mov xchg or inc popf jne rcl das fidivl nop int3 test in dec jo mov xchg scas cmp add pushf cmc jp (bad) push fwait or mov push jmp cmp pop cld rol dec in push leave cmpl aam aad cmp mov pop lret push fidivl pushf popa (bad) outsl mov inc imul push mov scas mov mov inc xchg ret leave (bad) popf loop nop ss sub adc (bad) loope outsb loop hlt mov jo adc frstor (bad) jbe cmpsl lea mov adc in or jecxz jo outsb es gs inc xchg jne push and es add push test (bad) out cmp dec pop (bad) (bad) fstl sti aam lock hlt rorb (bad) mov sahf cs fistpl cltd jg shl jnp cmp push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov cmpl je mov cmpl jne call mov mov mov mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 cmp loop xchg pop inc xor sarb cmp jo mov xchg push cmp xlat dec rorl inc inc lahf fstp jb jns icebp cli mov cmp pop insl pop inc into fimul rorb push imul mov out or jl sub rcrl push sbb sbb dec or data16 punpcklbw scas jl call mul mov int mov testl inc jge lahf aas (bad) bound jle add mov mov lods out popa pop xlat les test pop adc loopne sarl lock scas jmp xchg cmp in loop mov jmp xorb xchg fcomps jecxz movsl popl cmp and or cltd push das loope pop (bad) out and int3 xchg outsl test xchg idiv in (bad) int xchg mov mov insb mov sbb xor push popf cmp xor sub pop jns jecxz mov cld std repnz xor inc xor pop dec adc mov int3 mov push xchg test ret mov mov jbe xor in push mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push lea call movl lea push mov call mov mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jne movl jmp movl mov jmp mov mov mov cmp jne movl jmp movl mov mov pop ret int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov movb lea call lea call movl lea call mov mov mov mov pop ret int3 int3 push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp push mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jge movl jmp movl mov jmp mov mov mov cmp jge movl jmp movl mov mov pop ret int3 int3 push mov push mov mov movl mov call mov and je push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp loop popf (bad) xchg cmp push (bad) or mov sbb mov movl movl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call pop ret int3 int3 int3 int3 int3 int3 push mov mov call pop ret int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov cmpl je movl jmp movl mov jmp mov movsd ucomisd lahf test jnp movl jmp movl mov jmp mov mov jmp mov cmpl je mov imul mov mov movsbl test je push push mov mov push call add mov mov mov or je movl jmp movl mov jmp mov mov mov mov mov mov mov mov mov mov add mov mov mov mov cmpl je movl jmp movl mov jmp xor mov pop ret pushf pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc sbb adc int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret push mov sub mov mov mov shl sar mov cmpl ja mov jmp fldz jmp mov fildl fstpl fldl jmp mov mov mov cvtsi2sdl mov shr addsd movsd fldl jmp mov fldl jmp mov movzbl test je movsd movsd jmp xorps movsd fldl jmp mov test je call fldz mov pop ret clc sbb adc sbb adc sbb adc sbb adc mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov mov jmp mov cmpl jb call mov mov jmp mov movsd comisd jb mov movsd comisd jae call mov cvttsd2si jmp mov movzbl test je movl jmp movl mov jmp mov test je call xor mov pop ret nopl mov sbb adc sbb adc sbb adc sbb int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov mov shl sar mov cmpl ja mov jmp push mov call mov or mov mov jmp mov cmpl je mov mov mov jmp movl mov push mov call mov or mov mov jmp mov movzbl test je movl jmp movl mov push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov cvtsd2ss cvtss2sd sub movsd push lea push call add lea push mov call mov or mov mov jmp push mov call mov or mov mov mov pop ret nopl jmp in dec in repnz out arpl in pop aas mov dec mov and mov das mov call loop cmp mov push loop aaa pop pop adc int3 mov xlat mov mov daa mov mov sub push dec insl push loope pop xchg popa (bad) aam add fwait iret sbb dec aad pop movl lods and push sbb jae ficomp (bad) cmpsb inc lock test mov mov in jle xchg cmp mov outsl adc loope ficoml pop (bad) int add pop push ficoml push or mov xlat adc mov add inc movsl icebp jae test inc pushf aam adc sub push pop push fidivl cmpsb je cmp dec stos dec xlat (bad) dec push add push (bad) lret xor mov mov inc or clc js pop pop loope sub mov mov outsl sar scas loopne cmc aam ret aaa dec mov test xlat mov cltd bound rol (bad) mov dec negb rolb test loopne stc dec push scas inc fbstp xor and sub cmc cmpsb xor xor imul lods popa sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc int3 int3 int3 push mov sub mov cmpl jne mov mov mov add mov mov mov mov addl cmpb jne mov sub mov mov mov mov add push call add mov mov push mov push mov push call add mov add movb mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov cmp jle push call add cmpl jne movl movl push call add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov movl mov mov shl sar test jne mov mov mov mov mov movl mov movl mov movl mov or mov mov jmp lea mov mov mov mov movl mov movl mov movl movl mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov push lea call lea push mov mov call mov mov lea push mov mov call mov mov jmp lea call mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov mov call push lea call mov mov mov movb mov mov mov push lea call movb lea call movb jmp lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar cmp je mov mov shl sar cmp je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov sub mov mov push mov call mov cmpl je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp loop mov bound fisttpl push test dec inc mov cmp sbb pop adc sub or jnp data16 add stc shrb fsubl mov in push mov push mov push mov mov mov mov call mov pop ret push mov push mov mov push mov mov mov mov call mov pop ret int3 int3 push mov push mov cmpl je mov push call add mov pop ret int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call movzbl test je movl jmp movl mov push mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov mov mov movb lea call lea call movl lea call mov mov mov mov pop ret push mov sub mov mov cmpl je call mov mov mov mov push mov mov mov mov call mov cmpl jb call mov mov mov push mov mov mov mov call mov imul mov movsbl test je mov imul mov movsbl cmp je call call mov mov push mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 cmp loop add fwait outsl xchg add enter test push lea (bad) xor rcrl outsl pop push adc mov mov in push push mov push mov sub mov mov cmpl jne push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov mov push mov mov mov lea call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp loop mov bound fisttpl push test dec inc mov sets cltd pop xchg jo gs fwait xchg sub adc dec aad outsl imul (bad) test setg insl push dec int3 jmp pop add dec mov sub mov inc loopne push add dec int3 (bad) mov scas test dec ret pop lock inc and or adc dec mov bound xchg lods out test inc in pop pop loop xor leave pushf dec xchg into cmc pop std pop or mov push repz mov insl call mov dec movsb mov sbb frstor negb push dec insl (bad) add (bad) jno and dec data16 pop add into jp pop xchg xchg jne inc and test cmpsb sahf out fcoms xor arpl fcmovnu dec inc out jg dec lock mov or lea mov mov insb xchg cld sbb inc mov sub je mov ds xor rorl jne scas fmuls xchg inc or lret ds cs or leave pop js mov inc in loop jl sbb repnz jmp fld cld mov fidiv pop and mov pop lret repnz adc xchg or and fisubrl shll fistpll mov pop in xor jnp in and xchg shlb jns lods mov push cmp inc in mov sbb aas cmp outsl cmpsb xchg leave lahf add mov bound jb and push stc int xchg outsb mov push rorb sbb push mov push mov mov mov shl sar mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp loop mov sub in push mov pushl mov call mov movl mov add call mov movb mov mov pop ret push mov push mov mov movl mov pop ret cmp loop int3 jge lock les enter mov dec push mov lcall mov xchg jae lea cld outsl (bad) xchg dec and push int3 insl (bad) mov push mov push push mov movsbl test je mov mov mov pushl call pop movzbl mov mov inc mov cmpl je mov jmp jmp xor mov pop ret push mov push movsbl test jle movsbl cmp jg movl jmp andl mov mov pop ret cmp loop (bad) xor lock sub ljmp movsl dec mov in mov nop dec push rolb and mov jmp jno cli mov jp mov mov mov dec mov mov mov mov movb mov mov dec mov mov mov xor push pop div add mov mov mov mov xor push pop div mov cmpl jne pop ret push lea sub push push mov push mov sub andl push pushl call pop pop test jne pushl call pop movzbl test jne pushl call pop movzbl test jne push lea call mov mov mov andl pushl pushl lea push call add mov mov mov movb push pushl pushl call add mov or mov movb lea call movl lea call orl mov jmp mov mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov lea call movl pushl lea call push call pop push call pop push push lea call mov mov mov movzbl test je mov movzbl and je cmpl jne andl mov mov mov mov inc mov movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and shl or mov mov inc mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp mov movzbl and cmp jne mov inc mov jmp cmpl je mov and push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp mov movzbl push call pop movzbl test je mov mov cmpl je cmpl je cmpl je jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push call pop movzbl test je mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov pushl lea call jmp mov mov mov pushl lea call mov inc mov jmp push call pop push call pop push push lea call lea push mov call mov or mov movl lea call orl mov mov mov add mov pop ret push mov sub andl lea mov cmpl jge movl jmp andl mov mov movzbl test je mov neg mov lea push pushl call pop pop movzbl test je mov dec mov mov movb pushl mov call mov or mov mov mov pop ret push mov sub andl lea mov lea push pushl call pop pop pushl mov call mov or mov mov mov pop ret push mov sub andl push push movsd movsd push push lea push call add lea mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov mov movsbl cmp je lea push mov call mov or mov mov jmp lea cmp jbe mov movsbl cmp jne mov dec mov jmp mov mov lea cmp jb mov mov mov cmpb je cmpb jle cmpb jle jmp mov dec mov jmp mov movb lea push mov call mov or mov mov jmp lea push mov call mov or mov mov jmp jmp lea push mov call mov or mov mov mov pop ret push mov push push andl movzbl test je movl jmp movl pushl mov call mov or mov mov mov pop ret push mov push push mov push mov push push mov andl andl push mov add call orl pushl mov call mov add push mov call mov or mov mov mov mov mov pop ret push lea sub push push mov push mov sub mov mov call mov cmpl ja mov jmp push call pop push call pop push push mov add call jmp mov call push lea push call pop pop mov mov mov andl pushl mov add call movl lea call orl jmp mov call push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp mov call push push fstpl lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov pushl mov call push lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov call movzbl push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp push call pop push call pop push push mov add call mov call mov andl jmp mov inc mov mov cmp jge cmpl jle push call pop push call pop push push mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call jmp lea push mov call movl push call pop push call pop push push mov add call lea push lea call jmp mov add mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je mov mov mov mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je push call pop push call pop push push mov add call mov pushl mov call push lea push call add mov mov mov movb pushl mov add call movb lea call movb mov movzbl test je movl jmp movl pushl call pop push call pop push pushl mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call movl lea call orl mov mov add mov pop ret nopl cmp movsl adc xor adc xor adc xor adc xor adc aam sub std hlt jb or ds jo mov xchg push cmp fldcw mov gs mov jg xor push popf inc sub addr16 (bad) add dec mov jp jno lahf dec xchg test mov lea lods push in push roll add lods or pop mov (bad) lret gs dec testb scas je shrb push subb rolb (bad) cs ficoml mov lret cli jnp movsb adc adc or cmp add imul push out and movsl push xlat adc insl int add fdivrs inc ret jnp arpl xor add sar sarl and pop insb inc lds popf fs cmc je and outsl out popf xor push add mov or or ljmp fldcw nop push adc popf outsb and pop pop push and pop mov (bad) data16 or fstpt jo movsb les les mov fwait mov mov mov xchg add (bad) mov xchg mov mov inc loope hlt aas mov inc mov sar sub ljmp negb (bad) sub cli and mov (bad) xor test mov cmp adc (bad) and loope adc inc xchg addb xchg jnp jbe hlt inc sbb mov out scas popf jb out fistp jecxz inc (bad) add (bad) or popf jno mov sbb out dec mov mov push pop out push jmp mov jle fdivrs ss xchg pop pusha mov mov add xor jne jo fildl or cmp aad out adc ret popa mov sub imul mov mov out xchg jb sbb mov cmc aaa or fcoms dec (bad) cld dec xor adcl xchg push fisubl fsts hlt call sti jmp sbb jle adcl out inc xchg (bad) jnp or cmp arpl fcomps ja adc subl rcrl in test inc add xchg insl fstl rclb push sbb pop in adc mov insl popa jl jmp add mov icebp ds xchg leave ss pop (bad) xchg dec shl push ficomp push int3 je xchg mov adc je add (bad) dec xchg inc inc pop cli jb sbb or shrl push popa jb push sbb inc (bad) add popf (bad) mov mov movsb arpl cwtl xchg je insb movsb leave jg push xor cwtl push loop cli lds cmpsb cmp loope ljmp or pushf or sbb and cs jnp mov aaa outsb iret sarl test cmp pushf adc or (bad) rolb dec sbb sti lock xor scas clc loope (bad) in or stos sbb pop imul mov cmpsl pop jle (bad) mov cmpsl adcb lret loop cmpsb and aaa sti xchg imul inc sbb mov cmc ret test fistp xchg ljmp call stos test push cmp mov mov or and enter repnz push (bad) fnsave clc push lret call inc rorb mul mov loope loop xor fidiv (bad) cmpsl pop push adc jl mov (bad) lahf adc sahf (bad) int pop mov std sub test aam fs adc add sbb xchg in pop or test in gs lahf xor loope test dec and dec jns mov bound mov repnz jo push jne in mov rorl fadds dec test in sub icebp hlt jae out stc fnsave popa pop shlb and inc ss mov adc inc sbbb repnz cmpsb pusha push je push pop cltd imul and mov pushw daa sub das lods sbb push je ret faddl iret adc es inc lods sbb repnz mov xor popa es mov fs in xchg cmp ds jecxz stos mov mov mov arpl cmp (bad) adc sub cwtl cli jns inc lea or push stc push or inc fadd dec sbb in pushf xchg xor cld and lds adc ss mov pusha repz jno nop cwtl lods lahf outsb jbe mov or xor leave pushf mov adc jg sbb sbb call or or scas add inc cmp push roll rcrb pop scas cmp cltd or jg mov push lcall popa scas hlt test xor pop shl mov and push sub adc sbbl sbb popa xlat xchg cmp push xchg fdivl scas repz mov pop jo jbe inc es cmp icebp mov in jl rcrb cmpsb and adc mov inc add or negb data16 sarl je (bad) ret inc (bad) lock hlt ret (bad) cmp and iret mov sub push xor dec lods cmc adc subl cmp in mov cmp add fcomps js incl and xchg and inc bound cmp and dec test mov jl cmpsl sub inc pusha sbb in dec int3 popf sarb inc and jp ja jle (bad) enter repnz or pop lods xchg xchg mov std xchg lahf je add call cld rolb js aas in jg movsl jecxz xor push push dec jl mov fs pop jg jne jb adc inc sarl push aaa cli ss mov cli dec mov and enter add clc mov dec push cli stos sub ret xlat mov mov pop (bad) je lock or lret daa inc insl (bad) cli mov cmp mov mov in lds cmp scas sub stos xor mov and xchg push ljmp jb mov dec mov or lea es xchg sbb push sbb pop into scas or inc sbb dec addr16 jo xchg dec insb push notl mov arpl stos sub loopne add imul mov xlat jno mov dec xor mov movsl dec stos push push mov xlat mov push mov or (bad) pushf mov iret cmpsl add scas push icebp lea shrb mov jbe repnz fstpl mov sbb (bad) mov push cmp (bad) pop mov (bad) mov mov mov fidivrl bound mov mov scas xchg mov in loope int3 aam fldenv sbb push sahf out dec pop and pop scas cmp scas push mov adc xlat cmp (bad) mov cmc insl aas out lds icebp mov adc cli lcall out push push mov push mov jmp xor rorl jns mov loope push mov xor sti out fwait repz dec (bad) add sub or pop (bad) dec es cmp pushf and (bad) dec mov mov adc adc popf xor fisubl bound push insl and in fildll push mov xlat sbb push add js (bad) pop inc stos sti sbb fidiv sbb cs ret stos mov imul sub cmp mov xchg imul pop in cs in hlt lods nop in jecxz xor out out aas sbb fdivr jno add jns enter ds xor fprem1 push in adc mov jp sbb push sbb xor mov vcvtph2ps (bad) rolb mov mov jne ja push out push mov fs rorl lahf (bad) mov aad and imul ficom inc sbb pop in mov mov cmp leave addr16 hlt sbb sub xor inc cmp cwtl push inc leave dec int push cmp mov sti mov adc jge aaa int sbb jae xlat test sub inc enter rcr mov jp adc sbb push cmp fdivs lea pop mov (bad) shll ljmp cmpsb leave in mov lds adc ds cltd push mov pop les imul or dec jae push add or cmc lods inc out (bad) pop scas xor mov pop push lods sbb mov popa jnp pop or ja adc inc add adc int3 mov jp (bad) fcmovnbe sub add push inc ret sahf cmp mov mov rol dec js repz inc dec or mov pop movsl push mov arpl fmull pop sub or and xchg ss xchg push adc push mov sbb xchg test sbb inc call fs xchg xchg add inc jle int3 out movsl push mov pusha cltd test (bad) add push fs jmp mov movsl movsl imul aad cmp std mov dec push mov jns inc add xor cmc outsl mov pop inc push dec mov mov xchg add dec add inc neg pop sahf mov int3 jbe std pop mov lahf jb inc mov pop nop icebp jae scas outsl scas cli cli mov out (bad) xchg inc cmp js sahf adcb xchg dec jp inc xchg movsl sahf xor sbb ljmp in mov push pusha pop jg (bad) fnstsw pop sti push sbb (bad) sbb mov adc cmpsb fs lods mov ret dec data16 or js test lock int lock in mov fwait adc repnz dec (bad) xchg and mov rorb insb inc xlat hlt (bad) dec nop or push insl push adc add adc dec mov pushf shlb cmp cmp sahf push add icebp (bad) daa mov sub xor mov rcrl push pop in cmpsl jmp add pusha or sub pop in and pop jne cmp lea fdivl data16 dec mov push cs push mov into adc lret xor pop movsb sbb into test fbstp jge jnp jae xchg int jbe jg jns cltd jae mov sahf into sbb in dec xchg push lods arpl cmpsl pop lcall outsb inc in hlt adc add pop hlt push aas jb cld cwtl dec sbb mov and mov hlt mov out repz sub cld inc add or repnz imul mov pop jnp imul popa outsl cmp test jge,pn int3 mov push fucom decb mov daa fs mov jecxz imul adc lock jl movb mov sub mov (bad) xchg loop sbb sbb mov addr16 pop es push out and pop cmp jl int3 jo ret loope jbe lahf dec push out arpl push or test je push fwait imul lcall ret aas fstl xor daa daa push jmp pop adc cmp jl scas (bad) repz and insb sahf lret daa pop and (bad) lahf lds push aam pop inc test pop jae adc push loopne jle mov loop fcompl pop mov sbb sbb mov xor xchg mov gs mov mov sbb add nop test (bad) iret sbb jb lods adc rclb je int cltd cld add mov or aaa push cmp or insb sahf sub jb sbb add imul add cmc loopne jne adc mov jns repnz push dec inc sub dec test pop cmp mov sbb (bad) jmp test xchg dec jo sub iret std inc add fildll lret lea cmpsb jbe mov xchg into push sbb stc add ss mov clc and outsl adc int inc das jo out roll aad lock sub out outsb incl fwait ret outsl jb std mov lods sub xchg cwtl cmp popf in mov mov xor and fisttpl cwtl inc rcl push pop add adc add xchg push data16 mov add mov adc pop xor mov inc jb jle iret fs in imul xchg outsb sahf inc fwait sub fist mov mov and (bad) xchg pop addr16 push xchg test sbb add mov mov aad mov lahf out ret xchg leave sub cmp jmp aas pop pop lods repnz fidivrl mov mov xrstors hlt mov or stc fcompl in xchg jge sti xchg xor xor pop push repz inc add sti push popf sbb add sti inc aam mov out mov dec stos sarb mov popf mov or loop in out dec push loopne cld in lods ret adc xchg dec push push loope pop stc inc mov repnz lock lods cld roll jns xor ret in (bad) cltd adc xor pop fisttpll inc pop popa ljmp jl test adc mov in test xchg cli cmp insb jl loopne jg xor out ds mov (bad) jbe and cmp push or stos cmp and (bad) mov or (bad) pop outsb dec inc cmp cmpsb fnstcw dec cli aam rorl dec mov pop ja aaa and rorb out daa lods les mov push mov mov mov scas lahf jns or jle and fchs add pushf daa sub lcall cmp push pusha not xor pop fdivl adc jp ss add sbb fadd movsb cltd cmp nop or cltd cmp jne jno sub lock or ja out push aaa dec sbb mov pop adc cli jb pop std mov or test popa loope jp into xor pop lret imul xchg leave push cmp mov add sbb ljmp cwtl out sub lock mov mov fstpt mov lret sar or (bad) shll gs (bad) fs push sbb push in movsl jnp pushf xchg (bad) repnz dec cltd pop inc lock push in lock and mov dec imul fisubl insb sub outsb push mov jmp dec dec sahf push sbb jecxz les push shr jb lea stos dec call xchg sbb cmc jo sbb pusha or and mov inc jg inc fisub lret push xchg mov dec clc test sub dec data16 sub out cmp push mov nop add mov pop mov sbb xor cmp bound mov es mov aaa and adc pop lret jno xlat adc aam imul jle das in test inc add or mov ret mov jo jmp pop lods sub push inc aaa dec inc test loop sbb sub scas sbb dec test jbe mov mov lret (bad) daa mov push es rorb push sbb scas pop jmp repnz rcrb mov fxch and pop adc adc cmp call adc push or clc sub daa xchg cld push xchg cmp test test pusha mov stc std sahf mov adc enter dec sarl push xchg jmp (bad) int3 xchg cmp pop jne test ljmp adc dec jg (bad) jl rcl inc jecxz aam lock sub add pop dec out or dec fnstcw sub loopne call dec ret daa lds cli pusha gs test shrl fsts xor cs jecxz lahf xor or push (bad) in xor (bad) fstl in pop inc cmpsl fsubl cmp jo gs sahf dec or push dec or jb rcr dec sbb ljmp sahf iret aam daa (bad) pop ss jl mov lods sub popa subl (bad) xchg lea dec add jl iret rolb pop cmp movsb push jnp and xchg mul xor cltd jle mov mov cmp push xor adc or in mov or dec add mov add mov mov into pop in sub gs cli xchg mov inc xchg lods aam inc pop (bad) enter gs (bad) push sti add (bad) int3 pusha loope fidiv lret call pop shrl jecxz out sub mov bound lret dec jns dec ret into sub sbb push dec loope aaa test xor nop jmp pop fimull push inc out fisubr mov pop aas add pop pop in (bad) sbb or into jno push jo test mov loope scas inc (bad) jmp mov loop cwtl adc mov inc and ret mov ret rorb dec movsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp loop imul insb xchg xchg call mov mov sub mov adc cmp mov jnp mov mov xchg and xchg dec jl adc aad adc xor and int sarl popf sub fimul lock pop outsb mov lock fadd fidivl push inc (bad) movsl call movsb and adc sub mov cmp insl test fidiv nop dec ljmp ret mov iret mov jnp inc insl lock push cmp insl jmp loope out pop insb dec sbb daa mov pop inc pop xchg cs rclb out imul sbb gs fs ss stos icebp arpl aam cld add ja sbb je dec pop (bad) out (bad) mov mov adc xchg lds mov popf enter int3 add loope sub pop fcmovbe cmc mov or loop xor popa push and add ds repnz fwait add sbb cmp push xchg fadds shll or ss lds lcall mov sbb adc (bad) dec fs fnstenv mov mov fwait (bad) in testb and xchg pop lahf pop mov jb imul adc (bad) pop pusha xor sahf mov add icebp xor adc dec or mov loopne mov aas push sub rclb pop inc jbe loop pop mov sbb sub and or add xchg jge and jne cmp inc cld or push dec adc mov lods cltd les cmpsl jl int lea je out jbe orl xor mov bnd push add fwait mov fmulp (bad) lret push push pop roll or xchg xchg jo jecxz mov shrl mov fld push jne into ds (bad) aaa dec daa mov mov xor icebp movsb out xchg jo jp (bad) mov in leave (bad) popf push out sbbl popf (bad) (bad) mov das and ja pop inc movsl popa ljmp cmpsl mov xchg xor cs jb xchg repnz (bad) int3 icebp ret xchg sbb lods cmp xchg inc xor lea jecxz les lea dec fidivl xchg pushf sbb xchg mov jne pop xor cmp xchg in inc imul clc lods scas jg dec xor in insl mov push aaa rorb xor push pop push std ret mov inc mov and jmp mov inc adc xchg jo out pushf sbbl bound sbb enter std mov xchg icebp fsubrp dec mov sbb ljmp inc dec mov mov sbb fs mov dec and sbb xlat test inc and add xchg add idivl out mov xor in fsub push (bad) call xor cmc mov push sbb aam pushf mov push int3 pushf scas jp xchg xchg mov pop outsl dec mov xchg in mov cmpb xor xor lret fistpl imul daa push cmpsb xchg inc push pop movsb cmpsl sbbb cmp and push sbb push imul xor adc push inc dec insl clc xlat sbb pop rol rcrl test dec cmp int inc adc flds stc icebp imul push faddl xchg adc orl fsubrs push orl mov cld push nop add (bad) sarb out pop lret std push test inc lret lds shr cmp sti dec dec push jp xchg sti xchg pop test adc in cmp dec rorl out mov pop pop mov je sub idiv mov ds push xchg and movsl xlat and mov out addr16 inc out jg lcall repnz repnz jo jno sarl scas push std add icebp or stos test fstpt add xlat adc (bad) jb xchg push lret sbbl lret jmp aas push adc scas ja inc lods push ss add arpl loopne das adc inc (bad) fstp xchg loop das and repz out es leave pop loopne xorl fisttpl mov pusha or mov fsubr and test pusha stc fcoms aas divl pop or adc dec repnz pusha mov daa mov insb cmpsl jle iret pop cmp sbb clc cwtl outsb lds xlat bound cmp js out push ret adc mov mov jge dec in lds out sbb loop cmpsb or mov lods scas jecxz (bad) xchg sti cwtl mov (bad) inc pop xchg stos icebp add jae arpl repz push adc add pop mov orl mov pop pop mov push sub rcll imulb leave inc divb sub push xchg mov out jbe mov rorb pop aam or add push (bad) out fimul sbb push xchg pusha stos xor nopl cmp fildl nop push or mov pop jo (bad) aaa loopne jns (bad) fiadd pop aaa out push mov jbe call jmp test bnd cmpsl pop mov mov aas stos sub repz cwtl imul int3 cmc inc cmpsl sub into push cmpsb ja and push rclb (bad) ret inc mov fsts cmp fs mov (bad) jp (bad) sub cs inc (bad) insb leave movb mov out push lret lret inc jno cli pushf cltd aam xor sahf xor in adc mov mov les jecxz icebp dec lds and or mov xchg add subb or sti int jmp pushf (bad) adc movsl push and cmpsl out ljmp push into icebp sub push mov fstpl push pop das out out dec in test insb ljmp cmpsb in arpl test xor pop xchg jle out ss in outsb or pop sbb sbb dec cmpsl lret inc mov lret inc mov es sti adc rcrl iret and mov xchg mov je sbb test cltd repnz xor push popa mov xchg inc shrb add (bad) pop pop mov xchg mov mov in cmp mov push xchg jo cmpsb push push ret or dec int mov adc loopne and pop xor lods jle int3 or xchg notb hlt rorb mov jl adc insl sbb lock cmp gs in daa adc rcl stos (bad) or add cwtl pushf mov ret dec sar xchg or jae jge jecxz inc scas ljmp out xlat and and out fildll lahf inc aaa mov pop mov test cmpsb dec add adc jb mov mov in repz xor insl sbb inc add in roll xor xchg xchg lret mov xor mov pop sub mov lahf movsb pop mov loop cmp mov mov sbb into jb jp mov dec xchg mov or or push and ficom imul xchg repnz (bad) mov mov jge mov mov stc sbb pop lahf jp aam xchg push repnz lret mov aad cwtl popf (bad) adc loope out movsb jmp mov or ss aad cmpsl xchg fcomps ret test cmp (bad) aas inc aad stos stos aam pop mov mov sahf sub ljmp insb and call fs fdivrs ljmp (bad) fcompl movsb pop inc mov xchg in and add mov hlt lods js ja cli jecxz cmp das push (bad) sub addr16 hlt xor (bad) mov xchg movsb jns pop mov push xchg xchg movsl movsl and mov mov mov (bad) xlat movsl mov mov add mov sbb cpuid rorl pop cmc enter lcall or push inc mov add mov leave xchg jg or out lods add rcrb sbb dec std cwtl fisttp cmc ss loope pop xchg shrl in adc adc jnp or sar in xor je cmp lret cmp jle sub out cmpsb jne lds test jp stos sbb add mov insl loopne lods int je test nop and and nop cli mov or gs lahf jmp shl lahf lea and imul cmpsl mov loope cmpsb push xor (bad) cli mov dec inc adc or loope sub xchg jmp es push pop (bad) ja cmpsl push fldl lret loop adc rclb sbb or push inc jne loope stos add mov sub mul and and or scas (bad) stos aam pop or (bad) dec (bad) cld jmp repz xor sbb dec dec adc in jg mov clc (bad) sub ljmp adc cltd sbb int mov mov xchg aad sbb sarb dec sti pop xchg data16 jo int3 dec mov xchg mov fbld xchg cmp cmp pop ret sti aas xor bnd xchg inc mov sbb cmpsb psubsb imul sahf fnop subb leave mov pop xor lods cltd mov cmp cmc pop inc inc pop loope (bad) outsb add xlat dec aam adc in les dec into adc mov mov out add and push and xor pop and outsl jae pop mov cmpb mov pop lds lahf imul cld and sbb push sarb lea or sub aam (bad) repz pcmpeqb std (bad) mov mov dec pop or mov out or push mov outsl dec cmp hlt mov cmp int3 or inc aas in push add cli jns push cmp aaa mov push dec cltd pushf in mov inc lods mov adc pop xchg or jns push dec mov push mov inc aas jno pop sub push pop sub lds scas imul mov mov clc test jmp jnp mov sub pushf mov push push adc scas (bad) imul dec subl notl or sub mov mov fs out out repnz push mov test imul (bad) icebp inc xchg sub inc inc push inc repnz lods jmp fs clc mov cmovbe jl add dec push mov jge mov jne and std push push fwait sahf pop out pusha and mov cmp xor (bad) es outsl loopne or inc xor (bad) pop sub fdivs mov or sbb enter adc ja xor lods call not in sub test (bad) jmp xlat dec (bad) cmc and lahf lock js into mov mov and xchg imul pushf mov (bad) shufps sub inc xchg fidivr gs inc jge push prefetchw mov or loop daa fsubrs test mov sub (bad) loopne or xor in add pop xchg mov nop xchg shl or mov popa shll sub ds xor lahf ret mov or leave ds (bad) dec mov jl fwait inc arpl pop sbb call mov jg dec push sahf xor mov loope lods rcl fcomi push sbb sub aam and ss insb pop test ret lods (bad) cmc xlat xchg adc jg and jbe decb sbb mov insb pop jmp lret insb mov mov add add inc mov test xor add insb cmp dec xor jb (bad) insl mov inc xchg mov gs hlt (bad) (bad) xor inc mov push xor xchg into xor aas inc insb inc decb test mov loope mov enter pusha fidivl lahf into push pop pop test or pop xor mov push cmpsl mull mov sti push scas xor mov std outsl int rcll or cmpsl ss addr16 push inc lcall aas fdivrl iret aad xchg dec inc cmp movsb lahf cmc rolb lret (bad) rclb stos enter sbb stc loopne push popa pusha jge xchg gs out xsha256 cmpsb (bad) mov aad or test aas sub clc int3 cmp insb (bad) cld cmpl (bad) mov in inc dec or scas enter cmpsl call popf pop sti enter sti insb js fistp sub pusha cld lods fisttpl (bad) clc and repz aam add push add insb mov jne idivb jo ss cs push jno aas dec jmp std mov nop out je pop cmp scas in stos call adc outsl and pusha popf outsl dec ja cmc mov mov add (bad) outsl mov adc mov out mov std lcall dec xchg ja mov inc cmp shr (bad) fcmovbe aam loopne and push push outsb bound mov xor cwtl aam push mov and jno cli mov xlat jb mov cmp insl jmp fmuls and outsl lods or imul scas pushf cli das lods jae pop das mov js push outsl and mov leave pop popf dec sbb mov test mov test dec lods mov lock xorl inc test fdivrl inc lds sarl inc inc leave std fimul xchg es jb loope mov mov mov push jbe nop sub (bad) xor sub and icebp (bad) insb cli pop lea mov push dec push mov lock ja inc or rcrl cmp (bad) xchg insb xchg pop test sbb mov lds mov sti jb ret jecxz xchg icebp adc or jno add or lds insl jae jns jg mov arpl sbb aas lock call or int jl cwtl (bad) or ja and cld xchg out stos repz test insl (bad) hlt inc das mov push mov cmp into mov lds dec push and fbstp pop push pushf push mov add adc ds sub (bad) xchg jns pop ja xchg nop jns test (bad) lock scas ret pop inc mov movsl mov jg push inc cmpsl xorl jp shrb cmp inc std sbbl adc and push sub les rorl out sub adc xchg cmp push imulb mov cmp mov js cwtl push push arpl adc jo inc or jae push je push push pop (bad) xchg and icebp and imul add jne daa pop hlt sub push adc ds out jbe mov cmp enter and mov ljmp pop mov (bad) add shl imul sarl lods lock sbb fcomip xchg push int3 leave xor xor push cmp in fnstcw daa imul outsb mov add mov ljmp add jle std push in (bad) cmp lret insl adc cmp mov cs xchg in mov xor adc xchg and push push loope sbb mov pushf mov sub add (bad) pusha jo mov push mov lods out or adc dec jge xlat iret add aam repz scas roll mov stc or out popf fs shl push pop adc mov jle jg mov jno jl push je hlt xchg mov sub cmpsb scas test repnz mov mov andl cmp or xchg dec mov push divl popa fldcw sub mov xlat jo push jecxz fcmovb add cmp int adc cmp pop icebp loope out sub inc lret adc adc loope ss repnz sub into (bad) outsb int3 insb cmc inc jmp or mov cmpsl imul pushf cmp int mov push stos mov cmp pop ror xchg sbb loope sub enter mov dec fcomps sub push nop fdivp adc andps imul aam inc push and popf ja sub mov jbe adc jae int3 in dec jbe lcall push inc lock sbb imul ret jae push jbe jge adc pop xor jp divl movsb scas lahf or daa arpl inc movsl sbb sub fidivl ja test aam push bound sar dec fs test xchg jno adc adc icebp xlat xchg dec xchg lret andl add (bad) int3 cmp jg fdivrs jo mov cmp adc sub aas mov (bad) ljmp dec (bad) (bad) mov inc xchg adc dec sub pop fs movb (bad) repz mov mov mov outsl mov cli (bad) rol in pusha jmp or push jl fsubrp sub lcall dec dec xchg int3 inc jbe jbe push xor cld mov jnp dec loope movsl or ss lret mov in mov aam insl xor sub ss dec aaa or pop sbb lret mov stos hlt jmp cmc cltd or inc pop jl (bad) jl mov inc xchg test (bad) xchg mov jmp adc or je in mov movsb mov mov scas popa pop push int3 pop ret or mov dec test push add xchg aad inc das arpl sbb inc int3 loope bound rorl mov sbb fwait and jl testl mov subl adc or (bad) (bad) pop cltd fs pop jg (bad) rol inc repnz je push inc pop cltd nop mov jg mov jp and addr16 mov hlt jle jns push adc xor repz jbe xor xchg call pop sub setp lret shrb adc push (bad) xor in push loope (bad) add fsubs sbb jne jmp test mov xor push adc cmp cmp push stos mov jns xchg xchg daa or xor notl dec cmp lock push mov (bad) (bad) jno sub pusha xchg mov je sti xor adc repz and mov cmpl or xor sub ficomp mov nop pushf pushf loopne sbb push fcmovbe addl sub mov ret test xchg adc cmp std and and stc cli push cmp inc sub adc add and mov test cmp (bad) popa scas add roll inc cltd (bad) jno push mov imul push mov stos outsl fsubs loopne jno repnz pop and (bad) mov ss jmp jae jle dec out dec mov in jg xchg stc and jns loope push idiv sub sbb pop sti (bad) dec jno push sbb pusha mov sbb rol aas (bad) int adc stc dec fist loop jne jp push sbb sahf or inc dec pop std ss fwait ret popf je mov rorl sti and xchg sub adc lea xchg and mov mov inc inc (bad) flds or jae loopne fstpt add sbb jns hlt jo shr js lret ds inc jmp (bad) or sti stc aam mov enter pop dec mov sbb adc aad xchg test (bad) xor arpl clc add and mov bound push and movsl cs pop xchg mov or stos lods push fadds cld out pop adc std in lret sbb dec negl cmpsb clc scas sbb sub inc jno xor test or cmp adc jmp adc lret fldenv imul push scas stc cmp cmp cltd xchg lods lds push inc xlat add fimul dec inc xor lds dec mov imul cli loope leave pusha popf mov xchg test ret cmc push and insb mov mov cld ret sti fnstenv mov fdivl xchg pop insb xchg (bad) mov test js popa (bad) mov adc mov xchg lock (bad) in inc aas fcompl in push cmc xor and inc jae add lock xchg mov add imul nop dec test inc xchg pop gs loop push pop dec movsl aam leave fucomp add sub dec jle js dec out add sarb loope cmc push mov sti lcall inc mov xor cmp and adc and movsb decl mov push push sbb aaa out cmp mov xchg enter orl sbb adc out in lcall aaa ja ljmp cld lret outsl mov add out popf sti test sub cmpsl mov add cmp mov jmp pop arpl pop aaa inc jle movsb fisub mov inc mov dec arpl std (bad) fcmovu pop andl mov insb push arpl mov jecxz or ret add int sbb xchg icebp sbb inc test aaa adc push xchg adc mov inc jo icebp mov inc sbb outsw les add roll (bad) sub sub push mov fdivs xor dec cli jnp cmp adc (bad) dec jl push sbb pop cltd repz in cmp pop (bad) cmp inc aaa pusha inc and cltd sbb ds lock sub sub into sub test xor rcrl inc cwtl jno (bad) xor out call sbb sub enter xchg movsb mov into (bad) mov jno rolb jmp shrl pop pop repz std jb fsubrl rcr test inc or movsl xor adc jno fistpll lock mov or push or mov mov movsw jg sub (bad) enter pushf scas fnstcw aam pop xor je xchg dec int3 sub sti mov repz mov cmp or and push (bad) jl xorl or jo jns and and xchg xor jmp nop pop insl xchg add and mov sbb fstl loope sbb addr16 or fcoml sbb lahf in stos mov cld add test out ss movsl and mov adc lcall leave or xor loope jno mov mov push inc sbbl lock fiadd in movsb cmpsb lock gs popf cmp cmpsb add mov loop scas icebp rcr xchg cmpsb test jo arpl and and mov cmp sar sub sbb fwait lods push (bad) cmp mov cld out enter push mov sbb and ja pop cmc sub cmp (bad) mov ljmp into icebp mov sub or xor mov pop (bad) sbb add loopne lcall fldenv addl xor cwtl movsb fildll rcrl (bad) enter push adc sub jns mov adc popf nop mov es dec push pop cltd stc dec imul adc mov scas xor rorb sbb sub neg bound testb mul pop test inc arpl orl frstor pop sub aas lret daa lret lcall mov sahf test lds es or sbb std xchg jl scas mov push and add push fisttpl inc mov jle dec push jae or pop xor sbb inc fsubl mov aam and cs mov (bad) es or sbb ret add pushf inc lcall dec cmp and mov imul mov mov mov xchg jns ja dec dec sub in subl stos jbe dec lret sub pusha ret push push mov inc adc fs sbb lcall fwait and jae jno mov outsl fisttp xor mov cwtl popa sub jns lods jecxz pusha sbb lcall and add js xchg jle scas int aaa adc sub fwait jns imul es jg dec out fdivs add xor lock cmp push and push inc outsl scas jnp das sub scas in mul jns fiaddl icebp mov (bad) into add jnp adc imul mov sbb mov xor mov popa xchg (bad) jecxz mov mov mov xchg cltd add les scas outsb dec pop sbb scas mov dec pop aad sbb xor pop insl icebp jmp aaa (bad) mov push test test sbb shll repnz popf adc jmp (bad) aas push add (bad) jae mov fldl xabort pop xchg mov mov xlat inc mov cmp sub pop push sti (bad) push lods insl mov push jge stc pop cmp gs push add dec andb mov ds mov push pop lds add pusha push pop aas fcmovnu or sahf xchg mov add push in push xchg push cmp in pop inc fcom mov out xchg fwait mov push ret (bad) test mov inc mov aaa push (bad) xor push das jg sbb xchg aam mov pushf pusha adc sti jb mov xchg mov notl stc jno xor mov in pop je (bad) xor and sub sub and mov cld scas nop cmpsl xor popa mov adc fistpl je insl ds mov mov lfs ljmp insb in std push repz xchg mov mov mov pop in jns iret int aaa pushf sbb add jo ret roll in xor xchg mov push inc cmp scas pop jg insl scas cltd cmp std dec sbb dec fidivr (bad) jno dec inc cld (bad) loop cmp inc data16 push insb mov jmp test mov xor cmpsb mov jno (bad) leave sbb movsl xchg popf (bad) scas cld cmp lahf and or push mov cmp stos je (bad) add sub inc fldlg2 in dec xlat subl mov outsb pop (bad) fdivrp lds inc and ficomp rcrl test (bad) pop adc movsl fdivs aad insb and push decl stos jle imul aam stc mov divl insl mov divb cld adc mov std pop sbb mov fwait loope or jg stos out pop mov adc sbb dec enter push insb stos xlat lret fmulp insl jae jmp mov pop ret sbb out push add push insl mov jecxz imul dec loopne or xchg mov adc daa inc dec cmp (bad) adc inc enter xor xchg data16 mov and jbe mov ret jle pop and into xchg pop mov sbb lret sbb mov inc (bad) xchg mov icebp ret xor adc in loope push movsl test add sbb incb movsb arpl and aad call or test popf mov mov movsl mov mov aad adc pop pop fiaddl xchg push inc jo lret int lock enter sysexit mov fs push imul jns xchg xchg test cld mov (bad) pop sti push dec xchg in scas arpl shl mov cmp sub jmp cmp movsl or cld (bad) mov mov dec inc jo mov pop repnz mov pop and sub rcrl and inc add xchg test (bad) push fisub aam cli sti push xor jae and xchg repnz and out repnz mov movsl clc roll movsb rorl add push push pusha in (bad) jecxz out and sbb mov mov cltd lock xchg pop int and xchg pcmpgtb lcall jno (bad) push negb ret mov sub iret jmp fstps jne (bad) jmp (bad) cmp imul inc dec loope je scas outsb jns lcall mov or aas or mov xor pop (bad) divl cmpsl out adc push mov sbbl mov out sahf mov and rcr cmp ja rorb push pop fnstsw xor or xor lds push or pop lods jae mov adc xchg inc orl out addr16 aaa inc push out mov xor sahf test sub push pop pop ret jno push jge jb int3 sub mov (bad) out xor bound es mov and jbe jp adc repz fistl lret sub sub or push aaa add xchg inc in in or jmp push pop mov stos test aaa mov mov cmpsb jmp push mov xor std and roll sbb ss jecxz pop lea xor sub add std jp ret mov ret jecxz add rcll movsb inc loop out jbe xchg pusha outsb mov sbb inc inc cmp mov pop inc dec xor (bad) lret pop pop inc insb jbe push sahf mov xorl mov xchg dec xadd jg negl or sbb pop sbb adc push hlt xchg out pop imul inc inc ds adc jae xchg adc aam jne xor cmp mov dec mov sub jl dec xchg jl cmp mov (bad) pop jbe enter sbb rorb inc sub test mov xchg mov out xor int3 or mov outsb (bad) clc and (bad) jae lret or xchg (bad) pop adc or cvtpi2ps xchg aad daa jle scas out ds icebp and mov (bad) cmc xchg testl dec test leave jmp cmpsl stos aaa mov fcmovne out mov xchg or add aam sub repnz clc arpl pop dec cmpsb (bad) xlat pop dec cmp (bad) jle gs xchg ljmp stc idiv push mov jnp pop into mov mov mov or movsbl cmp scas jecxz out jmp adc mov arpl mov adc aam and popw pushf inc sbb cmp pop mov add sub (bad) mov xor add mov arpl inc dec pop mov mov aad push push push mov jg xchg fcmovu cmp es lret mov or adc fnstcw mov ret push mov stos mov adc xchg pop into adc dec xchg or lods cmp incl scas je sahf pop ret imul adc lret fs popa mov mov scas dec jo imul sti pushf sbb jp push push push mov add sub insb rolb (bad) dec jb xchg cwtl mov nop mov shll mov scas or (bad) rclb sub pop test icebp mov mov pop sbb mov addr16 xor push addr16 push in pslld lcall cld rolb push mov mov fdivrs out push and xor and test mov pop iret test dec inc pop into sbb adc push sbb fist sbb arpl xchg add sub ficom div cmp mov push dec and js dec popf testb fldcw xor pop lods sub arpl pop frstor dec mov push pop cmc ret popf mov and add out jp pop jmp imul lock jb mov stos std mov (bad) fdivs rcrb dec jmp and mov out (bad) cmpsb pop loop lcall lret fs lds (bad) xor lods lcall stos mov insb mov xchg jb adc dec mov jmp pop sub (bad) mov pop adc push ljmp sub iret push repnz aad inc mov lret sbb xchg nop les in in mov daa ret mov pusha push jne sbb pop mov jl adc sbb mov jae mov and insl sbb popa popf mov cmp pop test jne int3 inc icebp cmpsl or mov push jns ret xor dec (bad) test (bad) dec push add jo xor sbb les xor sub negl iret push adc ret jg ja das stos pop xchg sbb and add adc jae pop dec cmpsb imull mov jo jae aas mov mov aaa ret int3 jmp sub gs jl scas jecxz (bad) fldt xchg out sarl js cmp call xchg shlb xchg mov in sbb gs rorl ret push dec xchg lret stos push imul repnz and lock sbb mov inc ljmp dec and ss push mov mov stos popa cli std pop push adc sbb test sbb mov jge adc stos push jne lret outsl fsts ffree ret stos test insl xchg mov lds xchg lcall ret ja fiaddl cmpsb xor and jge inc ljmp adc lret push dec xor lahf hlt cmpsl xchg mov inc sbb pop xor inc adc xchg rcl sbb sbb pusha fisttpl icebp pop loope mov lods lret mov dec (bad) sarl xchg ja push daa xchg popf popf cltd (bad) ficompl xchg sub pop arpl add bound mov fildl imul negb push int int3 xchg adc dec cld clc roll rcrb rcr js or xchg xchg popf pop lods stos add aam leave sub repz pusha jbe and js es aas add pop push and icebp (bad) mov pop mov nop xor cmovns or push push inc in imul or mov pop cmp pop cmp xchg addl adcb leave rcrb hlt xchg cmc imul sti icebp cmp sub lods rclb mov jmp cmp push mov data16 (bad) sarl push cmp aaa shlb subl xor aad push stos pop aad add pop add mov loopne push (bad) (bad) fbld cmp push icebp pop dec pop jnp cld xchg sahf push jnp mov pop pop movsb push sub mov test lret mov pop mov mov js call pushf xor les cmp jno mov add shl test (bad) in lahf scas sub mov movsb test outsb test xchg sub cmc imull insl fwait andb mov not and les add mov addr16 or cmp fwait dec popf popa movsl shr movsl sub pop pop mov enter fcomp pop lods and mov pop push lods adc sbb xor (bad) add adc cmp sub mov (bad) or xchg clc (bad) rorl mov (bad) xchg jbe popf adc and loop xchg push mov enter lods lods ret xor (bad) sbb fiaddl inc fdivl fstpl cmc xchg imul (bad) stos je out fnstsw mov adc (bad) mov push pop je insl aad cmp stc push adc sbb mov mov xchg loope xor ds jne xchg xchg addr16 test mov popa test jle sbb adc cmp repnz jbe int3 sub mov cld mov daa outsl std cwtl mulb test ja jmp hlt xor insb loop xchg out mov js aam call insl push fidivrl or hlt mov xor adc (bad) testb stos (bad) bnd push xchg (bad) cmp arpl std stos and dec cld repnz sahf in lret sub sahf jp add cwtl fmuls mov lods outsb lea das les add cmp pop stc es out pop xor push (bad) call or jg leave push pop add pop lds jmp add mov pop sub pop mov mov (bad) jno sub push push dec lcall xor jmp adc push cmp jg xchg test gs outsb xchg pop rorb adc cmp test imul lret sbb ja stos shlb enter int3 les mov icebp add aam xor fist jo cmp xchg mov jge icebp or jb in outsl or sbb cs es xlat mov dec cltd add loop inc dec mov les push adc add ret insl fidiv in adc (bad) cmp fbld mov out sub mov jne cmp mov je fisubr pop loope imul jl push pop push in mov inc lea imul ss jecxz arpl mov or dec cltd fisttpl push mov cmpsb stos sub enter in inc stc incb mov and or sti jp dec pop out or xchg push mov mov arpl mov call cltd cmpsl inc imul add xor xchg es test aaa adc repnz or imul mov pop ljmp push jle rcll insl pop cmc mov and iret cmc push dec sarl jbe pop daa outsb mov or push stc pop push test stos (bad) loope ficomp pop rorl sub (bad) sbb int fldcw iret or xchg and int3 dec lods in cmp jecxz sbb lods mov push sbb push in js xchg inc in sbb jg cmp or insl cmp fcmovnu call dec (bad) mov lea enter cmp mov outsl enter outsl sahf rcll jno lahf inc push mov pop inc jmp push add fnstsw xchg dec and add pusha add mov sbb pop inc cmp fstpl and cmp inc pop jg addr16 jmp fbstp jl cmp or sahf rcll inc sbb cwtl out cmp push sbb sbb adc rorb fmulp fs lods pop xchg aam pushf xor push lret arpl jmp push mov and imul mov sahf add jae sub or xchg push mov stos test xlat mov int3 mov jnp leave cltd mov outsl jmp inc sbb in or push mov jo mov or sub inc scas pop cmp sbb aaa call xchg jecxz lds pop std fist fsubr push leave pop xchg ret adc jo dec add adc push (bad) mov mov inc int3 dec add lods and sbb mov cmp lods cmp fimull call lods pop test xchg call rorb enter ljmp sub push mov out or sub cmp bound std stos cmpsl fst xor jo jle push ret pop imul mov xchg mov fwait dec cmpsl mov cmc (bad) out mov daa in or xchg and pushf mov jnp outsl (bad) jo pop jle xchg adc push pop sbb lock shll jp leave int3 xchg test mov push cmp in cli shl mov fisubrl pop jne sub sarb pop xchg out dec push dec cli jns lods cmp (bad) jae or pop jae inc stos outsb enter or mov f2xm1 mov mov sbb mov dec cmp cmpsb mov hlt cs negl add dec fistl outsl out lret and loopne jecxz pop lds out pop lcall xchg aaa mov inc insl sbb out aad mov dec aaa mov jbe add push mov andl cmp xor mov sbb shl hlt pop sahf scas push or sbb shlb (bad) mov sti es bound sbbl and or jbe xchg sub fadd sti sub out jne test pop mov imul and pop mov out imull inc inc pop jo pushf push fs mov xor pop int3 out adcb or in xor sub jo data16 mov push pop cs iret and and inc (bad) cmpsb and loop mov mov xchg xchg dec out nop jo sahf pop push inc in outsl rcrb push inc sub insl xor xor xor jo aas addr16 in stos test pop or pop jp pop fs aaa (bad) js pop xlat sub push mov cmp test call mov insl dec push test daa push cmp hlt nop inc cmp cmc mov xor mov xor and sti std test shl or repz lea ret sub or mov stc push push mov cwtl aad lds cmp int3 int3 push mov fbld mov insb ficoml jns mov leave xchg inc jmp inc jns mov out and cmp adc jl lahf and outsl sub xchg ret mov cli sub adc fldenv sub test ret movb incl mov mov daa sub and cwtl and jge dec nop andl les inc push daa addr16 rcrl mov ja scas add (bad) out decb (bad) stos dec xchg negl or adc insl ret mov push jno mov mov pop mov xor (bad) (bad) aas sub adc or mov jp or mov int lahf dec cwtl add mov jne adc aas (bad) pop pop out test pushf (bad) dec push inc popa add std (bad) mov dec aaa sbb xchg hlt mov shrb xor bound cld and mov or loop pop mov mov push jb aad fwait jmp clc scas pop lock inc and fcmovb add arpl jb push idivl es stos mov ret fnstcw dec or or mov sahf sub xor cmpsl fnstcw push xor mov jge push jp test xchg fs insl inc and dec xchg mov call aad pop adc popf xor ss aad mov xchg inc dec mov rcl leave mov inc mov imul movsl or clc inc loopne mov push mov out cmp nop push les pushf cmp movl and cli sahf adc daa lret xlat (bad) mov clc push aad xor aaa incl rol pop push lret lock mov out pushf das mov mov pop xlat clc (bad) mov mov jecxz ret cmp bnd push daa inc and fisttp add iret xchg jae xchg cmp push xchg pusha mov fidiv mov mov mov sbb rcrl jle or xlat insl xlat xor mov dec and addl mov mov lret xchg int3 mov sarb movsb (bad) (bad) sbb clc push pusha out ret mov in cmp cmp fisttpll jmp sub popa in aam sbb das (bad) cs shrl fisttpl pop sub shr jp cmpb or and and lods movsb pop cmp sti fiaddl push lret es mov pop (bad) push xor icebp mov push fwait ljmp in sbb iret sbb xchg (bad) mov add mov and test xchg sarl je outsb (bad) call imul ja adc adc mov mov (bad) sbb push mov mov (bad) adc loop fdivrs jmp int cs or cmpsl (bad) dec es inc mov lea jae xor sbb xabort aas cli lahf ret dec mov push (bad) fdivrs mov ja shrb arpl sub ljmp stos and dec mov dec (bad) xor lods xchg mov leave aas mov stos imul xchg mov jb xchg ja sbb ljmp pusha pusha xchg cmp pop test in add cmpsb mov sub push (bad) enter fmulp mov sbb sub outsb int mov adc add loope rcr fnstsw sar inc gs psubusw mov std pop cmp ljmp sub in lods pusha jnp cltd (bad) call pop popw imul fdivs jp in pop fsts jle sbb xor lock mov push stc loope in movsb lods data16 add pop or and mov (bad) in cmc ret dec popa das xchg lret pop mov sub sbb sub adc movl mov mov push adc cmpsl xchg adc pop pop cmp and out aas xor aam pop mov (bad) (bad) imull stos cs daa mov add xchg fs jecxz cld cmc mov or pop sahf and dec add pop aam push xchg fwait sub outsl inc or push lahf clc adc mov mov mov fidivrl ficoml push loop and ret cmp sarl clc ret push aad rolb mov cmc mov ja jmp fs sub push push push aaa pop lock xchg mov mov jle movsb jp inc xor sti xor mov pop movsb xor adc xchg jmp outsb mov jb jne in mov aad jno mov xor ds es push add hlt ds inc in mov das sahf arpl lahf pop stos je mov (bad) or imul outsl bound test pop mov fwait scas push and jecxz imull dec les adc ljmp xchg pop lret jecxz or dec dec sub lcall iret xor iret pop lret mov push rcrb test or push adc xchg jmp mov push adc pop jne shlb jnp cltd mov fcoms dec sti dec hlt mov add xchg mov (bad) and dec ljmp mov sub jns pop mov inc xlat jmp out nop gs cli mov sub and mov jge nop imul sub mov aaa or sahf xchg push sbb stc mov es jle es sbb scas adc ficom (bad) adc xor (bad) ss xchg push in je push mov bound or jnp sahf mov mov mov (bad) xor cs mov add dec repnz push push xlat or lahf fcmove lods pop xchg cld adc push jae cltd lea mov xor sub int ja outsb sbbb stos pop mov cmp (bad) leave shrl push pop jae lods xchg pop ja sbb outsb (bad) mov aas and xor popf cmp sub lahf cmpsb outsl mov iret inc (bad) mov popf fwait jno sub cli in fst scas mov test sbb sbb sbb les inc (bad) sub adc mov inc popf jl (bad) ds psubb pop loop jmp into dec pop ljmp cmpl xchg adc arpl decl clc xchg cmc in inc xchg es fdivl cmpsb adc pushf int js cmp mov xchg or jle aad mov hlt cmpsl out movsl decb div into xlat add mov jne lahf jno dec ds inc enter adc mov nop inc add aaa or into mov sub pop insl xchg push sbb (bad) pop cs orb pusha jmp push xchg je or adc or pop push cmp call sbb sahf cmp (bad) jno repz stos pop adc ds mov pop ja sbb pop mov (bad) push icebp pusha cmp mov sub push cmp push dec enter dec inc fbld mov lods sub xlat and mov xor pushf icebp or outsb add stos mov dec in lcall pop cmpsl test int3 dec (bad) stos xchg lret mov shll (bad) xlat mov aaa cli mov push mov adc subb push popf mov pop scas inc mov mov mov test ja sub cltd fwait mov adc imul stc testb xchg mov lds in pop (bad) push adc popf mov fimul lret sbb dec pop cmp rclb inc xor aam outsl pushf std and int3 loop addr16 lahf mov mov xchg push loopne xchg mov stc pop inc jnp xor (bad) jno movsl sbb pusha jno lret adc fwait out icebp addb pop leave outsb sahf pusha mov leave fadd push sub pop lea push add test mov jmp fistp dec imul std mov jecxz les and jmp (bad) dec inc mov mov mov mov push mul xor (bad) mov sub mov mov stos leave loopne pop mov xor dec repnz movsl push movsl in out sub cmc rclb popa std mov adc add sbb mov add and cmpsb mov enter mov jb mov icebp mov and mov xor mov push js xchg test mov loope adc sbb adc mov jno repz xor jnp (bad) imul pop insb sbb test ret aaa loope iret pop mov jl pop adc pop add icebp sti mov shrl mov fidiv ret mov pop cmpsb mov out or fidiv rclb arpl or push das cmp cmp xchg push mov dec add (bad) mov dec cwtl xchg test movsb ret xchg adcb adc jle cmpsb cld (bad) insb sbb loopne add icebp fidiv call rorl in (bad) (bad) in lds in in stos jmp pop or aaa scas test and aad sbbb sbb cmpsl ljmp add int3 in rcrl lret sub mov arpl sbb mov add dec inc mov pop jl mov bound inc sub add fneni(8087 rcr mov adc cmpsl les pusha fildl sbb sub cli arpl insl insb fdivs or add cmp loopne jle movsb movsb dec pop mov mov insb mov fldl aam dec nop dec inc dec ds mov es sub xchg repz xchg fcmovu dec das shrb dec (bad) cld call mov mov int3 xor pop cltd add xor inc (bad) mov and sbb pop cmp inc (bad) loope jecxz,pt fnop add cmp pop imul adc push mov fldt sbb mov mov xchg mov ljmp jl (bad) cld sarl push pop mov (bad) jo imul cmp push jno mov cmp aas (bad) push cmpl dec in data16 fcompl xor pop neg mov dec dec mov cmp lahf jo,pn adc aam mov fsubr and inc es loopne and cwtl xchg bound xlat xchg jge cmp sbb jb mov push (bad) fldl popf loopne imul and mov xor lods xchg iret scas mov pop and and mov or fs repnz add insl outsb jg cmc daa xor mov js test aaa enter adc insl test jae rcrb jmp dec mov pushf imul cld pushf ret or xchg xor and mov movsb cld daa adc lret xor cmpsl (bad) neg fist mov pop and xor fs cmc mov sbb cmpsl cmpsb mov xor mov xchg (bad) mov mov mov dec insl mov push ljmp sbb cmpsl insl jmp fptan sub repz inc or sbb es test out icebp sub and jmp mov and leave mov adc mov mov jne test lds roll push push fbld xchg sbb push adc mov xor es adc xchg mov decl and pop xchg int3 push push jne xor mov ss mov loop adc pop xchg ret movsl stos data16 outsb faddp inc add xchg mov ja pop outsl ffreep sbb xchg lods adc pop inc adc cmpsl (bad) sti jb in mov mov dec movsl mov add mov aaa (bad) decb mov dec pop push repnz jle push out int push dec lock into (bad) aam cmp xchg push loope mov repnz mov stos arpl loope imul adc bound cld sahf fucomi out iret scas xchg jp xchg mov scas ds in sbb scas xchg cmp leave mov push js mov fistp sbb dec pop inc mov bound (bad) movsl lcall or out cmp les mov shrb test loope gs rclb lret bound (bad) or push cli cwtl mov jne sub pop in jae mov sub mov (bad) pop push loopne test fimull jmp xchg fstpt in add popf lea imul data16 mov mov fdivl mov pusha mov repz xor jne mov popa negb sub mov cmpsl je push jo enter add xchg lods jnp push orb pop (bad) mov leave aad sub test mov stc ljmp fs xchg repnz mov add sub sub ljmp fsubrl add add mov sub push push mov lea push mov call mov mov movl mov cmp je push mov push mov call mov mov call mov push push test je call push call add jmp call mov call mov add cmp jne pop lea call mov pop pop mov mov pop ret int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 push push call push mov call pop ret int3 int3 int3 int3 int3 int3 push call pop ret cmp loop popf pandn cmp push (bad) inc js push add js loopne jae rorl push call pop ret daa and mov push inc (bad) jmp mov inc sahf jo outsb stc sbb fdivrp pop mov inc shlb inc mov (bad) out adc xor push lods adc aaa ja add push call pop ret push call pop mov ret call mov ret push call ret push call movl call pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret inc add aam pop add mov (bad) leave adc pop sub push jl aad xchg repz cwtl outsl in mov inc fdivr shrb fsubl mov fstpt push pop xchg scas push or ret orb call outsl and sub add leave jne xor ret or xor divl cmp jb imul cmpb je cmp jb lea cmp jbe push call add lea and mov mov ret push call add ret int3 int3 int3 int3 int3 int3 or mov xor divl cmp ja imul cmp jb mov test jne mov cmp jae sub cmp jb cmp jbe jmp mov push call add ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub mov push push push mov mov push mov pushl push pushl call push pushl mov mov push push call mov mov push mov pushl push push call mov xor add adc add mov adc add adc xor push pushl push pushl call mov add mov adc add mov adc add mov adc add add pop mov pop mov pop mov pop ret int3 int3 int3 int3 int3 push mov push cmp jae mov mov mul mov shr imul sub cmp jb mov mov inc cmp jb mov mov inc cmp jb mov mov inc mov pop mov lea pop ret push cmp jae mov mov mul push mov shr imul sub mov mul mov mov mul shr shr imul imul sub mov sub cmp jb mov mov inc cmp jb mov mov inc pop cmp jb mov mov inc movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret mov mov mul shr imul add cmp jb movzbl mov inc movzbl mov jmp add mov mov mul mov shr imul sub mov mul mov shr imul sub mov mul shr imul sub movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 cmp loop mov mov jnp rclb iret xchg not mov enter jo pop push adc fucomip out jmp pop insb cli ss (bad) xor xchg clc jmp jo pop ja fs push enterw dec std lret pushf faddl nop iret mov sub lcall push fildl cmp xchg dec fsubrl (bad) adc out insb pusha in iret push push sti lods mov cmpsl inc push and leave mov lea mov aaa int rcl sarb stos rcr sti cmc xor pop mov movsl push js aas mov xor je push pop or (bad) jo mov leave in inc lods xchg cld jnp jge lods mov adc sbb test dec imul popa hlt out push bound inc pop add sub fdivrl fsts rolb mov test jl jne inc xor mov scas sub fwait and das ret jno test mov and inc push (bad) mov inc mov jbe push shr jne arpl jmp jl and ret pop ljmp inc fsubl sbbl jl leave mov ss call cmp cs inc pop and leave xchg test inc jno daa scas push (bad) imulb pop test in cltd jle sub mov in pop xchg jbe and fucom fidivrl (bad) or mov dec leave dec ljmp mov mov popf sbb jbe adc in jecxz mov jg aam sti stc pop lcall je (bad) imul lock (bad) jae xor lahf push lcall rorb addr16 leave mov xor lcall cmp add or pop js repnz sbb clc pop adc xchg in stos ficomp mov inc out lahf mov cmp pop repz jg and mov daa and fsub (bad) pop xchg outsb int3 mov jns xor jle pop and cltd call inc cli mov lret imull jae hlt movsl pop lahf rolb jmp add mov sbb subb fildl shr arpl mov adc call xorb sub add cltd lods mov pop xchg xchg or out push adc xchg and push (bad) lds or hlt and xchg push sub inc mov add call aad scas repnz cmp cmp adc out mov sub mov cmc inc es mov dec xchg sahf lahf sub cmp pop inc xchg jp cmp pop (bad) add int3 insb sarb in mov and fidivl test lahf fwait int inc fstps jb insb jmp jp pop inc and imul xchg daa mov jmp lods and icebp mov lods jno cmpsl fdivl mov ret ffreep cld aam xchg insb inc mov in add fsubrs mov pop int3 pop mov jecxz xchg ja adc movsl sti cmp fsubrs adc scas jmp fimul aam ds cltd fldt xchg shlb jo and cmpsl xorb rcll mov sbb adc add ficoml cwtl loop dec in fildll push clc outsl inc js ds lret int3 xor lret lods xsaves xchg es dec sbb cwtl fs push sub rcll and outsb push je bound aad clc leave addl loop (bad) fldt or (bad) fisub push in sub fucomip mov incb sub inc push and fcmovb sub cmp dec xor xor mov xor dec sbb xchg inc push xor add imul push xor ja lods jle pop jns inc sarl jle jg (bad) out and sub and xchg (bad) mov js pusha (bad) xor xor pop (bad) jg mov or jle sbb fnsave subb sbb and xchg scas inc xchg int3 jbe xchg push nop or mov pop mov jb test pop and xor xchg mov jge sub (bad) mov lods mov push or cmpsl hlt mov sarl sti pop out int dec push mov mov mov mov pop cmp int3 mov sbb pop cmp aam push pushl inc mov and adc loopne sub xchg add imul data16 (bad) mov (bad) loopne mov mov outsb ror push fsubrs xchg repz in mov push imulb dec mov sub mov mov add push test adc xlat movsb jg sarl xchg cmc fldcw mov in jne in imul loope mov mov dec cmpsl add gs xchg in push push js out enter (bad) test aaa xchg xchg loope testb pop (bad) insl xor pushf jb push adc push sub mov (bad) repz jbe fidiv mov xor dec jge xor loop mov inc lods push sarl xchg mov mov sub sbb or fsubrs mov and sub mov xor push push xor mov neg mov mov bts cmp push mov cmovae xor cmp mov cmovae mov mov mov mov mov sub mov mov sbb mov mov mov call mov mov mov add mov mov adc and mov and mov mov mov mov cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp sbb add mov mov mov mov movl mov dec xor cmp ja jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mov mul sub shr add mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov xor mov test jne cmpl je mov add mov mov incl mov mov mov movd movd psllq movq paddq movq cmp jb ja cmp jbe test jne mov mov mov mov shld shl add mov mov adc mov mov shld shld shl add mov add mov adc shld mov add mov mov call mov test jne cmpl je mov add mov mov incl mov dec and and mov cmp ja jb cmp jae mov add mov neg cmp jge lea mov sub mov jmp xor pushl pushl push push call mov push push pushl pushl push push pushl jmp mov pushl pushl add xor mov call push push pushl pushl pushl pushl pushl pushl call add pop pop pop mov pop ret nop movsb mov movsl adc mov movsl adc mov movsl adc lahf movsl adc lahf movsl adc lahf movsl adc mov and sub movsd push movsd mov mov mov and shr push and je add lea adc jmp mov mov mov mov shld mov add mov mov add mov lea adc mov mov xor movaps and or movaps mov mov mov mov jne mov shld xor dec mov add and or je mov mov mov jmp mov shld sub shl mov mov mov mov test jne cmp jne mov add movl mov lea movl jmp mov mov add mov mov adc mov lea mov movups movaps movq psrldq movd mov sub movd mov psllq sub movaps movq movaps movaps movd cvtdq2pd movaps mulsd addsd cvttsd2si movd cvtdq2pd subsd comisd jbe inc movaps mov sar movaps lea sub mov mov mov mov mov mov movswl mov test jl jg test jb mov mov mov shld dec add mov test jg jl test jae mov mov lea push lea push lea call lea push lea push lea call lea push lea push lea call mov pushl mov add mov pushl mov adc pushl add mov adc sub mov sbb push push lea push lea push call add pop pop mov pop ret int3 int3 int3 push mov push mov test jns movb inc neg cmp jl mov imul sar mov shr add lea mov imul sub movzbl mov movzbl mov lea pop pop ret cmp jl movzbl mov movzbl mov lea pop pop ret add lea mov pop pop ret int3 int3 int3 int3 int3 push mov push mov push push lea test js cmp jg cmp jge mov mov mov add shr mov rep mov and rep mov pop movw add add pop pop pop ret lea mov cmp ja mov mov sub push lea push lea push call mov lea add movb lea test jns lea inc cmp jle nopl cmpb lea jne dec cmp jg pop pop pop lea pop ret pop pop pop lea pop ret lea add pop pop pop pop ret lea cmp ja mov mov sub push push lea push mov call add movw cmp jle lea mov mov lea shr rep mov and rep mov mov sub cmp jle lea cmp jle cmpb lea jne dec cmp jg pop pop lea pop pop ret mov pop pop pop add pop ret mov neg cmp jge mov pop pop pop movw movb add pop ret cmp jne mov movb add push push call add pop pop pop pop ret mov lea push lea lea push push call lea movb add movb push pushl call add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov mov mov push cmp jae mov mov sub cmp setb pop pop mov pop ret mov mov mov mov sub cmp jb xor pop pop mov pop ret lea lea mov and and mov cmp jbe mov pop pop mov pop ret cmp je nopl mov mov cmp jl cmp je cmp je mov inc mov lea mov mov mov mov cmp jne mov movups movups movups cmp je movups mov movaps movaps pcmpeqb pcmpeqb por movaps mov pmaxub pcmpeqb por pmovmskb movzwl test jne lea add mov mov movups cmp jne jmp bsf mov add mov mov test je mov mov sub nopl mov lea mov sub jne mov add mov pop pop mov sub cmp setb mov pop ret int3 int3 int3 int3 int3 int3 cmp loop xchg pop mov jb or ds jo mov push loop jb cmp (bad) jle movsl outsl cmpsl cmc (bad) daa out mov arpl aas das les inc add dec (bad) sub sbbb inc adc inc push int rol and cmp add inc into lods cmp in push mov popf sub icebp mov xor ret push push call sub call push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub cmpl push mov push mov jne xor movl movl movb lea mov inc test jne sub mov push push call mov mov mov pop pop mov pop ret push push push lea call xorps movl mov movups push mov call mov lea push push call push call call test jne sub mov movl movl pushl push call add lea push call sub mov movl movl pushl push call add lea push call xorps movl movups movl lea movl mov movups movl movl movb lea movb push lea call mov lea cmp jbe push lea call mov mov inc mov movb mov mov decl movl movl movb lea mov inc test jne sub push push mov call pushl call push pushl call pushl call push pushl call add lea call mov mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov push push mov test je cmpl je mov cmp je mov push call add mov test jne mov test je cmp jne movl push pushl call push push call add pushl call push pushl call add pop pop pop ret int3 int3 int3 int3 int3 int3 cmp loop xchg pop repnz sub hlt jb or ds jo mov pop cmpsl jne lock jae and xchg aad lods mov pop repnz dec inc mov cli sub fidivl pop add mov int lretw xlat daa sbb pop fisttpll in (bad) (bad) popa push loope pop xchg xchg jle push sbb pop mov sbb (bad) jmp mov mov les lods mov xor mov ja mov (bad) pop ljmp xchg mov test mov mov or sahf hlt lods negb inc (bad) xor add aad sbb icebp mov cmp jb mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movb pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push mov push lea movl movl movb xchg mov inc test jne sub mov push push call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl je push xchg mov cmp je mov push call add mov test jne mov pop test je cmp jne movl push pushl call push push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmp jb test jne mov push movl call jmp lea shr add shl mov shl push push pushl mov call mov mov mov mov shl movups movups xor mov mov mov shl movups movups xor mov mov incl pop ret int3 int3 cmp loop mov adc test mov or inc fiadd push cltd fwait divb mov mov mov adc add add inc adc add add add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push mov push mov mov cmp ja mov cmp jb mov push pushl mov push call add movb mov pop pop pop pop ret cmp ja mov mov or cmp ja mov mov shr sub cmp ja lea mov cmp cmovb lea mov push call push pushl mov mov push mov mov call add movb cmp jb mov lea cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov mov pop pop pop ret call call int3 int3 int3 int3 int3 int3 mov test jne xor mov ret xor jne cmp jb lea cmp jbe push call add lea and mov mov ret push call add mov ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov test jne pushl call pop pop ret mov test jne pop pop ret push mov lea add and and cmp jb pop mov pop pop ret mov push mov lea sub add cmp jne lea cmp ja pop pop mov mov pop pop ret push mov call mov test je test je push push push call add pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp push test fucomi data16 fldt repz scas mov dec int3 push roll sbb cltd call inc leave cmpsb mov xor add pop popf pusha xchg and pop add mov push adc xchg xor and inc daa jne or mov imul push popa xor push shrl ret mov imul push ret sub insb pop arpl jp push mov sub and add push mov mov mov push push mov push mov push sub mov push sub mov mov lea mov mov mov call mov xorps movl movups mov shr not movl and or mov pushl lea movb push mov mov push call mov mov pop mov pop mov pop ret int3 push mov and sub push push mov movzwl mov and cmp ja jmp mov mov push call mov mov add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov mov movb pop pop mov pop ret mov push call pop pop mov pop ret mov push call pop pop mov pop ret mov mov push call mov lea add cmp jbe push mov call lea mov lea mov movl movb mov mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je lea mov mov and je movsbl mov sub mov jmp mov mov lea test jne mov mov push mov call pushl mov pushl call test je pushl lea call test je mov add shl add lea cmp mov jne mov addl mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret xor pop pop mov pop ret mov push call mov mov lea add mov cmp jbe push mov call mov mov lea mov movl movb mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je push mov call test je mov add mov shl add cmp jne mov addl mov mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret test je movsbl mov sub mov jmp mov mov mov mov push call pushl mov push call pop pop mov pop ret mov shr push test je movsd mov mov movsd call movsd movsd mov and xor jne cmp je mov mov add cmp jbe push mov call movsd mov movsd mov mov lea mov mov mov mov mov mov and or jne and xor or je movb lea mov movw movb add sub mov sub add mov pop pop mov pop ret xorps comisd jbe xorps lea movb lea push lea push push sub movsd call add pushl pushl pushl push call mov add mov sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov call mov mov add cmp jbe push mov call mov mov lea mov mov test jns not movb lea inc push push call mov add sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl lea mov call mov sub sub add mov add mov pop pop mov pop ret shr test je mov mov mov call mov mov mov mov add cmp jbe push call mov mov mov lea mov mov test jg jl test jae not movb add lea not adc push push push call mov add sub sub mov add mov pop pop mov pop ret mov mov mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl pushl lea mov call mov add sub sub mov pop pop add mov mov pop ret xchg cltd xor in sbb and test aas mov push mov push movzbl mov inc push call mov mov test je add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb jmp add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov pop pop mov lea mov mov movb ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl mov movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 mov mov or cmp ja push mov mov shr sub cmp jbe mov pop ret add cmp pop cmovb mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub je push push mov mov test je cmpb push mov mov je inc cmp jbe push mov call mov lea mov pop movb incl pop pop ret and neg sbb inc and add cmp jbe push mov call mov lea mov mov pop incl pop pop ret movb ret int3 int3 int3 int3 int3 push mov and sub push mov push mov push lea lea mov mov add cmp jbe push call mov push mov lea mov mov mov mov lea movb mov push call test je nopl mov mov mov inc mov movzbl mov lea cmpb mov je movb mov mov mov lea mov mov cmpb jne mov mov lea mov movb mov mov lea mov mov movb mov shr and mov mov lea mov mov mov mov mov lea mov mov pushl lea mov push call test jne mov pop pop pop mov lea mov mov movb mov pop ret int3 int3 int3 int3 int3 mov mov add cmp jbe mov jmp ret int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov sub mov add cmp cmovae test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov mov shl sub add cmp cmovae sub test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 cmp loop mov mov sarb loop mov lret popa xor pop ret mov ret mov rcll xchg sahf mov sbb inc aas mov aad mov jno sbb scas push or mov enter xchg adcb mov xchg (bad) mov int scas cmpsb push add out ss and arpl imul stos dec rcll mov ror mov dec cli xor dec push insl mov mov arpl adcl mov out pop and in xor pop leave inc imul xor jecxz leave push sub cmp outsb adcb sti jbe mov es jp inc ds loop mov stos les repnz adc sti mov jecxz (bad) aad mov mov mov repnz andl scas push cli cmc push cmp into pop leave mov sub sub jle mov push add or or push cmp rorl xchg dec and xchg fsubrs out inc xor lahf push push cmp call es mov mov outsl mov push inc (bad) xor jle sti sahf test out repz jo int div sbb push mov dec or dec lds cli or push jg loopne adc repnz mov fimull test cmp sbb (bad) ljmp xchg addl adc add push (bad) (bad) mov mov xor fildl jecxz mov or sbb shl cwtl dec pop xchg mov in sbb push addl sbb ds or add pop jbe mov ljmp lahf xlat out orl roll cmc pop mov fsubs sbb mov ja sub xchg cmpsl or lcall clc push iret adc jp call dec or pop test fs inc call or cmp or aad mov repnz mov and call xchg and imul enter pshufw (bad) cld fsts xchg loop fldl pop mov mov fdivp loope push mov jae add mov in jnp pop ja ja sub adc or ja dec xor and inc mov rcl stos fsubrp test call dec cmp jmp aam (bad) xchg int3 cmp loopne das insb mov nop repz dec xchg jge mov dec mov inc (bad) jno fsubs in and mov int3 sbb xchg xor cld inc xchg fldcw ss push mov adc mov inc jmp (bad) subl (bad) fmuls in testl sbb mov (bad) cld pop cs mov test aam dec and xor imul scas cltd pop cmp or repnz (bad) mov pop mov or or pop xchg sub jb fst imul (bad) (bad) (bad) mov xchg fcoms mov adc jp dec xchg adc (bad) adc pop xchg lods fisubrl jbe std xor int sbb test divb aaa dec jmp inc lret sbb cmp stc pop mov lret xlat cmp aaa pushf add push xchg add or nop stc xor and outsb sarb sbb jge pop sbb xchg loop push adc loopne jg ds fidivl and mov mov mov xchg push adc mov fmull push and mov test or test js int3 cld loopne mov ret push loope jno into and loop arpl aas xor pop leave pushf push adc add movsb mov push leave sbb add pop enter inc into adc pop dec pop stos fcompl js push enter add push loopne addr16 jne pop into lahf or in mov lods rcrb dec movsb cmp cmc out (bad) xor sbb iret dec adc xor (bad) arpl xchg inc das (bad) repz jg insb sub icebp pop ja stos leave cmc xchg leave xorl xor cmpsl push fs dec xchg call push sahf pop jl fstpt xchg icebp jle cmp pop mov mov jns adc inc pop repnz or (bad) add add pop (bad) push jno jle ljmp (bad) jb push int3 or ret mov outsl popf (bad) gs cmpsb aam out aam or mov lods sub adc ret add (bad) stc pop es cmpsb cmp rorw mov adc cmp shlb ficom cmp adc pop xchg and xchg or loopne out lahf hlt add mov jecxz dec lock cmp xor cli push lock mov cmpsb push cmp stos add jae js sbb mov int3 fstpt cmpsl pop popa scas push adc pop vmovsldup sub fiaddl mov mov jge or sbb and push aaa and hlt lret insl fdivrl fsubrl mov shrl jge out fidiv jbe jne aam roll cmpsl loop and dec sti mov jno (bad) aaa jge xlat add add insl lock out pop mov jns mov push dec (bad) jno push xchg cmc bound sub flds xlat dec test loope movsl arpl add pop add mov pop sbbl mov jns out shlb push jno shlb out rolb imul rorl loope inc dec inc nop push xchg cmp adc (bad) push inc lock cmp cmp mov xchg notb ljmp ret inc rcl mov movsl outsl test xchg mov insl ret lds loope rorl inc mov cs (bad) inc fs or iret xor jo xor mov pop test lcall cmc dec imul test jle fidivr call inc sbb add clc or xor dec jb mov cld mov out pop test and (bad) push adc dec (bad) in movsl mov mov pop scas mov sub cmp xor mov (bad) notb xor dec stos and push jmp mov adc loopne dec outsb pop pop jmp repz in js arpl jne mov in push and arpl rcl ja (bad) mov mov cld lock js in mov xor push fwait (bad) sarl dec sbb fdivr or aas fcmove test out jp adc or sbb outsl aas xorl inc sbb les dec mov (bad) lods fcmovnbe cld and pop pop dec aad loop lret aam mov jmp popa sbb xor rclb pop pop mov and cs add scas in mov sbb outsl rorl xchg lret and test xchg mov xor jl xor adc repnz push xchg mov test movq jge mov inc push mov xchg insl xor cmp cmpsl dec jnp fimull (bad) xlat or mov dec out scas dec fs dec mov xchg es pop jecxz,pt mov lea insl jle mov and adc mov aaa lds in sbb jo xbegin inc nop jo cmpsl aas (bad) scas outsl arpl lea pop or out insb out dec lea inc cmp jb lock fldenv sahf mov jmp dec xor xor lock nop xchg cmp mov push jl,pt int clc or das sti sub arpl xor push mov xchg pop xor js cmp adc inc notl pop pop ja in out inc rcr pop push in lret lods (bad) mov movsb sbb jne cmpsl and mov or lds pop inc dec inc push loopne add dec neg aad mov orl pop (bad) test lret (bad) fbld xor or mov cltd adc or sub push or or frstor popa ja mov std push imul and das test clc jne jl xor xor jo xchg mov sbb jg (bad) popa cmp xchg inc jp inc in notb pop aas lock xchg sub clc fadd mov xchg test (bad) cmpsb mov mov adc push and sub xchg (bad) add rcll push fisttp cld push sbb cltd cmp stc push rorl imul int cmp rol lea push rcll mov arpl push out sub popf dec repz push push jo jp fs xchg mov nop ss add jns cmp adc std cmp sti dec arpl and clc cltd cmp add xor je or pop cmp test sti xchg es or (bad) push mov and sbb leave mov jg call sub arpl insl xchg les and xlat jbe movsb lods mov ljmp rcll mov pop fcomi enter pop add cmp mov or andb sti dec dec sub mov xchg outsb dec es scas mov or adc gs cs inc xchg es fnstenv xchg dec in pop xor dec cwtl or loopne pop imul (bad) or mov xchg pop cmp push mov ds aad cli test cmp sbb pop or inc cmp add or mov pop sbb push cmp fmulp mov xchg inc jge jb sub and ja ffree outsl in rolb int repz (bad) mov stc out push or div sub ds frstor dec pop pop push sbb or clc cmpsl sahf out push call aam iret aam mov push add fwait add or cmp insl mov mov mov in jg lret sub xor stos (bad) faddl (bad) cli nop lods dec dec add subl into ret xlat mov (bad) adc aaa cmp xor push inc data16 mov fstpl js sar movsb jmp insb cltd addl pop gs and cld in (bad) icebp (bad) das pop xchg sbb enter and or fwait out xchg jnp ss (bad) add jbe fstpt test add mov call push inc cs into mov cmp add in push call outsb rorb cs fsubl pop mov xchg dec orps dec add dec aaa jp push pushf cmp icebp adc (bad) notl sbb pop dec cmp lret fwait cpuid mov dec arpl sbb or push and lods arpl xchg sub mov cld pop and sbb in pop xchg or lds gs mov push adc add pushf out les jne iret adcb sbb aaa and push sbb mov dec orb shrb int3 call es fidiv jno push sti adc push cmp and sub cmp mov mov lods cmp push ja or cmpsl and fiadd into scas inc sarl push jmp sub shlb movsl sahf jmp arpl and nop dec push (bad) sbb lods aam (bad) out sahf shl push pop popa or push xchg fnop insb lods jg push stos mov mov lcall imul js jno inc lahf mov xchg (bad) repnz sbb adc push popa arpl ret mov push pushf ss je push enter sahf inc nop push fucom pop stos jl insb ja cmp (bad) lds or jmp fnop pop int3 jne (bad) repnz push cmp aas and (bad) nop or inc jmp nop shrb lsl and (bad) (bad) call inc cmpsl push cli push test jecxz jle xor sbb jne cmp jns inc mov cli push js (bad) in cmpl movsb sbb pop lret sbb cli data16 in xorb pop (bad) outsb repz pop fildll add cmpsl mov mov and jge xor scas xor dec lods (bad) fmuls xor int add xchg mov pop dec mov xchg mov into adc or mov pop aad ror in repz sbb fisttpll xchg jo push movsl popf fs stc dec jo cmp add mov lahf jns and push outsl ret add addr16 (bad) shlb mov adc adc inc jne fsts xchg and cltd nop popa in cltd outsl mov (bad) cltd in pop movsb repnz xor xchg cltd sahf jnp addb jb xor xchg mov stos ljmp stos adc jecxz mov cmp sti repz pushf xlat test push adc inc sbb stos cmpsl dec jmp pop mov xlat add inc inc pop and lahf push mov test inc jecxz ljmp stc dec push daa cmp mov jg shll xchg xlat repnz inc es mov lret cmpsb fst (bad) inc dec push mov push rolb popf xchg jle sti adc jnp mov stos xchg adc (bad) sbb mov dec sbb mov out out mov sub (bad) fbstp mov mov cli aas pop ljmp dec popa push popa cmp ret xor (bad) into and ret jge call gs cmp popa mov (bad) xor cmp sbb push inc aad repnz push or xor jmp ja inc jp mov pop jne lret ds clc fwait inc (bad) cwtl mov jl adc test pop bnd sbb cs inc xchg sub push mov mov in fcomps push enter ret imul cmp sbb mov lret jo or mov sarl inc jp mov pop inc jo outsl ret sbb bound loopne iret mov and subl fldl imul adc xlat mov mov pop push out popf (bad) mov outsb into fadd stos xor flds fcmovnbe mov push sub xchg or mov clc ja sbb aaa mov icebp int3 or out dec cli adc push lcall xchg or adc fwait push rolb pop pop ret xchg je sub mov mov iret mov inc adc cmc clc jae sub scas add cwtl xchg and push (bad) xor xor lds popf (bad) xchg scas das mov sub dec push lods incb cmp out ficomp mov mov ret das repz adc lea (bad) push mov loop pusha xchg or fcoms push roll mov ret cmp ret ljmp shll lods xlat and pop and dec dec std ss cld mov push jecxz cmpsb cmp lods icebp xchg sub xchg aas cmpsb gs mov pop or jb adc sub inc xchg arpl add (bad) addr16 mov inc mov aam xchg and in in mov xlat xchg push nop sahf cs lods fwait push ret mov xor loopne test movl ret adc mov idivb cs xor enter jle scas sub adc out and or insb divl fisttp dec inc adc push gs fistpll in (bad) sub pop loope xchg popf jbe push adc inc jl mov stc shlb (bad) pop jg or lds inc cwtl rcl push adc sub and xor jns loopne xor (bad) notl (bad) test push int stos sbb jnp bnd outsb mov cltd cmpsb mov xor aaa lods por dec shll cmp das mov icebp fldt imul popf sbb mov mov movsl add bound and push arpl fdivr repz out jnp (bad) mov xchg mov push fs mov and imul faddl mov mov dec push leave out push lret mov cwtl inc iret in stos insl and ret fldcw je mov sbbl xchg or jg sahf xor shrl movl movsb push cmp or sub mov xchg les jg ret pop mov inc cs nop ret xor mov pop mov ficomp dec popa lahf mov mov mov mov dec push xchg adc mov adc jbe dec pushf jge mov xlat xchg stos push ljmp or test mov inc (bad) in inc in mov ret mov loopne xchg mov (bad) subl mov push loopne push mov shrb iret mov outsb das and and (bad) stc push sub js add and sub addr16 cmp sarb mov jecxz std dec adc lods push setb aad mov pop or ficomp nop (bad) clc lea imul sbb fadds mov and inc mov push imul fwait lds xchg jmp mov divl out (bad) (bad) dec sbb adc stc xchg jg lods mov push push imul gs div pop rcrb imul pop lock mov mov sbb cld pop les fstpl int mov sbb leave rcll and pop jns stos lahf dec dec sub push jns rcll lret push or fsubs data16 jmp xor add repz pop (bad) mov mov ds mov mov fisttp nop dec pop mov clc or sub aad adc sbb push rorl ljmp aaa mov sbb icebp int add inc dec inc mov in adc scas lret lods cwtl iret icebp pop imull lret frstors lcall cltd std cli jnp aaa cmp rol add adc scas js jnp (bad) das dec cmpsb mov aad xor les mov mov movsb xchg xchg inc inc es jo cmpsb adc sbb gs aas push jg (bad) orl jns aad roll aam add or push and (bad) out das pop cmc call dec add adc into aad cmpl inc popf dec add imul pushf mov push sub and call lds fistp mov repnz mov sahf add push in cs lods cmpl fisubl add out pop pusha sub xor ljmp sbb dec clc cltd mov clc xorl mov out sbb inc and movsl mov mov xor jl lret pop jge sbb hlt incb lret sub dec xor fldl enter fsubrs js jge or lcall and stos push mov jae mov add inc mov pop sbb xor aas mov loope sub cltd and xchg in pushf push rcll loope fucomip push mov inc or sarl outsb rorl imulb adc adc hlt lahf test adc outsb lret imul or sbb lock sub add or test shrb push mov or mov insb jmp inc and dec inc test sbb sub cli pop in in mov jb ss mov lds inc adc sbb orl (bad) hlt sti clc fs or int3 cmp xor out add sbb inc lea jb add test and mov cmpsb mov es jbe cmp add cld sbb sbb int jo ficompl sahf mov loop lods ss in sahf enter rorb mov sbb dec jmp inc cmp outsl jmp rcrl pop sub loope cld adc xchg ret iret xor sbb jb mov aas out add push icebp shlb sbb lds test mov jmp mul jl adc insl inc or mov lock in cmp dec out push cmp jo sbbb jg into negb mov mov sarb call add int3 lock loopne sbb test test cld mov push into leave enter stc aas adc mov iret mov mov jo jl xor iret popa lds div test aaa mov add mov or in mov jge sbb daa cmp lcall xchg fmull sbb mov iret mov sbb xor gs sti add adc and jge fdivs mov shrl aad mov or add movsl sub jecxz repz mull inc cmp in mov fild push pusha (bad) push call ljmp mov mov fmull jo call or mov stos decl or stc sub xchg testl adc cmp fldt push pop inc in xor mov into add es mov imul pop sbb cmpsb inc lret loopne cmp mov insb sub in adc lret and rclb enter out pop iret insl cltd je pop dec int xchg addb or cwtl gs adcl ret cmp aad repz mov jg (bad) pop insb xor dec js dec or cmp xor xchg std mov fisttpll and and into sub xchg xchg aaa mov cmp shrb jno xchg aaa loop pop call lcall or mov iret incb pop xchg je sti icebp adc jo add aaa jmp pmaxub and lcall lahf mov or cmp mov inc rolb frstor pusha fidivr sbb push orps cmp sbb sub pusha or repnz insb mov xchg bnd jb inc loop lahf jle rcrb dec add int3 int3 int3 int3 int3 int3 cmp jmp inc mov jmp lret adc iret (bad) out scas ret orb imul in cld sbb mov dec andl mov popf cmc pop add xchg inc fnstcw (bad) push orl aaa daa sbb int inc mov mov sub push mov xor (bad) mov push mov dec arpl popa push ljmp out mov aas iret push mov fidivl (bad) sti mov out push lock pop shrb test sub clc xchg pop dec ss xlat jg popa mov sahf mov daa inc mov cmp sahf insl push adc inc ljmp mov fcmovnb pop insb or aaa sub push mov lahf fisttpl mov pop (bad) dec mov imul loop out push push mov arpl iret aas inc jge jnp xchg xor jnp pop add pop nop or popf add scas adc outsb mov ja and and pop mov cmpl int or fwait mov aam bound mov mov es xor jmp mov jno int jns es mov outsl push jo jne mov push arpl mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl push pushl push push call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov push pushl call add ret int3 int3 int3 int3 int3 int3 lea mov imul mov enter cmp call (bad) pop mov mov push adc pop sbb fsts out sub or lret sbb pop mov ja inc dec pop or lret cmp inc out mov adc enter and and add mov sbb in add es es test sbb popa adc pusha dec pop push sar inc loope shll ljmp mov rcrb test (bad) adc mov lods testb daa test sbb dec inc mov cmpxchg test icebp push mov mov cmp je mov mov mov addl pop pop ret mov sub sar cmp je sub lea sar mov push mov shr sub cmp jbe mov jmp add cmp cmovb push push mov call mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja add cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov add mov lea add pop pop pop mov pop ret call call int3 int3 int3 int3 int3 int3 int3 push mov push mov push movl movl movl mov sub sar movl movl movl je cmp ja push push call mov mov mov lea mov mov mov mov sub push push push call add lea mov pop pop pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lret xor jge xchg shll insb iret xchg adc (bad) jno push xchg jo cld mov mov in dec nop mov push sub test mov lock arpl or or sbb sub push pop dec and adc jg icebp cmc sub nop in xor fnstenv js adc jnp xor sub xchg adc jnp imul popa stc cmp test repnz or cmc js adc mov inc pop enter jle arpl (bad) mov hlt out jo sub (bad) xchg rcrl (bad) shll popf nop xor (bad) incb xchg jb rcll in imul pushl mov cmp divl or adc test ja insl in into jb and pop (bad) jnp mov xchg imul stos dec mov mov xchg in data16 hlt rol lods lods rcrb jne repz andb addr16 aaa test imul test dec movsb sbb cmp mov sbb test pop mov sbb in imull push lock movsb cmpsb jo xchg and dec lea pop or mov int3 out movsb roll je jecxz fnstsw stc in pop rcll jl jp rcl clc pop test and push (bad) cli shl out or in dec call lods dec dec inc dec insb repz mov mov jle int3 fild ss pop popa in push iret insb out lret pop andl subl shrb jo repz (bad) das or cltd dec jmp jecxz shlb cmp rorb mov mov loope pop cwtl imul pusha cli or jp in xchg das insl inc mov dec enter jl mov jae xchg ret js (bad) mov xor dec push stos mov jno inc sti jns mov je out pop scas insl sbbl arpl scas jbe xor add dec push outsl lea push dec decb push lea cmpsb imul inc shrl out (bad) test push cmp stos jne cmc iret das dec xchg addl fistpl mov mov push sbb mov push or fidiv pusha adc fidiv mov mov ret and jge push inc leave pusha mov pop ljmp fldt inc ja fimull jbe xchg xor outsl ss inc jnp adc inc push cmp bound sbb push int3 jne or pop dec mov pusha mov inc jmp or push cmp dec insl mov cwtl xchg xor hlt or subb cmpsl jbe adc daa xchg sub ja xchg push daa fild outsl arpl mov mov push and ficom inc or fisttpl cmp and mov test mov xchg bound or jmp loop pop sbb xor adc cli fld dec inc test fstps out xor jns and loope pop mov in pop sbbb or pop push push push mov mov mov sub sar cmp jle inc cltd and add sar push movzwl push lea lea mov movzwl lea cmp jae mov mov mov movzwl movzwl cmp jae mov mov mov mov movzwl cmp jae mov mov movzwl mov sub movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov mov mov sub sub movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov movzwl movzwl pop pop cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov pop mov pop pop ret movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov pop pop pop ret int3 int3 sub push push push mov push mov mov sub mov sar mov cltd add sub mov sar shl sub mov sub sar cmp jle inc mov cltd and add sar mov shl sub mov lea push sub push pushl call mov lea sub push push push call mov add mov push add push push call push push push call add jmp push push push call add lea cmp jae mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov cmp jae mov nopl mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov mov mov nopl cmp jae mov lea mov mov cmp jb ja cmp jb cmp jb ja cmp jb cmp je mov add mov mov mov mov mov mov mov mov jmp sub mov cmp jb mov cmp jae nopl mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add lea cmp je mov mov mov mov mov mov mov add cmp jb mov cmp mov jne cmp je cmp je mov mov mov mov mov mov mov mov mov add mov sub mov add mov mov mov mov mov mov jmp add mov cmp jne add cmp je mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov jmp mov add mov mov mov mov mov mov mov mov jmp mov pop pop pop mov mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov mov dec push mov mov push cltd sub mov mov push mov sar mov mov mov push mov cmp jge data16 lea mov lea sub mov cmp ja jb mov cmp jae mov jmp xor test lea mov cmove lea sub lea sub mov mov mov mov mov mov cmp jl mov cmp jne mov test jne shl mov sub lea mov sub mov mov mov mov mov mov cmp jge mov nopl lea cltd sub mov mov sar lea sub mov mov cmp ja jb cmp jae mov lea sub mov mov mov cmp jl mov mov lea sub pop mov mov mov mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 cmp loop mov (bad) (bad) test test push loope dec pop test test loopne rcrl or jae jmp shrb fsubl mov daa dec jbe push int3 (bad) mov push sbb or mov test sub rcrl lcall jnp mov push rcr jae mov jns and mov loop xchg and xchg adc mov jmp incb pop call mov cli jmp enter mov jle movsb rcr xor negb jno lds or shrl adc add es xchg xor xchg loopne and inc not movsl mov pop jnp dec (bad) adc pop cmp cmp xchg movsb push cmpsb je cmp jnp test push mov sahf jmp jo inc jnp xchg outsl or cmp pusha push add jno sub push int3 sub jae mov inc adc lods loop mov mov stos (bad) xor jns sbb mov (bad) js cmp dec mov out popa mov mov jbe xor xchg subb xor xorb lock dec shll (bad) (bad) lahf rcrb cmc inc xchg in adc daa mov inc in xchg jae repz and test xlat sbb add lahf mov shlb or rcll nop dec dec fild inc jne push into ret mull pop in mov (bad) jbe xchg test ljmp dec or adc jmp sbb lods nop fldenv mov ret js jbe orl insl psubb push mov fldlg2 ficompl cs jp jl loop pop (bad) int3 iret lret mov out (bad) or fdivrp sbb push stos mov cmpsb jns pop arpl mov je pop push in cmpsb mov (bad) rdpmc xchg sti (bad) jb pop movsb lock aas ret jb test loop subl xchg loopne outsb mov int3 add ds xchg or jo pop inc movsl jns movsb cmpb push xor xor or lds cld push mov mov inc mov xchg pop nop sbb (bad) xor add or jno subl sti pop xchg mov pop mov xor cmc mov and add imul cmp popa test push std dec cmc jmp ss push sub int sub (bad) mov fsubs add or loopne repz add xor lahf jno jge cmp mov add jae push out fucomip test into fwait mov cs add xor je push roll adc cmpsl lret adc into adc dec aaa das scas cmp lret push ja in cmp imul mov pop push lcall add and data16 mov mov jg push into cmp repz test sbb mov jl out lcall mov adc jno push divl rcll xchg push mov (bad) repz sbbl pusha sbb push or adc pop negl xchg lods fisubl psubsb xor mov cwtl hlt mov dec aaa push or adc popf loop std adc mov test loopne mov add add (bad) or adc in into add popf nop add aas pusha dec mov popf loop mov pop jae das xchg out mov mov jmp lcall jp xchg cli xchg pop cmpsl dec iret int3 aam inc into and jno (bad) cld jnp dec dec insl out std cltd jmp popf jp mov sbb icebp les mov mov sti ret pop es sahf in sbb mov les mov or and repnz cmp ljmp pop dec popa repnz jge jg in xchg sbb out icebp addr16 mov lea addr16 sub roll popf jnp cli and pop push fs mov into (bad) int3 or gs lea sub xchg push mov inc iret mov bound mov popf in mov stos imul or pop push (bad) or mov std daa push sub cmp inc and jge sub pop xchg mov jne xor push in fidivl jg bound inc insl call or push int3 adc mov pop shl adc out (bad) sahf out sub out cmp mov and cld mov mov sbb add mov popf insl out and pushf mov jmp xlat shrl int push dec jmp push fucomip ss iret test adcb push sub mov (bad) repz pushf pop outsb jle jbe inc hlt dec xchg pop pop into popa hlt std pop hlt aaa popf mov mov xchg and xchg (bad) jo adc hlt push in fs outsl add jne pop lret mov xchg add xlat inc adc lahf and cmp cld ret xchg test dec pusha das adc mov push push jnp jno cmpsb test es imul inc ss and leave call out or icebp push sbb add mov dec xchg scas mov or mov into outsb std (bad) (bad) (bad) jge cmp inc jo and xchg cmc cmc pop loopne dec pop ja je mov cmpsl arpl mov dec mov xchg clc sbb stc mov scas fbstp or icebp xor jecxz flds xor movsb xor cmp ficoml mov and mov push stos xlat push jo xor adc xlat jo leave cmp or inc test pop les sub jmp leave movsb adc lahf mov fsub movsb dec add rclb fwait xchg aas daa mov out lock outsl xchg pop adc popf add lret mov movaps mov scas xchg mov mov pop fwait (bad) cmp mov leave pop test in xor xor mov jns lcall or (bad) mulb enter ret add xchg idivb jle sbb mov fwait sub inc jae jnp subl dec test mov imul fidivrl xchg jb repnz cld xchg insl jp inc adc mov dec push popl ljmp or jne shlb outsl or xchg dec xlat add mov cwtl ja imul mov and sub push daa push sub shll repnz mov mov lock aam sbb out in dec jne fwait push xchg dec in mov (bad) mov arpl aaa imul add xchg arpl mov xor xchg jno pop insb push lock lcall jne pushf in push out cwtl and mov inc add mov mov pushf push mov cld lret or (bad) jl lock aas ljmp cli out sub inc dec leave stos push rcrl dec xor adc lret and fisubrl mov push rcrb cmpsb sub in stc cli mov adc push xor cmp movsb mov push mov jno iret jle hlt xchg xchg cmc ja sub xchg mov and lret sbb cmc mov mov (bad) aam cwtl dec imul out cmp inc cwtl imul fisttp scas pop clc (bad) push cmpsl (bad) pushf and in jb std add cmpsl mov push nop je xchg add out jnp sar (bad) (bad) mov dec pop pop add pusha jmp iret and loopew,pt inc mov mov mov add jae ret repz dec aam das es aam mov jmp (bad) nop pop sub dec nop es dec dec sbb xchg push cmp lods jbe imul pop in imul iret popf adc lcall fsubs jecxz xor ret dec popf idiv pushf syscall (bad) or add pop mov leave scas mov test test jge scas sar jb inc cmp ljmp rcrb push add frstor and rorl pusha cwtl fisttp bound sub sbb jl (bad) mov xchg or test xorb roll dec (bad) dec fstpl lods xor ret sub in add add ret or aad lods push jae xchg jp inc fstl int cmpsb in scas xchg call push adc inc push mov (bad) subl xorl gs jno push outsb and int3 mov push mov int or test add call jo out and or cmp push and std add mov xchg xor nop aad inc xchg pop scas daa xchg mov mov mov adc sbb push (bad) dec sbb outsl jg cmpsl mov sti xor test pop mov mov scas mov (bad) xor fnstenv cwtl add (bad) inc fdivrl or (bad) mov popa jl cmp lret std jbe mov push test jle (bad) repz jmp push int pop int3 fisubl dec mov push mov sbb lcall fwait or loop adc std (bad) mov mov aad bnd mov xchg test xor movsb push cmp enter pop xor daa mov test int sub ret push js fwait sub add jo pop stos les adc mov mov mov fnstcw ret clc mov pushf xor jmp data16 and jne push or (bad) loop pop mov jnp mov in neg pop lahf icebp add and cltd jo sarb jp inc mov inc neg pop mov cmc pop inc (bad) (bad) and int3 test ljmp lret mov adc xchg push outsb inc rcll pop loope int3 inc and inc sub es fwait xchg mov pop loopne adc inc dec frstor jecxz sarb cmp fildl nop cmp imul xchg or test push jmp mov mov pop test test inc pop mov mov mov call and sbb mov mov stos mov stc repnz cli out mov sti dec sub inc sti mov shll pop jl test xchg pop or sahf xor inc push inc cwtl cltd or lcall out rolb (bad) lret call adc je movsb sahf (bad) xor fisttpl cmp or notl rep rcl mov xchg in jmp int or ds (bad) lea sub jbe mov pop xor aad into test push int jno (bad) fadds mov fiadd outsl jge mov jne mov stos test ljmp xchg dec mov (bad) xchg push pop cmp mov push mov xor js mov cmp ja test sbb lock sbb mov arpl jge dec pushfw adc jge nop and and lret jbe jecxz mov bound push sbb test push mov sbb les mov jnp or sub jl jne dec sbb dec sub and popa push jb pop sub int ret fisubr xchg mov arpl pop cmp mov cmpsl pop mov jge sti mov in jbe push ss je aas sbb mov jecxz,pt lods insl cltd mov xlat xor es test fiadd pop xchg pop enter test scas stos rclb loop sarl pusha dec subl pop xchg pop arpl adcl test mov mov fiaddl xadd and jns inc fidivl mov dec das arpl test inc test outsb in pop sub int loopne in (bad) mov pop int3 repz int3 cmpl nop xchg ret lsl addr16 jmp in dec jle xor and ret arpl inc scas aam loopne and pop inc scas inc push or push jecxz js int fcomip outsl mov sti std jnp hlt cltd inc xchg inc addr16 cltd inc jecxz data16 in les sbb pop lock icebp add mul xlat icebp xchg dec pop push rdtsc cwtl jno dec push push test and xlat lret jb imul inc push adc adc mov fs sub aam jae jp,pn mov int3 cmp cmp movsb (bad) cmc sarb leave cmp cmp aas push pop cwtl (bad) lcall aad mov sub pushl out (bad) mov xchg mov mov fistl ret sbb stos pop scas adc test clc jmp mov mov push inc mov nop in js push adc inc imul jb adc mov push data16 cmp dec add js mov pop sbb ficom sub repz sub pusha daa mov lret mov jns stos push ljmp dec dec add test test and xor xchg and jno or sub cmp jg mov cmp jbe imul jnp aas inc xlat fidivrl addl xchg ja xchg popf mov cmc mov repnz or inc mov mov pop popa jle ds lret fdivs das shrl mov cmp jmp cmp xchg ret fucom or mov push out repz pop enter ret nop lcall aaa mov dec (bad) lods lahf push lea mov icebp jmp jno lret mov std sbb daa mov sysret sub add mov sbb adc outsl es nop xchg (bad) movd ret inc aaa rolb xorl mov xchg lock nop ret test fsubl cs pop mov andps movsb out cmp push mov mov aad xchg push pop jle cmpl in cld mov fidiv int ret outsl lods cli aam sbb cmp aaa or add pop mov pop dec xchg jnp test sub test mov push xchg ret pop xchg aaa pusha adcb inc repnz idiv test shrl dec cmp xchg ss fdivl mov add adc pop out dec lret push icebp cmp enter jmp test push clc ja sbb aaa mov cmc int3 or out dec clc adc push lcall test push ret push lret ret fwait cmp jecxz push add xchg mov dec movsl sub mov adc jne or js xor push test sub dec sub mov jb icebp dec push push imul neg fldcw clc mov sub add sbb pop mov lret and or cmpsb jl je pop lahf mov push and adcl js xor test outsl dec out enter clc push cmp out (bad) pop ja xor cmp test loopne mov out test loop pop sub (bad) (bad) das js adc push dec loope push pop das lods push bound nop fisubl sbb hlt inc arpl mov jno push xor out shlb ds in push mov insb add jns mov in sarl mov out (bad) dec mov mov insb xor daa test push push mov sbb lods pop (bad) iret fucomi xor (bad) stos aam push outsb xchg outsb xlat ss dec addr16 fs and jo and cmc ja pop pop pop inc or sub jecxz mov shrb leave sahf pop mov daa dec fcoms jp cld cmpsl fldt lods js and inc jo adc mov (bad) loopne push (bad) pusha in jno adc lcall mov mov xor sahf movsb xchg cmp push cld mov cmpsb sti pop sbb cli xchg sarb xchg jl inc inc (bad) dec sbb fincstp dec int3 xchg dec cmp or andl push and dec adc jne mov sbb mov test mov pop sti sbb insb mov mov enter repnz sub cli jecxz jo scas cmp icebp push lret xchg pop fisttp in push and xchg fstp fmull push lret out jne jne adc xor (bad) jl ljmp loopne push jecxz divl sbb outsb xchg or pop xchg ja das or paddw lcall mov std shrb xchg sub mov push popf mov (bad) mov inc stos outsb ljmp pop jno fbstp imul cs jae jne inc addr16 lds pushf adc loop cmp pop jmp mov test test mulb push xor gs ficoml (bad) lret cmp jb push adc ret inc outsb sar lret cmp add sub jo push mov jno icebp adc inc dec push cmp iret movsb dec push insb jb push or js ret das sub movsl mov dec push mov mov daa lds mov in cmp mov add inc mov loope rcll sub push test push std push sbb mov xchg jecxz sti sub xchg movsl enter das pop xchg sbb mov inc enter xchg icebp xchg call pop mov adc dec mov pushf mov into test out pop mov sarl mov iret xor ret fs sahf jns iret or sub dec cmp hlt cltd lahf fld je aas lods cmp pop repz je inc hlt add cmpsl (bad) cmp xorb lcall pop inc dec mov ds cmc into add push int3 pop push stos cmp pop pop aaa hlt (bad) (bad) (bad) ss sbb sahf enter stc adc popf lods int3 sbb cmp dec adc mov sub cmpl jb cmp sub mov in pop xchg add mov xchg sub (bad) arpl mov rorb lock or (bad) mov or fstps dec ss out ffreep scas xlat xor push ja ret arpl js and fstpl ror in dec and (bad) xor hlt test pop add lahf mov test rcr xchg xchg dec inc xchg add jno inc jmp cs dec (bad) dec cmp sarl outsl mov jle div shrb lods dec jle (bad) aaa push loop xor ljmp idiv movl inc stc sub jmp push add sbb mov pusha pop shrl pop add jge cli dec jnp lods push mov pop cmp (bad) js (bad) mov pushf hlt aas pop notb cmp stos daa mov (bad) fld1 outsl mov inc sbb js mov icebp outsb and mov ret add lods jle ds rolb add lret xchg sub aaa cmp stc xchg xchg cmpsb inc and adc jo lret pop mov and scas je test leave add pusha fistl or and test (bad) imul popa pusha cli adc jge pop data16 mov push add mov test xchg jl cmpsb push and jb jge pushf stc push insb nop adc fcmovnb pop jge in je loopne enter out or sub jb scas ds xchg sbb cmc mov and lahf dec stos sbb mov (bad) mov mov jns or jbe mov adcl popa push pop pushf mov rcll sub repz mov cmp cli push or fldenv arpl inc fldz jecxz and jecxz imul or mov (bad) xor xchg clc or mov pushf lea inc iret jmp cltd adc mov les pop scas ret inc pop nop xchg xlat push (bad) sti sti add mov loope in into mov mov mov jp adc out lock clc arpl mov loopw bound sub cwtl mov aam and (bad) xchg repnz cltd loop and notb (bad) enter inc jb jmp lret fstpl xor mov mov push stos add imul lea addr16 fptan dec outsb push xor fs mov mov inc mov lret sti outsb test inc add xlat add ret cmpsb sahf adc in mov mov mov push out into (bad) fnstsw jge orb (bad) cmpps mov pop mov and stos push xor imul inc (bad) pop cmp (bad) sbb rorb icebp insl mov aas insb dec mov xchg ret or or aas data16 push jl cmc inc mov dec jb mov cltd pushf mov dec dec add out mov nop dec push xor cwtl jns or pop arpl stos sbb in outsb xor pop insb rolb lret outsb sbb fmuls leave push sbb pop mov mov pop dec shl push mov and sbb ss or cs shll movsb lret insb and aaa scas rcl or mov xor js or je aad cwtl cmc fstpl xchg outsl and cmp dec push jae mov push aad add fwait push pop imul xchg gs push ror mov ss fsubr xlat adc mov repnz cwtl mov mov cmp cmp mov sbb mov imul push pop scas ret fdivrs add add in in fdivs (bad) xor cli popf (bad) dec ret add fldl in and sub ja or lods xchg (bad) sahf mov inc push or cltd jae test test popa xchg shrb mov push (bad) mov xchg or (bad) incl int inc dec or xchg negl sbb dec lods sbb popf repz jecxz clc idivb or sub arpl loope add hlt cld pop pop and sub js shl out sbb sub cmovs ss pop mov mov repnz xor sbb stc ljmpw cmp hlt mov sub dec dec and jge shrl outsb jmp cmp int inc inc rolb dec (bad) lret push jb sbb pop dec sub loop aaa dec xchg jle and mov xrelease mull push test mov insl inc out sub fwait mov das cmp loop add sub out (bad) inc mov cmp sti mov cmp jp jae mov jge jb or pushf in sbb pushf mov adc int dec ret clc pop test cmove popf shr aad jne mov wrmsr inc movsb icebp cwtl ds adc test push rolb call jns cmp popf fcompl inc add xchg cmc lcall out push fistpl or and fimul bound fbstp (bad) jle pusha and jae cmp rcll mov push xorl (bad) inc dec jne jnp lods pop outsb and sbb inc add jno push scas ret mov sbb push mov pop in aam sbbl movsb add jnp lret mov mov jbe or mov imul mov incl insb xor ss test sbb jbe inc fsubrs imul call loope scas sbb mov jo dec iret pusha je pop or stos jp push jnp and push mov ret (bad) cmp inc insb xchg dec in push enter ds push push or mov negl mov jmp mov fildll test negl mov scas inc stos jbe jns mov xchg gs cli cmpsb mov popa in push jo push js jne outsl test jnp data16 clc ja cmpb xor in cwtl popa cs movl aam pop mov lret mov inc dec fwait pop js testl push std sarl iret xchg mov jbe test adc cmp cmc mov ja sub imul mov (bad) je stc lock jbe or jne sbb push mov leave lret fcoms adc addl fisttpl inc mov mov jl xor aad pop ficom sub or xchg sahf dec iret pop cwtl enter xchg in jmp pop es mov mov inc es mov and (bad) or pop dec cmpsl jno jb (bad) stc scas dec lahf addr16 nop fisub in cli xchg rcr clc xchg xchg push jmp mov (bad) dec gs xor mov call fimul fdivl lcall push (bad) jb mov repz xor sbb dec out pushf aad fpatan out rorb cmpsl mov add jle (bad) or fisttpll xchg test push lea dec add test dec jge hlt dec scas loopne jp je mov inc jbe dec jp or cmp stc jl call mov test loop and or test pusha sub (bad) out fldl sarl mov les scas sub or or sub cld test fcompl int lods insl notl push push xor not cmp inc andl stos and xor add pop dec (bad) fsub pop aas dec stos daa std mov lcall xor mov cmc mov lret push scas iret stos stos jge loope (bad) aam les sbb adc or test pop mov mov fwait push (bad) fstpl daa or cli (bad) int3 lods cmpsb xlat dec insl inc mov mov mov fs adc cld dec test jb clc xchg fsubrl pop ss dec sub jmp loopne mov repz frstor xchg jbe xchg and push jns mov subl insl inc dec mov sbb lock cmpsb jmp adc enter fisttpll mov stc test (bad) push ja test lahf sub pop les xor adc adc push ret mov (bad) js push add dec dec movsl xor sbb mov (bad) xlat sub cs lret lea fstps aaa je adc jae cmpsb pop push or dec out cmpb dec std inc add ljmp pop sub adc cmp jge cmp outsl mov mov mov xlat cmp mov in das sbb xlat das movsb push xchg (bad) in lock call outsb addr16 and mov and jle mov mov into mov (bad) aam mov jl iret or imul mov sti insb sbb sbb mov ss loopne push imul aas xor push xor push nop mov movb jnp (bad) fmuls mov pop aas out xor and mov lock in dec leave cmp mov xchg adc repz sub jmp cmp ret lods jo pop sbb mov bound mov call or xchg pop or aaa mov mov cmp inc (bad) cmc lahf rcll add ja sub mov mov es sbb dec (bad) in add inc lods push sti cmp mov stc cs std (bad) std push and rol cmp pushf lea ds cmp fiaddl pop addr16 fwait mov pop leave mov push rcl mov mul jl push lcall adcl xor lahf fdivr call sbb jmp outsl sbb icebp mov sub inc shl dec xlat cmp jb pop lock ljmp (bad) sbb pop cmp nop jo mov loope fisttp xchg dec insl mov mov lds hlt and sahf cltd mov int lds xor jns dec xchg ds cmpsl test scas dec xor dec (bad) xchg ds and add pop xchg mov loop ret jno inc jp stos imul aam inc test mov push ffreep cmp xor lods addr16 test cmp mov jb mov sbb roll je inc add out and rolb ficoml cwtl and mov pop jno mov ret scas outsb cmp andl outsl cld ss imul ja mov mov xchg inc cwtl fsts adc (bad) bound divb adc inc dec fwait inc cmp sahf inc and outsb or stos pusha gs scas mov bound bound stos ja sub insl add mov mov jle xor mov insl cmp cmp push loope dec mov mov jecxz shl jg call cltd push cmp pop orb xor dec push push mov sti xchg xchg dec inc nop lods cmpsb stos inc icebp dec pop sub fnsave add out or iret es inc mov lds out mov sbb fnsetpm(287 jp dec dec mov and mov (bad) jb fcmovne xchg call adc out mov xchg fdivrl and fsubrl pop shr mov cltd hlt ljmp dec dec js sub (bad) xchg xor cmc mov and loopne bnd mov xchg sarl mov ficompl xlat scas and dec enter mov scas sbb imul mov and jbe enter mov out sub jae (bad) test stos pop mov je cwtl lods int3 out mov fcomip lcall repz movsl push push cmp xor inc mov mov (bad) xor mov or and ror push out mov stos or cmp sbb aaa clc jns or (bad) int3 cmp cmp cmp ja or fisttpl insl push jge cmp jne lret xlat sbb push mov popf (bad) sbb jae sbb xchg das mov or popa popf mov adcl test and xchg xchg push sahf inc lods jb lret cmp (bad) jo mov inc movsb jp push test movsl cmp add lcall jnp,pn (bad) negb add add push les iret and xchg or jo adc dec jmp test dec das (bad) cmp jb push push into or push adc (bad) aaa jp sahf pop or jmp pop jns xor fucomi adc lahf jo fimull pop cmpsl aam dec test cltd and inc (bad) lea fsubrl sti xor sub push lods aaa lahf lret mov xchg cmp popf cmp out lods adc lcall xchg outsb mov lods or and sbb inc test arpl lds test or push xlat adc scas mov mov (bad) ss push pop (bad) sub mov stc lock mov sbb cltd (bad) loopne xchg (bad) lahf mov dec inc out sub sbb sbb jg psubusw aam fcmovnb cld lds adc mov sbb jg sti xor xor xor (bad) sbb adc jae push repnz dec data16 loopne cs seto cmpsl clc cld cmpsl lods std sahf push inc inc rorl xchg popf lret mulb repnz push dec mov shr mov (bad) push jecxz cmp ljmp das pop mov js pop pop movsl out pop mov test mov loop xor repz dec push push fisub push decb jne movsb rclb (bad) sub sub push imul es jo add sbb or lcall repz int scas je cmp out inc push (bad) scas adc inc in test scas outsl dec sbb neg or pushf mov out cltd lcall cwtl ja push mov jmp fs jp dec push jge sbb jne test repnz enter xchg dec or (bad) jle enter mov fimul adc sbb int ss push pusha inc add daa sub scas imul addb jge xchg outsl scas jno popa jo (bad) cmp and cltd or lret inc movsb dec in cmp mov inc aam popa add pop pop sub cmp repnz clc add sub stos dec das mov dec inc push mov push arpl mov push dec mov out mov cli pop fldt (bad) dec enter icebp or adc sub mov dec shr ret or ss jecxz add add adc js xlat add cmp inc data16 aas dec arpl fbld popf pop addr16 mov aas mov imul inc mov dec mov popa addr16 push out shlb aaa fldcw mov adc xlat xchg pop gs lds gs shll jle add clc inc (bad) aam insb pop push loope sbb data16 push stos in cmpsb or sbb fsubl push popf ja outsl jne mov sub sub pop xor (bad) scas popf and sbb cmp mov inc andb aam cld lods mov les xor sbb inc in repnz add dec loopne in dec ds ljmp lock into test xchg insb sub mov aam pusha mov in lcall addr16 out sbb lods mov arpl sbb (bad) xor ss into xorb xor and cmp test std sub mov push push in sbb adc jne (bad) lret inc loope fdivrs mov sub push inc decl arpl cmp loope ret cmp dec in xchg cmpsb and cltd push pop or sub jb aam popf cmp repnz cltd (bad) test sbb xor pushf pop arpl daa (bad) push add mov subb insl shrl push or lods mov xchg push aam cwtl scas aad gs add push xchg dec dec lods inc mov mov nop icebp mov lret jp jns dec push popf sti nop jmp sub adc arpl stos pop add movsl xchg push jmp fimull or inc (bad) leave xchg adc sub divb stos or movsl (bad) xor or jo and dec sub rcrl test mov pop sbb mov mov jne xor test addr16 xchg daa mov fisttpl push aad pop or adc sub mov xchg je outsl mov inc cmp cli pop or and fcoml insl les dec negb nop imul (bad) mov arpl mov mov loope inc pop outsb stos jp sbb movsl inc leave shrl fidivl pop adc lcall inc cmp pop lea adc cmp leave fldl repnz xchg shrl test test clc xchg pushf jmp mov test and mov pop mov ret sub lcall jg iret adc jecxz pop push es xor or push inc or adc mov test pop cmc or stos test je in sub or mov or faddl loopne inc cmp movsb sti clc gs out out or mov mov dec out pop movsl push add fwait pop add cmp xorb loope cltd inc dec sub push cwtl jae (bad) jle dec out add je pop jae mov mov pop mov sub inc sbb les aad gs sbb sbb xchg lret xchg insb adc adc and pop push pop in xor pop add sbb mov xchg cmpsb mov ja bound xchg push and icebp fsubs xlat (bad) scas fs or divb test mov addr16 adc sbb stos (bad) push push cmp ror jns lahf mov popa sub sub clc inc inc pusha stos (bad) (bad) jno dec popa test or hlt aam mov jno dec adc inc add adc pop xchg in bound leave cmc push repnz mov pop jecxz push jecxz aam mov mov jbe and cli sbb jecxz bound leave adc mov xchg cmp out hlt lahf jmp dec cli in into hlt pop mov (bad) or pop hlt sbb dec dec ja pop xchg sub ss in outsl mov fsubs pop sbb and cmpsl sub mov adc lahf and inc pop ficoml mov pushf sarb inc pop ret push mov sub scas xchg negb mull or inc hlt sbb dec add insl mov sub les push dec test sub mov inc xchg push push movsl push add cmp pusha push cld iret inc lcall sbb test jns adc mov mov cmpsl mov sti inc mov or aam xchg es and std pop clc insb inc int (bad) cmp (bad) ljmp pop pop lahf (bad) stos mov fsubrp js sub mov sbb sub add pop lret jbe sub shr add lret sub scas cmpsl je fistl lret out lods sub call cmp and test nop test pop push jo outsb fbstp push and cmp or sub fisttpl popf in out cld insl mov or cmp das adc push orl (bad) lods cli repnz push addr16 pop insb pop cmpsl icebp mov add call inc adc mov jae mov mov dec pop xor aam cwtl adc lret inc jg xchg repz fildll je or clc (bad) je lret into or mov dec adc mov and push fistl mov call les aam xchg mov sahf and mov xor je xor aad mov adc jmp stos adc leave and rcll movl and inc cmc mov inc mov mov jecxz les mov lcall loop lahf adc (bad) cmp jle push popf lock mov pop fnstsw lock outsl int sarb repnz adc push fidivl pop pop mov insb lods std cs lods mov sti test jnp lret push test mov pop push es or dec dec cmp stos jg rol cld jnp ffreep ljmp push loop fs jmp loopne mov in sbb (bad) fninit std jbe mov hlt adc flds sbb inc xchg pushf pop jl mov mov je mov dec add sub popa cmp push popl cmp adc sub and dec lahf mov data16 (bad) add mov mov or clc enter and or xor xchg aam movd std imul adc imul test daa cmp ljmp and jge pop std and push push loope aaa push jecxz js sub punpckldq and clc adc jle lods loopne stos or add leave inc paddusw out fcomip cs test mov pop ljmp sahf cltd sti cmpsl lods (bad) adc cs mov call inc jbe lahf lods stos out jbe addb (bad) cltd adc das sahf rol out jo into push jecxz cmpsb adc dec mov jmp inc mov inc ljmp jns pop jmp or add je pop repz mov sub (bad) add enter push (bad) test out add jle fiaddl in sbb or pop jne lods push pushf sub icebp (bad) imulb cwtl push loop imul mov cld out imul icebp (bad) enter sti push leave shr out into xchg ja fdivs jbe mov dec jle (bad) jo pop mov cmp fsubrs lcall cmp dec jne push gs pushf test push jge xchg cld gs sbb out push xchg movsb ret popa sbb loope mov addr16 dec in imul dec xor je sahf mov pop test dec enter imul daa and aas xlat xor xchg pop cmp js xchg int mov scas xchg aad lahf enter push fcoml std inc (bad) sub push and add (bad) jmp into ret ret or in push and push mov aad (bad) push lret mov fldcw dec sar add mov push and cmpsb aad stc inc and std fs sti lret (bad) dec sbb mov test push sub lds xchg xor push leave stos mov jge or in xchg emms mov xchg fcmovnu popa sbb pop jmp orl add loop push outsl lods int3 cmp les mul jb cmc cmp leave fmull imul mov mov cltd sub fmulp cs adcl (bad) negb je call lea stos push aam xor push sub lret lret add int int iret mov pop jbe adcl out jle insl xor in insb ffreep push js (bad) fist in mov lcall in push jge cmpl in sahf xlat fistpll jno jns push jmp ss dec negb es je cltd loopne adc xor lret pop lods lahf stc inc (bad) enter pop xchg xorl sahf (bad) outsl int3 mov dec jmp xchg jns mov (bad) adc push inc xchg sub sub push sub (bad) pop or add xchg cld dec and enter push insb out inc jle and into dec mov push adc cmp adc sarl popf gs push jnp or xchg inc push and mov icebp push orl xchg push popfw xchg mov dec jl (bad) adc dec inc lret mov or mov adc dec shrb mov adc dec je fnsave cmp jo mov sub call int3 fldl add xchg repnz (bad) mov adc sub outsl sbb xchg imul mov lret fdivrs enter jns add lods xchg cld sub cs add mov scas mov add sbb push std jns push jns daa push adc dec aaa shl add xchg lret xor punpcklwd rol fidiv inc mov fucomi mov into mov aas or dec push sbb (bad) int3 js lea scas ljmp fcmovbe adc loopne dec dec adc iret or jp sti mov mov or sub sbb sar fbstp push sub out js (bad) push pop sbb daa mov sti cmp cltd cmpsb popf cmp (bad) das jl cmp pop sbb fmuls ljmp inc in mov sbb inc icebp (bad) lods push mov cvtdq2ps insb adc scas mov arpl fdivrp lock fs push mov mov mov daa sbb or cs dec dec xchg inc adc push and and jne push xor int jae cmp dec outsb adcl rcrb mov push cmp xor cld int3 inc cltd ret push fildll mov out push dec lahf (bad) cmp lret int push cmp push sti cmp and sahf adc into sbb push pop scas lret sub add jmp divl (bad) leave xor fdivrs and cmpsl jg push dec inc das ja aaa pusha add lea lock das or sbb ret and pop aas mov mov inc cli and sbb sarl sbb mov add mov pop jecxz or push out and jp mov stos lahf add (bad) pop (bad) int3 xor mov add aaa jne pop in lock movsb fild sbb mov fstpl mov sub push or sbb jae or cmpsl inc sub imul xchg leave pop scas mov pop dec (bad) sub fildll push dec lock cmpl sahf hlt mov insb adc push ds sub popf repnz lret or out mov repnz jo xor fildll bound pop negl (bad) (bad) push fcoml cmp pop xlat cmc sub fiaddl outsl mov cwtl cld add push dec dec popf je xor cmpsb mov adc loopne out cltd xchg test mov mov (bad) ds sbb (bad) rcrb sbbl jno mov mov add insl fdivr aam cmp mov insb sarb sbb outsb or and cwtl sti les ret xchg jb jno push jb mulb xor in fucomi pop dec xor aaa push sti add dec and mov jle test sbb inc popa inc repnz add xchg pop aas scas lret outsb cld fdivrs aaa outsb mov mov jo dec dec push mov lret sbb pushf mov push dec stc cld pop into idiv jns cld ret inc jo mov push lahf push mov arpl rcll loope lock push shlb bound mov mov lret imul test add inc and repz imul xchg outsb xchg fsubrl mov out jl sub and vshufps cwtl dec jbe and shlb dec in dec push fistpl pop cwtl xor jg jno repnz aas bound aas rcrb xlat adc sbb cmp cwtl push data16 loopne push sub add dec lcall int movsl fidiv jecxz imul mov xlat jno das sahf add mov lret icebp test dec xchg rcll pop jg mov out test out pop mov jmp out setp push jb or fwait out (bad) into daa lds xor fstps fidivl stos push push xchg xchg jb out fdiv push mov aam push cli fdivrs outsb lds inc or cmp ljmp cmpsl mov cmp enter pop fsubs jo cmp or bound sbb (bad) xor std xlat xchg inc cmp pop mov cmp push xor add daa sbb or ja (bad) cwtl xor loope jg (bad) mov jno mov mov ds das movsb jns cld push mov fild punpcklwd lea outsl inc or mov mov mov jnp xchg flds stos push stc lahf lea sarl scas mov pop xor mov mov and jle lcall and test (bad) test jg fnsave mov jecxz (bad) jae loope test outsl je cltd outsl mov xchg inc mov addr16 (bad) dec xlat out sahf es inc cs mov jno enter addps or insb xor icebp call cmp xchg lret xchg push das gs xchg lahf xchg popl adc jae mov adc sub dec mov lret rcl push and out cli xchg ds fsts push jle es adc stos fcoml and inc adc xchg xor aad sub lds pop je jno mov jp adc cvtpi2ps pop in insl xchg movsl into inc cmp outsl (bad) xchg mov xor add sbb add push vcvtps2dq dec xlat inc pop fldl lcall mov fistpl pop xchg mov outsl in cmp mov and incb mov int xor iret out push test cmc cmc add cld cmpb ret (bad) push fldl idiv sbb out jg jb int3 pop sbb shl addr16 sub mov idivb xor jmp mov std jb loopne add (bad) push cmp mov fwait adc je sbb addl xlat jg cmp mov das push xchg dec lret sbb lods lret outsl sbb pop js xchg add cmp xorb fwait lahf out outsb pop iret (bad) xor add cmp jle lods mov jmp frstor dec jnp int3 int3 das add mov inc sub pusha addr16 shlb imul xorb pop jg inc adc mov testl fidivr sbb insb sbb push sbb loope mov xchg (bad) jnp push cmc icebp adc iret fcomi push push mov and jge sbb call xlat fstps out (bad) (bad) int scas mov cmp xchg pop add mov lret aad icebp (bad) xor mov movb cmp mov dec push xorb psubsw xor pop push inc xor leave cmp negb scas aam inc hlt cmpsb mov adc sbb lock pop daa push out movl test mov pop xchg jmp inc xchg and inc in xlat decl movsb or (bad) std mov insb shrl rcrl clc inc idivl (bad) nop ds dec inc (bad) fisubrl popf repz ja xor das enter sub inc inc test mov sbb out add sbb arpl adc out push fisubl mov jno outsb popa adc or out sub push sti jno insb (bad) pusha sbbl imul dec jge xlat push movsl jmp xorl mov push pop rcrl adc dec lahf xchg imul or push insb cmp lods lcall imul sbb imul xchg repz add cmp dec ret add ss push notb sub (bad) mov and loopne pop icebp imul or pushf or insl mov icebp mov or mov andl js jg (bad) stc mov xor pop je (bad) push and pop sub sbb in leave loop xor rcrb add xchg pop xchg mov mov pushf xor leave int3 std and int3 mov jp sub mov and dec jecxz ficompl aam xchg adc rcr fs scas shl push insb into xor xor mov jne (bad) jle out into loopne int3 (bad) mov test gs mov pop mov ret addr16 mov js fcmove xlat dec rcll sub sub mov jmp stos sbb ret dec or rolb inc adc pop test mov loope mov ljmp clc movsb or lret xchg pop aaa jl push into das jne ret push mov mov (bad) ret nop xlat xor in mov icebp jb adc pusha idivb add imul jl jg (bad) std adc pop incl sbb lret (bad) xchg ja nop adc inc ds and jmp mov push out bound pop sub dec mov das mov adc xchg outsl jae js jb cld orl andb call xchg jne xchg fsts shr adc xor rorb arpl mov ja test pushf leave cmp out jne,pn mov cli mov pop push in dec pop inc roll add lahf mov repz ret out les dec xchg repnz lods adc and jnp loopne rcrl ss jmp pop out in fsubrs cmp das lcall rorb pop xor xor inc aas hlt insl push fistl fdivr and hlt into popf push adc imul nop xchg sbb aaa pop sbb loope mov and (bad) shr orl mov shr xchg les mov dec push and test and fdivs int3 lcall sbb lock scas and push push sbb xor mov and sub lds add dec jb sbb rcl cmp mov adc push fldt out imul cmp pop push test fdivp xlat mov out (bad) aas push in xchg cmpsl cwtl jbe or mov loopne lock insl cmpsl xor stos mov mov lea imul (bad) sub repnz ss or inc lods add cmpsb cli sub movsb movsl in mov orb in out fisttpll inc jmp movsw jmp sub into dec pop (bad) mov (bad) cmp mov sarb bound sub xchg dec xchg jg or imul add mov imul dec mov mov jp push fcomip inc mov push iret es jp add aaa inc roll lret adc ret inc ljmp mov sti mov xchg pop mov xorb jae inc cmc add inc sub inc (bad) dec shrl push jae and bound ret push or dec jo adc aad movsl cmpsl inc adc popf test mov or loope pop or fldcw stos mov push (bad) fwait cli cmpsl sarl jno repz int popf and mov dec inc push out lahf testl pop adc sbb movsl sub (bad) cmc mov pop pop xchg mov pushf dec cmp in xor movsl outsl sbb add cltd dec into and stos mov fiadd inc mov shl jo out sbb scas andb inc fcmovnbe xlat xor jl fisubl je xor enter cmp in push push adc lret nop jge dec pop pushf pop sbb mov cmpsl fstl mov xchg popf lahf addr16 pop cmpsb xchg inc mov and test daa or loope (bad) lret dec lret sbb cmp mov or cmp hlt ficompl js jnp inc push int aam fadds out pop or cmp ds mov ja jle hlt sti mov lods mov jbe push cmpsb (bad) fsubr mov (bad) das add cmp mov jle lods pop cli sar out daa out lcall pop fwait mov testl outsb addl stos mov popl inc pop sub xchg cwtl xchg or fiaddl push (bad) stc cmp mov in es jbe adc insl pushf pop adc xlat or call movsl xchg pop pop lret push cwtl test pop inc clc lret daa (bad) aam sub lret mov jecxz aas push sub sub dec sub stc mov jl cmpl loope mov mov jns ret xor gs mov shll fimull sub xor mov jecxz ljmp add pop push stos jp lods sbb xor jo outsl xchg loop add cmp pop loopne in lds sarl inc mov leave inc inc mov mov xchg pop mov pop cli mov sbb inc adc test insb dec movsl std xchg stc sbb sbb test and pusha rorl pop push cs movsl jecxz pop mov and lods nop push out fnstcw jb inc sub jns (bad) imull test sti stos add jns jl or mov scas or sub dec add fdivs mov movsb mov stos lret push loop cld out ss mov mov xor mov test dec jmp (bad) lcall push int3 mov test in jae (bad) mov mov jbe addr16 and or push in adc ss add (bad) ljmp fs fstpl mov (bad) inc adc mov sbb ret jb xchg je (bad) jbe or hlt sahf bound jecxz cmc cltd inc int3 push mov stos into mov mov mov dec aad pop lahf xor int3 cli jl int3 cmp push fdivrl out mov mov cmp lds or loope xor fstps xchg scas lret test and (bad) pop popa jmp dec adc imul ja mov xchg add xchg nop lcall jbe mov mov ret ss mov cmpsb push out xchg push stc xchg btr pusha sbb cli pop adc sbb dec push faddl dec lods lea push pusha push daa push (bad) nop adc lds push inc jno fsubr stos bound xchg jg dec ljmp popa fsts ret add addr16 xor test cmp test and cmp (bad) mov or xlat dec js inc aaa aam push lea (bad) mov mov cli es subl mov lods push fs jp,pt sbb pop in jl test jno in cmpb push or outsb mov sahf outsb inc (bad) mov loope cmp (bad) cmp (bad) cmp aad nop test loop mov fist pop in or rolb addr16 mov mov jge pop lahf add js xorb out and fnstcw xchg imul sbb mov dec mov sub es icebp xchg repnz pushl cmp adc cmp lahf pop push stos mov sbbb shl pop xchg fnsave rorb repz addr16 (bad) daa push movsb shrl icebp enter std push xchg jnp xor push push xstore-rng cmpsl xchg js mull mov ja adc (bad) push inc mov xor ja push popa jb shrb dec and dec push fdiv sub leave jmp sbb test out fild cltd out in sahf mov hlt mov popfw fistl lret inc fmuls push xchg add les push mov push sbb data16 mov cmpl (bad) push sub mov (bad) sarl movsl outsl cmova aam pop sarl test jecxz dec cmc or mov jnp sbb xchg adc es or cmp test dec lcall scas outsb ret fwait icebp pop int push adc mov push pop gs (bad) test push xchg out js ficom add into insl fcomps jne dec nop sub xchg insl ficoml les mov mov lock lret add popa out mov inc lret out xor aaa aaa ds inc subl mov pop xchg shrb jae roll sbb lods jnp jle adc and insb sbbl mov ljmp inc adc pop push push xchg jg pop fcoml or clc cmpsb xchg jns clc (bad) cltd sarl stos in mov movsb pop or mov xchg or aad dec div aam sub push fwait lds mov push mov test sub xor movl sbb jg mov push or andb sbb inc push mov insb push dec repz in xor js cltd xchg xor jecxz sub stc enter jns cmp add daa fisubl (bad) pop test and dec mov inc fcomi scas push sbb test push jmp sbb xchg adc imul inc repnz sbb fdivrl ss into mov sbb or or popf repnz xor mul in das lock push sub subl fisttpl mov aas mov or push sub mov ret inc lahf and cmp data16 cmp sub xchg lahf or (bad) and movsb movsb scas in pop in xchg stc jle jge sub push jg iret dec fcmove cmp inc inc out cmp mov test sqrtps addr16 (bad) and dec popa lret andl sbb add dec xor clc test cmpsb (bad) xor push mov xchg shrl mov cs rcl mov rcrl dec cld repz (bad) sti pop mov lods sbb mov sbb dec mov jcxz outsb imul add xor bound pop sub cmovne xorl ljmp into fcmovnbe das cmpsl adc cs lods jbe jo pop pop push sbb mov push pusha bound das and push (bad) imul in data16 gs int3 arpl jmp jecxz rolb jge dec ds dec cmp xor stos push das jle or data16 ret xor fistl paddd sbb add push push dec hlt imul cld mov ret jp mov jp push ror or in int3 pop cs dec int outsb cltd inc lea mov in inc jae in loopne lret sbb sbb pop stc cmp mov and xchg mov adc jp mov xrelease shrb lds ds jmp cmp mov sub test jge iret (bad) push mov aam sbb and in xor test adc lea add push xchg les (bad) in or cmc into mov xor adc lea lods xchg add lahf cld xchg lock stc adc repz mov jmp fnstcw mov adc (bad) in sahf adc sbb and dec xor mov xor or sbb outsl cmpl jo cmp aam xchg inc into aam aad mov loopne pushf hlt pop pop ja inc lret jae push mov push clc cltd inc call scas mov lahf shr popf push aam push jl aaa jo sti and pop or xor gs jo xchg je sub push inc mov dec popf (bad) (bad) hlt jbe aaa outsb sub sbb mov add in bsf mov dec adc pop mov cmp xchg mov aaa sahf leave jne push pusha loop push imul lods pop push jb jns nop (bad) sbb or and lahf inc fucomp outsb mov push sub cmp inc push xchg test mov xor sahf push cmc push je adc push mov mov mov add mov jmp jecxz push mov cmp cmp test or (bad) mov or mov jno mov ljmp adc (bad) es mov lret (bad) rorl lea mov (bad) push jg aad cmp clc aaa les dec es push mov and faddl xchg mov xor jo xchg fsubl movsl dec mov add (bad) fildll lahf sbb movsl divb mov int3 bound loop mov insb in mov mov aas sub fwait je pop sbb int mov or out mov add jecxz loope (bad) sti hlt loop xlat int3 mov fwait pop mov ljmp jo (bad) lock ds adc pop inc stos les jae aad jns fbstp xchg shrl clc push pop cld ficoml mov ja mov (bad) cld imul jecxz ja or andl xchg sahf das adc les je xchg repnz or testb xchg fcmovu lcall dec iret or in shl iret mov mov and inc mov push jno in sbb inc adc addr16 add fcomps dec and xlat add ja add push jbe inc mov mov inc pop inc xchg jnp js std dec inc pop (bad) jle xchg jnp add cmc out call inc push outsl fcompl pop pop imul cli xor xor test je lea mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor shl mov or shr mov mov test jne add cmp jb pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push lea mov lea mov cmp jne add add sub jae mov mov cmp jne add add sub jae pop pop mov pop ret pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 testb push mov movl je push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 pop popf sbb sub add and xlat fs sub pop push shrb (bad) mov or scas aam loop outsl pop push adc mov mov test les test sub or int3 pop (bad) push push int jb lock enter arpl gs jmp mov addr16 sbb insb sbb test (bad) int repnz movsb dec stos inc adc adc mov ljmp jb rcrb sarl dec in mov cmpsl xchg pop (bad) pushl out negb inc aaa repz daa outsl lds out movsb scas hlt dec inc (bad) arpl mov sbb add mov push (bad) rorl pop insb pusha xchg adc imul cmp cmp je les cmpsb cmpsb movsb jbe jno dec xlat scas sbb xor (bad) mov loop or xor cmp sub shrb push xchg es jbe cmp push xor ds xchg cmc data16 dec aam xchg lret outsl ret int3 lock mov shll push push insl inc shrl jp pushf outsb decb jle mov fisttpll daa lea jb sbb sub mov pop mov (bad) jns cwtl loope imul fwait (bad) insl adc mov popa mov inc aas mov shlb xchg xor out ffree sbb fadd pop rcll scas popf jle into sub in mov xor test in pop push cmp cmp cld in test fdivs leave fcoms mov jns jp mov pushf pop sbb mov fisubr test jle,pt lea jmp dec pop mov scas xor call push jo mov mov int push pusha fisubl adc (bad) cmpsl movsl jns pop (bad) je in mov mov pop hlt test sbb in sahf mov shll cli mov cmp movsl test pop cmp neg jb sti test int arpl cmp xchg xor divl inc movsl pop mov dec mov pop repz cmp jle inc mov sti push push negb dec lock pushf adc xchg xor dec mov push push ds xchg daa jb sbb ja lock orps pop push sbb mov jg or xchg jb xchg addl stos je jle outsb sbbl add cmc push and inc mov and push lahf mov mov pop xlat cmp or (bad) out fxtract ds adc (bad) push mov mov push push push mov push push mov movl lea movl movl call mov mov call mov test jne call test je xor jmp movl mov push push call mov add test je mov push call xor lea call mov test jne call test je xor jmp movl mov push push call add lea call testb movl movl je push push call add mov mov pop mov pop mov pop ret int3 int3 int3 push mov and push push push push mov push push push lea push call mov add mov pushl call pop mov pop ret int3 int3 mov cmpl je movzwl push push pushl lea push push push call mov add movb test jne call test je xor jmp movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push mov push push mov mov pushl call test jne push push pushl mov mov rep call test je push push push movb call add mov xor xchg pop pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret lret pushf icebp div (bad) mov enter aaa (bad) ja push push js out loope dec pop inc enter rcl das int fsts pop cmp mov test idivl (bad) or roll sti sub sbbb (bad) jns and je mov daa xchg lds adcb test mov mov and cmpb je mov mov mov call test jne mov mov call or je cmpb je movb mov mov xchg push push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub cmpl push push mov je addl adcl pop pop mov pop ret mov addl push adcl pushl push call mov add mov cmp jb ja cmp jbe mov mov lea mov lea push mov lea push mov call add cmpl ja cmpl ja movzwl mov jmp movl lea push lea call pop pop mov pop ret push mov and push mov mov push mov test jne call test je xor jmp movl mov mov pushl pushl mov call cmpl je push call mov lea push lea call push call pop mov pop ret sub jmp int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 pop popf sbb sub add add xlat fs sub pop push sarb or add gs aam loop outsl pop push adc mov mov push int3 int3 int3 int3 int3 int3 int3 int3 int3 mov call ret int3 int3 int3 int3 int3 int3 int3 int3 pop popf sbb sub add call sub pop push rorb (bad) mov or scas aam loop outsl pop push adc mov mov loopne out pop jnp vaddsubpd fsubl mov icebp call testb je push push call add mov pop ret push mov push push mov push mov sub push mov mov movl movl mov mov mov mov cmp je push push mov mov test je movl mov movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov add add mov mov movb mov mov cmpb jne pushl mov call mov push call add mov cmpb je mov mov mov mov mov mov movl pushl call pushl movl call mov add mov add mov cmp jne mov pop pop lea call mov movl movl pop mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push mov movl movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov lea add mov mov mov call pushl lea call push call mov add mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov mov jmp xor xor ret int3 int3 int3 int3 int3 int3 ret lret (bad) in clc dec in lret (bad) not aas stos xchg enter push jne leave adc pop sub push mov mov test js mov sub sar cmp jl mov push xor test push mov cmovns sub sar lea cmp jge call sub xor div mov pop pop mov mov push mov call pop ret int3 int3 int3 int3 int3 mov mov test js mov mov push mov mov lea push push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov sub sar test je nopl nopw mov mov movl movl movl movl call mov inc sub sar cmp jb pop movl movl pop ret mov pop movl pop ret int3 push mov and sub mov push push xor mov mov mov sub add shr push xor cmp cmova mov test je mov mov cmp je cmp jne mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call jmp call mov inc add cmp jne pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp loop mov mov sub or ds int movsl pop mov xchg fwait out cmp pop add push xor inc out clc cmp add mov jp sbb movl scas xchg test in and (bad) aaa iret bound xor leave mov lcall les mov mov gs dec mov cld hlt pop stc jno push hlt divl std mov dec mov ret xchg lret pop scas mov (bad) xchg (bad) ss bound mov idivl rclb lds insb push loopne pop bound fisubr lods pop push fisubl fdivrl in mov pusha imul int mov aad dec sub jbe imul ja xchg fs pop mov mov or xor or scas jns sti and add or int ficompl fmuls cmp dec arpl gs clc cmp mov lret cmc int loope or xchg in leave pop lahf es mov lcall lea popf stos cmp push and mov cmp jne mov mov mov jmp ret int3 int3 push push mov push mov mov test jns mov mov mov mov sub push mov sar cmp jbe cmp je mov mov movl movl movl movl call mov inc sub sar cmp jb pop test js cmp je mov mov mov push mov call pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov jmp sub jmp mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jmp repnz mov dec xchg sahf lock repnz xchg dec add arpl incl cmp pop mov (bad) hlt or add loop sub pop pop rorl xchg scas push or dec or sub int3 int3 int3 int3 int3 ret sub (bad) xchg das enter loop add xchg jo mov cltd ljmp (bad) cs int mov rorl js add add add movl movl movl jmp push mov and push mov push mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call pop mov pop ret call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret fcomps mov (bad) mov bound jg mov sub aad imul scas push jl push adc pop mov add sti aas inc std mov mov sbb pop mov int3 (bad) inc movsb js mov bound popa fsubrl jae and xchg jno adc cmpsb sub scas jno orl jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov push mov mov call movsd ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test je mov mov call mulsd mulsd call sub push sbb push push push call mov mov pop add ret int3 int3 push mov pushl call pushl call pushl call add pop ret push push mov push mov push push mov call add test je push push push call add test je pop xor pop pop ret add mov lea mov inc test jne sub je cmpb je push push push call mov add test jne push call add mov xor pop pop pop pop ret mov sub push lea push call mov push push push mov call mov push push mov movb lea push call add mov mov pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp loop mov inc push movsl jae xor jg dec hlt popf in into push lods clc inc cmp outsl pop push adc mov mov sub lret sub insl pop mov push sarb inc push push es push or mov xor dec aam popa push loope movsl test xor (bad) push and mov (bad) jns (bad) dec and cwtl mov and dec sbb icebp mov cltd ja mov (bad) pop mulb lds pop xchg mov test imul mov push pop test sub sub (bad) inc shl in mov (bad) aas (bad) fstpt test pop insb ret jle (bad) ja add or mov hlt or frstor fadd sbb je inc mov xchg mov inc (bad) dec sub push testl push jnp sub sbb jmp dec ss test cmp or adc xchg enter push aaa arpl add mov adc inc mov jae cs fcompl lods or sarb les inc loop imul popf xchg jp das test cmc xchg enter pop sarb scas sti xchg cmpl mov xor sub sub aad dec xor test and (bad) adc pop mov imul pop mov rcl xchg fildl in iret xchg (bad) divb cmp push pop arpl sbb jl (bad) fsubrs cs push adc subl add sbb das inc adc mov pop push jns nop insl xor xchg push cmp inc mov jb mov fcmovbe adc xchg ljmp sub leave cmp jecxz lcall ficompl mov sub dec cmp push xchg xchg in xchg xchg mov push stc rcrb dec pop jbe pop inc cwtl mov jnp loopne mov movsb pop xchg sub cmp cmp lds fucomi xor sub pusha inc dec sub pop sbb aad cmp ret (bad) mov jae xchg daa sbb inc outsl stos ret jl (bad) (bad) cmpsl jl mov add ss add sub or popa dec sub (bad) incl fldcw xchg (bad) inc test movsl and xchg xchg rcr hlt lret sti lahf addr16 negb mov pop ret test cmp mov and xor xchg xor int push cmp pminub sub ja xor cmp xor mov (bad) and imul std (bad) int3 daa xchg fwait repnz jecxz fistpl inc push call andl mov fldt jno mov sbb frstor push adc iret xchg test or sub xchg push push xor outsl ja mov outsl dec push pop adc mov and iret sbb pusha or push push and add icebp (bad) mull pop jb pushf outsl rcl aas push cs mov cmp fsubrs and in xor xchg add jmp xchg test xor mov push push insl push adc sbbl (bad) mov xor icebp mov scas aam test inc stos dec icebp add cmc (bad) mov push lds fdiv adc mov mov mov repz and out mov data16 mov sub jge adc mov cwtl (bad) testb inc pop movsl push sub xchg in xchg je ljmp cld jg movsl ret lea ss inc je cmc js xchg sbb es push xchg insl mov mov inc inc xrelease outsb xchg scas jne js in loopne xchg push icebp fbstp inc data16 mov or addr16 xor inc clc (bad) icebp fisubl cmp mov in inc dec pop in aas mov stos jns jno push mov push insl (bad) jp jmp mov pop jbe mov sti or jns add mov lahf cmp outsb xor int3 data16 (bad) mov stos and fisubrl lea fdivrs stc int3 data16 aas aas jno and es mov fs aam fistpll pop les xchg rcrl jge es xchg mov pop mov lds push xor dec push sar movsb pop jl fsub fbld push jnp xchg mov or pop outsl test mov repz and in gs inc inc adc movsl cmp dec jg or and out out popa sub movsl rol mul pop ficom jl mov imul xchg fsubl mov add inc fs sbb sti sbb sbb fisttp mov mov cmp inc jmp push or xchg nop push into jecxz ja decb pop pop lret inc push inc dec cmp test xor dec inc (bad) fstpt pop dec push test stos jno test arpl icebp dec movsb sub sub icebp fstps lret mov or lods insb mov pop aad arpl outsl dec into mov insl leave jne dec fstpl sub mov or std mov adc add add mov sbb inc mov jp mov test dec mov nop dec hlt ds ret ja mov mov lock out and mov mov xchg into sbb or or dec out ja adc pop sub dec sbb mov repnz call jbe sub movsb push mov (bad) je out or gs fdivrl into ja xchg bound jp out insl cmp dec and add add cld mov sbb cmp sub loopne xchg pop dec cmp cld leave sbb mov ds adc int ljmp add lret inc aas cltd sub ret sti ja cltd fwait aam repz add pop pop inc jnp lds jns inc inc pop adc scas (bad) in mov out hlt fwait test or push inc sti mov test inc cmp es scas mov leave mov pop outsb xchg int3 mov dec jo xor ret push mov mov sub insl xor or cmp mov mov stos xor lods xor adc push mov lret imul jge jle dec add adc inc insl out xchg xor stc add sbb jmp mov xchg fisubr add mov nop dec mov mov clc dec sbb adc out dec xchg rclb lret lds push mov add xor jb fwait mov mov sub mov xchg xchg test (bad) idivb pop je jmp mov (bad) repnz push mov xchg mov jl aad adc add repnz in adc (bad) inc pop out or xchg in and xor int mov dec xchg std sub add daa lahf ucomiss dec es test jo mov sahf mov repz cmovno xor xchg sub jb push jne sahf jb iret mov insb push pop push sub mov xor mov cli popl fistpl out cld fistpll scas mov int lods jl cmp enter dec push dec jne out call or cmp or mov mov push jmp arpl insb test das xchg push jb les aam clc stc xor or and and jmp int3 int3 int3 int3 int3 int3 push mov push push lea movb push movl movl call add movl movl mov movl movl movl movl movl pop ret int3 push mov mov movl test je push call add mov test je push call add mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 push mov and sub xor push push mov mov push call test jne test je nopl mov cmp je cmpl mov jne mov jmp mov cmp jg nopl call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add xor mov call or je mov cmp je cmpl mov jne mov jmp mov cmp jle mov call xor mov call or je mov xor mov mov call cmp jne cmp jne mov and or jne mov call addl lea mov adcl incl mov mov mov mov incl mov mov mov mov pushl mov push pushl add push call mov add mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov neg sbb neg inc push call mov cmp je cmpl mov jne mov jmp mov cmp jle cmpl jne call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add jmp call xor mov call or jne mov call xor mov call test ja jb test jne pop pop pop mov pop ret int3 int3 int3 int3 push mov and sub push push mov lea push call xor mov call mov mov mov lea mov lea nopl mov cmp jne add add sub jae mov lea mov nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl mov mov mov rep mov cmpl jne test js mov lea add mov nop mov cmp jne add add sub jae mov mov rep pop pop pop mov pop ret mov lea rep mov pushl push add push call mov add mov push push add add push call mov xor mov add add cmp je mov div mov xor imul and add mov mov mov mov lea div mov add imul mov mov and add mov pop pop pop mov pop ret or div xor imul pop mov or mov lea div mov add imul mov pop pop mov mov pop ret int3 lret xor stos (bad) jno lea sub scas loop,pt or cmc notl (bad) mov inc iret popa pop mov or mov adc mov sarl jmp push negb jnp xor mov xor ja inc cmpsl and lea fs and fisubr ljmp jmp (bad) rol data16 xchg insb test push inc xor adc das and hlt (bad) push into stos rcrl (bad) adc dec mov push outsb pop dec xchg int3 test ret xor pushf std aaa bnd (bad) or jno rcr add jmp loop xchg in les leave lods aam jns cltd in mov xor xchg leave inc repz or inc outsb cwtl mov fs mov arpl and jmp cmp push cmovnp stc inc arpl sub xor (bad) or test daa test popf (bad) lret into popf adc std inc xor lcall loop cmp fsqrt pop lods leave (bad) mov fstpt pop push inc xchg push popa test xchg out aaa mov mov (bad) sarb dec or sbb out sbb push inc pushf mov cmpsb mov aas mov push push (bad) jo and mov dec lahf push out pop imul jae sub (bad) fidivr lret hlt lods popf ja decb sti xchg mov ret xor adc pop push cmp and loop imul loope xor js inc fdivl cmp and jmp add sbb mov bound push or jge into sar sub pop addr16 std cmp cmp xor repz lcall mov adc push clc and les xchg push xor outsl and stos orl sub out and pop xor adc movups movups movups movups movups movups movups mov mov mov mov mov ret int3 int3 int3 ret inc lret jge xor test ret addb js lds out movlps (bad) sbb jle movsl outsl cmpsl xchg add (bad) lret sbb jae jne decl fdivr shrb fsubl mov outsl sti loop xorl inc xor xor pop pop adc arpl cmpsb xor inc in jecxz cmp lods dec add sbb jp and jns sub and scas lcall cmc rcrl inc movb stc fcmovnb adc mov jnp or testb lcall es divb pushf icebp and paddusw fsubrl sbb sbb sbb add cld adc sub jge adc pop dec mov cmc sbb cs cs mov je movsl cltd and aas ljmp mov mov outsb mulb pop inc stos mov inc fwait or sbbb push fcmove inc pop inc push inc push and gs inc inc inc out sbb sar inc lret sbb xor push mov add push cmp cmp lods (bad) repz push fldt ja push mov call icebp sbb fist (bad) (bad) adc fldenv adc sbb fild (bad) mov and mov bound xchg pop cmc movsl gs xchg lods bound test inc pop or sbb movsl bound cmp push xchg lds (bad) mov sbb jecxz jo inc dec push mov in fstpl cmp aas jecxz push push cwtl ret movsb cwtl (bad) fwait rolb cld dec dec stos lock pop mov fbld lcall mov inc (bad) push fdivrs jne adc fwait fwait fs push push add dec ljmp pop int and loop lret adc pop mov jbe inc dec mov mov mov inc jg lds cmp xlat xor jae aad cmpsl popa (bad) sbb xchg repnz and mov or mov aam push je aad jne xor push add rclw imul jle iret dec add push mov inc sbbb inc inc shll in mov in sub push push mov lea push call xor mov call mov lea mov lea mov nopl mov cmp jne add add sub jae lea mov lea nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl lea mov lea rep cmpl jne test js lea mov lea mov cmp jne add add sub jae lea mov mov lea rep push lea call mov mov pop pop pop mov pop ret mov lea lea xor rep movups movups movups movups movups movups movups movups mov mov mov mov cmp je mov mov divl and imul add mov pop pop pop mov pop ret or divl pop imul pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 pop popf sbb sub add sub xlat fs sub pop push rcr sub add gs aam loop outsl pop push adc mov mov and push mov push movl mov mov mov mov movl movl movl movl movl movl movl movl movl mov neg sbb neg inc push call cmpl mov jne cmpb jne mov lea shl add mov pop lea mov mov pop ret mov imul sub lea add shl jmp mov imul push mov sub mov add cmpb cmovne imul pop add add mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov call mov mov call push push push push call push push push push mov mov call push push push push call push push push pushl mov mov call add push push adc push push call mov mov mov mov lea mov call mov mov mov mov mov mov mov mov mov mov mov mov lock mov cmp jne cmp jne mov add nop mov mov mov mov mov mov lock cmp jne cmp jne mov mov sub mov sbb push push push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov cmp je dec mov cmp ja jmp or push call push call ret xor push call push call ret mov push call push call ret mov push call push call ret mov push call push call ret pop cmpsb adc cmpsb adc cmpsb adc cmpsb adc cmpsb adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp loop mov mov movsb ja cmp xchg pop nop dec push mov push sbb cs cmpsb xlat (bad) loop out clc pop fmull dec sbb mov sbb sbb push mov inc jmp enter dec shld lds and mov repz nop sbb stos and icebp push mov lret adc sbb pop push jle or movsl icebp xlat jbe mov push pop mov ret ret mov xchg adc jnp mov stos mov inc movsb repz sub inc or idivl imul sbb fsts into sbb mov pusha jns fld jne mov jno add decb stos imul scas push fimul jecxz push pop pop add call push (bad) ss sbb mov push push mov push mov push mov mov call or jne push mov push call push push push push call test jne call jmp push mov call movl mov push push mov test je cmp je push push call add movl push call mov mov xor movl mov mov mov xorps mul movsd seto neg or push call mov xor mov mul seto neg or push call mov xor mov mul seto neg or push call add mov xor movl test jle push call mov push mov call mov push push mov mov movl mov pushl call mov push push pushl call inc add cmp jl movl mov push push call mov mov xchg mov test jne call test je xor jmp movl mov movl lea mov movl mov mov mov movl movl testb movl movb movl movl movl movl jne orl testb je mov incl mov test jne call test je xor jmp movl mov push lea mov push movl xorps movl mov mov push push mov movl movl push push movl movl movlpd call add xor test jle mov push call mov add mov mov mov mov movl movl movl lea push call mov mov push lea call inc add cmp jl pop pop pop mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push push push mov mov call or je mov call xor mov xchg push push call mov xor mov sub sar test je mov mov nop mov push pushl call test je call jmp pushl call movl mov inc mov sub sar cmp jb xor movb mov call xor mov call mov test jne call test je xor jmp movl mov push push call mov add mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 cmp pop in fcoms push test fcomp es out and xchg dec jae mov repz push (bad) lret mov dec (bad) pusha sbb pop cmp mov mov push daa int3 jnp jns mov cli add jle jp ljmp pop inc mov aam ja (bad) lahf ror repz shlb orb push lods leave mov movsl xchg or out lds lcall loopne or cs and inc dec test insl lock push cmp outsb fstl cmp (bad) loop mov mov push movsl or sub cmp pop mov icebp repz pop lds test adc mov inc movsb xchg loope loop sub packsswb mov in arpl movsl inc in outsb mov jne cli repz (bad) sbb xchg xchg lods test dec ds mov data16 outsl xchg jne sub inc fimull add adc outsl sbb or mov rcrb sbb loope fwait (bad) out leave aam mov jl xor mov xorb pop jae (bad) pushf pop mov out sbb rclb inc push (bad) in sbb and jmp sub in dec popf scas jbe lods mov xor fsubrl jmp sbb fcompl sbb mov sbb pop mov (bad) mov add call xchg inc cmp test jno sbb popw int lea es lock outsb (bad) jae loopne mov icebp add fdivrl adc and and mov (bad) aas str mov mov sub sbb incl ljmp aad es jecxz rdpmc jns fisubl jns int imul sub cmp scas int3 hlt adc fldcw in push push mov push mov sub push push push push movl movl call mov mov push movl call cmpl je mov mov mov add push push push call mov mov sub cmp jb mov inc mov mov mov mov push mov mov mov mov mov mov decl call mov add cmpl jne push call mov mov cmp je push nopl lea mov lea rep mov lea push mov cmp jne mov mov call jmp push call call mov mov mov cmp jne pop mov mov mov cmp je mov push call add mov cmp jne mov mov mov cmp je mov push call add mov cmp jne push call mov add mov pop pop mov pop ret int3 int3 int3 int3 int3 push mov and sub mov push mov mov push push push cmp je mov mov test je mov mov cmp jne lea xor call mov mov mov mov cmp jne lea xor call mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov inc mov and mov cmp jne mov xorps mov movsd and add mov adcl or jne mov xor movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl lea movsd push call add cmp jne movsd comisd jbe movsd cmpl mov je push call mov xor cmp jle xor push push mov call mov mov push push movsd call mov mov push push movsd call mov lea inc movsd cmp jl xor xorps movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl movsd xor xorps movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl xor movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd inc cmp jl movsd movsd movsd push movsd call pop pop pop pop mov pop ret mov call jmp mov call jmp int3 int3 int3 mov push mov cmp je mov mov mov addl pop ret mov sub sar cmp je sub mov sar mov shr push sub push lea cmp jbe mov jmp lea cmp cmovb push test jne xor jmp cmp ja lea cmp jb lea cmp jbe push call add lea and mov jmp push call add mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov mov lea pop pop pop mov pop ret call call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 ss lret lcall push adc imull test popf mov js stos (bad) mov push or add fbstp lret orl or out pop fimull or enter mov add int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov add test jne mov mov mov mov ret mov mov mov ret int3 int3 int3 int3 int3 int3 cmp xchg inc cmpsl stc push stos fnstcw nop addl mov aam loop outsl pop push adc mov mov in and sub push push lea push push call push lea push push call lea push call lea push lea push call push lea push push call mov add mov cltd idivl mov mov mov test cmove mov mov imul mov test jle mov imul mov jmp movl cmpl jne mov add cmp ja mov movb cltd sub sar imul imul mov jmp mov test jle imul imul mov jmp movl cmpb mov je or mov cmpb je or mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lret int xchg xchg test adcl cmp cmp rcl xchg pop sbb jl data16 and jb mov (bad) xor aas les mov sub cmp sbb xchg mov jmp mov sub out lea inc mov (bad) mov dec popf ret rcl scas and (bad) scas pop repz rorb inc add mulb out dec aam sub int cmp xchg and xchg adc xlat (bad) das sti adc sbb les mov adc stos xlat stos rcll push pop add xor xchg sub sub sahf sbb scas sub xsavec pop xor pop insl cmp in add sbb in mov mov jae push mov sbb enter cltd mov lret inc sub cmp push mov cwtl push push ds add mov xor loopne adc mov mov (bad) and pushf mov call add push (bad) xor or ret push enter (bad) pop out pop push es js push and mov out dec mov mov cmpsb out pop cmp mov xchg push cmp sahf into mov cmc push fiadd xchg inc pop es shrb jo cmc cwtl push jo pop sbb clc xchg shr lods lods dec mov sbb pop mov add aas pop and push jge jmp in dec mulb or js mov or aad inc in rcrl out ret cmp push outsl ja mov inc jb mov mov in xchg lds dec insb jnp mov inc push pop jl jne jae call push and sub sti (bad) in mov mov mov stos mov xchg jle xor shrl ret jb lret adc mov sub test je push call add mov add ret push lea movl push push movl movl movl movl call add xor mov mov push call test je push push call test je lea push call push push push mov lea lea rep push call pushl mov pushl push push push push push call mov mov push mov sub push push lea push call add push push sub lea push push call add mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 dec scas notb in es jmp rcrb sarl int lahf jo insl mov adc pop sub sub push mov push mov test jne pop xor pop add ret push mov cmp jne mov pop pop pop add ret push mov test je cmpb je add jmp mov test je movzbl mov lea inc shl shl test cmovne cltd idiv jmp mov cltd sub sar cmp movd cvtdq2ps cmovg pop movd movd cvtdq2ps cvtdq2ps divss mulss comiss jae movd sub cvtdq2pd cvtps2pd divsd mulsd movsd fldl fstpl call fstpl cvttsd2si mov add cmp cmovl pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub movups push push push push movl nopl mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov xor xor mov xor mov mov xor mov mov mov mov mov mov mov mov xor xor xor xor xor mov mov shld shr or add mov or mov xor xor xor xor xor xor xor xor xor xor mov mov xor mov mov xor mov mov xor mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor xor mov mov xor mov mov mov xor mov mov shr xor mov mov shld add or xor or xor mov mov xor mov xor mov xor mov mov mov xor mov mov shld xor shr or xor xor add mov or xor xor xor xor xor mov xor xor xor xor mov mov xor xor mov xor xor xor xor xor xor mov mov mov mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor mov mov mov xor mov xor mov mov xor mov mov mov shrd mov shl shr or mov mov xor or mov mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr mov xor or shl mov or mov mov mov shrd mov xor shr or mov shl or mov mov xor mov mov shrd shl shr or or mov mov mov xor mov mov shld shr or shl or mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl mov xor or shr mov or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr or mov shl or mov mov xor mov mov shrd shl or shr or mov mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr shl or mov or mov mov mov shr shld mov xor or shl or mov mov mov mov mov xor shr shld or add mov or mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov mov not and not and xor mov xor mov not mov and xor mov mov mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov not mov and mov xor mov not and mov xor mov mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and mov xor and xor mov not mov mov mov and mov xor not mov mov and not xor mov and not and xor mov xor mov mov mov mov not and mov xor mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov not and xor mov mov mov not and mov xor mov mov mov mov mov mov not mov and mov xor mov mov mov mov mov mov mov mov mov mov mov not mov and mov not movups mov and mov xor mov xor mov pandn movups mov not mov and mov pand movups not not and and mov not and pxor movups xor xor xor xor xor mov add xor mov cmp jl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea mov push push mov mov call add cmp jl mov lea mul sub lea mov shr imul add lea xor cmp ja lea cmp jae lea nopl movups lea movups pxor movups movups movups pxor movups movups add movups pxor movups movups movups pxor movups cmp jl cmp jge nopl mov xor mov xor inc cmp jl lea call add add sub sub jne mov push lea push push call add movb inc mov sub push lea add push push call orb add xor nop movups movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups add cmp jl cmp jge shl nopl mov xor mov xor add cmp jl lea call push mov push pushl call add pop pop pop pop add ret int3 int3 int3 int3 sub push push push mov push mov mov mov mov xor xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shr shl or or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr or xor shl xor shr or xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov movzbl mov mov shl shl shr or shr xor or xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl shr xor or movzbl xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shr movzbl xor shl or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl shr or xor shl or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or shl xor movzbl shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl mov mov mov movzbl mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr mov shl or xor pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 sub push push push mov mov not mov push mov mov xor mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr shl or shr xor or xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or movzbl xor shl shr or mov xor mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov shr mov shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or xor movzbl shl shr or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shr mov xor shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr mov xor shl or xor pop mov pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub push mov push mov cmp jl push push lea mov mov lea sub sub shr lea mov nopl lea cmp ja lea cmp jae lea lea cmp ja lea cmp jae cmp ja cmp jae lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor nopl lea add mov mov mov xor mov add cmp jl jmp xor lea add movups movups movups pxor movups add cmp jl push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call add lea lea push call push lea lea call push lea lea call push lea lea call lea add lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor xchg mov xor xor add cmp jl lea jmp movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups addl jne incl add add subl jne pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov test je mov mov mov shl mov dec sub shl and mov mov sub movzbl btc mov movl jmp mov movb incl mov cmp jle cmp jge nopl mov movb incl cmpl jl lea mov push call add movl cmpl jge nopl mov movb incl cmpl jl addl jne incl movl nopl decl mov mov mov shrl mov cmp jg cmp jle nopw decl mov mov mov shrl cmpl jg push lea mov call movups push lea movups lea movups movups movups movups movups movups call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call movups add mov movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups nopw mov mov inc cmp jl movl xorps movl movl movl movl movl movl movl movups pop movups movups movups pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov lea xor movzbl lea movzbl shl or movzbl shl or movzbl shl or mov inc cmp jb mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov cmpl mov mov movl movl jne mov mov mov xor mov xor mov xor xor mov mov xor mov nopl movzbl movzbl mov xor add mov add mov mov xor rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov mov movzbl movzbl mov mov xor add add mov mov xor rol add xor mov ror mov mov xor add mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror add mov mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov mov mov mov xor mov mov ror movzbl mov mov movzbl mov xor add add mov xor mov xor rol add xor ror add mov mov add mov mov mov xor mov ror add xor ror mov mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror mov mov mov add add mov mov mov xor mov ror add xor mov mov mov ror mov mov movzbl movzbl mov xor add add mov xor mov rol add xor rorl mov mov xor mov add mov add mov mov mov xor mov ror add mov xor mov mov mov ror add mov mov mov mov cmp jb mov mov mov lea mov mov lea nopl lea and lea lea mov xor lea and lea mov xor mov and lea mov xor lea and add lea mov xor sub jne mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor pop pop pop pop add ret int3 int3 int3 int3 movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl ret sub push mov push push mov mov mov push mov mov sar sub mov mov test je mov mov shrd mov movl and cmpl jb ja cmp jb push lea add push push call add addl jne incl lea mov call mov add shl cltd sub movl sbb test jne cmp jb nopl addl jne incl mov mov call add add adc test ja jb cmp jae test jne test jne pop mov pop pop pop add ret mov shrd shr mov push push lea add push call add lea mov pop pop pop pop add ret int3 int3 int3 sub push push push mov movb mov movb push mov mov mov add mov mov cmp jae inc inc mov cmp mov cmovae mov shr mov mov shr mov mov shr mov mov shr mov mov shr shr mov mov cmp jne addl lea push push mov call add jmp jge test jne movl lea mov mov mov sub cltd push push mov call add jmp lea mov mov mov sub cltd push push mov call addl mov push push mov call add movl push push lea mov call add addl addl lea push push mov call movzbl add mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push xorps movlpd mov mov push push mov mov xorps movlpd mov mov mov mov nopl mov lea mov not mov not mov add mov mov not mov not mov mov mov not and not and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor add xor and mov and shld xor add mov xor mov mov mov mov mov mov mov shrd shld shr add xor xor and mov and shld add xor xor mov mov mov mov mov mov shrd mov shr mov shld shld xor add xor and mov xor and add xor mov mov mov mov mov mov mov mov shrd shld shld add shr xor add and xor xor and mov xor mov mov add mov adcl jne mov cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl mov xor shld and movzwl xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shl xor mov xor shld and movzwl shl xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl mov xor and shl xor movzwl xor mov mov mov mov mov mov mov mov shld shrd shl shld xor shr shl xor movzwl and xor xor mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor xor or mov mov xor mov or mov mov xor mov or mov mov xor mov or mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov mov xor xor xor xor mov mov mov xor mov xor add mov adcl jne cmp jb mov movl lea mov shl add shl add add adcl mov mov mov mov mov mov mov mov jne cmp jb mov add mov adcl jne cmp jb pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub push xorps mov movlpd mov push mov mov mov shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb mov call xorps movlpd mov mov mov mov add adc shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb pop pop add ret int3 int3 int3 int3 push mov and sub push push xorps movl mov movlpd mov mov lea movlpd rep mov mov mov mov mov mov test jne cmp jae mov jmp mov mov mov mov mov lea movups movups movups movups movups movups movups movups call mov add mov adcl add adc test ja jb cmp jae mov mov test jne test jne mov jmp mov mov and or mov jne shrd and jmp shrd and inc shr mov push add push lea push call mov add mov mov mov mov and or jne push push lea push call movb jmp mov and or jne shrd lea and shr mov add mov sub jmp mov shrd and shr inc cmp jae lea mov add sub mov xor shr rep mov and rep mov mov mov mov mov shrd and and shr mov sub movzbl bts mov lea call push lea push push call movzbl add mov mov mov mov shrd shr mov mov mov shrd shr mov mov mov shrd shr movzbl mov mov shr mov mov shr shr mov lea mov mov call mov cmp jg je sub je sub jne mov movups movups movups movups xor pop pop mov pop ret mov movups mov movups movq movq mov xor pop pop mov pop ret mov movups movups movups movups movups movups xor pop pop mov pop ret cmp jne mov movups movups movups movups movups movups movups movups pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 sub mov push push mov push mov mov push mov mov mov mov nopl data16 movups add movups adc mov movups mov movups movaps movd psrldq movd movaps psrldq movd movd xor movd movaps psrldq movd xor mov movd movaps psrldq movd movaps mov psrldq movd xor psrldq psrldq xor movd xor mov movd xor mov mov xor mov movd movaps psrldq psrldq xor mov movd movaps psrldq mov xor mov movd xor mov movd xor mov movd movaps psrldq psrldq xor mov movd xor mov movd xor mov xor mov mov xor xor mov mov mov xor mov mov movups movups movups movups movaps psrldq movd movd movaps psrldq add movd movaps mov psrldq movd movaps psrldq mov adc movd mov add movd movaps psrldq movd movaps adc psrldq movd movd movaps mov add psrldq adc add movd movaps adc psrldq mov add mov movd mov adc addl mov movd psrldq mov add mov movd mov adc add adc shll shrd mov xor or shr mov xor or xor movd psrldq mov mov add mov movd movd mov movd adc add mov adc xor shrd shl or shr xor or xor mov mov mov movd psrldq movd add mov mov mov adc add mov adc xor shld mov or shl xor shr or movd mov xor psrldq mov mov add movd movd adc add adc add mov adc xor shrd shl shr or xor or mov xor add mov mov mov adc add shrd xor shr or xor add mov mov adc xor shld shr shl or xor or xor mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov adc mov shrd shl xor shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or xor mov xor add mov adc add mov adc mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov mov adc add mov adc mov shld shr xor or shl or mov xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shr or xor shl or mov xor mov add adc shr mov xor shld or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr shl or mov or xor xor add mov adc xor mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor mov shrd shl or shr or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shld mov xor shl or mov xor shr or mov mov xor add mov adc mov mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov mov mov adc mov shld xor shr or shl mov xor or mov xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or mov xor xor add adc add mov adc mov mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr mov xor shl or or mov xor xor add mov mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr or xor shl or mov xor add mov adc shr xor mov shld movl shl or xor or xor mov add mov adc shrd shl or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor shrd shl shr or or mov xor mov mov xor mov mov mov mov mov add adc add mov adc mov shld mov xor shl or mov xor mov mov shr or mov xor add mov adc mov add mov adc mov add mov adc shl shrd xor mov shr or xor or mov xor mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr mov xor shld or shl mov xor or mov xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or mov or mov xor xor add mov mov mov adc add mov adc add mov adc movl add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr or shl mov or xor mov xor add adc add mov mov adc mov mov add adc add adc mov xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr shl mov xor or or mov mov xor xor add mov adc mov mov shr xor shld or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shl or xor mov shr or mov xor add mov adc xor shld shr shl or or xor xor add mov mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov add mov adc mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov mov add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov mov xor add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or mov mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc shr shld xor mov shl or or xor xor mov mov mov add mov mov adc shll shrd xor mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor shl or or mov xor mov xor add mov adc mov shld shr xor shl or or mov xor mov xor mov add mov mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr shl or xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shl movl shrd or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov mov shld mov xor or shl mov xor mov shr or mov xor add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shl shrd or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov xor mov movl shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or or mov mov xor xor mov mov mov mov add mov adc add mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc xor shld or shr xor shl or mov mov xor add mov mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor or shl or mov xor mov xor add mov adc mov shld xor shr shl or or mov xor xor mov mov add mov mov adc mov mov mov shrd shl xor or shr or xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov mov mov adc xor mov mov shld shr or shl xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr movl or or mov xor xor add adc add movl adc mov mov mov shl mov mov shrd mov or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov shr or xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor add mov mov adc mov add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov or xor mov mov xor add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld shr shl or or xor xor add mov mov adc mov mov mov shrd shl xor shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl shr or xor or xor add mov adc mov mov mov xor shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl or mov xor mov xor add adc add mov mov adc mov mov add adc add mov adc xor mov mov shrd shl or shr xor or xor add mov mov mov mov adc mov add mov mov adc shr xor mov shld shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov shl or or xor xor mov add mov adc mov mov mov mov xor shld or shl xor mov shr or mov xor add mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov mov shld mov shl or xor shr mov or mov xor add mov mov adc mov shld mov xor or shl xor shr or mov xor mov add adc shld shr shl mov xor or or xor mov mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd shl xor shr or or mov mov xor xor mov add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor mov mov add mov adc add mov adc shrd xor shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc xor mov shl shrd shr or xor or xor mov mov add mov mov mov adc shl shrd xor mov shr or mov or mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shl xor shrd mov shr or xor or mov xor mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov adc add mov mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or shl xor shr or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc mov mov shld mov xor shr shl or mov mov or mov xor mov xor add mov mov adc shld shr shl or mov xor xor mov or xor mov add adc shr shld mov xor or shl xor mov or mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shl shrd or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl shr or xor or xor mov add mov adc add shrd shr or xor mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or mov xor mov add mov mov mov adc xor mov shrd shl shr or or mov mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl movl or mov xor shr or xor add adc add mov adc mov xor mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc xor shrd shl shr or xor or mov xor mov mov mov mov mov add mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or xor shl shr or mov xor mov add mov mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov shld shr shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shr or shl or xor xor add mov mov adc shr shld mov xor or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov mov mov shld mov xor or shr xor mov shl or movl xor mov add movl adc xor shld shr shl or xor or xor mov add mov adc shrd shl or shr or mov xor xor add adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl or shr or mov mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or mov xor mov mov mov add mov mov adc mov add mov mov adc mov mov xor shld shr or shl mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr shl or or xor xor mov mov mov mov mov add mov adc mov shld mov xor or shl mov xor mov shr or xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shl shr or mov xor mov add mov adc mov shrd shl xor shr or xor or mov xor add mov mov mov adc mov shrd xor shl shr or mov or xor mov xor mov add mov mov adc xor shl mov shrd or shr xor or xor mov add mov adc add mov adc add mov adc add mov adc mov xor mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add mov adc add mov adc mov mov shr shld mov xor shl or or mov xor mov xor add adc add mov adc mov mov mov mov add adc add mov adc mov mov mov shrd shl xor shr or xor or mov xor mov add mov adc mov mov add mov mov mov adc shr shld xor mov or shl or mov mov xor mov xor mov mov add mov mov adc add mov adc mov mov xor shrd shl shr or mov or mov xor mov xor mov add mov adc mov add mov mov adc xor shld shr shl or or xor xor add mov mov adc xor mov shld or xor shl shr or mov xor add mov adc mov shll xor shrd mov or shr xor mov or mov mov xor mov mov add mov mov adc mov shld shr xor shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shl or xor shr or mov xor mov add adc shld shr shl or xor xor or xor mov add mov adc shr mov shld xor or shl or mov xor mov xor add mov adc xor shl shrd or shr or mov xor mov xor mov add mov mov adc xor mov shll shrd or shr xor mov or mov mov xor add mov adc add mov adc mov add mov adc add mov adc mov add mov adc mov xor mov xor mov mov shld mov xor shr or xor shl or xor add adc xor xor mov mov add mov mov adc xor xor mov mov mov shr mov xor shld mov or shl xor or xor add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd mov or shr xor or xor add mov adc add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd or shr xor or xor add adc add adc xor xor mov mov and mov mov subl mov mov jne mov mov pop pop pop mov mov pop add ret int3 int3 int3 push push push push mov mov mov mov lea cmp jbe test je mov sub je push lea add push push call add sub add add push push lea mov call add movl cmp jbe lea mov shr mov push push call shl add sub add test je mov push add add push push call add add pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push mov mov push mov orl mov mov mov cmp jae sub push lea add push push call add pushl lea mov push mov call mov push push add push shr call movups lea xor add mov movups movups movups movups movups movups movups test je xor mov lea push push mov movl movl movl movl movl movl call mov mov sub cmp cmovae push mov add push push call movups mov add inc movups mov mov movups shl movups movups movups movups movups cmp jb pop pop pop xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp loop mov dec inc inc hlt movsl mov dec int xchg and fimul rclb fmull sbb mov jmp orb (bad) jp les test inc cmpsl cld std aad lea loope fwait mov into and or sub add stos lret jae adc sub push dec jne cli or xor mov sbb das shrl cltd add jecxz pop cmpsl sub testb add in mov jge ret lret push xchg xor inc dec mull and adc cs mov xchg in mov shl (bad) mov add xor insl and push psubd shll pushf cvttps2pi hlt lahf cltd mov adc jp xchg xlat mov aad inc mov popf pusha outsb push mov push mov leave leave adc fs add xchg cmpsb cmp sti push sarb push out add (bad) ss jle cmp repnz negb or in and sub lea call mov mov mul lea push mov push call mov lea call add mov pop ret int3 int3 push mov and sub mov xorps push mov mov push lea movaps xor movaps mov mov mov and mov mov shrd mov lea shr push movaps movaps movl call mov add cltd and add mov and cmp jge mov inc mov mov inc mov cmp jl mov test je mov mov mov incl mov lea call pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl mov mov shl push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov push movups lea movl movups movl movl movups movl movups movl movups movups movups xorps movlpd call mov lea add call mov pop ret int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 mov sub lea cmp ja cmpl lea je lea mov mov test je push push push call push push mov call mov lea push push push push call pushl call push call mov lea add mov mov cmpb mov cmovne cmpl mov cmovne sub jb mov cmp jne add add sub jae cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp je xor pop add ret mov pop add ret xor add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp loop mov jmp pop sub rsqrtps adc incl dec push xor popf out (bad) sti into sbb sbb jnp mov cmp mov push fldl ret push jne fbstp cmp add push adc imul mov ss aad adc xchg mov pop (bad) lahf cmp in mov pusha aad mov xchg jne std out rol ss xchg push loope pop pop pop dec xchg push sbb (bad) xor aad lahf and test add push (bad) add mov (bad) push aas mov iret stos (bad) sti (bad) lea (bad) push pop (bad) nop aas ljmp mov jne and popa (bad) and call in jge ljmp push jne mov push push push sahf ss lds add sti imul cs dec or xchg inc mov mov lret mov xchg and jbe inc shll sub fistl fdiv mov pop (bad) mov push stos sbb cld ffreep cmc cmp push lahf in mov shrl mov jne jle cmp in sub jnp dec jge push (bad) (bad) faddp fs cs clc int3 cmpsb lahf out jb cmp mov dec das in and mov push aaa inc push popf test mov subl stos mov xor lods repz notb out aad push jo sub fstp mov sbb in lret loope lods xor inc pop iret mov rcrl cmp cli imul mov or lret pop (bad) in push lahf dec xchg or lods and pusha xchg mov adc outsl mov outsb xlat out dec (bad) mov xor dec rolb lcall mov jle mov lods mov mov in ds daa (bad) dec adc mov in xor adc mulb jecxz popa outsb cmp sbb je xor imul push ja not inc dec sahf adcl outsb in mov jmp or push push rcl sahf inc icebp jle or fbld sbb jmp leave mov or mov add mov mov fldt mov shrl inc nop mov jne jne cmpl fsubl mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 cmp loop mov mov popa out mov iret loop sub addl jns (bad) mov (bad) ficompl pop nop mov test mov sbb stos cmovp mov test aam sbb out mov in loopne xor ljmp cs mov aam sub call bound cmp icebp out fwait sub push pop insb es jnp push dec sbbl adc and mov cmpsb xchg pop or mov xlat ds cmp pop xor inc outsl jbe push dec xor inc pop fmul pop xor mov movsb xchg in inc stos and mov imul ret push mov xchg out cmp mov mov sahf sub ds fstpt pop pop leave lcall frstor mov lret xchg cmp aad data16 lret fwait imul fimul movl pop mov mov jbe xchg int or mov shlb sub shll and dec rclb cmp inc add lock sub insb mov add out aad push jl movsl rcrl loope and ljmp out repz iret out xor xchg cmp and push (bad) (bad) pop or mov subl mov lret dec fistpll xchg sub test push adc mov pushf sub enter decb insl fisub in les sahf fucom fxam js mov (bad) fidiv psrad and push lret pop sub jge mov jnp jb repnz add and dec mov sbb push sub aam and lahf imull das aas adc pop jo (bad) xor (bad) xor test lcall pusha pop aas sbb stc (bad) sbb (bad) inc daa xchg inc mov imul xor mov movsl lds cmp call xchg jle push mov fwait mov iret mov cmp sub outsb inc aam sub sub lret int3 cli (bad) and pop aaa xchg repz out fstpt (bad) js in test lret jnp jg pop xchg int3 ljmp jl jo jne lock cmp daa mov jge jp pop loop ja lock out jb xor data16 test pop fs imul mov or sub push test out mov xchg test (bad) xor or push imul push add (bad) mov xchg (bad) mov adc bound push jl inc cmp xor mov mov repz je iret test clc mov fucomip ret lods inc rorb mov inc mov adcl jo jp jb jp or int inc mov sbb push cs mov cmpsl or and repz inc sub insl pop pop mov sti icebp and (bad) in dec push (bad) sbb (bad) nop mov xor pop lock dec push and cld sbb sbb (bad) (bad) outsl jle sub push jno pop add dec fs lret gs jl jb inc xchg outsl arpl in and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub push mov push push push call mov add mov call mov xor mov xor mov xor mov mov mov mov xor mov mov mov xor mov mov mov xor mov mov xor mov mov xor movq mov mov mov mov lea movq mov mov mov punpcklqdq mov movl data16 movq and movq punpcklqdq push movups aesenc movaps movd pxor movaps movups xor or movaps mov psrldq and mov movd lea mov add mov mov mov push mov mov push mov mov push mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 push mov and sub push push mov push push call mov add mov call mov mov xor mov xor mov xor mov mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov movq xor mov mov mov movq mov mov mov punpcklqdq movl nopl nopl and mov mov movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor mov movd punpckldq movq punpckldq movq punpcklqdq pxor movaps pxor mov xor push movaps movups movaps movd psrldq movd or mov mov and mov push push lea mov mov mov mov mov add mov add mov push mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub lea push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea call movups lea movups add movups mov movups movups movups movups movups nopl aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movups movups lea movups movups movups movups movups movups sub jne pop pop mov pop ret int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp loop mov jmp mov dec adcb outsb icebp out dec imul (bad) jl (bad) das mov or dec or dec jno stos pop cmp push cmpsb enter or add sbb mov adc or cmc push (bad) cmpsl in test in out lods cmp push mov lock and adc movl fnsave xchg cli sbb sub fist mov xchg inc mov sub jae out stos mov (bad) notb icebp (bad) pop pushf mov into shll add push std push dec call jo adc add cmp xchg adc sub repz xchg lods mov pop test cmp mov ret jecxz pop shrl pop out pusha outsb jnp cmovnp fdivs daa fwait in cmp mov outsl pop xchg ljmp cmp rcrb (bad) outsl int into dec test xor mov jl jmp xchg fistp jbe movsl or lods sub pop sub or push enter es rep jl pop cld dec cmp arpl fnstenv mov xlat cmpsl jns pop pop loop xchg fisttp fdiv les inc leave inc jge xchg test lret mov cmp in lods jns sti rorl je out aad jnp mov push cmp xchg xor mov (bad) hlt mov xchg cmp pop (bad) xchg cltd adc test dec jg xchg in pop aad addr16 adc cwtl and and push pop cmpsl les xchg add adc data16 push or lret inc (bad) or xor lret sbbl jl mov mov loopne jb mov cmp sbb and lret sub sbb jns xchg inc mov loope cwtl and and call adc (bad) cmp (bad) in mov sbb fxch dec dec aas out loope mov lods jmp mov cld jmp mov dec xchg lock mov adc stc out sbb iret das xchg dec push in pusha jne mov mov push arpl (bad) xchg lods sub (bad) out in inc mov scas sub adcl add sub stos (bad) in jl test (bad) mov mov vpcmpeqb lds stc adc pusha in cmpsl xchg push (bad) jle imul (bad) (bad) dec push std and and sbb enter mov fwait push pop sub lret xor (bad) xor movsb sbb mov in jne lods pminub in sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups movups lea mov movups lea movaps movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov movups lea movups lea movaps movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret pshufd movd push pshufd mov shr movzbl movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl mov ror pop movzbl or mov movd ror movd punpckldq movd punpckldq punpckldq ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov mov add push call add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push push xor movb movsbl lea xor test je inc push push mov call add test je mov movzbl lea add sub add test je test je cmp ja mov test jne inc cmp jg mov jmp cmp jne test je cmp je inc xor movb mov movsbl test jne cmp jl mov mov pop pop pop mov xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov xorps movl lea movups mov cmp jne mov inc cmp je pop mov pop add ret push push xor mov mov movsbl test je lea mov push push inc movl call add test jne push push movl call add test jne cmp jne mov test jne cmp jne mov mov jmp cmpb je mov lea cmp ja mov add mov mov shr xor mov mov add xor mov jmp mov inc sub shl or mov cmp jg movsbl test jne test je lea lea cmp ja mov shr mov mov add mov test je mov sub lea cmp je cmp jl lea dec mov lea mov lea movb sub jne mov movups pop pop pop movups xor pop add ret cmp jne lea lea cmp ja mov mov call test jne mov jmp lea cmp jne mov movups pop pop pop movups xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov push push call mov cmp jne mov nopw inc cmpl mov je push push push call test jne jmp push call add test jne mov mov dec mov cmp je cmp jne cmpl je push call jmp push call xor cmp push sbb call neg je pushl call mov push call cmp je mov lea push call mov add add push call mov movl add mov mov mov mov mov mov mov mov cmpl mov jne mov lea mov mov or lock jne test jne lea push push push pushl call test je mov mov add push call jmp mov mov mov mov mov mov mov mov jmp pop pop pop pop ret call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov movl call mov test je push call push call xor movl movl cmp jbe nopl mov mov push lea call add test jne inc cmp jb movl pop ret push movl call mov push push push push call mov test jne call mov jmp push push push push call mov test jne call mov pushl call push call mov call test je call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov mov mov call mov mov mov mov lea push mov call cmpl mov movl mov mov mov mov mov jbe cmpl je push call push call pop pop ret push call xor cmp push sbb call neg je pushl call push call pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push lea push call mov lea cmp jne lea mov mov jmp mov mov push lea mov mov mov mov mov mov mov pop push call mov lea cmp je mov mov mov mov mov mov mov lea xor cmpl cmove push mov push call mov lea add cmp jne pop pop add ret int3 int3 int3 int3 mov add mov mov jmp mov add mov mov mov mov mov mov mov test je mov jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test jne mov pop ret mov push mov lea lea push movl movl mov mov mov push mov mov mov lea mov mov mov call add xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp xor sti mov cwtl sbb dec add add jb out movsb adc xchg mov fstp (bad) arpl pop inc clc aas (bad) stos inc or xchg rcl or mov push xchg push mov mov sbb pop mov dec rorb iret adc jae out and adc push xchg aas sub gs ja idiv dec imul lahf loopne and (bad) mov pop jns mov pop xor (bad) mov sbb xchg or and pop pmaxub xlat mov pop xchg pop imul sub sbb shll ss in iret fstp pushf lret ja sbb xchg jge (bad) pusha lret ficomp outsl cld test adc push mov sbb sbb and (bad) stos inc push movsb imul jmp mov jns pcmpeqb mov ret mov test je and mov mov decl addl jne mov test jne test je and mov test je mov decl xor ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je and mov test jne test je mov decl ret mov movl ret int3 int3 int3 int3 ret inc push mov outsl xchg lea push mov test jne call test je xor pop ret movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov lea cmp je mov pop ret mov lea cmp je nopl testb je mov cmp jne push push push push call mov xor mov test jle nopl cmp je inc cmp jl cmp je mov mov movl sub mov jne movl call push mov call add call movl mov jmp mov cmp jl cltd sub mov sar cmp jge lea push push call add test je mov mov push call mov and movl cmp je mov incl mov mov and or mov mov mov mov mov mov mov decl orl mov test je lea push call add mov lea mov nopw mov test je cmp je push call add sub jne lea push call push call push call pushl call mov xor cmp pop pop cmove pop mov xor pop ret int3 xchg xchg insl mov xlat outsb ss pop test adc nop ss or inc xchg (bad) jo sbb mov or repnz or inc js sub pop frstor jl push test or mov mov divl loopne push loop rcrl sub jmp fs cmpsb sub fsts push mov test jne pop pop pop pop add ret mov mov mov movl test je mov mov mov xor cmp cmovne mov add cmp ja jmp mov cmpl jne push mov call jmp mov cmpl jne push mov call jmp mov cmpl jne mov cmp jne mov test je and add mov jne test jne test je and mov test je mov decl mov mov test je mov call mov call push push call add jmp cmpl jl push lea push push push push call test jne mov mov mov mov test je push push call add jmp pushl call movl testl je mov mov call decl mov test je cmpl jne test jne or mov mov mov mov jmp mov cmpl jne addl jne mov test jne test je and mov test je mov decl mov mov movl mov mov mov mov mov test js push push push push pushl call test jne orl mov mov mov mov mov movl movl mov incl jmp call jmp call mov call push mov push call add decl mov test je cmpl jne mov test jne or mov mov mov mov jmp mov mov push call jmp mov mov push call jmp mov mov sub decl addl jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov mov test je mov xor test jns call mov call push push call jmp mov mov movb test je test jne or mov mov mov mov jmp mov test je push call jmp mov push lea push call cmp jne push mov push call add testl je push call add mov mov and cmp jne or mov mov mov mov jmp mov testl jne push mov mov call jmp lea cmp jne mov movb jmp lea cmp jne mov movb mov test jns cmpb je push call push mov movb call push jmp mov movzbl not and movzbl and je push push mov push call add mov mov movzbl movzbl or not test je mov mov call jmp mov test je test jne test jmp pushl mov mov call add mov mov test jne pop pop pop mov pop add ret nop push cmpsl adc jle adc andb fs cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc jle adc (bad) cmpsl adc andl adc andb sub in and sub push push call push call mov add push call call call call push movl call push push call test je push call lea push call test je mov mov call movsd divsd movsd jmp xorps movsd mov test je lea movl push lea movl push push call pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp mov out outsl mov insl lock ljmp jmp mov (bad) pop outsl xor loop (bad) or add vmovddup inc cli or rcrb adc js out mov repz lock fsubl mov xchg sbb xchg or cmp jle adc pop mov adc xchg movsb pop inc rorb popl xor test cmp and clc sbb pop mov xchg jbe stos adc dec loope in clc mov cmpsb fstps push icebp rcl stos loope mov inc pop (bad) int (bad) movsl daa mov sub mov lcall aas test mov sti sbb sbb or in add xor push das scas jecxz lock or (bad) outsl inc iret int ret sub cmp jg inc (bad) andl nop xchg and push (bad) ja cli xchg inc xchg inc mov mov test test pop jbe xchg hlt pop mov inc push push push imul or push pushf pop sub or ds lahf fnsave mov cmp push imul xor lock xchg add or and imul pop jle sub (bad) or call add sub outsb pop mov and cs add and rorl imul sti pop jecxz inc lret add btr adc cmpsb push mov mov sbb jae (bad) mov ret dec and in out mov movsb nop xor ss leave loop into jbe mov push (bad) dec movsb sub and jno inc lds cmpl jne cmpl ja lea cmp je cmpl jne cmpl jne cmpl jne mov test je nopl mov mov test jne test je mov sub mov sbb js jg cmp jb mov ret test jg jl test jae xor ret or ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push push mov xor push mov mov push movl add mov lea adc push lea mov push lea push pushl call mov xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor add rol push lea inc push lea mov push lea push pushl call mov test je xorps add movl mov test je mov mov mov mov jmp mov movsd ucomisd mov lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 push mov and sub push push mov xor push mov mov push add push adc mov lea push push lea mov push pushl movl call xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor push add rol push lea inc push push lea mov push pushl call test je xorps xor cmp jbe lea mov test je add movl mov test je mov mov mov mov jmp mov mov inc add cmp jb movsd ucomisd lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl ja lea cmp jne cmpl jne xor ret mov ret int3 int3 int3 int3 cmp loop mov push fistp add pop cwtl (bad) stos xchg push jae adc scas loopne (bad) notb push int3 test and cwtl mov or movsl aad orb iret jl push jl push add (bad) push adc dec dec push ss test repnz cmpsb addr16 arpl push pop dec mov jnp dec test dec loopne inc push rorl scas mov jle lcall (bad) cmpb pop inc test inc ret mov pop rcrb mov loopne es (bad) mov movsb arpl mov jns (bad) in push call lret (bad) fstpt xchg push insb dec inc rcll and imul xor add stc and push dec xor cmp outsl xor scas stos mov push inc adc test (bad) xlat aad xchg cmp adc mov mov aad xor in mov ds popf lock popf sub js push pushf inc and push add popa mov sbb ss jns push push inc or out dec cmpl add cmpsb lret jo dec or lea dec test enter (bad) ja inc xlat pop es sbb jns loop aad push xchg fwait pop sub jp push xchg out ret sbb jae fildll imul js dec jbe stos (bad) pop pop mov scas fwait ss jg (bad) xor inc add xor fiadd loop cld xchg ret ret add repz test mov sub repz scas lcall (bad) jae sub xor out mov xchg imul xchg insl in leave or mov shlb fcmovnbe xor inc push stos mov pop andl lds daa arpl rdpmc jns cltd js sub jb cmp mov push mov ret sbb cmc icebp push cli shrl out lret jg orl and mov add cmp sub push push mov mov rolb int3 addr16 mov ss out leave pushf ret mov mov xchg xor add and fild aam roll out fnstenv mov fwait in xchg xchg shr inc mov jl jg pop pop dec xor or sub loop loop mov sub jmp mov add xchg inc out jmp scas mov adc mov adc lea adc lea adc mov adc lea adc mov adc mov adc inc and cmp je cmp jne push push call mov xor test jle push mov nopl mov mov mov cmp je push push push push call mov inc cmp jl pop push call pop xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push push push lea movl push push mov mov push push push call mov mov test cmovne push push test je push push push call add push call add jmp push push call add push call add mov test je push call call call int3 int3 int3 int3 test jg mov ret cmp jg je dec cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je cmp jg je cmp je cmp jne mov ret mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je sub je sub jne mov ret mov ret cmp jne mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp je mov ret mov ret xchg dec (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc add add add add push add or push push or push push push push push push or or push push push push or push push push push push push push push push or push push push push push push push push push push push push or push push push push push push push push push push push push push or push push push push push push push push push push push push push push push push push push push push push push push push push wbinvd adc push push push push push push push push adc add push add push push push push push push push push push push push push push push push push push adc push push push push push push push push push or push push push add push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push or push adc push push push push push push push push push push push push push push push push push push push push adc pop add cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add add or or or add add or add or or or or or add or or or or or or or or or or or or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or or or mov mov adc (bad) cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc dec pop ja jmp push clc mov inc and fwait jle mov push pop (bad) fidiv data16 (bad) fdivp xchg cli mov movzbl rcll jl push inc lahf (bad) xor push or in and lea push push pushl pushl pushl call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov xor push push mov movl mov mov mov push test jne mov and cmp jne or mov mov mov mov pop pop pop pop add ret mov mov test js cmp jbe mov add mov test jne mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test je mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test jne mov test jne mov or jmp mov cmp je cmp je lea nop mov add test jne mov sub sar shr add add mov add push mov call mov add mov test je mov lea push shr push pushl push pushl push call mov add xor push push push mov call xor mov test je lea push call mov add test je pushl push push call test je xor mov jmp mov call xor call pushl mov call add call mov test je mov mov lea mov add test jne mov sub sar lea mov add test jne sub sar je cmpw jne dec sub dec lea mov add push call add mov test je push lea mov add push push call mov xor add mov mov call mov or jmp mov mov shr jmp mov lea shr xor mov lea mov push call mov add mov dec cmp ja jmp push push jmp push push mov push push call add call push mov call add call movl mov call push mov call add call mov mov mov test je testb je mov mov test jne push lea xorps movups push movl mov push push shr and push push pushl pushl call test jne mov call test jg call jmp mov push push push push call add jmp push call mov call push mov push push push call add jmp call movzwl or mov lea mov movl mov test je mov mov mov mov mov movl pop pop pop pop add ret mov mov movl pop pop pop pop add ret test jne or mov mov mov mov pop pop pop pop add ret mov mov call mov mov call mov mov call nop popf xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc stc aas daa add jg je cmp jg je test je cmp jne mov ret xor ret mov ret cmp jne mov ret mov ret cmp jg je cmp je cmp jne mov ret mov ret mov ret cmp je jmp mov ret int3 push mov mov lea push push pushl movl pushl call mov call mov pop ret int3 int3 int3 int3 int3 sub push mov push add xor push push mov call push mov call add call cmpl mov mov jne movl jmp cmp jne mov test je mov add and add add mov test je push push push push push push push push call test je add and add mov test jne push call add mov test je mov mov test je mov mov lea mov mov mov mov mov mov mov mov mov lea mov movl lea mov movl lea mov add movl mov mov test je push pushl push call mov add mov mov mov add and add mov test je push push push push push push push push call push push push push push pushl push push call mov add and mov add mov test je mov mov jmp call mov call mov jmp mov mov jmp movl mov test je push call movl mov mov mov mov mov mov mov test je pushl pushl push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp (bad) xor enter test daa repnz mov add fisttpl lcall jns (bad) dec push fstl or (bad) int3 test cmp aaa roll and pop fidivr jl push test push pop mov mov daa sbb adc es lds inc and push popa aam add test or jnp jnp icebp cmpsl jmp (bad) invd ja pop add and in jp je lods push mov mov push dec nop sahf fistpl mov pop int3 movsl cs decl xchg dec dec cmp jecxz pop out mov dec pop add movsb fisub adc fcompl movsb sbb js xchg cmc jmp jo mov es icebp jge or stos xor cmp fstpt xchg stos pop jecxz xor xchg or ljmp mov adc das mov insb arpl cmp jmp pop mov stc xchg dec clc cmp xchg das dec ds cli pop outsl mov xchg cli jecxz xchg out xchg call pushf dec arpl imul out sti push pop faddp inc les int3 mov daa jecxz cmp pushf in mov loope cs jbe jnp xlat adc pop out scas xchg mov fild fcmovbe and mulb int scas mov je dec mov adc push and out cltd je xchg sub mov ljmp mov cmp sahf add push gs cs or insl scas or xchg fsubs adc push int add jns fidivl xor imul test dec repnz loopne (bad) fisttpl inc dec dec pop clc mov pop (bad) int dec pop push mov cwtl movsl sbb mov fnstenv xchg cs or xchg sub jo xor pop add xor pop dec lret inc inc jne inc xchg aam mov jmp sub and inc add adcb sub icebp imul popa js pop mov cmpsl je add rcrl lods mov into or xchg jb push aam mov inc jge fistl sub mov mov aaa insl pusha pop testb adc ja fnstcw mov sub sbb dec test rorl out xchg sbb inc inc jno xchg mov movsb sbb jno movsb inc std lret xor shl nop fisubr add test pushf mov cmp test mov rcrb dec pop jge xor lods rcr inc addr16 mov cmpsl xor into movb fldt addr16 push xor mov lret or adc push jg inc (bad) testb ja cltd jge pop cld pushf das mov sbb rcrb sub std inc imul incb jne xor sti movl xor in adc arpl outsl jge (bad) pusha int3 pushf mov (bad) mov repz mov add (bad) pop xchg ret mov movsw mov jle or pop jg jmp mov lods cwtl stc nop mov lret adc fisub iret test pop outsl aad mov test adc fimull (bad) mov out and xlat orl lcall (bad) jecxz pop xor pushf sub imul or fistp ret int3 push push xchg inc movsb jl xor mov les out mov xchg adc mov xor mov lock adc adc xchg cmpsb loopne mov push aaa mov in rcrb mov std out pop test neg mov ds xchg jle out movsb mov fimull dec mov cmpsb scas pop and int inc rcrl test enter lret bound jae pop jp and pop xchg outsl push enterw or jnp lods inc test outsb das loope lcall imul and mul int3 dec jl or repz gs cmpsl fbstp pop les add nop sarl xchg scas adc sti xor lods adc stos sub jb test cmp (bad) mov mov adc in pop jns scas cmp mov fsubrl pusha add lret (bad) mov jp cli sbb sub and insb scas test andl fisttpll mov ret jno pop gs push cmpsb imul jmp into aaa cs dec ss loop push pop mov add jne cmpsl cmpsb popa cmp ljmp fistpll rorb decb scas fwait push sarb or xchg xchg inc fwait sub shlb adc cmpsl adc lahf cmpsl adc mov cmpsl adc sahf cmpsl adc mov cmpsl adc popf cmpsl adc mov cmpsl adc pushf cmpsl adc popf cmpsl adc mov cmpsl adc lahf cmpsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je mov call movl andl mov test je and addl mov jne test jne test je and mov test je mov decl lea push mov push push call add pop ret int3 int3 int3 sub push push mov push mov push addl mov jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov testl je push call mov mov mov lea add mov lea movl movl mov mov mov mov mov movl movl movl movl mov mov mov mov test je and mov test jne test je mov decl testl je mov test je push push push push push push call add mov mov test je push push call add decl mov test je cmpl jne test jne or mov mov mov mov pop pop pop pop add ret mov cmp jne pushl call jmp push call add movl movl jmp int3 int3 int3 int3 int3 int3 push mov and push mov push mov testl je cmpl jne mov cmp jne pushl call jmp push call add mov movl movl test je and addl mov jne mov and cmp jne and mov test je mov decl pushl mov pushl call add pop mov pop ret int3 int3 int3 push call pushl mov call add call mov pop ret int3 int3 cmp pop mov push inc ds pop outsb enter (bad) divb loopne add dec (bad) xor test movb in invd (bad) loopne xor jns dec adc sbb rcrb addl ss sbb xchg sahf lds scas jp repnz scas dec or cmp xlat cmpsb sub adc mov cmp je ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push mov movq mov movq call push mov call add call mov mov mov call push pushl call pop pop pop test je pushl call add xor add ret call int3 int3 int3 int3 int3 int3 push push push push mov mov call mov add test jne pop pop mov pop ret mov push push push push push push mov mov call add test jne call mov call push mov call add call mov cmp jbe pop pop mov pop ret mov xor push mov call movzbl jmp pop pop xor pop ret pop pop mov pop ret pop pop mov pop ret pop pop mov pop ret nopl das cmpsl je sbb popa or out cmc or adc add add add add add add add add add add add sub mov push mov push push push mov mov push mov call incl mov push call push call push push lea push push call push mov call mov dec mov cmp jne test jne mov jmp xor push call test je pushl call push call test je cmp je cmp jne pop pop pop mov pop add ret pop pop pop xor pop add ret call int3 push push push push call test jne call mov mov jmp xorps movl or movups mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov cmpb jne mov mov mov mov movb lea jmp cmpb jne mov mov mov mov mov movb lea movl movl movl movl push lea mov mov movl movl mov test je movl jmp test je movl testb je orl push lea xorps movups push movl mov push call test je mov call cmp je call test jg call jmp call movzwl or mov movl mov test je mov mov mov pop mov mov pop pop pop ret mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push push mov mov mov lea cmp jne mov mov mov movb jmp lea cmp jne mov mov mov movb mov push push lea test jns call cmp je cmpb je push mov movb call push jmp cmpl jb mov xor test je mov test movzbl mov cmovne mov mov or and movzbl movzbl cmove mov not and and testb je mov movb test je and mov test je mov decl test je movzbl push push mov push call add mov mov movzbl movzbl or not test je pop pop mov mov pop pop jmp mov test je test jne test jne test jne or mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov push push mov testb je movl mov mov jmp movl testb je movl mov mov movl mov mov jmp movl movl lea movl push lea movl push lea push lea push push call mov cmp jne mov call test jg call jmp call movzwl or mov lea push mov push push pushl call test jne jmp xor test jle cmpl mov movzbl cmova cmpl ja cmpl jbe or lea movzbl push movl mov mov push push pushl call test je pop pop xor pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb push mov jne mov mov mov mov movb jmp cmpb jne mov mov mov mov movb push push lea push push call test jne push mov call test jg call jmp call movzwl or mov movl mov pop test je mov mov mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movb test jne and cmp je mov incl mov and or cmpb mov jne cmpb je mov mov mov movl movl movl movl mov movl movl call mov mov mov mov push and movl push and push cmove xor test mov lea push push push cmovne push push push push call test je cmp je mov call mov jmp mov jmp xor push call test je call cmp jne xor pop pop add ret and cmp je mov incl mov and or cmpb mov jne cmpb jne test jne or mov mov mov mov xor pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je push nop cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop movl ret mov pop movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop ret int3 sub push push push push push mov xor call mov xor test je mov cmp jl jg cmp ja lea cmp jb cmp jbe mov jmp mov mov test jne mov test je mov nopl cmp jne push lea push call testl jne test jne lea push mov push push pushl call test je mov mov test je or mov mov test je mov mov test je nop mov mov test jne jmp mov test je cmp jne mov jmp nopl cmp jne mov mov test jne mov test jne push call pop pop pop mov pop add ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and mov sub je sub je sub jne lea call test je push call mov mov pop ret xor mov pop ret mov call mov pop ret mov call mov pop ret int3 ret inc lret jge xchg iret fs aaa dec test aaa pop int xchg inc andb push mov sbb fwait xchg and mov movsl inc stc les or sub addb jl push push xchg adc out sar push in mov cmpsl test ljmp lahf cmc into sub jmp fs cmpsb sub sub out cmpb mov popl add adc aas mov or jmp ret or mov lods arpl int3 mov in lods mov sub sub cmp int adc pop (bad) fst es pop mov in out jbe sub scas sub addb into jecxz pushf cmp mov mov lret and leave addr16 test jno add mov jnp cmc (bad) ficomp fnstcw jae out mov in test ja mov mov dec push push mov rcr mov clc jns mov sahf adc lea or fnstsw xor push cmpsb jne inc push and mov mov pop inc sbbl fcmovnb lock ljmp loope mov push pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp cmpsl outsl in bound test call jg and mov xchg fwait xchg or mov scas jl push mov lods jg push mov das xchg mov in jecxz jno xor std xor sti jb dec ja adcb out inc adc add add test test jge inc xlat (bad) mov jg stos out int3 movsl inc mov sarl sbb cmpsb fsubrp push pop loop nop cmp mov in mov cmp mov cmp mov or cli mov jno mov imul addl movsb adc jl mov jecxz shlb sbb dec lahf clc cmpsb sub add and add add jne xor ret and addl mov jne test jne test je and mov test je mov decl xor jmp int3 int3 int3 int3 int3 int3 movl mov test je mov mov mov mov mov ret mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push lea movl push push push push call cmp jne call pop ret xor pop ret int3 int3 int3 int3 push cmpl movl je push lea push push push push call cmp jne call pop ret xor pop ret sub push push mov movl mov cmpl je pop mov pop add ret push mov lea push push push call cmp jne call pop pop pop add ret push push push call test je push push pushl push call test jne call pop pop pop add ret cmpl mov cmove mov test je testl jne test jne push push call test je orl testl je push mov call add test jne testl je push lea movl push push push push call cmp jne call jmp mov call cmp je call pop pop pop add ret lea mov call test jne cmpl mov jne orl xor pop pop pop add ret int3 push push mov push push mov mov mov push test je cmpl je cmpl jne addl jne test jne test je and mov test je mov decl mov xor mov mov mov mov mov mov mov testb je mov jmp push pushl call cmp jne call mov mov mov test je mov call push push call add decl mov movl test je cmpl jne test jne or mov mov pop mov pop mov pop pop pop ret test je cmpl jne test jne pushl call orl movl mov mov mov test jne cmpl je test je xor nopw mov add mov cmp je push call movl mov test je push call movl mov add cmp jb mov call push mov call add call mov mov movl mov and cmp jne mov cmp je push call movl mov test je push call movl mov mov mov mov mov mov mov decl orl mov test je push call add mov decl pop pop pop pop pop ret int3 int3 int3 int3 push push push push mov push mov cmpl jne movzwl push push push call mov cmp jne pop pop pop pop add jmp movzwl mov push mov push push call mov add test je push call pop pop mov pop pop pop ret cmpw jne push lea movl push push push pushl call pushl push pushl call cmp jne call cmp jne mov orl xor pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 cmp inc test insl mov cmovno loop or pop cmpl cwtl sbb aad inc into jae add mov adc xchg ret mov shrb fsubl mov adc inc lock inc outsb call mov popl adcl mov and cwtl dec push xchg int inc (bad) gs jp sbb or loopne movsl cltd jae xchg das cwtl mov (bad) sub cmp mov or out dec jne clc or mov cli int cmp ljmp jmp mov lods dec add lock movsb jae mov iret mov fstps jne sbb pushf mov int mov add sbb test push (bad) rorl pop push das xor push push dec push mov loop scas bound dec frstor cmc adc adc lahf xor aam mov dec or pushf in jmp addb mov sbb pop sub jne scas (bad) jne push push jne or cmp mov mov mov mov mov push (bad) xchg adc icebp test lea and and (bad) xchg pop daa aam cli out and in int3 fldl sub jno imul xchg aam fucom adc and (bad) xor pushf cmpsl jno xor mov inc or into or shrb sub mov lds popa push add sub mov xor cli jnp repnz sbb sub les addr16 int (bad) hlt das aaa stos jmp mov adc (bad) mov push add push lods lcall mov out pop pop pop pusha mov push rorb jl sbb push lcall fcomp in jae sti (bad) xor push mov pop pop aas icebp mov jge xorl jge,pt sbb fldcw adc push push push mov movl mov movl xorps lea lea movups movl orl movups movl testl je mov or mov push push lea movl push lea push push lea push pushl call mov test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl testl je cmpl lea jne push push push push pushl push call test jne call test jg call mov mov mov call pop pop pop pop add ret call movzwl mov or mov mov call pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov mov test jne testl mov jne cmp jne mov jmp cmp jne mov push push mov call add test jne mov test jne cmpl push lea jne push push lea movl push push push push lea movl push movl movl movups push pushl movups call cmp jne movl mov pop pop pop pop add ret lea movl movl xorps push mov movl movups movl lea push mov push push pushl pushl pushl call test je mov test je mov incl lea mov test jne test jne or mov test je mov incl lea mov lea mov mov mov mov mov mov call pop pop pop xor pop add ret call cmp je call pop pop pop pop add ret mov incl lea mov test jne mov test jne or mov test je mov incl lea lea mov mov mov pop mov xor mov pop pop pop add ret call int3 int3 sub push mov push push mov mov push mov and mov cmpl jge test jne test jne and addl mov jne mov and cmp jne and mov test je mov decl testl je xor xor jmp mov mov mov mov mov call cmp mov cmove lea push mov call push mov push call add jmp test jne mov test je lea push push mov push call mov add cmp jb testl je mov xor nopl lea mov push mov push push mov call add cmp je cmp je push push lea mov push lea push push lea push pushl call cmp je mov test je lea push push mov push call mov add cmp jb testl jne jmp test je and addl mov jne mov and cmp jne and mov test je mov decl andl lea push movl movl push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl lea push push jmp call mov cmp jne lea push push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl cmp mov cmove lea push mov call push jmp lea push push mov push call add mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 cmp cmpsl outsl cmc bound dec inc mov sbb in ss imul dec icebp push repz cmpsb loope bsr push xor test mov lahf xchg xchg test inc addr16 push int inc test mov push push cmp sub jmp mov mov mov push icebp mov rol gs pop fisttpll hlt (bad) dec cmp (bad) mov and pop push and fwait jecxz aam mov sbbl int3 dec in sub add lods cmpsb xchg loopne fsubrl stos dec stos loope out sbb leave xchg mov loope push pop add cltd aam (bad) cmc dec test in shlb test sub cmp and push mov mov repnz and inc sub add add cmovne mov mov test je push push lea push push lea push push push push push call test je or add ret mov push call test jne call add ret xor add ret int3 int3 int3 int3 cmp sub add jmp fisubr popf jb (bad) out dec faddp jl pop into inc (bad) das mov xchg lahf fwait push adc mov jns cmp sarl call pop lretw (bad) stos dec nop clc in mov or cwtl pusha and imul ljmp push lods data16 in (bad) data16 cld jb es leave movsl or push pop aaa std mov dec mov aam xor or call push mov inc ja mov aaa cld jle jp stos jno add adcl add loope pop cwtl ficom add and sbb jle les les xchg push pop das test sub sbb mov cmp or icebp (bad) sub arpl pop ja int3 call pop or test loope enter (bad) push hlt test push scas mov out (bad) pop jle or cmc fs hlt scas out stos fdivrl jnp mov jns je push mov dec jecxz jo push dec rclb cld stos ret dec loop (bad) out das jecxz xchg popf stos cmp mov and movsd sub ucomisd push mov lahf test jp xorps movlpd mov mov mov mov pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push push mov mov mov test je push cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop pop movl ret mov pop pop movl ret int3 push mov push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov lea lea mov movl movl mov mov mov mov xor mov movl movl movl movl pop ret int3 int3 int3 push mov and sub push push mov push mov mov test jne mov pop pop pop mov pop ret testb je mov call mov mov mov add mov adc cmp ja jb cmp jae or or mov mov mov mov mov mov mov test jne or mov test je mov incl mov lea mov mov mov mov mov addl adcl xor mov xor test je mov mov mov mov mov cmp jb ja cmp jb cmp ja jb cmp ja mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jbe mov mov mov mov jmp mov mov mov or test jne mov mov movl movl movl test je test jns mov mov mov call xor pop pop pop mov pop ret mov mov mov call xor pop pop pop mov pop ret mov mov mov call pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp adcl lret mov test jg iret pop push daa push (bad) mov adcl add sub push lahf rolb push cmpsl jne or adc inc out mov ja out pushl adc cld push fbstp ja push dec mov pop in lret mov pop push mov lock hlt cmp lret mov inc cld jle popl ret divl scas shrl imul sbb jnp fsts mov dec jle loop outsl dec outsb add mov xchg sub das lods arpl in xchg or xor sub out mov loopne xchg xchg in das into ds and outsb lret pusha push addr16 push and fstl in and push push mov cmpl jne mov pop mov pop ret mov or je mov call mov mov push push push push pushl push call add xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push mov xor mov test je mov mov test jne test je mov cmp ja jb mov cmp ja mov call cmpl je mov or je mov call mov mov push push push push pushl push call add mov push call mov add xor test je mov mov test jne test jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push push mov movl push xorps movl mov movl lea movups lea movl orl push lea push lea push push lea push pushl mov call test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 sub push push mov push mov mov push mov and mov mov test jns mov call mov cmp je cmp je cmp je test je mov call testl je xor xor jmp mov mov mov mov push lea mov push push call push jmp test je test jne sar lea and push push lea push pushl jmp test je lea movl push mov push push movl call add cmpl je cmpl je push lea push push call add movl lea movl push push push lea push lea push lea push push lea push pushl call cmp je push lea push lea push pushl jmp call mov cmp jne push lea push lea push pushl jmp cmp jne push push lea push push jmp cmp je cmp je mov call jmp push push lea push push mov push call add mov mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 push push mov mov test jne pop mov pop ret push push push push push push push push push call mov test jne call pop pop mov pop jmp lea push push call mov add mov test jne pop pop pop mov pop ret push push push push push push push push call mov test jne mov call push mov call add call movl mov call pop pop pop mov pop jmp mov pop pop pop movb xor pop ret int3 int3 int3 int3 int3 cmp push sub pop in cld add sub call jno mov aaa loop ret xchg push jae and dec sub xor imul jmp cld sbb fiaddl pop mov clc add int mov inc dec pop repnz test sub js push and lcall out mov jbe and xorl pop fcomip out dec frstor dec aam stos leave xchg fs into ds and aas xchg fcompl icebp (bad) repz pop sbb stc mov pop inc jae inc in xlat stos mov jmp aas xchg loope push and fistpl sub int3 mov cli stc out pop fldcw mov bound sti jg sub imul lods pop je mov add jmp or outsl lahf sub stc push lock mov dec or test cmpsb aad mov ficompl addr16 sbb add pop outsl inc push inc aas fbstp cmp adc test clc mov add arpl mov push pushf pop mov ret xchg clc add int and sahf push or pop adc lcall pusha mov xchg aad decb out or es or loopne jle lds pop mov fs outsl adc (bad) fisttpl gs out fisubrl fldt rcrl xchg loopne pop sub insl repnz (bad) xchg aas mov jle cmp or mov adc adc cmp dec rcl out shrl loope or and push fistpl add into and iret (bad) lcall xchg mov jns scas rorb rcl and ficoml add adc add lea push push push push call test jne xorps mov movups push mov call mov mov mov call test jne push call add test jne push push push call mov mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je push push push call mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je pop pop add ret mov mov call call call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call int3 int3 int3 ret pop lahf lock cmp in add lods ds ficom mov dec push xor test adc stos jecxz fstp lds movl loope cli sub add mov mov out daa sbb jg insb mov jle push and cmpsl das aad jno jae push and sbb (bad) out mov pop add (bad) mov and ds xchg dec mov cmp pop fidivl lret xchg cmp popf mov int3 mov xchg cmpsb xchg pop lcall loop lods negb int ficoml mov (bad) fwait leave in mov push jge daa (bad) add mov outsl or enter mov test jg hlt push and pop xorb sti jg xchg sbb pop pop mov les push jnp pop jp jnp mov sub int3 cmp or loop or cmp push xor dec stos cmc push mov cs incb and in mov adc js leave xchg xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs adc xlat cmpsl adc fsubs adc or or or or or or add or or add add or or or or or or or or or or or or or or or or or or add or or or or or or or or or or or adc fsubs adc fsubs adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs or or or or or or add add add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or push add add or nop cmp cmpsl adc fsubs adc fsubs adc int3 int3 int3 int3 int3 int3 int3 sub push mov mov push mov push push test je mov mov mov mov and and cmove xor test cmove jmp push push push push lea call mov test je xor push pushl movl push push push push push push push pushl call mov test jne cmp jne push push call cmp jne call push mov call push call or pop pop pop pop add ret mov push call test je cmp je mov call mov jmp mov jmp xor push call neg pop sbb mov pop pop pop add ret int3 int3 cmp loop sub xchg inc ret (bad) cmp arpl mov mov (bad) leave adc pop sub shr xor mov pop xlat add add cli xor mov popf mov jne in sub daa fnstenv push adc clc dec push sub loopne mov lahf stc dec (bad) cmp add xor fisttp jns outsl arpl rorb jge mov cmp and dec cmp xor push mov xor pop pop dec ja test lret scas xchg xor xchg sti hlt and pop mov xchg div jno bound int3 pop or pop fstp xor loope pop movsb adc mov cwtl push lcall push pop xor repnz adc mov cmp push mov out sub rcll dec push xchg fisttp mov push enter stc add adc stc mov mov push mov popf (bad) jnp mov lods test cwtl clc jno fdivr inc lret jmp addr16 loopne pop xor das push dec jno mov adc push or shll mov rol fs cmp jecxz repz mov and inc jb cmc movsb push loope out movsb hlt bound push clc pop rorb xchg (bad) fdiv push mov int movl aam ret (bad) jge mov jo jbe fsts or and sbb mov mov inc pop inc mov mov and aam cmp les jp out dec fisub in mov jbe int ret sub cmp ror test add mov and lea or (bad) aaa scas in ret jecxz jp push pop jns sub mov mov push mov (bad) mov add sbb mov (bad) adc lea and loope pop push sub clc int3 add jmp ds jno stc sub into (bad) test (bad) (bad) mov stc in test jnp xor mov adc mov out mov mov cmp and outsl dec fadd (bad) enter (bad) pop mov mov iret dec add bound cs mov pop xchg stos push addr16 sbb dec cli jbe mov pop repnz mov push pop and mov outsl mov stos sbbb psubsb bnd cmpsl jns scas cmpsl in adc icebp imul out pop push std dec cmc mov mov popa jb ljmp stos or inc std inc mov cmpxchg nop add cmpsb arpl ret sbb adc sbb inc fdivrp mov mov pop aad push mov mov cmc out (bad) lods mov div dec mov adc push inc mov push loop bound mull imul (bad) xor xchg pusha xor adc mov into scas jnp cs cmc cs int3 push or mov mov out int (bad) cmc rorb pop or cwtl aam ficompl ret outsb stos xor mov lds pop in nop jbe inc and sar pop sub mov (bad) pop dec jecxz lahf jp mov rcll sub push xchg shrl cwtl test jae lods mov sbb cmp loopne test mov jbe jns jae push loope cmp cmpsb pop (bad) mov movsb iret jp push pop sbb push adc fldz jnp iret cs sbb jbe xor jg rolb mov int xchg dec scas push dec (bad) decl pop xlat int3 adc xchg mov das and jecxz lods jns sbb pop push adc div mov ds adc (bad) (bad) push rclb insb gs test scas inc fistpl sub lcall cld test repz jo sbb cli out test jno mov sbb dec ja push push jno aaa mov pop (bad) into dec jg int3 push push in insb and push icebp or je outsl dec inc sub mov cld xchg sbb out inc enterw push loop mov cltd or mov vpackssdw and int and js cmp jbe fldcw or cmc jle mov xchg aam je,pt lods sbb cmc mov jns mov push mov cwtl add popf sbb addr16 mov in push mov push mov lea ret xchg repnz mov xor cmpsl mov cmp test ja mov push jb mov and jns out call dec push pop xor pop je (bad) xor add push sbb push mov pop xchg (bad) mov ljmp xchg test jmp (bad) stos rcr add cmpsl pop rcrl (bad) mov pushf mov lock push xor cmp and rcll fwait ret icebp or pop je imul xchg fisttp jge mov mov mov inc inc xchg xor and pop in jl or nop into into xchg mov (bad) fstps mov or loopne sbbl int pop pop jmp jne dec (bad) jbe sub movsb push ljmp mov lods not (bad) cmpsb sbb inc lcall into test jg les inc in imul repz cmp (bad) and imul xchg leave pop pushw lods int3 mov hlt cltd fcmovu call add jb push ds cmp inc mov cmp cmp xor lret arpl enter dec xchg fwait pop cmp lahf (bad) bound outsl test fdivl rcll mov lock xor (bad) lock int xor ret pushf in jg mov leave xchg adc inc mov xchg xchg pop xchg cmpl or add fsubrl push add add inc mov mov add movsb loop das mov jecxz mov lock dec sarb outsb mov or rcr xchg jnp sub jle pop dec pop xor faddl jg add loop addr16 nop pop out loop cmp add fldcw mov mov ret xlat pop cmc insl stc (bad) xchg lock rol push jmp out lds jae lahf inc inc push cmp sahf ja cmc addb movsb mov inc out sub xlat cmp fnsave aad pop jnp xchg int lods add push mov jl lret addl jl aas jmp sahf repz jne ja jb je (bad) out jg dec add notb mov (bad) ret mov sbb out fiadd in xor mov add mov dec sub cwtl movsb sub call in scas pop add cmp pop pushf push pop fwait or sahf mov (bad) dec test mov pop cmpsl mov sahf das fnsave dec fsubs (bad) loopne arpl rcll out cwtl ret jae mov mov imul stos notl adc out mov pushf cmp out sub sahf ret loop mov sahf lahf mov dec (bad) mov popl fwait pop and scas push bound (bad) dec cmp rcrb mov cmp gs add mov cmc stos xchg into lret cmp dec addr16 outsl and cmc sub add add add mov fldenv inc xchg adcl cwtl mov repz (bad) mov mov jmp xor xchg arpl dec jle mov jnp xor cmc sub add pop dec xchg jno jns xlat bound xchg in pop repz and dec mov dec outsw sub pop das xlat add aam inc push jmp mov sti in push jbe push unpckhps cmp push movsl mov adc mov push jg sub sbb jno in fwait arpl inc xchg sbb mov (bad) pop scas inc fbld jg in (bad) fnop (bad) rcll cs shrl (bad) ficompl inc adc cmp fsubl out bound cli jge push (bad) xchg test sub aad adcb fldl shrb sarb or das idivb outsl pop dec cmp xchg push pop pop ss and hlt xchg inc cmp popa sub fwait rolb cmpsb mov outsb sahf or push test jmp pop pop xchg fisttp push and xor mov push sub mov test adc ds addr16 add mov dec insl in lea push in or repz aad popf mov cmp dec std pop test mov or rolb int3 jo mov fcomip pop (bad) divl jno aad adc leave inc fs and rorb fdivs das push mov ret jb add cmc movsl fwait in mov jg cmp out xchg aam lcall cmp mov lahf rcrb nop pop imul sbb mov test jg int3 mov je dec lea dec pop mov push out mov jb imul out push scas push (bad) leave test lret inc jl dec xor ret sbb outsl adc in imul insb and mov cmp dec (bad) jns mov leave inc xchg dec mov and leave enter fsubrl or das cmp mov pop lahf jo cli adc sbb sbb pop pop leave sub cltd stos lods xlat mov in adc pop mov movsb cli xor pop fstp imul mov pushf (bad) dec mov popl and cmpsl (bad) test mov into jne pushf loope repnz inc mov (bad) dec pusha fsub negb cmc test mov fwait ljmp jl jo lret stc mov push mov cmc cmp sbb add mov and outsl add aam stos jge test aam mov or mov and or fstpl scas mov push add jno and pop iret pop js das (bad) sub lods stc test push jns adc (bad) add je fistpll jge inc fstpt in cmp cmpsb push popa lds leave add pop ds push loope dec mov into mov adc dec sbb mov in mov arpl mov adc xor push cli icebp stos cmp icebp je or (bad) fdivrs out das xchg movsb xor and xchg pop mov fucomip loop mov add int3 fistpl jb add push pop out aad stos push popa pop xchg adc push add inc push ja sarb inc ds fldl adc inc repz mov aam cmp pop pop ss xor ror xchg mov sbb cmpsl xorb xchg push cmpsl rorb inc mov sub cmp add pop xchg adcl lcall js out and imul or mov jno push dec mov xchg and imul enter xor or or outsl arpl inc (bad) mov popf rorl insl dec adc xchg movsb jnp lcall clc push scas rcrb sub or mov outsb adc adcb xchg mov (bad) mov out push imul and fadd push fmulp mov cmp sub add pop adc mov jp mov fcmovu ljmp push cmpsl fisttp adc push in mov (bad) xchg movb in jno and (bad) xor adc cwtl jge mov mov xchg call pop push clc xor repnz rcrb mov inc push lret imul ljmp rorl call push dec outsb inc mov jl push pusha or (bad) and jno sbb ljmp cmp (bad) cld mov in fisubrl and mov stos sub cltd pop lods (bad) jb sbb std shrb enter pop mov (bad) frstor out dec scas loopne daa xor cmpsb add and shrl outsl imull gs sahf mov cmc (bad) rol inc sub mov jmp dec scas sbb std lods xor or iret scas adc repz mov inc jmp xor pusha stc pop xchg js cmpb pop xchg in pop add lahf arpl std sahf mov aad les (bad) mov dec or mov push mov add int add lret cmc jl xchg dec bound in or dec cwtl cltd pop dec mov pop cmp mov inc (bad) scas jbe dec inc dec (bad) stc xlat cmpb jnp sub sbb sbb pop xchg sbb lock addr16 adc jbe,pn imulb mov cmpsb int3 es mov mov push sub jecxz iret mov pop outsl sbb sbb xlat mov push dec lahf jle lods leave mov int mov or (bad) js pop or jp xor jp arpl decb pushf pusha mov jmp mov mov sbb inc push lds (bad) mov push jns adc mov push mov lock ds cli and sti mov sub pop sub jns or mov out ret rorl sub mov inc cmp lods dec lcall lods pop aas data16 xlat lea xchg add sbb or sbb les jecxz jno into es fcoml mov mov inc outsl mov push pop movsl (bad) jle out das jno cli lods xchg mov ljmp cmp cmp lahf pushf xor cmpsl xchg sbb loopne loop mov mov (bad) scas lcall loopne dec rolb jmp mov fs into fsubrl sub pop jns imul inc int3 sbb cmp loopne push fcmovu push inc aad loop fidiv inc inc lret cmpsl or outsl test push mov inc les cmp sbb mov sbb cmp dec mov mov in mov add mov movsb push cli repnz aas or mov xor int3 cltd or rorl imul arpl jl push pop pop test xor cmp dec fstpl clc push mov inc add fisttpll sbb int sbb push mov (bad) jecxz loopne push fnstenv sbb jecxz iret add mov insb push scas rol repz mov out out add mov inc push sahf aad scas jmp (bad) mov jo cwtl pop xor fimull mov out mov inc nop or ja out adc or repnz scas je loope add dec sti (bad) pop cmp adc andl cmpsw sbb push dec sub out pop jle xchg mov fwait bnd movsb or jnp jns or jb (bad) or adc jb sbb jbe test pusha cmp mov push in mov or add dec xor jl and (bad) jp mov (bad) (bad) fs pop add sbb pusha push rcrb out lea loopne jb adc lea div in lods loopne fisttp into mov cmp inc xchg aam stos jb pop call les rcll (bad) pusha sub add sub inc in enter sahf mov xchg call aad mov pop insl out xchg or bound jg ja pop jo inc sub out repz sarb loopne iret int3 xchg add xor orb out and dec je cmp (bad) pop aas jmp jo cmp sbb dec pop fistl sub xchg dec pop sub add sbb or mov adc adc call movsb xchg inc stos jne push repnz mov cmp sbb stos sbb and mov mov cmp das cmp push stos rorl pop pop jmp pop and inc dec pop sub lret lahf int jnp xor cs jge pop inc (bad) (bad) cltd mov push pop push jnp or prefetch dec icebp stos sbb mov ret dec push gs dec add es iret test stos sub dec shrl xchg xchg insl fdivp int3 pop push cmpl sbb (bad) add cmpsb push or sbb imul loop test mov jae fnsave leave jns pop (bad) psubb mov push mov push cmp sub out dec adc popa lcall fadd adc sub mov sbb mov cmp daa cmc insb fmuls inc add mov ja ja pop out loope xchg adcl pop ss (bad) bound ss cmp mov adc std jae sahf sbb dec push stos mov and stc sbb adc fdivrl sbb mov stos sahf pop ss std in nop sub (bad) or xchg dec pusha xor lock sbb push aas mov adc fidivr ror inc mov mov ss and dec jle (bad) mov and stos push xchg arpl (bad) sub sbb and jp sarl xchg sbb dec xor inc mov lods cmp pop jns add movsl fstps sub das outsb cmp sahf lahf inc push leave push sbb mov add xorb push iret mov push out (bad) adc jne mov aas das xor pop xor mov aaa xchg lods cmp sub data16 in (bad) push mov jg stos mov repz movsb or jle out mov fcomp xor push imul jecxz sbb in testl notb repnz adc mov pop sbb push addr16 and aas sbbl shll add test jns pop mov (bad) jg or push lods pop sub xchg fnstenv xchg push lds push rcll (bad) jne push xchg inc test add int3 loope mov xchg shll sbb fbstp clc lret dec push out sar outsb sbb pop sub cwtl std dec xchg mov jp pop addr16 pop jge cltd sbb out je adc popa lods faddl repz aam into jmp cmp inc enter cmp add mov add jb addl mov xchg fldenv nop mov or mov inc repnz sub aam pushf cmp pop stos jge sbb jne sahf dec push mov lds adc sbb push nop cltd bound push mov sbb cli aaa pop sub mov div sub movsb lock push inc (bad) mov jne fisub xor lods clc xchg pop fisubl xor xchg fmull mov mov xchg xchg in ret test jl in add xor jle push (bad) fimul (bad) xor (bad) mov rolb mov push imull lds push and jmp push jg sub xchg loopne ret daa out jnp jle push jo jg adc imul lea jo je xchg lods hlt mov rcrl mov mov jp ja mov enter clc pop add push jne push push mov mov lcall out cld xlat aad pop sub xlat or xchg xor mov mov dec mov sub jecxz test scas lock push data16 pop mov aas rcrb jl xchg cmp mov sbb pop pusha pop push add and in push xchg fcoml pop std aad xchg loopne jno add dec add sbb mov push pop cld int sahf stc cmp xchg or int mov mov cmp rcrb pop arpl (bad) push mov inc sahf jb pop xchg mov repz jmp mov or in and xor cmp incl and or sti add in mov lock lods mov popa cmp sahf mov hlt mov cmpsl xchg and ficoml (bad) std cli gs lcall lods (bad) rcrb or and sub mov ljmp shrl lock pop dec std sub cmp pop (bad) jecxz cmp popf mov lods hlt xor (bad) icebp xor pop cs call pop sbb and sub sub mov cmp jo sbb in fildl jmp frstor inc dec (bad) sahf fmull icebp popf rcll divl arpl pop fwait cld sub mov into les cmp addr16 iret in pop or cltd fs add enter pop das mov xchg cli roll mov sub jle dec imul xor pop sub cmp jo add shr insl sbb imul enter jmp add jge add in sub movl mov push call add push call add push mov push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl mov push call add push call add push mov push push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl lea call movl mov mov mov mov mov mov mov mov push call add add push call add push lea call mov push call add push call add push mov push lea call mov push lea call lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov sub mov mov push mov push mov push call add mov add mov pop ret int3 push mov mov mov mov mov cmp jle push call add cmpl jne mov call push call add push push push call add test jne call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push push call add mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 cmp loop mov bound xor push call cmp pop inc (bad) pop mov cmp shrl mov jle aam cs mov xchg xor add push adc daa int3 mov and data16 scas mov push xor movsb mov mov and imul in (bad) leave lods mov xchg mov in sbb jns jo in fst idivl dec loope dec and and outsb jmp testb cs pop into or inc outsb cli add aam sbb and sti or dec pop in aaa leave loope aad scas idivb mov mov mov daa lret xor adc imul mov bound inc adc pushf ds add pop xor and jns add cmpsl stc mov ljmp xlat loop push xor or push mov xchg dec sbb add and test jne outsb sub in inc add (bad) repnz xchg mov xlat popa mov cmp cmp nop fsubl repnz xchg int mov addl loop jg sub pop data16 in xchg sbb cmp xor mov or adc pop iret aas (bad) adc jg ficompl push arpl push mov sub mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add push mov add push mov push call add mov mov mov jmp mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov add push mov push mov push call add push mov add push mov push call add mov mov mov jmp mov add push mov push mov push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov xor mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl push lea call movl mov mov mov call mov mov push mov call mov cmpl je jmp cmpl je mov mov jmp mov push lea push call add cmp jne lea call push lea push call jmp mov mov mov mov mov mov mov mov mov mov call mov push call add mov mov movl lea call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov movl mov movl mov movl mov movl movl mov call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movb mov mov pop ret int3 int3 push mov push mov mov movl xor mov mov mov mov pop ret cmp loop xchg pop inc xor sarb cmp jo mov xchg cmp rcrl mov add popa jmp (bad) ror and push sub (bad) into mov pop lretw test push jmp cmp loopne pop push data16 dec pop sub cmpsl xlat out sub add xchg enter call pusha test call iret sarb pop sub enter mov loope sub push int jmp jmp cmc addps dec or fwait stos not lret aaa rcll sub imulb les in push push mov push mov sub mov mov mov mov mov mov movl mov movl mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov add push mov add call mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov add mov movl mov mov mov mov mov movl mov movl mov call movl mov mov mov mov pop ret int3 int3 movl mov ret int3 int3 int3 int3 int3 int3 int3 movl mov movl ret movl mov movl ret push mov mov movl movl mov test je mov test je mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push pushl mov lea mov call mov mov lea movl call test jne push lea call mov lea push push mov call lea movb push lea call lea call lea push lea call lea call lea call lea mov push lea movl xorps movb push movq call add movl lea call mov mov mov mov mov mov pop movl pop mov pop mov pop ret int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp loop add fwait outsl xchg add enter test jl mov (bad) rorl inc cmp outsl pop push adc mov mov rorb add inc add jl adc add jl adc int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add mov pop pop ret int3 int3 int3 cmp loop push dec scas jmp sub insb fwait popf imul xchg lea xchg aas out lea in cmp and ljmp jb clc xor mov lods into int3 sbb aad and clc xor jo addl add dec push mov push push mov push mov sub mov push push push pushl mov mov mov lea mov call lea movl push push push mov call lea call mov mov pop movl pop pop mov mov pop ret int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add movl mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xorps push mov mov lea mov lea push movl push movq movb call add movl mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov call movl mov mov mov add call movzbl test je mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov call mov mov mov add call mov mov movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov movl pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl je mov mov push call add mov movl mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov movl mov call movb mov call mov call movl mov mov mov pop ret int3 int3 int3 int3 push mov push push mov push mov push mov movl mov add call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov push mov push call add lea call lea call lea call lea call lea call lea call mov call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov test je mov call test je mov mov push call mov mov mov pop ret int3 int3 cmp loop xchg pop inc xor sarb cmp jo mov jae scas push gs pop outsl xor nop xchg stos scas outsl imul xchg dec xor test xchg sbb jnp dec sub mov add dec push mov sub mov mov mov mov cmp je xor je mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl jne push lea call cmpl jne mov inc mov mov lea call mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov sub mov mov shr and mov mov mov xor mov div mov mov mov mov mov mov lea mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov push lea call mov mov mov mov neg add mov lea push mov call mov mov mov mov or mov lea call mov mov pop ret int3 push mov push mov mov movl test jle pushl call jmp jns pushl call add pushl call add movl testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov movl je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov je push push call add mov pop pop ret int3 int3 push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov mov test je mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov push push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea call mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov add push mov push mov push call add mov mov add mov push mov push mov push call add mov movl mov pop ret int3 int3 int3 lret push (bad) aaa (bad) hlt xor push roll enter push jne leave adc pop sub push mov sub mov mov mov mov mov movb mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov lea push mov add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov movl test je cmpl jne push push call mov add mov movl test je mov mov test jne mov jmp add call push lea mov call lea movb call lea movb call lea movb call lea movb call lea movb call lea movb call mov movb test jne push lea call push lea push call push lea push call lea movl push movl movl call add movups movups jmp xor testb mov pop je lea call mov mov pop mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret subb push outsl sti sub push mov mov push mov cmp jae mov mov test jne jmp xor cmpb je call cmp jae mov mov pop pop ret xor pop pop ret int3 cmp loop mov bound fisttp push test push mov ss imul cmpsl jle fistpl mov (bad) push or push (bad) (bad) jne lahf mov nop jecxz lahf (bad) xor push or lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov shr sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov shr mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 lock ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov add mov call mov movzbl test je mov mov mov add call mov mov and je mov mov mov mov mov mov mov mov mov mov call mov cmpl jne mov mov mov add mov mov test je mov call mov mov or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call jmp mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push mov push mov push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov pop ret int3 int3 int3 push mov push mov mov push call add push call add push mov push mov call mov pop ret int3 push mov push push mov push mov sub mov movl lea push mov call mov mov mov movl push lea push mov call mov mov mov movb mov call mov movb lea call movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov jmp mov add mov mov mov pop ret int3 int3 int3 int3 int3 push mov mov sub and mov mov and je cmpb jne lea push push test jne test je call add push push jmp call add push push jmp mov pop ret push push call call add push push lea call push lea push call int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 cmp loop push push stos xchg jae out pop mov inc or fnstsw fmull fcmovnb adc jae movsb ja jnp jae xor mov jecxz fstpt mov pop xchg scas push or mov lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor push mov sub push xor cmp cmova test je lea mov push movzbl push call mov inc mov add inc cmp jne pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov sub mov mov mov mov mov mov mov mov cmpl jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov call mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov mov cmp jne mov cmp jne mov pop pop ret xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea sub push pushl push call mov mov mov mov cmp jne mov cmp jne mov pop mov pop ret xor pop mov pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov cmpl je mov push lea call movl mov mov movzbl test je mov mov mov mov mov mov mov mov mov mov call cmp jne mov mov mov add mov mov test je mov call or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call movl call movzbl test jne mov call lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov push mov mov movl mov mov call mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl sete ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jae call mov mov mov mov mov sub cmp ja mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov mov add mov mov add cmp jbe mov add cmp jbe mov mov jmp mov cmp ja movl jmp mov sub mov mov sub add push mov push mov add push call add mov push mov push mov push call add mov sub push mov add add push mov add push call add mov jmp xor mov mov push mov push mov push movzbl push mov push mov call mov pop ret push mov mov push push push mov movl call mov mov mov mov mov mov mov mov pop ret int3 push mov mov push cmp jne mov push call mov pop pop ret push call mov add push call mov pop pop ret int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov movl mov add call movl xor and je push mov push call add mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl mov mov pop mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov cmp jae mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push mov add push call add movb lea push mov mov lea push call add jmp xor mov movzbl push movzbl push push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add shr mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov lea mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov movl mov mov mov push mov call mov movl mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jbe jmp mov mov cmp jne jmp mov mov cmp jae mov mov mov xor mov movzbl push mov sub push mov call mov mov mov jmp cmpl jae mov cmpl jb movl jmp movl movzbl test je mov call mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov cmp ja mov push mov call jmp movzbl push mov sub push mov call mov pop ret int3 int3 push mov sub mov mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 int3 int3 cmp loop fdivr cmpsb add mov das enter mov mov test cmovne ret int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call lea push push pushl push pushl call pushl pushl call add pop ret int3 int3 int3 int3 int3 int3 cmp loop xchg pop (bad) sub hlt jb or ds jo mov sahf mov cltd sahf (bad) mov aas jb divb pop jno mov cmp rol sbbb add push push int fcmovne inc js xchg sub mov push dec (bad) cmc fmul test mov call push push call mov ret movl jmp movl movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov call mov mov movb mov movb movl mov mov mov add mov mov mov mov mov mov mov mov push mov push mov push call add jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov movzbl push mov mov push mov mov push mov call mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov add push mov call mov mov mov mov mov mov mov mov mov movsbl test je mov mov movl movzbl push mov push mov mov push mov call mov mov mov mov movzbl push mov push mov mov push mov call mov mov mov mov jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov add mov mov sub mov cmp ja mov push mov call push call mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp movzbl test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov cmp jne mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov mov mov mov mov mov movb mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov movl movb movl mov mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov push push mov push mov call mov jmp jmp xor je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov mov push mov push mov push push mov push mov call mov jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov lea call mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test je mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov mov push mov push movzbl push lea push mov call mov mov mov mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movb mov movsbl test jne mov mov movzbl test je mov mov mov mov mov push mov add call mov movzbl test jne movl jmp movl mov mov jmp mov mov mov mov mov add push mov call mov mov mov movzbl test je mov mov mov jmp mov mov mov mov mov jmp xor je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov mov mov mov mov mov mov mov mov push mov push lea call movzbl test jne jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je movb mov mov mov push mov push mov push push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call movb lea mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov push mov add call movzbl test je mov mov mov jmp mov mov mov mov mov jmp mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov xor mov mov mov push mov movzbl push mov push mov push mov push mov push call add mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push push call add mov movl mov mov mov push mov call movb mov add push mov add call movb mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push call lea mov mov push mov push push mov push call add mov pop ret int3 int3 int3 int3 push mov sub mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl mov movl xor mov mov mov movzbl push mov push mov call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call movl mov mov mov mov mov mov mov mov mov mov push mov call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add call mov call mov pop ret int3 int3 push mov sub mov mov mov movsbl test je jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov mov mov mov pop ret push mov sub mov mov mov movsbl test je mov mov mov mov mov jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov movsbl test je jmp mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov push mov mov and je push mov mov push push mov push call mov and je mov mov lea push mov sub push call add mov sub jmp mov call mov and je push mov push call add mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je push mov push call add mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov jmp push mov push mov call push push call mov ret movl jmp movl mov movb mov movb mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov jmp and mov xor test inc ds pop in fwait lcall mov push lock pop in shll mov jnp icebp cli ss dec test aaa or nop jecxz lahf (bad) xor push or in sub mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov jmp mov mov mov movsbl test jne mov mov push mov call mov mov mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov add mov mov add mov push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 cmp loop mov bound fisttp push fsubrs inc xor leave adc pop sub push mov sub mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov mov mov mov mov push push mov push call add mov movl mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov mov mov push mov push mov push mov push call add jmp mov push mov push mov call mov call push push call mov ret movl jmp movl mov push mov push mov push mov call mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov add mov mov cmp je movl mov call movl xor and je push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub mov cltd mov idiv mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret push mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push call add mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov call mov push mov call mov jmp jmp mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov mov lea call mov mov mov push lea push mov call jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov lea call mov mov mov mov movsbl test je mov mov mov jmp mov mov movsbl test je mov mov mov jmp mov mov mov mov mov mov cmp jne mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov cmp jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov cmp jne mov mov jmp mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov movsbl cmp jne jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp je mov movsbl cmp jne mov mov cmp jne mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov movb mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 cmp loop mov bound out je gs cmp dec int3 cmc movl or paddsb cmpsb loopne sub aaa jb xchg hlt sarl and jne sbb dec es sbbl xor call pop fnop lds in push lds jbe dec fimul cmp jns out cmp adc mov loop lret lret shr xchg mov pop pop cmp cli xchg lret fsts mov cs daa xor (bad) lret lock push push mov sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 push mov sub mov mov call cmp jbe mov mov mov mov movl call mov mov cmp jae lea mov jmp lea mov mov mov mov mov mov mov mov mov cmp jbe call mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl push pushl pushl pushl call pushl pushl call or add test cmovs pop ret push mov sub mov mov mov mov mov mov mov pushl mov call push pushl call add mov pop ret push mov push push mov push mov push sub push push push mov andl pushl call pop xor mov mov mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call mov mov mov cmp jl jg mov cmp jbe mov mov mov add call sub sbb mov mov jmp xorps movlpd mov mov mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov pushl pushl pushl mov mov mov call mov mov mov cmp jne mov cmp je mov or mov cmpl jne jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret push mov push push mov push mov push sub push push push mov andl mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call cmp jbe mov mov mov add call sub mov jmp andl mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov mov xor push push pushl mov mov mov call mov mov mov xor mov mov mov cmp jne mov cmp je mov or mov jmp jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov mov mov mov movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call testb je push push call add mov pop pop ret push mov push push mov push mov sub mov mov mov mov mov mov mov jmp mov add mov mov cmp je andl mov call orl xor and je push pushl call pop pop jmp mov mov mov pop ret push mov push push mov mov mov mov dec mov mov mov mov mov mov mov mov mov mov inc mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov pop ret push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov mov mov pushl mov pushl mov call mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp andl movzbl test je mov mov mov mov mov pop ret cmp loop mov bound fisttp push fsubrs jmp inc push add jne pop jecxz loop sbb icebp pop test jns std cli xorb inc adc pop dec int3 cwtl sbb repz data16 arpl enter xor mov sub mov cmpl je mov call or mov mov cmpl jne mov or mov jmp mov mov pushl pushl mov call mov pop ret push mov sub mov mov mov cmpl je mov mov mov mov jmp andl mov cltd mov mov cmpl jl jg cmpl jbe mov call mov mov mov mov pushl call pop mov jmp lea push call pop push mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov mov mov mov pop pop ret int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp loop mov adc in gs cmp mov mov cmp push dec sar and leave mov ret repnz cmp js mov iret add imul les rolb loopne iret add into gs pop push popa push pusha push jnp cwtl pop dec add and ss outsl mov push add lret xchg jmp sub imul pop popf mov mov xchg mov sbb mov in mov cmpsb xchg pop stos xor in xlat stos loope in and fldl mov pop mov inc insb xor (bad) lret dec scas or fmull jl pop pusha jns dec les mov aad and mov out jbe into jecxz dec inc xchg push loope icebp xchg loop jle xor mov mov pop inc mov es add push scas mov inc push mov jmp std push or (bad) ja xor and outsb mov imul cli into cmc push mov xor or jp insb inc mov mov mov push ja xchg frstor or movsl lahf int3 (bad) ljmp out movsb hlt bound dec clc outsl rol enter fldcw jmp xor add inc sbb shlb inc adc push jmp or push cmc xor lcall mov aad loop out ret and lcall xchg cmpsl sbb cmpsl jnp jmp (bad) inc ficompl jmp mov addr16 int mov mov lds jge ss vcomisd cmp imul cmp stos pop xchg fnstenv inc test (bad) (bad) sub mov add pop stos mov aam je test and lret leave xor out xchg jb lret sarl adc inc sbb loope jnp mov lahf cmc orl je mov out repnz cmc jp sbb dec aaa aaa aaa jle or push sub mov or mov (bad) push int3 addr16 cmpsb das hlt aam xchg fimul lods fmuls jb xchg jecxz pop jecxz cwtl mov (bad) test and push mov mov xchg (bad) xchg fcom xchg sarb mov push dec ds mov aad push pop and sbb mov std jmp hlt addr16 pop inc mov data16 mov or fstps or shrl add jbe xor dec je add sbb pusha movsb sub inc sub pop cli out jbe cmovl in xchg daa fist mov push fcompl loop or mov adc mov pop in mov mov xor sbb mov (bad) sbb mov cmp into imul test aam xchg mov mov push or sbb pushf sub and outsb loope lcall push pop cmp and xchg or pop push sarb jp dec add shlb insb and xchg fcompl addb xchg cwtl inc xchg jns (bad) jp,pn cmp adc mov and add mov repnz ror xchg adc jmp repnz ljmp push stos shrb xadd in mov rcrl xor add lds (bad) dec push hlt test or jl dec xchg rorl test aaa (bad) arpl loop mov push cwtl arpl js (bad) enter dec or fcoms adc sbb mov mov lcall mov das imul int3 inc mov jge inc and aad int3 add repnz xor jg aam cld out (bad) or jmp mov test jno fsubrp mov aas call add out ret dec jg pop xor inc jle test out jb inc dec jl in push lret sbb add mov in add lret sub add mov popa test push out mov pop negb jmp add call sub pop jle push inc push cmp push lods addb push push push aad in xchg movsb push arpl and cmp aad sbb (bad) mov jge mov int3 adc xor loope scas jle push add xchg rcll inc out fnstsw loopne call nop pop sub adc hlt pop add push movl popf sbb divl ret pop scas add mov xor psllw addb lods test sbb sbb test mov ljmp popf and sub fisttpll sti add cmp movsl xchg xchg int3 out mov and sarl sbb push nop aad adc nop insl (bad) jecxz xor rolb mov mov mov insb mov jl mov push loop lahf xchg sbb (bad) mov add or movsl or (bad) xor das jns xchg pcmpgtd std adc movsb insb pop cltd xchg add fsubs test push movsl pop inc add mov pop sub jg in insb jmp adc and aaa or lods push lret jp mov fnstsw mov mov mov popa ja xor call xor sbb mov sbb pushf pushf jae pop ss pop loop sarb adc xor shrl in jbe adc push dec pop sub sbb ja inc adc cmp ja mov mov repnz cs xchg sub mov scas mov cmp outsl fldl (bad) fstl loop fistpl test mov call popa add ret sbb stc pop dec jbe mulb add push ret inc lcall dec rcrl scas icebp out sbb (bad) jns bound out out cmc xchg sti scas cmp mov push sbb js loopne mov movsl jl stc scas inc out cld sti rolb cmpb and push test test lahf divb jmp lret jae stos and in cs jmp js and pop push jb jbe ja lds test aas cltd stos (bad) pop sti shl in add test sbb mov dec xlat leave mov jae cmp inc xchg jne test and fdivl imul fidivrl or sbb pusha inc xchg ret fist cmpl push jg test loope cmpsb mov insl scas repnz or and xlat sub push test push mov push daa loope jns out ja sbb mov mov cmp lea (bad) test es cld mov push sub mov loope test push pop ficoml push mov imul pushf gs cmp xchg xchg sub dec push sub loope iret cltd sti into sti lahf (bad) aaa sub cmp jnp lahf jl jnp (bad) mov push scas pop mov xchg popf add es mov orl in in ror repz rclb pop cmp xor shll jl jnp rclb push mov shrl popa sbb fmuls push xor (bad) arpl sub decb imul adc out (bad) and int3 aad std rcrb fs shrl jmp mov push lods sub sub or sub push jbe outsl arpl mov cs ss inc mov rcr jecxz xlat test out lods test and lock out data16 pop cs or lret pop or dec dec jecxz lods pop xchg (bad) movsb cmp jne mov jecxz nop lea sub lea mov xor into outsl sti jbe sbb dec adc mov daa or or cwtl shrl jmp test or mov inc xchg inc push sub push push testb sti xlat and mov adc lret test sub lea in int rcrb cmp scas in scas inc adc adc inc (bad) mov scas and iret js rcrb xchg jle jno push daa push cmp dec ja mov sub and push fucom ret loop sub mov js cwtl xor dec jecxz inc and fiadd xchg push push js fnstsw adc add mov mov cltd iret mov shr insb mov push int3 das fidivl orl cmp mov loope int dec jl aad adc (bad) mov mov std push inc in xchg loope sub jnp in aas shll enter iret add (bad) std or iret sbb repz fwait lods lods cld lds in addr16 and outsb mov sbb mov mov dec cmp push add mov jno cwtl pushf scas push mov sub fidiv pop mov pop dec data16 arpl orl movsl dec push cmpsb inc lock mov in sub push dec jge out and xchg cmp (bad) cli xor inc (bad) or iret dec pop (bad) cltd icebp dec outsb mov push jb jns pop and (bad) mov adc xlat es mov xlat movsl dec mov dec push cmp jns dec push lahf and xchg pushf in jbe in test orb jns outsb shl (bad) arpl pop (bad) (bad) or add cmpb in adc in mov mov dec (bad) mov and aad jg cli xor pop pushf js loop xchg mov push xsha1 cmpsb push and or add js mov xchg mov inc mov enter in and push inc (bad) dec inc (bad) mov loope jno inc js pop hlt ss and leave rcr es fcmovb (bad) out xchg push push jle inc icebp pop mov adc in paddw lods jge mov std fwait adc mov add outsb jno add inc std shrl loop lock add nop push mov (bad) mov cwtl je jne hlt rcrl out sub add jb cmp lret jo (bad) stc std pop mov ljmp mov call adc sahf je loopne in sbb add jecxz adc or sahf rol je aaa mov sbb subl sub xchg push (bad) mov inc cwtl sbb mov mov pop inc out (bad) clc loope jbe jl imul mov movsl cmp icebp sub mov jo stc mov lea xchg pop mov and mov dec sbb mov (bad) jns aad stc ja nop imul movb flds popf sbb out out in push sbb (bad) dec adc pop sub (bad) sub xchg mov aam stc test inc bound cmp faddp stos jg mov cmp xor and rclb xchg es pop insl jl repnz fist push xchg inc or jle (bad) jae adcb cmp lret mov fsts cs fmuls sbb rol mov pop and std mov inc xchg loope lock xchg xor int adc andb or inc sub jmp cmp mov sbb ss mov mov jo (bad) or out or test mov aaa mov dec adc nop mov fsubrl negb mov js sbbl (bad) cmp loopw popf mov (bad) repnz lahf mov or mov sbb jae adc xor add inc mov cmp ret and sub in xor lret lods cmp sbb aam adc aaa scas mov test gs in xchg (bad) lds push lods add and inc mov fistp fadd adc stos and sahf cwtl lcall in hlt (bad) in mov jbe pop mov ljmp or add adc add mov push add (bad) add xor shrl adc sub scas enter or fcmovu xchg mov sbb js add das aas jge popl outsl and sti and orl mov ds in add ja negl mov divl adc iret gs mov push aaa or or jbe imull jg cmp dec pop or cli cmpsl int cltd mov adc loope mov pop mov mov inc add data16 mov test mov mov sbb (bad) (bad) fldl insl jp add add mov dec aas aam cmpsl sub mov inc imull mov sar ljmp popf dec shlb arpl in std mov cwtl fs (bad) or cmpsb dec dec fsts jmp push es push rorl mov inc jmp ret push xor xchg sub xchg cltd adc jecxz or mov (bad) and sub sbb daa jmp xchg test mov hlt and xor inc loop sbb in pushf sub int add incb aam call or push pop push push decb fstpl iret mov sbb add sbb push dec (bad) out addr16 inc jns fldenv jl leave cmpsl sbb jo fcmove mov fldl hlt lods enter mov or mov (bad) adc fiaddl xchg es sbb insl xor hlt mov jl aas (bad) arpl xor mov lahf les pusha jle int3 jae xchg (bad) cmp jp gs (bad) mov jbe mov push mov call sub mov negb gs sahf xchg into jg cmp mov sahf aam mov cmpsb aaa fs xchg repz pusha pop mov push aad dec sbb jg in add mov adc push orl jns jmp mov loope dec jle cmp stos in pop fst cmp std test xlat test push add ss xor jecxz ret mov or lahf push mov sub out xchg pop cmp sub rcll mov push imul orl enter lods push push add push loope or mov cmpsl aam xchg inc cmpsl cld dec iret xchg adc or mov popa sbb pop ret jne push lret sbb mov (bad) pop mov pop add cwtl dec insl clc mov sub inc cltd push rcll popa scas call mov out pop sarb mov sti shrl pop adc shrl shlb xchg add mov out (bad) push (bad) mov scas and push or in add push sbb adc inc (bad) movsl cmp lods push rol cmp scas bound sub mov fs rcrl ljmp dec jb call cmp mov insl sbb mov inc sbb pop jecxz sbb roll mov or int jns loop jb xor sbb cmp in push push roll mov mov fstpt or sahf push mov add xor stc sub xor dec pop adc push sbb sbb sbb faddl pushf push mov in sub mov adc or jo jl pop idivb inc or sub cmpsb jnp stos sbb divl sub mov aam les loop les dec and arpl pop inc mov pop pop sub and in xchg mov pop mov sbb lds out and outsb mov mov lret prefetchw loope in imul jns das out (bad) es or dec shrl outsl or std pop jge lock div push cmpsl sbb insl mov adc ja rcrl and int pop push add mov xlat mov pushl sarl adc lcall push lds loop scas dec scas or sub pop scas push push push lods mov in mov push mov inc aas xor dec add insb and pop outsb cmp xorl cmp mov dec push xor aad jmp repnz cwtl lods outsl lahf aam loopne arpl in sahf lcall push pop adc mov pop push int3 and cmpsl xor loope and movsl pop lcall or push fmull icebp icebp ds lahf adc into add ja (bad) mov or dec mov (bad) pushf pop push ljmp stos mov cmp fwait add jae notb lcall and pop jecxz (bad) push cmc mov inc dec and cmpsb paddw int3 cmp jmp fldenv (bad) (bad) push add orb push cmp add xor jno sbb jb pop pusha jno pusha push fadd arpl iretw lcall push (bad) icebp jg daa jp pop iret addr16 (bad) movsb xchg adc xor divl ss xor hlt orl pusha test xchg add arpl pop popa xor loopne nop sbb fbld mov jbe and xchg mov or pop or pop outsb push cmp das mov xor xchg xchg sub aam xor push test movsb adc cli adc dec sahf fcompl or sub jge les sbb pcmpeqb in call pop mov pushf int3 add add daa bswap cmp flds xchg pop (bad) xorl stos sahf lds je fstl pop fnstcw xchg sub pop sbb icebp jl,pt jg or sarb pop xor xlat mov fdivrl push dec repnz mov mov jns fs jmp stos add xor or xchg fsub orb dec scas aam cmpsb mov dec pop divb in (bad) jne test imul addr16 loope push pop push daa inc jl mov or pop lock rcrl inc mov dec bound out sbb clc mulb xchg and negb xchg inc incb mov (bad) (bad) sbb mov aam xor push fstpt icebp mov lret nop push xchg out xor repz push pop pop fisubrl push xlat frstor lcall push fldl stos jb mov push mov pushf hlt xor (bad) jbe adc gs push xor les sahf stos (bad) roll imul push mov inc fucomi ja pushf (bad) sbb out mov in pop fucomip test mov xchg cli out dec add call inc rolb ret jle out mov cmp loope mull push add xchg scas (bad) adc fild dec xchg dec fmull dec repnz pusha inc pop fld adcb push outsl pop mov adc inc (bad) in (bad) iret hlt sbb cmp mov dec jp mov adcl ljmp push dec and nop (bad) (bad) jle cmpl dec sahf cmp loop lret jge pop inc or adc mov aas mov push mov test mov push je push in cltd sbb in xchg dec xor std out scas loopne adc push pop and xor stc dec rcl lret cmp dec sbb inc push lds mov cmp xor fldl xor mov push scas scas enter mov push inc mov push dec int push xchg es adc xchg (bad) clc cmp or lods dec mov xchg jnp cld cmpl sbb cld mov jle and (bad) xchg addr16 mov sub es jmp in std adc (bad) pop (bad) stos add aas cmc nop push pop cmp es testl loope cmp outsl push push fs or shr sbb nop addr16 xchg xor mov jmp mov mov fild lcall inc dec mov push js pop xorb fmul (bad) or cmp add icebp dec xor or or iret adc repz enter (bad) mov enter (bad) jecxz loope jecxz scas lea in pop lcall jecxz xchg rcll sub dec and or mov lcall repnz scas pop aas xchg scas mov cmp fdiv jns stos cmp lret ss jl push test je out fwait pusha fdiv lret xchg and ret dec inc mov inc xchg shrb pusha pusha sub push inc insb pop fisttpll arpl mov jge pop lods fdivp xchg stos inc or push adc mov cmp xchg shll pop xor xchg jl inc mov or in jge mov or lret cmp mov cld fwait push hlt stos adc fwait adc int addr16 cmp cmp in push das in push dec aad mov push hlt cs adc push ja xchg fmul dec inc adc jno push mov mov rcl std dec aam or jno mov mov dec inc ficoml enter fsubs test inc mov inc scas jg inc lods inc push insb mov fidiv xchg jb and push cli push in push xchg ds ja adc cmpsl or dec (bad) mov cli xchg cli inc jns or sti cmp fs pop out or scas or mov fiaddl call xor adc adc sbb dec lea mov jbe xor jo aam not push jmp inc mov das mov lods cmp mov or fs pop fisttp pop nop mov sbb sbb inc jle push arpl pop test iret scas (bad) xor fldenv scas mov cs lea test out lea dec push test (bad) cld mov (bad) std popf mov repnz mov push into pop scas repnz scas test mov mov in (bad) repnz inc xchg fnstcw je adc jnp ret aam (bad) or ja cmp push sbb adc call xor stos mov mov loope fwait hlt jp shrb mov ret pop inc shl hlt add sbb mov mov sbb mov xor mov aas and inc jbe insl and sbb clc push pop repz hlt xor mov and fs or mov loopne push dec stos shrl les inc sbb enter push xlat pop rcr add repz mov jp sbb dec mov adc cmp add les outsl cmp adc fwait xchg cwtl jae xchg sbb ret repz push adc hlt mov xchg rorb aad xchg cmp add int pop hlt mov mov arpl subl jae adc enter in inc ds xor pop mov jecxz lds sbb xchg in push cs enter xor repnz das addr16 inc movsb xchg push xchg mov hlt push push loope shr jmp js in jb fmull cli or mov xlat les sbb rcr aas inc loope lret or aaa das mov sahf pop dec cmpl pusha int3 xor xchg xor mov pop push gs xor addr16 ja sti out pop and (bad) cld lods or mov (bad) jae xchg push test jl scas aaa inc and aas dec (bad) jne push push jno xor cmc cld sbb lahf notl mov xchg stos es fcomp dec add test imul in fcmovnu jp jbe fstpl lret ss xor ret js dec jne jmp push cmpsl iret mov cmp iret enter or in push dec or inc jge ss pop out pop stc inc mov mov sub fisub pop or push dec xor cmp sub add xchg notl cs dec jnp into lret fdivrp aaa mov push pop sub (bad) pop cs mov loop cmpl lds jmp push cmpl roll dec mov cmpl pop sbb pop aad ja and arpl sub sbb clc sbbl hlt jns sub or cmp sahf push jo,pn sbb les adc ret xchg push push adc lret and mov mov in aas movsl push mov add mov push (bad) imul sub mov and pushf mov mov mov jl mov mov pop fcoml stos mov mov mov mov iret mov xchg inc hlt dec in mov pop jae jecxz xor mov lods mov add adc and mov (bad) js fildll shr stos nop mov mov mov (bad) push or mov xchg or jl inc dec cld xchg aas lods adc popa loopne jecxz sub fistpl jecxz adc fstpt and cmc jb call test sbb mov mov stos dec jle jno in leave cmpsl pop dec add fcmovnu cmpsl in fldenv push stc mov insb sub pop and or pop mov jae into cmp out scas mov sbb pop lds sbb popa ja arpl push stos daa jno aas gs loop mov pop mov in mov ds push lock outsl adc test sbb mov add in cmpl mov lea (bad) fdivs test and adc inc repz jns mov push inc (bad) xor scas push xlat pusha stos jmp sbb psrad fisttpl ret inc int3 jne hlt inc int3 cmpsl fwait iret cld decl nop js loop or sub loop xor hlt ja fs pop aad mov push ss push sub add add mov mov and rorl ss mov ja jne and (bad) fldcw out xlat mov leave insb cltd popf xor movsl aaa addl pop push lds rorb sbb outsb push push popf push jb xor and mov sbb inc pop push fwait xlat sbb pop and cmc hlt jge xor in decl push jae adc clc or jnp add mov repnz inc xor (bad) enter (bad) bndldx xor adc mov adc xlat dec sbb inc gs xor dec sbb mov repz mov sbb lret ja mov jmp (bad) int3 out inc fwait inc mov insl movsb aas mov ljmp adc mov or pusha mov mov mov aam or inc push cmp cmp push cmc ret fmulp adc jl cwtl pop xlat mov je lods mov iret sbb (bad) out mov cmp arpl std fdivs push cmp jmp (bad) sbb lahf ss jg lods lcall ret leave sarb sub sbb inc ja sbb dec and in sahf int ror int3 cld xor fisttpll inc (bad) (bad) mulb push cmc aad (bad) jbe dec movsl jg or pop nop pushf dec int jns sbb dec mov cwtl data16 mov (bad) imul fisubrl mov xor rcrb mov sbb arpl add test mov cmp cs fcompl mov fmuls leave daa jne daa pop pop cltd xlat enter pop adcb lret fisttp push pop dec loop jmp insl adc mov fwait sub push rdtsc mov add out add add mov dec cmp jecxz xchg mov (bad) push les jge mov pop add sbb fistpl stos mov or (bad) jl scas push push lock jl lds ja (bad) xchg inc pop cmp cld sub clc repnz and sbb jb sbb jnp ret xor jecxz popf icebp pop jno data16 sub adc (bad) mov and (bad) lret sbb push cs mov dec jns ss cmpsb adc jg (bad) push sbb aad inc (bad) bound fnstcw jl pop adc div iret and inc push pop fwait adc lods cmp rcr mov sbb xlat jmp test hlt and (bad) daa hlt lods movsb aam fstp aad test xlat in add xor call (bad) out insb call movsl outsl dec aam aaa mov pusha repnz xchg cmc insb in lea xchg cld es daa fildll mov outsb lcall pop jae push and push pop mov dec xchg pop and daa sub cli (bad) dec push dec das int les in in push mov jle enter pusha outsb push mov mov aad and push mov adc int stc addr16 add xchg les and ret or mov (bad) in xlat mov push (bad) int3 in sbb in stos clc pushf xor and test mov scas ret push pop fistpl jge mov ret call popa push inc mov jae shll sub mov jle scas addl loope int lods dec repnz leave jno mov movsl les repnz movsb jbe add out push daa das jbe or sub push aad lahf mov lcall push hlt push xor dec mov pop inc jbe sub mov jno cli movsb push inc lret or test and in mov xchg xor mov (bad) dec xor subb or fneni(8087 (bad) mov setno add sti mov cld jo mov outsb push cmp push xchg pop pop aad push xchg mov jae mov dec je xchg (bad) cmc add or test sbb push push out pop xchg stc sti cwtl pop mov mov ja lcall xor mov xor divl test adc xor call inc (bad) push movsb (bad) sub lea or fldenv sbb jp fisttpl cmpsb inc xchg fcomi jns push (bad) dec ja mov movsb or pop xlat inc jo ds push out push fsts in test push idiv jmp mov out nop imul sahf adc xchg pop aaa mov sbb xchg notb or xchg (bad) inc cli icebp sub mov popf cmp out xchg movq out fwait ret shlb pop out out mov push and mov mov xor mov pop sub ret scas xchg push mov mov or push xor sbb jg xor jecxz (bad) adc fldcw mov sub xor sbb mov xchg sub iret out int scas loope push push daa dec icebp mov data16 jmp nop adc and mov addr16 in mov and stc mov insl imul loopne imul sahf popa flds int movsb shrl push sahf push jmp jns dec rcll xchg ds sub loope jmp cmp les inc in push test add push xlat adc loop xor mov ljmp jg mov pushf push clc and nop scas push scas in cmp sti dec inc cmc outsl (bad) fcoml adc and clc pushf dec adc movsb jbe push leave (bad) adc adc and scas mov xchg nop xchg pop (bad) fdivrs andl rclb add mov mov cltd push out insl push cmp add arpl sub sub push testl lret test adc push and mov (bad) cmpsl ljmp jl add bound push das and cmc mov lds mov sub enter mov aaa out or jnp jns ficompl or dec lods xchg mov adc add xchg push js inc push rorl cs repz xor das in or sub mov jp adc (bad) fstpt dec and cli sarl mov mov sub frstor rolb adc ja inc lahf jno insb movsb fldcw mov mov pop ret testb shr ret or ss xchg test (bad) std in fdivs (bad) fimull popa dec cmp loopne je or mov std (bad) fbld arpl or icebp xlat (bad) or pop pop repz add movsl aam mov int3 out xchg mov and cltd stos xchg std out sub cli inc sbb andb jne je mov cmp (bad) xchg jge stos dec and jge lahf push clc in jne hlt pop push add xor push sbb test sub cmpsl inc (bad) and pop outsl orl lods test mov cld shrl mov mov fisubrl dec in and roll pop push sbb popa enter mov push iret inc mov xchg push lret rorl adc sbb movb mov clc sbbl into aas mov call mov jne dec xchg aas push jg pushf mov (bad) lds pop dec (bad) (bad) push in repnz push inc pop dec push sbb aaa ss mov int pop push mov leave jecxz dec xor dec xorl cmp adc fldt fwait xchg (bad) cmc std int test fcmovnu in add dec adc xor push cli and add lods mov hlt ljmp push fbstp bound loopne negl daa hlt mov cld dec and subl test (bad) std test in push mov add iret test dec mov or mov mov les add pop jb mov test xlat daa repz pushf mov in out add test mov mov xchg movsl push fmull sbb xchg (bad) jne sbb out ds insl inc dec aad sti jns xor rclb les arpl jae hlt fildll pop sub sub dec pusha push lods cltd adc adc shl cmpsl cmc xchg mov cmpsb dec fbld sub cmp aas xor imul xchg loopne aam arpl shr push xchg imul and xchg jge xchg imul mov fiaddl mov inc pop dec jmp lods xchg insb xlat test cmpsb nop and and and or mov mov addr16 jne test mov (bad) enter push popa in jns push add movsb jmp pushf enter inc jnp xchg dec ss cs mov jbe and enter jb add test push insb jecxz fwait daa inc divb dec inc dec mov rorb mov or push sbb (bad) pop cli cmp cmpsb sahf hlt xchg aas out repz pop jno icebp aas testl or inc add mov jb mov ret sbb pushf pop aad sub jge (bad) jb mov xchg jg and imull imulb jbe stos cmpsl test cwtl scas jmp scas out sbb test out int fisubl lret sbb pusha xor std mov sahf mov dec (bad) mov negl iret cmp and lea inc outsb out xchg ret aam out push insb mov loopne ljmp push in aam fwait mov lahf dec leave pop push cmp iret or scas stos imul adc or in aad fldl sahf scas push out movsb mov add in mov or inc dec pop lahf int3 push inc es sub xor pop into cmp mov test mov pop sub in sarl fild xor out cwtl imul add pushf cwtl adc fwait sub adc xor inc pusha cmp ret scas adc jg imull daa leave sub pop push outsb push push mov pop xor inc dec jge mov push (bad) xor popa fnstenv lods loop xor inc sbb rcrl enter movsb xchg jle xchg mov enter mov and push xchg cmp add idivl decl leave fadd pop test ficompl (bad) jle cmp mov mov or popf lods cli (bad) xchg cmp fist andl add inc or dec fwait out inc hlt mov es out addl push pop out int (bad) jne xlat pop push aaa stc push jns dec cmp push cmpsb aam jl in ret les push in and imull (bad) mov aam cmpsl add mov push repnz lret push ss add mov cli sub sbb mov xchg test test xchg in pop test call (bad) xchg and outsl and mov fadds fs add or push addr16 in sbb loope lock rclb (bad) mov out inc cmpsb push gs unpckhps xor aad xor and mov xor fldenv jp out sbb adc pop in gs pop jecxz js fistp fisubl loop ud2 ljmp cli std outsb repz (bad) repnz mov mov das cmp jl loop test sti int cmp xor cmp cmpsb in xchg mov mov orb int3 test pop fldl cmp jmp pushf loope imul xor mov iret push adc fwait cmc loope mov xchg push xchg sub mov (bad) rclb fiaddl xchg xlat mov mov out lcall xchg cwtl push sub jmp or jl fisub stc sbb faddp xlat insb sub jbe and jecxz lahf push or pop dec aaa pop xchg lds mov jmp jns sbb cmpsb subl lods lahf movsl (bad) in inc mov cmp xchg mov add xchg stos or in enter js pop or out fidivl in int add mov jle cmp xchg cltd push dec cmpl rcrb mov and lcall aam roll mov cmp addr16 jbe fdivr xchg aam (bad) into adc cmpsb lcall mov iret cmpsb mov lahf dec xchg push mov scas into lahf shrb lcall test (bad) mov insl in cmpsb jl xchg push cwtl push testb mov and sarl idivl adc sbb and mov movsl sahf xorl repnz lds or xchg dec out inc aas rcrl mov out cmpsl imul call gs sarl outsl mov sahf aas subl popa jmp mov sub cmpsb add les ret pop daa test (bad) inc dec jbe outsl in dec pop in lods cmp inc lock dec push mov push jge xchg ret cmpsb inc fbld mov xor inc popa mov je cmpsl push lods (bad) adc adc xchg inc sbb xchg sbb sahf mov push adc mov in push scas clc push ret icebp lahf aas xor icebp cmp push mov or rcrb (bad) mov pop xchg and jbe or repz mov es add dec add mov inc sbb addl ss jp inc xor out ljmp sbb jl dec mov push fs int3 sbb push out push cwtl (bad) lahf movsl ljmp dec bound xor jmp dec arpl cmc loop pop cmc idivb lock cmp leave std jl repnz stc mov xchg xlat mov or add out sub pusha nop (bad) int3 cli insb lret mov int3 jbe test pop xor insl mov hlt fnstenv adc mov sbb cmc (bad) pop mov pushf or (bad) and scas mov imul addr16 fsubs cld xor outsl sbb xlat sbb ss jge dec push jne push push and xchg and jge inc mov sub and push jb lahf mov cs scas cmpsb adcl xchg xchg pusha push dec inc (bad) adc adc lahf sbb mov fs mov jg and lods loope fcmovu mov insl test push mov pusha add (bad) inc push (bad) mov xor inc mov dec xchg mov pop lods lods and pop movsb sub jb negb pop fldl je enter jne xchg and (bad) xor setnp (bad) pop sub nop mov test xchg cli popa pop mull pop mov shll loope loop fdivr movsb out cmp shlb scas inc xor xchg push push xor xchg out pusha push rolb fwait nop jp ret fldenv fs aaa call nop mov adc clc sub ret repz popa xchg or imul loop inc sub imul leave xlat loopne out pop scas vcvtpd2ps mov aas sub fcoms mov xchg in fs outsl fist arpl mov cmpl (bad) dec addl push ljmp add xchg adc and add inc jne ret movsl adc xor inc outsl adc pop xchg add mov pop icebp push in lret jo jo jne xorb jb and and loopne js sbb push lods pusha and aaa xlat or rclb mov fidiv movsb out ljmp mov fs push pop popf shlb mov cmp mov jp (bad) pop adc pop fsubl loopne xlat inc ljmp mov adc in mov rol or in sub or imul aas test fs aaa pusha push or icebp mov aad (bad) jmp push stos insb cwtl inc les or cmpsb test xor (bad) push cmp loopne (bad) test and sbb mov inc xchg lds jle dec push sub xchg xor shrb test sbb xchg (bad) cmovnp sahf dec (bad) cmpsl pop xchg jns incb push mov daa cmpsb sbb xor cmpsb mov or rcrl inc xchg sub add xchg mov push mov pop cmp push mov and (bad) mov hlt lcall xor adc sbb sub xchg je push push test adc aam out xchg popa test mov iret adc test fcmovu out mov hlt inc cmp rcll inc in inc jle out inc popa mov ss push add movsl xchg cmpb adc jp cmpsb jns or in inc dec sahf lahf pop jmp fwait outsl fdivrp ret mov push (bad) sub jne iret adc xlat jns mov mov sbb add outsb pop push or inc and push or and stos jecxz and ljmp aad jmp pop or in jbe scas inc (bad) repnz pop mov arpl pop mov fcmove rcl out aaa iret push dec mov out int3 jge mov sub arpl jle,pn les cld sub xchg daa ds sbb (bad) mov jmp sahf out sahf fisttpll cmp xchg add xchg jnp and dec jnp sbb ss aad and xor or sbb mov inc dec and push lock cs xor pop xchg aas and xchg jmp sbb lods scas or shll dec js psadbw mov (bad) sub (bad) jle jle push or add cmp cli push push ficomp sub dec rorl xchg sub xor pusha adc rcll push xor lea cmc fldt cmp mov andb in aas push lea fucom mov cmpsl xchg ja sub rcrl movsl fst ss je jmp mov push cmpsl nop mov movsl push xchg in xchg inc add lods or cs out pushf insl inc xchg mov sbb adc jmp pop pop iret jle push pop xlat test xor and cld sub mov dec jne pop push mov shlb fs loopne fcmove (bad) xor xchg inc push jo,pt mov repnz or popf lods dec lahf out push gs cmpl push dec sub and std out pop mov mov popf add cmpl jg mov xor dec or cmp (bad) (bad) notb sbb adc out add shl loopne mov je push (bad) sar loope adc pop icebp call mov cmpsb fmull xchg push sub je inc xchg jno insb jmp push test out jmp lock xchg (bad) push out stc stos push or cwtl inc push pop cltd xchg and dec int stc xchg cmp add test (bad) shrl xor lods xchg xor addr16 cld rclb mov (bad) imul ja aaa outsb cli sbb xchg in cmp inc inc sub push fmulp loop sbb push dec dec push fs push popa fcoms push and popa mov cwtl xchg dec or cmp fildll sahf in hlt (bad) dec stc add mov xchg dec cmp stos inc lcall iret in insl mov cwtl ljmp les loope mov sub mov adc pushf pop inc mov inc cwtl test sub aam pop pop mov and dec xchg into daa inc and (bad) (bad) jge and mulw pushf push lock pusha shlb lahf sbb (bad) jne adc cmp es and lahf add sbb call inc dec mov imul sub inc xor jp push sbb add xor leave xor fmul pop stos (bad) ficom test sub push sbb inc (bad) icebp sahf les cmpsl xchg mov xor adc shrl outsb cli fidivl mov push add push inc out mov jmp mov ret addl jl ret leave fwait loopne or mov das xchg cmp pop lahf push dec mov std (bad) lcall and push arpl notb pop push and inc (bad) fdivrs cmpsb push pop repz xor pop cwtl loope adc (bad) mov repnz inc and test insl cmp ffree bound (bad) test insl cmpsl outsl movsl aam pop xlat push dec mov dec loopne and xchg in pop repz in cld xchg es pop jl cld cmp in outsl xor and mov adc icebp icebp and mov hlt or jge movsb lret popf arpl scas loope into ficom mov dec test inc add pusha xchg or add pop and test pop dec pusha mov cmp out in out xlat xchg or inc pusha and push adc mov lcall lock mov sub dec fdivs xor mov mov rcrb mov stos lock out bound xor mov lods cli pop cwtl pop inc pop xchg sub add pushf arpl add sub pop jle add jno loop int fsubl imul jp push enter mov inc js xlat jmp icebp or mov jo mov daa mov sar ja mov sub push pop dec push cmp ja data16 (bad) cpuid movsl mov dec test jl fdivrs imulb mov push sarl mov mov push jnp imull lahf or imul mov fild mov adc lods inc pop xchg push addr16 sbb int3 xor push cmp aad mov adc out aad mov mov mov or push imul pushf xchg repz (bad) xchg lcall dec cmc out fdivr (bad) sarb mov iret test fnstenv jae ss popa repnz xchg dec movsb mov push sbb mov pop lea xchg lods fldenv (bad) mov inc rolb shr sbb test dec in data16 jmp dec pop cmpsl in mov outsl jge mov aam lods call add inc push pop mov push mov hlt xchg dec add orl (bad) xchg es hlt out mov push cmp loope fstps adc popf cld pop gs add lods xor push pop or ss or lcall mov mov xlat cmc fcoms enter fnsave xor cmpsl mov mov aad nop push add push out xchg sub sub ss mov ret mov add or mov test pop add jl cmp and loopne (bad) shrl pop dec outsb inc sub test and test pushf mov jae sub movsl dec or xor adc sbb xor (bad) cwtl add sub push cmp sbb std outsb mov fmul (bad) mov pop sahf push repz movsl inc push mov add sub dec into push inc je mull imul (bad) out les imul add cld adc fsubs daa dec pop cmpsl rcr xchg add inc lds movsb adc in sub mov loop mov ljmp fdivrs pop push cltd jnp xchg and orl fidivrl icebp repz pop cltd jg test mov jle cld sbb push jp bound or add insl rorb imul dec pop jp loopne gs test mov xchg fdecstp lret xchg sub inc or sbb insb inc repz mov sub xor (bad) movsb and sub icebp cmp dec push sub inc iret and leave jnp or mov sbb iret adc (bad) pop mov cmc pop mov mov insl or xlat sbb pop lock push mov test or loopne pop mov mov dec add test scas inc dec jno outsl leave jns xchg mov ss outsl imul pop mov push arpl sbb pop ss xorb and mov mov cmp add shll repz cltd stos das mul popf frndint add lcall pop add ljmp xor popa loop jg (bad) jae mov data16 mov cmpl dec add adc mov inc mov iret inc push scas mov test adc sbb mov pop into std (bad) loopne pushf mov add sbb jg and (bad) repnz lahf dec fnop hlt mov leave push pop push (bad) mov and lahf ret fcoms dec test popf or rclb mov cs pop (bad) add add mov and and add mov fnstenv mov adc inc mov out jnp into les lahf mov fld1 xchg inc mov mov mov cmp stc pop pop add fidivl adc punpcklwd mov sbb inc fwait fs mov push push jmp popa inc pop pop and dec lods test inc test dec fidivr mov lret pop sub icebp mov add xlat or out ds (bad) push pop mov es xor sahf sahf or rolb orl sub scas push jne push jne,pn in push push cmp out ljmp popf das andb inc or fmuls add adcl mov aad nop cld (bad) out ret out dec sub das dec test nop sti leave outsl xor out xchg ret out rolb mov out imul xor xchg xorl cmpsl out mov repz mov mov int3 mov dec clc mov cmp and xlat mov nop lods jmp mov sub adcl adc cmpl fisub jg,pt xchg add sub fwait add dec jmp je insb mov bound push inc aaa sbb imul sbb sbb sub mov lods mov mov es mov (bad) (bad) cld movsl jle push add cmp cmc jnp popl inc rorb repz icebp adc sub aaa test setne push std aad cmp popa js jge sub es push ss stos (bad) (bad) dec daa xchg push pop or outsl leave js xor or mov in daa add mov mov cmpl call pusha (bad) mov cmpsl jge lcall sub pop mov sar andl pop mov mov es stos popa int3 mov lea arpl test inc inc sbb cmc lahf mov push fs sub dec bound xchg inc xor adc pop push rolb popa push pop scas test and xchg mov mov dec xor mov test mov inc mov pop mov dec jo mov push and jbe xchg aam push mov mov sub push inc mov jae dec (bad) (bad) (bad) stos popa push out lods mov test add call jmp aas jmp or (bad) fsubrl mov or add pop jl out xchg das or arpl mov mov insl or cmp xor sbb (bad) ss lods inc rcll adc add test jb aad sbb in jbe ja in repz inc jae or into pop lods out or lock scas xchg sbb stos addr16 add cli out daa xlat test mov mov pop idivb mov jb lcall and push ljmp jecxz gs arpl or sub sbb cmp mov xor (bad) ret adc sub lock arpl xchg rorb and rcr push stos or xor sbb sub addr16 out mov jo xchg in (bad) rorb sbb lods fwait pop subl nop fs mov lahf push divl scas jg jne cmpsl test and jbe (bad) and xlat (bad) cmc sub iret pop insl out loopne mov dec mov movsl jo aam jns xchg mov aad lock xchg cmp jb pop nop insl (bad) imul mov shlb mov mov (bad) adc std xchg pop fnstenv nop jns daa (bad) jae imul cwtl cmpl sbb or out sbb mov jp das mov sub jns xor cli mov lds or bound adc push push mov xchg mov dec cmpsl iret outsl in enter lea stos pop mov fisubrl jae sub jge int inc add sub mov mov fsqrt dec jns mov iret push adc mov push in sahf daa hlt sub dec stos jp mov sub dec loopne pop (bad) sbb mov or inc mov test sahf mov mov sti dec cmp xchg cmp int in aaa sbb test mov pop out jns and add mov jno xrelease jmp push (bad) loope clc jo jo sbb fnstsw pop jecxz lahf fstp insl and (bad) sti int mov mov push mov sbb cld mov xchg fistpl cmp cli lea out insb pop cmpsb outsb scas call cmp fnclex test dec mov fsubrl push or jmp jnp repz aas mov into jmp push mov icebp lods xlat mov test fcmovu rcll inc jne xchg repz nop and notl push sbb shrl and or sahf ss sbb pop gs cmp adc ja push test mov jge sti adc bound sbbl pushw mov (bad) cmpsl adc inc cmp mov sti xor insl xlat pushf cs shl iret sbb stc decl test rorb rcrb sbb (bad) or sarb enter hlt je or inc test lcall lcall jl lret sub adc shll push sbb or xchg popf or ret inc sbb add inc hlt outsb int3 lock cmc and jg cmp arpl sti in add cmp mov or cmpsb in ljmp or jnp outsl aas sbb in das mov sub incb mov lods inc mov xchg cmp leave or cmpsl cmp divb les data16 xchg das xor ljmp mov adc subl adc adc fdivr sti (bad) aas inc cmpsb in fisttp mov mov dec test insb pop jae (bad) jo push mov pop loopne mov and jmp add daa in loope inc jno mov and imull sbb ss sbb cmp add shrb shl cmp dec enter in dec xor repnz dec xchg addr16 mov cmp add mov roll (bad) inc mov cmp xchg les es cld sub pop pop jb xlat inc popf mull xor add outsb sbbb sbb cmpsl cmp cmpsl adc jb sub into sub or std js xor es mov and cmp inc cli popf mov addl dec in (bad) leave inc leave cltd (bad) mov jnp mov scas cmpl xchg in mov leave leave inc aad in es lods pusha leave mov iret addr16 int3 mov sbb push lock jmp jnp sub aam cmp jo rorb push popa test jo out (bad) jns popa sub push sub sbb cld pop and bound cli push xchg fwait in mov xchg xchg sahf cmpsb out and jo sbb inc lock push jns,pn xor (bad) sbb (bad) adc jno popf aad incb jb pop daa (bad) push xchg inc push out jbe leave hlt mov scas test cwtl cmp data16 bound into shrl jne adc insb add mov popa pusha cmp or test popa push push xor and imul xor hlt scas (bad) jl push jg imul test mov js bound mov dec pop mov inc cmpsl insl fistpl pop shrl fs jnp adc cmp fcoml repnz inc pop pop decb (bad) mov cld fwait xchg lods adc sahf jns mov cmp in aad add push ljmp insb and aam in push in in push xchg xchg lds add lock pop in sbb dec lcall clc les dec jp (bad) inc bound in cmpsb (bad) je sahf test test je,pt push mov js mov out (bad) cmc push sbb in test mov mov xor pusha fiadd movsl es and cs and ljmp jns xorl cmp bound enter push push mov jbe in lret aam mov rclb add jnp test mov dec push mov xchg fcoms mov mov (bad) loopne adc aam loopne fs pop jle das pop cmp mov outsl (bad) cmp or lcall jns push fcmovnbe mov (bad) (bad) or enter fs sahf cwtl pop xchg xchg cld mov cld add (bad) pop adc mov popa mov or or xchg sbb mov movsl shl mov cmp sbb cmp shrl and add xor mov repz lret xorl call push lret push cmpsl mov and in std add mov lods push hlt in (bad) stc jo jg and push loop xchg mov inc nop xchg cli push in add fs sub pop xchg mov out inc stc mov punpcklbw imul movsb test xchg imul mov and rorb push call fs loop mov dec pop cli (bad) mov shr mov add icebp push xlat test mov mov lahf xchg cmp xlat lcall and push in iret aam add insb (bad) mov imulb fprem cwtl mov xchg sub loop loopne adc xor loopne xchg call pop lods and rorl pop (bad) mov fwait push push inc mov sbb loope add mov mov cs mov sbb xor adc push lods lret daa in or lcall rclb mov notl mov enter pop test outsl xchg jne jg int3 xchg and rolb jle iret push sub push push pop ja mov mov fildl cmp pop mov fs xchg cmp loopne loop dec hlt push or jg ja movsb repnz xchg push mov scas out fwait insb stos jno mov fisub ljmp rclb add iret rolb adc sarl subl test notb add mov inc jne enter lock xchg xor and in xchg fisubr mov pop enter sahf gs xor (bad) lods dec and bound adc jecxz cmc les jns ret out mov insb xchg ret ficompl jns addr16 iret sbb out ficompl mulb in imul cmp sub fsubs add add pushf or mov add or aad jae jae mov repz jnp sub arpl outsb bound pop dec ret nop jmp xchg push push cmpsl cli xchg ljmp adc mov jle aaa xor pop sub jmp (bad) xchg andl stos ficomp jae adc xchg mov inc pop jl mov mov into cmp mov mov insl ds (bad) rcrb adc xchg xor testl push or mov jae rcll mov out cmpsb sahf and xchg adc out or test psubb fldt (bad) fxch mov xor popa call sbb sahf lods fsubr int3 mulb ret push mov jo add jp mov or cli push push sahf or shlb push in xchg cmpsb dec cli outsl push int3 rol mov out or scas sub jnp mov fsubrs push call cmp (bad) test mov nop rcrl sbb mov inc mov or jnp sbb lret add jg aaa call movb mov adc xchg dec inc je aad movl xchg xor sahf mov rep cli (bad) push jg fisttpll sahf popa aad mov cltd jmp xor arpl adc in ja ljmp repz daa mov sub or mov jge (bad) xchg xor sbb sbb and push or jecxz mov jmp ds loopne mov sub (bad) repnz sbb adc cltd int3 movsb fild mov jge es out xchg add dec mov rep push aas sbb ss adc ds mov fcomp faddl xlat outsl jmp aaa ss dec ljmp dec sahf scas fistpll in lar pop and jge mov shrl ret aad into adc sub int3 repnz adc jecxz ds cmp push das sbb mov lods dec add pop out xchg add repz mov (bad) out pop lret mov testl mov int mov jg enter xchg push adc test scas and aam mov pop int3 adc std cltd add add dec push (bad) sub jle lock or sbb cmp es sub pushf std mov enter cmovl ret mov push (bad) inc xor gs inc das imul in test xor pop inc mov xchg rcll notb popa ror icebp into or add jg jae xchg jns in jb in push and pop es mov rcr xchg es (bad) cli xchg outsb push xchg cwtl ret test scas pop cmp mov jecxz ficompl pushf aaa lret pop and inc pop adc das rcrl inc jle (bad) push sub out xchg mov sbb mov xchg repz sub (bad) push inc dec adc idivb in sahf repnz hlt dec movsb in mov push fwait sbb dec lds and mov dec shrb insb mov scas cld mov mov or or imul sub inc push sbb std dec insb orl jno out inc add cmp and mov push insl cmp mov cli call cmp in add add mov shrb and dec (bad) mov jo or mov les std mov enter shll hlt (bad) aaa (bad) icebp or push cmp xlat pop and xorl enter xor icebp lods jns pop bswap push sahf int3 pop rcl pop sub fdivp jae mov sahf mov js std mov (bad) mov imul and popa lret xor cmp push cmp fstps loope sbb std add decl popf inc pop or push push arpl cmp les xchg lahf test xlat sbb adc add mov daa je pop ffreep loope mov leave stos mov mov aad mov leave in (bad) loop cmp stc mov jae push fmull addl mov adc push push cmp stos xchg mov jne mov pusha outsl in add cmp or xchg out in int3 cld add dec (bad) adc jl inc inc inc mov aas subb jmp inc icebp or jge (bad) mov mov fisttpll fiadd in in fwait ja pop stos inc xchg sub test lods mov push mov je mov mov fidivrl or push cmp xor dec stos dec xchg movsl js xor mov (bad) in pop int3 or jp mov sub inc sbb mov sub adc mov pop addr16 lcall imul cmp cld push icebp enter xchg jge fdivl aaa in (bad) adc daa xor push loope mov into add add mov sub jge jmp notl mov xor mov addr16 and ss js add lods xor int add jp mov adc je jnp add mov inc rolb mov mov push mov pop and jmp dec jbe pop mov mov xchg notb sti out mov xlat cmp pop add stos mov ljmp out cmp mov mov jg gs lods push rolb std into add mov lods dec dec mov das xchg and pop dec (bad) ud2 mov xchg adc and or pop stos fmuls cmp les inc mov inc mov int3 adc stos (bad) mov or adc shrl sbb xor xor in arpl add cmp mov mov or xor add mov jns xchg not dec xor jg fnstcw (bad) cmp jae cmp and xor sti sbb fimull pop cld inc fiaddl mov mov or jnp aaa push adc ja,pt pushf jnp cmp mov into jg jns popf pop mov dec insb cltd loope (bad) cmp stos scas cld stc pop fsts jae mov lahf inc scas hlt mov (bad) cli leave loopne pop leave sub shl icebp xchg xlat xchg xchg and add icebp dec clc and push int add fcomip bound sub mov xchg mov icebp pop jl add dec cmpsb inc dec sbb fs sbb adc lods push pusha ljmp jne adc jo out rcrl stos or (bad) mov call jns dec push xchg cmp cwtl adc orl jge or mov or data16 jns js jne ds dec pop xrelease int add or bnd int add out jb shr jmp jnp sbb xchg cmp testl sbb adc add ja lock sub dec stos adc jno cli push ja aaa pop jnp mov cmp daa inc jecxz xchg pop pop ror (bad) mov dec lcall add popa mov in mov or enter stos inc xchg ds (bad) dec inc xor mov inc push pop lds lods repnz lods jg inc or roll loop jae je in xlat xor std ror pop mov pop or jmp aad popa jo bound arpl pop clc jmp test xchg pop jmp push mov es sarb mov add notb xor push fnsave adc cmp aad aam or mov ret xor jle and scas lods mov push ja and mov mov (bad) mov popf fist mov xchg cmp push push clc and popf subl sbb sub xor pop test or pop jle out mov aad sub aam mov push lock xchg movsl mov push scas lret push push sahf inc cli pop je jbe test imul push leave xchg push and and cmpsb inc mov fldl movsl jne inc insb dec in mov in jle dec or nop ljmp add gs adc xlat push mov das ret pop test ror lock lcall mov sahf mov icebp sbb mov fsubl movsb jne inc add test int push xor jecxz loopne inc mov pop pop test sub cmpsl hlt push divb cli int adc push movsl jl pop adc mov lret push aam lcall adc and (bad) or xor mov stc pop jecxz test pop jne pop in out mov sub jae sub cmp jecxz les incl movsb cwtl xchg test stos fidivrl outsb adc xor add stc mov xchg roll aaa inc sub lcall fldl leave jge sub rorb (bad) ljmp xor xchg mov cmp xlat mov nop cmp out loopne dec pop loope aas jne sbb shll cmp inc cld lea gs xchg repnz mov xlat ret fcmovb xchg popa rcrb xchg push inc inc fbstp hlt jns pop gs stc clc pop xchg vpacksswb add imul repnz adc into int or (bad) dec sbb mov mov sbbl xchg lea negb or jmp cmc icebp movsl mov sti xor adc push cmpsb xchg mov loop dec dec int3 xor adc pop call rcll dec ret and lods jge jnp repnz push pusha adc hlt stc cwtl and ret adc mov shlb (bad) push push cmp or ja ljmp das in out mov je jns out (bad) js test movsb cmp movsl sbb daa into es push stos outsb ds inc dec cli sar pop lcall sub inc jne push xchg and add mov mov xchg jbe cmpsb (bad) inc sub in out pop loopne lods push int nop popa and mov mov cmp stos insb cli push pop cld pushl dec sbb enter pop pop sti dec test push add stc push sbb addr16 (bad) shrl and adc inc dec (bad) insb sbbb (bad) dec ret jge mov ret jno jle xor into decb test adc enter or dec aam push sub nop lock pop push rclb mov ret mov adc mov lods mov jae sti inc and push cmp dec xor rorb inc out mov adc push test lahf dec sahf dec lods dec out mov imul inc or dec loope or add rol mov inc cmp dec xor or and sub (bad) aaa cmp (bad) sub je arpl pop inc adc dec (bad) and rcll popf push dec movsb xchg and imul jle pop pushf mov cmp push jmp shl fdivrl stos in mov call mov push xor add scas fwait lock mov jl jo lcall bound js fs mov cmpsb (bad) dec out add int clc bnd fisubr push and test jecxz sbbb es cltd fcoml mov (bad) and insb adc inc cmp or xor js popa cmp outsb xchg pop pop repnz lock cmp jne mov outsl adc and xor add jo dec lret bnd push push jg ljmp jo lods fisubrl push lcall add xor inc insb xchg in jno mov clc cmp shlb fldl movsb and pop shll pop cwtl pop add sti lret in xchg lahf fsubrs mov leave popf adcb push pop push insb clc cli add dec dec or add shlb sbb mov (bad) jns loopne pop add (bad) in mov cltd mov (bad) push test repnz push mov mov dec outsl mov loope jnp xchg inc iret jbe ret mov push jle js subl jns pop sub sarb div sub rclb loopne insl inc test sbb sub xchg jo rcr push test fiadd scas (bad) (bad) xor test stos insb test popf sub cwtl xor rolb andl push xchg test pusha or sti js mov mov cwtl hlt inc fmuls inc lret fwait loop popf in dec cmc sbb (bad) gs ljmp cmp pop sbb popf stc and add cltd stos sub lods jne add ss (bad) das inc sub lahf cmp mov jnp mov dec rorb into insl pop aaa std (bad) mov popa (bad) cld loop inc insb pop jg pop lock imul out jns cli lcall aam ret inc jae in mov jecxz mov jg,pt sarl shrl sbb pushf and jno xor jmp stc xor xchg push icebp outsl cmp ret out out push std (bad) into mov call xchg add mov clc xchg jae sahf ja fidivr mov out sar xchg dec push or or xor outsl pop dec push push pop stos jmp incl add test add popa sbb push imul xorb adc adc or xchg call mov aad gs pop arpl mov xchg shrb fcoml iret pop call (bad) mov inc in xchg fs sub test mov or dec in xchg cli and xchg pop xlat in pop jbe pushf divb or lds leave sti mov arpl mov jbe jge (bad) out ret mov sti cmp aad ljmp cmovb pop cmp (bad) fdiv (bad) sahf inc xor cmp cmpsl enter rorl pop in loop dec sahf movsb adc push (bad) test movsl sarb fisubr repnz fcomps inc mov xchg scas mov jecxz movsl sub divl jecxz mov pop push lds inc (bad) in xchg jb cmpsw pop cli jle push adc jo jo in (bad) jmp and out cwtl (bad) jne push and jle mov cmp (bad) ds inc (bad) movsb sbb xchg neg cmpsl or cmp int (bad) cmc rolb xchg mov add pop lock (bad) scas mov mov jmp mov popf xchg or pop cld fsub test mov es add faddp adc testl add sbb fistpl mov (bad) int3 mov mov outsl inc rcrl push fstpt popf mov (bad) popf mov inc lea mov aaa dec jns or iret movsl pusha add cmpsl mov les stos aad sub je je cmpsb cs xchg jo lods mov xor dec xlat mov movsb pop mov loope loop mov dec mov lods popf cmp int3 jns clc loope jmp push or inc das jae (bad) inc out fist sti hlt out pop clc sub into push (bad) jecxz (bad) sbb push mov mov pop fimull xchg negl sahf loop fsubl outsl in xchg xchg mov mov add pop lods lahf insb jecxz and xor pop push add inc stc push addl adc cltd xor adc js lods cli push push loop pop ret push insl cmp or cmpsl je out sub sbb sbb and dec adc sbb inc adc or lea pop popa push pop test adc and (bad) pop cs fnstenv aaa add test jl mov adc or push push std sub and movsb push inc into xor in pop ja mov idiv lcall sbb fcomip pop jge push lahf cs mov bound mov push aam loop mov xchg sar jle loop out cli dec push ficom imul outsb outsb adc out mov jp or stos mov inc add cmp jge test jo mov xor mov mov xlat push lea dec sub insb aam out mov sti fs mov mov mov push xor nop inc add pusha xchg aad pop rcr jb aas (bad) enter cld pop (bad) es dec sbb aad lcall bnd mov hlt sub hlt add xlat scas cld lods test fistl out cmp aad xchg lods shrl inc test (bad) dec daa xchg (bad) mov sub xorl push mov xlat fisubrl sub and movsb adc xchg (bad) lahf inc ljmp dec mov iret inc es and push mov add mov and out push shll incl pop insl cmp jecxz adc int int jno sub mov setl icebp call lret jl decl jge sbb in push adc pop xchg mov push das vpshufhw and call or orl repnz or and movsb inc cmpsl nop xchg mov and xlat test aas and add stos or lcall mov lock fs dec test (bad) les fisttpll insl cmpl mov jo fsubl insb push adc orl outsb cld sbbl jmp vpsubw push adc cld cmc jl mov push lock notl sbb and adc loop pslld stc stc scas rolb adc add call das mov sub jo mov sbb sub add inc lret pop or cwtl aaa add movl rcll mov or clc lds test push rol xchg pop cmp inc test fldenv and stos and in mov push into orl inc or lea (bad) rorl mov (bad) (bad) insb out subl cld pusha push adc cmpsl stos add push mov test sbb fwait outsl divl sahf imul push push popf cmpb inc lahf cli popf xchg pop clc xchg jo callw pop scas sarl xor iret mov dec jecxz jnp pop insl (bad) mov clc mov addl adc in adc ret and cltd out or adc sub mov rcrl jp loope xor dec aaa jbe add addr16 and fiadd mov mov (bad) xchg lods dec insb add mov negl (bad) adc dec lret adc push jmp aam cmp mov fistpl fisubrl loopne scas or or int sbb stos xor cli jb repnz push mov cmp xlat in mov shrb fmul rcrb xor mov dec mov idivb or sbb cli out aas jecxz pop jge aad mov (bad) mov test mov imull sbb mov mov ret cmp and add fwait mov mov inc mov cmp scas add and push push or push push cmpl mov push (bad) jno mov in or sbb sbb jbe jne xchg cmp imul mul sti test aaa fsubr pop push imul and fwait out in jl in jne and je hlt sbb jg or jle incl lret out arpl mov sub inc or in leave loope and scas jnp sti pop cmp lods sar int3 jecxz dec inc jecxz sub push ror jb mov xchg jge into repz outsb into sbb sub mov (bad) mov xor cs push clc push mov call lahf (bad) fdivrs or xchg push or fidivr xlat and clc and imul jns fxch jge inc mov aad adc or mov jmp stos add sti jae or clc iret mov mov inc aas test mov mov mov fiadd push fwait adc pop hlt out scas pop stos dec jp,pt aad rcr shll fs dec imulb cltd add std popa cli jle mov add (bad) push imul outsl and add (bad) in adc mov mov push cmpsl cmpl and xor fcompl mov pusha (bad) lcall aam stos lret add pop ds pop insl mov xor (bad) lods rorb pushf in ja xchg push pop into paddq and lock mov mov out test dec nop fdivrs popa push dec fisubr insb daa iret pop icebp mov mov adc xor jae popa pop adc mov mov mov cli pop xchg rorb aad jp imul mov (bad) mov mov test test dec pop push movsl dec sub call fldt lahf pop adc pop mov outsb xor insl add push sbb push push mov sub out test adc test pop and pop sub xor sub in jl js mov mov mov cmp inc test xlat cwtl rcl sti jge repnz jbe add xor data16 sbb repnz lock fsts div repz sbb lahf daa or mov sub mov clc insl (bad) stos or test aas cmc (bad) cld in dec push sbb add add cmp sahf in adc cmpsb (bad) xor int3 in add pop lock movsl pop jg sbb out sbb or test arpl pop insb das roll ret andl xchg aam mov jecxz mov cltd sti fwait push icebp into inc fdivl aam aam cmp mov ljmp or push jecxz insl pushl pop dec sub jmp rorb xor (bad) xchg scas pop and test imul mov cmp in dec daa movsb icebp cmp test mov jb sahf je jae push int3 bound jno idivl sbb push sti shlb sbb scas mov push (bad) mov mov rorb hlt inc jnp pusha cmp ljmp (bad) jmp mov add xor mov inc sub and sbb add mov (bad) push shl hlt in in fsts fwait dec cwtl in hlt mov xor sub std mov xchg cltd push lds mov clc cs das jle pop cwtl dec mov mov xlat sti push mov pop data16 lock and push mov inc pop xlat mov mov or jecxz fadds lods mov jecxz dec inc fs mov jl cwtl mov ljmp lods push je jnp push jno cmpsl xchg jnp (bad) lea icebp bnd ss out lcall pusha xlat adc cli mov insb lret adc pop in add fdivs dec adc repnz outsl cli out (bad) jne jb cmpsb xor hlt (bad) push data16 lret nop stos inc mov imul scas movsl (bad) test mov rcrl push inc sub pop dec cmpl je dec inc dec add adc mov and int js test test in out push les (bad) add dec jg loopne arpl mov mov js mov (bad) mov sti sub mov das push pop sub out pop out shlb xchg sbb fnstcw mov aas addr16 movsb sbb jne sub pop lds jo mov mov (bad) xor and enter (bad) movsb jmp and mov les imul lds xchg in test xor inc repnz cmp imul xchg add sbbl dec jle inc repnz int mov mov popf fsubp mov negl mov (bad) mov (bad) inc mov fcomip popf sti dec push addr16 cltd (bad) ret into orl aam inc mov mov stc fbld jbe mov imul loope pop xorl cli bound sti test push cld shrb hlt lret mov mov pop nop add test inc out in xor add xchg sbb stos xor cmpl mov (bad) aaa pop or and movsl cmp out xor (bad) fbld packssdw sbb or add jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jne inc popf lock mov (bad) outsb dec add pushf jo dec sahf or nop int3 pop cmpsb addl xchg jmp int3 test xor jbe mov aaa or jae sbb jnp or push int data16 aaa daa aad mov loopne add inc cwtl pusha ficom imul and sbb cmp movl cmpsb and sbb and adc xor adc mov popf cmp pop mov jae hlt fcmovnb mov negb (bad) cmp sub movsb sbb sahf outsl pop inc sahf add mov aas cmp xchg shll lret mov sbb mov lret hlt push mov in push js jmp xor lahf dec rorl int shl mov les xlat cmp mov pop mov dec lds jbe mov push sub fiaddl fcomps adc mov mov push add in mov jge pusha or lds cld js outsb loop mov cwtl loope adc out inc mov icebp inc push push test aas adc psubw and in pop push movsb lds pop mov popl lods xor push aaa inc pop aad fistp (bad) mov mov mov in sbbl xor xchg cmc jno sbb sbb dec fldl (bad) gs sbb mov (bad) aam mov rcrb mov fnsave cmp cli push cld dec data16 cmpsb inc cmp mov mov jbe repnz (bad) dec pop test push mov icebp add fildll jns inc and sub push sbb fimull sbb out xlat outsl (bad) fs leave sbb pop adc out daa xchg lret cli mov add add lret adc cmpsb jns or aam loopne and call sbb je insb push sub lea push pushl pushl call add ret int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea push push call mov add mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov movq mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movl movl movl movl movl movl movl movq mov mov movl mov lea movq mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq xor movq mov mov mov movq movq mov mov mov mov mov movl movl movq movb nopl mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je inc add cmp jl or jmp lea mov mov cmp jne pop pop pop lea movl pop add ret cmpl jl mov shr and mov mov shr and mov mov and mov mov mov shr shr and movzbl cmp jne cmp jae mov jmp add mov shl add mov mov sub cmp jl lea mov lea xchg mov lea mov lea mov mov mov mov mov mov sub jne xor movb cmpb jne nopw inc cmpb je lea add push push lea push call add movb push push call add lea push call mov pop mov xor pop pop movl pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call test jne movl or ret push mov push push xor lea lea movl mov push movl movl call inc lea add cmp jb xor lea data16 lea movl lea movl push mov movl call inc lea add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb pop pop movl xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl mov mov movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpb je mov sub je sub jne mov cmp jl cmp mov jne mov pop mov pop add ret cmpl jne cmpl mov jge mov mov pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushf pop mov xor push popf pushf pop xor mov push popf xor cmp setne pop ret int3 push push push push push push mov mov mov mov mov cpuid mov mov mov mov pop pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movl movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb movb mov and inc shl mov movaps mov movups movaps movups movaps movups movaps movups cmp jb movzbl mov movzbl mov movzbl mov movzbl mov cmp jb movzwl mov mov shr and mov mov movzbl mov mov shr test je shl mov mov shr and mov mov movzbl mov jmp movl or or cmpl jb cmpl movzbl jb movzbl inc cmpb je cmp jle cmpl jl cltd sub sar mov xor pop mov pop add ret mov cmp cmovge mov jmp movl pop movl xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb je mov cmp ja jmp mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret xchg fcomip test out repnz adc test xor test push repz sub push mov push push mov cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call add mov push cmp jb xor lea mov mov nopw mov mov and je shr and cmp jne cmp jne mov jmp cmp jne xor jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov mov mov mov mov shr and and shr inc inc mov inc inc imul push push push imul imul cltd and add sar push push push call mov add mov inc add mov mov cmp jl jmp cmp jb push push call add mov or or cmp jb or lea lea or nop movzbl sub je sub jne movzwl jmp movzwl add sub jne mov cmp mov je cmp je mov mov cltd idivl mov test jg jmp mov or cmp jb movzbl cmp jb mov shr inc cmpb je cmp jle mov mov jmp mov movl cmp cmovge mov cmp jne movb jmp movl movl lea push push call mov add movups pop movaps movd psrldq psrldq movd movd cmpb je cmpl jb mov test je test je movb testb je movb cmpb jne cmpb je movl mov xor mov movzbl mov movzbl mov xor or mov mov xor mov or mov add mov mov movl cmp jge movups movups jmp lea movl mov lea push movl movl call add mov and cmp jne mov xor mov and and or or je inc add cmp jl jmp mov xor cmpl jne movl pop pop pop add ret xor pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub lea push push push push call mov add add mov nopw mov test js movzbl shr movb movzbl shr movb movzbl shr movb movb add sub jne cmpb mov pop je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je cmpl jne cmpl jne movl movl movl jmp movl movl movl cmpb je cmpl jne movl add ret movl add ret int3 jne inc popf lock pop lea lods or xchg inc fmull (bad) mov (bad) insl cmpsb fild jnp jo (bad) mov mov sbb cmp and inc jl or jmp ja arpl fcomps mov fwait mov jne movsl sub sub rcrl mov (bad) xor int3 rol sub jp jne rorb push adcl adc fcomip pop jecxz setle xor add scas les fldl (bad) jle jge cmp xchg lods in xlat bound xchg xchg inc mov jbe and aam inc lret mov (bad) cs stos dec aas test adc sub jle mov test stc test push pop push das scas dec pop mov cld iret or ror mov out rol mov adc cmp mov adc sub push dec and lds cmp rcll and std data16 loop jne scas out ljmp movsl or or xchg fldcw push idiv and aam imul xor cmpsb xorb test push stc nop sbb and (bad) cli xchg sbb movsb inc mov (bad) (bad) loope popf out lret out sbb hlt aas mov aaa lods stc push sub jbe in popa jmp mov in insb rorb pop cmp int pop aad pop jge inc pop mov pusha cmpsb and mov pop clc mov movsb or jb loopne fdiv jl imul stos inc test sbb and iret pop mov pop test add repnz push mov mov pop adc jp loopne xchg lock orl mov sub enter sbb pop sbb cmp test push and out mov iret xor or pop xchg mov inc jne xchg loopne jecxz orl sbb xchg inc and into shr mov mov cld bound mov sub lret dec and push test inc lods lret es lods sub daa ds pop pop mov fadds je fstpl pop cmp pop pop loope jae aad pop push lahf rcll mov push inc jnp sbb addl jo sbb push pop leave adc xchg (bad) adc and in dec pop cmpsb lret push add loopne and shll jno xchg mov inc das mov sahf mov stos pushf xor inc mov adc cli xchg or dec push mov add fbld sahf rcrb inc (bad) xor adc sub inc sbb jae outsl adc mov cwtl dec sarb pusha sahf or lods adc and jle addps sub pop popa imul call shlw xchg addb clc xchg loopne jns ss aas fdivl pop or and push fs scas xchg insl sbb or sarb mov (bad) nop bound cmp fs or sub add jns mov (bad) pop inc repnz jb in cmp test sbb xor pop xor repnz push insl fisubl cmove ret addr16 or mov mov and and cmp jne cmp jne mov ret xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xor test jle push mov push mov push mov nopw mov mov shl test je mov movb inc cmp jl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lret xor lods mov dec cmp mov jecxz inc je in ss popa mov xchg jbe pop arpl sub test repnz mov repz cmp cli sub fdivrl sub dec lret push push push es mov shrl arpl std in jge xchg mov out cmpsb fisttp cmp xchg add ss xor xchg or and sbb imul sub xchg dec fisubl mov std mov in mov mov pop sbb jae shl mov ja push ficom sub ret ficomp pop jbe dec push hlt in mov push sub dec sarl or sub push or out jbe dec sbb (bad) test inc insl fcoms and add shlb or dec outsl aas ss or sbbl adc icebp jo mov push mov push mov test jne or pop ret push mov mov cmp je cmp je cmp jne movsbl push call add test je pop mov pop ret cmpb jne mov mov test je nopw cmp je mov inc test jne cmpb je mov cmp jle nopl cmp je inc cmp jl pop or pop ret pop inc pop ret cmp bnd bnd bnd jmp cmp loop xor lock sub jle dec test push (bad) sbb (bad) pop stos xlat test aad daa add outsl loopne test in mov push mov add movzwl lea add movzwl imul add cmp je mov cmp jb mov add cmp jb add cmp jne xor pop pop ret mov jmp call test jne xor ret mov push mov mov jmp cmp je xor mov lock test jne xor pop ret mov pop ret call test je call jmp call push call pop test je xor ret call mov ret push call test pop setne ret call test jne xor ret call test jne call jmp mov ret call call mov ret push mov call test jne cmpl jne pushl mov push pushl call call pushl pushl call pop pop pop ret call test je push call pop ret call test je ret push call pop jmp push mov cmpl jne movb call call test jne xor pop ret call test jne push call pop jmp mov pop ret push mov sub cmpb je mov jmp push mov test je cmp jne call test je test jne push call pop test jne push call pop test je xor jmp mov lea push and mov push pop sub or ror xor mov mov mov movsl movsl movsl mov mov mov lea mov movsl movsl movsl pop movb mov pop mov pop ret push call int3 push push call andl mov cmp jne mov cmpl jne mov cmp jne mov mov sub push push call pop pop test je cmpl jl movl mov jmp mov mov xor cmpl sete mov ret mov movl xor call ret push mov call test je cmpb jne xor mov xchg pop ret push mov cmpb je cmpb jne pushl call pushl call pop pop mov pop ret push mov mov mov xor and pushl ror cmp jne call jmp push call pop neg pop sbb not and pop ret push mov pushl call neg pop sbb neg dec pop ret cmp loop sub (bad) jge (bad) push mov mov and mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub sbb not and mov and cmp bnd mov pop xchg mov mov bnd sub test jmp jmp call push call pop test je push call pop xor ret push call int3 push push push push push push call add push call mov test jne push call mov test je push push call push push mov call push push mov call mov test je test je test je andl mov push call call push call push mov call pop pop mov jmp xor push push push push call mov test je pop pop pop ret push call int3 push call mov test je push call ret push mov call mov mov inc mov mov mov mov mov mov mov call pop jmp push mov push call mov jmp push call pop cmpl je cmpl je mov mov mov mov mov jmp orl pop pop jmp push call ret mov test jne push mov mov xor and ror push mov call call pop ret push call pushl call ret push call ret push mov cmpl push jne mov mov pushl xor and ror push push mov call call test setne jmp call push pushl pushl call mov call test sete pop pop ret push push call xor mov mov mov cmp je mov call mov call mov add inc mov jmp mov mov movl call call ret mov mov test jne pushl push pushl pushl call ret push push call movb mov mov mov imul mov add mov andl mov dec mov test je sub mov mov call mov call jmp mov mov movl call call ret mov mov mov mov test jne pushl push push push call ret push push call xor mov mov mov cmp je sub mov mov call mov call inc jmp mov mov mov mov mov mov cmpl je movl mov ret call mov movl call ret push mov pop jmp push mov pushl call pop pop ret int3 int3 int3 int3 mov movsd jmp mov movsd jmp mov movsd movd and cmp jae cvtss2sd cmp jne movsd comisd jbe mov call comisd jae movsd comisd jb movdqa psllq psrlq cmp je movsd comisd ja xorpd comisd je push fstcw mov test pop jne mov call xor mov ret xorpd comisd je movsd movsd movd movdqa cmpeqsd movdqa pand por psrlq movdqa psubq movdqa psllq movdqa psubq movdqa psrlq pcmpgtd punpckldq pand pandn por pxor psubq pand pandn por movd cmp jle psllq pxor movd psrldq movd or je mov call movd psrldq movd ret mov call xor mov ret sub fstcw movzwl cmp je test jne fldcw mov movl movsd movsd mov call fstp add ret mov movsd jmp mov movsd jmp mov movsd movdqa psrldq movd and cmp jae cmp je movdqa psllq psrlq movsd comisd jbe cmp je mov call mov call jmp mov call mov call movsd comisd jae xorpd comisd je mov call mov call jmp movdqa cmp jne movsd comisd jb subpd movdqa psllq psrlq movd or je mov call comisd jae movsd comisd jb jmp mov xorps cvtsi2sd shr addsd test je xorps cvtsi2sd shr addsd mulsd addsd ret lea mov xorps cvtsi2sd xorps cvtsi2sd shr mulsd addsd addsd ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shld shl ret mov xor and shl ret xor xor ret int3 push push mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shrd shr ret mov xor and shr ret xor xor ret int3 cmp jae cmp jae shrd sar ret mov sar and sar ret sar mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub and add sbb or pop jmp cmp inc test push adc ja (bad) loop push mov mov sub je sub je sub je sub je xor inc jmp call jmp call movzbl jmp pushl pushl call pop jmp cmpl setne movzbl push call pop pop ret push push call push call pop test jne xor jmp call mov mov mov andl cmpl je push call movl call test je call call call push push call pop pop test jne call test je push push call pop pop movl xor mov movl call test jne call mov cmpl je push call pop test je pushl push pushl mov mov call call incl xor inc call ret mov pushl call pop ret push push call mov test jg xor jmp dec mov call mov andl cmpl je push call call call call andl movl call push pushl call pop pop xor test setne mov call ret call pushl call pop ret push push call mov test jne cmp jg xor jmp andl cmp je cmp je mov jmp mov push push pushl call mov mov test je push push pushl call mov mov test je push push pushl call mov mov cmp jne test jne push push pushl call push push pushl call push push pushl call test je cmp jne push push pushl call mov mov test je push push pushl call mov jmp mov mov push pushl push pushl pushl pushl call add ret mov xor mov movl mov call ret push mov push mov test jne xor inc jmp pushl mov pushl pushl call call pop pop ret push mov cmpl jne call pushl pushl pushl call add pop ret push mov push call pushl call push call push call pop ret push mov sub push call test je push pop int mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl movl push pop imul movl push pop imul mov mov push pop shl mov mov push call mov pop ret push mov push call pop ret cmp loop mov inc cmp add scas ds lea incl loop jp mov jecxz jl push loopne xchg pop test sbb rcl loop clc jl push xchg dec inc ljmp incl pop les cmp add je mov push aam xchg add std in data16 fyl2x sub out hlt push mov test lea loope or lret dec pop inc sub (bad) xorl push addb ja outsl pop dec in mov popa xchg pushl out inc push push fidivrl inc or cmp sbb push hlt jle push mov push pushl mov call movl mov pop pop ret andl mov andl movl movl ret cmp loop xchg dec scas outsl ljmp xor ret push ss rolb andl mov andl movl movl ret int3 int3 shlb or mov rcr stos push mov push mov lea movl push call testb pop je push push call pop pop mov pop pop ret push mov sub lea call push lea push call int3 push mov sub lea call push lea push call int3 push mov andl sub push xor inc or push call test je andl xor orl xor push push mov lea push cpuid mov pop mov mov mov xor mov mov mov mov xor mov xor mov mov xor mov xor inc push cpuid mov pop lea mov mov or or mov mov mov jne mov and cmp je cmp je cmp je cmp je cmp je cmp jne mov or mov jmp mov cmpl mov mov jl push pop xor push cpuid mov pop lea mov mov mov mov mov mov test je or mov jmp mov pop pop test je orl movl test je test je xor xgetbv mov mov mov mov and xor cmp jne test jne mov or movl mov test je or movl mov xor pop mov pop ret xor inc ret xor cmp setne ret push mov sub push push call test je mov int push call movl lea push push call add mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov lea mov movl mov push mov lea push push call mov add movl movl mov call push lea neg lea mov lea sbb mov inc call lea push call test jne test jne push call pop pop mov pop ret andl ret jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov bnd mov mov pop pop pop pop pop mov pop push bnd push mov sub andl lea andl push call mov xor mov call xor call xor lea push call mov lea xor xor xor mov pop ret mov push push mov mov cmp je test je not mov jmp call mov cmp jne mov jmp test jne or shl or mov not mov pop pop ret push call ret daa jmp xchg call mov orl mov call mov orl mov ret mov ret push push mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push push mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push mov push push mov push mov mov lea movb lea movl andl andl push push call pop pop mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push push pushl mov mov call movl mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push pushl mov call movl mov pop pop ret cmp loop lret icebp sbb dec fmul inc cwtl xor outsb pop int rcr xor pop iret addb and scas sbb jmp inc test add inc xchg pop add jne inc data16 adc sbb push rolb add xchg lahf imul pop push loope sbb rclb inc lock jne push mov push call add pop cmp jl pop mov pop ret push mov mov push mov mov test jne call jmp cmp jge imul add push call pop mov pop pop ret or lock jns push mov push call add pop cmp jl pop ret mov test je cmp jge imul add push call pop ret jmp push mov push call mov push push mov call mov pop pop test je push push call mov mov mov movl rep pop pop jmp call andl mov call mov mov test je push call pop mov mov pop pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg add jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg sub jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov push mov xor push mov push mov lea movl movl mov mov mov mov mov mov call mov pop mov pop ret push mov push push mov push push push mov xor push lea mov mov mov mov mov call mov call mov test je mov push mov mov call mov call mov mov pop pop pop mov pop ret cmp fwait jge pop or out cwtl sarl outsb lock cmc cmpsb jns cmpl xchg aad data16 int push mov push push mov push push mov xor push lea mov mov push movl call cmpl pop je pushl call pop andl movl mov mov pop pop mov pop ret push mov push mov push mov cmp je cmpl je pushl call pop andl test je cmpb push mov je inc cmpb jne sub inc push call mov pop test je push push push call add pop pop mov pop pop ret push mov push mov call testb je push push call pop pop mov pop pop ret cmp loop daa clc (bad) and (bad) push push or mov ljmp sahf mov add popa dec add jl push test mov imul mov call xor lea push call mov mov test jne push call mov push call pop pop push lea movl call mov mov mov mov call mov call mov mov cmpb je mov mov mov call mov call lea call mov call ret and sbb push shrl and ret adc xchg dec imul jle fwait nop fdivrp arpl pushf aad dec inc mov imul add loope or xorl repnz sahf push inc cld clc stos dec nop xchg in inc mov lea repz push insb adc mov dec (bad) or in push push call pop pop test jne mov push mov push lea call cmpl je pushl push call pop pop test jne mov push lea call pop pop ret cmp loop fdivr adc jmp mov push test xlat (bad) sub in mov xchg push mov push push call mov pop test je pushl mov call jmp xor mov pop ret push mov cmpb jne push movb call pop mov mov pop ret push mov mov push mov test je mov push mov mov call mov call mov test je mov push mov mov call mov call pop pop pop ret push mov push push lea call push call andl pop lea call mov pop ret push mov push pushl pushl pushl call add pop ret cmp loop sar test add mov mov lods fdivl loop rcrb sbb cltd push mov push push lea call mov movl mov mov test je cmp je lea mov cmp jb mov incb mov lea call mov pop ret push mov push mov push mov test je push pushl mov mov push pushl call call mov add test jne pop pop pop pop ret push mov push mov mov test je decb mov test jg mov call mov test je mov call push push call pop pop pop pop ret cmp (bad) ja (bad) push insb dec jo jle dec or ja rorb and xchg (bad) push in mov inc (bad) std pop les dec sub mov iret out cmc adc xchg push jmp or loop (bad) mov mov in sub mov xor mov push mov lea push push call pop pop lea push push call pop pop push call lea push push call mov pop pop mov cmp jl jg cmp jb cmp jne cmp jne mov cmp jl mov xor pop call mov pop ret and push dec in push mov push push lea push call mov mov mov pop ret push mov push push lea push call mov mov mov pop ret cmp loop mov pop dec outsb dec sub lds in and jo ss arpl add repz xlat (bad) mov xchg ret enter test pusha repz test jnp xchg push mov push push lea push call mov xor add pop adc sub sbb mov pop ret push mov mov mov push push mov push mov movsl movsl movsl movsl mov or test jns add adc add js mov mov xor cmp jl addl adc sub cmp jge mov mov mov cmp jge mov sub sbb add adc sub add jmp mov sub mov sbb sub mov mov cmp jl jg cmp jb or jne cmp jg mov mov mov pop pop mov pop pop ret push mov push push push mov push cmp jne mov test je push call push push push push push call mov pop mov imul mov pop mov jmp xor pop mov pop mov pop ret push mov pushl call pop ret push mov push push pushl call add pop ret push mov pushl call pop ret cmp loop sub xchg in dec lods out lret push mov sub mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov xor xor cmp push push push pushl setne lea push pushl call mov mov test je lea lea cmp sbb and je cmp ja call mov mov test je movl jmp push call mov mov pop test je movl add mov mov jmp mov mov test je push push push pushl push pushl call test je push push pushl push pushl pushl call mov add test je mov test je mov test je cmp jg push pushl pushl push pushl pushl call add jmp lea lea cmp sbb and je cmp ja call mov test je movl jmp push call mov pop test je movl add jmp mov test je push push pushl pushl pushl pushl call add test je push push cmp jne push push push push push pushl call mov test je push call pop jmp pushl pushl jmp mov push call pop mov pushl call pop mov lea pop pop pop mov xor call mov pop ret push mov mov test je sub cmpl jne push call pop pop ret push mov push push mov push push mov xor push lea mov jmp mov inc push mov call mov test je mov call call mov cmp jb mov mov pop pop mov pop ret push mov mov test je pushl dec mov call mov mov pop ret push push call mov push push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push mov push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor mov xor pop ret cmp loop push mov aad std and and mov push dec push sub xchg dec and push js (bad) xor lret mov push mov xor je pushl mov pushl pushl pushl call call jmp push xor xor inc push mov mov lock push pop jmp test je cmp jne push call mov xor lock cmp jne mov pop pop pop pop ret pushl mov pushl push call call test jne xor xor xchg cmp je push call xor jmp cmp loop push mov xchg adc and dec test lret push mov push ss push pop add xchg fmull in jp jg jg sbb xchg push mov jnp mov add mov enter mov add mov in mov (bad) push loope push or sar push bound xor and push adc inc (bad) loopne lods push adc sub mov cmpl je pushl call pop test js cmp jae mov pop ret xor pop ret cmp loop push mov cmp and and cmp icebp push push imul pop data16 fwait mov fwait lret test test les push xor lods or nop sbb jg dec push pop gs cmp pop in imul fmuls (bad) loopne and add aaa aam jns enter (bad) sbb xor xlat adc and dec mul les cmc mov xchg xchg fsts xchg mov es mov xchg sub dec loope mov adc hlt sbb pop and cmp push mov call mov movl lea mov mov movl movl call test jns call test je push call movb mov pop ret push push mov xor push push lea push call add mov mov mov mov pop pop ret push mov lea push call lea pop jmp push xor push push push call add test jne call mov test jle movzwl or mov pop ret push mov cmpl je pushl call andl pop andl andl pop ret int3 int3 push mov mov push mov movl mov mov mov mov mov movl test je mov push push mov mov call call pop mov pop pop ret push mov mov push mov mov movl mov mov movl test je cmpb je mov push push mov mov call call pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movl test je mov push push mov mov call call pop mov pop test je push call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl test je mov push push mov mov call call pop mov test je push call testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 cmp loop mov inc push rcrb sbb lds mov loop clc int xlat lret push in scas jb shl jnp pop push adc mov mov mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop jmp mov in sahf scas out inc or loop mov xor divps lret cmp inc mov xchg fmuls icebp aaa pop xorl add mov sahf adcl ror mov lret out ficoml mov loopne xchg sub or pop in push aam std mov sbb lds icebp mov scas jmp (bad) icebp aad out loopne les adc sub mov xchg dec repnz outsl rclb movsl dec aam cs sub mov push cmp adc cmp adc inc and pop pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movzbl mov mov test je imul cmp jle cmp jl btl jae rep mov mov ret btl jae movd pshufd add movups add and sub cmp jle lea lea nop movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea sub test jne jmp btl jae movd pshufd cmp jb movdqu movdqu add sub cmp jae test je lea movdqu movdqu mov mov ret test je mov inc sub test jne test je mov add sub test je lea lea mov mov add sub test jne mov mov ret int3 int3 int3 int3 int3 int3 push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop test test adc ds adc inc and pop pop ret nop mov mov mov pop pop ret nop mov mov mov mov mov pop pop ret lea mov mov mov mov mov mov mov pop pop ret nop lea lea cmp jb btl jb test je mov and sub mov mov dec dec sub jne cmp jb mov shr and sub sub std rep cld jmp nop xor test adc aas test adc inc and pop pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp push mov push mov mov push sub je sub je sub je sub je mov sub je mov push cmp jb mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne push pop sub add add cmp jae add add cmp ja jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne xor mov pop jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg lea jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je jmp mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea mov jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov movzbl mov movzbl jmp xor pop pop pop ret mov (bad) dec test adc push test adc dec test adc push test adc dec test adc push test adc dec test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc pop data16 icebp add rorb push test lods ljmp mov out mov clc (bad) xchg cmp pop pop lahf (bad) mov mov jecxz pop mov mov sbb repz sbbl sbb cld add mov into orb xor repnz xor rorb mov sarl add hlt or stos ret inc lea rclb jne mov lods push jne in pop push mov mov call pop ret push mov call mov test je mov cmp je mov test jne xor inc pop ret xor pop ret push mov mov mov push mov mov add test js mov mov mov add add pop pop ret push mov mov mov cmpl je cmpl je cmpl jne call andl jmp call cmpl jle call decl xor pop ret jmp call test setne ret call test je mov ret xor ret push mov sub mov lea andl xor mov mov mov mov mov inc movl mov mov mov mov lea mov pushl push pushl call mov mov mov mov mov pop ret push mov sub push cmpl jne mov mov mov xor inc jmp andl movl mov lea xor mov mov mov mov mov mov mov mov mov andl andl andl mov mov mov mov lea mov movl mov mov mov mov call mov mov mov call lea push mov pushl call pop pop andl cmpl je mov mov mov mov mov jmp mov mov mov pop mov pop ret cmp loop into stos sub mov arpl loop or (bad) leave xlat movsl or pop mov adc mov cmc outsb xchg mov mov mov add loope cwtl cltd (bad) (bad) gs flds push and into xor xchg clc ljmp or adc jl popf mov cmpsb push leave fdivl daa add cmc sub or in push push mov add mov mov mov mov mov mov mov mov jmp pop mov pop ret push mov push push push push push mov mov movl push pushl pushl pushl call mov mov and mov mov mov mov mov mov pop pop pop mov pop ret push mov push cld mov mov xor call push push pushl pushl push pushl pushl pushl call add pop pop ret push mov mov push mov mov call mov mov call mov mov pop pop ret push mov push call mov cmp jne call lea mov mov pop pop ret call mov jmp mov cmp je mov cmpl jne jmp mov mov jmp call int3 push mov push push cld mov mov xor call mov mov and je mov movl xor inc jmp jmp push mov pushl mov pushl mov pushl push pushl mov pushl pushl call add mov cmpl jne pushl pushl call push push push push push lea push push call add mov mov mov mov jmp xor inc pop mov pop ret cmp loop mov aad xchg cwtl jnp out cmp jg mov cld ljmp (bad) das and sub adc add stc shrb fsubl mov inc and push test je mov xor mov test je mov add xor je sub je test jne sub jb push mov shl add mov shl add jmp pop add je mov add xor je sub jne pop ret sub jb mov xor mov add xor xor add and je mov xor je xor je shr xor je xor je jmp pop lea pop ret lea pop pop ret lea pop pop ret lea pop pop ret push mov push xor cmpl jge mov mov movzwl add test jne mov sub cmp je cmp jne cmp jne mov jmp xor jmp mov mov jmp movzwl cmp jne mov test je add lea test jne xor cmp jne mov movd jmp add movups pcmpistri jne lea jmp movzwl movd pcmpistri jae lea je add jmp mov pop pop ret push mov sub push mov push push push pop mov lea rep mov test je testb je mov sub push mov mov mov mov call call mov mov test je testb je movl lea push pushl pushl pushl call pop pop pop mov pop ret ret test in fs insb int3 mov pop sbb call mov test je mov call call call int3 push mov push mov cmpb je mov test je lea mov inc test jne sub push push lea push call mov pop test je pushl push push call mov mov add xor mov movb push call pop pop pop jmp mov mov mov movb pop pop ret cmp loop push dec scas js in push inc mov lcall repz nop in jb pop cmpl jb movzbl mov shl or movd pshuflw movlhps mov mov or and shl sub movdqu pxor pcmpeqb pcmpeqb por pmovmskb and jne or add jmp bsf add movd xor cmp cmovne ret xor mov push mov shl mov test je mov add cmp je test je test jne or push mov shl push or mov mov mov mov xor add add xor xor xor xor add and jne and je and jne and jne pop pop pop xor ret lea pop ret mov cmp je test je cmp je test je shr cmp je test je cmp je test je jmp pop pop lea pop ret lea pop pop pop ret lea pop pop pop ret lea pop pop pop ret int3 int3 int3 int3 int3 push inc xor pop inc xor push mov sub push push push push cld pushl call add mov mov testl jne mov mov mov lea mov mov mov push call add or jle cmp je lea mov or je push push lea xor xor xor xor xor call pop pop mov or je js push pushl call add mov push call add lea push push call add lea push mov call mov mov mov xor xor xor xor xor call mov lea mov jmp mov jmp mov orl mov jmp push lea push push call add pop mov pop pop pop pop mov pop ret lea push pushl call add mov mov mov push mov push call add pop ret int3 int3 int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret lea push push mov jmp lea push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret push mov push push and add push mov mov mov mov sub cmpl mov jl movzwl movd pshuflw pshufd mov and cmp ja movups pxor pcmpeqw pcmpeqw por pmovmskb test jne push jmp cmp je add movzwl test jne xor cmp setne dec and jmp movzwl cmp je test je push pop add jmp bsf mov add jmp xor jmp mov mov pop mov pop ret int3 int3 int3 int3 mov mov push push push cmpl jb ja movzbl mov shl or je movd pshuflw movlhps pxor mov or movzbl add test je test jne movdqa pcmpeqb pmovmskb test jne mov movd mov and cmp ja movdqu pxor pcmpeqb pcmpeqb por pmovmskb add test je bsf sub add movzbl test je add cmp jne mov lea mov test jne and cmp ja movdqu movdqa pcmpeqb pcmpeqb pcmpeqb por pmovmskb test jne add add jmp bsf add add movzbl test je cmp jne add add jmp dec pop pop pop ret xor pop pop pop ret cmpb je mov mov and cmp ja movdqu jmp mov movzbl add pinsrb psrldq dec je test je jmp add movd mov and cmp jbe movzbl test je cmp je add jmp add pcmpistri ja jae sub add mov mov mov and cmp ja mov and cmp ja movdqu add add pcmpistri jno jns jmp movzbl test je cmp jne add add jmp mov mov test je mov test je mov mov mov add cmp je test je mov add cmp je test jne pop pop pop xor ret mov add cmp jne lea mov test je mov add cmp jne mov test je mov add cmp je jmp xor pop pop pop mov jmp lea pop pop pop ret mov pop pop pop ret cmpsl push or fdivs sti jmp (bad) mov jmp sbb xor mov mov rol pop or cmc jg jmp xor jle mov push add add push mov cmpb jne call call push call pop mov pop ret cmpsl hlt add popf add das enter mov push mov push mov mov cmp je mov add xor call mov mov add xor pop pop pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push movb movl mov lea xor push push mov mov call mov push call mov add testb jne mov lea mov mov mov cmp je lea lea mov lea mov mov test je lea call mov mov test js jle mov cmpl jne cmpl je push call add test je mov mov push pushl call call mov add mov mov mov call cmp je jmp mov mov cmp je mov jmp mov movl jmp test je mov jmp cmpl je push lea mov push mov call pushl push call add mov pop pop pop mov pop ret push lea mov push mov call mov lea push pushl call mov add mov mov call int3 push mov mov and push pop sub mov ror xor pop ret push mov push push push push mov jmp mov lea mov mov test je cmp je jmp mov push push push call mov test jne call cmp jne push push push call add test je push push push call add test je push push push call mov jmp xor test jne mov or xchg jmp mov mov xchg test je push call test jne add cmp jne xor pop pop pop mov pop ret mov jmp cmp loop fdivr loop dec cmc lret jecxz ret mov fs cmp mov cmpsl fisubrl addr16 flds mov and xor mov std cs jp hlt push mov shrl gs sub mov orl cmpsb scas mov cmp (bad) xor arpl mov test cmpsb into and inc cltd xor aas sub mov lods adc lods shrb adc add data16 (bad) decl test je pushl mov call call pop pop ret pop pop jmp push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl pushl test je mov call call jmp call pop pop ret push mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call pop pop ret mov mov push and xor push pop sub mov ror xor xor cmp sbb and add inc mov lea cmp jne pop ret push mov cmpb jne push mov cmpl je cmpl je pushl call andl add cmp jne pop pop ret push mov mov mov cmp jne xor pop ret add add mov cmp jne test je mov cmp jne add add test jne jmp sbb or pop ret push mov pushl call test je push mov push call mov pop test jne pop pop ret push mov mov test je cmp je push call pop pop ret push mov mov cmp je push mov test jne push call mov mov pop push push call pop pop push call pop pop ret call test je ret cmpl jne xor ret push push call pushl mov call mov pop cmp je test jne push pushl call pop pop test jne xor jmp push push push call mov pop pop test je push pushl call pop pop test jne xor push pushl call pop pop jmp mov xor push call pop pop push call pop mov pop ret cmpl jne xor ret push push call pushl mov call pop push mov call lea neg sbb and pop pop ret daa cs jmp clc (bad) mov mov mov inc sahf mov (bad) aad scas pop movsl push mov fadd jmp xlat (bad) pop push mov cmp je push call orl pop mov ret int3 int3 int3 int3 push mov sub push push mov add mov mov push pushl mov mov call push push call xchg call fwait or ds jmp sbbl pop call (bad) push mov push pushl mov call movl mov pop pop ret andl mov andl movl movl ret push mov mov add push lea push call neg pop sbb pop inc pop ret push push call mov mov andl mov mov mov mov pushl lea push call pop pop mov call mov mov call mov mov call mov call mov mov andl xor inc mov mov pushl pushl pushl pushl push call add mov andl jmp pushl call pop ret mov call andl mov mov cmpl jg movsbl jmp mov mov mov xor mov cmp jbe imul mov cmp mov jle mov cmp mov jg imul mov inc mov mov mov mov jmp inc mov cmp jb push push push push call add andl andl mov movl movl call mov call ret mov mov mov mov pushl call pop call mov mov call mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne mov cmpl jne test je pushl call pop test je cmpl setne movzbl push push call pop pop jmp mov ret push mov call call cmpl jne andl call call mov push push mov call call int3 push mov cmpl push mov je pushl pushl push pushl call add cmpl pushl jne push jmp pushl call push mov pushl pushl pushl push call mov inc push pushl mov mov pushl pushl pushl push pushl call add pop test je push push call pop pop ret push mov mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne cmpl jne call xor inc mov mov pop ret xor pop ret cmp loop mov mov mov mov add xchg dec push ss shll scas scas push pushf (bad) lret xchg sti jne aas movl in push into or push cmp shll enter movsl or adc mov cmp push mov sub push into and xor sub fdivrs das inc aaa adc gs mov stos pop push or push pop mov mov xchg cs xchg cld mov bound in es jg cmp das in mov lahf aas (bad) push sub sbb ret fs in dec and add push inc pop xor lret insl mov and insl or movsb sti (bad) sub adc mov or pop pop cs fdivr cmp test xor inc movsb fwait outsb fwait mov push testl push arpl (bad) icebp push mov lret cmp and cld cmp imulb mov ret pop push mov mov das mov sub insb call out push xor sub xchg xchg adc jns fldl dec add stos jmp loopne and mov fisub lds push movsb lods sti ljmp arpl inc imul in insl mov lret mov jbe jmp xor (bad) add mov pop push in mov cs and push outsb div les arpl inc push movsl adc xchg cmp sbb dec outsl out mov jl stos addr16 gs pop (bad) dec fs js jnp daa shll xor daa push sbb nop lret dec fistl (bad) pop out ljmp out out sbb inc test add pop aad imul movsb movsl sbb adc inc jle popa (bad) push insb lods cmp mov imull std ds (bad) pop xchg inc stos jae cmpsb movsb out sub int3 cmpl lea ljmp add adc ret das sbb mov mov push ds dec pop (bad) les iret pop xchg cs cli sbb xor inc mov cmp mov jecxz fild sub dec add sti mov mov mov pop xor loope clc mov sbb int icebp movsl push movsb sbb ss jae mov adc loopne cmp jge push call in xchg outsb cltd (bad) test scas (bad) push fisttpl xchg and inc inc push notb inc into xor cmpsb mov jmp daa mov outsl enter loope lret inc cmp gs insb cltd fs lods jecxz mov xor out and imull sub push negl call (bad) dec outsb push lret and cmc jns lahf pushf sarl xchg push sub jge mov out xchg sbb cmpsw push mov push push push mov cmpl je push push call mov cmpl je push call mov call cmp je cmpl je cmpl je pushl pushl push pushl pushl pushl push call add test jne cmpl je lea push lea push pushl pushl push call mov add mov cmp jae lea mov cmp jl cmp jg mov mov shl mov test je mov mov mov cmpb mov jne mov add add mov testb jne push pushl lea pushl push push push push pushl pushl pushl push call mov add mov mov inc add mov cmp jb pop pop pop mov pop ret call int3 push mov sub push push mov push test je mov xor test jle mov mov mov mov mov mov add mov mov mov mov mov mov test jle mov add mov mov pushl pushl push call add test jne mov mov dec add mov test mov mov jg jmp mov mov mov add mov sub jne pop pop mov pop mov pop ret call int3 cmp loop sub sub addr16 cmp call hlt mov imul push push push call mov mov cmpl jge mov jmp lea add andl mov push push push mov push call add sub je sub jne push lea push pushl call pop pop push pushl push call jmp lea push pushl call pop pop push pushl push call movl call ret xor inc ret mov call int3 push push call xor mov mov test je cmp je mov test jne cmp jge mov mov test js add add mov mov test jns testb je mov mov test je mov call call mov jmp call mov test je mov test je test je mov lea push push jmp testb je cmpl je test je pushl pushl push call add cmpl jne cmpl je lea push pushl call pop pop mov jmp cmp jne mov test je test je pushl lea push push call pop pop push push call add jmp cmp je test je testb push pop setne inc mov movl mov jmp xor inc ret mov jmp xor call ret push push call mov cmpl mov jg movsbl jmp mov mov call incl andl cmp je cmp jle mov cmp jge mov mov mov movl cmpl je mov mov push push mov pushl call jmp pushl call pop ret mov andl mov mov jmp call movl call cmp jne mov mov call ret mov call cmpl jle call decl ret push mov push push push pushl call pop call mov xor mov mov mov cmp jne cmpl je cmpl je mov and cmp jb testb jne testb je cmp je cmp jne push push pushl pushl call add jmp cmp jne mov and cmp jb cmp jne cmp jb testb je cmpl jne cmpl jb cmp jbe mov mov test je movzbl push pushl pushl push pushl mov pushl pushl push call call add jmp pushl pushl pushl push pushl pushl pushl push call add xor inc pop pop pop pop ret push mov mov push push push mov test je lea cmpb je testb mov je testb jne mov xor cmp je lea mov cmp jne test je mov cmp jne add add test jne mov jmp sbb or test je xor jmp testb je testb je mov testb je testb je testb je testb je xor inc mov jmp xor inc pop pop pop pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret mov and push pop sub xor ror xor mov ret push mov push mov cmpl jne cmpl je push call pop test je pushl push mov mov call call pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor push push or push cmp je mov lea mov lea mov lea sub and cmp je test je mov cmp jb mov add cmp jb push push call add test je testl je mov mov test je sub and cmp je mov cmp jb mov add cmp jb push push call add test je testl je mov mov cmp jne pop pop mov pop pop ret pop pop xor pop pop ret int3 int3 push mov push push push mov push sub push push push mov xor xor push lea mov mov mov mov mov mov test je xor mov mov pop pop pop pop mov pop ret mov mov mov cmp jb cmp jb mov mov cmp je movl xor mov mov cmp je cmp jae cmpl je mov mov jmp mov inc add cmp jbe test je mov cmp jb cmp jae mov and mov xor mov cmp jge mov mov mov cmp jne movl push call add test je pushl pushl push call add test je mov mov sub push push call add test je movl test jle mov mov xchg test jne cmp je mov lea test js cmp je sub jns mov test jns cmp jge inc mov lea jmp mov mov jmp mov test jle test js mov inc mov mov mov mov mov mov lea sub jne mov xor xchg jmp movl mov mov jmp mov mov xor cmpl sete mov ret mov movl mov mov mov jmp inc mov jmp mov push lea push push call test je cmpl je or mov mov pop pop pop pop mov pop ret mov mov push call add test je testb je mov mov sub push push call add test je cmpl jl push push mov push call add test je mov mov sub push push call add test je mov mov xchg test jne mov mov test jle lea cmp je dec sub test jg test jne cmp lea jg mov test js mov lea mov lea mov mov mov mov mov mov lea sub jne mov mov cmp jge inc mov jmp mov mov xor xchg mov mov mov pop pop pop pop mov pop ret push push mov xor push push push call add test je incl add add cmp jb mov jmp call xor pop pop ret push mov test je imul push lea push call decl sub sub jne pop mov pop ret int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret mov push pushl call add mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret nop mov mov mov push call xor xor xor xor xor jmp lea push mov push push push push push push push call pop pop pop pop ret mov push mov push push pushl call add pop ret push call mov test je mov call call call int3 ret lret mov jmp pop and fwait sysexit loope pop test dec cmpl sbb std mov inc (bad) mov les xchg addr16 jp in or sbb pop mov mov lahf mov ja push pusha fisubl dec dec fdivrl lock and xchg mov pop fidivrl rol out rclb dec jb aam mov pop popf outsl dec sbb push jno or (bad) testb out xchg xor gs mov movsl mov lcall adc push arpl popa out out jp repnz jp popa into cmp push push fstps pusha (bad) lock sbb and mov dec cmpsl repz pop roll xor or mov adc sahf cs add push test pop pop cs mov sahf iret mov or pop pop dec mov cmp xor sahf dec push (bad) mov andl inc mov idivb repnz in test sub into jnp mov push mov pushl mov call pop ret ret lret mov adc xchg insl cmp jbe mov ds pop and adc mov cmp ficompl popl outsb push loopne cmc mov sbb (bad) loope test mov add gs cmpsb xchg loop and xor cltd jns scas fidivl xchg xor adc (bad) sbb data16 data16 enter add movl push call add ret ret adc mov (bad) mov dec push es xchg dec addl add test je push pop int push push mov push push call add push call push call pop ret mov push mov push mov push pushl mov xor call pop and mov mov ror mov pop pop pop ret jmp mov push mov push mov mov movb test je mov mov mov jmp mov test jne mov mov mov mov jmp push call lea mov push lea mov mov mov push mov call push pushl call mov add mov pop test jne or mov movb mov pop pop ret mov push mov mov test je mov mov mov movzwl jmp call mov movzwl and pop ret mov push mov mov test je mov cmpl jle push pushl pushl call jmp push pushl pushl call add pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret call imul add mov shr and mov ret mov push mov call mov mov pop ret mov push mov mov test je mov pop ret test je and je cmpl ja test jne cmpl ja xor pop ret mov push mov mov test je mov pop ret test je and je cmpl jb ja cmpl ja test jne cmpl jb ja cmpl ja xor pop ret mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov mov inc mov lea push movzbl push push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov jmp mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop jmp mov inc mov mov cmp je cmp je test jne push pop pushl lea call mov jmp test jne push pop mov inc mov mov xor or div mov mov mov lea cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or cmp je cmp jae mov or mov cmp jb jne cmp jbe or jmp imul add mov mov inc mov mov jmp pushl lea mov call mov test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov push pop test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov movzwl add push push mov call pop pop test jne xor cmp setne cmp jne or jmp cmp jne mov movzwl add mov jmp mov mov movl push pop push pop test je cmp jne cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or test je test jne movl jmp movzwl add mov cmp je cmp je test jne movl push lea call mov jmp test jne mov movzwl add mov or xor divl mov push pop cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or cmp je cmp jae mov or cmp jb jne cmp jbe or jmp imul add mov movzwl add mov jmp push lea call test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov mov test je mov mov mov mov pop pop mov pop ret push pushl lea call xor mov mov mov mov jmp mov mov inc mov lea push movzbl push push mov mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov mov jmp mov mov push pop test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop mov jmp mov inc mov mov cmp je cmp je test jne movl pushl lea call mov mov jmp test jne mov mov inc mov mov mov jmp mov cltd mov mov push push push push mov call mov mov mov xor mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov mov or mov cmp jb ja cmp jb cmp jne cmp jne cmp jb ja cmp jbe or mov jmp push push pushl pushl call add mov mov adc mov inc mov mov jmp pushl lea call mov test jne mov mov xor mov jmp mov push push push call add test je call movl mov test jne or or jmp test je xor mov jmp or mov mov jmp testb je neg adc neg cmpb pop je mov andl jmp mov push mov decl mov mov test je cmp je call movl call pop ret mov push mov addl mov mov test je cmp je call movl call pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret ret lret mov pop inc mov fcoms inc xchg cmpb add fisttpl jge or xchg sub movsb mov push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop test jl jg cmp ja imul mov xor inc mov pop mov pop ret mov push mov push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop cmp jl jg cmp ja imul mov xor mov inc mov pop mov pop ret mov push mov push push andl lea push push call pop pop cmp je or jmp mov mov test je mov mov pop ret mov push mov sub xor push lea stos push stos stos stos lea push call pop pop pop cmp je or mov jmp mov mov mov test je mov mov mov pop ret mov push mov pop jmp mov push mov pop jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov xor and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns mov jmp mov cmp je mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop mov jmp mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp ret lret mov jmp pop and fwait sysexit loope pop mov sahf imul sbb loopne aad xor jmp int3 scas outsl imul dec xchg xor push jne sub js adc lods and int outsl inc aam mov cs mov fisub mov or or bnd (bad) repnz icebp xor icebp cli orl call lods test sub mov xchg lds xor add push mov jg mov (bad) ror push mov incl xor mov xor fsubrs test outsl outsl pop popa into add scas cld in sub xchg sbb mov push xlat out daa aas test xor loope mov or and aas aas jns in roll stos sub push fcompl push xchg outsl pop add mov inc out fistp push lods lds cli aaa test push imul xor ds and int loopne stos fdivrs in mov notl mov (bad) je lds mov mov xchg jge ret xorl xor sub call in sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp ret lret mov pop cmp pushf xchg sarb cmpsb pop xchg enter or pop call ret pop push aaa test jge lret push (bad) lsl add mov pop stc mov jp add mov (bad) push orl or ljmp cmpsl ja inc push loope cmp mov (bad) push sbb jg int3 sbb inc ljmp push mov cmpl jne call movl call or pop ret push mov test je cmpl jbe pushl pushl pushl pushl push pushl pushl call add test jns xor mov cmp jne call movl jmp call movl call or pop pop ret lret inc popf lock inc rcll aad or stos in pop or add mov push mov push or xor push mov div push and mov cmp jae call movl xor jmp push xor add cmp jne cmp jbe cmp ja mov jmp push call mov pop test je lea push lea call mov mov mov push call pop mov pop pop pop mov pop ret mov push mov mov dec sub je sub je sub je cmpl je mov cmp je cmp je xor jmp mov xor test sete pop ret mov pop ret xor pop ret mov push mov mov dec sub je sub je sub je cmpl je mov xor and mov or jne mov cmpw je cmpw jne mov xor cmp sete pop ret mov pop ret xor pop ret mov push mov push mov call test jne add jmp add pop pop ret mov push mov push push mov push lea mov test jne mov call mov dec add mov mov test jg test je xor mov divl dec add mov mov cmp jle cmpb sete dec and add sub add mov mov decl jmp mov sub mov inc pop mov pop pop pop ret ret lret mov bound aaa pop nop stos xchg pop or cmc sbb stos sbb fwait mov push inc sbb cmp push cmp (bad) mov mov mov mov enter push cmc or xchg gs lret mov mov and push jo and sbb scas cltd and push stos cmp jle mov mov adc popf out or sub push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push movsbw push mov mov push push call cmpl je inc cmp jl pop pop pop pop ret mov push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push xor mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov pushl call andl pop pop ret mov push mov push mov pushl call mov andl pop mov mov mov andl pop pop ret mov push mov sub mov xor mov push mov push mov mov push call mov mov pop lea pushl call mov lea mov mov mov pushl lea push mov pushl mov pushl pushl lea push call lea call lea mov call cmpb je mov andl push pushl call pop pop mov mov pop xor pop call mov pop ret mov push mov mov mov push mov mov mov mov jmp cmp je inc mov test jne mov inc test je jmp cmp je cmp je inc mov test jne mov dec cmpb je cmp jne dec mov inc inc mov test jne pop pop ret mov push mov mov lea cmp ja movsbl movzbl and jmp xor mov movzbl shr pop ret ret lret mov test lahf jp mov xchg (bad) push xorl sbb cmp mov arpl mov push mov mov lea cmp ja movzwl movzbl and jmp xor imul mov movzbl shr pop ret ret lret mov test dec add jbe jle cmp loope jmp pop add cmp jecxz jge xchg lahf mov cltd int3 lods loopne mov push mov push mov movsbl push call cmp jmp inc movzbl push call test pop jne movsbl push call pop cmp jne add mov mov mov mov mov mov mov inc mov mov mov mov inc test jne pop pop ret mov push mov push push push mov lea push push push mov mov andl mov andl dec push call mov add mov mov cmpl je mov cmp jb mov mov jmp xor cmpl jne test je mov pop pop pop mov pop ret ret lret mov fadd scas cwtl cmpsl inc sub jp push pop sbb or dec (bad) mov cmp dec insb mov mov adc xor push mov insl lods inc push add dec xchg push jnp add dec test mov into sbbl sub mov push mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea ret adc mov test adc mov test adc mov push mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl mov call test je incl cmpl jne mov pop pop ret fisub test adc movsb test adc movsb test adc movsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea push movsl test adc movsl test adc movsl test adc movsl test adc call icebp lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl mov call test je incl cmpl jne mov pop pop ret lea and test adc cmpsb test adc cmpsb test adc cmpsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl incl cmpl jne mov pop pop ret mov push cmpsl test adc cmpsl test adc cmpsl test adc cmpsl test adc daa cmp push fdivs aam push push gs xchg (bad) (bad) popf cld cli xor push cmp pop out arpl or icebp xlat xchg loop fcomps call xchg sti in mov xor sub je sub je dec sub je sub jne orl jmp orl jmp orl jmp orl jmp orl mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret rclb cmpsb enter add push rcrb add mov push mov push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret mov push mov push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret iret ljmp mov psrlq pop nop hlt push mov ss sbb mov jne popa xlat pop mov cmpw je lea push call ret addl mov mov mov test jns orl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret jle cmp push enter bound in das jbe dec add pushf jo push jns nop dec push pop aam pop add std xor inc rorl sbb imul xchg add rcll (bad) push data16 cmpsb gs lret or lods daa and pushf jne test popa and aad dec (bad) and nop push add mov jl scas dec lahf mov jae popa out iret jns jmp (bad) push xchg pop ss stc mov repnz addr16 xor pop subb mov ljmp cmpsb xchg pop sub stos or lods not fiadd cltd repz mov rcr pop sbb shrb ljmp cmovle bsr and push popf mov or stos or push push jecxz aas ror mov dec adc jg lahf mov fmuls mov movsb pop dec dec cld (bad) leave (bad) mov outsb pusha scas xor data16 ljmp mov psrlq jns ret (bad) lods mov cmp repz mov cltd pop xor movsl fstpt ret into movsl or jo dec das mov pop shl in inc add cmp jge mov (bad) leave xor lahf rorl xchg fimull push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov sub mov xor mov push push mov xor push pop push movzwl pop cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmp jne mov xor push mov mov shr inc mov push pop test je mov shr test je push pop mov jmp test je push jmp mov shr test je mov mov movzwl cmp je push pop cmp jne mov shr test je mov jmp xor cmp je push pop cmp je xor jmp mov push pop test jne test je push pop mov cmp je push pop cmp je xor jmp mov test sete dec and add cbtw mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add pop mov mov pop xor pop call mov pop ret cmpb je lea push call ret addl mov mov mov test jns orl negl mov ret cmpw je lea push call ret addl mov mov mov test jns orl negl mov ret mov push mov mov cmp ja jmp push pop pop ret xor inc pop ret push jmp push jmp xor pop ret mov enter int test adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc call mov push addl mov mov test je mov test je pushl movzbl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push push mov push addl mov mov test je mov test je pushl movzwl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push mov push push push mov push orl mov test jns mov cmp je cmp je movl jmp movl jmp jne mov cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop mov cmp je cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne movb lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push push push push mov push pop push orl mov pop test jns movzwl cmp je cmp je movl jmp movl jmp jne movzwl cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop movzwl push pop cmp je push pop cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne push pop mov lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push pushl movzbl push pushl pushl call add lea test je addl mov push mov movzwl test jne mov push mov call push lea push push call add pop test je movb jmp mov test jne mov addl mov mov mov movl mov test je mov mov mov pop pop ret ret lret mov fdivr sub (bad) mov dec xorb sbb inc out push inc mov pop fisubrl inc in cli fcmovb outsb mov push in sub dec int3 test or mov into (bad) xor out fdiv cmc cld aaa lods mov mov je cmpsl test and ja adc dec aam mov jg dec jmp out jge or in adc pop stos enter sahf ja (bad) and xchg mov mov push mov push push mov pushl call pop mov mov sub je sub je dec sub je sub je call movl call xor jmp mov addl shr test mov mov mov jmp mov addl shr test mov je mov jmp mov xor jmp mov addl shr test mov je movswl jmp movzwl jmp mov addl shr test mov je movsbl jmp movzbl cltd mov push mov mov shr test je test jg jl test jae neg adc neg or mov cmpl pop jge movl jmp andl mov cmp jle mov mov or jne andl pushl pushl cmp jne push push mov call jmp push mov call mov shr test je cmpl je mov cmpb je decl mov movb incl mov pop pop pop ret mov push mov push addl mov mov call test jne call movl call xor jmp pushl call pop sub je sub je dec sub je sub jne mov cltd mov mov jmp mov mov jmp mov mov jmp mov mov movb mov pop pop ret mov mov shr test je or mov push push call ret and mov lock jmp cmpsb ds pop in cld jecxz subl icebp push addl mov mov mov mov cmp jne mov pushl movzbl push pushl pushl call add test je test jne movl push pushl movb call jmp test jne movl push pushl call pop pop pop mov mov pop pop ret mov push push mov push addl mov mov mov mov cmp jne mov pushl movzwl push pushl pushl call add test je test jne movl push pushl movb call pop pop jmp test jne movl push push mov call pop mov mov pop pop ret mov push mov push push mov xor mov cmp jle push mov test je movzbl mov mov mov mov test je inc inc inc cmp jl pop pop mov pop pop ret mov test jne call movl call xor ret push call pop ret lret aad fsubs sti jmp sarb inc ffreep iret loop inc outsb repnz sbb mov mov fst xchg inc jno fcmovnb rorb sbb mov cld sti in call in mov push mov shr test jne push call mov mov pop cmp je cmp je and mov imul sar add jmp mov cmpb jne cmp je cmp je mov and imul sar add testb je call movl call xor jmp mov pop pop ret mov push mov mov mov shr test je mov cmpl je pushl movsbl push call pop pop cmp jne mov orl jmp mov incl pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov incl mov pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov addl mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret ret lret mov bound add xchg fadds movsl cmc inc and subb jae jl loopne sub (bad) xor arpl aas and das push icebp test adc (bad) and gs pop incb adc cmp scas notl cmp sbb dec int lahf movsb pop push jp in jp mov adc int3 dec cltd mov push nop push das lea dec cmp in push push push mov mov mov shr test je mov cmpl jne mov mov add jmp mov push mov push mov add mov mov andl mov cmp je mov push movzbl mov push call mov cmpl jne cmpl jne push push mov call mov inc cmp jne mov cmpl jne test je mov pop pop pop mov pop ret ret lret mov (bad) sub push rcll mov sti adc dec cmp cmc push xor and or push adc push push fwait mov mov cmovl add shrb loopne clc shrb add mov and pop xchg stos or jge inc lret (bad) mov je mov in and inc xchg cmp sti xor (bad) shl pop jge or xor pop xchg ja xorl sub sub inc pusha fsubl mov xor bound bound add mov pop mov lret push insl sub sub and mov lcall adc (bad) push push lea in mov push cmpsl mov and mov mov inc xlat loop xchg adc loopne ss or lds scas mov dec adc (bad) sbb mov mov sub mov mov mov mov mov mov mov mov mov mov mov mov test jne call movl call or jmp test je lea mov lea mov lea mov lea mov lea mov lea push push call pop pop mov pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret ret lret mov pop cmp pop pusha rol jns jae loop xchg mov sbb jle adc pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov mov orl mov orl mov mov and or andl mov pop ret ret lret mov loope insb pop sbb movsl lods mov ss add mov cmp sbb pop in sbb xchg leave jmp faddl jno adc or mov call in xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov orl orl pop pop ret mov push mov xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov andl and or mov pop pop ret mov push mov mov movzbl shl lea shl and or mov and or mov mov xor pop ret ret lret mov jo insb pop pusha lahf pusha lods jle jae je mov dec lahf mov pop sbb (bad) mov mov mov iret sbb xchg or fwait xchg pop (bad) nop ds dec sbb fs fwait pop mov mov jg ret xlat mov sub xor cmp xchg mov add popa stos add idivb mov addr16 cmp jne loop mov mov push mov sub mov xor mov push mov test jne call movl call or jmp cmpl je push mov cmp jne mov lea mov inc test jne sub pushl lea call pushl lea mov mov lea lea mov push pushl lea pushl pushl push call lea call cmpb pop je mov andl mov xor pop call mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret ret lret mov in xchg pushf popf insl inc cmp mov mov dec movsl in clc inc cmp mov push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov pushl mov pushl pushl pushl call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub push mov mov push call test jne push pop jmp mov mov mov mov push mov call mov lea mov lea mov mov jmp mov call push mov movzbl push push call add test jne mov mov cmp sete mov cmp je cmp jne mov call mov mov cmp je cmp je cmp je cmp je xor mov cmp jne mov mov mov mov call mov cmp je cmp je pushl mov call mov jmp mov movb call mov mov mov mov mov mov mov mov lea cmp jne movb mov call mov mov cmp je mov xor cmp sete dec and add mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc incl mov call mov mov mov jmp mov push pop mov mov mov cmp jne mov call mov mov mov lea cmp jne cmp jne mov movb mov dec call mov mov cmp je mov mov mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc mov call mov mov mov jmp xor cmpb jne lea call test je xor cmp sete dec and add jmp pushl mov call mov mov mov mov mov call mov mov cmp je cmp je cmp je cmp jne mov jmp cmpb sete test je mov call mov cmp mov sete cmp je cmp jne mov call mov mov mov cmp jne movb mov call mov mov cmp je mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae imul movb add cmp jg mov call mov mov jmp mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae mov call mov mov jmp cmpb je neg mov test jne lea call test je mov call mov pushl mov call mov lea cmp je cmpb jne dec cmp jne cmp je cmp jg cmp jl mov xor test sete dec and inc imul add cmp jle push jmp push jmp cmp jge push jmp sub mov xor mov test setne jmp push pop jmp pushl lea pushl push push call jmp pushl lea pushl push push call add pop pop pop mov pop ret mov push mov sub push mov lea push xor mov push mov mov mov mov mov mov cmp je cmp jne mov call mov mov inc mov mov cmp jne push mov call mov mov mov mov mov call mov mov cmp je cmp jne mov call inc mov cmp jne push mov call push pop pop pop pop mov pop ret lea call push jmp lea call xor test sete lea jmp mov push mov sub push push mov lea push mov xor mov mov mov mov cmp je cmp jne mov call inc mov cmp jne push mov call mov mov mov mov mov call mov cmp je lea call movzbl neg sbb and add jmp lea call push jmp mov call push push mov call pop pop test je push jmp push push call pop pop test je push movzbl mov pop push call mov jmp cmpb je mov test je movsbl lea cmp jbe lea cmp jbe lea cmp jbe cmp jne mov call mov cmp jne cmpb jne push pop pop pop pop mov pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret ret lret mov rorl or pop mov mov cld ljmp outsl lret cmp ficompl xchg repnz test dec jo clc fisttp loop push jne mov test in sahf cltd add mov xor in add sbbl jmp int inc ljmp push daa test push sbb add loopne xor mov jno shrb lahf xor or cmpb or cmp (bad) stos jno ret aad sub jns insl movsl mov pop nop leave cwtl mov sbb mov inc ret mov cmp lfs jo fdivs cmpsb and iret test adc iret test adc iret test adc iret test adc iret test adc call in mov cmp ja jmp pushl pushl call pop pop pop ret pushl pushl call jmp mov pushl movzbl push call pop pop xor pop ret mov pushl movzbl push call jmp mov pushl movzbl push call jmp mov pushl movzbl push call jmp pushl call jmp pushl push call pop pop xor inc pop ret mov pushl movzbl push call pop pop push pop pop ret mov pushl movzbl push call pop pop push jmp mov adc shrb adc shrb adc shrb adc shrb adc shrb mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov jmp push pushl lea call xor lea mov mov mov mov mov mov call mov lea push push movzbl push jmp lea call mov lea push push movzbl push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne lea call mov mov or mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov test je test jne push pop jmp lea call mov cmp je cmp je test jne push pop pushl lea call jmp test jne push pop lea call mov or mov cltd push push push push mov mov call mov mov mov mov mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov or cmp jb mov ja cmp jb cmp jne cmp jne xor cmp jb ja cmp jbe or jmp push push pushl pushl call add mov mov adc lea call mov mov jmp pushl lea call test jne pushl lea pushl call xor mov mov jmp mov push push push call add test je call movl test jne or mov mov jmp test je andl mov jmp mov mov jmp test je neg adc neg mov cmpb pop je mov andl xor mov test je mov or jne mov mov mov pop pop mov pop ret ret lret mov mov mov ds jo push adc and mov cmp fild add stc movsl sub call (bad) lea pop aaa mov pop push stc push sub pop push lds imul mov mov mov mov push mov sub fldz lea push push sub movb mov lea mov fstpl push pushl lea pushl push push call add pushl call add cmpb je cmp je cmpb je mov jmp lea mov push call jmp xor pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call movb call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne mov test je mov mov mov inc dec mov mov mov mov add adc jmp cmp je jmp mov lea push call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov movb incl mov pop pop pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call xor mov call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne cmpl je pushl lea mov push lea push push push call test je mov mov add adc jmp cmp je jmp pushl lea call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov xor mov incl mov pop pop pop mov pop ret mov push mov push mov call mov cmp je pushl movzbl push push call add test jne mov pop pop ret mov push mov addl mov mov test jne call movl call xor jmp mov incl mov mov mov pop ret mov push mov addl mov mov test jne call movl call xor jmp incl mov mov mov mov mov mov pop ret mov push mov mov mov push xor push mov lea mov mov mov push mov xor pop mov rep pop mov mov mov mov mov mov mov mov mov pop pop ret ret lret mov dec inc roll test or pop inc (bad) pop mov cmp roll pop outsl aaa pusha imul push xchg outsl hlt stc les int3 ficompl dec ljmp pushf xchg fsts push adc add add push push push cmc dec cmpsb scas push in push stc xorl push pop adc cmp mov mov push mov mov mov movzbl push call mov movb mov mov pushl pushl call pop ret ret ss mov inc lea dec fs test push mov sub cmp lret pop int out mov push xchg inc wrmsr or inc or mov rol push aad lcall sbb pop stc dec mov pop mov or dec or ret (bad) fwait jle xchg mov push stos inc sbb orb cltd or aaa xor push std mov push pop push xchg dec inc outsl and mov mov enter mov xchg xchg pop (bad) lea mov and push (bad) sub movsb xchg loopne mov sub sub psubusw push cmp movsb mov in imull mov pop hlt push pop dec add mov iret or outsl mov xor xchg inc lret imul iret cmpb je mov ret push push push push push call int3 iret ljmp add push dec das or lds pushf mov pusha dec divb push outsl dec mov in loop call in mov cmpb je call push pushl call pop pop pop ret call xor cmp setne shl or mov pop ret ret lret mov mov mul loop mov out out addl (bad) pop pop jle enter mov push push rcrb push xchg mov clc mov or xor (bad) dec push adc xor cli out sub mov loopne mov jns mov jl xchg jbe push lahf mov dec sbb mov mov dec imul add pop push sub xchg inc mov lret scas pop lea pushf xor (bad) ds in dec in outsb out inc mov xor outsl mov xchg dec loopne sahf xor lea mov dec movsb lock fucom pop cmp mov sbb mov mov test lret outsb es aaa rcrl rorl fldl add dec adc xor out outsl popa popf sbb cmpsl pop xchg shlb mov pop movsb (bad) stos sub push scas push lods mov aaa jmp bound xor jle jo cmp mov cmp jecxz adc xlat sti push push subb out dec adc mov and jmp adc test (bad) out aad mov std outsb std stc mov or mov into or xchg ret das daa push or lret mov mov mov and ret add in mov enter and adc and mov aaa dec faddl sub dec (bad) push div mov (bad) pop add mov aaa mov add sub sub dec sbb xchg lea jbe jb leave fcoms cmpsl mov daa dec mov adc sbb stos cli hlt lret imul shrl add lods into in stos fcmove fmulp mov scas jnp (bad) dec jae stos push xorl pop jns dec sbb pop dec push cltd cld or pop jl (bad) jg lcall sahf movb leave add inc and sub test leave scas std bound outsb add int div cmp daa dec pcmpeqb jg xchg push mov call fwait cmp adc lea std sub mov add adc mov ss xor (bad) pop xor scas daa jb mov xor hlt xlat lahf and loop jl adc cmpsb orl pushf ficom adc negl mov jl mov mulps push mov cmp imulb xor pop dec xchg (bad) adc add mov sub dec pusha cmp bound insb jge jnp stc mov xchg cltd cmpsl and stc (bad) xchg jle out jecxz (bad) sbb jmp cs lock cmp sub (bad) fimull in jns mov lret pop sar loopne (bad) rcrb test add rcrl aad xchg (bad) inc aaa lret jo sahf roll xor jmp loopne jo xor jecxz stos or jae mov mov cmp dec scas mov ljmp adc adc xorb insl mov cmp stc out (bad) cmp fst (bad) (bad) dec adc xchg les das iret dec aad sbb ja dec jo pop adc or jb out enter loop fwait adc lods mov mov fwait adc and push loope jle mov int ljmp cli jb mov sti inc fcompl mov loope mov ret lret je cwtl mov movsb mov push push aam mov inc dec jb push jmp notl xor js cwtl scas out push mov hlt or data16 je lock arpl (bad) fisub mov aam sub inc rcr daa js fmull xor fiadd arpl aas daa add or inc lock mov sbb icebp push or push cwtl negb movsb in cmp popa inc test in add push je add inc jbe aaa dec or call in mov cmpb je call push pushl call pop pop pop ret call xor cmp setne shl mov pop ret mov push mov sub mov xor mov mov xor push push push cmp mov sete mov dec mov and mov add mov test jns xor mov mov cmp jb mov add lea add add mov sub sub mov add mov xor mov xor mov xor mov mov mov cmp jne mov jmp mov cmp jne test je mov xor xor mov mov mul add mov adc inc mov cmp jne mov mov test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov test je xor test je xor add adc inc mov mov mov cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov xor xor jmp mov movzbl imul add inc inc mov mov cmp jne test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea mov push push lea mov push push call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov test je mov mov jmp lea jmp mov mov test jne mov xor xor mov test je lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov mov adc inc mov inc mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push push lea push call mov mov add mov test je mov sub mov jne mov test je mov test jne andl lea andl push push lea push push call mov add mov jmp xor lea mov jmp mov cmp je test je xor mov xor mov mull add mov adc inc mov cmp jne mov test je cmp jae mov mov inc mov mov jmp mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov test je push xor pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jb xor lea push push lea mov push push mov call mov add mov jmp cmp lea setb test jne lea mov lea test jne lea mov test je mov mov jmp mov mov test jne mov xor xor mov test je mov lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov test jne xor push mov mov lea push lea push push call add mov mov test jne xor jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push pop jmp mov andl bsr je inc jmp xor lea shl add mov mov cmp jae test je mov xor xor mov xor mov mov cmp je cmp jne test je xor mov xor mov mul add mov adc inc mov cmp jne mov test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add mov mov test je xor test je mov xor add mov adc inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add xor xor movzbl imul add inc inc mov mov cmp jne mov test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea push push lea mov push push mov call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov inc cmp jne mov mov shl push lea push push lea push call mov add mov mov test je mov sub mov jne mov test je mov test je cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp xor push mov mov lea push lea push push call add mov mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov mov cmpl jge sub push xor andl pop div xor inc mov mov mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja cmpl jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp mov test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp mov cmp ja mov mov mov shl push lea mov push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je mov xor xor mov mull add mov adc inc mov cmp jne mov test je mov cmp jb xor push mov mov lea push lea push push call mov add xor jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp andl xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne cmpl je cmp je cmp jne andl lea mov mov xor add adc inc mov test mov jne cmp je mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov mov test jne push mov mov lea push lea push push call add mov mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mull add mov mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push jmp mov test jne xor jmp mov andl bsr je inc jmp xor lea shl add test jne xor jmp mov andl bsr je inc jmp xor lea shl add mov sub cmp push sbb and mov pop jbe mov xor and shr push pop sub mov xor mov inc mov call mov dec bsr mov not mov je inc jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb lea mov mov jne mov mov jmp xor push mov mov lea push lea push push call mov add mov mov mov mov sub mov test je mov cmp jbe pushl mov push movzbl push pushl jmp mov sub cmp ja jb lea cmp je mov cmp jne dec cmp jne cmp je mov cmp ja inc mov mov xor and shr push pop sub mov inc mov xor mov call mov dec bsr mov not mov je lea jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb je lea mov jmp mov jmp xor push mov mov lea push lea push push call add lea push lea push call cmpl mov pop pop mov mov sete mov mov test jne cmp ja bsr je lea jmp xor jmp bsr je lea jmp xor add mov cmp jbe sub test je xor xor inc mov call mov add movb adc and and or je movb mov mov mov call mov mov mov xor cmp sbb inc and cmp sbb xor and add adc call mov mov add adc test je lea jmp sub pushl mov pushl movzbl push push push push call add jmp pushl test setne movzbl push mov movzbl push push lea push call add mov pop pop xor pop call mov pop ret ret lret mov in sub movsl test aaa sub daa scas jg fisttp sbb repz pop push (bad) or cs fcomps jo divb cmp cmc into ret aas jbe loope xchg arpl inc jl lahf push inc ja negb or mov shrb push fsts sub (bad) inc lcall and jne xor pop cmp std loop adc fnstsw pusha stos add daa push test mov test lods xchg das push pop push sbb in jbe das xchg pop fdivp sub lods mov adcb (bad) bound add aad (bad) mov rcll jbe pop push test out lret ja sub ss and pop jl or cmp inc sahf mov in fistl and rol mov ss push divb jecxz rolb mov and lds pop inc xor mov and repz xchg xor mov cmpsl mov insb or mov repz pusha insb out (bad) hlt xchg adc mov inc or jno into sbb add xchg adc fs or in mov xchg call push sbb fidiv mov mov mov fcoml xor and sub xchg pop sbb pushf pop push call pop mov lcall shrl call cwtl sbb push ja loop jp mov aas xchg adc fistl and repz mov dec add outsb (bad) jae (bad) sbb adc test add push pop jle xor or mov mov aas jp sub mov insb mov push mov xchg sub jb addr16 lcall push sub mov lcall popf shr lods (bad) adc icebp jmp cli dec in mov xchg xchg jge stc bswap inc sbb decb dec pop and push sub dec mov jo cli and mov add lods and dec mov cmp sub add xor xchg ds ret add js xor insl lret sbb pop (bad) icebp xor inc leave jl aas (bad) (bad) call pop sub stc daa xchg xchg rolb xchg fsubs inc mov and xchg dec into inc scas xchg inc inc sub in inc add xchg lock movsb in mov xor imul or mov std xchg das sahf test ss dec push mov sub ja incl ja mov popf add out adc bound aad dec sti int3 dec fwait jecxz sub lods jmp sbb sub lods repnz cmp inc and dec pusha or call pop pop hlt xchg jb aad and dec sbb jg xchg outsb cmp cmpsb dec push aam enter mov icebp aas fdivl es stos xor mov and dec mov adc pop or jns div faddl xadd and or jno jmp mov notl xchg add test ret rcl imul test sub mov fxch leave jne inc xchg cmp dec inc mov mov repz or pop jecxz (bad) daa fsubs jae adc jle,pn stc loopne dec popa aaa xchg add rolb mov sti jmp hlt outsb pushl aad mov sub ret cwtl cmp dec popa cmp pop jecxz je cmp dec mov bound or cmp add and lret int3 sub adc mov or addr16 mov test les jns (bad) dec sti or imul scas nop es (bad) int lea mov add std cmc xor or ja pop push xchg gs jnp push sbb ffree out fsubrl fildll push cmp (bad) std cltd dec mov sub push fnstsw mov je insl outsb sbb mov xor push sub fisttpll cltd das ja cmp inc rorb pushf cmc mov pop add gs dec mov xor mov jae add cmp fsubrs sbb int3 push or scas leave addl mov mov adcl push mov or je cmp jb ja cmp jbe xor pop ret mov call mov cmp pop sete dec and ret mov mov cmp jne or ret movsbl inc mov ret rclb ret sbb pusha or ret jmp adc in cmp out xor imul imul jae push movl mov or (bad) cmp pop data16 pushf ret cmpsl sub xor loopne add add add inc sub clc add cmp jle cmp je cmp je cmp je xor ret pushl call jmp pushl call pop ret xor cmp setne inc ret cmpb je or mov ret mov xor ret mov push push mov lea mov call test jne or jmp push lea mov call test jne or jmp mov call test je mov call test jne cmpl mov jne mov call cmp jne or push mov call mov and or je mov test je call mov call mov pop pop pop ret cmpb je mov ret mov sub push push push call ret mov cmp ja jmp push call ret push jmp push jmp push push call ret push push jmp push push jmp push jmp push push jmp jmp jmp xor ret (bad) pop mov in in scas out adc and je mov add sbb push cli (bad) xchg and mov call lea call cmp je cmp je xor pop ret mov pop jmp mov pop jmp mov push mov push push push mov call pushl lea movb pushl sub mov push pushl lea pushl push push call add pushl call add cmpb jne xor jmp cmpb je mov jmp push push push mov call pop mov pop ret mov push mov push lea call mov cmp jne xor jmp movzbl push cmp je lea call jmp mov call pop pop ret mov push mov push push mov call mov mov movzbl test jne mov jmp push lea mov call movzbl cmp je push mov call movsbl mov push call xor jmp mov pop pop pop pop ret mov push mov mov dec sub je sub je sub je xor pop ret call test je incl pop ret pop jmp pop jmp mov push mov cmpl push mov jne call lea call sub je sub je xor jmp push pushl mov call jmp push pushl mov call pop pop ret mov push pushl lea push call pop pop push mov call mov pop ret ret lret mov test inc mov nop inc cltd and mov cmp call mov mov movzbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne movl jmp sub je sub je sub je dec sub jne mov or push pop jne movl mov mov call mov jmp mov call incl mov movl pop pop jmp movl lea mov jmp cmp jg je cmp jle cmp je cmp je cmp jne movl jmp movl jmp movl jmp movl movl jmp sub je dec sub je sub je xor movl mov xor mov mov mov mov mov mov mov jmp movl jmp mov call movl incl mov pop pop ret mov push mov push push mov mov mov lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp or cmp jbe mov jmp push push lea xor push push mov call mov add or je mov cmp je mov mov mov mov jmp mov xor mov mov mov mov mov mov mov movl pop pop mov pop ret mov push movzbl cmp jg je cmp je cmp je cmp je cmp jne lea cmpb jne add movl mov pop ret movl jmp inc movl mov pop ret inc movl mov pop ret lea mov cmp jne cmpb jne add mov movl pop ret cmp jne cmpb jne add movl mov pop ret cmp je cmp je cmp je cmp je cmp je cmp jne mov jmp inc movl mov pop ret cmp je cmp je cmp jne inc movl mov pop ret inc movl mov pop ret lea cmpb jne add movl mov pop ret movl mov pop ret mov push mov call movzbl mov test je mov mov test jne xor movl mov mov mov mov mov mov mov mov xor jmp inc mov mov mov pop ret mov mov cmp jne lea mov jmp cmp je cmp jne movb ret mov push mov sub push mov xor mov lea mov test jne movl mov mov mov mov mov mov mov mov xor jmp push push pop mov rep mov cmpb sete mov test je inc mov mov cmpb jne inc mov orb mov cmpb je push mov mov test je cmp jne cmp je mov cmp je mov cmp jbe mov mov mov inc mov cmp je mov pushl mov call inc mov cmp jne mov jmp push mov call lea incl mov cmpb jne mov pop mov pop cmpb jne xor movl jmp test je mov call incl mov pop mov pop ret mov push mov push movzbl mov shr movzbl and jns dec or inc bts mov pop pop ret mov cmp jne movb cmp je cmp je cmp jne movb ret mov push mov movzbl push mov mov and jns dec or inc xor shr inc shl push test pop setne pop pop ret mov push mov mov test je cmp je cmp je xor pop ret push jmp push pop pop ret ret lret mov rorl mov push cs je (bad) iret push es in fildl jle mov das ret (bad) (bad) cli push test xchg test not je scas lods das fildll fnstenv adc (bad) or pop jbe or in addl mov mov adcl push mov or je cmp ja jb cmp ja mov test je cmp je mov movsbl push call pop pop ret mov push mov mov cmp je cmp jne cmpl je dec mov pop ret cmpl jne call movl call xor ret mov ret lret aad fadds sarl mov inc outsb setl nop pushl add fistpl xor jmp int3 scas outsl imul inc add xor (bad) imul stos rolb in push push push mov push mov mov movb call movzbl mov test je lea call mov push pop mov mov push mov pushl lea push lea push call mov add movsbw mov pop pop mov mov addl decl mov mov pop ret mov push mov addl mov push mov test jne call movl call xor jmp cmpb je incl add call sub je sub je dec sub je sub jne mov mov mov mov jmp mov mov jmp mov mov jmp mov mov mov pop pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret push push call call mov test je andl mov call call jmp xor inc ret mov movl call int3 call test je push call pop testb je push call test je push pop int push push push call add push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov mov mov or je add bt jae lea add pop leave ret mov push mov sub lea push pushl call mov cmp jae lea push push call pop pop test je cmpb mov mov movzbl je mov andl mov jmp cmpb je mov andl mov jmp xor mov mov mov cmpl jle mov lea sar mov push movzbl push call pop pop test je mov mov xor push mov mov pop jmp call xor movl xor mov inc mov mov lea mov mov push pushl push push push lea push pushl pushl lea push call add test jne cmp je mov andl jmp cmp jne cmpb movzbl je mov andl jmp movzbl movzbl shl or cmpb je mov andl mov pop mov pop ret ret lret mov call das shrb mov addr16 jae mov push mov pushl push pushl call add pop ret mov push mov mov test je push pushl call pop pop mov jmp mov lea cmp ja add mov pop ret mov push mov mov push test jne cmp jne call movl call mov jmp cmpl je mov cmp jbe call movl call mov jmp pop pop jmp push pushl pushl pushl call add pop pop ret mov push mov sub cmpl je push push push pushl lea call mov mov test je mov test je mov cmp jbe call movl call jmp mov cmpl jne push push push call add mov jmp sub movzbl lea push push call lea mov movzbl push push call add inc subl je test je cmp je sub cmpb je mov andl pop mov pop pop jmp xor mov pop ret mov push mov mov mov mov mov mov test je mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret ret lret mov insb xchg xchg gs xchg jo push in sub nop leave fimull pop mov int mov ljmp mov push and loope ljmp pop and icebp int das imul pop jle iret or call in mov push push cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub mov and sub vxorps add jmp vpcmpeqb vpmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub vzeroupper jmp cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub pxor mov and sub add jmp movaps pcmpeqb pmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub jmp mov mov mov add cmp je cmpb je inc cmp jne sub pop mov pop pop ret mov push mov push mov mov push push cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea mov sub mov and sub vxorps lea jmp vpcmpeqw vpmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub sar vzeroupper jmp cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea pxor mov sub mov and sub lea jmp movaps pcmpeqw pmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub jmp mov mov lea cmp je xor cmp je add cmp jne sub sar pop mov pop mov pop ret mov push mov mov test jne mov test jne call movl call mov pop ret mov test je push push push push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je movzwl pop movzwl pop sub pop pop ret push pushl pushl call add pop ret mov push mov sub lea push push pushl call mov test je mov test jne call movl call mov jmp mov push cmpl jne push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je jmp movzwl lea push push call lea movzwl movzwl lea push push call add movzwl lea test je cmp je movzwl movzwl sub pop cmpb pop pop je mov andl mov mov pop ret mov push mov mov push test je mov test je mov test jne xor mov call push pop mov call mov pop pop ret push mov sub movzwl mov lea test je sub jne pop test jne xor mov call push jmp xor jmp mov push mov push mov push test jne mov test je mov test jne call movl call mov jmp mov test je push push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl pop sub pop jmp push pushl pushl pushl call add pop mov pop ret ret lret mov mov pop jle,pn out popf jo les add sub mov (bad) ljmp jp mov mov mov jp divps adc xor int3 pop adc sbb pop jae das mov mov jmp mov pop push xchg js aam or shr jge pop int movsl cmpsl xchg adc pushf js movsl (bad) sbb cmpsb sti push mov sbb sbb or mov mov stc fcompl inc outsb out dec mov fisubl in enter cmp inc push js das dec push push pop mov and lods clc rclb xor bound dec int cltd mul sub mov xchg lret lret test adc lar ljmp add push cmp and push push call xor mov test setne test jne call movl call xor jmp mov push push call pop pop cmp sbb neg je andl push call pop andl push call pop mov mov movl call mov call ret mov push call pop ret mov push mov push push push push call mov test je cmpl je mov xor mov lea mov add cmp jne sub sar cmp je mov mov lea mov mov add cmp jne sub sar cmp jbe cmpw jne push pushl push call add test je add xor cmp jne xor pop pop mov pop ret mov lea add jmp ret lret mov (bad) push mov push mov mov push mov movzwl mov and cmp pop jne test jne xor cmp jne cmp jne cmp jne inc pop ret push pop pop ret test jne xor cmp jne cmp jne cmp jne pop ret xor test setne sub pop ret jmp mov push mov mov test je and pushl call pop pop ret mov push mov pop jmp ret lret mov in inc mov lods ds pop add push mov mov push push push test je lea test jne mov mov test je cmp jae cmp ja push pop mov lea neg and lea add add cmp jbe call movl jmp push call mov pop test je lea add not add add and sub mov sub mov jmp call movl call xor pop pop pop pop ret ret lret mov jmp in dec and push test je push push mov mov test mov jne shr jne jmp mov add mov add sub je test je test jne mov shr jne and je mov add mov add test je sub jne mov pop pop pop ret test je mov add sub je test jne mov shr jne mov add sub jne pop pop mov pop ret mov add sub je mov mov add xor xor mov add test je test je test je test je test jne mov jmp and mov jmp and mov jmp xor mov add xor sub je xor mov add sub jne and jne mov pop pop pop ret mov push push pop test jne mov jmp cmp jge mov mov push push call push mov call add cmpl jne push push mov call push mov call add cmpl jne or pop ret push xor mov push push lea push call mov mov sar mov mov and imul mov mov cmp je cmp je test jne movl add inc cmp jne pop xor pop ret mov push mov imul add pop ret mov push call call xor mov pushl call mov pop mov add push call add cmp jne pushl call andl pop pop ret mov push mov mov add push call pop ret mov push mov mov add push call pop ret push push mov mov mov test je sub test je movzbl cmp jne test je inc sub jbe test jne lea and cmp ja mov cmp jne sub jbe lea add not and test je xor pop pop ret jmp int3 int3 int3 sbb or pop pop ret call mov call mov mov ret mov scas pop popa in outsl clc mov test lods and mov inc leave ret push sbb xor (bad) int mov pop outsb push jl insl lds movsl push dec jecxz pop inc cmp sub call in push call mov push mov call pop mov call mov pop pop ret cmpsl sarb inc rcll in fldenv lods dec shr cmp jne mov ret add ret push push call mov cmp jne call andl call movl jmp test js cmp jae mov sar mov mov and imul mov mov movzbl and je push call pop or mov mov mov andl mov mov mov testb jne call movl call andl jmp pushl pushl pushl push call add mov mov mov mov movl call mov jmp mov mov mov push call pop ret call andl call movl call or mov mov call ret mov push mov push push push mov push push call or pop cmp jne call movl mov mov jmp pushl lea push pushl pushl push call test jne call push call pop jmp mov mov and cmp je mov mov and sar imul mov andb pop pop mov pop ret mov push mov pushl pushl pushl pushl call add pop ret ret lret mov pop inc rcrb sbb lds push iret loop sbb mov push mov push push push push push push call mov xor mov pop pop test jne mov jmp lea cmp je push lea mov push push lea push call orl mov lea mov lea movl movb andb mov cmp jne mov pop push call pop mov pop pop mov pop ret mov push mov push mov test je push lea push mov cmp je push call add cmp jne push call pop pop pop pop pop ret push push call cmpl sbb neg jne call push pop mov call mov call ret xor mov push call pop mov mov mov mov cmp jl cmp jne call mov test jne push pop mov movl call jmp mov add mov inc jmp mov push call pop ret ret lret mov and xor fnstenv sahf mov cltd int push (bad) jno xchg pop into aam xchg cmp mov mov mov and sar imul add push call pop ret mov push mov push push mov push test js cmp jae mov mov and sar imul mov testb je cmpl je call cmp jne xor sub je sub je sub jne push push jmp push push jmp push push call mov orl xor jmp call movl call andl or pop pop pop pop ret mov push mov mov cmp jne call andl call movl jmp test js cmp jae mov and sar imul mov testb je mov pop ret call andl call movl call or pop ret mov push mov mov push mov test je mov sub movzwl mov add test je sub jne test je sub je xor shr rep adc rep mov pop pop ret push push call andl mov pushl call pop andl mov mov mov mov sar mov and imul mov testb je push call pop mov jmp call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call andl call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call andl call movl call or pop mov pop ret mov push mov push push mov push call pop cmp jne xor jmp mov cmp jne testb jne cmp jne testb je push call push mov call pop pop cmp je push call pop push call test jne call mov push call pop mov and sar imul mov movb test je push call pop or jmp xor pop pop pop ret mov push mov sub mov xor mov mov mov and sar push imul push mov push mov mov mov mov mov mov add mov call mov mov mov xor mov mov mov cmp jae mov xor mov mov mov mov mov test je mov and mov lea push mov mov push jmp call movzbl mov test je cmp jae push lea push push call add cmp je inc jmp push push lea push call add cmp je xor lea push push push push push lea inc push push pushl call mov test je push lea push push lea push pushl call test je mov sub add mov mov cmp jb cmpb jne push pop push mov lea push push lea push pushl call test je cmpl jb incl incl cmp jb jmp mov mov mov mov mov orb incl jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov push push push mov xor push mov mov mov mov mov add mov cmp jae movzwl push call pop cmp jne addl cmp jne push pop push call pop cmp jne incl incl add cmp jb jmp call mov pop mov pop pop mov pop ret ret lret mov loope lret sarb inc cltd mov pop xchg into xor into push mov sub push stc std xor mov aaa popf inc push gs jne sbb lock dec push dec movsl dec and lds out sbb add dec call imul cmp jl jo lods push (bad) and mov mov mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov andl add andl andl mov mov jmp lea cmp jae mov inc cmp jne incl movb inc mov lea inc cmp mov jb lea sub lea push push push lea push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov add mov xor mov mov mov mov jmp lea cmp jae movzwl add cmp jne addl push pop mov add mov lea add cmp mov jb lea sub lea push push and lea push push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret ret lret mov jmp rcll scas xor xchg test pop je arpl and push fisttp lcall iret (bad) int3 lret add jl cmp jg iret rcr daa jae add stc inc mov lahf mov add inc jle popf in outsl add mov aam or ljmp ds sbb pusha push and cwtl in push jno xchg pop pop es sbb loop add aad adc adc cmpsb mov dec add leave cmp mov ret inc repz push flds into pop pusha mov xchg pop jbe sahf sub repz add fdiv aam js xchg ret cmp cmpsb inc iret and xor mov pop pop push fucomip dec cmpsb fwait mov push xchg sahf (bad) mov xlat push fnop xchg nop jg jmp and mov cwtl out xlat lods jg outsb (bad) in xor push scas adc mov (bad) decl (bad) jne call andl call movl jmp test js cmp jae mov sar mov and imul mov mov movzbl and je push call pop or mov andl mov mov testb jne call movl call andl jmp pushl pushl push call add mov mov movl call mov jmp mov mov push call pop ret call andl call movl call or call ret ret lret mov jge sbb jnp test (bad) leave xlat pop pop mov loop enter rclb shlb (bad) jmp xor mov xor sub xorb jnp out (bad) ror pop sbb inc mov rcrb lea sbb and dec xchg mov mov cli dec push xchg cmp out push shrb add jno out dec pusha pop inc and imul xchg xchg and iret sahf pop setl into enter stos sarl sbb leave mov insb mov aam push test rolb sub jmp cmpsl xor inc lcall (bad) data16 cmpsb jo push xchg xor (bad) adc std jbe addr16 pusha mov icebp sbb movsb mov daa scas dec mov push inc orl sub mov les lock or push xchg stos xor dec sbbl dec adc dec aas add (bad) outsb mov push add mov pop mov (bad) jge iret pop inc icebp sbb pop jle push and xchg scas jl sub mov cmpsl mov lahf push cli mov sbb pop leave pop dec stc roll aas dec imul mov and mov jns jecxz aad out push mull inc movsl dec subb popf andb or mov or sbb and out loop ss and jbe lret loopne sarb pop adc and (bad) pop int add xchg pop dec or cltd mov sbb add or cmp mov mov pop loope in into (bad) mov push mov sub mov xor mov mov push mov push xor mov mov push mov mov test je test jne xor jmp test jne call movl call or jmp pushl lea call mov test je mov cmp jne test je mov cmp ja mov mov mov add test je inc cmp jb jmp cmpl jne test je mov mov cmp je add subl jne cmp je cmp jne mov sub sar inc lea push push push push push push push pushl call mov test je cmpl jne mov cmpb jne dec jmp lea push push push push push push push pushl call mov test je cmp jne lea jmp cmp jne call cmp jne test je mov mov mov cmp jle push pop lea push push push lea push push push push pushl call mov mov test je cmp jne test js cmp ja lea cmp ja mov mov test jle mov mov mov test je mov inc inc mov cmp jl mov add mov cmp jb jmp call or movl jmp mov cmp jne movzwl test je mov cmp ja add inc movzwl test jne mov jmp lea push push push push push push push pushl call test je cmp jne lea jmp call or movl cmpb je mov andl mov mov pop pop xor pop call mov pop ret mov push mov push push mov xor mov push mov test je test je test je mov push mov test je mov mov cmp ja mov cmp jbe call push jmp test je call push pop mov call mov jmp pushl push pushl push call add cmp jne test je movb call mov jmp inc test je cmp jbe cmpl je movb cmp ja call push pop mov call mov jmp push mov pop jmp mov movb jmp mov test je mov mov pop pop pop mov pop ret mov ret mov push mov mov test jne pop ret mov mov push sub je movzwl test je cmp jne add add jmp movzwl movzwl sub pop pop ret push push call mov test jne call push call call mov call test je push call neg sbb inc mov andl mov pushl mov call call push call mov mov mov mov push push call pop pop ret mov pushl call int3 ret lret mov insb pop inc scas mov insl ljmp fisubl psllw and jg xor aas repz test push faddl mov orb xchg push push dec push mov rol cmp dec (bad) gs sub mov loope mov daa cs (bad) pop xchg mov outsl mov sahf ror in add jns dec inc idiv push add out dec xor xor mov enter push mov in push push push push call push mov call add test je mov mov mov lea push push push mov call push lea call mov pop mov pop ret mov push mov push push cmpl jne call movl call xor jmp push push pushl pushl call mov pop pop test je lea push pushl push push pushl pushl call mov test jne call push call pop xor push lea call mov pop pop mov pop ret mov test je mov mov xor jmp mov push mov pushl call int3 mov push mov pushl mov call pop ret ret lret mov adc xchg insl cmp jbe enter push or cmpl insb pop (bad) pop test lahf lds ss xor mov addl scas adc repz in push call pop andl mov mov and xor ror mov movl call mov call ret mov push call pop ret mov push mov mov cmp je xor pop ret pushl push call pop pop pop ret mov push mov push push mov xor mov push call mov test je mov mov push xor push lea cmp je mov cmp je add cmp jne mov test je mov test jne xor jmp cmp jne xor mov inc jmp cmp je mov mov mov mov cmpl jne lea lea jmp mov add cmp jne mov mov cmp ja je cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl jmp movl jmp cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl pushl mov push call call pop mov jmp pushl mov mov call call mov pop mov or pop pop mov xor pop call mov pop ret ret lret mov loope inc pop sub push push call mov test jne call test je pushl call pop push call pop andl cmpb jne xor inc mov xchg movl mov test jne mov mov and push pop sub xor ror xor mov cmp je xor xor push push push mov ror mov call call push jmp cmp jne push call pop andl test jne push push call pop pop push push call pop pop test jne movb movl call test jne pushl call mov mov pushl call add ret mov call mov push call pop ret call ret mov push mov call test je mov mov shr test jne pushl call push call pushl call pop pushl call int3 push call mov test jne xor ret mov cmp jne mov add cmpl jne mov cmp jne cmpl jbe cmpl setne ret mov push mov push push mov xor mov andl lea push push push call test je push push pushl call mov test je pushl mov call call pop cmpl je pushl call mov xor call mov pop ret mov push mov mov mov pop ret push push push call add ret mov push mov push push pushl call add pop ret mov ret mov push mov sub cmpl push je cmpl je call push pop mov call mov jmp push push call push mov xor push push call mov mov test je cmpb jne mov lea mov push lea mov push push push push call push pushl pushl call mov add test jne call push pop mov jmp lea push lea push mov lea push push push call add cmpl jne mov dec mov mov mov mov mov jmp lea mov push push call mov pop pop test je mov jmp mov mov mov cmp je lea inc cmp jne mov mov mov mov mov push call pop mov push call pop pop mov pop pop mov pop ret mov push mov push mov push mov push mov push andl mov movl mov test je mov add mov xor mov cmpb jne test mov sete inc mov jmp incl test je mov mov inc mov inc mov movsbl push call pop test je incl test je mov mov inc inc mov test je mov test jne cmp je cmp jne test je movb jmp dec movb cmpb je mov cmp je cmp jne inc jmp cmpb je mov test je mov add mov mov incl xor inc xor jmp inc inc cmpb je cmpb jne test jne mov test je lea cmpb jne mov jmp mov xor test sete shr jmp dec test je movb inc incl test jne mov test je cmpb jne cmp je cmp je test je test je mov inc movsbl push call pop test je inc incl test je mov mov inc incl inc jmp test je movb inc incl jmp mov pop pop pop test je andl mov incl mov pop ret ret lret mov push xchg shrb shll mov les adc jo jmp int xchg xchg std sub fwait cmpl or iret jle mov or mov dec and mov push mov pop jmp mov test jne cmp jne xor ret call test jne call neg sbb not and ret cmpl je xor ret push push call call mov test jne or jmp push call pop test jne or jmp push mov mov call xor push call pop push call pop mov pop pop ret lret stos push in inc les enter test cmc mov lea out daa fs add outsl mov sub mul jl jmp mov and lds in arpl push push and mov ja dec mov cmp adc or mov fstpl outsb cmp inc idivl inc pop (bad) lods (bad) cmpsl jmp scas cmpsl xchg lahf repz and cmpsb mov pop sbb dec mov ret scas loop adc orl movsl fisubrl ret jecxz les outsl hlt arpl ret push loop movsb jmp lock outsl and jne out in sub xor cmp push lods imul mov sbb add ficom push icebp sub imul inc cmpsb sbb xor es iret in fcmovb inc xor mov and mov shlb push dec (bad) sub enter mov dec ds call mov adc leave neg push sbb stc dec ja mov mov push xchg jle and dec ret cmp dec mov sub fsts icebp xchg cli aad cmc xchg mov subb push or dec push fisubrl and cwtl adc add jl fmull cmp inc arpl cmp push xor add pushf push mov push std (bad) (bad) negl (bad) jecxz adc into mov xchg push sbbl add cld call andb fwait add test lea xor int pop loopne dec mov or fldcw jmp call in push mov test je mov push mov jmp push call lea mov pop test jne push call pop pop pop pop ret mov push mov test jne or pop ret push push xor jmp push push push pushl push push call mov test je push push call mov pop pop test je push push push pushl xor push push call test je push push call push call add add cmp jne xor pop pop pop ret push call pop or jmp mov push mov push mov xor mov push mov push lea jmp mov push call call pop add cmp jne mov pop xor pop call mov pop ret mov push mov mov mov cmp je push call pop pop ret mov push mov mov mov cmp je push call pop pop ret jmp push mov call push mov call pushl call pushl call pop pop ret jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret ret lret mov lods dec outsb ja sub push xlat inc les mov icebp adcl daa push pop pop in mov fsubrl cli loopne,pn mov dec negb inc dec icebp or gs cld sub push mov push mov mov and push pop sub mov ror xor pop ret mov push mov sub mov xor mov mov mov push mov mov test jne or jmp mov push push mov mov mov and xor mov mov xor ror ror test je cmp je mov mov push pop sub xor ror xor sub cmp jb cmp je mov mov xor ror mov mov call call mov mov mov and mov mov mov mov mov xor mov xor mov rorl ror mov cmp jne push pop cmp je mov mov mov mov mov jmp cmp je push call mov pop mov xor and push pop sub ror mov xor mov mov mov mov mov mov mov mov mov pop xor pop mov xor pop call mov pop ret mov push mov sub mov mov push mov mov test jne or jmp mov mov push mov and push mov xor mov xor xor ror ror ror cmp jne sub mov sar cmp ja mov lea test jne push pop cmp jb push push push call push mov call mov add test jne push lea push push call push mov call mov add test jne or jmp lea mov mov lea mov mov and push pop sub xor ror mov xor mov mov sub add shr cmp sbb not and mov je mov xor inc mov lea cmp jne mov mov pushl call push mov call mov mov mov mov lea push call mov push mov mov call mov add mov mov xor pop pop pop mov pop ret mov push mov pushl push call pop pop pop ret ret lret mov pusha or aaa push aam ret pop in lret loopne cmp push mov push mov push mov test jne or jmp mov cmp jne mov and push pop sub xor ror xor mov mov mov xor pop pop ret mov push mov push push lea mov lea mov lea push push call pop pop mov pop ret push mov call mov ret daa fchs fwait mov adc clc (bad) mov mov jbe iret loop jmp add pushl ret mov push push and xor pop sub ror xor push call push call push call push call push call add mov pop ret push call pop ret mov or push lock jne mov mov cmp je push call pop mov pushl call pushl xor mov call pushl mov call pushl mov call add mov mov pop ret push push call pop pop ret call test setne ret call mov ret push push call pop pop ret mov push mov pushl call pop mov pop ret mov push mov mov test je push jmp test je xor inc pop ret test je push jmp test je push pop pop ret movzbl and add pop ret mov push mov push push and add push mov mov mov sub mov xor mov push mov lea push push push pushl call add test jne andl push lea push lea push pushl lea pushl push lea push call mov add pushl call pop mov call test je test je fldl push sub fstpl fldz fstpl fldl fstpl pushl push call add jmp push call movl push call fldl pop pop mov pop xor pop call mov pop mov pop ret ret lret mov (bad) jmp xchg fbstp xchg in pop dec jne insb pop mov daa scas xor shrl inc je dec fadd jmp (bad) movsb jnp cmp lods or cmpsb mov sub bnd push jo push xchg jbe mov daa and pop pushf push es arpl pop clc loope pop xchg or (bad) imul push mov lock sbb fsubrs and jns scas jmp enter mov push (bad) mov xchg dec idiv mov jle jae xchg cltd cli gs mov jno (bad) xchg mov addr16 popl mov or cmp lds add das and pop loop testl mov in ja add pop dec sahf mov test pushw mov dec pop (bad) push xchg jne (bad) insl mov push ljmp ljmp jl jnp cmp jmp add scas rcrl and jne pop and test adc movsb je pop jns xchg lock xchg fcomps ret jae outsl int (bad) adc xchg xor push dec outsb arpl enter fcmovnb xor or lds ret out cld or sbb outsb scas mov popf mov cmp mov jb out sti sub loope js in into ja jp fcmovnbe lods inc (bad) mov sahf leave lcall sbb lods sti push sbbl dec push cmp fldl mov stos mov mov push ss cmc add or and outsl add scas ljmp repnz ja jg pop popf ljmp sub enter jno xchg test in mov xor push xor inc mov mov push mov mov mov mov mov test je mov mov or test je mov mov orl test je mov mov orl test je mov mov orl test je mov mov orl mov push mov mov shl not xor and xor mov mov add not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor call mov test je mov orl test je mov orl test je mov orl test je mov orl test je mov or mov mov and je cmp je cmp je cmp jne mov orl jmp mov mov and or mov jmp mov mov and or jmp mov andl mov mov and je cmp je cmp jne mov andl jmp mov mov and or jmp mov mov and or mov mov mov shl xor and xor mov or cmpl je mov andl mov flds mov fstps mov or mov mov andl mov flds fstps jmp mov mov and or mov mov fldl mov fstpl mov or mov mov mov and or mov mov fldl fstpl call lea push push push push call mov testb je andl testb je andl testb je andl testb je andl testb je andl mov mov and sub je sub je sub je sub jne orl jmp mov and or mov jmp mov and or jmp and mov shr and sub je sub je sub jne and jmp mov and or jmp mov and or mov cmpl pop je flds fstps jmp fldl fstpl pop pop pop ret mov push mov mov cmp je add cmp ja call movl pop ret call movl pop ret ret lret mov lds test xchg adc jns pop (bad) xor inc (bad) out mov or fisttpll sar pop mov aaa pop jg aas push dec jo mov xchg cmpsl adc xor push pop xchg push push adc (bad) imul cmp sbb out xchg jno int and cmc cmp cwtl sub scas inc xchg mov dec jb mov mov (bad) sub add dec mov jg cmpsb jp fwait jecxz lret push jge mov call in push push mov xor mov mov push push mov sub add push xor shr cmp sbb not and je mov mov test je mov call call add inc cmp jne mov pop pop xor pop call mov pop ret mov push mov push mov xor mov push mov push jmp mov test je mov call call test jne add cmp jne xor mov pop xor pop call mov pop ret mov push mov cmpl jne xor pop ret mov lea mov inc test jne sub push push lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push mov cmpl jne xor pop ret mov push xor lea mov add cmp jne sub sar push lea lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push push mov xor push push push call test je incl add add cmp jb mov jmp push call pop xor pop pop ret mov push mov imul add push call pop ret mov push mov test je imul push lea push call decl sub sub jne pop mov pop ret mov push mov imul add push call pop ret push call pop ret push call pop ret ret lret mov insb pop inc mov std (bad) cmpsb mov fistpll xor xchg dec xchg xchg adc (bad) (bad) jo outsl cmpsl push sbb and inc inc push mov stc ja push (bad) push aam out adc ljmp scas add inc scas cmp adc into mov fsub fstpl pushl mov stos mov push push xchg and lret gs pop xchg mov packsswb nop andl cmpsb pop cwtl xor mov pop adcb test sahf inc ret mov push mov push call mov mov lea push push call mov pop pop add mov pop ret ret lret mov jge sbb jnp test push in sahf cmpsl mov call rcl das sub inc push movsb mov aam arpl sbb push add mov cli sub xor fldcw sbb mov push scas rcrb test and fs cmp pop mov lods jmp ret shrb add in mov addr16 xor inc clc mov push enter leave stos push cld mov shrb stos adc cs mov rclb in out xlat out out (bad) das push shrl mov xchg cmp push xchg sbb fistl and or (bad) jp pop adc jnp cmp add shrb in mov push outsl xchg pop (bad) out cmpsb lock rcrb jne iret leave fwait test push testl and add add inc sub data16 cld cmp imulb cmp fdivr data16 pop cmpsb xchg je scas fsub negl push add or int mov lods sahf xchg mov in lea dec cmp std mov repnz repz cmp xorb cwtl ret scas pop mov sbb sub call jns xchg add jp push inc sahf adc dec popf cli mov sbb push adc jp in xchg adc jbe pop jg leave sar fistpl dec pop mov mov rcrb (bad) mov arpl sbb mov jbe xchg inc dec subb jmp dec sub sub inc insl xchg and test cmp addr16 sti arpl pop jmp jns mov in mov dec mov outsb clc cmp inc xchg into inc sbb sbb inc fimull adc (bad) fstl (bad) cmpsb jns (bad) push and call pop in in xor lret adc cwtl cmpsl daa xor aas push push cmc call or jmp les mov int popa outsb repnz sti pop das pop mov dec (bad) xchg push je int3 ror lret mov push ret sub mov addl add enter (bad) xor xchg roll lods fcoms and mov jl mov mov or xchg mov imul rolb mov push xor jge cld push leave insl adc fistl test test cwtl ljmp je mov pop push jg sbb daa mov xchg loope test ret xchg hlt xchg jge iret pushw das test fidiv mov inc divl and pop (bad) incl add movhps inc push push dec sahf jno inc pop fstl lds test add mov mov jg dec sub imul (bad) in push add push sbb aad push outsb mov push mov push cmpl jne push pushl call pop pop jmp push push push pushl xor lea push push push call add test je cmp je cmp je push pushl call mov pop pop test je push pushl pushl push push call add test je cmp je cmp jne jmp push pushl call pop pop mov push call pop mov pop pop mov pop ret push push push push push call int3 and add rolb push push rclb andl mov cmp outsl rcr lds xor arpl repz iret lahf jp mov out sbb xchg mov rcrl jmp iret add pop and scas xchg data16 and loope mov cmp sahf ror push inc ja push add dec jae mov xor jae sub dec or add jae sbb cwtl and push mov sub lcall add mov xor dec test sub fidiv pushf fs icebp mov loopne pop fdivrl mov outsb test call (bad) leave mov adc je test dec xchg lock stos add lods hlt pop pop popf xor mov and (bad) fildll call mov inc and cmp out aas dec addr16 stc repnz fisubl adc out lods stc mov inc movsl lret xchg aad and inc xor xchg jb scas ret dec das push push (bad) das xchg dec push xchg shr in mov cmp mov mov subl jns push pushl call pop pop pop ret mov mov mov incl movzbl pop ret mov push mov mov xor cmp je cmp je inc cmpb jne pop ret ret lret mov pop and pop adc outsb sub fbld inc cmpl mov sbb sub jg (bad) aas and loop std add xor aad rorb mov cmp ja test jne inc jmp call test je push call pop test je push push pushl call test je jmp call movl xor pop pop ret mov push mov push mov test jne pushl call pop jmp push mov test jne push call pop jmp cmp jbe call movl xor pop pop pop ret call test je push call pop test je push push push pushl call test je jmp int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov or lea add mov or je add bt jae mov add pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp sub fxch fstpl fstl mov call add ret rorb clc sti bound adc fistpll lods stos and dec popf push pcmpgtw pop push mov aad pushl and clc push fimul xchg cli sub sbbb cli dec inc pop push int adc pushf mov cmp (bad) fcoms rcr add mov xor jge fstpl das lret adc gs jae or imul repz xor mov mov sub loop test push pop sbb sti ja sbb mov xlat and cmp mov (bad) out jmp jae inc pop xor inc insb mov imul mov wbinvd xchg push test jmp lcall and popa in add or addr16 sbb scas pop sahf push in test add loop mov lret sti jns adc add imul jbe dec insb movsl and jmp inc pop sahf jbe (bad) mov push mov ds ds std scas fmuls adc dec lods cmovg sub xlat (bad) fs jmp daa jae movsb cmp push testl aas sbb jmp pop sub lret add pop lcall outsb add (bad) sbb lock mov xchg rcr leave dec daa sub leave gs fdivrl mov inc adc out cwtl and sbb ss pop mov icebp sbb dec push and ja jmp mov xchg movsb xchg lret aad jmp jl xor mov sbb mov mov push mov sub push pushl lea call movzbl mov mov test jne xor cmp je mov mov movzwl and jmp mov test je xor inc cmpb pop je mov andl mov mov pop ret mov push mov push push pushl push call add pop ret mov push mov pop jmp mov push mov push mov test je push xor pop div cmp jae call movl xor jmp push mov push test je push call pop mov jmp xor imul push push call mov pop pop test je cmp jae sub lea push push push call add pop mov pop pop pop ret push push call mov pushl call pop andl mov mov mov pushl mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov test je or lock jne cmp je push call pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl push mov mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov lock movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret ret lret mov lods dec outsb ja sub push xlat inc les mov icebp adcl daa mov in mov call in push push mov xor inc push mov mov movl mov mov mov pop movl mov mov mov mov mov andl lea mov lea push push call lea mov lea mov lea push push call add mov pop ret mov push mov cmpl je pushl call pushl call pop pop pop ret mov push mov push mov mov cmp je push call mov pop pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call lea mov lea push push call lea mov lea push push call add mov pop ret ret lret mov push scas test add xorb dec (bad) push dec ss enter scas cmpsb cmp cmp pop pop xchg mov mov mov xchg mov out fmuls adc mov or cmp je push push call mov test je push pushl call push call pop ret mov push push call mov mov cmp je push call mov test jne push push call mov pop pop test jne push call pop jmp push pushl call test jne push jmp push push call push call add test je push call mov pop pop ret push call call int3 ret ss aam add notl push js fstl push mov insl aad addr16 fnsave test lock mov ss jp data16 jg rcrb andb mov and xchg dec lock dec loop mov popf shlb mov repnz push imul popf push rorl out pop arpl xchg pop stos adc loop add mov cmp jne xor ret call test jne push call pop jmp mov ret mov cmp je push call orl mov ret ret lret mov jge sbb jnp test push mov or in inc rclb das movsb outsl cmpsl fs jb xchg aaa test cld (bad) call jp cmp outsb int3 (bad) dec xchg lret dec out mov hlt jae movsb xor int mov pop insb ret iret pop jnp pop xor lods mov mov jnp js icebp scas add mov mov mov mov xchg fcompl mov and ret in pushf mov push or xor mov sbb or das insl int pop pop fsubrs xorb mov xchg mov push mov push mov mov cmp je mov mov test jne call mov pop pop ret ret lret mov bound popl jnp ljmp nop fcmove sbb scas mov lds sti xor mov and xor ret push push call andl mov call movl call call ret mov mov mov andl ret push push call mov pushl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret ret lret mov mov ror insb sar rcr insl andl jge or aad addr16 sub dec adc divl cmp daa addb cmpsl xor xor inc test pop adc xor add inc pop add jns int in push mov push mov push mov repnz loopne mov push dec inc jb ljmp push dec lea and sbb or sub cmp jp mov in ljmp stc jmp jns,pt pop imul icebp xor stos add mov or outsb mov sar (bad) sub loope mov shr popa or stc push call int das xor loope adc sbb test add push addr16 popf push or xor sbb mov and mov in xor dec (bad) test jmp inc sahf mov bound into es push mov and mov mov push mov cmpl jne xor pop ret push push pushl call mov pop pop cmp jb xor jmp lea push push call mov pop test jne pop pop pop ret lea push pushl push push call add test jne mov jmp xor push push push push push call int3 xor mov inc xchg ret push push call mov cmp je push call pop andl push push call pop pop mov movl call call ret push call pop ret mov push mov push push mov push pushl pushl call add xor test jne lea cmp je push push push pushl pushl call add add cmp je push push push pushl pushl call add pop pop pop ret push push push push push call int3 mov push mov push push push push push mov xor push push push call mov add movzwl test jne xor jmp push pop cmp jne lea cmp je push push lea push push call add test jne mov jmp mov push push call pop pop test je lea movzwl mov mov push pop test jne cmp jae push pop cmp je push push push push jmp cmp jne cmp jae cmp je push push push lea jmp cmp jne cmp jae test je cmp jne push push push lea push call add test jne push pop cmp je test je mov add incl jmp xor push push push push push jmp or pop pop pop mov pop ret push push push push push call int3 mov push mov push mov test je mov test je cmp je push push pop mov rep andl push call pop pop pop pop ret mov push mov sub mov xor mov mov push mov push mov mov mov push mov mov test jne xor mov pop pop xor pop call mov pop ret call push lea mov lea mov lea add mov push pushl xor mov push mov mov call add test jne cmpw jne xor cmp jne mov push pushl push call add test jne test je mov mov jmp mov xor lea mov add cmp jne sub sar cmp jae mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je call xor test lea push push sete call pop pop test jne lea test mov push push push je call jmp call add test je lea push push pushl call mov add test je lea lea mov add cmp jne sub sar lea push lea push pushl push jmp xor push push push push push jmp mov push call test je push lea push push push call test je mov test jne call mov movzwl mov lea push push push pushl call add test jne push push pushl pushl call add test jne push push push pushl call add test jne xor cmp je mov cmp jae lea push push push pushl call add test je push push push push push jmp mov xor mov mov test je mov mov mov mov mov push pushl push call add test jne mov jmp mov xor mov lea mov add cmp jne sub sar lea push push push pushl call add test je push push push push push jmp push push push push push call int3 mov push mov push xor push mov cmp jle push lea lea pushl pushl pushl call add test jne inc cmp jl pop pop pop pop ret push push push push push call int3 mov push mov sub andl andl cmpl jbe call movl call xor jmp call mov call mov lea orl lea mov lea mov lea mov lea mov lea mov lea mov lea push lea push lea push call mov mov pop ret mov push mov sub push push xor inc push mov call mov xor pop test je push lea mov mov mov lea pushl mov push pushl push push push call mov add mov push push push call add test jne mov lea mov mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or mov neg sbb add not mov and mov mov pushl push pushl push push push call mov add cmp jl cmpl jne mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop andl lea andl mov mov pop pop pop mov pop ret push call pop mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop xor mov mov mov mov mov jmp xor push push push push push call int3 ret lret mov jmp pop and fwait sysexit loope fbstp pop cmpsl cmp aam mov dec std add sarl sub sbb dec push inc mov cwtl lret ja xchg call cmp jg in pusha push outsb pop pop out repnz (bad) out sbb aam cmpsb addr16 sub icebp out imul or dec into xor (bad) cli lea sbb int insb loop or xchg pop inc popa loopne (bad) clc into ljmp jmp mov divb les lds repnz pop lds pop push push fimull mov fidivrl test andl fld mov cmp out jbe push or in pop xchg cmc fistpl push push (bad) int3 push (bad) mov nop (bad) push enter lds iret xor push pop mov and imul pop out cmpsb push aam mov push faddl test addr16 cltd xchg bound popf lret dec loop sarl loop adcl imul mov dec jo add pop dec cli add mov sbb sub lea popa mov (bad) xchg sub mov pop xchg or in ffreep pop dec cmp xor jo sbb sahf xorl mov xor pop cmpsb cli cmpl push sahf pop out inc jmp lock adc xor pop (bad) js sub xor and jo sbb and ja xchg inc fiaddl sub ljmp loop ret push mov (bad) sub xchg jno imul lret icebp add push adc sbb scas fwait jmp mov mov test xchg std shr inc divb inc push adc lcall cwtl ja xchg jg sti xchg jne and mov mov sub les xchg ret sbb xchg xchg rcrb loop outsl out repz xor ds mov and imul dec or push mov jg lret scas jb aad push add cmp sbb cmp cmp insl jle pop sbb inc dec test dec xchg push and sub ret add hlt fcom xor cmp mov sub adc push mov sub mov xor mov push mov push mov push mov mov call add mov lea push push lea push push lea push push call add test jne xor mov pop pop xor pop call mov pop ret lea shl lea mov mov mov mov andl cmp mov jne cmpw je mov cmp mov mov jne add add cmpw jne mov jmp sbb or test jne mov jmp lea lea mov add cmp jne sub sar lea mov lea push call mov pop test je mov add mov mov mov mov mov lea push pushl mov push call add test jne cmpw mov mov jne cmpw jne mov mov jmp lea push call pop mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov cmp je mov inc mov mov mov mov mov mov mov add mov mov mov mov mov cmp jl jmp test je mov mov mov mov mov mov mov mov cmp jne push pushl lea push push push push pushl call add test mov je mov and inc cmp jb push pushl lea push call xor add test sete mov jmp mov mov mov mov mov jmp cmp jne mov mov jmp cmp jne mov mov imul push mov mov call call pop mov test je mov mov pushl call mov mov push mov call mov pop pop mov jmp cmp je mov or add mov lock jne pushl call pushl call pushl call mov add mov mov mov jmp mov mov add movl mov mov jmp mov push push push push push call int3 mov push mov push push mov mov cmp jne xor jmp mov cmp jae movzwl mov movzwl jmp mov xor mov lea push push lea push push call test je movzwl movzwl and mov pop ret int3 mov push mov push mov xor mov push mov mov xor and push push pushl ror mov call call mov xor pop call mov pop ret push push call andl mov pushl call pop andl mov mov pushl call pop mov push push call mov mov and push pop sub xor ror xor mov mov movl call mov call ret mov mov pushl call pop ret ret lret mov lods dec outsb ja sub push xlat inc les mov icebp adcl daa int pop in mov jns xchg lahf push push push sub pop mov sub pop or push adc pop xchg call ss jnp pusha loop sbb inc (bad) sbb cmc lds mov call nop xchg enter lea dec mov xchg jge push lds notb (bad) xchg push mov mov jae add xor jge pop mov imul jmp and add scas imul xor data16 lds or mov fiaddl fsubr xor adcb call in mov push lea mov test je lea neg sbb and jmp push mov push push push push call mov test jne call cmp jne push push push call mov jmp xor test jne or xchg xor jmp mov xchg test je push call mov pop pop pop pop ret mov push mov push mov xor mov push call mov test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret mov push mov push push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp lea mov lea push push call pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret ret lret mov adc xchg insl cmp mulb xor xchg lret jbe jae push cmp sub loopne int aad add jg push test aam cld jp push fnstcw sub into nop mov add and mov push mov xor mov push push push push push call add mov pushl pushl pushl test je pushl mov call call jmp push pushl call push call mov xor pop call mov pop ret ret lret mov adc xchg insl cmp divb int3 xor xchg lret jne jae imul shrb loopne int aad add in cmc mov sbb (bad) inc jae xor in xor fld pop push lods insl int and mov mov push mov xor mov push push push push push call mov add test je pushl mov pushl call call jmp push pushl pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp push push pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp pushl pushl pushl call add mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret ret lret mov adc xchg insl cmp imulb test lret sbb jae bound cmp sub sbb test outsb push in cmc mov aam cld jp push fidivrl into sub xor push das movsb xlat mov cltd mov mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp xor mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je mov call call mov xor pop call mov pop ret call neg sbb neg ret in int fwait mov xor inc cmp and int3 sbb add (bad) icebp (bad) pop mov mov (bad) lock jne cs ficoml xor push and dec jo sbbb xor add push pop pop lcall push push (bad) lahf repz imul jnp (bad) addr16 lds mov btsl popf add mov mov add aad ja or clc cltd pusha sahf mov xchg mov pop rol sbb cs arpl mov mov push mov cmpb jne push mov cmpl je cmpl je pushl call andl add cmp jne pop mov pop ret mov push mov sub push push mov test je mov test je cmpb jne mov test je xor mov xor pop pop mov pop ret push pushl lea call mov cmpl jne mov test je movzbl mov xor inc jmp lea push movzbl push call pop pop test je mov cmpl jle cmp jl xor cmp setne push pushl pushl push push pushl call mov test jne cmp jb cmpb je mov jmp xor cmp setne xor push pushl mov inc push push push pushl call test jne call or movl cmpb je mov andl mov pop jmp mov push mov push pushl pushl pushl call add pop ret ret lret mov (bad) push cs jg mov inc ficomp or jae shrl pop out jae test mov loope sub stos stc pop sub leave int jae xchg sub dec scas std adc loope dec scas aam jle sbb or rorl mov dec gs pop mulb push adc shrb stos mov adc repz inc jbe rcrb aad daa xor pop add mov lds sbb xor out negb lods idivl cld icebp mov movsl dec mov shrl das mov movsl je mov adc jnp cmpsb inc iret mov stos stc fsubrl test jnp sti into xchg push cmp leave into push enter sub mov cmp fsubs jp mov push mov push pushl pushl pushl pushl call add pop ret mov push mov mov mov push push xor mov mov mov shr and push cmp jne cmp jne mov mov and or jne inc jmp mov mov and or mov je cmp jne cmp jne push pop jmp and or je push jmp push jmp xor pop pop pop pop ret mov push mov mov xor mov mov and or je inc mov pop ret mov push mov sub push push push mov xor test jns mov mov lea pushl mov call lea cmp ja call push pop mov call jmp mov mov mov mov mov shr and cmp jne cmp jne push pushl push push pushl pushl pushl push push call mov add test je mov jmp push push call pop pop test je cmp sete dec and add mov mov mov jmp and mov or je movb inc mov xor cmp push sete movl dec xor and and add or mov pop jne mov inc mov mov and or jne and jmp movl jmp movb inc mov inc mov test jne movb jmp mov mov mov mov mov mov and mov ja cmpl jbe andl mov push pop mov mov test jle mov mov and and mov and movswl call push pop add movzwl cmp jbe add mov mov mov inc mov shrd mov mov shr sub dec mov mov test jns test js mov mov and and mov and movswl call cmp jbe push lea pop mov cmp je cmp jne mov dec jmp mov cmp je mov cmp jne add mov jmp inc mov jmp incb test jle push push pop push push call add add mov cmpb jne mov cmpb mov mov sete dec and add mov mov mov call mov xor and sub sbb js jg test jb movb add jmp movb add neg adc neg mov push pop mov test jl mov jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc push pop add xor mov movb cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub lea push mov push pushl pushl lea push mov push pushl pushl call or add cmp je mov xor cmpl sete sub xor test setg sub lea push push mov push xor cmpl sete xor test setg add add push call add test je movb jmp pushl lea push push pushl pushl push pushl push call add pop pop mov pop ret ret lret mov mov sarl mov scas pop push xchg in inc add out cmc fmul ljmp push jp test mov negl es jmp mov push jns mov jo and adc and or and sub ljmp dec jnp or pop rcll xorl fisttp or mov rcll adc je lods mov mov aad test outsl fsubrs in repz pop mov les jb inc iret mov dec sub outsb out movsb add int3 and jmp js dec loope cltd inc test adc repz cs andl loope mov mov leave mov lret ror mov mov in sub stc dec mov pop add std gs scas loopne stos pushf call lret cmc iret (bad) and test sub mov push mov sub xor push push pushl lea pushl stos stos stos lea mov push mov push pushl pushl call or add cmp je mov xor cmpl sete sub mov lea push mov add push xor cmpl push sete add push call add test je movb jmp pushl lea push push push pushl push call add pop pop mov pop ret mov push mov sub lea push push push pushl call mov mov mov mov dec cmpb je cmp jne xor cmpl sete add movw cmpl mov jne movb lea mov test jg push push pushl push call add movb inc jmp add test jle push push pushl push call mov add mov mov mov mov inc mov mov test jns cmpb jne mov neg cmp jge mov neg push push pushl push call push push push call add cmpb pop pop pop je mov andl xor mov pop ret mov push mov sub push push push pushl xor lea pushl stos stos stos lea mov push mov push pushl pushl call mov xor mov add cmpl sete dec mov or lea cmp je mov sub lea push push push push call add test je movb jmp mov dec cmp setl cmp jl cmp jge test je mov inc test jne mov pushl lea push push push pushl push call add jmp pushl lea push push pushl pushl push pushl push call add pop pop pop mov pop ret mov push mov sub mov xor mov mov mov push mov movzbl add cmp jae push movb pop mov xor pop call mov pop ret test je movb inc dec movb mov movl mov xor cmp mov mov mov setne mov dec mov movl mov and mov mov mov mov push mov movl push lea mov lea mov mov mov movl mov lea mov mov inc test jne sub cmp sbb inc add add pushl push push call add pop pop test je xor push push push push push call int3 mov push mov mov test je push mov mov push lea mov inc test jne sub lea push lea push push call add pop pop pop ret mov push mov push push push push mov test jne call push pop mov call mov jmp push mov test je cmpl je cmpl ja call push pop mov call mov jmp mov cmp je cmp je cmp je movb cmp jne movb mov and or jne pushl call mov pop test je pushl push push pushl call pop movzbl push pushl call add jmp mov and or je push jmp push pop cmp jg je sub je sub jmp pushl push pushl pushl pushl pushl push push pushl call jmp sub pushl je sub je push pushl pushl pushl pushl push push pushl call jmp pushl pushl pushl push push pushl call add jmp push pushl pushl pushl pushl push push pushl call add pop pop pop mov pop ret mov push mov mov test jne call movl call or pop ret mov pop ret mov xor or cmp sete ret mov push mov push mov push call push call pop pop test jne xor jmp push push push call pop push pop cmp jne mov jmp push call pop cmp jne mov incl lea mov test jne mov lock mov test jne push call push mov call mov pop pop test jne lea mov mov mov mov jmp mov mov mov movl movl mov jmp xor pop pop pop pop ret mov push mov cmpb je push mov push lea mov shr test je push call pop mov lock xor mov mov mov pop pop pop ret mov push mov sub lea push call cmpw je mov test je push push mov lea lea mov mov cmp jl mov push call mov pop cmp jle mov push xor test je mov mov cmp je cmp je mov test je test jne push call test je mov mov and sar imul mov add mov mov mov mov mov inc add inc mov cmp jne pop pop pop mov pop ret mov push push push xor mov mov and sar imul add cmpl je cmpl je orb jmp mov movb sub je sub je push sub jmp push jmp push pop push call mov cmp je test je push call jmp xor test je and mov cmp jne orb jmp cmp jne orb jmp orb movl mov test je mov movl inc cmp jne pop pop pop ret push push call push call pop xor mov mov push call pop test jne call call mov mov movl call mov call ret mov push call pop ret ret adc adc test iret loop jns,pt fcmove nop loopne jg in add (bad) das xor mov sub add ret push push call andl mov pushl call pop andl mov mov and xor ror mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov mov dec sub je sub je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov lea mov sub add push xor shr cmp sbb not and je mov inc mov lea cmp jne pop pop ret mov push mov imul mov add cmp je mov cmp je add cmp jne xor pop ret ret lret mov mov sarl outsb pop pop jae popf pop mov push mov pushl mov call pushl mov call pushl mov call pushl mov call pop ret cmpsl jo pop xchg jne lock sub les and push enter sub dec mov fdivs mov std jg cmp in cmpb pop (bad) and insl lahf nop pop outsb dec inc push sbb jl int3 mov shll mov mov dec shll repz lock and and scas das in push xchg enter cs movl or add xchg pop cmp nop pusha scas push pop inc xor test leave pop xorl or inc (bad) ss jbe fwait mov mov push out pop (bad) (bad) ja iret sub movsb mov cwtl adc fwait lods int sbb loope movsl dec cli dec mov popf aas out cmpsb or fidiv mov mov mov outsl mov iret or lahf or lods sbb mov fist (bad) ret jge or cmc out hlt sub add or xor mov dec jae scas mov add repnz adc andl mov roll pop jecxz push or push jle adc sub inc or pop pop loopne insb test inc adc pop jp ljmp in stc in (bad) jle inc push (bad) gs (bad) (bad) dec sbb (bad) xor or inc mov push xor xchg fildl enter jb push cli sbb lds popf push repnz jo push mov jg add mov sbb call and push fild mov jns rclb mov stc inc mov push mov sub pushl lea call mov movzbl mov movzwl and cmpb je mov andl mov pop ret mov push mov push push mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov mov test jne mov mov mov mov xor cmp push push push pushl setne lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je pushl push push pushl push push call test je mov xor push push push push push push push pushl pushl call mov test je testl je mov test je cmp jg xor push push push push pushl push push pushl pushl call mov test jne jmp lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je push push push push push pushl push pushl pushl call test je xor push push cmp jne push push push push push pushl call mov test jne push call pop xor push call pop mov lea pop pop pop mov xor call mov pop ret pushl pushl jmp push call pop jmp mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl pushl push call add cmpb je mov andl mov pop ret int3 int3 push mov push push push mov or je mov mov mov mov mov lea mov or mov je or je add add cmp jb cmp ja add cmp jb cmp ja add cmp jne sub jne xor cmp je mov jb neg mov pop pop pop leave ret daa loope inc popf jnp (bad) lcall fisub inc js mov or sub inc xchg imul jbe or jb push lock jp sbb insb popf rcl sbb mov add in cmc inc in rorl add dec mov scas mov repz jns mov ds cld xchg inc js arpl out std mov aam out xchg mov mov mov sarl int3 lahf mov jo jmp imul xor and loope mul repnz nop stos lahf jmp mov cwtl clc pop (bad) je cmpsb cwtl enter or xor ljmp (bad) into aas leave and insb and xor pop (bad) xchg mov stos dec pop fisubl xchg mov push mov push push test jne mov test jne call movl call mov jmp mov test je mov mov cmp jbe call movl call mov jmp push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl sub pop jmp push pushl pushl pushl call add pop pop mov pop ret ret lret mov (bad) jecxz and sbb subb or inc cli push (bad) sub mov (bad) ljmp sub mov adc fistpl inc pop jp (bad) push adc pop data16 fwait xor in leave or in outsb push pusha push bound aaa (bad) and orps or mov jno movl scas pop lods add test mov lds and adc in jno imul mov out or ljmp data16 fwait mov out dec arpl dec (bad) xor lcall inc daa imul jmp nop adc call leave leave mov dec aaa pop adc mov (bad) mov mov bound dec stos pop xorb xlat aaa xchg (bad) out and out fnstsw inc enter les imull movsl daa cmc add inc arpl out int mov sub loopne,pn outsb (bad) in xor in mov xor test je test jns push pop push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je test je push pop test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je inc test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je mov push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov push push xor and mov fnstcw cmpl jl stmxcsr movzwl push push call pushl mov call pop or pop and pop mov pop ret mov push mov push push xor xor mov mov fnstsw cmpl jl stmxcsr movzwl mov test je test je mov test je or test je or test je or test je or mov test je test je mov test je or test je or test je or test je or or and mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov cmpl jne call movl call or pop ret pushl push pushl call pop ret push push call andl push call pop andl push pop mov cmp je mov mov test je mov shr test je mov pushl call pop cmp je incl mov mov add push call mov pushl call pop mov andl inc jmp movl call mov call ret push call pop ret mov push mov mov push lea mov and cmp je xor jmp mov test je mov push mov sub mov andl test jle push push push call pop push call add cmp je push pop lock or jmp mov shr test je push pop lock xor pop pop pop ret ret lret mov insb pop inc mov test imulb loope loopne jne pusha xlat fsubr rorl repnz inc stos mov sbb mov or push mov ss mov push call pop ret push push call andl andl push call pop andl mov mov lea mov mov mov cmp je mov mov test je push call pop movl mov shr test je cmp jne push call pop cmp je incl jmp test jne mov shr test je push call pop cmp jne or andl call mov add jmp mov mov pushl call pop ret movl call cmp mov je mov call ret mov push call pop ret mov push mov push mov push lea mov shr test je mov shr test je pushl call pop mov lock xor mov mov mov pop pop pop ret in sub sub xchg bound adc cmp mov add andl loopne mov jl dec loope mov cli scas stos lock add and in jp dec (bad) and out jmp inc mov daa pop test in cwtl adc adc int mov push mov push mov cmp jne call mov cmp jne mov jmp push lea push push lea push push call test je mov mov pop ret mov push mov mov cmp jbe or pop ret sbb neg pop ret ret lret mov lds mov inc jbe iret loop scas ret or ss mov and cs test cmp mov push popf into shlb push add loope mov jg (bad) or sbb int add inc pop sub push dec cmp add movsl push and xor and sar dec rol orb out xchg out or sbb mov mov pusha jmp (bad) inc sub mov pop or push or dec sub xchg add cmpsb mov inc cmp cmp push repnz ret jl stos adc loop js pop sbb test imul in (bad) lret dec rcrl fistpll adc sahf mov lods icebp arpl cmpsl pop jecxz out mov call mov inc movsb fnsave sahf or call xor add adc mov xchg cmp (bad) ja or scas add adc cmp outsb enter (bad) js out or push push subb cmp cmp lds push lds dec fdivrl in cmp repnz (bad) icebp in inc xor aad aam fsubr push stc or test xchg iret lea inc push bound iret mov push mov push mov lea mov inc test jne sub or push mov inc sub mov cmp jbe push pop jmp push push lea add push push call mov pop pop test je push pushl push push call add test jne pushl sub lea pushl push push call add test jne mov push call push mov call pop mov pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov mov push mov push mov push mov jmp mov cmp je cmp je cmp je push push call pop pop mov cmp jne mov cmp jne lea cmp je push xor push push push call add jmp xor cmp je cmp je cmp je mov jmp xor inc movzbl sub inc neg push sbb and mov lea push push call add lea push push push push push push call mov mov cmp jne push push push push call add mov cmp je push call mov mov pop pop xor pop call mov pop ret mov sub sar mov cmpb jne mov test je cmp jne cmpb je push pushl lea push push call add test jne lea push push call test mov jne mov mov mov sub sar cmp je push sub push push lea push call add jmp mov push push mov mov jmp pushl call pop add cmp jne pushl call pop pop pop ret mov push mov push push mov call mov test je pushl call pop mov jmp mov mov mov addl xor pop pop pop ret ret lret lods test rcl adc jle call mov mov mov lcall aad stos jo mov cli xor aam add jg (bad) mov mov sbb xor adcl inc or sbb xchg fsubl pusha aam adc or push xchg mov pop pop fisubl (bad) dec lods insl mov loop int3 inc lds cld sub sahf inc movl and (bad) decl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret ret lret lods pop stos outsl shll inc push daa (bad) imul pop push xchg imul push lcall cmpsl push fwait or outsl imul (bad) pop addb or push arpl jo push jg data16 loopne aaa stos adc out mov addr16 mov ljmp ret in arpl push cmpsb sub in sub sbb mov sub jb sbb cmp pop scas and test sbb cmpsb dec sbb sbb mov insb dec lahf mov sub mov daa push into mov addr16 push mov mov sub je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov sub lea push call andl mov cmp jne movl call jmp cmp jne movl call jmp cmp jne mov movl mov cmpb je mov andl mov pop ret ret lret mov mov sarb sbb pop test loopne rcrb mov pop arpl (bad) int outsl imul (bad) in pusha leave lods sbb adc jle pop or jbe xlat gs shrl jb daa sbb pop out mov pop jmp jge scas jmp push mov sub mov xor mov push push mov lea push push pushl call xor mov test je mov mov inc cmp jb mov lea movb jmp movzbl movzbl jmp cmp jae movb inc cmp jbe add mov test jne push pushl lea push push lea push push push call push pushl lea push push push lea push push pushl push call add lea push pushl push push push lea push push pushl push call add mov movzwl test je orb mov jmp test je orb mov mov jmp mov inc cmp jb jmp push lea mov pop sub mov add add mov add cmp ja orb lea jmp cmpl ja lea orb lea mov jmp mov mov lea inc cmp jb mov pop pop xor pop call mov pop ret mov push mov sub call mov call pushl call pop mov mov mov cmp jne xor jmp push push push push call mov or pop test je mov mov mov rep mov push pushl andl call mov pop pop cmp jne call movl mov push call pop pop mov pop pop mov pop ret cmpb jne call mov mov lock dec jne mov cmpl je pushl call pop movl mov mov xor mov mov testb jne testb jne lea mov lea push push call cmpb pop pop je mov mov jmp cmpb jne push push call pop pop movb mov ret push push call xor mov call mov mov test je cmp je mov test jne call push call pop mov mov mov cmp je test je or lock jne cmp je push call pop mov mov mov mov lock movl call jmp mov push call pop ret mov call ret ret lret mov jge sbb jnp test loop cwtl ss pop mov dec and inc popf loope movb repnz clc aas jl xor pop dec cmp cmp mov int mov lret out lret xchg cli hlt inc mov mov repnz cltd dec fisttp mov in stc add jnp pusha hlt mov imul mov enter sbb or cmpsb nop mov inc dec ss adc pop loope out or add jp jg addr16 pop adc dec fsubrp cmp mov leave jecxz pop jbe in in mov movsb xor dec and xchg sub sub mov jnp pop jno add cltd inc in jp in das add enter mov mov xor int3 inc popa leave adc cld add sub out jmp arpl jg mov fwait stos out dec push icebp gs jne scas jnp cld cmp dec cmp push jnp insb mov cmpsl dec mov cli xor mov les mov cltd xchg adc pop repnz lock sub in jmp sar dec movsb out inc xor xor leave in mov pop imul lods pop jo adc adc mov dec inc mov or sbb aad dec sbbl dec inc jno sub call leave inc (bad) andl push aaa (bad) xchg xor pop inc dec sarb out ret mov movsl daa mov mov (bad) rcll jb (bad) movsb add jbe pop pushf xchg inc sbb (bad) mov repz scas mov push mov mov push xor cmp je push mov lea mov add cmp jne sub sar lea add cmp jne pop lea pop pop ret mov push mov push push push push call mov xor test je push call pop push push push mov push sub sar push push push push call mov test je push call mov pop test je xor push push pushl push push push push push call test je mov xor jmp xor push call pop jmp mov test je push call pop pop mov pop mov pop ret mov push push call mov test jne xor jmp push push call sub sar lea push call mov pop pop test je push push push call add push call pop push call pop mov pop pop ret mov push mov sub push mov test jne call movl or jmp push push push push mov call mov pop pop test je cmp je mov xor cmp sete mov cmp jne push call pop mov mov mov test jne mov cmp je test je call test jne call movl or push call pop pop mov pop pop mov pop ret test jne test jne push push call push mov call add cmp je mov test jne push push call push mov call add mov test je mov mov sub sar push push mov call mov pop pop test js cmp je pushl call pop mov cmp jne mov mov mov jmp mov mov inc cmp jne push push push call push mov call add mov test je jmp cmp jne neg mov lea cmp jb cmp jae push push push call push mov call add test je mov mov mov mov mov mov cmp je mov lea mov add cmp jne sub sar push lea push mov call mov pop pop test je mov push pushl push call add test jne mov inc lea mov movzbl neg sbb not and push push call test jne call or movl push call pop jmp push push push push push call int3 mov push mov push push push mov test jne xor jmp push xor mov mov mov push cmp je lea inc cmp jne lea push push call mov pop pop test je cmp je mov sub mov lea mov add cmp jne sub sar push lea push mov call mov xor push call add cmpl je pushl pushl pushl call add test jne add cmp jne xor push call pop mov pop pop pop mov pop ret call xor push push push push push call int3 mov push mov push push push mov mov cmpl je mov push pushl pushl call add test jne mov movzwl cmp je test je add cmpl jne sub sar neg pop mov pop pop pop ret sub sar jmp mov push mov pop jmp call test mov setne ret andl mov ret mov push mov push mov xor mov push mov cmp jne mov jmp push mov push mov test je mov call call test je add cmp jne cmp jne mov jmp cmp je add cmpl je mov test je push mov call call pop sub lea cmp jne xor pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push mov cmp je add push mov test je push mov call call pop sub lea cmp jne pop mov mov xor pop call mov pop ret mov mov xor and ror neg sbb neg ret mov push mov pushl mov call pop ret ret lret mov adc xchg insl cmp (bad) mov xchg cmp jp mov sbb hlt sbb mov cmp leave pop xor outsb xchg scas sub mov arpl push jle iret popa and in fldl fldz fucom fnstsw push test jp fstp xor jmp push mov movzwl test jne mov mov test jne test je fcompp mov fnstsw test jne xor inc jmp xor testb jne add mov test jns or mov add dec testb je mov mov mov and mov test je mov or mov fldl push push push fstpl call add jmp push push fstp push fstpl call movzwl add shr and sub pop mov mov pop pop ret mov push mov push push mov movzwl fldl and fstpl lea shl or mov fldl mov pop ret mov push mov cmpl mov jne test jne inc pop ret cmpl jne test jne push pop pop ret mov mov and cmp jne push jmp mov cmp jne testl jne test je push jmp xor pop ret ret lret mov xor lds stos dec add mov push mov push push fstcw mov mov not and and or mov fldcw movswl mov pop ret mov push mov mov sub test je fldt fistpl fwait test je fstsw fldt fstpl fstsw test je fldt fstpl fwait test je fldz fld1 fdivp fstp fwait test je fldpi fstpl fwait mov pop ret mov push mov push fstsw movswl mov pop ret mov ret ret lret mov jge sbb jnp test dec jg test mov adc shrb push add clc cs mov in mov sbb enter (bad) aad push loope push or add fisub test aam outsl pop push in aad daa or ret xchg daa adc mov or mov orb test lock sub sub lods cmp or std mov mov ljmp cld mov jbe (bad) cmp mov dec outsl aam repnz or mov aam out mov sarb ja jg mov jge jb (bad) stc mov add push clc test mov (bad) xor cs pop mov call in sub mov xor mov mov mov push mov push mov push xor mov mov mov cmp jne push lea push pushl push push call add mov test je push push call push mov call add cmp je mov lea push lea push push pushl call add test jne xor jmp call cmp jne push push pushl push pushl call add mov test je push push call mov pop pop test je pushl push pushl pushl pushl call add test je mov mov mov jmp or push call pop mov jmp cmp jne push push pushl push call mov test je push push call mov pop pop test je pushl push pushl pushl call jmp test jne push lea mov push mov or push push call test je mov mov jmp or mov pop pop xor pop call mov pop ret push push push push push call int3 mov push mov sub mov xor mov push push push pushl lea call mov test jne mov mov mov mov xor xor cmp push push pushl setne pushl lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp mov test je push push push call add pushl push pushl pushl push pushl call test je pushl push push pushl call mov push call pop cmpb je mov andl mov lea pop pop pop mov xor call mov pop ret mov push mov sub push mov push push mov xor test je xor test je mov cmp jne call movl call or jmp pushl lea call mov test je cmp jne test je mov movzbl mov cmpb je inc add cmp jb jmp push push or push pushl push pushl call test jne call cmp jne mov mov mov mov test je mov dec mov test je lea movzbl push push call pop pop mov test je inc cmpb je mov inc mov test jne mov push push sub push push mov push pushl call test jne call movl xor mov jmp mov jmp cmp jne mov lea mov inc test jne sub jmp push push or push pushl push pushl call test jne call movl jmp lea cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub push mov push push mov xor test jne test je jmp test jne call push pop mov call jmp xor mov mov test je mov pushl lea call mov cmp ja mov cmp jbe call push jmp lea push push pushl push call add cmp jne test je xor mov call mov jmp inc test je cmp jbe cmpl je xor mov call push pop mov call jmp push mov pop xor mov mov test je mov cmpb je mov andl pop mov pop pop mov pop ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov push pushl call pop mov mov mov test jne call movl mov push pop add lock or jmp mov mov shr test je call movl jmp mov mov test je mov andl mov mov shr test mov je mov mov mov push pop add lock mov push push pop add lock mov push pop add lock mov andl mov mov test jne push mov push call pop cmp je mov push call pop cmp jne push call pop test jne pushl call pop pop pushl mov push call pop pop test jne mov push pop add lock or jmp movzbl pop pop pop ret mov push mov push push pushl call pop mov mov mov test je mov xor mov mov sub inc mov mov mov dec mov test jle mov push pushl push call add mov mov mov mov mov xor cmp sete jmp cmp je cmp je mov mov and sar imul add jmp mov testb je push push push push call and add cmp jne mov push pop add lock mov jmp push lea push push call add dec neg sbb inc pop pop pop ret mov push mov pop jmp mov push mov mov mov mov and cmp jne fldl push push fstpl call pop pop sub je sub je sub je xor inc pop ret push jmp push pop pop ret mov pop ret movzwl and test jne testl jne cmpl je neg sbb and lea pop ret fldl fldz fucompp fnstsw test jp neg sbb and lea pop ret neg sbb and lea pop ret and lock pop inc fistp push xchg enter push jne leave adc pop sub in sub and fxch fstpl fstpl call leave ret movlpd movlpd movlpd andpd movsd psrlq pextrw orpd pextrw and add and mulsd movlpd add movapd mov sub sub or cmp jae mov mov movd psubq psrlq cvtdq2pd movlpd movsd psrlq pextrw andpd and add and mulsd mulsd add addpd orpd addsd andpd movsd psrlq pextrw movlpd subsd movlpd and add and mulsd mulsd addpd andpd subsd addsd movsd mulsd mulsd mulsd subsd mulsd movsd subsd addsd movlpd pextrw subsd subsd movlpd pextrw subsd movsd addsd subsd subsd unpcklpd and cmp jae and sub add mov sub sub or cmp jae subsd subsd movlpd andpd andpd subsd xorpd mov pinsrw movsd mulsd subsd subsd mulsd mulsd movapd mulsd cvtsd2si mulsd movapd addsd pshufd addsd mov sub add or sub cmp jle add and and add addsd movsd addsd mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd xorpd mov addsd pinsrw addsd movlpd movd mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd addsd sub addsd addsd addsd movlpd fldl add ret movlpd movlpd movd movsd andpd psrlq movd cmp jae or cmp je cmp jge neg add psllq orpd mov movd psrlq psubd pxor pmaxsw psllq pcmpeqd pmovmskb mov and cmp jae and cmp jne movlpd movlpd mov movd andpd psrlq psubd movlpd psllq pcmpeqd pmovmskb and mov add and cmp jb mov movlpd movlpd jmp movlpd movlpd movd psrlq movd mov and cmp jb ja cmp ja jmp mov xorpd mov pinsrw movlpd movlpd mulsd movd psrlq movd cmp je andpd movsd andpd psrlq pextrw orpd and add and mulsd movlpd add movapd mov jmp mov and cmp jne mov and cmp je shl and mov or movd psllq movlpd movlpd divsd mov jmp shl and cmp jne fldz ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw and cmp je and cmp jne movlpd movlpd mov movd andpd psrlq psubd pxor psllq pcmpeqd pmovmskb and cmp je movlpd pextrw and cmp je fldl ret fldl ret movlpd pextrw and cmp je fldz ret movlpd pextrw and cmp je fldz ret addsd movsd mov jmp movlpd movd psrlq movd and or mov cmp je movlpd movlpd mulsd mov jmp movlpd movlpd movd cmp jne psrlq movd cmp je cmp jne fld1 ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw movlpd and xor or cmp je cmp je pextrw and cmp jb fldz ret pextrw and cmp jae fldz ret fldl ret addsd movsd mov jmp movd psrlq movd and mov or movlpd mov cmp je movd mov and cmp ja jb cmp ja sub movlpd fldl add ret fld1 ret sub movlpd mov mov add mov add mov sub mov call fldl add ret cmp jle cmp jae push mov and add sub and push mov jmp cmp jle push mov and add and add push mov addsd movsd addsd mov sub mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd addsd addsd movlpd movd sub neg sar add mov and add xorpd mov pinsrw mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd movd psllq movd pcmpeqd psllq addsd addsd andpd addsd xorpd pcmpeqd psllq subsd movsd addsd andpd pinsrw pop subsd addsd addsd cmp jg pop mulsd mulsd addsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret pop addsd mulsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret movlpd movd mulsd psllq orpd mov jmp mov cmp je movlpd mulsd jmp movlpd mulsd jmp pshufd mulpd pextrw and mov sub sub or cmp jb cmp jb or movd psllq sub movlpd fldl add ret movlpd pextrw and sub pextrw xor and cmp jne jmp nop mov outsb pop xchg icebp xchg out out pop sbb dec pusha movb xor fldl2e fmulp call fld1 faddp testb je fld1 fdivp test jne fscale or je fchs jmp call or je xor cmp je not fxch fabs jmp jmp jmp mov fstp fldt movb ret fldln2 fxch ftst fstsw fwait testb jne fyl2x ret movb fstp fldt ret or jne ret fldlg2 jmp fldln2 fxch or jne fyl2x ret jmp call fstp fstp or jne fldz cmp jne or je fchs ret movb fldt cmp jne or je fchs jmp fstp jmp fstp jmp pop ftst fstsw fwait testb jne fstp fldt or je fchs ret movb jmp fstp fstp fldt movb ret or jne fstp fldt ret fld fabs fldt fcompp fstsw fwait testb jne fld frndint ftst fstsw fwait mov fxch fsub ftst fstsw fabs f2xm1 ret fld frndint fcomp fstsw sahf jne fld fmull fld frndint fcompp fstsw sahf je mov ret mov jmp mov jmp push sub mov push sub fstpl sub fstpl fsave call add frstor fldl add pop test je jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fwait mov shl sar rol mov and xlat movsbl and mov add add jmp cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fxch mov fxam fstsw fxch mov shl sar rol mov and xlat mov shl sar rol mov and xlat shl shl or movsbl and mov add add jmp call fxch fstp ret call jmp fstp mov shrl fcomp out test je fchs ret fstp fstp fld1 ret mov pop pop xchg icebp jp gs push rcrb pop inc inc xchg ss roll push xor repnz insb jae push fxch fstpt fldt testb je movb jmp movb faddp ret fstpt fldt testb je fxch fstpt fldt testb je movb jmp movb faddp ret fstp fstp fldt cmpb jg mov outsb pop xchg icebp nop out add fstp fstp fldt or je fchs or je fldl fmulp ret or je fchs ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov add mov mov mov mov mov jmp push mov add mov fstpl mov mov mov mov mov lea lea push push push call add fldl cmpw je fldcw leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fld frndint fsub fxch fchs f2xm1 fld1 faddp fscale fstp ret mov and or mov fldcw ret test je mov ret faddl mov ret mov and cmp je fldl ret mov sub or mov mov mov shld shl mov mov fldt add test mov ret mov and cmp je ret mov ret sub xor add adc mov cmp je and je fstsw and je mov call pop ret fldcw pop ret sub fstl mov add and jmp sub fstl mov add and je cmp je mov cmp je and jne fstsw and je mov cmp je call pop ret call pop ret fldcw pop ret fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jae fmull jmp fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jbe fmull jmp mov push mov push push fldl push push fstpl call pop pop test jne fldl push push fstpl call fldl fucom fnstsw pop pop fstp test jp fmull push push fstl fstpl call fldl fucompp fnstsw pop pop test jp push pop jmp xor inc jmp fstp xor mov pop ret mov push mov fldl mov fabs mov cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldl jmp fcom fnstsw fstp test mov jne fstp fldz jmp cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldz jmp fcom fnstsw fstp test mov jne fstp fldl jmp fstp cmp jne cmpl jne fldz fldl fcom fnstsw test je fcomp fnstsw test mov jnp fstp fld1 jmp cmp jne cmpl jne fldl push push fstpl call fldz fldl pop pop fcom mov fnstsw test jne fstp fstp fldl cmp jne fchs jmp fcomp fnstsw test jp cmp jne fstp fldl jmp fstp fld1 mov fstpl xor pop ret mov push mov mov lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret ret lret mov pop dec mov insl pop add xchg fcmove insb in imul loopne mov ficom dec jmp int3 push das pop sarb pop popf scas arpl push jp adc jl (bad) int iret mov sbb (bad) and lcall dec mov push mov cmp mov mov lea les dec orb adc test js cmp repz aad nop rorb daa xchg fmuls mov lods xchg (bad) dec call outsl lods out divb add jne pop mov fidivl jnp mov out js (bad) pxor push pushf scas jle mov rorb insb (bad) icebp pop div sbb mov fnsave inc aaa cmpsb mov jp cltd add xchg sbb (bad) pop jmp aam lock ds outsb mov lock dec ljmp mov and mov cmp mov and inc xchg jb into cmp fidivl stos (bad) mov push mov mov test je cmp je xor inc lock inc pop ret mov pop ret mov push mov push mov test je cmp je mov test jne push call push call pop pop pop pop ret mov push mov mov test je cmp je or lock dec pop ret mov pop ret mov push mov mov test je lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret push push call andl call mov mov test je mov test jne push call pop andl pushl lea push call pop pop mov mov movl call test jne call mov push call pop ret mov call ret mov push mov push mov push test je mov test je mov cmp jne mov jmp push mov call pop test je push call cmpl pop jne cmp je push call pop jmp xor pop pop pop ret mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret ret lret mov (bad) jmp sarl in lock push pop and push mov xchg add repnz push rorb mov pushf mov mov (bad) repz sbbl int (bad) mov ja mov or jns (bad) dec pop test mov add or fcomip aaa les jne in xor sbb pop arpl fwait aaa push pop and sub xor mov add push fwait ja cs mov dec repnz bound ret push divl mov adc inc jmp adc andl enter int adcl xor repz mov inc push xchg pushf jo js daa or dec and mov clc sbb mov pop fisubr scas or pop lret pmullw std stc cld dec adc push pop in negl jp push daa mov scas (bad) cmpsb jo mov cmp adc push cmc aam push sub add loope xchg in sub es ret mov rolb js sbb push sbb xchg sub adc aam mov hlt outsl xchg inc in (bad) xchg lcall cmp pop xchg jmp jl scas dec repnz out test sahf mov cmp sbb jbe scas fwait sub xor sub cmpl add les inc bound mov adc jmp fwait xor mov sarl enter hlt adc mov mov mov mov call lea insl dec scas sbbl mov xlat jo sbb repz outsb xlat and or lods dec imul lods cmp mov aad jmp lods mov push mov push sub aaa lods imul inc or mov sub dec in daa idivl xchg push sbb sbb add or xchg les ret pop roll dec int cmpsl enter aaa cmp jle movsb xchg adc pop jmp mov cs xchg test mov and test sbb stos jp stc adc iret xchg pop adc push mov lea ret insb add sub push outsb adc pop jae ds cmp test adc xchg jo sub jecxz pop in xor int3 in pop outsb fsubr push mov call movsl int3 pop das push loopne push or pusha cld mov enter mov lahf inc or and or insb fldl sbb sbb jno dec push adc dec pop dec (bad) je ljmp pusha pop sarl (bad) rol add cltd (bad) ja or nop cmpsl loope xchg pop jne fistl xor mov pop mov sub sbb cmc stc add sub fs das push loope cmc cs idivl sub mov jl sarb nop jno addl clc fstp xor inc or mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret ret lret mov (bad) jmp enter add jno insb lret cs mov dec cmp ja xchg ret xchg add aas (bad) dec cmp mov pop insl or pop aad shll inc dec cld or in divl mov lods mov popf push pop iret pop mov xchg sbb (bad) rcrl mov movsl jmp sub mov mov mov or cmpsb cs push add cltd stc jns ja push sbb test out dec mov xlat stos jl js test mov xchg xchg int pop sbb int mov inc push mov bound mov dec ds sahf scas jnp (bad) mov addr16 mov or aad cltd mov cmpsl dec pop test pop pushf shlb dec xchg dec xlat dec xchg jne inc push add mov into notl or sub jmp popf in inc test imul push scas push stos mov push aas fcoml inc fmull enter imul popf jge out or xor sbb ffreep add std lds add inc jb mov (bad) test mov lcall cmp stos scas sti ljmp fisubr xchg add rcrb gs movsb mov and (bad) std adc sbb mov int or push mull sarb in push cli and sbb and inc and pop test push aad adc adc cmp lock adcl sbb inc inc mov lods daa std nop mov and (bad) iret mov test mov nop lret scas mov or push mov iret jno pushf pop popf xchg daa lods push aam in std outsb mov mov mov sub sbb jns push fisubrl add mov call in sub mov andl push push mov push push mov mov call pop mov xor push mov pop push pop mov mov jmp mov mov push pop add xor div mov lea push pushl lea push push push call mov or mov add lea add push push pushl lea push push call or mov lea add push pushl lea pushl push push call or mov lea mov add push push push lea push push call or add mov inc subl mov jne mov push pop add mov mov movl add add push push push lea push push call pushl or lea pushl push push push call or mov add push push push lea push push call mov or mov add push push push lea push push call or add mov add inc subl mov mov jne mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call add or neg sbb pop pop inc pop mov pop ret mov push mov push mov test je push push call lea push push call lea push push call lea push push call lea push push call pushl call pushl call pushl call lea push push call lea push push call add lea push push call lea push push call lea push push call pushl call pushl call pushl call pushl call add pop pop ret mov push mov push push mov cmpl jne mov jmp push push call mov pop pop test jne push call jmp push push call pop pop test jne push call push call pop xor inc jmp push movl call pop pushl call mov xor pop pop pop pop ret mov push mov push push push mov test je mov test je mov test jne xor mov call push pop mov call pop mov pop pop pop ret mov xor cmp je add sub jne test je sub movzwl mov lea test je sub jne test jne xor mov call push jmp mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne xor mov jmp mov test jne xor mov call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne movzwl mov lea test je sub jne jmp movzwl mov lea test je sub je sub jne test mov jne xor mov pop test pop jne cmp jne mov xor push mov pop jmp xor mov call push jmp mov push mov pop jmp mov push mov push mov xor push push push mov cmp je mov movzwl mov test je movzwl mov mov cmp je add movzwl test jne xor add cmp jne pop sub pop sar pop mov pop ret mov push mov mov xor push push push cmp je mov movzwl mov test je movzwl mov cmp je add movzwl test jne add xor cmp jne xor pop pop pop pop ret mov push mov sub mov xor mov push mov lea push push orl call cmp jle lea push lea xor mov add cmp jne sub sar lea push lea push lea push push call add test jne pop mov xor pop call mov pop ret push push push push push call int3 mov push mov push push push mov xor push push pop mov mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov xor mov push push push push call mov test setne bt setb and bt setb test jne mov pop pop pop mov pop ret mov push mov push push mov xor push push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push push push mov call testb jne mov pop pop pop pop ret mov push mov mov xor test jne xor pop ret movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret ret lret mov jmp pop and fwait sysexit loope jmp ror mov jne popf outsl aad mov aaa dec xchg mov xlat mov sbb sub jp dec adc (bad) jne mov sbb rcrb lret mov es aam imul fisub cmp dec test call push ljmp ss sub sub mov out inc sbb adc xchg mov addb inc jbe mov movsl xchg in lds jno and in jecxz negb in xor push (bad) mov movsl (bad) pusha jmp lret lods mov jg test fnstcw test cwtl mov into mov jge ret in add or xchg cmp lcall or stos outsb pusha xor ret jge insb pop jns dec lea mov imul das loope jge,pt insb sar out test push xor mov inc mov leave nopl lds pop add jo push or in pop (bad) mov lea adc push cmp scas (bad) aas mov dec dec jne mov or xor mov (bad) jae fisttp and inc push mov fistpll stc add add push fsubs aaa (bad) xchg xor inc cld pop lcall mov cmp push outsb and out insl jne les jecxz lds push pop sahf jne xchg inc dec xchg inc inc sub adcl mov pop mov shlb xor cld add push repnz xchg jnp xchg dec cs mov mov and stos repz xchg jae sbb jecxz aaa adc mov lods mov jg cltd out push jb push das inc das call insb mov sbb sub into sbb (bad) jge dec call jo pop in xchg ds cmp jno dec cltd xor stos push sbb fisttp sbb dec data16 loope fwait xor test cmp add inc xchg sub push lods lret mov pop cmp cli jnp add cmp adc and pop es daa stos and sbb sbb fcoms clc fcompl outsb lea insl push mov push fwait pop jmp jg test movsl mov push mov sub mov xor mov push push mov call mov lea push push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne mov push xor lea mov add cmp jne sub sar lea push push lea push push call add test jne orl pop mov shr not and mov pop xor pop call mov pop ret push push push push push call int3 ret lret mov mov sub insl pop test fstl dec nop dec push ja cwtl lea lds test test test jle mov mov mov sbb (bad) fldcw stos jno mov xor icebp xchg xor sarb in or xchg xlat sub mov repnz mov xor jg inc xchg leave jmp jb aas popl push rcrl xchg mov mov sahf xor nop ss mov mov scas ret aam dec mov xchg xchg push (bad) push aad lods adc sbb aaa push outsl (bad) in mov cmpsb sub sub rcll and repz fwait mov sbb sub push mov sub mov xor mov push mov lea push push push push call test je push lea push push call add neg sbb inc mov xor pop call mov pop ret mov push mov push push mov xor push inc xor test js push test je lea cltd sub mov mov sar imul mov pushl mov pushl call mov pop pop test jne mov mov add add mov mov jmp jns lea jmp lea cmp jle pop xor test pop sete pop mov pop ret mov push mov push push push push push call mov xor mov lea lea mov mov lea mov lea mov mov cmp je push push push call add xor mov push cmp je mov cmp je call jmp call xor pop cmp jne push push push call add test je mov xor push cmp je call jmp call jmp call pop xor cmp je lea push push call mov pop pop test je cmp je cmp je movzwl push call test je mov test je mov mov test je mov lea xor mov lea mov add cmp jne sub sar lea push pushl push push call add test jne push push push push call test je push lea push push lea push call test je push push call pop pop test jne push push call pop pop test je push push push lea push call test je push push lea push push call add xor inc jmp xor pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne push call pop test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov push push call mov xor mov lea mov add cmp jne sub xor sar cmp push sete push mov call mov testb jne mov pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor mov sar cmp sete mov mov cmp jne pushl call pop mov push push mov call mov test setne bt setb and bt setb test jne mov pop pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push mov call mov testb jne mov pop pop pop pop ret mov push mov mov xor movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne andl xor inc jmp lea push pushl call andl pop pop test jne push lea push mov neg sbb and add push push call test je lea push pushl call pop pop test jne orl mov jmp testb jne cmpl je pushl lea push pushl call add test jne orl mov mov lea mov add cmp jne sub sar cmp jne mov jmp mov test jne push call pop test je or mov mov mov mov and cmp je mov lea neg push sbb and push add push push call test jne mov jmp lea push pushl call pop pop test jne orl mov cmp je or mov cmp jmp cmp je mov lea mov mov add cmp jne sub sar cmp jne push push push call add test je orl xor jmp xor jmp xor cmp jne cmp je lea push pushl call pop pop test jne push xor push push call add test je orl cmp jne mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne cmp jne push push jmp cmpl jne cmpl je lea push pushl call pop pop test jne push push push call add test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov mov push xor movzwl test je push push pop lea lea cmp ja add jmp lea cmp ja add movzwl add shl add movzwl test jne pop mov pop pop ret ret lret mov mov sub insl pop test fstl push nop dec push ja cwtl lea lds test test test jle mov mov mov sbb (bad) fldcw stos jno mov xor icebp xchg xor sarb in or xchg xlat sub mov repnz mov xor jg inc xchg leave jmp jb aas popl push rcrl xchg mov mov sahf xor xchg inc test push sbbl lods movsl dec jb imul pop lahf push jg pop mov (bad) dec pop (bad) push repz repz mov xchg clc add mov cli iret iret mov push mov mov xor cmp je add cmp jb xor inc pop ret xor pop ret mov push mov push push push call mov mov push lea mov push and push or push call test jne xor jmp cmp je cmpl je mov lea mov add test jne pushl sub sar call pop cmp je xor inc pop pop mov pop ret mov push mov push push mov xor push test js lea cltd sub mov mov sar imul pushl mov pushl call pop pop test je jns lea jmp lea cmp jle xor pop pop pop pop ret mov imul add add mov mov mov jmp ret lret mov jge sbb jnp test xchg adcl push cmpsl cmp jge pop (bad) aad es xlat dec inc aad xor inc xchg out dec cmpsb xor cmp jne int3 sbb aam jl rorb lahf inc ja and pop push and pusha mov adc mov (bad) mov bswap inc xchg rcrl (bad) in fcoms xlat imul xor cmp add fucomp retw scas cmp int xchg jecxz lods aas ja mov inc lock mov lods cmpsb xchg movsb push lret (bad) rcr (bad) cmc fnsave xor push jb inc inc iret (bad) pop daa outsl mov movsb push repz xchg pushf popf sub push sti add push das aam jb gs test outsl clc add add cmp xlat pop fidiv cmpsb cmp push jbe int3 out rol (bad) cmp or mov (bad) xor nop sti in fcmovu in cs push lea cmp test push sub sub outsb push (bad) lret push aaa aas or jecxz and loopne outsl mov adc jmp js add cmp or or fadds mov sti ficomp sub repz push cs push xor les lods cmp cli in cmp pop hlt mov inc popf lret xchg hlt fbstp jp pop dec fisttpl mov pop sub int3 icebp adc lret ret sbb ret add popf imul push lock pop mov (bad) mov mov push sub js cmp insl adc push jbe sbb push jae xor cld pop xor jle dec pop mov push mov sub push push push xor mov mov mov lea movl cltd sub mov sar push pop mov mov mov push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add subl je test je cmp je mov mov mov movzwl movzwl sub je test jns lea mov jmp lea mov cmp jle or jmp mov pop pop pop mov pop ret ret lret mov mov sub insl pop test jo mov inc push mov push push cmp leave insb test in jo nop mov or and fdivl fisubr mov xchg pop mov fisubrl mov pop jecxz lahf outsb dec aam mov push jnp dec je fdivs mov rcll cmp or lcall pop xor jnp sbb dec lahf enter inc xor jmp insb pusha push mov lret push mov cmpl je pushl call pop test js cmp jae mov pop ret xor pop ret mov push mov mov push test jne call push pop mov call mov jmp cmpl jbe mov movb test jle mov jmp xor inc cmp ja call push jmp mov test je push lea mov push mov movb test jle mov test je inc jmp mov mov inc dec test jg lea movb test js cmpb jl jmp movb dec cmpb je incb cmpb jne incl jmp mov lea mov inc test jne sub lea push push push call add pop xor pop pop pop ret mov push mov push call mov and pop cmp jne movb jmp push call pop movb mov pop ret ret lret mov jmp pop and fwait sysexit loope adc fs pop mov shr test pop push ja fcoml outsl xchg test stc les mov sub push dec cmp push imul xchg mov movl ror outsl insb xchg outsb test xlat adc (bad) or mov sbb xchg fsubrl outsw call cmp push dec mov and xchg jmp add dec ja push addb enter mov cmp (bad) mov neg mov outsb out dec mov sub lock push adc xor in jb mov push xchg add cmp mov push xchg adc inc pop (bad) push je add xor (bad) adc sbb inc pop lret (bad) incl loopne push stos dec pop jns in ret pop mov insb dec clc stc cmp xor dec add (bad) gs ficom push aaa lahf pusha add push jns or mov test pop cmp cmp in dec (bad) add xchg jcxz les in add pop xorl push pop mov pushf shrb scas sti imul inc out sarb mov (bad) mov mov iret inc fsubrl push mov rcrb xchg cmp fiaddl xor daa sbb movq cmpsb sub pop pop xlat inc mov pop shr pop jno lahf mov leave sub ja ja daa lds dec xor adc daa mov outsb icebp daa cmc hlt das inc pop loope mov int3 cmp dec jbe out push add adc shlb popf or jnp jo or mov in bound shll xchg inc nop sub push cs pushf push (bad) mov cltd stc pop rol movsl daa jg mov jns nop (bad) je aas ret jb mov fisubl cmp lret fcompl xlat or (bad) xchg jb addb xor outsb add jae imul icebp cwtl xor test decl mov push dec loopne or cld icebp popa pop jle pusha adc sub ret pushf sbb (bad) xor xchg fisub mov dec xchg push das cmpsl out jge xchg add lds aaa cmpb das inc pop jmp in inc js (bad) in mov sub jno in lret andb (bad) mov mov test adc push out mov lret ficom repnz in test sahf rcrl xchg jge and outsb scas adc pop pushf xchg pop mov in ja test bound or jns mov xchg rcrl or fst lret dec jmp out push push lahf in lret mov jbe ljmp jg dec mov sti push or mov sbb mov fistpll mov test inc mulb sti roll out push outsl jge push mov call pop call sbb pop ret xor or (bad) iret push sbb and mov shl sub insl pop rcll movsl addl ja add mov mov dec fwait pop pop scas push sbb mov int3 vandps ss (bad) loopne (bad) mov adc adc incl imul xchg push xor xchg out and xchg jg inc rcrl mov jg xchg outsb xor movsl int3 pop push add addr16 (bad) mov repz lcall push mov shl popf sbb les lret int es mov (bad) mov push insl adc test dec add cli das xor jle adc test mov adc insb lods mov push xchg xchg daa inc in xor int in out mov jb add lret imul test mov pop push popa inc in dec rcrb push test inc lcall xor adc jae mov push inc (bad) mov xchg and lock mov add pop cmpsl mov rorb cmp or shlb xchg push fs sub jmp cs mov in cmpsl sbbl mov inc adc xlat arpl push lcall cmc scas ficompl idivb vhsubps and jl es ror into aad shr int3 or test pushf and (bad) xlat mov pop jmp pop movsb pop sti xor outsb mov push sbb xchg test sub push int cmp test int3 and pushf xchg arpl int3 sbb xorl push push insl pop stc or pusha and (bad) loopne pop add sti popf pushl sti imul movsb cmpsb pop xchg addr16 mov fildll mov aaa sbb (bad) cwtl out out fcompl cs enter push adc add jbe pop ret imul dec mov (bad) (bad) pop lea and and push popf shll test mov ret nop or adc add fimull into repnz ss call jno aaa in fcmovnb and xchg clc cmp (bad) pop adc shrl rorb (bad) out mov sbb aad push inc pop jmp (bad) out (bad) or stos push sbb in mov fdivr dec push pushf lock imul hlt cwtl sub pop pushf cltd dec popa push add mov rcrb adcl iret cmc das cmp xlat loope lock pop push sarb gs call lcall dec (bad) jg in lcall mov outsl and aaa xchg mov or movsb fnstcw inc or inc fwait push add rcrb xor xchg and pop stc inc insb ljmp movsl pop mov rcrl jo mov jl insb sub xlat add popf inc sbb lods sub mov adc imul xchg outsb dec addr16 sub sbb lret (bad) and fild icebp mov push sbb xor xlat aas out or xchg (bad) stos cmp lods or lock inc imul sarb and es fwait push out adc adc js push fucomp cmp pop jno dec inc xor xor pop xchg mov mov or dec inc mov add arpl jb mov or xchg push adc xor pop test aas and sbb test icebp add mov lods inc mov int cmp pop add pop mov sti inc sub ja int shl decb xchg mov xchg arpl xlat out sub adc nop test mov dec loopne stos insl mull incb xchg xchg aam popa adc xchg repnz popa add add xchg xor mov pop mov cld (bad) sbb sub push and mov scas cmc mov in fucomi inc js xchg into sbb inc rclb insb mov dec test jp push iret lret mov gs imul adc aaa and or cwtl mov mov add mov or fs sahf incb pop mov in mov out inc stos lret ret or xchg jmp push mov pop arpl add push hlt xchg jb cmpsb sti mov mov inc push lods jno jbe mov test xchg mov xorl mov mov inc bound mov je bound xlat cwtl and out sbb sbb adc outsl scas cmpsl in nop dec icebp ds (bad) (bad) sti dec push push xlat pop xcrypt-ctr cmpsl fildl mov mov in das fiadd rclb push ja dec mov es cwtl pushf lret sbb popf add xchg push cmp shrl orb pop pushf mov add or sub inc jl xchg test pop jl dec pop fs stos lock adc push test fisttpl iret fiaddl push repnz outsl (bad) mov dec fs and movsb js les rorl jno cmp sbb rclb (bad) cltd xor ret and js and jns insl jg cmc add data16 fild inc leave cli adc aas enter fcoms mov inc sub (bad) push mov cltd lret pusha adc and mov pop aam or cmpsl stos cmp and icebp adc pop (bad) jb push (bad) add ficomp cltd or push popa lcall inc add mov adc push adc and fwait add (bad) cmp call pop test mov notb sbb movsb loop sti xor pop js cmc push outsb aad iret imul shr (bad) xlat aaa (bad) out adc testl les jg fstps jb leave mov cwtl jnp out add xor ffreep cmpsl mov loope adc fisubrl jp and iret movsl push dec mov repnz push ss xor (bad) outsl fs iret (bad) fcomi cmp cmp add or xor je inc sub das in xor aaa jecxz ljmp cmp fucomip fistl push or push sbb adc mov imul and cld dec in imul push frstor int3 inc mov sbb and into (bad) iret mov xchg xor scas jp jmp add push ljmp jge cwtl push aas mov (bad) mov xor std and adc repnz cmp neg das xchg popf inc int3 cld outsb (bad) mov (bad) mov lahf lret xor sub in push out rcl (bad) std or fisttpll jecxz jo test andl fisttpll int3 adc lods push jns fiaddl and push sub or xchg jp sub pop js dec inc cld fidivr inc push (bad) sub loop mov cltd lcall jl sbb cmp inc notl inc iret fimull cltd add sub jae cmp lcall jb enter shrl jge cmp cs pop pop jno jge outsb (bad) cld pusha xor daa mov cs mov es insb stos imul outsb sbb (bad) dec decb clc sbb outsb mov mov aam fbld jno daa imul adc mov (bad) fdivp mov ret icebp sub mov mov and std in (bad) xor nop shll dec mov repz xchg negb xchg fdiv insl cmpsb and imul or rcl fstpt pop pop pop sbb rol push fcmovnbe or xor aam jge mov add jg or or mov jb add xor xchg shrb (bad) sbb test mov cmp rcrb inc ljmp ljmp pop and ds xchg pop fbstp cmp pop mov shrb cmp inc and jns sbb mov lret in jo dec push dec cmp stos cmp inc push leave dec sub pop xor mov js and movsb sbb sbb dec and push int3 cmp cwtl or jge xor xlat xor andl jecxz jno add (bad) shlb dec idivl cmp sbb mov in xchg sub (bad) (bad) dec fmuls loopne imul sbb push es or cli dec pop ss pusha xlat xor adc fsubs hlt fbld mov inc cmc adc scas xor insl xchg int3 and fidiv (bad) imul imul push test fsubrs int mov push jb mov aam sbb and push fdivl push int3 cmp adc xor lods cmpsl hlt mov pop cmp inc scas faddl dec push lods inc scas arpl nop pop nop mov inc pop les xchg cmp mov pushf addr16 mov lahf cmp or adc popf xlat (bad) jp jecxz push mov xlat jns or mov aas nopl lret loop sub push mov (bad) into cmc loopne inc into cmp in mov xor xor or mov inc add jno fsubrs jns add into push fisubl bound icebp lods cmc js iret test or lret test outsl mov subl xchg inc std lgs jg sbb adc js out mov imul in dec shlb popf stos inc jp adc out imul mov (bad) mov xchg jno in adc xor daa js pop sub sarb mov xchg enter std mov pop pop aaa shll sub cmpsl push (bad) ljmp std cmp xlat sti cmp stos push in call push nop push mov stos push xchg pop cmp repnz and cmp mov mov push in cli test jns es cwtl (bad) je xor push mov lods flds inc push iret gs pop popf xlat pop push lock xor mul test scas xchg loope mov test dec outsb push adc out jmp ljmp out imul xchg cs (bad) pop xchg lret aad sarb mov sbb ss scas cmc dec les pop inc adc fiadd lea sub rclb les icebp add outsb scas std xchg into push xor rcr hlt test insb mov punpckldq pop stos cli (bad) and clc bswap xchg push sbb aad jl out enter cmc (bad) jne sar cs cmpsb push call mov int3 mov rorb xor icebp push or insl aam (bad) dec dec inc mov ret imul lock cmp repz fstl test in loop jp pop movswl jbe jge nop push jbe (bad) ds mov dec fdivr mov outsb adc test or inc mov lahf pushf mov mov outsl mov and xor call adc sub ret xor xlat and cmc dec leave outsl mov faddp sub jecxz (bad) pop (bad) fstl xor mov mov adc jnp outsl subl and adc scas cmpsl ja fist add cwtl dec push ficom dec imul pusha movsb jo mov sbb pop ret enter out and mov flds aaa or push cltd icebp inc mov ja repnz je popa cmp xor test xor push pop or mov mov scas (bad) jmp subb sub cmpsw ljmp lret (bad) or pushf add dec adc xlat pop or add fstl lret inc fisubl adc and adc xor xor pushw mov or mov andl aam inc push inc dec test in repz (bad) out inc fstps fs lcall es pop xchg iret int3 test enter cwtl dec dec out xchg jp jmp xor pop push push mov (bad) xchg lock (bad) mov sbb adc fld jno div (bad) pop arpl sub push xchg xchg dec xorl fisttpl jmp lods sbb shll cmp or arpl subl aaa cli push fcoms call in push mov test jne xor jmp mov test jne call push pop mov call mov jmp push mov test je cmp jb push push push call add xor jmp pushl push push call add test jne call push jmp cmp jae call push pop mov call mov jmp push pop pop pop pop ret mov push mov incl push push mov mov push call push mov call cmpl lea pop pop je push pop lock mov jmp mov lock lea movl mov mov andl mov pop pop pop ret mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne mov jmp mov test jne movb call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne mov mov inc test je sub jne jmp mov mov inc test je sub je sub jne test mov jne movb pop test pop jne cmp jne mov push movb pop jmp movb call push jmp mov push mov pop jmp mov push mov push mov test jle push pushl call pop cmp pop lea jl mov xor push push push pushl pushl push pushl pushl pushl call pop pop ret ret lret mov insb pop push mov rol jge inc jmp jg clc pop adc jne sahf sub cs cmc pushf mov test in or nop hlt xchg push jne ja mov lock flds mov repz pushf fimul and cs mov cli xchg insb or dec dec imul mov mov push mov push mov test jne call movl call or jmp mov push or shr test je push call push mov call push call push call add test jns or jmp cmpl je pushl call andl pop push call pop mov pop pop pop ret push push call mov mov xor test setne test jne call movl call or jmp mov shr push test je call pop jmp andl call pop andl push call pop mov mov movl call mov call ret mov pushl call pop ret push push call xor mov mov pushl call pop mov mov mov mov mov sar mov and imul mov testb je push call pop push call test jne call mov call mov call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call movl call or pop mov pop ret xor push push push push push push push call mov ret mov cmp je cmp je push call ret int3 int3 int3 int3 int3 mov push mov push mov xor mov mov push mov cmp jbe mov push push lea mov mov cmp ja jmp lea mov push push call call add test jle mov mov add cmp jbe mov mov mov cmp je test je sub mov lea mov mov mov sub jne mov mov sub lea cmp ja pop pop mov xor pop call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov push mov cmp je push mov test je sub lea mov lea mov mov mov sub jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 mov push mov sub mov xor mov mov mov mov push mov mov push mov mov test jne test je call movl call pop pop mov xor call mov pop ret test je test je movl cmp jb dec imul push add mov mov xor sub div lea cmp ja push push pushl push call add jmp shr imul add push push mov mov call call add test jle push push pushl call add pushl mov pushl call call add test jle push pushl pushl call add pushl mov push call call add test jle push pushl push call add mov mov mov mov mov nop cmp jbe add mov cmp jae mov push push call call mov add test jle cmp ja mov mov add cmp ja push push mov call call mov add test mov jle mov mov mov jmp lea mov sub cmp jbe push push mov call call add test jg mov mov mov cmp jb mov mov cmp je mov mov mov sub mov lea mov mov mov sub jne mov mov mov mov cmp jne mov mov jmp add cmp jae lea sub cmp jbe mov push push call call mov add test je cmp jb mov sub cmp jbe push push mov call call mov add test je mov mov mov mov mov sub sub cmp jl cmp jae mov mov mov inc mov mov cmp jae mov mov mov jmp cmp jae mov mov mov inc mov mov mov cmp jae mov mov jmp mov jmp mov mov sub mov js mov mov mov jmp pop mov pop xor pop call mov pop ret ret lret mov in inc mov lods ds pop add push mov sub cmpl jne call movl call xor jmp push mov test jne call movl call jmp cmp jb xor jmp pushl lea call mov cmpl je lea dec cmp ja movzbl testb jne mov sub and sub dec cmpb je mov andl mov pop mov pop ret call xor test sete mov ret mov push mov sub mov xor mov cmpl push push je pushl call mov jmp mov mov cmp jg je cmp jg je push pop sub je sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl jmp mov movl jmp movl jmp mov movl jmp movl movl jmp sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop jmp movl jmp movl jmp fld1 mov fstpl jmp sub je sub je sub je sub je sub je sub je sub jne mov fldl jmp movl jmp movl jmp movl jmp movl jmp movl movl mov mov mov fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl fldl fstpl mov pop xor pop call mov pop ret mov push mov push push and add push mov mov mov sub mov xor mov mov push mov push movzwl mov mov sub je sub je sub je sub je sub je sub jne push jmp push jmp push jmp push jmp push pop push lea push push call add test jne mov cmp je cmp je cmp je andl jmp mov fldl and or fstpl mov lea push lea push push push lea push lea push call add mov push push call cmpl pop pop je call test je push call pop test jne pushl call pop mov pop xor pop call mov pop mov pop ret mov push mov push push fldl frndint fstpl fldl mov pop ret ret lret mov movsb dec movsb jle imull test xchg xlat jne movsl jp out cmp aam fs in stc push mov pop mov repnz leave js xchg loopne sub fldl mov aas mov shrb sub cli cmpsb scas roll xor or mov insb aas or dec dec sub sbb (bad) lret pop js and cmpsb frstor pop stos rol fisttpl mov push test jne call push pop mov call mov jmp mov test je xor cmp mov setne inc cmp ja call push jmp mov lea cmp ja pushl push push push pushl call add pop pop ret mov push mov push cmpl jne cmpl movb jl movb pushl pushl pushl pushl pushl call add mov pop ret mov push mov push call mov mov call mov xor pop pop ret mov push mov push push andl andl push mov pushl call pushl call lea push call mov add cmp jne mov cmp jne xor jmp xor inc pop mov pop ret mov push mov push push andl lea andl push call pop test je xor inc jmp mov mov mov mov lea mov or push mov call pop test jne call xor mov pop ret int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop lret push push in inc mov insb jmp (bad) je imul add (bad) add mov lcall or cmp jae add paddusb push mov sbb or adc call call add ret lea call push fstcw je mov cmpw je fldcw test je test jne fldlg2 fxch fyl2x cmpl jne lea mov jmp test jne jmp test jne cmpl jne and je fstp fldt mov jmp call jmp test jne cmpl jne fstp fldt mov cmpl jne lea mov call pop ret cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp movq movapd movapd movapd psrlq movd andpd psubd psrlq test je cmp jl psllq cmp jg movq fldl ret ucomisd jnp mov sub mov mov add mov mov mov call add fldl ret movq psllq movapd cmpnlepd cmp jl cmp jg andpd addsd movq fldl ret fldl ret cmpnlepd andpd movq fldl ret mov push mov mov xor mov mov mov mov mov mov orl mov mov mov mov mov mov mov add xchg pop ret mov push mov sub fnstsw fnclex cmpl jl mov xor mov push mov test je test je push pop test je or test je or test je or test je or test je or stmxcsr mov and mov ldmxcsr mov test je test je push pop test je or test je or test je or test je or test je or or mov pop jmp mov xor test je test je push pop test je or test je or test je or test je or test je or mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd mov movapd unpcklpd psrlq pextrw movapd movapd movapd movapd movapd andpd orpd addpd pextrw and movapd movapd andpd subpd mulpd subpd addsd mulpd movapd addpd and sub cmp ja sub add cvtsi2sd unpcklpd shl add mov mov cmp cmove movapd movapd movapd mulpd mulpd addpd movapd mulsd movapd mulpd movapd andpd addpd addpd mulpd mulsd addpd movapd mulpd movapd unpckhpd mulpd sub movapd addpd unpckhpd addsd addsd addsd movlpd fldl add ret movlpd movapd cmpeqsd pextrw cmp ja cmp je cmp ja movlpd movapd movapd andpd orpd cmpeqsd pextrw cmp je fldl ret mov jmp movlpd divsd movlpd mov jmp movlpd mulsd mov jmp add and cmp jae xorpd divsd mov sub movlpd mov mov add mov add mov mov call fldl add ret movlpd movlpd movd psrlq movd and or cmp je mov jmp lea jmp int3 int3 int3 mov push mov push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret push call ret push mov test je mov call push push call andl pop pop pop ret push mov mov test je mov push andl call lea pop jmp cmp loop sub xchg in dec lods out lret push mov cmpb je xor inc lock inc jmp mov sub cmp jne pushl call pop ret cmpl jne ret push mov sub movl push push call mov lea xor push push push lea push call push call test je mov xor xor mov pop mov pop ret or lock dec cmp jne call mov mov lock ret call pushl call andl pop ret pushl call andl ret jmp mov mov pop pop pop pop pop mov pop push bnd push pushl lea sub push push push mov mov mov xor push pushl movl lea mov bnd push pushl lea sub push push push mov mov mov xor push mov pushl movl lea mov bnd int3 cmp loop fdivr ret mov scas jbe movsl inc in daa jmp pextrw or test mov imul push (bad) iret xlat stos bound xor lock loop outsb xchg mov pop xchg scas push or mov push push push mov push sub push push push mov xor xor push lea mov mov movl push call add test je mov sub push push call add test je mov shr not and movl mov mov pop pop pop pop mov pop ret mov mov xor cmpl sete mov ret mov movl xor mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov cmp je xor pop ret mov add xor cmpl jne mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push xor xor mov or jge inc inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb dec jns neg neg sbb mov mov mov mov mov dec jne neg neg sbb pop pop pop ret int3 push pushl mov mov lea sub push push push mov xor xor mov push mov pushl mov movl mov lea mov bnd mov xor bnd bnd int3 int3 int3 int3 int3 int3 push push push xor mov or jge inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov dec jne neg neg sbb pop pop pop ret int3 int3 int3 int3 int3 int3 push push xor mov or jge inc mov neg neg sbb mov mov mov or jge mov neg neg sbb mov mov or jne mov mov xor div mov div mov xor dec jns jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb dec jns neg neg sbb pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je push mov sub and fstpl cvttsd2si leave ret cmpl je sub fnstcw pop and cmp je lea lea push mov sub and fld fsts fistpll fildll mov mov test je fsubrp test jns fstps mov xor add adc mov adc jmp fstps mov add sbb mov sbb jmp mov test jne fstps fstps leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov div mov xor jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb neg neg sbb pop ret push mov call mov mov xor inc mov mov andl lea movl mov mov mov movzbl push mov pushl call mov call ret push mov call mov mov xor inc mov mov andl lea push push push movl call mov add mov mov mov mov movzbl push mov pushl call mov call ret push mov call push call andl mov pop mov mov pushl mov movb pushl pushl call mov lea push push mov andl andl call mov call ret push push call int3 push mov call push call pop mov andl test je pushl mov pushl call jmp xor mov lea push push mov andl andl call mov call ret push mov mov sub xor push mov push mov push push mov mov mov mov mov mov mov mov mov mov pop test je lea sub cmp jae mov inc mov add cmp jb mov xor mov cmp jae lea sub lea xor rep cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne mov cmp je mov test je mov test je cmp jle push call cmpb mov mov mov mov pushl je call jmp call mov pop test je mov mov push pushl pushl push call mov pop mov pop pop mov pop ret lea call push lea push call call int3 movl ret push mov push push mov push push push mov xor push lea mov mov cmpb je cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne pushl call mov test jne call mov test je cmpl mov mov je pushl push call jmp testb je mov test je mov push mov mov call call pushl call pop mov mov pop pop pop mov pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov call mov testb jne cmpl je andl lea testb je push push pushl call pop pop push pushl pushl call jmp push pushl call pop pop push pushl pushl call jmp call pushl mov push pushl call add testb je mov test je mov push mov mov call call call ret push mov call mov lea xor mov mov mov movl movl mov mov movl movl mov test je testb je mov mov mov mov test je testb je movl lea push lea push cmp je pushl movb call add mov call ret lea mov push pushl call add jmp mov xor mov mov mov mov test je lock push push mov call mov ret call int3 push mov or lock jne mov push mov mov call mov call pop mov pop jmp pop ret push mov or lock jne mov push mov mov call mov call pop pop ret push mov test je mov push push mov mov call mov call pop pop ret push push mov push mov mov mov call mov call pop pop ret add jmp xor ret push mov call xor movl mov movl push mov lea push push pushl call lea movl push call mov add call ret push mov push mov mov test je call mov mov mov mov pop pop ret push mov push push mov mov sub mov lea push push push push call add test je sub pop mov pop ret call int3 push mov mov push push push mov lea mov and je sub mov mov mov cmp jb sub cmp jb lea mov sub mov jmp xor pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push cmpl jb mov ja movzbl mov shl or movd pshuflw movlhps mov and or shl sub xor movdqu pxor pcmpeqb pcmpeqb pmovmskb and jne pmovmskb and bsr add test cmovne or add jmp push pmovmskb and shl xor sub and dec and pop bsr add test cmove pop leave ret movzbl test je xor test je movzbl cmp cmove test je inc test jne movd add pcmpistri lea cmovb jne pop leave ret mov and pxor pcmpeqb mov and mov shl pmovmskb and jne pxor pcmpeqb add pmovmskb test je bsf add jmp mov xor or repnz add neg sub mov std repnz add cmp je xor jmp mov cld pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp mov jmp mov jmp int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd unpcklpd movapd movapd movapd movapd pextrw and mov sub sub or cmp jae mulpd addpd movapd subpd mulpd movapd mulpd movapd subpd movd mov and shl sar mov subpd movapd mulpd movapd mulpd addpd mulsd addsd unpckhpd movdqa pand movdqa paddq psllq mulpd addsd orpd unpckhpd addsd add cmp ja mulsd sub addsd movlpd fldl add ret sub fstcw mov or mov fldcw mov sar sub movdqa pandn add movd psllq orpd add movd psllq movlpd fldl movlpd fldl fmul faddp movlpd fldl fmulp fstpl movlpd fldcw add pextrw and cmp jae cmp je jmp cmp jb cmp jb ja mov cmp jb jmp mov jmp mov sub movlpd mov mov add mov add mov mov call movlpd add sub movlpd fldl add ret cmp jae mov cmp jae movlpd mulsd mov jmp movlpd mulsd mov jmp mov cmp ja cmp jne mov cmp jne fldl ret fldl ret mov jmp mov and cmp jae movlpd addsd sub movlpd fldl add ret lea push mov add push fstcw fwait push push push call cmp pop pop pop jne call orb call pop leave ret fxch fstl fxch fstl jmp push mov add push fstcw push push push call cmp pop pop pop jne call orb andb call pop leave ret fstl jmp push mov add push pushl pushl call add pushl pushl call add fstcw orb call call pop leave ret andb cmpl jne fstl mov or je cmp je cmp je or je movsbl mov jmp mov and jne fstsw and je movl jmp fldcw fwait ret mov and or je cmp je jmp mov and cmp je jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jae fmull jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jbe fmull push push mov inc mov testb jne cld lea lea movsl movsl cmpb je lea lea movsl movsl fstpl lea lea push push mov mov movsbl push call add pop pop fldl jmp push mov add push pushl pushl call add fstcw andb call call pop leave ret cmp loop pop (bad) lods inc dec or dec adc in decl subl xchg lret stos imul fbld add xor and add and inc lahf (bad) xor test mov lock add pop and mov and cmp jne fnstcw mov and cmp lea jne jmp pop push jl stc hlt or or fs das add js mov xor jne lcall lds mov clc aas push pop jb add int3 dec lea xor (bad) xor add aam and rcll stos inc push dec pop rolb pop push cli int or arpl repz das lds mov popa sbb jae imul into sbb fstl lods cli pop mov lret loope inc add or mov aad push adc js xchg mov add int les pop dec mov push mov push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp loop xchg pop bound sub hlt jb or ds jo mov (bad) add sbb xchg xor outsl cs ss push mov test stc push je jne sbb push int fcmovne inc mov daa push div in imul lods mov push cmc adc lds int3 shrb into hlt lock call or jae popa cwtl mov cmpsl scas dec sbb cmp mov dec std cmp or cmpsb dec mov stos jbe stos push lret fxam mov in xchg pop (bad) pushl out pop pop (bad) push movsl jmp sub add sbb insl rclb xor xchg (bad) fcomi sbb jge test and ja dec (bad) adc test mov add iret or sbb iret int rol push stos das (bad) push les cmp xor add sub mov repnz and cmp rclb dec ds jp sub jne pushaw or push push jp mov adc outsl or rorl stc dec dec and xchg fsubrs out inc xor lahf pop sbb mov push stc nop sbb mov (bad) pop adc mov mov sti lods jg push aaa inc push (bad) in sarb ret xor enter popf andb out bound xchg lods xor dec faddl js adc push negl sbb inc xor pop mov loop sahf add sbb int cli imul test gs test fcoms addr16 int ss mov sub loopne (bad) jae and jmp add sbb adc subl ucomiss dec imul push scas and popf sahf in and cs sbb inc (bad) adc and out cmp rclb movsl jl ds jle mov pop sub push inc push mov mov dec adcl dec inc int3 xchg push pop popa loop in xchg test fcomps imul cmpsb mov dec xchg adc outsb add (bad) mov cmp cmc vpaddb loopne loope sbb imul and adc rcrb dec je lock inc dec test inc pop outsb pop push adc mov adc inc cld xchg xchg xchg push jb adcl cld xchg clc rorl inc cmp cmc adc jbe insl stos inc loope (bad) lods in sub sti cmpsl mov jl inc cld dec (bad) jo inc addl fwait jecxz xchg mov push (bad) jns dec test jge cmpsl xchg and xchg mov xor out fstl int pop lcall pusha mov xlat out or inc aad xchg dec ja or int mov xlat lret mov push ljmp je dec ret mov pop loopne mov (bad) lock mov fistpl cs cmc jle pop or rcrb stos mov push arpl cltd add mov cld push push ss mov stc push sar lods mov cmp icebp (bad) and pop inc pop mov sub pop fmul rclb xchg test and mov pusha cmc fimull repnz xchg fstps xor add addr16 mov div mov neg lret mov mov or es adc test call orl test pop dec lahf fidivr mov push push sarl out mulb mov sbb add dec js pop inc aad add sbb mov push (bad) aas decl sub dec leave iret andl or fcoml mov cmpsb xor pop jmp xchg mov pop cmp lahf test push xchg mov mov and jno in addl add mov test test jbe sbb les and push sbb sub cli es push jne mov scas sub int3 xor xor sar test xlat fimull and callw pop fsubrs inc mov mov fldt call jns mov leave les jecxz sub sub into and mov push lcall addb outsl xor cli xchg sub and jo es add jbe in adc imul mov movsl jge popa push cs and mov jae mov adc pop adc push lock push (bad) sti mov cs push test adc cli xchg xor xor pop push jnp pop pop xor inc xor inc jb (bad) mov push test mov pop jg lahf xchg cmp mov sub sub popa repnz shlb test cmpsb test add loopne cmp dec fst inc ja adc and (bad) pop fsubr mov fldenv adc push imul cmp into push scas in aam popa mov mov jbe imul leave cld dec xor jae dec mov mov jae cmp jl orl jo dec sub add (bad) fs add xorl imul cmpsb push mov sbb lret xchg push and (bad) pop shrb sbb jp not jb and mov push and lock jnp xchg (bad) xchg inc cli jo (bad) pop js adc sub mov mov xor push aaa push in xchg lahf subl xor mov das xor das (bad) cwtl sbb cld jp jmp mov xchg and jns sub inc push xchg xlat pop in fldt mov lret dec aam outsl fcmovb push inc sahf outsl mov popf cwtl dec pop in lret (bad) jns daa jbe setns fmuls mov ret xchg push fmulp mov pop xchg cmpsl dec outsb dec int3 jno outsb mov inc daa das inc or mov loop in lods sub mov test mov mov jecxz jae rorl and mov xor mov pop rorb fnsave xchg mov orl inc insl jmp mov mov mov add lcall cmp imul cmpl decb stc cltd aam push fldcw clc dec imul mov ret in and add repz dec and arpl add mov xlat jl push dec xchg mov inc ss ds push cwtl fldl mov ja orb push pushl and les js adc push test add mov adc sbb xchg dec cmpl xor imul or push push jb (bad) push (bad) in lods loop leave xchg pop sbb pop fwait scas mov adc (bad) jno mov arpl push ss push jb sub loopne repz jle test jge xchg popa xchg ret aad push pop nop lret sbb inc xor loop sbb jl jg cmp lcall xor and adc out or fchs (bad) push cmpsl in sarl cs adc push out mov sbb sbb jns and xlat ret jb scas jl icebp sbb inc inc xchg insb movsb (bad) mov push add inc out jnp sbb adc test and xchg fbstp leave bound es sub testb icebp jle cmc jnp mov rclb mov (bad) and out std sub cmp pop mov stc mov inc mov and outsb mov cs sub (bad) dec nop jnp sbb js mov setbe scas xchg push add mov mov and cmp (bad) mov idiv pop pop mov mov mov xchg pop push stos add repnz ja lods xlat repz mov ret ss lcall roll out add imull jo fidivr mov jmp cs into add sub lret xchg mov mov sbb loop dec xchg ja pop test test and cltd dec mov sbb int gs cmpsl repnz ljmp lock and insl dec inc or mov mov lea repnz mov (bad) aam or out int3 (bad) (bad) cmc pop mov mov jle leave lcall inc int3 ja push mov inc fsubs test es mov in mov scas pop mov or (bad) mov mov cld xor mov push sti mov int jle mov movsb jge fldcw xlat sahf inc data16 ret stos sbb inc mov call push lods js sub lcall insl xchg or jo pop xchg test mov inc bnd push sub fisttp icebp insb xor ljmp divb xchg sbb aas pop jp (bad) out pushf mov adc or mov lods add mov add lea lahf push inc aad pop pushf stos mov scas and scas pushw rcr call sbb xor mov cmp ret jo pop adc test dec popf jmp adc xor fisubr test or out dec in jg pushf sbb lret sub arpl mov and mov repnz int3 fistl push pop inc mov mov xchg ljmp xor pop jmp cli repnz jl sbb lret xor cmpsb cmp mov mov (bad) mov sub fs fdivrp mov and popf test std adc dec in out movsl sbbl rcr sbb cmc sbb add enter mov jnp ljmp inc mov cwtl (bad) loopne and mov out sub es outsb push or xchg sti mov (bad) clc jae rcll shrl cmp jbe (bad) cwtl loope push mov lret ljmp or outsb scas call jle push xchg pop leave lods es movl mov push int cmp sbb arpl jns pop aas mov xor into ds inc dec inc cld push lcall imul mov cmp sbb (bad) js or (bad) mov es repnz or js loope inc fisttpll push add inc adc mov sub aas sbb sarb test mov sub lret rclb mov mov mov dec out fsubs (bad) (bad) xlat add in dec sub inc das ficom mov clc or out fs negb nop test pusha in loopne cmp xor sar sub icebp movsl cmpsl fidiv mov xorb cli in cwtl subb xor lret cmpl les sbb jecxz and negl test mov jecxz xor outsb adc cmp xor mov cmp inc mov push inc or xlat jmp or xchg ret or in arpl and cmc aad jmp dec ret or pop push and pop lods pop bound addr16 jmp xor fnop movsl inc mov hlt cld sbb mov sti push or sti and jle push rcl inc xor jp add dec inc or cs mov adc mov (bad) adc mov lods in push pop jl repz int cmp loopne cld fs xchg adc test das push out or jecxz cmpsl adc mov out push les pop (bad) xor into cmp mov mov shr enter pop jecxz inc cmp aaa (bad) cwtl push xchg sbbb jl les push mov (bad) loop mov push call cmp sarb inc notl sub ja sub inc push cmp mov (bad) pop aam pop in cmp push lea adc out (bad) hlt outsb mov dec (bad) mov jns mov idivb sbbl xchg xchg cmp add sub out adc jg (bad) nop call fidivl scas push mov nop loop jle fwait sbb fcomp xor cmp mov outsl jl sbb adc jns popf sub adc ret in scas xchg shrb scas jl jl and add pop rorl mov (bad) into imul test ffree mov lods adc pop xchg add dec push xchg jae push (bad) movsb cmp adc add test jg jbe call jmp jnp adc pushf mov inc sarb loopne xorl scas iret out lret std jg stc sub inc mov movl mov adc stc test jge popa add mov mov push (bad) and pop jns adc lret mov in (bad) les test mov xor pop dec xor mov enter fs jge add je and add repnz jne stos arpl pusha jecxz arpl gs gs jg loope mov mov mov orb xchg lfs mov push sbb adc and and mov or cli in out ret or movsb pusha pop push stos aaa sti mov mov pop push mov xor lcall push mov pop sbb jg (bad) lock addr16 das lods cmpl dec mov iret xor movsl call loopne mov data16 hlt lahf jmp sbb inc imul test pop in outsl mov clc (bad) dec jmp mov je push arpl (bad) pop fdivrl jmp sub inc xor sbb mov sub or insb inc mov (bad) (bad) inc sub cltd in push push xlat mov sub loopne lea jl xchg sbb (bad) cmp je mov push rcll push add adcl jbe sub loop jmp daa dec popa ds les loopne aas imul lret lock or jb xchg lahf fcompl pop fnop aad (bad) mov (bad) jbe dec aam das sub iret in mov inc das jbe cmp jg into in aad xor orl cmp add mov sub scas cmc mov lock icebp or inc sbb add push test xchg adc imul dec sub push cli ds das mov ret pushf rclb add repz jg xor shrb scas pushf mov andb fiadd mov arpl addr16 mov out xor or adc test mul shl add cwtl jecxz add rcll aaa loop inc shr pop shl aas pop sub repnz dec mov fwait mov lret pop fstpl int and mov jg and push ffree aam gs push enter dec arpl push notb das mov mov xlat xor and add js,pn lahf dec inc cli nop inc (bad) xor (bad) cmpsl es and lods push xchg fdivrp cmc xchg in or arpl fmull ret fsts fldcw jb jmp iret xor cs jae and adc fdiv hlt scas mov pop enter pusha sub and xchg out fadds or shl (bad) sub leave stos popf leave pop hlt xchg lret out jbe xchg lods cs lea sarl xlat (bad) mov push es mov in sbb add fnstcw sarb cmp xor add xchg xchg sub je mov bound fdivl bound mov cmp sub mov incl mov mov jecxz cmpsl fcomps insl sub test outsb fwait add xchg (bad) je sti insl aas fs loop push fsts push sub jg aam daa out sub imul stos push dec xor inc inc out lahf stc cld movsl jmp push iret ljmp repnz jns repz pusha in in (bad) jp data16 sub xchg mov pop inc xor (bad) icebp dec lahf mov lock mov mov std xor gs push (bad) lock push jne test idivb push jns lcall mov aaa sub adc cmpsb mov xchg jmp pusha loop mov lret inc ret add (bad) mov jb push mov rcrb nop mov mov enter inc aad pop (bad) mov bound xlat ss imull in (bad) pop or stos lcall push dec shl sub int dec fidivrl jae inc jnp mov js xchg xor mov jecxz and push jae or in ds fsubl adc (bad) hlt mov xor adc cwtl scas sub sbb pop (bad) lret fcoml pop pushf mov pop lds es outsb mov cmpsl xor sub pop add cld adc addr16 mov gs adc lret mov cs adc jo fcoms scas jge std stos sbb (bad) dec (bad) pusha mov add mov stc aaa dec add lret icebp scas jmp add dec mov cmp cmpsb cmp inc push mov loope (bad) cmp and mov aas xchg push sbb orb loop add mov stos ss lret mov mov fmull pop ret out into jnp ficoml sti push clc divl stos je adc push pop imul (bad) push pop ja cmp daa xchg test mov push cmp aam pop jb orb sub mov (bad) ds rcrl pop fwait les xchg notb pop cmp out sbb adc mov mov push xor loopne xchg arpl rcll or out scas arpl push sub cwtl or and mov or cs fiadd sti outsl rclb add sbb inc sub fiaddl sti cmp fstps sub cmp insb lcall fisttp je push push loopne (bad) mov scas jae or mov mov cmp test dec push pop rorb imul xchg add rcrb scas (bad) repz push inc push (bad) outsb cmp or mov pop mov cmp test add call mov in movsb (bad) dec mov mov (bad) je xor jbe or inc das sbb mov in push inc adc sbb add dec mov push imull pop loopne bound sbb outsl mov push js insl push cmp and std jne (bad) bound rcl fnstenv xchg sbb dec push in lret jae pop push ss mov into stc test mov rolb dec (bad) lock mov pop fcmove repnz adc mov (bad) cld mov scas movsb ds movsb subb out jecxz adc shrb dec mov aam push cmpsb inc ret insb sub and push lods (bad) sbbb jnp xchg adc pop push jb add xchg mov mov outsl and sbb or nop stc pop leave adc and mov xor add sub call sub jp gs into imul push add push js inc dec or test xor inc lea jmp imull cmp in ljmp jle fsubrp cmp mov or xor lcall or xchg cmp jbe mov pop sahf fldt or js rol fist adc mov jnp dec xchg stc xchg dec mov xor sar test (bad) into mov mov cmp repz iret mov fldenv mov adcl shrl push test xchg xchg insl sbb cwtl lds repnz fidiv (bad) mov repnz les sub movsl or movsl jbe mov jbe dec mov or mov mov pop mov cmp push incb imul idiv clc dec xchg cmp js xchg dec sub int3 mov mov jle,pn lcall lar test aam cmp mov cli mov sbb popa push andl leave (bad) jle scas clc push lods sub adc jae xor lods jl imul pushf out mov jmp not adc inc jg scas pushf pusha test mov pop cli and jle out inc pop jle iret lds insl fwait push mov enter jns add pushf in add out xchg repnz push and aaa mov xor and mov shrb mov iret mov call (bad) and mov xor mov sbb scas xchg rcll inc data16 push add and cld mov or jmp das jecxz test sub jo jbe xorb hlt and lock pop out dec inc mov int3 lods (bad) scas sub (bad) mov or jo cmpb popf cmpsb les cmp lret dec fdivrs inc add mov or iret ret popa cwtl in fcmove adc adc or jg test push loope lret fidivr xchg dec mov add arpl pop stc cmpsl je push cmp and mov pop popa loope jbe out mov loopne inc in adc adc push lret out mov insb xor dec jp add adc pop mov not jecxz sbb mov popa pop insb (bad) roll and add mov jnp xchg gs cli mov jns test sbb mov repnz fwait lods jns xlat inc test loop pop cmp sahf xchg dec sahf ret mov leave testb and es mov pop mov xchg pusha adc roll es loopne lcall in scas loop scas inc or pop (bad) cmpsl into sbb cltd jb inc mov rolb or inc jo dec into iret xor xchg pusha jp imul nop int3 mov pop pop dec xchg loope sbb and mov (bad) cmp (bad) push insb xchg dec jmp inc test jbe in push lods enter pop inc pop test push aas aam lret enter push sbb sbb lods scas xchg test fstps in cli pushf cwtl dec sbb pushf or pop mov aam jl pushf in pop and add in std test jl push add xchg xchg jecxz cmp sub push paddw pop cwtl cmc mov jne add xchg push (bad) (bad) adc in inc add test pop xchg insb pop push andb das jmp dec mov jae push xchg inc leave shrl add stc mov into dec fs mov test xchg mov es xchg ret sahf dec pop test adc adc mov jl and and icebp mov dec test jns ret mov in outsb (bad) mov mov in pushf mov jmp mov or dec les fnop push nop lds cmp adc dec outsb shrl addl dec in pop dec sbb mov popf fldenv cmp push pushf pop add stos out or push cmp mov push ret add (bad) jno lahf xchg mov push mov jno sbbb nop adc xchg push mov mov jo jnp mov movsb int inc mov incl dec lret ret rorb fsubrs test nop mov lahf inc push cltd xchg fwait sbb test jno xlat push iret nop jb push pop sbb (bad) data16 sti ss pop sbb fisubl rcl adc bound jl jae fwait inc add iret push and xchg les pop mov daa into push add push iret fstps sub pop mov and testl scas scas cmpb je into into mov jecxz add sub hlt mov test inc add mov mov pop clc mov in pop add or jl cld mov and pop mov out lahf int pop adc or fiaddl nop sti pop scas xor xchg jecxz dec pop sbb pop push inc test sub mov add or daa addr16 and popf rorl adc jmp lret push mov mov mov push add push daa xchg dec lds int3 shlb xor iret dec pop jns sub daa mov subl repz xor ljmp push mov aaa idivb in js orb mov test sub sbb cmp in scas jge xchg cwtl fadd mov insb mov jle out sbb pop and (bad) push sub vmovntdq lret mov jmp sub or popf aad gs sbb push mov scas insl xchg mov cli shl mov jge xlat push xchg jbe sarl sbb and (bad) pop shr scas or dec inc stos out cs jge pop push lret mov add imul or mov das out aad lods and stos jmp and mov sarb fmul ret mov mov int inc mov pop mov pop pop lods and mov sbb lods icebp sub (bad) les sbb inc push cltd aam adc stc nop pop sahf xlat pop sub cmp xchg ljmp fcoms jp hlt pop jp fadds adc out xchg push fdivrl pop gs jecxz mov sahf pop jae jbe add and xor in sbb pop sub ss in and cmp cld xchg add insl aas mov aam cld ds pop push out dec (bad) cmc lods and adc inc testl jb clc adc pop outsb inc and xchg mov mov pushf and cmp call aas es lea lods xchg mov ds pop jb adc sbb adc xchg (bad) aad xor dec cltd mov cmpsl push dec and sub loope xchg xchg lods mov fdivrl push or test or push outsl outsl in pop movb inc fwait push repnz mov xchg pop sub loope loopne jne stos add xor or mov add fwait pop sub lahf add rcrl out je pop mov jne sub cmpsb cmpsl imul or xchg jnp test or test xchg sub and inc sar int aas int3 sub dec outsb inc lret sti js xchg sub adc jo mov vpmuludq jg imul push mov jmp jl mov mov mov fistpll push push in movsb clc pop mov sub leave sbb add (bad) inc aaa inc scas or les lahf and out xchg daa arpl sbb sarl xor std add push mov or aam pop scas ds arpl and inc inc jbe aaa fs divb int3 xor test stc pusha dec sub push (bad) dec (bad) mov push hlt push pop shrl pop ret jo scas fdivrl xchg xchg rol inc xor mov stos sbb add cli out pop loop call push pop cmp hlt jbe lret dec cmp (bad) je popa push in out faddp pop out mov fisttpl orb jmp into xor clc ss mov add inc push push cwtl push ljmp dec stos outsb sbb in lds pop xor push adc dec aam mov out mov dec iret dec je outsb sti sub sub (bad) (bad) cmp in jge xorb loopne pop jl outsb mov das (bad) fnstcw jo (bad) push push into mov ficoml mov mov mov les and push sbb adc add test push cmpsb mov repz add bound mov fmull mov (bad) cwtl mov bnd into push push int in xor add icebp xchg sbb jne cmpsb cmpsb or imul shr mov aaa arpl inc lods and adc or into lock out iret pusha in or jns push mov (bad) jmp les bound add arpl out imul ds int3 dec dec or in sti or xchg push mov jo int3 (bad) inc lock or (bad) divb adcl loopne jg movb or adc in cs jle sahf mov inc xchg mov or dec xchg andl lock fs add scas push or sbb stos testb mov data16 scas aam inc scas mov pop test dec incl shrb cmp cmc test frstor adc jbe mov dec add fidivr fcoml pop and jns daa data16 cs inc adc sub test incb mov mov out mov sub loope ret (bad) in mov pop in loopne xchg push rorl rol sbb addr16 jb pop or stos pop icebp rorl adc call cmp test (bad) sub mov pop xchg arpl pop sub sub mov addr16 subl xchg xlat sub mov mov mov out iret loop inc lahf test pop push cli in insb or push (bad) aas jg repnz nop jle jmp pop cmp push and bound in pop sarl out lock cmp movsb unpckhps lret aaa pushf jg shl dec dec je pop sbb mov push cmp divl mov push cmpsl idiv xor shl pushf mov sub mov jo mov insl dec rorb pop js add push xor (bad) cmc test dec cmp cmp push pushf out cld adc fcmovnbe arpl insl ds pop out and jae mov sbb pop shrl jns rcrb or jge mov dec cmp jmp cld (bad) sahf xchg or inc out jns or (bad) xor mov cli movsb push inc lret or jge push and mov (bad) lret adc movsb jnp push out fildl inc mov or xor or xchg insl stos fwait inc je and cs sbb fistp int sbb fisubl das xchg pop ret outsl lret lahf add test sbb push ret jae cmpsl mov cwtl xchg (bad) mov xchg xchg pop jmp inc mov (bad) sbb mov push cmpsl andb lea outsb xchg sub xor cltd (bad) sbb xor shrb shlb jmp ret mov push dec enter incb movsb sbb test out mov jnp jmp or inc fnstcw jno jg jl (bad) inc in lds jp add pushf ss mov movsl outsl push aas insl mov adc push xor popf cmp jb insl and int3 inc notl pop nop je adc aas adcb punpckldq in xchg add cmp jae xchg sub fidiv movsl std cmp jbe ret icebp and inc into mov mov pop mov jge dec icebp xchg cmp or arpl stos and mov or bound cmpsb insb mov xchg repz (bad) mov pop fdivrl pop pop jae push aaa in mov fdivr cmp add int3 and xchg push push jmp and inc aam jae add cwtl lret add pop xchg and and sbb (bad) mov jle mov test out inc dec jbe mov addl cmp (bad) pop adc sub push ja (bad) push (bad) fsubrs (bad) mov lret xor fs sub mov mov mov ret dec mov cmp cltd in mov xchg mov gs jmp scas push scas pop mov mov pop std jge mov xchg add ss jecxz cmp gs add sahf out movsl mov (bad) jmp pshufw sti outsl jbe jl sub add scas adc int3 data16 stos mov jge push pop pop movsl fisubrl stos popa cli mov enter inc xchg sbb cmp (bad) adc sbb pop aaa dec jl pop cmpb cwtl jbe and in pop adc add pop loop or cmp add mov sbb into push mov or (bad) orl push in bound pusha sarl (bad) iret stos adc cmc lea sahf cld aaa dec mov jge out outsl cwtl insl movsb mov jp in fimull insb daa push shrd jge sub mov cmp sbb inc aam mov jae lret add adc dec xor and pop lret fisubl and dec push or sub js push adc mov add aad outsl mov lods rep shrl stc repnz enter mov sbb sbb aaa and dec jmp cmp and (bad) fwait mov xlat mov call pop lret rorl lahf cmpsb mov pop dec jmp xchg or sbb ret push push push add lcall push lock jecxz loope lret sbb mov xchg std hlt jl cmp hlt (bad) mov (bad) mov data16 test incb (bad) fisubr mov pop xor push es clc inc dec dec aad push jae mov inc (bad) and out mov mov (bad) xlat cmp inc jle fsubr data16 nop xchg push mov stos xchg push ljmp xor scas or xchg adc outsl mov dec aad inc scas enter jp rolb adc sub int3 inc negb ficoml xor (bad) aad scas fs inc cmp call or dec adc mov stos push flds dec pop mov pop mov jno lods (bad) out mov mov rol mov mov cmpsl or dec mov mov sbb clc das or (bad) cwtl loopne xchg pop data16 mov xor and xorb jbe mov dec vpxor fisubrl insb inc test fptan xchg push fisubrl (bad) dec mov and push aad inc mov jl (bad) xor pop es xorl popf cmp out stos jnp fdivp xor xchg mov rcl add mov lea add sahf sub jle sbb ret push mov xlat inc xchg fbstp in stos std pop dec mov pop sbb out test testl test xor mov nop cmp push (bad) fistp xchg xlat xor (bad) stos imulb push xor das mov mov jo mov scas or repz inc mov add and sub pop out jp shrl mov nop mov push (bad) mov inc enter cld dec cmc jecxz sub inc and mov mov inc cmc or cmc lock push nop add dec in sti in sub and lods adc cmpsl lock fstps inc dec mov loop inc (bad) xor mov push int3 dec pop lods fimul insb xchg push dec sub mov std stos rol dec iret (bad) repz and or xor shlb jb out xchg xor in movsb test icebp enter inc dec fidivrl pop je imul pop push inc sub and sbb push xchg inc adc mov mov lcall sbb adc sub and shl clc jp je outsl mov aad mov ja stos test fdivp popa mov int3 xor divb adc mov rcll jl add and jmp outsb and xlat mov mov add xor cltd scas jp xchg enter sub add roll pop xor mov jl mov dec jno enter mov sbbb roll add mov pop jno push (bad) adc adc scas mov insb pop loopne xchg pusha and fimull mov mov push or int3 loop adc and cmp movsb js,pn pushf loope mov rcl rorl mov aaa aam loopne and cli and jge hlt in stos scas mov mov or (bad) std or mov mov sbb loop xor jg dec mov addr16 pop in cmc data16 inc cmp mov rcll test aas sbb fldz das cmp mov in mov dec fldenv fistp sub aam aas in and sbb sbbl sub imul cmovno add sub dec aaa subb sbb pop mov xchg test repnz dec int3 add jae (bad) fwait outsl push cmpsl pop test in xlat clc sbbb movsl mov test jge xor daa out pop fistpl mov inc fdivl mov enter inc jns mov popa xchg fwait xor push push xor xor fisubl (bad) mov fmuls cmpsb push xor adc ds repz out or loope dec ljmp sti sub ret shll pop bound xchg inc or and sub mov xor mov iret sub inc cmp aad jno adc xchg inc mov xor int3 (bad) mov sbb std pop mov jns arpl adc movsl fmuls cli inc cmp push test pop (bad) xor inc push push scas xchg jnp adc test imul push push ss in cltd dec pop dec jmp int pop sub sbb (bad) in dec out stos lock addl loop orl mov sbb cs (bad) mov addr16 mov mov icebp in cmpsb and imul sub cs rolb in fisttpl push push and cli outsb push lea push sub fmuls sti mov in add or mov rorl inc arpl (bad) mov or fstpt lds fildll in cwtl xor add pop out or aam mov lret sub fnstsw cmp mov sub fnsave popa mov and ss xor or jl into imul pop sahf popa fwait mov sub xlat data16 jns cwtl mov pop (bad) mov mov aaa (bad) and mov scas mov data16 and mov inc loop push cwtl xchg lret inc loope daa rorl ja jle addr16 cli pop std add sub and in loop ljmp push dec mov xchg lcall push mov xchg inc loop xchg fcmovbe lds inc push movups lcall movsb rcll fs in sub popl mov jmp cmp imul dec mov mov mov xchg xor jbe addr16 inc sub test add xchg and jp lcall mov into cmp shrl jg gs adc and (bad) and jb test (bad) dec rorl sbbl push nop cmovb xchg dec mov sbb repnz ja stc subb mov cmpsb dec mov call scas lock stc jo (bad) ja mov cld adc inc cmp out stos pop dec xchg cs sbb out pop mov lods cmp jb aaa pop lcall mov js mov pushf mov stos in or sub test inc gs bound push repz push jae out test cmpsl lea in pushf addb in jp aas outsl cmp dec pushl and pusha mov sti cmc sub push push out rcr push es in jae pushf lret ljmp xchg (bad) mov cltd cmpsb movsb jb addr16 (bad) loope xchg xorb je das jl pop dec xchg imul sbb xchg sbb js jg push push adc sub or dec jle outsl or mov es sub lahf fmulp popl pop sub call faddl sbb negb xchg jae sarl ror cmpsl xchg sub es aaa jle pushf pop repz mov repz movsl bound and adc popa aad jno or lods outsb mov push adc mov jg inc bswap cbtw pop inc jnp (bad) pop fidivr mov in add (bad) aam dec lock pusha pop stos outsl out mov (bad) (bad) ja loopne xor sub outsl dec ret mov mov xchg jge push dec lret mov xchg scas out repz enter inc loop sub mov movsb shrb ficomp jg cmp insl push out xor jge pop scas jmp pusha into popa sub fstl aaa sahf pop cmpl inc repnz push xchg mov jns xchg xchg dec lret lahf mov aad fistl loope fnstenv jp xchg xchg mov xor push push xchg mov js xchg or das jg pusha add mov ret bound sub mov xchg dec xor test rep mov lcall xchg loopne,pn mov movsl das rcll mov xchg mov jecxz fild arpl xor add (bad) xlat fistl (bad) dec add movsb movsl ljmp fsts add xchg jecxz or xadd cmp sub sbb sub or dec in outsl sar or mov push es loop loopne push inc div cmp and or and push cmp (bad) loope je pusha adc dec minps ds inc adc rolb mov dec fmuls mov loopne and xchg jbe les arpl scas rclb ret nop je fs into mov sub mov outsl sbb movsl mov mov test pop inc les dec ljmp mov add imul cmp sbb outsl cmp xor ja fbstp daa sub mov int dec jbe das pop push hlt int fwait int3 xor aam and bswap es jbe push test push dec testb sbb int rcrb pop rcr stos mov mov cmp ja jne hlt adc ret and aas sbb cltd sub aas xor subl or cmp jae mov out add push adc data16 xchg shl or addr16 out outsl mov or mov incb cmp addl ficomp outsb pop xor cmp (bad) mov dec add out rclb cmpsb mov clc call aaa pop or mov mov mov fstpt adc pusha leave int3 inc pusha ret xchg mov lods cmc leave sti adc jo test jo jnp fwait mov adc popa dec sbb test jnp insb cltd jo iret xchg lret mov mov sbb ds nop sahf xchg mov ret adc pusha (bad) push inc sub add fxch (bad) in push divl or fisubl add pop inc cmpsb aaa cld cli dec into ret fnstcw lds pop add jne sbb dec and sub xorl cmpsb (bad) sti loopne push jbe xor movsb dec jns mov mov or ret sub leave lds je xchg mov pop adc mov cmp aaa mov nop call rcll mov fs dec jne or call ds jg (bad) loope adc adc lret inc inc push adc pop in sub push push push mov xor insb jle lock sbb enter pop add push mov jp lret (bad) movsl stos je mov jle aaa sub (bad) (bad) jb fwait mov sahf cmc mov lret stos sub in cmp cs cld sub sub push dec xor repz outsb pop mov mov cmpsl test cld repz push (bad) ja sub dec jnp and aas jl pushf mov dec mov xchg loope add mov scas cmp in sbbl sti cmp jp and sbb push sub outsb xor mov jo push mov push xchg je int3 pop xchg dec loopne jle add push addb scas push cmp and dec xchg (bad) (bad) jle cwtl or mov std pop lods repnz in cmp jp mov ffreep pusha outsl test mov ret push int3 sbb ss mov mov cmp mov or int3 dec push xchg orl out add push aam js dec push add (bad) xlat push and cmp call push push hlt sbb insl push stc add lea jns xor int3 cwtl push std mov and fcmovnb rcrb sub ja jmp inc mov pinsrw or movsb pop pop bound push mov daa dec dec call mov sub jbe jmp cmp pop push mov rorb mov movsl mov frstor fistl cmc sbb test and mov or or ja aaa push adc ret dec pusha push push rcll jle loopne (bad) and outsb pop dec dec push sahf cmp aam lock imul test fcompl push cwtl in data16 ljmp and push sub mov add adc stos imul mov popa sbb popa fiadd clc out lods mov add mov lea call mov pop ds mov imul push push xlat or fidivr movl xchg push das mov (bad) cli xchg into andb or sbb sbb pop loope lea mov (bad) outsb ljmp push rcrb sub add sti or arpl mov je sub icebp jbe xchg and push out (bad) pop aaa dec lea test mov and fistp mov sti lcall imul dec pop out sbb imul xchg pushf popf data16 out pop adc ret cmp sub cld mov xor rorb out aas push or cmp notb js jmp xorl jns inc push imulb pop mov pop lcall std xchg jecxz ljmp call sbb bound lock movsl xor out push lret leave mov inc movsb loope xchg lds imul (bad) inc (bad) (bad) jbe xchg push sbb mov mov mov adc add cwtl scas dec adc pop and or fldenv mov lock outsl test mov int mov (bad) add popf out push and iret sub and stc cltd lcall dec pop xchg addr16 cltd cmpsb mov mov addb sbb imul les std push adc lcall pop xor es dec add imul push addb push ficomp outsl add or es and push cmp in mov sbb fisttp fnstenv mov xor in jmp jecxz std in push push mov insb cs cmpb add mov mov jmp mov and cmc pushf cmp sbb in out (bad) mov test (bad) xor cmc xchg add nop mov pop std popf dec scas ret out in lea push enter ret sbb jo push lock xchg popl mov popa daa mov insl jnp or jnp add pop pop sub and shlb pop fbstp aaa mov xchg sub pop loopne insb or cld aam push das fdivl inc test pop adc pop fcmovbe inc les mov xor mov out sbbl dec jae add jnp ds scas fwait sub fbstp mov iret pop fistpl dec popf pop js icebp push fcmovne xor inc jmp test in mov adc addr16 jecxz test adc jmp das adc add inc mov inc ret or iret cmp loop (bad) mov inc std mov dec clc mov lret sub int mov loope cmpsb push std lods inc cmpsl push cmc rolb int mov iret out fcoms pop or es sbb outsb je jne add (bad) decb fs ret scas xchg movl sub sub mov insb xor adc adc jb or adc sti adc sub pushf push stc (bad) push repz call (bad) loopne insb jne add mov xchg inc mov loopne mov shrb or mov cmp pop dec xor cmp aas add (bad) xor pop sub xor movsb mov inc shl les mov xor pop lcall aaa sbb ss adc sbb test dec dec sbb popf popf gs add cmp jb int3 icebp out sub add lods dec xchg dec push mov jae jmp add nop mov mov mov mov addr16 jae inc movsb insl mov and imul and or jmp dec (bad) fsub push or nop and or jmp dec ljmp sub mov out test in pushw adcl out pop inc mov push fldenv (bad) iret inc or outsb faddl mov mov xor jb push xchg xor test cmpsl push cmp cmp jle hlt arpl xchg es and sar fcmovu sqrtps mov or frndint or outsb movswl test mov mov sub addl ljmp arpl push mov or push test mov jne adc push fwait jge xchg into jecxz mov bound push jno and pop in jp inc fdivrl repnz cli cmp call leave mov in and fildll xor sub cmp dec jmp jbe dec popa out sbb sti dec gs xchg test inc sub sbb jns add jo lret or arpl in jle enter std pop (bad) aad cmc loope pushf (bad) or nop jo inc xchg outsb inc or ss cmp push dec dec mov dec mov stos and mov xchg das (bad) not mov cmp adc pop test repz loopne adc cmpsb mov inc xor jg ret pop pop jae mov mov xchg jb rcrb ret in aas mov sahf aam fcomip sti xchg mov jnp in dec or xchg mov xchg ds test add repz fadds in pop sub aam test das callw pop and ret xchg or inc sbb and jmp popa (bad) lock wrmsr (bad) xchg out pop lea dec call push xor push ret pop pop cmp lods lret adc xlat clc fs dec pop mov aad movb in aad or cmp xor rcrl mov mov imul mov lret xchg rcrb xchg in or shl jp imul xor imul jle mov jmp jecxz dec into mov inc pop jg or or xadd sub in or dec xchg mov mov aas (bad) xor xchg inc pop (bad) sbb repnz ljmp aaa cmp xor cmp jae pop loop cmp ljmp rcr xchg icebp aas orl out xchg aas ret push jb mov aam adc ret sbb cmp push inc imul je sbb fwait inc (bad) repz rcll std test add push lods mov fdiv (bad) adc aad sub ss mov es inc pop xchg leave (bad) adc inc cmc out pop mov repnz mov fidivr xor subl lea adc push insb cmc pusha stc mov movsl (bad) cmp test push mov sub mov mov and pop sbb sub mov dec xchg jne imul mov inc (bad) in test out xchg xchg mov (bad) mov pop (bad) xlat xor jg inc or lods in sbb dec test (bad) std imul es pop mov sti pop mov jns in push movsl xor fdivr mov mov inc add popa (bad) in daa enter cmp jg gs cmp in ja leave xor mov pop nop pop outsl inc lret adc xor ds sub pop lret cmp clc mov or test mov add inc arpl inc push xchg cld lds inc vpermd sbb mov fnsave lret insl cli mov lcall mov pop mov cltd xlat lods (bad) sti push mov mov ret adc mov or mov in push cwtl jg pusha fwait cmp jle push mov xor xchg cwtl lahf lods insb pop faddl movsl aad outsl fidivrl call push loop dec mov sbb mov mov clc or ljmp xor or ja dec lahf lods fisubl sub xor or shr ljmp leave push add add mov xlat adc jecxz xchg repnz push sbb pop sbb loope jb call push dec pop or jp jo pop cmp add mov push test icebp fstpt push dec inc mov or js jns,pn ja pushf xlat inc imul jg mov jge call jle mov inc (bad) je xor sbb (bad) push sub jmp jle dec std jbe or loop fidivrl enter jbe push push jb popf jmp pop xchg lods subl (bad) icebp enter pop fwait mov es test insl sub imul cli xchg inc cli inc mov sbb xchg inc pop enter or fmuls arpl cmp sbb mov adc sbb popa push stc leave ret pushf adc jge popf inc xlat int adcl adc xor leave test push xchg insl lcall adc mov shr xchg test stos insl and loopne dec lea lret mov shr jo sahf lds push and xor jecxz mov xchg cld push subl lds add mov and and add pop or sub lods lock cmp inc bound lcall xor out scas sub cld insb scas sub pop and and cmp imul or push cli loopne xor rcl mov mov insl ljmp cmp jnp enter in fwait mov por repz in xor adc mov dec xchg lods xchg imul sub dec loopne (bad) imul and pop loope xor dec push push into adc inc addb movsb pop cmp call in inc jecxz adc test pusha mov inc scas cs push fstl loope mov adc imul pop pop mov rolb fwait (bad) lds sbb dec aam icebp lds inc adc push mov test call icebp nop fyl2x dec cmp cli rorb mov sbb cmp mov pop xor sub scas jmp (bad) imul ret ret mov xchg jne loopne fwait jae mov jecxz pop jnp lds std mov push insb pop mov inc mov push cwtl cmp pop jecxz out push int3 lock stos addr16 and out mov scas lock icebp aad lea mov jle arpl dec mov mov mov inc pop xchg sbb mov test flds mov jno inc sbb mov sub push stc cmp push mov in js sbb sbb pusha shll xchg ret int lret jnp xor rcrb aas (bad) enter fs je pop push sbb mov sbb (bad) cwtl dec rcl or fcmovu stc stos add (bad) jae adc scas sahf mov fisub sbbb mov mov test jmp lods dec sbb and add xor mov dec (bad) stos insl ja xor cltd adc loope or outsl sbb adc outsl mov stos icebp jmp loope fs imul js aad das inc jae sbb lods adc test push sti dec or into movsl popa movsb add gs pop cld idivl rcll inc sub outsl in aaa dec push lods scas lcall dec shll imul sub adc lcall cmp gs push or (bad) cltd xor aam adc and hlt fcmovnb movsl ret out cmpb test dec inc pop inc fidivl gs cld sub inc stos adc mov lods dec fldenv sahf aas (bad) mov movsb (bad) mov rcrb xchg jmp insl std xor and std sub dec outsl js loope fprem1 adc sub fwait sbb pop data16 mov je arpl sbb cmp jbe mov push fidivrl jge fcmovb jb mov shrb cli jne jecxz fsubl jp push test or inc pop xchg dec or std lret sub test and jnp scas mov push pop ds or fcmovnu fsub jb sbb dec icebp gs inc mov mov dec mov mov stc adc nop roll sti ss push jg int and add jmp cwtl cltd insb xchg insl sbb rcrl sbb outsl insl out push xlat repz js rorl sbb cmova xchg push pop cmpsl rclb sub int or pop lret mov into add cmp pop test mov add jmp dec sub sahf cltd push dec out psubusw pop lds jno jmp dec or mov scas (bad) jnp int3 push mov cmpsb movsl xchg cli sbb mov scas loopne ret inc outsl int3 inc cmpsl movl enter mov cs (bad) out push aad cmc sub jne iret push iret jae pushf pusha inc loope mov jl lcall jecxz inc adc mov pop adc xor out into aad inc (bad) jnp jno cmc mov dec sahf xor xor push mov mov mov add imul rol int3 outsl out int3 and dec or aaa cli mov inc ret xor or enter sub loope mov jle add dec push xor lcall push fwait pusha mov cmp scas loopne rorl mov loopne add lret mov outsb dec xor fsubs cli insl pop cli int3 lcall jb mov or xchg cld push or in push push mov add dec sarl mov mov xor mov or xchg dec pop lock mov jnp add mov lahf jno xor mov mov push es aas imul and jl or push popa adc adc mov inc sbb inc in cmc cmp cmp sbbb mov mov push jae jnp mov sub sbbb xchg stos push xchg mov inc cmpsl push jbe fldcw pop adc int3 or lahf scas xchg jp ret (bad) cwtl sub push add mov test push sti int pop sbb fucom xchg rolb imul (bad) aad cltd adc xor push xor jmp push xchg inc cwtl out call or push xor mov and xchg pop das sub jmp and and inc inc mov sbb cwtl xchg sub pavgw xchg inc (bad) cli push inc inc out outsb adc hlt xchg nop popf pop sbb mov pop ds es out imul (bad) gs das jge jp stos pop push int3 pop std xchg pusha jno push cwtl adcb test inc nop xchg daa xor insl fcomps xor lea xlat mov xchg insl lock lods sub mov mov pop repz mov (bad) add mov loope sbb outsb adc loopne cmp (bad) mov stos push push movb mov data16 dec xor dec push xchg fstl mov adc imul int push daa mov test pop leave repz sbb cmpsb hlt scas call fadd add push repz xchg js sub push dec repz jp ret fs jecxz es add iret dec loopne bound jl rcr adc sub or jae fwait es lahf sbb and mov in mov xor cmp imul jno lret pop mov and jno (bad) inc ja jb fildl insb sahf dec mov sbb rcr (bad) movsl adc pop dec mov add push mov mov dec dec lods stos or into cmp mov pushf push std mov sub xchg cmp cli fisttpll xchg lea sbb pop lret out (bad) stos sbb sub xchg add ret dec jne rorl outsl icebp test jb xchg fsub rcr jno or and xor sub or hlt pop outsl (bad) cld popf testl jle orl sub cmp pop xchg sahf daa jmp fdivs jg lock cld cmpsl mov mov mov dec mov jp sbb jge gs repnz aad test (bad) cltd adc sub nop ret add ror cmp sarb mov adc adc inc gs dec or gs outsl inc cmp cmp push inc out pop movsb outsb push outsb je and mov mov pop in dec sub (bad) jb sti mov jne mov jno cltd push bnd mov jne movsb jl or inc ret push jecxz xchg in pop adc test mov adc fidivr (bad) cmp movsl mov jmp add and fcoml cwtl lock scas push adc sub push sub xchg (bad) movsb fcmovu fcomps xor pusha sarb lret icebp rclb lds popl mov xor push fmull adc and mov cltd lods mov xchg mov or cmp add (bad) sbb daa mov add pop cmp lock das cmpsb sbbl inc stos or in lds xor shrl xchg addr16 inc inc inc call dec add add bound xor call mov jmp xchg push mov loop loope cwtl rorb jp nop mov cmp dec ficoml sub or nop mov pop (bad) cmp cs stos mov pop push jle outsl inc jb sbb imul mov xor call xlat jecxz push mov and addb add push frstor pop mov insl jb mov clc or mov (bad) int3 insl inc mov sbb cmp out inc cs xor pushf or ss (bad) cmp test popf dec jmp outsl les mov out and das jge and roll or (bad) imulb out arpl mov sbb cli or xor addr16 ror xchg xlat out movsb inc (bad) jecxz in fwait test sbb roll ss popf inc lahf pop popa xchg jno cld cmp mov adc lds push mov add test out sub in mov xchg push add mov add cwtl fsubrs (bad) jb test (bad) rcrb in xchg sbbl xorl push xadd push fsts andb into call cld dec les xor scas pop aaa jne loop lods xchg inc into cld xchg mov lea lahf scas mov cmp and test add or sub inc inc roll (bad) pop mov jno xchg je xchg pop out cld sbb xor dec mov xor in (bad) vdivss out push dec xchg or stos or and inc add or aad movsb xor xlat fs mov sbb mov dec mov shl pop push sbb mov mov push mov notl dec in loope out add popa or aam fimull cmp xchg (bad) ja sbb dec sbb test ds imul (bad) sahf test mov pusha sub in xlat data16 and test lds mov jnp inc xchg in outsl aaa stos jns inc dec popf call mov adc aam incb jle ljmp mov ret rclb scas sbb jno jge mov movsbl cmp mov xchg push and push inc xlat (bad) fnsave jo lods mov xchg mov rclb int sbb std dec mull jb cmc daa push cli mov aas data16 lods subl test fildl xor jns inc or xor jb jno mov movsl cmp push out xchg fdivrs push (bad) (bad) fldpi adc stc jne lods cmc pop loop sub dec lods mov or add lcall jns out test fsubp jnp fsts pusha inc outsl inc insl icebp popf cmp loop mov and cli mov arpl pop ljmp and pusha ss jg lret mov lret pop cwtl insl or mov mov jle shrb arpl mov sbb dec fildll push mov mov and lcall inc aas adc xchg popa lret mov pop cmp inc jmp jnp add sbb loop pop shrb sahf inc ret add (bad) aas xchg fwait xor adc loope pop mov mov lds js mov push les outsb mov leave pop push jb and jno mov inc gs lcall insb lret js cmp fistpl fadds int fisttpl test add xor mov in and cltd pushf xchg and xchg int3 xchg dec mov adc add or sbb jns adc cmp sbb mov xchg add test pop fmul popf jg or aad lea cmpsb jmp (bad) pop cmc outsb push add xlat inc lock scas pop (bad) mov loopne jp mov xlat pushf cmpsb dec xchg cmc add sub add negb sti jnp out es xlat popf mov xor mov and jmp add in dec inc movsl sub cmpsl jo fstpt jl push (bad) movsb scas and add (bad) sbb lret fcoms inc inc sub call mov inc enter inc cmpsl mov adc jg out inc loop jp iret les lock hlt icebp shr mov mov jmp leave xchg repnz rcrb mov in jb lods iret adc jo pop loope loop push or lret repnz pop jbe or cmp sarb cs in sbb aam ja mov out sub sub imul pop aam std arpl mov sbbl int mov arpl icebp loopne push test imul inc cltd push aaa push mov push (bad) pop js or xor cmpsl cmp aaa mov mov push (bad) xchg adc sub repz pop or sbb xor mov xchg gs jnp mov subl pop xchg and popa cmp scas add inc dec loopne xchg jns or pop mov or rcr jle out lods leave adc mov ret jecxz inc cmp mov xor xor xor fidivrl cmpsb cltd loope (bad) aam xor leave add cli mov and in ljmp lahf mov pop jl adc inc mov sub dec testb jmp mov jno bound (bad) xor and out xor xchg fdivrp pop enter jno jnp scas jae add cmpb fstpl push int3 (bad) or out mov jecxz (bad) (bad) aas and pop aaa repz je cmc mov scas dec pusha popf adc add xchg (bad) in pusha daa sbb xor push jge popa sbb sub xchg popa ja cmp stos lret (bad) jge mov test int pop pop jnp xorl outsb enter sub pop xchg xchg or shlb mov jle add hlt pop out push ljmp sub sarl sub dec movsl incb fisubrl stos (bad) in loopne out or mov cld out sbb fcmovnb lret mov mov or mov inc mov out push mov in ret lock es cmp les sbb jnp pop test mov mov cmp mov rclb loop jbe inc or push sub (bad) adc or fisttpll mov insb jecxz inc mov jnp test fstl inc enter sub push mov xchg inc mov clc fimul dec jg sbb (bad) dec and adc f2xm1 into jl in (bad) mov arpl lret cmp jle mov dec or xor mov jp mov in movzbl in and mov xor negl mov jne adc lret fbld push movsl xor mov mov (bad) jne dec mov lods arpl dec cmp push lcall and inc out fmull outsl inc lods xor subl aas ficompl xor xor adc mul clc je add cmpsl mov fs dec scas mov call in leave (bad) addr16 sub dec sti pop pop enter imul mov fisubrl cmc imul test cs mov push dec in mov xor mov xchg data16 sub push fisubl and test and dec push imul out scas inc aam pop aam push stos xor pop push ss cld mov mov inc cmpsb sub incl jnp jbe loope fs mov sbb lret adc mov montmul cmpsb movl popf sbb out xchg lret hlt das push int sbb adc inc jl mov cld pushf xlat popa xchg dec ljmp jne pop ret xchg aad gs arpl dec mov mov xchg (bad) out adc mov out in outsb int or pop sub movaps neg and xchg sub or mov in xchg fmuls psubusb jns imul inc andl xchg orl push xchg and loope and jo jno jnp lds add xorl pop mov and pusha sahf gs scas jbe mov lahf inc test rolb cmpsl jno push mov hlt addb jg or loop push dec mov ret mov fidivrl loopne adc xchg gs adc mov or sti in arpl test inc daa int3 mov lods loopne mov and decl popf (bad) repnz rcll and xchg pop shll out add movsl je push pop out add lock cmpsl arpl leave pop push push sub lret mov mov nop pop add rorl adc xor in xchg jne js push inc sbb ficom fld mov push adc mov test mov movsl mov cmp push ljmp loop mov stc push gs repnz mov (bad) stos mov lcall jmp data16 and lock dec add xchg sarb jo dec movsb mov movsl add aas jle mov ret push enter enter popf jmp adc mov mov pop pop test (bad) fcompl pop push das sub xchg hlt test dec scas push dec popa xor (bad) and jecxz mov scas dec jg pop bound popf loope arpl jnp out push jmp stos cmp push int cld cmc inc xchg repz sub dec je loopne sub and mov xchg sbb jle in iret fnop ret dec cld jne sbb push sub (bad) loopne jmp out pop mov xchg jmp ret lock enter lahf (bad) mov jb sub repnz sub jg inc xchg imull add les sti insl xlat mov push mov mov inc scas push outsb cmp iret ret cmp (bad) lods mov (bad) lea cmp rcrl inc lods pusha js sub aaa sahf push movsl popf outsb andl push outsl push rep mov test lods jg push test mov test fdivrl imul push (bad) mov inc jle or xor adc push sub nop and ret push jle adc ljmp push inc pop pop sub or xor dec pop adc movsl shr inc lret sub fs mov sub push out cmp (bad) mov push push repnz leave push xor push lret bound jae les mov mov (bad) jne fwait jb std and inc mov test subl js adc pop adc xor cli cmp adc and (bad) mov xor mov scas cmp lods pop push jo sahf sub xlat push or popa jle xor mov push sub push jns mov repnz movsb dec jns stos cmpsl adc call test out lahf movsl shl or or leave pop and fidivr cli imul jae mov xchg ret xchg cs jp inc xor push add fadds inc xchg sbb jne jecxz insb inc in lahf test aad push adc push pop xchg insb adc and shr mov pushf mov rorb rcll sub fbld add pop cmp cmp add jge into lods add imul movsl or xor add adc push mov pop mov cmp cmpl or cmc push lea adc mov hlt push stc push xchg sahf mov cwtl dec stos mov xor push jecxz mov jno dec adc aas inc test or or cmpsb cmp jo sbb nop xor ljmp insb lahf gs adc fist das insl (bad) imul out xor mov sub lock jo in or adc int3 jg dec push xor lea test mov cmc leave das stos mov enter dec push jge divb jb das jmp in xor inc cmp push mov aas ficoml lcall jo mov xor push xor rorb adc outsb outsl jb loope shll les inc loop fs lods or inc int3 rcr cmp mov int movsl cmp push out cmp daa test negl ret dec sub sub add add imul mov adc fnstsw orl subl negb jbe xchg mov pusha or xchg mov call in les push jle jl mov (bad) std jb mov add movsl mov pop ja aaa or xchg pop jecxz (bad) aaa lea cmp inc mov and xor sarb mov add int3 popf (bad) loopne xchg add pop push xor movsb lea jo les cmp cld (bad) gs cmp nop or cmpsl loop pop add push leave push cmp (bad) jecxz test push lcall push push push ja jg adc imul mov cmp xorb xor (bad) pusha jbe xlat mov arpl cmc inc mov out (bad) (bad) sbb jns rorl mov inc lock xchg popa cs clc mov rcrl loop,pt arpl mov jmp inc sub sbb cs adc dec icebp push pop jo movsb (bad) inc (bad) mov ss dec cmp nop arpl push pop loopne shrb sbb inc dec ror mov push (bad) and mov pop imull push pop lret xor lcall pop aas mov adc ds xor pop sub sub cltd cmc js (bad) sub adc mov jl cs dec add ja mov xorb xor mov sbb rcrb adc xor cmp cwtl mov mov loope jb sub and je lret jmp cmp lahf stos in (bad) mov mov lcall test cli pop pop int xchg clc cltd mov xchg aaa xchg stos inc notl inc fistpll pop xor out lret je mov rorl inc xor inc icebp addr16 cmp or shrl xchg popa sahf imul and push or lods fbld jno pop ret xchg aam cmovnp push add (bad) push mov ds aam arpl stc cmp pop dec sbb mov (bad) out mov mov jne cmp push fwait lret (bad) lahf jbe hlt pop out out xor push js jbe or (bad) pop inc jle fwait inc fwait (bad) xchg out adc rorl popa jge shll clc shr cmp iret leave cmp mov adcb sahf mov test jecxz sub rcrb cli cli (bad) scas shrb inc adcl xchg adc cltd insl lahf inc push fxch pop leave int3 in outsl in jl cs xor lods xchg mov xchg or and sub mov (bad) or inc leave mov adc jne adc lahf adc test xchg fucomi adc mov ret and or add out mov jno inc cld xchg or push icebp ret adc sbb (bad) out clc clc adc pop pop mov je xlat imulb inc setae sbb inc divl pop js push and ret jmp sarb (bad) xlat dec xor mov int3 inc or loop mov cmpsb cmp dec inc sbb addr16 add mov insl xchg push inc lock push (bad) in inc jne aam lret scas inc xor adc rcrl jmp sti hlt mov pop daa scas mov jge test pop insl (bad) test push sub adc inc pop sarb fsubrp sbb ja icebp int3 lcall or xchg pusha add fistpll imul jge ficom mov sbb and fdivrl mov popf add cld ss pop jge bound lret push icebp (bad) jecxz and das mov push xchg test or mov aam mov lods or lcall fwait jge xchg outsl mov xor movsl xchg mov mov xor imul popa leave in cmp mov push cmp sub enter ljmp in ja (bad) out (bad) or xor pop mov (bad) dec ss xchg sub inc mov sub int jmp mov ret stos adc or adc (bad) ja rorb sarl mov pop push sbb add (bad) mov faddl pop aas lock loopne,pt xor divb arpl test ss push xchg jne mov cmp cld popa or push and jae roll stos mov sbb movsl xchg fdivs jns test jb (bad) in ljmp add inc clc dec jmp sub pop pop or jbe lret fwait enter popf sbbb cmpsb fsubrs xor add test add pop dec add adc iret in cmp jno out mov lock inc xor or pop add addr16 aam mov add inc dec fstp ss fist in ficoml std rolb sbb lret jle dec sbb cltd clc lahf iret mov andl sub iret hlt test cli mov rclb jno stc rorb (bad) mov in leave push call and call cwtl rcl out sub ljmp mov cwtl fnop nop test jno and hlt test jnp fnstenv jnp fimul mov sbb mov nop mov (bad) mov pushf (bad) rcr mov add out (bad) sbb ss cwtl mov add xlat inc shrb das pop aaa dec ss jecxz pop xchg in pop lret lds cwtl pusha orl dec and push imul push sub pop add lock mov insl pop or pop sbb jo stc leave pop pushf add push repnz add les sub shrb jg xchg lahf mov movsb jnp aas push jo xor mov push out test xchg inc mov nop clc sti pop loopne pop adc mov lods adc dec (bad) out sbb in jg inc pushf pop mov mov in out jge dec fstp sub mov hlt nop outsb mov or bound mov dec sbb fldcw mov and and rcl sbb mov sahf mov lds mov ds (bad) (bad) xor add out jle lret push lret loop or mov dec xchg push (bad) iret dec jl mov add pop mov dec cltd popa mov dec jge and xor pop mov mov jl jmp cmpb out ds xor (bad) repnz ficoml in call jne (bad) mov jns sub (bad) dec dec or inc or mov mov push rclb add je dec sti popa mov pushf (bad) out jmp stos scas jne mov arpl leave jmp ss jne js ja adc out inc inc mov loop sarl sub jo inc mov out xlat fsubrs add sbb test mov lcall push pop lds arpl lahf js pcmpeqw out mov and pop sbb (bad) mov jnp jae and imull enter lods cmp pop mov inc inc xchg xor les push loope sub test xor or scas lret or inc or push push in inc sub push mov insl stc inc fist push pop mov notl rorb fistpll fiaddl xchg jnp out data16 movsl mov jmp int lods ret jmp pushf subl lret push inc cmp mov cmc pop sbb ret es repz loopne jge xchg sub into test loop pop cmp in gs adc xchg jns pop clc push add fcoml push mov xchg xor std xchg cmp jl jo fsts ret rolb cmp leave int3 cmp shrl ficoml cld je add (bad) mov or add cmp add dec lock xchg adc or inc pop xchg cli daa add shlb inc pop add jp daa test mov and lea jo sbb cwtl jecxz xchg push jmp ja adc aad ja mov test mov pop mov or outsb xor emms icebp je adc dec rolb xlat and mov jge push sbb mov lahf scas sub push xchg (bad) outsb mov fwait cmp sbb jno (bad) jp push test js insb jl (bad) (bad) sysret stos hlt cltd aam cmp popa push sbb aad out or (bad) lret fsubrs (bad) repnz jle cli in xor gs or jo jae imul mov push pop sbb int3 xor icebp sbb insb aaa sbbb jb cwtl push sbb adcl dec insl mov dec mov ja xchg loope loopne or push mov and inc cmpsb cmp and mov jb aaa push dec push je push sub andb sbb fbstp ret adc mov jmp cmp and push jbe enter fsubl jo add mov and lret and fsubrs pop in (bad) adc fnsetpm(287 xchg dec lods (bad) push in adc rcr xor test ds or or (bad) call dec scas movsl dec add (bad) mull mov insb dec aas xchg addr16 into fimull jns mov dec cmp in stos mov push adc inc sbb sti push mov fmull cmp inc jmp jmp addr16 mov xchg imul push test lds ja xchg jmp lret fs bound fimul fnstsw imul cwtl inc pop mov out inc and (bad) int3 repz test or outsl sub jg inc inc xlat mov or stos xor mov test loope es out ss (bad) jp dec inc fldlg2 in mov cmp loope inc call loop (bad) jmp addb adc lods test loop xchg cmp ljmp int3 sti mov and hlt flds inc notb jl inc test imul adc push mov push dec mov jmp lods out mov (bad) mov lahf mov add cld jecxz xchg in stos daa js mov pop fbld ret test popf int3 cmp test or and xor stc or or mov shll xchg mov mov fcompl adc push (bad) test pop and and cmpsb fbld lret test les jne mov xlat mov push repnz scas push adc je dec in mov jle je fscale inc test sbb push sbb push sbb sbb aaa fstps loop jo sbb out cmp aad dec idivb mov jae cmp pop fcom orl lods mov nop mov sbb push pop dec jmp sarb pop push mov sub pop addb bsf dec mov movsl dec mov add mov mov fcoml in add (bad) dec mov insb mov jp int enter add xchg adc or out push and ret std int mov lret cld mov cmc inc int idiv stc test inc ds dec push (bad) pop test sbb mov adc les pop jle in aas div movl mov loop adc jp ret add insl insl iret mov push aaa inc dec xor sub jmp (bad) lods loope sti in xchg inc movsl mov ja leave cltd cmpsb cmp xor adc inc (bad) add adc ja loope dec ret movsb (bad) jmp mov notb xchg in xchg mov call add xchg mov dec sub ret divl push lahf fs jg stc iret inc stc imul insb in rcr stos ja fstl test push xor or cld jp test dec sub jb in scas dec subl dec (bad) push mov and ret addr16 jl pop pop mov pop int cmp (bad) push xor std mov (bad) rorl shrl movsb mov mov pusha or aas jno sahf rcl ja dec nop mov jmp hlt jae int stc adc imul jmp je adc and xor sbb push sbb in sahf sbb sub inc cmp add lods adc mov push xchg mov lcall int3 push (bad) add inc push fstpl fwait and push jecxz je cmp (bad) fs in push scas push in dec sbb dec pop push insb add test push dec sbbl cmp add nopl mov push out shrb in pop pop out pop loop ja cld mov pop adc adc rcr incb imul outsb add lods pop sar stos inc jno cmpsb push jno jo push popa out fsubrp push xchg imul arpl hlt dec mov lods fcomp mov cmc xchg push jecxz insb imul pop pop test xchg adc adc mov rorl pop inc lcall ds mov cld pop jae std add push add sahf stos in jp or popa test int3 pop and or popa dec or mov xor sub push cwtl cmp jecxz mov jae jge pop movsl into into jb fistp jg cmp sbb sub dec rorb adc and xchg mov pop lret mov (bad) lret mov (bad) addl popf add pop les xchg test pop xchg mov dec (bad) lods cli inc and pop sbb inc aad dec jmp fs dec dec stc movsb mulb jg push test pop and andl daa ret jle cmpsb or addr16 dec (bad) outsb or dec insb mov adc xchg mov jg rclb aam sbb outsb pop mov push mov lods xchg (bad) movsl cmp mov out imul gs addr16 mov lcall sbb xlat mov cmpsb sti adc jmp mov push mov add adc adc roll push push enter jo mov jno leave lcall cs rclb dec xor int pop leave xchg push dec popa push xor mov ss adc mov adc daa (bad) pop in dec xor mov repz int3 jl pop mov stos les jbe sbb dec (bad) pop push fildll addr16 and push jo mov iret jns xchg and mov stc cli mov and mov movsl or mov ficom pop pop test mov aad cmp imul call insl fstps (bad) pop xchg insb and aas dec jge adc xor fs inc je pop adc mov mov loopne (bad) (bad) btc pushf in outsl insb fdivl and stc mov xchg fcomps pop test mov push cmp nop mov ja scas cmc ret mov int3 cmp ret push jmp xchg dec ds ja xchg aas mov add fldln2 out cmp pop lahf lret xlat fnop fwait mov mov repnz xchg add add dec mov push loopne mov add lret sbb popf fwait add mov push incl xor into push xor rcl jne lods inc mov cmp sub aad pop mov dec xchg jnp ja sub jge sub test cmpsb add xchg jg dec movsl sub xchg insl xchg popf jae aam inc sub jbe popf js fdivrs lods rol xchg adc mov (bad) cltd std mov cld and inc cmp stos popa in inc push test mov cmpsb into popa gs je,pt jge hlt inc nop fwait popa jno movsb dec mov pop repnz lea fldt mov cld add rcr and push jnp sbb ret and (bad) adc ljmp inc popa insl ss fnsave aaa in dec in pop movsl sub xchg cs bound mov push adc sbb fcmovbe jno fstpt cmp xchg fnop arpl xchg loop out mov pop bound mov ljmp sbb jns push lock aas jae imul test lahf xchg fidivl fsubp arpl scas adc sbb mov push gs inc subl mov mov hlt (bad) cs fildll jg or xor orb in sbb imul fsts jge lret pop inc jae daa imul test mov mov movb (bad) cmc je dec nop mov out mov loop shll call adc pop imul adc xchg push pop inc stc adc inc (bad) movsl mov pop mov push push push inc loope mov in je adc lods jne push fs imul iret xchg jno jbe call and scas lock xor xchg hlt sbb xchg imul xchg dec mov jp scas push jg popa sub push les cltd cmp test fidivrl inc in cmpsl stos shrl stos enter roll mov mov jno out xor or cmp sbb mov pop ret mull and mov xchg int3 adc pop push ret test lds and leave add jne add jl scas dec push dec out (bad) aas and xchg cmc xchg fbstp xlat mov adc ja insl (bad) int3 xor adc lret fldenv and sbb sbb xor lock dec adc and mov cmc xor adc mov mov arpl mov and inc xchg insb dec iret das jecxz sbb mov das bound or mov add test movsl mov popa mov mov ret ret mov int sbb lret dec or shrl dec fs (bad) fistl ja,pn cmp in mov inc (bad) pop jp clc (bad) rclb cmp fcomi mov pop lcall push mov cld mov xchg add jmp sti jg inc jmp pop out push mov pop adc inc lods pushf stos push sub stos mov daa sub or push loop mov mov (bad) std sbb adc jbe in sbb outsb loope jg dec sub lods and inc out adc sbb test push icebp stc iret jp stos out inc fs pop mov imul in inc cmp pushf cmp int mov jecxz mov add test add xor mov jns int cli dec dec es mov mov pop fbld pop xor popa cmc adc push jg into scas dec inc divb mov pop sub xor dec sbb mov mov out mov inc inc (bad) imul mov loopne (bad) mov es sbb pop dec mov icebp cmpsl (bad) les push (bad) mov mov enter add jbe add out das mov cmp push and mov push stos sbb outsl add std add pop test dec stc scas fnstsw or loop aaa add insl lret or or add add addl adc add js push mov adc ds mov push mov pop pop add movb (bad) pop rorl jp and jo jmp sub rclb add sub frstor pop repnz clc sub cmp (bad) jecxz dec lcall mov add outsl clc mov addr16 jbe data16 sbb cwtl lret out jecxz xchg cmp rcr xchg dec pop push out pop mov xchg jle sbb jo inc hlt cmp mov aam (bad) pop loopne fldt in std mov push xchg in pop adc add cmp roll lret (bad) leave dec inc insb movsl mov inc adc xor bound pop xchg ljmp fbld data16 or stos or jbe popa aaa inc inc scas (bad) cli add icebp mov movsl pop mov cmpb inc mov fdivr ds xchg or enter jne adc imul lcall (bad) mov fwait cmpsb ss (bad) in std mov das dec pusha xchg gs xchg sti (bad) push push add pop (bad) std inc cmp aas sub stc mov xchg (bad) xchg xchg jo out cmp ficoml or mov (bad) ds xchg pop lods cld scas or push addl stc addb xor xor adc push mov mov xlat pushf and or mov mov sbb mov daa mov sbb or fildl pop push adc stc mov sahf mov pop test imul inc in mov and pop iret pushf in add aam lock fsubs movsl (bad) out mov lcall out fwait mov or jnp outsb stos call inc test repnz jae sbb lahf out xchg ret call pop aaa into enter lcall dec mov xchg dec js rcl lds inc xorl xor fxch icebp sub and xchg fldcw push fstpl jp pop jle imul xchg mov int (bad) xor insl sbb js lahf cmc push leave jmp and mov jmp jmp adc xchg or cmpsl mov xor add mov xchg (bad) mov dec pop mov push fcmovnb push js,pn mov xchg aad pop in out mov ljmp sbb add nop cmpsb imul rcrl sub sti inc ret lar xchg repnz enter xchg enter ljmp (bad) inc cmp lcall jp aas aad pop jmp and fprem1 movsl les in in cmp dec or incl cs add repz jns push jmp mov fnstcw stos dec test pop orl xor mov stos dec stos and jl (bad) push xchg sub xor mov stc lds (bad) xchg mov fdivl add stos pushf (bad) cwtl lahf or (bad) clc xchg sbb xchg jo mov or int3 mov push gs sbb sahf scas sbb or pop sub pop jge lahf mov test aaa scas mov loop or mov and shll or ja jbe adcl rcrl ret cmc jl stos mov mov lret jne xor aas aaa inc push or mov push cmp pushf pusha into xor movsl fcompl mov pop sub (bad) jmp loope jge (bad) push sub mov xor nop xchg sub lcall jecxz and push test jae repz or adc sbb cwtl xor in or and xchg fidivrl mov outsb or fcompl lds push xchg cmp cmp aaa loop (bad) call xchg stc sbbb aad insb cmpsl dec (bad) mov ret outsb sti pop out xchg (bad) mov cmc ja ss roll xchg out rorl mov imul lcall in dec pop nop push jp stos into inc jae pop push jp xchg ret test insl lahf xchg add add cmpsl push mov ret adc in in test sub sbb adc lret sarb les adc jb lret cltd arpl push adc jo mov in andl mov jbe call xchg popf popf data16 lds es in addr16 jbe daa test invd jg (bad) xor cmp add cwtl xchg sub adc sub std fimul mov dec jg clc iret mov sbb mov lea aas jo aaa ret pop inc add inc (bad) push xor jmp or and fsubrl ret shll les or xchg inc cmp in push lea pop shrl sub dec into xor lret popa and xor lods lea jg pmullw loope xchg stos mov jno or mov mov ja and (bad) int add cs es lcall and push test jmp dec mov popf xchg ret mov out fstpt lcall xchg ja dec or add inc mov sti xchg dec mov (bad) ss push loopne mov fisubrl mov aas pop pop mov repnz inc std xlat ror call inc (bad) sti scas pop lds stos cld mov aas punpckhdq (bad) pop cmp jge aam push lock cmpsb push test or (bad) outsl and leave jp hlt bound add or jge mov add ret ljmp sbb int3 (bad) les fs or adc pusha pop stos and lcall mov test shrb fldt push and fidiv ljmp xor negb inc imul jnp int inc (bad) shrl add xor hlt icebp sbb add sbb mov idivl or std adc lods loopne (bad) cli mov xor sub inc jg lret cmp push stos ret jp cmp push jne add add xchg (bad) mov lods imul loope add popa mov jp data16 les daa mov (bad) pop in inc xlat lcall idivb push pop scas sub repz mov adc and sahf adc aaa pusha insl inc imul cmpsl into push xchg sbb cltd add aaa mov add push lea add mov inc imul (bad) jge stc gs rcrb xlat xor orb stos adc (bad) imulb les mov mov daa fldcw sbb pop xchg or mov push push push leave inc dec loop lods je and pop loope sbb xor dec fdiv in mov mov mov fmuls dec lods rclb cmc push sbb les pop cmp add das inc jg,pt push jo aaa mov jp and outsb mov lret add sub and call push cmp aaa shr shr nop rol aaa loopne adc mov mov jns or pop mov dec (bad) lds inc dec push (bad) and loopne and cmpl or mov pop xor dec mov xor sub add cmp out add repnz and push shl inc dec popf imul add pop cmc add push jmp rolb movsb xor or and (bad) mov sti pop fiadd pop popf or (bad) out adc mov gs cmp or stos pushf or adc xlat mov sbbl stos pushl jne popa test inc sub in lret int xor xchg push rol loopne js out hlt sub test lods ds cmpsl dec push jg add iret insl jge int3 int bound test (bad) and cmp insb mov jge jmp outsl add int3 xor inc sub lock and mov xor test hlt sub xchg pop jbe test in scas jp enter stos into hlt nop mov cltd stos in cmp cld idivl pushf add sub mov inc mov mov (bad) xchg dec push pop dec or inc aaa arpl mov cmpsl ss mov rcll lods inc sbb cmp jbe or clc js rolb mov add or sbbb decb sub mov notl adc adc data16 js xchg aad test inc call cmpsl inc push sti imul push mov or mov pshufw sbb lods insl es cmp loopne jo fnstenv and (bad) inc aad sub sub jge test mov ffreep lahf nop jb aad js fldenv sbb pop jge mov adc add mov mov mov cmpsb xchg jae fild mov movsb pop jge test push (bad) aad adc (bad) inc cmp xchg adc or pop rcrb mov pop and xchg imul mov enter xor (bad) out in movsl cmp inc stos out sbb mov das push pop mov jp adc ss pop hlt cmc cmp or dec jecxz in pop sub pushf xchg repz and ret sahf call lea pop jnp push imull mov cmp add fwait sbb or test dec imul cli inc jo adc lods adc iret xor add shll xor push jmp inc adc pop dec add sub rcll mov lret jo mov popf adc aas popf and dec add pop bound gs bound dec dec fdivs je and clc jo jno stos push push mov mov xlat xchg mov dec test testl or daa add lds fwait inc inc xchg aam inc sbb pop and fnstsw pop xchg xorl lcall movsb rcrl pop loopne push (bad) or in aas cmp mov repz ljmp mov rolb mov sub jnp gs sahf ss xchg inc hlt sbb sbb sbb addl gs ds xchg inc (bad) ficom scas outsl mov aam cmp outsl jb imul pop enter (bad) mov pop stc pop test xor adc or cli sbb mov push pop hlt dec push mov adc inc adc sbb mov cli sbb jnp fmulp pop cs adc mov fcomi dec nop mov stos (bad) movsb loopne pop xor inc dec adc gs insb cwtl mov ficoml lds dec iret fwait cltd aas popf outsl insb les inc jl pop mov jg mov outsb int3 in sub sbb scas addl pop das or jne fwait pop test adc (bad) sub xor push outsl pop rcl cmp mov inc out rcrb xchg or xchg rcrl dec push sbb imul popa aad (bad) jecxz pop mov (bad) (bad) in pop and mov mov add std adc fstpt or mov test mov and test sbb adc jae shl shrl cmc cmpsb andl mov xor adc xor cmp mov cs hlt scas js in loope cmpps mov ret mov adc fcoms sbb sub add mov in xchg jno gs and insb popa xchg sahf cmp iret xorb cwtl test mov bound fwait and inc lcall lods push add jo sahf xchg jno,pn dec sub push in dec shrb ja sub mov add int3 mov xchg sub sahf call inc jmp mov xor clc adc mov cs test mov mov out lods movsb fwait xchg inc ret or or push pslld xchg aam mov jge cmp hlt popf dec sbb xchg mov rcl cmpsb pop sbb cld or xor cltd movsb mov lea (bad) out loopne arpl jecxz sbb rorl (bad) adc imulb jb xor jp mov jg push jno mov xor ret (bad) aad movsl outsl js test or mov jo mov adc mov popf test dec mov and adc add jnp pop mov add into ret sti nop cmc pushl out mov fs push out insl pop adc ja popf sbb call push sub movsb iret sahf jge sbb fwait dec mov sub mov cmp dec cmp cltd inc lret pop or adc jge xchg mov or pusha pop jno mov popa mov iret stc pushf ja orl in sbb jnp jge sbb add inc inc lahf test aas jg jl jne (bad) out push fnsave push inc jle loop fisubr ds push shr repnz jl inc jbe push cmp mov add test xlat mov sbb rorb frstor or test push fisubr addr16 jbe add pop adc movb adcl dec int mov ss sub aas adc out cmp ret cmp xchg (bad) push mov xor mov cmpsl xchg scas orb mov lret push push popa jo sub adcl xorb dec mov mov fs cmpsl dec leave or pop lods sar icebp jmp les ret inc loope gs cmpsl mov dec pop push aas addr16 inc insb and or fiaddl mov aas mov shl fwait test and or je xorb sbb jns test out push pop mov cmp repz (bad) jno int3 pop pop lock icebp std jg call ds dec xor sbb js adc push push cwtl and jg inc fstpl mov jecxz insl inc lea cwtl sub or lcall btr mov add lea push lock lods addr16 or (bad) scas mov push sbb inc mov pop (bad) mov dec stos loopne sbb fsubp in dec insb in mov in mov test cwtl cmp mov fisubr jmp jae xor xchg dec add mov xchg xchg sbb clc xchg lret adc cmc lret dec adc mov jmp outsl cld sbb cmpsb movsl push pop (bad) out mov je repz xor lods xor call cli (bad) cmpsl cli lret and (bad) in pop sbb fnstsw dec (bad) jmp out add stos cltd inc cmp adc icebp negl pop cwtl test push insb dec sarb ds stos (bad) lock cmp movsl loop mov in cmp fcmovne cwtl xor adc in pop loope mov push repnz adc fs push bound fldt sbb xchg int pop mov sub adc jo mov jmp jae addr16 push (bad) xor cltd popf (bad) pop das jns repnz jecxz dec jb pop mov ret lods ret addl dec cs rclb jmp cli mov pop daa negl push clc fistpl or frstpm(287 and dec lret lods stc or push int3 (bad) push jne add dec cli aam add cmpsl push leave pop adc jbe jnp imul insl outsl add add lret dec imul mov push xchg shrb loope mov aas and sub stos xor inc xchg push (bad) jne adc add cwtl mov adc inc (bad) pushl xchg mov or pop push push je lods imul sub pop adc lds rorl mov dec mov das outsl enter ljmp lods je rolb fdivrs outsb push leave mov outsb in ss jmp xchg ja pop xchg mov mov fwait inc ss (bad) xlat jae pusha out dec xor jmp subb test jecxz call mov mov loopew fiaddl ficoml and mov dec push je jb inc dec or loope popf xor aas arpl pop pop rcrl dec rorl pop sub push xor add aad cld test adc inc rclb mov cmp sub xor jmp sub iret xchg movsl mov out bound and cli ficoml leave jecxz stos jo adc lods les sti cmc popa int lock cmp cli rol les fsubl stos int3 int cmp adc stc cs and xcrypt-cbc cmpsl adc mov xchg mov push dec and das aad mov jp das (bad) fs dec stos shrl (bad) inc scas push dec mov hlt cmp loope in imul add js push sbb data16 or out dec lcall jge xor sbb adcb cmc jmp jbe jmp mov inc ds lods divl scas mov mov xchg (bad) or call test cmp sub pop jmp mov mov cmc dec fimul cmpsb cmp decb xor mov cmp mov jl pushf mov adc fnop testb std jo bndldx lods shrl mov xor es jp mov movsl (bad) mov faddp push pusha fdivrl sub push or dec cmp movsl jecxz jo sub inc and sub mov and xchg sarb ss sbb lret ljmp (bad) jmp in sub ret inc mov fnstcw jl cld lods xlat les inc cs jne sti sub sti fcomps push sbb daa sbb or add js pop lea cmp loope (bad) pop jg stc cmp mov push pushf pushf mov ret push lcall add jp rorl imul ret add fldenv xchg pushf sbb int3 xchg bound jne lods inc or mov repnz je inc rorl push fistpl and ds sub jle and xorl inc sub (bad) mov mov adc stos adc lret cmp lds cmc and popa test xor (bad) mov sub nop xchg pop or addr16 (bad) cld rorb and (bad) mov or scas xchg jl mov mov xor int dec adc ja add in lods ret mov scas mov mov jmp pop mov arpl in dec cmpsb jecxz push mov add jae lret and pop push and test out cmp rcll in repz test (bad) outsb inc outsb mov dec into loope rcr sbb sub pop clc mov pusha mov xlat jno scas dec aad mov pop std mov andl test jb sbb cltd jae sub imul jmp pop mov pop cmpsb iret popf test test mov mov mov and aad cmpsb loop jg cmp xor stc pop pop pop dec xchg mov or lods mov out gs cmc pop (bad) or (bad) push and xor xchg aaa inc push xor ss call dec cmp imull pusha fistpll jmp adc ljmp jo sub jno test mov out xor mov lock cmp jns sub or sbb pop adc mov fs in stos out xor int xchg addr16 dec mov scas cmp nop fldenv mov insb mov and inc leave pop out pusha push js adc adc mov jbe out sbb sbbb inc mov cmpsl rcll mov mov pop push inc loopne or mov test xchg ja (bad) cmc movsl push enter int3 mov fcmovne sbb jp cwtl test (bad) dec sar pushf pop arpl rcrl bound mov push mov push push mov push mov sub lea movl push push push push push movl call test js cmpl je mov cmpl mov jb mov push push push lea push call add mov lea cmpl lea push cmovae mov push push push push movl call mov mov push mov call test js pushl lea call xor movl movl mov lea movb push lea push call add test jne or jmp mov lea cmpl cmovae mov push push call mov mov mov test js cmpl lea cmovae push push call mov mov mov test js cmpl lea cmovae push push call mov mov test js lea movl mov push lea push push call mov test js lea movl push lea push call test jne call mov jmp mov push push mov call mov lea push push push mov call push lea push push call mov movl mov lea add lea mov mov mov mov mov mov mov push mov push call mov mov push mov call mov test js lea movl mov push push push call mov test jns mov mov push call jmp mov push push push mov call mov mov push mov call mov push mov call test js xor lea call lea call lea call mov pop mov mov mov pop ret push mov push call add ret xchg cmp in mov inc pusha (bad) (bad) mov enter js (bad) (bad) jmp lea jmp rclb sti xor cmpsb push pop enter push jne leave adc pop mov jmp mov add jmp mov jmp int3 int3 int3 lea jmp lea jmp xchg popf fucomip mov in pusha (bad) (bad) mov enter loop call cld xchg sub aas sbb jo out aad outsl pop push adc mov mov add les or adc jp jne gs stos outsl int adc mov insl push dec jp mov or cmp movsl push jmp fs cmpsb sub jne popf ss (bad) adc test push add sub and cmpsb dec mov push enter xchg jecxz ret add outsl push jnp sti outsb push lods cltd (bad) mov mov push icebp or test pop mov lahf (bad) push popa add xchg cmpsb leave out sbb push inc ficom les or mov icebp jle xchg out and jno (bad) cmp scas scas fcomip bswap mov cmpsb add pop add sub (bad) out cmp inc fs jle sub jne ret mov sub push mov test stos jp aas std jo mov mov jnp mov sub cmp arpl jns sbb insb jmp inc cld sahf std add adc nop (bad) xlat (bad) lods imul sub or dec loope out movsb sub add lret stc test push clc xchg addl push inc ret sahf mov jmp lret sub mov popa dec dec leave xchg out lods dec jbe mov stc push fst xchg jns inc sub adc pop mov arpl or mov sub js xor dec adc imul push (bad) pop mov mov mov mov std mov pop cltd push loope test hlt ret jecxz fidivrl out lock mov aaa mov pop test pusha and (bad) mov (bad) out mov test mov add jg inc inc pop pop sub into arpl push push push xchg lods out add popf fdivrs jge and pop sbb nop or inc (bad) adc es and test inc inc cmp sub push jns das xchg jecxz mov stos aad mov in out rolb fistpll dec jle jns mov add push xor jg xchg mov jns cmpsl (bad) dec icebp add cli cs out mov in jb xor adc std fwait mov aam add and inc js out mov mov stos outsb lock orl mov popf (bad) rcrb inc loop leave and cmp test xchg leave jmp and and or cltd push mov or xchg call cmp pminub lds pushf stc inc cli mov and jo loopne sbb ljmp sub std mov shll std sbb lds pop add push push xor cli push out cli push mov cmpsb mov cmp imul pop movsl scas inc adc in sti mov push (bad) dec ss inc adc adc mov out jmp or sarb in inc (bad) test mov jae stos (bad) (bad) pop sub test dec or aam push mov and dec jb adc dec jl inc fadd mov lods dec insb inc (bad) sti test jecxz cmpsl xor add loope jns inc push cmp add sbb push inc imul mov xchg loope clc decl dec jb insl pop arpl ret push pushf fsubs icebp mov mov push push (bad) mov and sbb (bad) sub mov inc push enter jge adc inc lret sub pop dec inc in insl fwait xor dec adc int3 in test xor scas dec pop into js mov dec add mov mov test and add pusha ljmp je mov stc xor and adc mov mov jg or mov mov insl pushf out movsb insb mov mov mov popa xor in mov cmc ss mov cmp add loope dec out or fwait in lods (bad) adcl repnz fisubrl (bad) mov jns cwtl inc (bad) xchg pop inc imul (bad) outsl mov pop jns add (bad) xor push fs dec mov pop cltd leave int3 xchg inc push lahf (bad) in lret and negl inc mov xchg xor test hlt adc mov test ja mov mov jg or test sub mov cmp pusha mov sub mov lcall ret xchg repz mov inc sub into xor lods (bad) lock sub jp ss xchg std mov adc jp fwait mov lcall xchg mov push stos (bad) test jmp mov add jmp mov add jmp push mov push call add ret mov jmp mov add jmp mov add jmp mov jmp push mov push call add ret mov jmp mov add jmp mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 and mov push push rclb stos and mov push pop inc jnp xchg subl xchg inc and (bad) (bad) xlat mov gs xlat insl das pop dec mov mov jmp int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret xor mov (bad) fiaddl roll dec lret fbstp sub xor popf xchg enter xchg inc xchg dec (bad) (bad) xlat mov xchg dec xchg test fsubl mov imul inc gs outsl int ds mov cmpsb mov fisubrl or sti jnp ret mov subl int and lea pop dec push pop hlt movsl icebp cwtl mov dec inc pop dec lea mov xchg pop (bad) xchg jecxz add sbb shrb arpl lds loope test sub fdivs roll fildll dec jno mov sti and (bad) or in mov in scas out (bad) mov popa movsb sbb rclb loope jl jo xlat dec lcall lds lock in sub sub ret (bad) out cmpsb pop xorb xor jbe pushf add scas adc sub testb lea int3 dec int dec addl mov adc fwait jno outsl cmp mov pop jae sarl sbb mov cmp fldln2 out fsubs js loope test shlb lahf int leave fisttp adc loope loope mov pop cmp xchg dec loop cmp idiv pop xchg add fwait inc xchg mov cs sbb les add xor js rcrb mov xlat cmc jbe sbb stos push lock frstor mov xor xchg fcomps stos xor jne sbb adc in sbb addr16 pop dec and fs sub (bad) stc cmpsb clc dec js inc pop ja (bad) jo imul pop ja pop jns outsb cmc dec popa mov xor mov mov mov popf in mov out fistl dec mov roll shr sub mov ja mov bound jge mov outsl xor cmpsb mov enter les adc (bad) clc pop inc in std adc xchg push dec (bad) mov jge adc mov sub test sub adc mov jle mov loope jbe ffreep xchg in shr xlat xchg mov test (bad) mov mov in ret fwait mov pusha jb lods into mov sbb leave push shrl stos xor and pop and clc stos cmp fimul loop pop inc clc pop (bad) mov pop pop push repz xor std (bad) aam adc mov out arpl add xchg cmpsl and cmp mov das inc call arpl pushf stc inc repnz (bad) incb jnp jne sbb sbb and jmp push int3 test jb add out jl cwtl mov scas int and jmp sub cmpsl push xor cli push out cli push mov mov and outsb int (bad) inc sarl in (bad) icebp ror rclb xor int mov jne jae and test lret mov adc inc lock sub fxch pop (bad) or popa int in mov push mov mov jmp or jl adc loopne mov sbb pop adc addr16 or mov aad out movsl add mov in xchg movsb xchg mov dec aas xor dec adc js out in mov dec push lret or arpl xchg dec jno negb dec inc ficompl ds movsb adc or dec add cmp out and xchg (bad) xchg sbb adc mov pop js dec dec into into and int3 inc cltd pop pop leave dec adc jbe in jnp test fs or jle out sbb bound mov out push sarb mov cltd ficom jmp fisttpll (bad) mov enter imul in nop rep push aad fdivp jo inc xor js ret test push adc hlt push adc sbb jnp sub mov cli xor fdiv and xchg insl xor out sahf popf sub les or sbb test data16 push out cmp xchg rcll xor mov mov mov jno jns insb in inc sahf hlt sub cli inc (bad) mov scas je or mov jmp jb clc lds or repnz dec lock in jmp mov lcall ret xchg repz jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp ret ret pop in jge aad mov add jmp mov add jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 rclb sti mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 and mov push push rclb lea jmp lea jmp lea jmp lea jmp lea jmp rclb sti lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xchg pop hlt in mov mov das enter loopne xor adc dec ss and or dec cwtl jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rclb sti lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp rclb sti lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp rclb sti dec movsb mov cmp fnstcw mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 rclb sti dec movsb cwtl lret fnstcw mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret xor mov nop fiaddl mov jmp int3 int3 int3 int3 int3 lea jmp lea jmp xchg jno in mov mov (bad) mov enter lea jmp lea jmp lea jmp lea jmp rclb sti mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov push mov push call add ret ret test xor les or jne leave adc pop sub or xor std incl adc fs incl (bad) imull std dec int3 int3 int3 int3 int3 int3 int3 and mov push push rclb mov jmp int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp xchg cmc imul mov les (bad) mov enter mov or jne js lods adc adc int3 int3 int3 int3 int3 xchg adc in mov lods jb (bad) mov enter mov jmp int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 lea jmp lea jmp rclb sti dec movsb ror xchg stc lods adc mov int3 int3 push mov push call add ret xchg add sub outsb sbb sarl inc loop int3 loop movsb std lods adc jno std inc xchg (bad) test mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp ret xor mov xchg fiaddl cmpsb pusha hlt xor push sbb les sub push adc fisttp add ljmp jnp mov popf push aas xor pop add mov sbb inc mov lret loope dec pop mov scas loopne inc inc test sbb and lods xor outsl adc fstpl xchg sti push fwait cmpsl xchg stos pop scas fsts (bad) xchg pop (bad) sub pop popf lret cltd movsl add inc jp push adc les add jecxz jmp pop (bad) push jmp test fistl popa aam (bad) sub out cmp ficom fs rcrb xlat adc ret push incb ret sbb push out nop dec mov adc sub sarb push fsubrp xor jl shl push dec cmpsb cmp aaa cmp pop push sbb test jno scas mov ss test xchg pop inc stc lods clc jo inc rorl mov lret outsl and iret test iret pushf xor inc fwait mov fsubl jl xor sbb inc movsl call fsubrl and gs cmp cmp es lret xor cltd sti lods dec pop ljmp mov arpl jbe adc inc pop loop repz outsl xor inc cli or dec out fistpll mov das aad mov into mov push inc sbb int3 out mov jns pop mov ljmp les add mov lds outsl int mov pop sti inc bound mov xchg imul mov (bad) and roll sbb xor pop jmp lret xchg lret aad fwait add cs lret pop movsb scas (bad) test sbb (bad) adc mov mov fcmovne fld push rcll fildl out jae imul jnp jp xchg mov pop bound pop rorl adc int3 xlat lcall sahf mov push xor data16 jbe push sahf mov jp div movsl dec mov cmp das cmp push ret in lods add push push arpl xchg outsb (bad) cmp addr16 sub and jg inc inc movsb flds repnz test cld jg jg inc mov scas rolb outsb push aas arpl push jne daa mov fwait sbb sub xchg or in or in push xor pop fcoms lock pop and in pop cld movl insb xor clc lock gs and mov mov ja xor mov cltd cld in push sbb insb xchg call mov sbb movsl inc (bad) and inc pop lock jge add out cmp add out ficompl movsb pop divl mov andl cs lcall or andl pusha scas clc mov add (bad) hlt outsl sbb dec adc xchg bound add xchg push sbb arpl lcall loop mulb fdivrp out test cmp add xor insb std and sub sbb jno pop arpl in jb (bad) sbb jns xchg test and mov ljmp mov (bad) aad loop fwait jo and insb lea xor fwait lods and add push jecxz jge add clc sar add sub stos es push out dec mov adc (bad) push pop daa jg es nop int cmovns aad rolb inc dec jb mov mov sbb arpl xchg mov add testb fmulp ds int adc inc dec rcr jns aas dec mov rcr mov adc pop adc push insb scas dec pop mov pusha pop xchg jmp adc sarl cld sub hlt enter cli or cmp ja sbb inc je cld xchg adc out adc push test fidivl in (bad) or sbb mov divb xor push mov mov dec je push lea sub inc jno mov rcll ret gs test jne,pn fxtract fwait adc xor (bad) push pop loop mov sub (bad) int insb push or mov adc (bad) cmp scas pushf jne dec xchg repz xorl daa mov mov xchg jmp fdivrs ret xor inc (bad) daa jle pop movsl sysret xor jns xor shll daa xchg loopne xchg xor mov imulb push mov pop mov and adc mov cmp and ret jmp mov lcall ret xchg repz mov jmp lret sub mov ret in ret xchg pop ja out cmpsl test add enter inc (bad) mov fiaddl and hlt shlb lret inc hlt or pop or push lahf and and add adc fnstsw aaa add pop sbb sahf lds add sub in cmp stc hlt sub adc or cwtl xor out dec xchg cmp sub sub sub or push sbb add int pop pop popf into ret push sub or test cltd pop lahf mov mov mov sub test xchg (bad) in jecxz push dec sub loopne subl scas icebp pop sub and xor pop cmpsl pop mov mov cmpsl sbb inc imul xchg popf lock inc cltd lret out test nop pop sbb js addl cld cmp cli out xor rorl cmp stc add out or pop stc lods cmp mov mov roll dec das sub fildll rolb repz lock sub int3 out lret inc fidivr mov push dec or and insb ljmp jnp arpl lahf (bad) notl imul sbb rcl pop push sub lret rcrl mov iret pop stos sti ljmp adc pop xor push jae lret xchg in cmp push mov and cmp add test mov loop inc push push lods mov ret jae xor mov dec sti mov aaa lcall push pop test adcb adc mov andb sub push pop adc and lea mov inc adc sub inc jle aaa (bad) fnstsw aaa repz jae and clc sarb push and fisttpll push leave fisttpll cmpsb cmpsl mov jecxz es xchg jns xchg xchg jno jbe loope rclb cs gs mov ret xchg dec pop fiadd sar outsb or shrl add inc imul sahf push jp fwait lahf dec adc adc ret dec xor pop xor pop fucomp push in fwait icebp mov xchg pop mov or stos scas jp ja jne (bad) xor addl dec pop and adc scas popf push sbb cwtl mov sbb outsl out iret xchg xchg dec mov add jge push dec loop fisubrl pop fwait inc pop jbe (bad) and dec cmp ljmp ror dec xchg mov sub push jnp cmpsb aaa pop lods sti stc push pop mov fsubrs arpl pushf cmc add rolb mov pop popf imul jge idivb xor mov jnp xor mov jmp xor xchg stos sub testl mov scas fwait push mull in cmp xchg or mov insb repnz add mov (bad) movsl insb test cli mov rorb mov fistl xchg fdivp aad flds int3 cltd jge scas mov xor and push iret adc mov xchg fld jge or pushf and outsb leave jecxz movsb pop pushf fsts lea or fs mov test adc sbb fiadd in out iret sbb fcomps cs pop mov fistl dec inc push sub push push pop pop (bad) lret in adc xchg jl sub sbb out iret mov inc dec pop or mov jne or ffreep fmull mov pop roll mov mov fucomip nop adc jl insb loop in cwtl inc cmp dec dec push xchg xchg aad jg pop (bad) fimull lcall js je pop je and pop aas repnz cli mov imul ret out stc xchg jge enter insl push cmp cltd ss cltd adc pop sub (bad) push into iret es adc rcl fs iret sub jnp xor push test adc cmp pop fnstenv addr16 repnz test aam adc dec loope sub add jge fucomi cmp fistpll cmc mov jp jmp mov idivb jmp pop mov push and in les inc popa test cmp aaa pop hlt sub hlt push scas push (bad) leave test lret inc jl add push pop aam push pop outsb movsb out mov repnz popf mov inc sarb fcmovbe sub push js hlt scas inc loop stc inc in pop pop test pop enter test mov sub xchg jecxz mov sbb dec aad (bad) into sub mov data16 push cmc popa mov fcmovnu loope out adc shrl push mov pushf adc pop dec jnp (bad) shll inc loop int std into mov push pop cltd test mov lds jnp (bad) ss rorl pop test push cli ja add arpl fnstcw ret mov jo lret and dec pop lret test xor adc das test sahf movsb pusha bound jnp mov and andl divb scas sbb mov lahf pop rclb fistpll test push pushf xor bound pop test sub shl cmp mov leave sbb jle iret pop adc lret inc inc cld push cltd or fisttpll add and mov xchg jno mov jb std je cmp cli add notb mov inc iret dec mov mov jnp pop mov popf arpl fwait cmp scas push mov scas push cltd (bad) cld pop (bad) jo pop mov or push jo pop add inc dec sub xchg or xorb dec sub data16 inc sub add mov jb dec out nop push gs aaa cmp into and add in (bad) addr16 movsl ss fistpl (bad) repnz push scas mov jb cwtl andl cmp fdivr fistl push sbb jl lea cli call or pop fdivrs mov je (bad) scas mov arpl insl lahf cld int jl push ret test sti or std mov pusha ljmp jo jge in mov arpl jne inc cmp in std push addr16 jmp sti push fsubs xchg mov lods pop or push sbb je ljmp test test jbe call push fdivrl insl add jg xor ljmp inc pop nop xchg rcll gs int3 push push jl adc lret or loopne jb,pn sub mov lret or mov fistl (bad) mov and sahf ja neg cmp int loopne in push push dec push out ficom fnstcw arpl mov xor (bad) call lret xchg insb and int in imul (bad) inc mov pop xchg push sbb fwait lods loopne cltd ja jbe or sub aaa loopne fstpt enter in (bad) xor pushf loop pop cs (bad) xchg pushf in lahf xor push loopne cwtl mov cmc add clc (bad) push imul and vpsubb mov rorb leave push fmull fnsave adc nop pop cmp popa inc iret mov mov pushf cwtl nop je ja insl and ret icebp pusha sahf rorl cld imul mov test cld sbb xchg pop sbb pop negb jno mov add cmp xor pop and dec and das sub or movsl call mov insb in cmpsl pop fidivrl or sbb mov sub iret sbb xorb sub hlt jmp fmul outsb xchg dec into popf push rolb sbb addr16 mov repz push inc sbb in inc pop pop int mov sub outsb data16 mov (bad) lret sti mov cmp sbb dec push clc test dec rolb mov jp and ret jg fstps mov inc mov push test cmpsl pop mov sbb insl shl mov adc jb pop aad mov cld pop insb inc fidivr fisttp mov sbb paddsb fcomps jae daa jmp pop imul add out sbb xchg scas (bad) pushf push fiadd test mov imul and xchg outsl ds sahf mov cmp xchg icebp jne pusha sbb inc xchg push lret or stos addr16 (bad) cltd adc mov ss cltd (bad) xor test in hlt aam lods push cmp jb aad and mov mov lcall jnp loope in push fs pusha ret add jae jmp sti xorb in mov ljmp mov jne xor cmc pop mov flds mov add xlat xchg adc adc js mov push iret xchg gs push imul xor dec jmp pushf sub pop jnp rcll addr16 loopne,pt xchg push xchg push nop push cmp pop arpl lcall jmp mov enter jmp jmp cmpl pop dec mov jl aam lahf ficom pop (bad) in mov bound fdivr (bad) pushf pop sub les add cmpsl sub cmp js mov mov push cwtl mov jnp inc mov je and mov pop test inc ss repz in mov mov ret (bad) and int mov sbb xor clc and scas adc or cmp sbb test inc inc ljmp pop clc out loopne and jnp add ds cs arpl ss loopne mull pop das or mov sbb dec inc and fdivrs fmuls cltd pop sbb es mov adc push repnz push cwtl mov ja je dec nop rcl mov mov dec xor movsl mov ffreep std dec jns or pop jbe rclb ljmp lods pop sbb rorb jnp jne add mov (bad) sub mov pop push (bad) dec and mov fisubl sub (bad) xor (bad) je into and cmpsl mov daa dec (bad) cwtl out sbb and cli js ss dec ficompl mov mov fwait iret add mov (bad) sbb inc jg inc inc movsl mov pop lds stc sub sub pop call and fidivr int3 test xchg push mov mov mov (bad) fs add (bad) je add test and jno es mov jae orb mov (bad) cmpsb roll movsb imul imul xchg adc jecxz int3 or das cmp mov and cltd sub test jae sub lcall mov ret mov fsubs dec inc pop fcoms inc push std in rcrl movsl jmp jecxz std inc lea dec add and cmp xor xor loope dec in jmp mov lea mov xor call mov jmp ret dec add and cmp xor xor loope push and lea mov xor call mov jmp mov jmp mov add push pushl call pop pop ret mov lea mov xor call mov jmp mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp push pushl call pop pop ret mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movb mov movb mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call movl mov add mov mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add push call add movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov cmpl jne lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov push mov mov call movl lea call movl jmp mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push call add push call add push push mov add call lea mov lea mov mov call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov add call movl lea call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl mov mov mov mov mov mov mov mov push lea call mov mov lea push mov add call movb movl movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push mov call mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov mov call mov pop ret push lea sub push push mov push mov sub movl movl lea mov mov call lea call movl cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov xor shl mov mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov lea push mov call mov or mov movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov jmp mov add mov mov cmp jae mov movsbl cmp je mov movsbl cmp jne mov jmp jmp xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp loop mov cs test sarb loop clc rcl scas test in jns push lea sub push push mov push mov sub mov movl xorps movsd movl mov mov mov sub mov cmpl jg mov push mov mov push lea push call add mov movb lea push push lea push call add mov jmp mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push push mov push call add mov movl lea call movl cmpl je mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp sub movsd movsd lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub mov movl movb mov mov mov jmp mov add mov mov mov cmp je movzbl test jne mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp je movl jmp movl movzbl test jne mov movsbl cmp jne mov mov cmp jne movl jmp movl mov mov jmp movzbl test je mov push mov call jmp mov mov mov mov movsbl cmp jne movl jmp movl mov mov movzbl test je mov add mov movzbl test je mov neg mov jmp mov mov mov xor mov div mov movl mov mov cmp jae mov mov mov mov add mov movsbl cmp jl movsbl cmp jle mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp mov cmp jb mov push mov call jmp imul movsbl lea mov jmp movzbl test je mov neg push lea call movl lea push mov call mov call movl lea call jmp mov cmp ja mov push lea call movl lea push mov call mov call movl lea call jmp mov push lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl lea push mov push mov call movzbl test jne movb movl lea call movl mov jmp lea push lea call movb lea push mov call mov call movb lea call movb movl lea call movl mov mov mov mov pop ret int3 push mov push push mov push mov sub mov mov mov mov sub sub push mov call mov mov add mov mov mov sub mov mov cmp je mov mov mov mov add mov movsbl cmp jne jmp jmp movsbl cmp jne mov cmp jne push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov add mov movsbl mov mov sub mov cmpl ja mov movzbl jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp lea push mov push lea push mov push mov call movzbl test jne xor jmp mov push lea push call add mov mov mov movl mov push mov call movl lea call movl jmp push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp jmp movzbl push mov call jmp mov mov mov mov pop ret xchg clc cld stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov push mov push mov push mov call movzbl test jne xor jmp mov cmpl jb mov cmpl ja mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov movsbl mov mov mov add mov mov cmpl jne mov mov movsbl mov mov mov add mov mov cmpl jne lea push mov push mov push mov push mov call movzbl test je mov mov and shl mov and lea mov mov jmp xor jmp jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov movl movl jmp mov add mov cmpl jge mov mov mov mov mov mov add mov mov mov mov shl mov mov movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp jne xor jmp mov mov mov mov mov mov add mov mov mov mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov sub cmp jge xor jmp mov mov mov mov mov sub mov cmpl je mov mov mov movsbl mov add movsbl cmp je xor jmp jmp mov mov add mov mov mov mov pop ret push mov sub mov mov push mov add call mov add call mov mov add mov mov mov mov mov mov mov add mov movzbl push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov movzbl test jne movb mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl push call add push call add push push mov add call movl mov add call movl mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov lea mov mov push mov call mov call mov lea push mov call mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov movzbl test je mov call movzbl test jne mov call movzbl test jne movl mov mov mov mov push lea call movl push lea push lea push mov call movl lea call movl xor jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push lea call mov mov mov movl mov push mov call mov call movl lea call mov call mov mov movsbl cmp jne lea push mov call mov jmp movl mov test je mov mov mov push mov call mov call mov mov add mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call jmp lea push mov call mov cmpl jne movzbl test je lea push mov call mov jmp cmpl je cmpl je movl jmp movl mov mov movzbl test je movzbl test je push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp cmpl jne jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov call mov movsbl cmp jne mov mov movsbl cmp jne jmp jmp mov call movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp loop mov bound fisttpl push push cmp stos xchg in xchg dec xchg lock and jecxz pop xchg jnp lea stc les sbb mov inc dec repz pop pop lretw ss (bad) std add mov das xor inc (bad) mov xchg lds xchg and lds icebp cmp pop sarl je dec push dec xchg add into inc and inc jno push sbb ret jne,pn enter xlat cli cmp andb hlt in and movsb loope out pop dec fstp and jp add cmpsb add push push push jne hlt sbb push in or repz push popf adc in sub mov mov mov mov cmp je mov call mov movsbl cmp je movsbl cmp jne jmp jmp mov mov pop ret int3 int3 cmp loop mov bound fisttpl pop fsubrs pop dec sbb (bad) add cmp imul pop sub fstl ss sub cmp mov lock dec ds ljmp mov jnp andl and leave leave inc lods mov insb add mov rol xchg into lret xchg popa cwtl mov pop push (bad) xchg mov rorb pop divb jb xchg lret cmp sub rcrl fdivl out pop adc les jb push push lea sub push push mov push mov sub mov movl lea mov mov call lea call movl push lea call mov mov mov movb mov push mov call mov call movb lea call lea push mov call movzbl test je movb cmpl jne movzbl test je lea push mov call mov jmp movzbl test jne jmp cmpl jne lea mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test je movb movl lea call movl mov jmp cmpl je jmp push call add push call add push push lea call lea push lea push mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp lea push mov call mov call mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je cmpl je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp movb cmpl jne movzbl test je lea push mov call mov jmp cmpl jne movb movl lea call movl mov jmp jmp push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movb mov mov mov cmp je mov call mov movsbl cmp jne mov call jmp movsbl cmp jne jmp jmp movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov mov mov call mov movb movsbl mov cmpl ja mov movzbl jmp mov movl jmp mov movl jmp mov movl jmp mov movl jmp mov movl mov call mov jmp mov movl mov call mov jmp mov movl mov call jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl jmp mov movl jmp mov movl jmp movb movzbl test jne mov movl mov mov mov mov mov mov pop ret cwtl push lods adc or lods adc push lods adc or lods adc or lods adc push lods adc push lods adc push lods adc or lods adc push lods adc or or or or or or or or or or add add add add or or or or or or pop or or or or or or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea push mov call movb mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov call push call add push call add push push mov add call mov mov mov sub mov cmpl ja mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call mov mov mov movl mov push mov call mov call movl lea call jmp push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp mov movzbl test je mov mov mov mov mov call mov mov mov mov mov mov pop ret adc adc adc (bad) adc out adc int3 int3 int3 int3 push mov sub mov mov add mov mov mov mov add mov mov mov mov mov mov mov test je lea push mov call movzbl test jne mov push mov add call mov cmp je cmpl jne jmp jmp mov push mov add call xor mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movzbl test je mov push mov call mov cmpl je jmp mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp jne mov mov add mov mov jmp jmp jmp mov pop ret int3 push mov push push push sub mov mov mov mov orl mov test je mov cmp je mov mov sub data16 cmp jb and lea lea push push push push call add mov mov test je add cmp jne mov test je xor nopl lea mov lea lea mov push push pushl push call mov mov mov movl sub add mov mov data16 mov mov test jle mov mov add imul test mov je add mov nopl mov mov mov sub mov mul shr imul neg mov add mov inc cmp jb jmp data16 mov data16 mov mov mov sub lea and xor mov mov sub mov mul shr imul neg mov add mov inc cmp jb mov inc cmp mov jne mov inc lea mov test jne mov test je mov test je mov nopw and lea mov test je lea push push push push call addl mov test je add test jne mov call xor add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov mov movl cmp je push mov push call mov add mov cmp jne pop push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call cmpl je sub call mov mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movl ret jmp mov jmp mov jmp mov jmp mov jmp mov jmp xchg sbb cmp xlat xchg ret mov iret mov test jne ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret nopw mov test je mov ret push mov call pop mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp loop xchg pop (bad) sub hlt jb or ds jo mov pop pop or out xor pop bound jmp jbe es mov or or add lock adc pop arpl cld sahf adc or mov add mov xchg into inc sbb xor gs adc adc aam mov mov cmp cmp pop in pop xchg xor lods stc data16 lcall jae,pn push shlb in gs call popf lea mov cmc mov pop ficompl add inc cwtl add xor ljmp and inc mov or and enter mov imul mov cmp mov ljmp mov dec mov push jns and push scas xor mov jle dec sbbl cld cmp push push das sub std data16 aaa stos fdivs adc mov movsl or shrb adc mov push fmul loope cmpsb add push in jecxz pop xor loopne je out stc nop movsb jae out aas mov pop mov dec mov mov sub push aaa inc iret pop mov sbb fidiv jb add mov lods adc cs lods sti ret loop mov adc cmp mov sbb sub mov movsb push inc (bad) xor arpl test cld (bad) jb inc aam out jno mov lods nop mov nop repnz bound in xchg jbe loopne and (bad) sub sub xor jno inc lds adc movsb push andl cmp ja lcall bound (bad) js std ret fsts popa ror sbb add out xchg movsb out insl adc outsl inc subl hlt adc fldcw push cmpsl xor stc xchg cmpsb (bad) popa in or nop mov rcl test sub mov aam push mov xchg fimul inc lock dec jle mov fstl xchg ficom add nop daa lret test outsl aam cmp scas mov lcall mov lock daa push mov jae xchg (bad) movsl or jns ja jae popf repz repnz std dec cmc movsb lds and inc loope and xchg mov push pop ljmp movsb mov enter scas sti out xorl aaa and push out gs fwait push mov cmpsl cmp mov jmp xchg xor sbb gs negb push pop mov pop pop fsts rcl in in adc aas pop lods mov jns scas repnz or jnp,pt mov xchg push popa imul aad std addr16 mov das jb push jne cmp addr16 xor imul xorb push cmpsb aas mov and fsubl jbe mov test mov push mov fisttpl repnz scas aas xlat pop jg and addr16 test cli loop xchg cmp push adc loope mov mov orl dec fmul movsb lret into pop loopne pop repnz mov pop test sbb mov sub or out jg out mov adc mov xlat mov test sbb mov push mov add loope bound (bad) fldl daa mov cmpsb pop cmpsb repz push add cmp sbb or fisttpl inc arpl (bad) dec xlat sbb jnp sub fisub mov adc dec jge push jl xchg iret test aaa (bad) xchg imul ljmp cmp fisubl cld inc fnstcw addr16 xor fadds mov mov mov dec sub pop movsl xchg and jbe push (bad) hlt repz jne int3 fs sub repz hlt fdivrs mov xorl and lock movsb mov imul dec rolb rorl lods insb mov (bad) add in loope cmp mov mov pop mov fsts lods (bad) ret sub fstpl pop jbe int3 adc (bad) movups adc std cmp jmp mov fwait sahf call sub inc mov dec jp mov sahf iret aas jne xchg adc arpl stos and push inc push add push adc inc lds push aaa pop jae in mov jmp dec add addr16 fcompl or add mov pop mov mov jae or cmp aad out pop pop popa iret xchg into rolb popf fstp aad mov clc xor (bad) loop loop or ret jnp jbe in xchg mov inc es (bad) jne addr16 rolb or enter clc mov mov push mov cmpsb cmc popf cli cli clc cwtl xor ss lret or mov cs sbb cmc pop sbb outsb ficoml add int or call xor or movsl aas jno pop inc ret sub in rclb test xchg xchg fidivr ffreep hlt das pusha adc cmp insl test push into jl out mov pop lea adc fcmovnb sub cmp scas add inc jae mov lcall je adc add pop (bad) mov fdivs push dec or push cltd mov mov int3 sbb imul mov pop inc jmp stc cltd fistpll insb dec cltd add std jno out dec sub mov roll mov aam pop cwtl pop ja jge jecxz les in ja lea jle cmp movsb cmpsb mov gs repnz push outsb xchg ds xor mov clc arpl and sub jbe or test push lcall mov movsl adc jnp cmp repnz icebp lods test (bad) movups push mov ja mov xlat sbb cmp mov mov cmp test xchg or fcoml cld add and test test sub dec cltd loop and xchg fisub push mov (bad) int3 bound cmpsb mov push iret lods lods scas test daa adc aas addr16 test xchg int3 sub adc lods ss das mov (bad) f2xm1 xor lods push cmpl cmpsl mov push pop daa dec rcrb pop push dec sbb lret cwtl push leave fisttpll cmpsb cmpsl mov jecxz es push test cmp hlt mov cmpsl xchg popa icebp in iret inc add push xchg sub inc xchg cmpsl faddl xor fwait push push push into cmp dec inc fs dec pop loop and les test movsb icebp push pop outsl mov sahf push cmp add cmp fld sub aaa aas cmp mov xchg and xorl mov ret add inc popl sub pop pop sbb popf mov sbb sub lret (bad) cmp sbb daa and jp out ja xchg aaa fdivl call outsb dec mov test jne mov jmp movsb insl xlat sub xchg cli fs dec in shl mov xchg inc mov push mov xor add xchg aas cwtl mov aam loopne ljmp (bad) adc mov add pop sub or push cmp or cmp icebp adc iret addr16 cs mov ljmp sub jecxz (bad) not dec std mov and sbb add arpl dec ss xor lds fisttpll dec push mov mov push imul mov push leave cwtl loopne xor lods and mov push cltd xchg mov pop xchg imul enter xchg cmc cltd clc push sti dec sbb (bad) sahf pop mov dec scas mov lret movsl out mov out repnz push and in sbb mov pop mov or leave xchg decb popf push cwtl add jbe or dec negl (bad) sub mov inc inc jl sub pusha jae sbb insb lret push ds mov bound pop push fwait adc fs lods sarl inc sbb adc (bad) roll mov sub in lock mov jl inc fdivrs jns push sahf cwtl sbb (bad) repz mov xchg dec pop fdivrl sahf mov xor inc xchg dec ss cld insb stos arpl sahf add in push inc adc lcall dec hlt popa movsb out push adc lods andb inc xchg mov js inc andb mov int3 mov inc in cmp pop mov loope push xlat stos add xchg lcall (bad) mov test pusha mov cmp std (bad) lret hlt insl sub ss inc jns fwait pop cmp mov xor mov sbb int lods jecxz fmulp inc or pop push fistpll adc sub mov into mov shr arpl (bad) mov ljmp or je test mov xchg sub scas xchg and inc pop sbb dec jo aaa push adc lcall mov inc and (bad) enter out rcll xor dec fistp int mov lret sbb sbb add addr16 test test jle push repnz push and mov test xor mov sahf mov lea popf jge in les (bad) xor xor sub aad sbb (bad) add cltd inc push pop xor xor (bad) sbb daa mov jl pop sbb mov sub cmpsb repnz cld xchg lods sar push adc and pop lods jns cmp sub inc in pop inc (bad) cmpsl xchg enter arpl jae xchg cli or xchg sbb cmp jmp fchs adc mov fcmovbe jmp aaa sbb lret pop js sub nop lds xchg jo aas ss movsb aas sti inc lret test push hlt sub push sti lock addl rcrb fidivrl jge mov (bad) in bnd in jg push mov out loope fwait mov mov mov xor imul dec aad sub gs jne mov sbb pushf lcall fcomps jmp ljmp push fidivr daa idivl inc out (bad) aaa and cs mov scas lret and sub pop aas aaa xor mov inc repnz dec mov insb int pop mulb imul push test test jle inc pop adc mov ret test adc arpl aad jecxz jnp push scas sbb repz mov xchg cmp test ret mov das jl mov add cmp jmp stos jo shlb cmp cltd in clc aad push push lcall arpl leave inc sub js pushf movsl daa outsb jl leave idiv cwtl sti insl rclb mov push jl dec jae inc repnz flds dec and aaa fs test sbb and xchg fcomi push shrl jge push sti pushf lret fisttp cmpsb (bad) jp in (bad) outsl mov xchg mov lret pusha inc sub lods xor dec fadds sbb pop jmp je (bad) pop and xor jbe push (bad) popf mov mov pop comiss jno add dec rcl movsb (bad) jne xor sbb in mov popa or or mov add add in inc pop jb or loop jo in sbb sub outsl jb imul jmp jp rcl fs dec inc pop push sub iret pop sub mov in jne sub fcomp gs pop jmp inc mov int jecxz jo xchg fsubs lret xchg inc xor dec push push (bad) fcmovu fucomp mull and inc xchg lcall add popw test dec ret lahf fwait dec adc mov iret out repnz stos insb (bad) (bad) mov loope mov lahf cmpsb out imul sub (bad) lret or jo mov adc pop arpl xor mov insl lret int adc and or stos out push (bad) xchg xor sbb sub hlt inc mov mov and dec mov add add jp call or or nop shl jbe iret stos (bad) adc daa icebp call addr16 sub orl mov fisttpl sub sub imul mov and dec fninit sub sbb pop cli mov or mov es bound hlt dec mov movsl mov xor sbb arpl push lds rcll dec ds sub mov mov mov (bad) loope mov arpl hlt loopne push mov sbb lds pusha push (bad) mov mov scas test lds sub cmp mov orb lahf out movsb inc out cmp or in stos aaa outsb add es ljmp pop imul ljmp jnp arpl sbb jb imul sti lea adc outsb fisubrl out daa xor imul lret ret rorl push cmp xor mov (bad) call shrl in mov sbbl mov xchg mov fwait lods leave stos pop std sub pushf out inc inc push jl lret fldenv jno aaa lret mov jno psrlw jbe movaps stc ja dec and je test lea mov add repnz pcmpgtw jae rorb mov jne jnp jb divl and pop repz sub xchg add lret jmp (bad) outsl scas jae cmp ss pop inc iret sbb in (bad) fxch xor xor cmp outsl ljmp jmp or push xor lock dec adc add flds mov scas push fwait inc push insl adcb int not jge fs dec adc push stos aad (bad) fdivr daa inc fimull fadds inc ficom push cld mov sub repnz in xor test outsb mov jg xchg aad loope mov loop (bad) arpl and out inc lcall or sub enter sar sub loope or cmp xor rclb pusha xorl mov pop dec sub insl sbb pop cmp and cmc aad push sub sub jnp fucom loope push jg mov gs sbb dec lret out mov xor dec or push dec jo fstpl fs push push cwtl outsl fs jb sub dec mov push xchg outsb mov push popl in daa pop lcall jmp mov jb icebp pop scas dec xor push jmp les subl ljmp std loopne pop cld lret jle cmc sbb (bad) sbb cmp push fldpi (bad) mull in push and js push push shll cmp pushf or inc mov push jl imul add in push fnsave push lock dec jmp mov out cmpsb mov das and sub adcl (bad) cmp jns fwait xlat sahf and fadd dec xchg or mov sbb or lods sti sti or mov push bnd xor ds fdiv push out jne lret xor inc and in mov mov mov lcall add pop (bad) add into pcmpgtb mov fcomp dec dec sub out sarb pop cltd jne mov mov (bad) loopne inc xchg or push or loopne pop movsl lods leave add xchg popf add xor and fstpt push mov mov dec (bad) sub xlat mov fisubr xchg scas subb jg dec jmp pop and in xchg mov bound dec scas dec xchg push xor pop test and push dec fildll out adc sbb in push (bad) push dec jbe fistpl scas fs xchg sbb ffreep test sub leave jae mov jns insl push xlat pop cmp and cltd mov data16 and (bad) mov jno aad std cmp jle aad (bad) pop pop xor bound data16 in jae in cwtl outsb adc xor mov aam lea out pop and or pop scas mov out push xor mov repnz (bad) ror ficoml mov das lods cmp ret dec pop mov cld prefetchwt1 xchg sahf cmp aaa leave shrl mov dec xchg mov mov cmp loope popa pop in xchg mov push adc cmp nop (bad) adc mov and xchg adc (bad) pusha jne adc imul cs jb in (bad) adc idivl sub cmp add xchg jo,pn and or cmpsb lcall fisubrl mov and mov shl push fisub mov (bad) xor aam les jecxz ficompl subl xor arpl movsb mov (bad) addr16 inc nop jmp xchg ljmp dec es js lea stos jae fistp idivb sbb jae or sub je mov (bad) aad cltd (bad) xchg inc fistpl pop xor out hlt pop jge in repnz xchg dec (bad) test push aad sub sahf inc or mov sbb pinsrw sbb push pop lret das mov push cmp rol aad test cltd sub clc test addr16 xchg and (bad) sbb sub xor mov or pop pop aaa jmp add xor les test scas or cmp mov stos sbb add xchg sar xchg mov lcall ret lret cmp daa mov pop mov loop int std or imul std jle mov jp fbstp ljmp insl jmp lahf adc xchg lahf fnsaves loop cmc sub call or pop (bad) lret adc jnp dec insb aam pop sti sub cmc sahf dec bound gs outsb xor pushf sub or xor arpl cmpl lcall sub mov les loopne dec icebp (bad) lds xor (bad) lcall imul sub add add gs sbb test xor xchg mov pushf dec dec out xor jle mov fnstenv xlat mov sub decl fistp mov or pop sbb push mov cli push cmp push movsl mov or sbb adcb ret das lcall push or mov or pop andl stc and mov lds xchg fidivrl lret (bad) dec jne into ret shlb in insb js iret fst rcl mov cmp inc add dec out outsb mov cld fscale cmp jmp (bad) cmp inc subb into test call std add mov jnp xchg cmp push loope sahf stc ret stc sbb cmp sti in test cltd push push stos jae insl jmpw repz push imul divl test fimull in push sti xlat sub out pop aaa or xchg test sahf adc pop add sbb sbbb fistl xor iret daa (bad) js arpl int push call adc ljmp leave (bad) push scas in lea rclb xchg xor mov xchg cmp or repnz sub add jmp addr16 incl hlt sti jl out fadd add lea lods dec xchg inc sbb and shr (bad) cmp jmp dec repnz mov jnp mov dec sti mov adc cmp xor ret inc (bad) rorl sbb dec cmpl (bad) dec adcl xor iret jae mov jo in sbb cmp adc and adc mov xchg cmp jae fwait sbb mov mov mov inc sub pop call int jnp mov xchg add mov mov adc xchg imul xlat push push (bad) (bad) fldcw cmp lahf adc ss xor ret inc sbb jo into ret sub stc sbb inc movsb push inc and pop insl xchg int3 inc mov pop mov (bad) and mov push xchg std xchg jo jno cmpb andb mov push imul arpl rol inc cmp mov jno push sbb nop leave adc jno mov ss mov movsb pop inc jnp add insb or mov int fidivl aad xor and jle lds fidivrl mov pop cmp out mov push xchg cwtl in into jg arpl mov ret jl xchg movsb mov sub je call lea mov sbb mov mov (bad) jbe scas aad cwtl cmc fstpl xchg outsl sbb cmp dec push jae mov push aad add addr16 push inc pop out cli test popf aad lret mov sti fcoml cmp or clc icebp adcl les and and enter add jno xor xchg int mov cs jle lods sub and mov or scas into pop imul sub dec (bad) std dec jb mov ret ds insb imul pop pop pop push and insb dec and leave je,pt adc pop push mov sbb fisttpll dec pop push mov jne mov rclb (bad) je sar sbb jge (bad) mov fwait inc ljmp inc or sub fiaddl mov sub popf test and or mov adc popf or addl out ljmp cld cmp and and and fidivrl pop ss xchg fisubr (bad) enter jns or push out rcll xor mov (bad) xchg rclb inc pop jo pop notb dec or stos (bad) adc out sbb cmp pop fucomi aam daa jbe in push adc cmp pop jne out inc stc loop idivb daa cld outsl jnp (bad) push test push mov cltd mov clc (bad) (bad) dec sub add push std rclb iret push xor mov inc xchg adc fdiv in sub inc pushf mov add out cmp and mov inc lods pop jmp pop dec xlat lock je lock and dec popf roll cli loop jnp jns scas cmc and scas mov rclb call mov popf pop fdivp dec jns jp les int stos xchg sbb je adc xchg (bad) xor xchg aaa fistl in repz xchg cmp push ficoml mov and fdivl aad jo adc fdiv out inc mov push movhps jecxz inc inc pop jne loop mov lret jp inc cli std xchg inc (bad) mov pop inc movsb jl mov cmp inc mov add inc dec aaa sti mov lret cmp ret mov cld mov xchg mov inc pop fistpl inc mov je xchg popf mov les ljmp repnz mov sbb mov pop (bad) scas sbb cmc xchg cmc test add sbb shll jns movsl dec test jg push jo push movsl and mov leave lret aam adc ja pushaw xchg mov sub js jmp (bad) cmp fneni(8087 outsb leave in xchg inc out xor and or add loop mov mov mov sbb inc pop cmp add faddl fcom je movsb or inc je fistl lea movsl rcll add lcall and popa mov out mov lret xchg ljmp push (bad) mov and xchg fs cmp mov andl repz or shl push jmp xchg mov fcmovnu enter cltd std cmp sbb cltd pop aam pop adc into adc pop pop stos push xchg pop sbb xchg stos cld jg pusha rorb pop (bad) dec mov xchg mov push std fadds jbe mov testb (bad) daa outsl mov push cmp dec imul stos jnp inc mov push push dec imul fildl xchg repnz das pop adc and inc into push jecxz push xchg xchg sbb pop inc adc lods pop cld pop rcrb add call add and (bad) int or cmc arpl lea add xor mov cmp fcompp stos call andl fistp out lock fmuls sarb xor movsl je int push pusha add push cli movsb xorb mov mov and xchg sub mov test fwait aad pop jo cmp scas int3 mov lods sahf push ret lcall xor cld or mov xchg fisttp sub jge jb pop mov pop rorl xchg push fnstenv fs into jmp enter push icebp fadds sbb imul stc (bad) dec mov btr mov lcall ja fs (bad) push jb mul popa jg add sbb dec push fcmovbe aam pop leave jecxz xchg cltd (bad) sti call mov mov sarl push mov clc rdmsr push (bad) dec in cmc mov add cltd dec push lret push inc xor cs (bad) jle xor sbb stc repz sbb sub cltd data16 xchg sbb lock out push mov gs nop mov ds (bad) cmc xor (bad) out or push inc gs cmp (bad) and inc xchg fadds and push pop mov mov ret inc cli movsb fbld push or fidivrl rcl (bad) xchg mov std pusha jl scas sub jb cli push gs icebp mov pop pop imul sub loopne mov hlt rorb out sbb mov cmc and sub call jae push dec mov inc xchg pop mov clc mov sbb outsl xor ss movsb mov push lods scas cmpsl dec add bound xchg dec add pop cmp and jo sub cmp jle inc inc jnp cmc pop fwait fwait jg imul es mov pop movsb es jecxz push xor and push js jne push rcl cmpl fdivl xor dec sub out clc mull jo mull rorb loop jno repnz cmc mov jle mov sbb jbe mov add xchg add fistpll insl ja testl xchg aad xchg push pusha xchg test push repz jl and iret xchg jle dec movsb nop int dec and lods loope pop (bad) out shll loope lds jl mov lods xchg jle xchg (bad) repz loop aam inc gs ja mov ficomp or xor dec pop sbb adc les ret rol mov adc pusha fs stc or adc pop or jl les or imul lret inc push sar push xor push mov icebp sub hlt mov pop add sbb insl inc or pop add xor adc outsb jmp test cmp adc inc loopne pop enter push cmp and imul lds and sbb sbb and fcompl mov das inc xor cmp lds inc inc aad push inc imul mov xor sahf push in (bad) jbe or pop xchg dec sarb or cltd gs jae out jle push decb fisubl dec iret shr push pop xchg lods jecxz inc and arpl loop xlat nop dec cmpsl add sub add jle and or cs mov enter leave push out pop mov jmp (bad) mov mov mov sahf movsl pop pop sahf xchg sub cmp and ss or push mov inc dec adc sbb dec adc mov repz mov xor shr popf hlt ja xor inc in push divl movsl push loope loopne cmp push cmp push shlb lea push cmpsl mov out mov mov (bad) pop scas pop pop out and aad sbb mov and outsl cltd mov xchg jp out iret outsb aam jecxz rcr xchg push shrb (bad) clc test loopne rclb sti cmc dec aad push jecxz ja add ljmp in lahf mov jae pop sub into cmpsl pop lcall mov sbbl jns pop sub jg cmp dec mov jnp outsl push test mov (bad) xor popa sbb mov jmp mov mov mov sarl push std mov (bad) cmp sub divb (bad) dec adc and mov outsb or dec mov in and pop sbb mov jle dec (bad) xor xchg adc and dec adc fisubl iret dec mov sub cmpsb cmp lods fdivrs pop jo mov orb in xor mov inc icebp jp push cmp mov les inc push popa rolb and push int dec jge mov nop pusha lahf jne insb pop decl xchg out sbb jnp xchg mov mov repnz (bad) mov jns call xchg and lret ret cmpsb (bad) mov bnd sbb mov clc aas cmp mov add pushf cmpsl leave lret cmp mov sbb xchg and push push lods fnsave inc pop outsl inc sub dec mov push lods inc inc (bad) fistpl xor (bad) cltd jecxz xchg xchg jmp inc or xchg pop sub loopne jnp xchg jbe pop push push mov aad xchg sbb xchg jo xchg jecxz fidivr cs out mov hlt jl jo lock in cmpsl sub pop into (bad) add mov sub rcr gs or adc pop stos adc jmp jge inc nop mov (bad) aaa mov sbb sub cmp call and push out insl mov mov sub jnp dec test std xchg add insb (bad) jno loope in sbb inc xbegin repz add sub mov je rol pop and bound add lock (bad) inc jae fdivr pop jl mov lret repnz mov das shlb movsb and das mov (bad) cmp xchg and dec inc inc lahf adc addr16 out mov subl lods out scas movsb xchg adc (bad) jl sub inc xchg std pushf jae fbstp fisub andps (bad) stos (bad) add push ret (bad) jno clc xchg mov dec sbb dec adc xor pop pop scas add inc pop jno incw mov out mov mov sbb lds xchg (bad) lea lahf clc cmp stos mov sub out sbb or movsb mov iret inc mov (bad) adc pop and popa xor shrl (bad) sub mov test les test bound rcll into add stos xor mov sub data16 mov adc and and ret vpsllw pop fcoms daa bound sbb cltd lea xor faddl add sahf out movsl mov push repz jmp outsl fidivl mov mov xchg sets cmpsb inc out ja and xchg jo ret pop aas mov dec xchg shl pop bnd aaa jg test insl imul dec inc mov mov data16 iret das dec pushf in iret into or mov mov inc rorl jge ret xorb lds test mov or shrb xchg push ds jg add xor sub sbb ljmp push add dec inc mov pop (bad) aad xor jl out push aaa adc stos jp lret xchg xlat inc (bad) xor add clc pop bnd (bad) pop mov mov fwait out adc jo lret rcrl out (bad) sub cmpsl xchg repnz xchg adc sbb xor es pusha nop stos xor fist gs fxch ficomp leave cltd mov lea sub cmp add pop arpl ja int sub fcmovb push decl pop aaa mov pop lret loop cmpl pop cmc push shll mov push outsb stc pop pushf cmpsb movsb pop outsl mov push cmp inc out decb sub ret test cwtl push mov sar mov cld roll inc in push fistpl sbb in bound sti mov js mov xchg cmp xchg lahf or jle es sub shrl hlt (bad) int3 call scas adc push pusha fnstenv jb movntq sbb out movsb insl shr dec or adc inc pop lock leave pop xchg pop faddl dec outsl or add sub mov in mov stc and push mov push jge or movsl mov xchg push (bad) adc add or into or mov xchg (bad) in xchg jno clc mov jecxz test int3 mov dec fisttpl dec cmpsl arpl scas ja mov mov dec pop sbb in sbb movsb push dec mov jnp mov jb int leave daa or sub sbb and rcll cltd das and loope rcrl cmp fmul dec in mov icebp add ss sbb push push dec out cltd cmp (bad) xor sti mov mov and sub (bad) std jb or xor (bad) lret dec out pop mov sarb mov jns cltd xchg stos mov repnz or scas cli scas inc loopw push iret or add inc push push clc test fwait lods pop popa addr16 xchg xor cmp out loope jns or dec push lea cmp mov cmpsl mov fmull jbe out stos cs dec rorb mov inc adcb dec add xor arpl sub xor out or cmp dec jb int3 and add sub sbb adc mov mov in scas in sti sub dec adc and sub push sahf inc aad xor aaa or int3 idivb (bad) lods sbb call push adc or test mov call mov jmp pop push mov jmp sub rcll adc aam into mov loop lret ljmp cmp outsb call fidivr (bad) xchg and fwait xchg ret sub mov adc and popf cli loop out and movsb xchg test mov cld in inc and mov lods push cli fucomp mov aas dec jge push pop fwait adc (bad) fcompl adc repz inc mov and push fwait push stos mov mov pushf pusha pop mov inc sub cmc cmp xor mov mov dec loope out out leave outsb lods in stos mov test and ja push xchg xchg in mov push scas push push and push and jmp cli in (bad) mov pop std mov xchg jne or inc test inc sub test push rolb ljmp pop pusha aam pop fstl fildll (bad) clc mov adc pop pop or (bad) std xor mov pop mov call das and lcall call repz (bad) mov mov shrb in dec aad (bad) mov and lea jne sub ss xlat aam outsl mov mov popf loop adc (bad) jge push lahf imul cmp lret mov dec dec add ret pop scas jmp loop (bad) mov adc mov cmpsl cmp fdivp mov jge jecxz add mov jmp sbb xchg jnp in arpl cwtl jge dec scas pop push rcll jle jno sub jne,pn cmpsl adc pop shl mov inc mov jg mov add pop pop xlat clc adc or jbe cmpsb sti ja add mov aas pop pusha xchg ja ljmp mov mov pop xchg jns mov add add push adc push add mov (bad) stos imul mov cmp inc rcll cld mov and xchg dec out add push mov jns leave and mov adc repnz lret int3 idivl jp scas xchg push out push pop adc sub add adc mov das push and test fdivrl mov lea (bad) xchg call outsl push aam mov add cmp inc adc sbb fwait dec addr16 test pop sahf sahf fsubrl lock xor jb push cld (bad) repnz dec sbb cmp add leave add je mov pop scas xchg mov and pop cmovnp push jne unpckhps imull add adc jl xor pop push out loope aad test lods sub xchg lock inc add xchg sub pop fadds push decl sub sub adc cld (bad) in (bad) push dec stos and sahf mov inc mov cs sub cmp jae mov xor add dec cmp xchg or cmpsl push loope xor sbb mov rorl mov or aaa sbb lods push inc dec (bad) cs mov add cmpsl aad fcmovbe or jmp jecxz xchg fisttp das jbe sub sbb dec test xadd xchg out jbe test and out cwtl inc test out push icebp scas sub push ja cmpsb nop fistl sub sub (bad) icebp je cmc jge mov test push sub in push rorl popa rorb cltd clc lea jle cs inc jbe mov xchg loopne add mov lods sub fnstcw mov jmp jnp,pt sbb fldenv ret pop pop in sarb push mov or jnp push push addr16 repz pop mov test lcall jnp fwait leave ror adc pop pop mov pop add add in xchg add aas and or out les adc fsubrl lock xchg incb and sub fs mov les inc (bad) mov stos or outsb mov xchg lods sub sub cmp add scas clc pop nop loop jb inc mov add inc sub int3 adc and dec add pop add movsl in test adc sahf and sub adc mov add ljmp push daa stos dec mov add jp aaa ljmp insb push aam push loopne leave shrb and mov or or lret mov push out xchg and mov stos pop negb int3 sbb je mov jne lods cld cmc int3 rcrl xchg cs cmp xchg xchg fdivrs jb xor jb cmp jbe test xchg xor sarl add cmp fsubrp xchg mov mov in and rorl adc cmp pop sbb mov std in ds enter mov mov enter je pop xchg adc sahf fildl test test lcall test in int aas (bad) rolb push insl imul out inc cmp sub sub mov les jns sbb hlt inc dec mov cmpsb mov lds mov js cld jmp int push mov cld pop cmp cwtl lcall lahf test dec inc jne sbb push or push mov repnz (bad) mov outsl cmc add and mov jns adc int leave and dec adc in psadbw mov inc aas or (bad) jle imul ret jge out nop mov imul jb pop loopne xchg mov (bad) mov xor inc lret inc sub mov sbb das movsb lods sub sbb and imul sbb jbe cld andl es adc dec pushf mov cmp in mov (bad) int rcrl and add mov pop repnz out cmp adc fildll iret push mov (bad) push lds and pop out (bad) mov pop loopne nop and std xor sbb pushf sbb stos stos mov fdivrl mov scas popf inc es loop fdivl aas and dec subl xor test movsl movsl jne sbb push xor fidivr push dec xor shrb adc add mov aad xor mov into cmp or gs sti lock mov inc in outsb rcr dec es test cmp xor inc mov pop call in into (bad) mov popa mov stos loopne ss xchg in outsl aaa je dec enter shlb xor js sti push cwtl xor (bad) out rorb xchg add cli gs cmc sub cmpsb sub scas mov out fs add pusha adc push imul mov dec xchg and lea mov jp shrb sti outsl jp cli fistp jg fdivrp sbb shr add mov std jo fisttp mov fbld imul xchg je adc add cmp sub and xlat leave mov (bad) mov lcall sub cmpsb das or add loopne adc sbb out out cmp jns jle test jmp push inc call int3 xor dec test nop xor dec or add sub add xor int (bad) int3 xchg push and stos jmp cmp add sub iret or cld outsl loope pop sub fnsave sbb bswap push sarb (bad) pop jp sub ljmp loop sbb aaa (bad) rorb dec jns ljmp lods imul shrb xor adc jne es loope fcomps (bad) fldcw inc (bad) addr16 jl cmp jmp jb or sub mov inc mov clc push and mov lret pop in xchg arpl repnz (bad) test test clc pop or jmp mov jecxz into and xchg imul pop popa popa ret (bad) pop pop mov cmc fstps js std rcrb ljmp out sub or (bad) pop mov mov out test stos (bad) jge mov and sub orl and pop inc xchg lahf cmp jbe xchg sbb dec jecxz out pop int3 dec pop adc mov jmp sbb outsb notb pop mov push cmc sub mov setne enter lahf pop fwait test xchg arpl mov cmp addr16 mov cmp mov rcr push adc pop sub repnz pop mov mov and fdivrl sarb xchg sbb ja dec lret mov jae mov pop ret push cmp add sbb mov dec hlt mov loope stc mov mov and add adc por inc adc dec mov adc cmp cltd mov arpl sub lds mov lahf mov mov enter mov pop addr16 mov dec xlat mov jge in loope sub imul stos xor stos inc mov js sbb stos xor jae pop or cmpsl xor lods pop fdivs or xchg add lcall jb xchg lods jnp call outsl add mov in out and gs ds adcb and mov (bad) sbb mov rcl int outsb imulb out jmp xor pop pop fsubrs test jns ror pushf xor dec jns out inc mov sarl std out add inc addr16 sub es pop push or loop inc inc or cmp pop and js int (bad) jp sbb mov btr fist mov add ja add pop ljmp aas cmp fsubr dec mov pop test ds jge adc pop (bad) (bad) jno pop mov fmull and jns jmp xchg sub cwtl test jmp xor jmp or xchg push sbbl cmp mov and negl push lcall dec (bad) je add push into cmp int cmc leave inc jae cmpsb dec fsubl sub dec mov jle cwtl jecxz lcall adcl mov mov pop sbb dec outsb push int mov dec clc bound cmp add mov or (bad) clc jns (bad) adc call mov mov scas xchg hlt cmc ja out (bad) adc xchg mov lock dec iret in out xor pop mov sub (bad) xlat pusha imul pusha xchg leave insl jl sbb mov or lret adc sub xchg push into mov pop rcrb xchg adc jno mov and adc push push aad sub lods push out cli sarl cmp jae sub inc mov inc fs cltd scas xor mov xor call adc jp xchg cmc fnstsw insl (bad) ficompl dec outsl js movsl insb sti mov xor mov cltd (bad) insl in xor jmp jns cmp lock (bad) cmp add data16 fs pop xchg dec outsb dec jle clc mov mov push sbb dec add xor lock popf adcb int3 out mov mov push inc inc lcall je,pn cmc stos in out test imul (bad) or mov sti aaa mov push push test and mov pop cmp test dec cld push push fcmovnb callw or out and xchg push jg sub fstp inc mov sbb mov and add jge push lahf cwtl es xlat or dec outsl mov jl mov repz adc dec (bad) dec mov cmpsb inc aaa xor mov mov incb nop (bad) jp cmp or enter sbb push and push mov aas insb dec sbb ret fwait push cltd loop push or lods or mov popf jb mov in cltd lcall lahf sahf ljmp inc jno bound add loopne sbbl jno (bad) nop ret pop pusha out cmp outsb add inc add rolb inc in das push sbb insl cmpsb xor sub mov mov jne loop push jecxz and push insl lret (bad) cmp sbb dec mov (bad) lods cli shr jp lret or clc and push mov dec lea fpatan (bad) jle jnp daa mov push cmp adc cmovs mov (bad) mov cmp in mov jecxz mov sbb jge in sub and mov xchg mov jns out stos (bad) lret idivb lods leave lcall rorl sbb mov mov cmp mov mov cmp out es adc add call inc cmpsl std lahf cwtl dec pop or int and push push movsb inc outsl xorl dec xchg ss rcrb mov inc cmp js xchg mov mov push xor fcom ja inc gs outsb (bad) dec sub out in cs push or loopne ds test sti sbb popf dec xchg or push ficompl loope mov movsl (bad) sbb mov movsl das loopne xchg cmp jmp pop push outsb das jnp pop pop sti dec stc lahf pop (bad) ficoml stos sahf push cmp sub mov and sub jae add inc in mov nop shrl cvttps2pi push test inc daa adc jecxz cmpsb xchg sbb fdivl subb add push push jmp or shrl into sub pop shlb cmpb ja das cs lret fadd jbe nop xchg frstor dec cmc mov push (bad) adc mov lcall addl ret addl gs out mov inc pop addr16 addr16 frstor inc mov int3 (bad) dec dec les jo pop ret out popf movsb je bound sbb and jmp mov cmpsl cld pushf mov clc sbb roll (bad) popl mov int3 push andl clc test xor cmp lods mov in lahf imul inc (bad) pop hlt mov mov std xchg jnp scas stos sub push sbb out rcr insl test loopne paddb and insb insl enter mov sub xchg aam test rclb push or add (bad) jno xor inc mov and pop sti xchg test lods lea enter push ljmp push dec sub aad jl stos push xor and cld imul cs sbb jle pop pop fadds xchg pushf mov loop sub and insl pusha adc imul addr16 lahf and xorl sub dec ficoml add and xchg stos outsb mulb xorl pusha imul fscale add (bad) stc pop jmp in pushf jmp mov and cmc cld add sbb nop fndisi(8087 jmp imul mov sahf add or mov pop pop fwait in test mov dec xor sbb loope jg xchg cmpsl jb stos sub test les cs push mov jp fbstp shlb dec insl jns add jo (bad) push xor cld fwait xchg dec data16 lahf sbb jmp ret dec dec roll mov sar adc inc mov and mov sub push push mov test jne call mov call call call mov mov call push call push call add mov call push push mov call push call test je lea push call mov mov mov mov mov movl jmp push lea push push call add movl lea push call mov mov mov mov mov push mov movl call call lea push push call test je mov sub mov mov sub mov call push mov call imul push call call imul push call push lea push push call add cmpl jb mov push call mov add mov cmp jb mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov push cmpl jb mov push call mov cmp jne cmpl xorps movups movl movups movl movl movl jb mov lea push lea push push push call test jne mov test je mov cmpl je cmpl je mov test jne jmp mov mov push call cmp jne pop xor pop mov pop ret push call pop pop mov pop ret int3 int3 int3 int3 push mov sub cmpb jne lea push push call test jne movb mov mov pop ret xor mov pop ret int3 int3 int3 int3 int3 cmp loop add fwait outsl cmp pop xlat test sarb cmpsb pop fs xor mov loope dec push hlt jnp pop add pushf out stos outsl push mov fsubl mov shrb fsubl mov outsl cwtl mov lock fisttpl lret mov arpl in iret jmp push lds pop aad int jb dec fdivl scas lea hlt rorb inc call ljmp inc outsl pop pushf ja movsb std (bad) jnp xor aad and inc mov sbb jb push cmp outsl jmp lahf mov lahf push pop bound inc daa xor sub fsubs or (bad) insb mov insl xchg int3 aaa aad cmp mov out mov dec out mov fidivl push adc cltd or (bad) fstl sbb xchg pusha out mov push or sbb jo repz push (bad) and mov mov in pushw sub cmp xchg (bad) nop sub and popf clc push shl lret push mov sbb xchg push xchg int mov mov xorb scas inc fdivrs nop mov cmp ret ffree addr16 inc roll pushf dec out push jb and sub ljmp mov ficompl push arpl pop inc mov pop rcrl scas arpl sub jns pop std inc mov dec mov mov cmp cmp ss inc sub and xchg inc jge sub lahf mov cmp sub leave test std mov dec call pop stos xchg call repnz bound mov loope jo bound (bad) push out xchg adc mov fstps mov push cmp inc mov jne mov mov stos pop jl in dec pop and call lahf stc xchg add lods decl mov cmc push fstpt sub add pop fs fsts ficoml ret cli xchg fninit or es and into dec inc mov xor xchg repnz adc shl ror xor popa jge stc stc scas repnz (bad) std dec jae xlat mov sti add jmp in mov cmc xchg popa or dec jae dec (bad) (bad) shll in mov mov mov dec inc dec pusha popf xor xor pushf add stc ja mov cmp or mov shrl test nop aad shlb push aam in stc jno and and mov pop dec idivb aam loope fld jnp scas xlat pop push add sbb cs (bad) pusha add jl mov xchg push jge dec cld and xchg jecxz xchg push inc dec xchg (bad) leave rcl xor daa mov pop mov add fisubr cli cmp ret sbb (bad) lock sbb and lods pop hlt xchg ss jmp sbb call sub pushf push jge (bad) cmc inc les or cli test insb std adc xchg loopne sub js (bad) mov pop pop or xor gs mov int mov or cmp (bad) (bad) jg dec mov call adc add mov jns inc insl mov dec mov std fstpt push or call jb pop lods mov data16 lock xor (bad) mov xorl lret dec jns in sub adc mov nop adc cmp add repnz test mov mov mov int repz dec add pop push adc lret sbb lcall (bad) xchg push sbb dec (bad) insl aam iret in repnz push xor push test pop mov jmp push mov js push mov fs lock mov ja stos notb ljmp stos jmp sub pusha mov cmp xchg push mov mov les (bad) adc jl inc jmp and cmp fldl scas test adc (bad) fucomp mov out out loope dec out iret jo sbb inc lods fwait cmp fisubr rcrl (bad) js cli cld mov cmp push ret lea rorb add push mov push mov cmpl jne movl xor pop pop ret push push push push push call mov test jne call pop xor pop pop ret push push push pushl call pushl pushl call mov test jne push push call jmp call mov push movb call test pop pop sete pop pop ret 