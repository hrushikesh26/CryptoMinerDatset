fdivrs call in sub movl pushl movl jle movl movl (bad) (bad) (bad) flds or add add (bad) or sbb decb pop hlt punpckldq ffree push mov mov jae adc mov ljmp subb fs adc pop out mov push push add xor add cltd jnp sub inc cld scas (bad) push enter push ss inc push (bad) (bad) (bad) fldl add add mov pop ret mov mov test jne xor test (bad) dec je cmpb je dec ret test jne xor cmpb inc ret test pushl mov cmp jne or je cmp jne or je shr cmp jne adc (bad) (bad) mov jne add add or jne xor ret sbb shl add je mov inc aas jmp sub test fistpll mov add aam int lret les (bad) mov jne inc mov test add (bad) je push (bad) out (bad) jg icebp mov mov add xor xor js add add out (bad) fldl es je test je push add je jmp lea inc (bad) (bad) ljmp ret ret lea add in mov lahf loope roll add loopne cmp push inc mov jne mov add push addr16 decl add mov add dec jne pop adc (bad) jmp xchg add pop lea push lea mov add mov (bad) repz decb jmp add pop push dec jne jmp arpl std out cmc push mov pushl inc add add cmp jne out sbb add sbb mov aas xor xor mov pushl push adc das add add mov pop fadds test insb out jle sbb push xchg xchg insb add xchg add pop jo jle pop in jl cmp add mov mov pop add les sahf daa je gs sbb xor repnz add adc nop add gs je lock fcmovnb push dec cmp jge add test xlat xor (bad) jge or push or push imulb sbb loope mov push leave jge xchg jne out sub fs pushl iret sbb mov mov lods add cmpl inc rcll fwait cld lcall jecxz inc clc mov mov hlt ret es push cmp loope or call insb ret ret pop pop (bad) jae mov out xchg jne add cmpl push and sub fsubrl push daa lea dec (bad) ja orb xor lock mov push add fdivrl add gs jae and sub push aaa clc mov mov xor mov add push push in pop mov mov mov lods lock daa inc inc mov xchg (bad) icebp mov cs dec sbb cld cmc test (bad) mov clc mov lock sbb dec mov push leave hlt decl pop call add sti or out pop add ret or mov in push div rep pop push call fdivs in push mov mov pop xchg mov pop pop add jo push push mov mov (bad) and sti std aas je imul jmp mov cmp pop pop jp lock add popf in out cltd cmpl adc add push add dec cli mov add mov or int or mov ljmp or in adc and rorb xchg rorb xchg popf cmpl xor rcr (bad) mov push and push mov add or xor (bad) pop xchg add test and adc push inc xchg push add jnp dec sbb cmp ret jne and mov jae dec jae and sub mov inc mov add jge subl cmp movsl out and lock mov cwtl lods or or cwtl roll sti xor cmp nop mov addr16 movl or iret mov sbb and lds jge decl test mov je (bad) xorb add pop (bad) pop pusha dec (bad) inc (bad) pop (bad) inc or fstpl fdivl icebp (bad) jmp fstpl fildl fstpl fldl fsubl fcompl negb add test xchg and outsb out jl add dec aas lret test and mov add loopne jne in xchg call and fsubrl nop mov dec mov inc push xor fisttp (bad) faddl faddl jne ret inc out inc ss push sub fisttpll ret or inc lock bound sub push mov sbb push and or pop adc dec inc inc dec sbb inc ret mov idivb mov dec faddl adc insl clc or inc hlt std setp and adc push mov call dec push (bad) sbb xor fdivl add or inc adc push es adc dec sbb call dec mov and out fcos adc xor push jae adc inc (bad) cld aaa std incl (bad) mov or pop fldcw fistpll fldcw mov mov sub dec mov push push add mov and or adc clc dec (bad) out (bad) fildl fstpl fldl faddl loopne inc loopne leave lret adc imul pop rorl add add hlt adc clc out ss js sbb cld sub in mov test je push mov jo mov lock (bad) inc mov xchg pop pop mov rep add and ret in pop pusha xchg mov sbb push mov mov inc jne or sbb loopne cwtl pusha sub stos (bad) loopne and gs push xchg add int3 sub xchg add cmp lret jno add fdivr insl dec popa arpl dec adc inc incb inc jo rcrl sbb loope sbb out subl mov pop mov (bad) mov (bad) jae,pn xchg add push lock inc ds pop add out pop xor test adc pop fist or jne dec lock adc shld push call push inc loopne jae adc jnp hlt jnp,pn hlt push adc push or add jg add mov or (bad) dec jbe xchg mov add mov push mov popf test add add cmp loope rcr ret and fildl add cld lahf (bad) rolb jne jns sbb mov cmp pusha fs ljmp popa lret sbb xor or mov lret jnp test jae fcompl movsb movl adc insb out add adc mov and add dec out xchg add cwtl adc sldt test ret adc or pop mov outsb sub lds pop jp jp cmp push or adc and xor inc xor outsl call push in scas cmp sbb cmc adc inc sbb adc add dec and cmpsb rcrl test mov jno jne cwtl jne add leave push call dec xchg mov or dec out or adc sahf js sub notb jae mov inc or push outsl push fsubrl pop ds adc inc ljmp imul sub pusha ljmp cli (bad) ljmp cld mov fildl fstpl fldl fildl fstpl fmull fmull fs push jne push mov mov mov lock sbb call xchg es xor pop bound cmp jne call lock push add xchg rcrb idiv adc cld lret cmpl pop jb sub mov mov inc not inc and sbb cld (bad) mov bound dec mov push dec sub jmp or add shlb fs mov rclb ret inc sub cld push sbb mov xor loope xor loope cmc (bad) sub push dec sti psubusw pop popa and clc popa mov mov or hlt jne mov call (bad) and adc pop sub or adc xchg sbb std xchg xchg stos mov mov mov mov push movsb mov stos or lret or dec adc enter mov mov pop inc adc gs stos or rolb cmpb sbb cmpsl cmpl in (bad) xor pop out mov push inc sub or dec shrb cmp adc mov icebp cmp sbb adc or sbb lcall (bad) pop push fadd pusha popf (bad) pusha pop adc (bad) lods adc add push nop (bad) mov xchg (bad) sbb add mov mov dec adc arpl and sbb adc and xor dec jae adc ret andl xchg xor (bad) adc add mov xchg inc mov nop/reserved leave push mov pop inc push push mov push cmp jg cmp mov inc shl add push mov loopne jbe incl add mov push pushl in xchg jnp lea add mov push ret push out mov jle cmp push gs insl dec jnp daa and dec dec jp inc and daa dec in dec inc adc add (bad) aas lock pop pop pop clc push xchg loopne pop mov pop out xor movsb iret call or daa jmp test add mov ret fcoml cltd outsl fs xor ja dec inc test jo jge decl test rcll gs jmp nop mov inc sub pop add and xor (bad) adc jp (bad) pushl call lea lahf rolb and fnstenv dec or mov push inc dec jl push dec in (bad) cld sub cmp clc xchg pop roll add (bad) scas xchg and xor xor jg nop in mov push pop pop mov jbe cmpsl hlt pushl call cmp movl out jne movl (bad) out loop mov pushl pushl xchg sub mov loope hlt lock lahf rcrb push push repz out adc pushl pushl pushl jmp (bad) or sub sub sub leave pop xchg adc das (bad) jmp insb sbb add and push ret rcr inc mov enter into fs mov sbb ret mov mov or scas loope (bad) test jo jb push std call faddl ficom cld sbb (bad) je add push in call and push jle jle mov push rcll call mov test je mov or xor push loop sbbb out bswap adc mov or in (bad) jne and sbb jl mov add outsb mov xlat popf xor and dec xor jl pop and mov les cmp gs hlt fmul dec fdivl jno mov lret (bad) loope test inc in leave sub cmpsb and adc clc mov lds pop call add xor and add test or push push cmp loopne dec pushl push aaa cld add xchg or fcompl std out stos pop stc sub mov mov movl add (bad) (bad) cmp je mov rep mov fnstsw dec call cmp inc mov mov add aam clc mov push ja dec and push pop mov xor and sub fs pop js,pn dec ljmp out mov sub rol rolb push or cmpsb add xchg fwait cmp dec add pusha push popf lods fcomi daa add popf jg adc xchg shlb rorb mov test xor call mov les sub call add out lret jo and adc jmp jge pop lock push andb inc push mov mov jge clc sub xlat movl ds adc xor shlb push push aad addl push into adc sahf in mov dec je add hlt and jl into dec cmp test pop adc cmp cwtl jbe dec leave add push pop leave orl das loopne mov leave add rolb leave adc out movl into int inc clc sbb aam int3 push rcr lock popa icebp xor sbb mov idiv jne sbb cs jmp pop push add sbb xchg push ja cmc push movsl jne inc adc and orl cmp mov insb inc or push add roll adc jbe pop movsb xor sbb les cmp mov test push pop fildl sbb cmp fildl fstpl fldl fsubl jl sbb pop loope ret pop pushl enter push inc push jno outsb push and cmp mov sub adc push ret or jp add xor add mov push xor lea add mov add push add jne test jne xor jmp push add push aas es xchg mov jp inc add fdivr jg pop xor mov add rep dec jne pop loope fimul add sbb push pop cmp push andl inc mov mov push add fdivl cmpsb dec sbb addr16 test aad cwtl in mov je lds lock adc sbb popa fwait adc aaa pop cmp xor fcoml push popa adc ret scas push xchg inc cld sub ret push push push test sti (bad) (bad) cld rep pop pop pop sbb je adc add cld lods ja or jge es or stos mov adc push pop xchg or lcall jne pop add inc dec jae add cmp stc faddl inc repnz aam test xchg mov mov xchg dec xlat stc dec push pop jl fdivrs push pop leave push pop cmp and ljmp add fiadd add add imul add cmp or sbb xlat push out sbb dec cmp nop adc adc test pop xchg sahf ret cld fninit sbb add add xchg push inc mov call out xorl stos aas mov mov sbb add mov repnz int3 inc jl push jl fidivl add pop jl loopne xor hlt adc add rcr rorb push xor xor xor ja and add mov push push int3 mov shr imull nop push mov loopne xchg movl pop push jae rcrb cld lcall pushf testb je push call popa aas out lds sub add mov sub fcomi mov ds or mov push dec or push sti stos xchg pushf std jg into sbb push mov push jae sbb and mov into add inc cld mov orl nop call mov in mov sti xchg add shlb jnp jbe inc sbb add push mov mov mov mov cmp cmp out add mov lahf mov sub out pop mov mov cmp test mov mov pop mov int ss add sub loop leave test jbe cmp jae mov lea lock sbb add pop add ret inc add lea sar add push push push call aas mov cmpsl pop pusha mov pop test sbb push push sub mov std mov test jne push push fadds fcoml push dec xlat mov je mov push xchg lods sub mov pop ret or push mov cmp cld incl add mov pop cmp fs cmp or adc mov push jns and mov aas mov (bad) pop adc push in bound push test mov test jne mov mov (bad) ja cmp dec jno inc mov lea test sub andnps cli mov add imul dec jne pop imul lea push lods inc sub iret (bad) (bad) fcomip mov mov sbb jmp lret add movsb pop mov pop pop ret mov pop les addr16 faddl pop sub (bad) lcall xor xor mov mov mov mov sbb ja cli call mov push lea push push call cmp ja call ds mov push test mov pop je mov add rorb in mov psubusb pop adc push ret dec sbb xor decl loopne sub xor xor cmp je cmp daa incb xorb push cmp fnstenv scas call movl mov pop add push insb and incl decl scas not dec sub flds jno add (bad) jg sti add add or pop cmp je cmp mov add or xor pop add ret fldl xor sti xchg sub test setae cmpsl insb and jle jg inc sub pusha int3 mov mov cltd xor inc xor or and jle test je pop inc push incl inc addr16 das sub push mov je cld rorl enter dec (bad) lcall les push add and and clc cmovge push add add pop std push call sub test xchg xchg push push call sbb jo out push and das adc js mov test pop and jne jp sub jl jmp adc lea (bad) jmp push iret dec lea mov cmp je test dec fdivs cmp jbe mov dec adc movb cs lods jmp adc not adc inc dec sbb or inc sub adc mov fadds lods and pop pop lea scas push arpl fdivs add adc (bad) sub sub push sbb fcoml in push mov pop lret dec xor iret lock cld insl out leave ljmp cmp sti and pop sbb ret incl je jg aaa mov adc movb dec mov jl adc mov and aaa add scas addl or (bad) (bad) call (bad) jg or jo mov sub lea cmp jg jae push adc (bad) jle roll and popa lods cli jl je (bad) fild (bad) lea js xor inc sbb arpl lock jbe dec push push loope fdivl fistpll (bad) jne mov aas sub push add pusha ja pop inc adc cmovnp mov pop (bad) (bad) pushl push adc cmc inc mov cmp je jmp cmpb jge add jmp inc cmp in pushl jb jmp cmp jae pop add (bad) roll enter adc mov and icebp cmp jg test ja idivb repz rcll sbb and push cli mov add and sarb sbb arpl (bad) arpl (bad) enter push inc add xor pop nop das sbb xchg in movl sbb add add outsl mov mov scas push ret or test mov jge test add (bad) ja cmp cmp mov das push sbb bound push lea push mov cmp idiv out rorl and push cmp sbb and push push xchg inc mov test or (bad) nop pop xor sbb test or pusha or out les push adc (bad) lahf cmp pop pop clc or test je jle (bad) xor das adc test std popf (bad) push inc adc inc popa inc insb push test adc jb xchg add or pop lock mov lock jmp fnstcw sub pop mov cld adc sbb push push jmp daa les jae xor imul push sbb lret pop sbb mov mov (bad) or pushf and mov sbb or or push je fistpll and adc add cmpl pop mov push push push push dec cmp test pop dec pop add jecxz ds out add jl push push repnz sti addr16 mov aaa pop or decl fstpt jo add (bad) cmp jb test jne pop inc ret lea push shl pop xor lret mov add add jae lods ja adc mov (bad) and fistl stc or imul and je rsm and sbb cmp and shr push iret adc or out mov cmp push sahf dec in lahf mov aaa mov mov icebp ja test decb xor clc add xchg cmp and jbe sti test mov jae jbe push je jns rcl and or add pop jecxz cmp sbb pop lret sub icebp push push adc data16 out dec pop mov fs je int3 jge int nop inc and das mov mov dec sqrtps sub test shrb pop and dec mov xchg es add lea xor je push jne faddl adc inc and inc and pop cmp frstor dec and sub jl inc sbb sub sub je inc and xor (bad) je pop inc hlt and ret pop cs mov cs xor negl add lret aad add adc fiadd pop dec dec mov fcmovnb lea inc mov or pusha iret cmc and testb push test out (bad) jle lock mov mov inc jp idiv cmp jb mov pop pop jp jmp sbb add mov test out mov push jnp sub je aam sbb inc add pop ret nop push push inc adc mov scas lret (bad) hlt or stc je xor cli jg scas cmp mov test jg pushl aas sub lea cmp jg lea and je cmp ja cmp push clc cltd fistpll icebp je ret repz rolb pop fdivl hlt cmp push push es fdivl adc sub pop inc ret pop xlat add add in sbb add sub mov push push call mov repz mov add xchg jmp cs push cmp (bad) jne ja bound push call dec adc rcrl push sbb insb lret pop inc jne mov sbb clc mov and jg xor pop ret push lea push xchg fbstp loop mov mov mov jo inc pop dec stos mov icebp stos pop movb pop mov out jbe or sub adc and pusha ljmp mov mov cmp je and mov add ret push (bad) adc mov fstpl mov adc add push push jae (bad) movsl je xor or fdivrs call call pop inc nop test (bad) inc dec add dec scas jbe sbb adc push sub aas sub cmp inc or lock (bad) cmp jnp data16 dec nop push or (bad) je mov mov adc leave jle cmp jle mov add cmp orl ret xor insb sbbl pop jmp cmp pushl in cmp je lea push ret fnsave xor cmp fistpl mov add jne scas out out sub and adc hlt pop in orb dec or cmp jne arpl jmp push xor cmp setl dec outsb ljmp cmp je mov inc cmp push ret fwait sbb pop cmp div and popa lods cmp xor mov rorl fwait cmpsb dec adc test or fbstp push push jmp lea mov push jl xchg lcall mov xor repz jne mov sub mov lock fistl fs cmp std out jg add sub cmp cmpl je dec inc adc adc or out pushl cmp or cmp stos nopl (bad) jae aaa jmp lods mov jl xor out add out je ljmp xchg mov (bad) mov inc sbb shr mov xor push (bad) out or ficomp (bad) lea and stos pusha dec inc out add pop mov andb out adc sub cltd movl pop data16 (bad) fistpll and ret jge mov lea sbb mov pop pop jo xchg push add or (bad) lock (bad) leave lcall xor and cld fbld sub jns xor push lea jg fsubs jl rclb and adc decl enter ret xor pop cli xor (bad) mov sub xchg pop pusha dec add xchg popa jne aaa pop test je (bad) decl test je cmp je push call aam mov mov pusha mov sbb jne je dec pusha dec es lock cld ffreep adc loope cmp je jmp pop fs adc ret adc add xorl sbb lods insb inc mov push fdivrl push push je call mov sbb cmp call fsts (bad) (bad) ret adc pushf in clc lahf outsl test jne adc sub push sub loope jo inc not push adc adc or cltd pop mov push inc push inc outsl addl pop sbb clc push add test push or ja pop ja mov testb xor pop aam arpl adc (bad) mov push mov or mov mov jmp jb adc push mov jbe inc inc mov fstpl xor push and (bad) mov cmp out adc adc je ds (bad) ja je je,pt scas (bad) mov das pop flds inc sub mov clc pop pop ret out jne fstl push push mov sbb mov cmpsl add adc jmp add inc sbb roll mov rorl xor popa movl xlat jo xchg dec fdivl jmp into ljmp sbb test fwait mov je jne push mov (bad) cmp mov jl int3 adc int repz popf push add lahf cmc sbb adc (bad) aad xor ret (bad) call je lds je jmp cmpb jge mov test je daa xor pop in mov cmp jge cmpb je dec lock push adc lods mov jl sub sub and pop sbb sbb test arpl fimul cmp stc add ljmp xchg shlb les push je hlt int3 mov and mov fdivrl (bad) sarl push push movl call sarl (bad) pop pop push lcall inc or je xchg fwait pop popf sbb or add ret mov fldln2 jecxz pop jae mov or dec or cld mov ret sbb xchg decb jnp add inc mov adc jne imul ret push sbb lcall mov jb dec cmp fadds sbb jne sub mov xadd or add or sbb imul xchg fcomps test test cld daa push js push loopne push loop pop push ja cmp scas imul pusha mov lds je (bad) xor jae jg ret xor fimull xchg rorl add shrl sbb loop ret setne dec and ret aad xchg pop add and mov jp ffreep lock shr and add dec enter aam cmp ss pop clc mov cmpsl addr16 push pop insb ljmp or or fcmovnbe mov or pop pop push or cmp xchg pop cmp mov cmpsb daa jl mov (bad) xor inc (bad) mov push push inc adc inc pop lahf jbe int3 or sbb es insb vzeroupper loop or push aas push (bad) jg add add in sbb add cmp idivl inc push push jg je adc add je std mov pop pop je mov subl jne (bad) mov jp mov jnp push ret adc add sbbl pop add sbb pop adc test pop movb lea call push out sti cmpsl (bad) les mov movb add add lret test sub dec jne inc mov push mov fmull xor (bad) jnp insl push add paddsb mov enter mov out push add jno sarl cli mov and mov mov cmp jne pop pop or je pop push add jne ds insl ja sbbb call inc (bad) fdivrs mov jne mov or (bad) je push jne cmp je cmc repnz jne push jle jg mulb je jle jmp sbb daa mov push sbb cltd je js mov test js push mov (bad) xor (bad) (bad) mov sub (bad) je inc enter cmp scas mov popa adc cmp add test ss mov dec mov shrb adc xchg imul cmp test or je xchg xorl mov add xorb mov push cmp and loop aam lea cmp icebp fdivp or xchg mov lcall aam popa add push mov or jo std inc jl cmp dec les test add movsb jmp (bad) jne lea pop push sbb add and pop add xor xchg aas das jbe fmul jecxz jb cwtl mov push int3 jne dec and jno adc addr16 fdiv inc nop ret insl inc add pop pop add pop lcall add pop cmpsl fadd sbb addr16 add aas lock in push cmp icebp pop add ja push push call add cmp jl sbb scas sahf clc or push pop (bad) sub scas or push push push daa fadds shrb or push cmc adc hlt nop imul mov aaa ret clc jno mov std test mov add mov sbb cmpb jne lea in and loope jnp mov jmp decb adc outsl adc cli push xor jle push add mov adc mov jmp cmpb jne movb pop push or scas cmc jp into mov push dec sbb lods push call push out ret mov pop aas mov lahf xchg (bad) mov xchg sub push add sbb push pop ja mov dec and dec cmp ja ljmp inc dec add repnz das add cmpsb imul add add cmc sti adc push fwait add or fildl mov ret push lea mov fsubrl ja clc adc cmpsb push pop push dec nop nop add or test add cmp dec xchg add xchg mov dec std fbstp mov ret jp add (bad) xor movl lock mov mov mov mov out icebp push mov mov jmp adc jl add mov adc call fisttp mov push cmp jne cmp cs jg add push add push inc mov lods lcall or mov (bad) out call shl mov movl fs mov pop pop pop push (bad) adc pop dec cld push lea pop idivl sbb cltd inc or mov adc dec mov or add addr16 loopne insb and push test mov jne out arpl (bad) out mov push mov push popa int3 push js dec xadd incl jb add cmp jae or incl xor mov cmp jl cmp je sub adcl cmp fiadd lea aas cwtl mov test mov cmp jge xor incl mov mov push mov mov push and ret mov sahf arpl mov pop jo test aas cld inc or mov lea cmp sbb je xchg or sub push mov fstpl outsb clc adcl inc adc in sbb jg and jmp cld jg mov lea cmp jb lea mov pop sub sbbl cltd and clc or inc xor inc and test add decl add xchg pop out cmpsb daa pop pop and push ret (bad) push or rolb mov mov fucom fsubp pop ds mov xor add add jnp sti mov jl cmp ret out fist adc pushf test mov add test push je pop fs lret xor sub gs pop adc or pop scas lcall dec mov pushl add or or add push dec idiv xor mov mov add and outsb out addb or mov mov pop add or loop mov mov sti ret cmp jne ja flds (bad) outsl push add or clc mov add mov push mov xor sub ljmp cmpl fsubrs (bad) mov push mov push test movl mov sbb or jne into mov fstl adc jge cld repnz pop jne inc sub mov pop pop pop mov movsb js mov xchg dec clc (bad) decl pop lea mov cmp je cmp jne cmp jbe and push and jne,pn ffreep inc add ja repz mov subl push out sub push mov xchg mov sbb cmp push and push jbe adc ss push imul and push (bad) aad jmp pop es pop push fildll mov inc mov add add pop sub lea jb xor xchg lahf ds movsl mov (bad) rep je mov mov in pop and xor hlt mov rep jmp xlat adc mov cltd add add mov inc and add movhps (bad) lea (bad) lea mov fsts repnz mov dec movl shlb sbb or hlt (bad) or push push mov push roll jg inc xchg les xor dec ja frstor adc movl or scas into dec jne sub pop aad daa ret jecxz and ljmp mov cmp pop ret lea fimul sbb lea popf icebp (bad) pop push call clc incl ret push push push push push (bad) fldenv pop or push repnz in push push add mov xchg push jl cmp fmuls add sbb mov lea push fimul out jg mov xor mov add mov push jo out or rep repnz and push push push mov adc je lahf sbb lea mov inc (bad) pop gs sbb sbb int3 loopne inc mov ss add add and xorb jnp mov leave push inc setne add mov cmpsb sbb cmp add (bad) mov and push xor xchg add xor test jbe sbb xor arpl dec push mov or inc mov inc popa mov clc (bad) ljmp xchg fldl fcoml sub push fnstsw test jne std fcoml jg (bad) int3 jbe fsubl jne dec mov mov out outsl push sti jmp fabs adc or mov mov mov mov je adc out incl shll enter add jg (bad) cmp jle sub add jmp jb cmp mov jne sub mov mov ljmp dec (bad) xor sbb sub cmp xor (bad) mov pop sbb and cmp loope inc sti idiv jns in outsl negb or dec or inc jne test inc sub (bad) (bad) mov cmp jbe sub inc add cmp jl pop add hlt (bad) cmp mov mov adc mov inc faddl pop movl cmp pop mov cmp (bad) fabs fmull lock mov push cmp call sar mov shr add cmp cmp mov idiv mov mov and mov mov mov dec jecxz jg out push push mov mov cli and push inc sbb popa jo inc mov rorb cli jmp pop dec mov pop add adc int3 hlt hlt ja jl dec mov not pop sbb clc pop in inc unpcklps cmp mov jae test jp push and mov sub push nop fs dec or push mov push adc testl mov jb test jne cmove loope jb mov fcom out popf mov xchg mov cld add ret mov and sub cmp jg xchg psadbw dec xchg lea (bad) pop cmpsb xchg mov std imulb xor sub and ficom rcll (bad) mov pop scas mov dec subl or sub scas test pop add pop mov pushl cmp add shrl jbe outsl cld add les fisubl push xor cld add imul add in test cmp jle mov outsl loopne mov cmp jl cmp jg mov sub fcomip pop test mov mov flds shr add call mov jne mov push push mov fcomps ret ret cmp sbb cwtl add add mov (bad) out jb rolb rorb andb push mov add fadds mov or addr16 mov add jl cmp jg repz add dec in pop mov arpl cmp pop mov inc (bad) pmulhrsw or insl clc xchg scas jmp sub mov and add push or lret or stos test (bad) adc dec cmp jne ja mov lahf or push (bad) jmp cmp push fcoms loop or add call mov leave cmp sbb neg ja push xor (bad) mov leave jle cmpb je movb add call outsb (bad) add push add sub fwait push push or cmp pop mov or mov aam add lret mov xchg cmp call and rolb imul push jg sarb fsubl jo jmp mov mov jno push lds jg cmpb pop fsubrl pop push int3 pop cltd scas rolb in sbb dec cwtl test pushf sub je decl sbb jle xor push mov mov push push sub fdivs or jno fcomps add stos jno sbb mov and and sbb jg push dec dec pop push mov add lds test add jl dec push add ret pop insb fnstenv ss jl mov add jne ret adc push popf rolb out fild cmp mov jmp test and movsb movsb jnp in nop nop iret xchg fs stc and jo and push push adc fistpll sbb test out add test (bad) insl jbe adc jns jae or xor adc or adc add inc xor xor pop es ds lcall and je cmp adc mov adc lock cs mov inc call adc push push push push icebp cmp inc and push call fldl jbe iret add iret sbb adc sahf pop xor jmp cmpsb adc inc mov mov aaa inc and push push ja lds mov out push jae mov push push mov gs push jbe je test adc testl mov push and fucom bound and inc (bad) dec movsl adcl pop dec or mov push mov ljmp push call push call xor lea (bad) or cmp je push pop jne daa push cmc adc add xlat mov push rcr inc fiadd push push cli imull outsb push or rolb cmc ret pop adcl push fistpll call in enter push call or and das bound dec xlat inc push push push push pushf push enter dec cmp or push mov push call lcall adc push lods add test test add fdivrp jg leave cld pusha add add mov stc jnp fsubl adc mov sub lret adcl test btc xchg xor inc mov inc xor jne or mov xchg popf push nop dec mov out mov mov jge leave fist mov sbb (bad) ss or out (bad) decl push je xor ret pushl pop inc nop pop ret sar insb cmp or lods or data16 andl mov xchg add aad lret mov fisubrl xlat rcrb xchg (bad) jmp call dec cmp std add ret and xchg mov adc cmpsb or jno call jmp xor inc out dec pop adc sub rcll and jne jno in scas adcb pushl aas (bad) adc outsb cmp pop ret das gs xchg daa dec hlt addl rol call mov mov mov pop ret in pop ja das ret inc and fwait (bad) ss add push sub xorl dec cmp dec push mov jg inc and cmp jbe mov and or inc and and cmp or or xor adc add dec es pop mov lea cmp jbe sub mov and out lods add jns mov mov jnp mov add lcall mov xchg add fadd pop ja push frstor add enter xchg mov mov jl mov inc or or inc sbb jbe jbe jns dec mov (bad) mov add jne pushl jno test movl andb add rol dec ja mov pop popf pushl mov cmp andl xchg popf call adc std sbb or push dec aad les inc pop ret pushl add xor jns push mov adc mov in pop mov jne mov sub push loop rolb push call ja mov jne call mov push jmp push lea adc push inc pop mov push push dec movsb out les or push mov push sbb jg sti aaa pop add push call jmp push sub lock call mov push cmp incl movl add add jg dec push pop pop pop pop xchg mov jb push decl mov and lods neg jmp push cmp pop sbb add xor push or inc adc jb test adc add push popf cmpsb (bad) xor push push lea imulb sub or fisttpll leave xchg sub add clc decl cmp je mov push call (bad) (bad) decl sub jne mov test je cmp jne cmpb jne arpl aas (bad) push pop mov pop pop imul (bad) jle add jle jne sub mov mov mov push mov (bad) cmp das mov cmp sbb sub andl subl xchg dec lea std mov pop lea in push mov mov call pop lock add int3 xchg inc lret sbb int std adc add mov pop inc and aad hlt rcrl inc pusha mov add adc push mov pop movsb cmp movsb mov lock (bad) std push pop mov nop cmpb je push das je mov sub out lahf and pushf mov push or jg in add add ja out in push push popa mov lock sbb add lea jecxz pop xchg add sbb cmp push dec or sbb popa or in sbb fsubrs loope inc mov cmp mov add ss pop test mov je test sarl mov jne pop out sbb popa mov sbb and (bad) call ret push decl nop (bad) jle jb adcl (bad) jecxz add fs cwtl js mov nop push sub jg jno push fnstcw add dec inc (bad) mov ret push xor cmp call call je xor cmp push subb rolb add daa add clc cmp je mov sub push push call cmp mov push repnz or cmp addr16 mov adc in imul in push mov std jmp mov mov sbb lods mov xor aad sarb push scas jg xchg aaa cld cs adc adc jne cld mov and lock or cmp jle mov (bad) mov or cmp jl cld mov pop std add adc adc inc adc jmp call inc or je sub cmp notl lea push adc iret cltd mov jmp add pop paddsb push xor leave sub (bad) (bad) xor push inc add out pop sbb or or idivb fidiv cmp jb (bad) aas sti ja push push push push call mov mov push mov fdivrp (bad) loopne or (bad) lea lea movsl movsl movsl cmpl push xchg incl movsl pop mov mov pop jb add push adc pop mov nop pop pop xchg mov mov pop imul in pusha je call jmp xor dec mov gs inc cmp rolb mov repnz dec and xor orl lea xlat push ret addl andl mov adc add push jb lds adc jo or dec add push call pop xor adc pmaxsw xor inc dec push andl les pushf stos xor incl lock lea sbb and dec popl repz pushl (bad) jg cmp xor mov dec mov imul test lea jl inc mov decl or add push dec jne mov push mov pop paddusb test fldt cmpl pop leave ret mov add sbb popf ret jl or icebp test je push ds dec orl mov cs sbb lods xor in test add in (bad) push mov sbb mov jg add into push xor pushl sti testl or sub add fsubs jae fldcw es xchg adc jmp xor or stc add inc and cmp inc les mov outsb js mov jo sti into add dec ret push test pop inc sti testl mov add fidivr ret cmp (bad) test test pop push push iret call nop (bad) mov mov mov std sti ja rorb loope add mov mov roll push mov jne push (bad) in out xlat test mov adc into (bad) xor (bad) mov popf loope pop xor mov mov subl lret mov lea mov mov mov mov testb je movzwl jmp push pop cmp cmpsb or pushf push ret sub mov add mov mov imul pop pop ret mov call cmp mov sbb push mov cwtl sti dec mov pop and xlat ret int3 add aas aam pop push mov xor popl (bad) inc or repnz inc jg jg cmp je add ret int3 daa add fstcw sub stos fwait scas daa push aas add dec adc es pop mov pop flds lret out (bad) (bad) decl repz mov xor cmp ja je dec dec not mov pop pop pusha jg xchg in and call inc adc outsl loopne movl push lea pushf movl sub xchg decl mov js mov cmpsb icebp push pop or mov (bad) aad leave lret jle (bad) mov (bad) (bad) decl imul xchg fildl movl mov jmp jno cmpsb push movl fnstsw mov mov (bad) (bad) out cli cli pusha add mov jl cmp jg add pop ret push mov stos loope add xchg dec cmp cwtl or add xlat push int3 xor adc pop push mov fistpl inc and sbb sbb pop jmp sub sar ret popf cmc push cmpl into adc xor jb mov jbe mov mov xchg mov mov sbb add fistp and pop add push push cmc into lret divl lcall jmp mov mov and fiadd ret jmp mov decl movzbl testb je andb push mov mov pop jmp sbbb ljmp or pop push push lea push ffreep ja push pushl add imulb lcall cld jmp add cld shl or mov add std bound movzbl push leave fwait push mov mov inc inc jmp movzbl inc cmp mov je psubq add add xor inc or add add fadds fdivl loopne cli (bad) mov fwait lea xor iret cmp mov jne neg pop pop pop pop cli pop jmp pop add ret lea add (bad) xchg or push mov mov imul stos pushl or fnstenv push adc or push sbb jecxz push or mov mov decl lock xor xor xor xor add and or and jne cmp faddl pop xor ret mov cmp je test je cmp je fwait cmpsb jmp out call push aam cmp in xchg pop pop mov (bad) aaa ret lea push cld shll push push dec jge mov add cmp jbe cmp jb (bad) aas test jne shr and cmp jb rep jmp test inc add sub jb and add jmp jmp mov rclb cld add jg pushl and mov mov mov mov mov push mov add andl int3 lea sub fincstp (bad) and add (bad) cmpsb and pop ja and mov lahf imul insb sar fwait cmpsb fs mov mov pop call call hlt aaa dec (bad) xor clc clc cld cld lea adc mov clc or lock xchg jmp add jle pusha mov mov adc ret in mov or ret sbb lea jg jb std rep cld ja sarl neg gs inc add pushf jnp push stc sub and dec xlat std sub pop or mov rorl cmpb dec loope out pop xchg and out jge mov sbb loope cmp sub sub jb sbb cld add rorl sbb dec xlat xor aaa addr16 pop sbb xor (bad) xor adc adc xor rorl or jmp repnz push dec pop add outsb or or xchg paddsw adc (bad) adc mov mov cwtl sbb push inc outsl sub mov mov push (bad) (bad) mov push out mov adc lock cmp lock test (bad) pop add fstpl fldl fstpl jbe,pn mov jle cmp jle ja xor push and insl rcrb mov mov push fldz and or pop clc push or add xlat mov daa faddl pop cs clc fldl jae sub fist sbb push push cmp cmpsb add jmp adc cmp or loopne jne mov fstpl or sbb sub sbb sbb gs adc inc clc in sbb shll add inc add cmp je fcompl cmp testb addl mov das mov push (bad) fdivrs pop sbb sbb sub add push xor loopne push cmp pop mov je fmul in add test dec rcpps pushl mov cmp call faddl jne sbbl push leave pushl fsubs dec lock cwtl xor pop call mov dec mov loopne and rol sbb mov push cmp je lock sbb adc sbb les sbb xor aaa dec inc xor xor ja out cmp pop sub mov lock ss xor mov lret popa jne ret add lea and (bad) mov pop mov cmp ja sub mov shr add inc pop fwait mov sub xor outsl mov rorb lock pop cmp and inc mov add mov fs mov mov mov pop or sub pop (bad) arpl mov jmp imul add std sub fadds inc inc jnp test push mov cmc inc mov add fwait cmp sti mov bound mov mov sub loope pop in add pop dec sub jb into icebp scas cld lea rclb inc adc jne mov xor mov xor cwtl mov xor mov or inc lock mov xor iret fmull dec jb inc in lea mov sbb push repnz mov lret mov leave lret push push pushl pushl inc aad or sub jo cs (bad) and xor andl cmp clc movl sbb cmp mov call sbbl add cld lock pop div mov popf fmuls int3 cld dec aas cwtl cld test inc aam inc rclb cmpsb out ss pushl cmpl gs add xchg mov (bad) je mov data16 dec jmp mov (bad) inc int3 xor out or mov daa and ja in cmp push add (bad) out mov pop jmp push adc jo decb aaa adc add add in dec cltd jle js add mov xchg nop pop or std arpl mov jmp dec je scas dec push mov mov mov mov mov cmc fwait jl cmp pop jg pop and stc add add cmp jecxz inc jg jge cmp jle pop idivl inc cld xor jge mov mov inc mov mov mov cmp out mov or add lock pop lea pop call lock sub mov sbb add push lock mov testl push in repnz scas xor jecxz,pt push push sub call add add sbb mov mov cmp and je lea mov mov mov cmpl jne (bad) jg sub cmpsl xchg xchg call jmp popl push mov xor fs (bad) fistp leave cmpl push or push or push or fwait adc ret push push mov or (bad) (bad) (bad) out dec or or pop ret int3 int3 push cmp fstl (bad) jb mov add add (bad) pop jae sub mov test mov mov push daa loopne ss or lea outsl dec cmpl jne mov mov or je mov inc mov inc cmp je sub cmp jmp in lcall leave and add add xchg push cmp je sbb sbb movsbl pusha add shr lock add add incl add adc push movl mov addr16 jg lcall xchg sti rolb cmp je sbb sbb mov pop or or and jne dec es incl mov cmp jae cmp jae shrd push fnop call ljmp loope shr pop xor mov push movl xor (bad) (bad) clc std xchg push adc add jbe xchg lret enter scas or inc pop jbe inc sub pop or (bad) cmp jne mov push mov call sbb sarb pusha clc inc and mov cmp pavgb lock jge and and test mov push push daa jle jecxz push inc lret add cmp mov cmp je mov dec xchg cmp jb mov (bad) (bad) (bad) push push pushl nop lahf in sbb mov inc fdivrs fdivrl mov jge jne lahf push push xchg or push inc add mov push push inc push push and dec adc xchg ss sar fwait cmp jne pop add popf and push mov jne stos cmp ret addr16 jne xor dec mov outsl jo loope pop jne adc notl push mov jbe push xor roll xor adc push dec and inc cld arpl rolb jmp jae mov shr mov aam jne inc out jo jmp fwait mov jmp push cmpsb loop cmove or mov shl mov ja test incl sbb adc jmp scas push pop cmp nop and and or sbb xchg jmp je push adc insb push jecxz dec dec sbb loope hlt xchg pop xor sub das or cmp jne push and xchg or jne xor mov int3 push inc xor pop inc xor aaa sub sbb lock inc or inc js test or cld lea mov mov mov (bad) ffreep jnp sbb popa lea cmpl je push push lea call jmp sti fstpl inc or je js and loopne movsb pushf sbb les ss add lret inc (bad) jb add mov cmp mov sbb es sbb mov adc adc aas pop out loopne mov sub or or inc sbb mov fs sbbl test or jge inc mov neg neg jne cmp fadds mov xor mov fstps jle add adc (bad) div mov out lcall inc or (bad) adc push and sbb (bad) ljmp sti ffreep ja lock lds mul add jb cmp loopne (bad) mov cmp jbe dec xor mov dec jne neg neg sbb pop negl sub adc mov or adc fstp fisttpll enter or add loope push mul jb pushl aaa pop adc mov mul add pop sbb sti push push pop mov adc movsl rorl loopne (bad) jne mov call cli roll pop (bad) or push rorl xor popf fcos inc or inc xor je dec je adc jg pushl sub jb push mov shl add push adc fucomip pop pop add je and sti addr16 pop ret daa jmp aad and (bad) int iret enter je out mov pop and jmp sbb jmp jmp cwtl and inc fwait pop pop lcall sbb jmp pop jl xor or outsl ljmp bts jmp addb (bad) out inc mov adc bt jae mov cmpsl pop loop jg jle push push test je push push mov mov test mov jl adc shr jne jmp sti mov inc dec idivb test je pop jne mov sbb je and (bad) lock sbb mov jmp adc je icebp out in jne cmp jne pop unpckhps fistpll add dec je repz cmc mov add sti lcall mov je test je test je pop loopw sar (bad) mov jmp and jbe dec push push add rclb rorb insb testl dec jne mov test out add adc clc sbb fisub mov fs mov sbb pop inc cmp je fistpll or test jne pop pop pop xor ret lock (bad) call lock lea mov test je mov add cmp jne mov pusha idivl incw jmp xor xor ret mov lea or mov add xchg sbb adc adc jb jbe adc and (bad) jne pop cmpsb inc mov inc and imul xor jmp sbb mov nop enter add xlat fwait xchg lea push or or or jmp and pop or dec jns pop inc int3 ljmp push adc std pusha aam or mov lea push clc inc pop ja je or out mov test pop je rorl in pop rcll mov leave cs add shrb adc push cwtl fstpt or add lret pop jl stos ret and je or or add stc adc xlat sahf scas push push (bad) add cmp jne sbb outsl cli push call and add pop jmp mov in push mov mov push mov mov push lea cmp jb jecxz (bad) mov add (bad) jae pop push xor rcrb int3 or add insb pop std jle fistpl pop or lea or pop ret push int3 inc loope fdivs pop or scas clc xchg fstl or or in pop ret rcr add lahf push and add (bad) je xor (bad) ja ja push mov lods sub add rcr jl fwait inc dec jne mov shl add push adc and (bad) je fwait mov cmp and imul cs cmp inc out mov arpl notl push push mov (bad) repnz or cmp xor mov ljmp push inc inc dec je mov mov cmp jne mov mov or (bad) std incl jo add pop pop ret mov and sub cmpsl ja ja je mov mov and or shr or add cmc (bad) sbb pop xor jge (bad) (bad) mov sha1msg2 dec je cmp jne dec je and cmc fdivrl cmp jne dec pop mov add add (bad) cmp out mov dec push (bad) int3 push nop bound mov mov and sub mov pop ja js inc push mov (bad) pop xlat mov test adc pop (bad) xor add xor in outsl add aam (bad) insb and jne mov lock pop pop add loope popa nop (bad) (bad) mov nop jae nop popl or jmp or xor mov sub mov (bad) mov jo and daa mov xlat stos mov xor xor xlat pop test add dec lods mov xchg jmp push gs insb mov loopne call cmpsb clc or xor xchg inc add test movsl xchg out pextrw mov fistl fcos sbb lret cmpl lea je adc decl mov inc inc test jne sub sar dec dec cmpl sub add push push jne lcall xchg mov mov jbe sbb int3 xor movzbl test je movswl testb je inc jmp movzwl movzbl (bad) inc shl or cmp je jmp movzwl cmp je inc jmp inc mov in cmpsb mov jmp or or or jge inc or inc sub (bad) not and pop pop sti (bad) jle pop movsl movzbl mov inc test je inc lods fwait add (bad) push xor cmp push push (bad) std jmp xor dec or movzbl testb push fldl faddp add adc mov sub (bad) popf jne fstp call lea jmp test jmp or jne inc loopne add xchg pop mov pop pop pop sub inc or and push mov jno je scas dec fs sub xor (bad) (bad) je push add or mov leave sbb or cld add aad cli push push test push mov decl cmpb je mov test jne push stos mov arpl sub push movl mov push pushl test inc add inc adc cmpl jne pop lock cmp lcall test jne cmp sbb mov (bad) cmp jne xor jmp cmp jmp dec pushl pop pop jne mov jb or mov (bad) jg movsb insb cmp pop jb cmpb mov or jle ja adc mov push sbb andb inc inc jmp push or andb andl cld jg ja mov mov or or mov testb add sbb ret or (bad) fist or lea mov inc cmpb jne mov decl sub pop sub cmp jb mov push cmp sub or and into loopne pop (bad) pop orl or andb mov test je cmp jb mov ds mov push jge das inc sub cmp jae mov push pushl push pusha ja mov and add sub sub and pusha dec fcoms mov cld pop pop pop or ljmp mov pop sbb stos jne cmp jbe (bad) adcl out sub adc stc push data16 out and gs fwait adc add adc fwait adc mov (bad) cmpsl cmpl pop fadds add mov mov test mov mov js,pn xor std (bad) pusha (bad) mov push push sbb out add push pushl (bad) jg add jne push mov push lea (bad) fdivrl fwait popa add aas cli cmpl jne jmp xchg mov mov adc or sbb arpl push inc (bad) push jne jg inc js push jl mov sub mov jne jmp loopne test or mov cmp jne rolb lea inc enter or mov shl push cmp test push jecxz add fnstcw fimull jp xchg test pop fnsave aas je incl outsl stos rorb and pop mov call div stos ret test je mov (bad) mov je add inc cmp lea push push call mov cmp jne andl (bad) out sbb add jne rep stos mov xchg xor (bad) ja cmpb je out mov test je inc jmp insl mov movzbl cmp ja inc xchg in xlat jmp dec push dec lea rep adc das imull and je xlat idivl movzbl fnstcw (bad) ja mov mov ljmp nop inc inc cmp jbe inc inc cmpb jne incl add cmpl jb jo pusha adc movl loope adc cmp pop mov mov jmp inc jns add test (bad) decl cmc jmp inc cmp stos sbb mov div xor pop add rorb stos jmp loope out ljmp packuswb js imul or xchg jb (bad) (bad) fstl cmp jne movl or clc std adc and std inc cld jne mov cs (bad) pushl sub sub je sub je dec fbstp add add ret mov or pusha xchg sarb rclb iret pop lcall adc lea ret xor inc adc scas (bad) ljmp inc mov inc cmp jb mov (bad) mov cs aaa push push lea movzbl cmp cmp ja sub lea inc stos clc sub xchg inc inc mov test jne xchg push lea lahf (bad) jp mov mov push mov inc and leave mov push push pushl (bad) fadds xchg lret bound push mov negl les lea test je add cmp (bad) adc mov test je sbb out fnstsw and jecxz mov inc in jmp faddl mov clc inc jb cmp ja xor (bad) (bad) adc mov clc popa jb cmp ja sbb and and loopne dec mov cmp dec jae adc shrl adc mov and lods daa pop pop mov xor adc stc inc jl (bad) out mov rorl jl cmp jle mov (bad) push cltd pop idiv push add mov cltd pop pop mov mov jge add dec or (bad) (bad) (bad) fnstsw mov test mov jne cmp jle inc lea imul xchg cli add ret add pushf inc icebp out (bad) jg or rorb leave jl test jl test jle add (bad) jge shl adc adc xor cmp setne mov push nop test and or orb dec rcrb into imul inc cmp adc mov add xor lds inc insl inc ja (bad) jne mov inc adc mov jl test fcmovbe jl sbb (bad) jmp test jge test jge pop je mov (bad) jmp add lea mov nop std ljmp cmp leave jg jge cmpl jle mov push negb push xor lcall repz or movsl jmp or lods cmp xor fldt and jge and adc adc push mov (bad) (bad) fcomip test mov mov mov mov cltd idiv mov imul or repnz (bad) sti ja cmp jl sub inc push adc lock or add (bad) ljmp pop mov mov cltd mov idiv mov sbb rolb aas incb lock jne mov push pop lea cmp jge inc add jmp jmp mov inc adc sub mov or add mov cmp rolb ret std ja orl inc or lock lcall loop,pn mov add sarb andl mov mov in mov ds mov loope decl push cmp jle cmp jge sub shll cmpl clc test mov je pop jno test jmp loopne xchg sub movl mov addr16 fstl pop test mov pop je sub insb push push outsl pop cltd mov idiv test mov jge add mov sub or inc add or into (bad) ja push add or add push stc pop fldz outsl in add and and jge inc push or decl stc add mov push fcomp incl add pop cltd idiv mov bound inc or sbb (bad) pop fadd jbe jge and inc jo pushl mov pop decl mov movl adc ljmp icebp lcall pop decl mov cmp rorb cmp jb cmp jb add clc cmp ja js cmp pop inc mov mov or sbbl jb cmp pop jmp popl sub add ja mov and or push das inc jg dec mov jbe in cs jne je or ljmp sti add imull dec jp xor sti add test pop mov mov mov or dec push mov cmp jne int3 mov (bad) mov sarl lea shl mov add andl mov xor sarl pop or add iret popa out inc jne movl cmp mov xchg por cmp xchg xchg cs in out (bad) das push cmp cmp out pop pop pusha pushl push call pop mov pop pop fdiv mov call cld mov and or lret ficom push and (bad) call flds ret lea lea adc rorb jae cmp jne lea lea cmp or or je fldcw push mov and adc es push aam call (bad) jg aaa cmp out or and inc jmp cmp jbe inc cmpb enter ja mov add and inc add mov fild pop xor mov cmp je cmp je inc jmp lcall jns insb pop lea jmp lea scas outsl mov cmp mov test fisttp mov cmp fild insb mov pop inc cmpb je orb fistpll mov cs pushl aam in pop add pop add cmp jne (bad) out mov push lea mov pop pop movl pop mov cmp das mov loope cmp sarb mov pop mov cmp je mov lea push incl adc sti ret (bad) clc mov lea aam les cmp mov mov add push jnp lcall xor dec mov mov lret (bad) mov adc push sub incl adc jge clc add cld (bad) mov mov add mov cmpb jne mov nop loopne ss push (bad) jno sti fwait js incl inc push mov mov inc inc or in fisttp add add inc inc jmp adc aam insb add movzbl testb int aas add inc and cmp jne test jne (bad) ffreep add divb incw andl cmpb mov mov cmp je daa add out fsubr icebp pop cltd mov cld push adc add inc adc xor cmpb jne inc inc jmp xchg pop cld (bad) ljmp ret add xor cmp je cmpb lea jne inc add (bad) mov or sarb push sbb xchg ret sbb jmp rorl (bad) je std (bad) mov push pop inc incl dec jne mov cmpsl dec cmpl jne jne (bad) mov je cmp sbb ret push pop cld jmp jmp inc jo inc add adc sbb cmp inc (bad) mov movl ss (bad) (bad) incl pop ret push push mov push push mov xor xor xor icebp (bad) (bad) (bad) cmp jne call mov cmp je movl int3 cmc ja mov cmp je dec std sarb (bad) frstor inc or je push mov je inc inc (bad) fnstsw sti cmp jne push repnz mov push push inc push push push push movsb incl mov xlat mov cmp je xor and je push push push push pushl and mov or daa sti (bad) jg pop and mov push call mov jmp cmp jne cmp jne mov out ljmp je cmp mov je inc cmp jne add sub inc mov std adc sub push push pminsw aas cmc lahf in add push call lds pop pop pop pop fiaddl xorb lret in test test xor jg sub xor xor movl lea push andb orl (bad) std sti push out inc add (bad) and pop jmp lea mov call jge xchg sarl popl sub ss lcall lea mov mov jl cmp addr16 mov cmp xor push lea pusha (bad) jle aas mov ljmp mov add add fcomps mov push mov testb lcall stc pushl add or push call (bad) incl into mov sar and mov lea (bad) ffreep fistp or in cld add inc cmp jl xor mov and cmpl lea jne test movb jne push pop jmp mov out sbb dec pushf add or cmp cmp mov and ret mov in orb jmp mov std lock or jmp add add xor (bad) aas cmp inc ljmp rolb clc push add shll je imul jne out fild push pushl daa loopne sub mov pop call add push mov pop mov dec add inc push xchg inc add pop push jb ret push stos sub lahf cltd cld inc mov call enter insb es mov jmp push pop pop in pop orb aas test add cmp (bad) (bad) lcall adc dec cmp leave je add mov mov mov mov pop xor mov xchg lods lea imul pop pop jmp (bad) fistpll (bad) sbb incl jne cmpl (bad) ljmp push inc dec mov in (bad) ljmp adc add faddl mov je ss lea je mov cmp jl mov jp add and jne inc push push push (bad) xor xor sbb enter lea mulb testl lea in or push inc enter pop cmp jle sti ret je push or je inc mov add loop decl cmpb jne mov jmp repnz repz xchg add stos in dec je dec je (bad) fistp daa mov cld push pop sbb add inc add push in shrb push dec sete mov sti inc add inc mov dec jne push add dec icebp mov dec test jne push mov jo inc ds ret gs mov lahf jl and cmpl jne push xorl lods jno add rcrb adc mov push or leave mov je (bad) test pusha ret mov shl cmp cs mov call cmp je jne es test push lea lods cmp insl xchg xor pop int3 xlat inc jle inc test push lea xor cmp jbe sbb movsb insb mov call clc push fild fwait cmp les lea adc andl repz adc cld or fmull jnp test cld pushl imul (bad) das cld push adc daa add movl lea lea rclb outsl call ss dec hlt or ret pop push push icebp mov pop adc ret aaa push push test jne mov test je or mov mov push and (bad) out (bad) out or test adc loopne pop add incb call push test pop ljmp pop sbb testl mov mov sub bound mov dec test mov jle push xchg add out stos mov jmp cmp je mov mov jnp cmc sbb jmp mov add je clc out fmul dec outsb add cmp or add decl imul cmp pop je orl jmp sub adc mov jmp or ret sbb xchg sub sub aas (bad) sbb dec lock inc test mov mov mov pandn pop cld test add mov or adc bound adc mov and sti js push movsbl mov (bad) ja adc mov sar cmp mov ja jmp and test inc add rolb rorb inc inc (bad) fcoml mov movsl (bad) addr16 (bad) (bad) out dec sub je sub je sub je dec dec je or push add inc orl (bad) or in aas in xor sbb orb adc call cmp jne lea ds push insl jge fdivr (bad) aas out daa mov movsbl lea lea jmp andl nop into sbb clc jge and mov aas mulb mov dec cmp je cmp je cmp cltd sub pushl sti ja test add pop jg mov and cmpb jne cmp loope jle xor push inc inc orb xchg andl aaa add mov dec inc inc add pop cld xorb in ret (bad) outsb fs jecxz mov sbb sbb jg out bound cmp jg gs mov jg or mov je outsl call call daa testw jne or addl hlt jge (bad) mov mov pop and call and or enter je mov fs scas add rorl aaa jg aam xorl out inc rolb ret out (bad) mov add decl int pusha out and inc clc jns ret pop scas movswl adc movsl je scas (bad) pop (bad) fisttpll add test mov test jge movl pop jmp sub je sub je dec je mov (bad) ds mov sti adc out or push lds outsl loop ficomp je mov movsl sub out je movswl shr jecxz out sbbl enter fisttpll ret xor cmp jne rcll cmp jle mov cmpl jecxz in pop add mov cld out sub hlt jmp ss jne or or loop mov (bad) aaa cld mov mov out push lea push adc shrb out mov cmp je pop jne mov dec jge jo mov adc jle lcall test inc jnp cmp pop (bad) arpl or ljmp test or test scas dec rcr rclb mov adc int3 cwtl or push ja cmp inc sarl mov cmovge adc cld je cmpb je sub and ret ja cmpsb and cmp cld adcb add inc int3 movb add movl std add and je or jmp mov (bad) fbld or dec in mov jmp pop mov jo pop xor imul jno pop negb std xorb pop jmp icebp jne inc cmp adc cld push sub mov adc mov jmp and cmp and and (bad) pushl out pop xor sbb sarb jl test jae into std ret push fadds loopne fisubl in push or jle jne repnz cmpl andl mov clc out jmp inc clc mov or sub add (bad) (bad) das decl test jg sbb inc lock mov mov push push (bad) jbe mov or fdivr addr16 pushl add dec cmp jge add pop int3 mov decl hlt mov jmp push sub fucomip jle stos dec hlt cmpb jne jne and mov (bad) mov xor cmpl jne mov ret inc je test je mov ret or jmp iret sar or ret add and sub sub lock std lock jne mov (bad) aad std ja dec in inc ljmp or push mov imul adc pop test xor xor inc das mov cmp mov lea mov inc or push inc pop rorl pop jle in hlt cwtl mov pop pop outsl pop mov dec sahf mov push shr adc mov ret sbb cmpl out (bad) rolb je pushl sub add jne push (bad) aad mov mov inc in sarl std add add sub xor push mov mov decl js mov mov mov sarb mov jmp push stos pop (bad) call clc dec adc orl pop ret add negl jmp loop mov and push incl fadds mov inc jl (bad) cmp jg push mov (bad) loopne ret dec fstpt mov xor stc movsbl push inc lods ss pop (bad) out ret dec push loop and cmpl add or mov push (bad) mov sbb dec jo dec incl mov or jmp aas sbb add fstpl fldl inc lock fmull addr16 lock fsubrl adc ja fnstsw sahf jbe push leave ret xor leave ret push pop add in push add mov sbb jnp rorl lahf lret mov pop je inc inc outsb nop add orb push aas dec add mov (bad) decl mov mov inc mov mov mov mov inc test jne pop loopne mov sbb or lret mov inc hlt mov push jg std mov or stc inc in mov dec cmp (bad) incl cmp jne dec mov inc inc test mov jne dec fldl je pop test jmp jbe push push xor jne je sar jg mov sub mov mov mov mov leave ret sbb push adc sbb lea push fdiv fs push frstor clc pop aad fstpl push cli mov daa (bad) mov or inc add jge sub leave test setg add cmpsl fdiv rolb lret andl adc adc das out leave inc arpl idiv aaa cmc fstpt pop sbb push mov je xor cmp setg push incl fistpll dec add lret jecxz pop cmpl aaa cmc (bad) mov jne movb lea and add mov mov ljmp push fnstsw enter test repz cmp icebp enter add incl xchg inc inc cmp pop add jns neg movb inc cmp idiv jmp mov push cltd pop idiv add mov cltd idiv mov push or enter add add les jbe inc fdiv or hlt add shlb add dec add sbb or push lret (bad) pushl add adc inc add cmpb je cmp jne lcall add movb andb adc sti sbb sub popa adc push std aaa pushf imul pop xor jmp add pop (bad) (bad) cmp pop mov mov inc pop test jge outsb call neg jmp neg cmp jl (bad) pushl add fcmovne inc or or pop sarl sti push cld daa xor fcoms inc hlt mov lea rolb mov lock pushl jo add add dec cmp setl cmp lcall cmp jge or test jne and cmp add xorb sbb add xchg or out cmpl xchg jge adc je or adc lret cmc test jne pop push sub (bad) jmp call adc push ret or (bad) jne sbb or movsb insb inc push push add (bad) mov adc ret push mov loopne xor pushl sbb ja (bad) (bad) out incb push cmpl pop jne push out xchg mov xor adc std sti jg test pop pop int3 xor jne call push sub pop fstps pop pushl call cld pop xchg pusha call ds mov push test mov xor cmp jne les jo push push push pop push push cmp jbe push sarl or inc iret std and push push sarb loop test test add adc ja sub cmpsb push sub pop push je sti pop mov mov sub fnstsw or aaa sbb (bad) or adc and pop mov push push leave mov mov adc or and adc scas fmuls sahf out ss aas mov lea add and sub mov push mov jmp sbb pop sti dec cld decl fdivl fsubl out js add test test cmovge xor call jne cmp je testb je cmp je mov cmp jg fimull mov cmp gs and xchg pop loop cmp mov mov ffreep cmp jmp mov fcmovnb jmp fbstp out mov lcall add sbb push push jmp mov push pop jmp gs cmp je jno andb lcall sbb fidiv lret add jmp mov loop sar (bad) lcall push inc push add incb mov mov push loop test cld test inc mov scas push gs aaa or jmp fiadd decb mov or inc or push inc or cld ret (bad) fsubs ret adc add jne mov and fldl and dec push clc pcmpgtb xchg pop mov mov push mov push addr16 cmp xlat mov pop pop (bad) ds jnp in pop cli lea das push (bad) icebp jmp xlat mov andl mov aaa mov mov (bad) cmp es fstl or pop sub inc sbb cmp and cmp cmpl popf xor sbb jmp dec out decl push push mov or inc nop mov (bad) mov or dec adc rcll or aaa aaa add add roll push adc add in add add (bad) and adc adc cmp xor test push adc (bad) pushl push dec push mov mov not and and shl or std out dec negl dec or shl and or xchg out test shr sbb jmp add iret and add mov test inc dec or add fcomip xchg or adc or test mov inc or pop or push mov xor out mov cmp sar ljmp add jl or jmp (bad) mov or mov jmp or add data16 add cmp cmp cmp xor or jmp or ljmp call inc cltd adc loope sldt mov shl jg xlat std and rorb daa or dec and xlat out out iret mov sbb add fstpl mov cmp jge mov fldl fstpl push xchg (bad) (bad) lea push push push movsb cmpsl sti out bound testb je andl or in cmpsl jns sti add add test (bad) (bad) (bad) jg mov mov and sub je dec je dec je dec jne orb jmp jg lcall mov and or jmp and or mov jmp and mov sar (bad) sti jmp xor dec je dec jne and jmp mov and or jmp and mov fldl fstpl mov (bad) lcall (bad) les mov and push test pop je test je fdiv fisttp push leave scas pop and push aam xlat push testb xlat add add adc xlat sbb add je je sub dec jmp and je add je pop or scas cmp test add fldl (bad) out call push (bad) pop add ja fchs fstpl fldl jmp scas sti cs pop sbb fldl fimul jnp daa inc pop add das daa push arpl fwait dec push outsl fstpl and fldcw add test mov adc test or (bad) lret xor repz lahf mov inc xchg mov mov and (bad) scas mov pushl cld popf lret lea cmp jge fldz mov lcall push xor add shr add rorb (bad) (bad) jmp (bad) adc inc cli mov cmp jge sub test je test (bad) decl hlt test je orb shrl dec jne test je jp sbb dec out sbb stos test pop je jl mov and testb (bad) mov (bad) and push out xor test pop pop ja pop cmpsb lock sub mov aad pop in push mov adc (bad) fild mov mov mov mov mov mov stos mov jne and mov lock xlat mov sbb in xor adc xor add nop pop fldl sbb imul mov pop aad fldl sub loopne mov adc cmp jg sbb mov and jmp xor mov cmp xchg sub icebp jl xor ret mov insb sbb mov jl push jmp cltd add (bad) out mov aam ljmp add movzbl xor clc and shl addr16 sti ss or jg cli cld mov and adc or ja and clc shl or mov popa sub rolb lock or push or jns jne dec into adc subl mov ja lret cmp jne jmp cmp testl jne xchg (bad) mov push pop pop ret xor mov jecxz or xorb out xor (bad) iret dec imul mov testw cmovge push addr16 or xor lcall testb jne shll testb je xorl decl add or out andl outsb jecxz or out push jo ss sub jmp (bad) cmpb ret (bad) mov add and lock add fstsw movswl jecxz in es or loop fstcw (bad) mov enter dec cld or mov fldcw and pop mov mov add sub data16 pop or loopne (bad) fwait or cltd out test adc roll add fwait sbb fdivs xchg fldpi sbb shrb fild test mov add popa add xor and and jg push mov xor std mov or lea mov cmp jae mov cli add adc jb add aad and jmp mov or aad jne inc adc or out adc mov imul add (bad) fild push dec test mov jne xor hlt (bad) (bad) (bad) decl clc mov test mov jne sar dec cmp jbe push pop mov jg aad cmp jne cmp jae mov jmp dec neg (bad) incl add shll pop mov dec or sbb and jnp sub pushf mov mov (bad) jmp mov mov mov mov add mov mov xchg mov push or pop sarl clc and hlt jne xchg sub mov sar push mov dec pop cmp jbe mov add ja (bad) dec clc mov inc cmp (bad) adc cmp je mov mov cmp jne cmp jae mov shr idiv mov je dec add jmp lea push arpl push sbb mov mov aaa or jno mov mov add dec or mov or or fimull test aad pop roll xor mov xchg dec add dec add dec or mov push mov xor sti dec paddd mov jae cmpb ds daa fistpl or or jmp jne and and std cs (bad) (bad) ljmp mov mov (bad) out aaa add test pop mov add or dec int (bad) inc inc add loope add mov push push push call pop addr16 mov pop or push sbb inc adc adc inc or adc or cmpl jne xlat pusha dec (bad) std jo call adc jo sub cmp adc cli pop sti shl mov sub enter in push lea cs mov decl out cmp insl or push leave (bad) and scas icebp out jg push sub arpl lea push lea sub decl jge lea and and stc add cmp jge or shr cmp hlt jmp add or xor shr mov fstpt mov mov jae and and jg insl jne add cmp sbb pop jne mov dec fsubr fidivrl fmuls jmp cmp jne pushf jecxz pop and adc sub in sub cwtl ret adc push mov int3 fisubr pop cli push je insl fistp mov mov mov cmpl arpl inc ret (bad) fisub mov cld call mov cmp mov je mov inc scas (bad) (bad) jg aaa mov jo and and andl lea or mov jne mov xchg mov inc cld sbb roll and or je mulps jmp lret pusha hlt mov jne (bad) (bad) out pusha pushw fs test jl shl inc jmp mov mov (bad) fcomip add or mov mov sar dec cmp jle pop pushl mov xchg cmp jne cmp jge out cli movsb sub iret shr xor pop mov and mov decb jne mov in and jmp lea push lods dec jnp lea movsb sbb (bad) jne sub add sbb (bad) mov dec or jns mov mov mov xchg mov jl mov decl or or popf mov xorl std (bad) (bad) and inc cmpb mov jne mov pusha mov or or jmp sub aad ds sub cld lea push test aaa mov test je mov cld (bad) cs mov mov jne add lea adc cld out (bad) pushl lahf mov test lea mov jne cmp mov (bad) outsl adc jmp add ffreep push xor mov push pushl (bad) jb (bad) je subl or lcall (bad) push push inc mov xor cmc ljmp (bad) mov je push push out loopne mov call jne (bad) (bad) ljmp fnstenv fs xor jmp orl mov mov jmp adc mov orl into (bad) fist in lcall mov xor test jmp fwait sbb push imul xor aas push jecxz cld mov mov leave dec jne mov push shl add xchg push (bad) mov shll loopne (bad) (bad) call xchg add add cli ja lea orl orl lea cmpl cld lock mov out (bad) decl call ds fsubrl cmp jbe lods mov dec or (bad) push pop mov ja std or fiadd mov jl inc inc mov inc test jp dec inc jne or or push and ljmp ret stos iret test or cli (bad) jmp or xlat lea sub jmp ljmp hlt sub dec cmp pop cmp mov jle add test add in push lock jg aaa popf lock lea push pop pop mov cmp jne cld sub push push jae cmpl jo fsubl pop nop icebp sub gs pop and hlt dec or std dec add stos mov mov sub add subl mov dec or incl aaa aad cld lea cmp pop addr16 mov dec lds sub pop adc add pop add dec or cmc fild pop mov sub pop jg and add and cmp or lea xor test jmp and xor (bad) les or inc test arpl shr inc push jg lea mov mov dec add mov vpmacswd push fninit inc jge outsl pop mov sub mov xor push call push ja fs pop testb pop mov sbb xlat pushl cmp jne pop imul je jns pop xchg imul jns cmp mov mov pop jbe,pn jbe push mov scas and adc jne mov jne xor push sub pop push add sbb cmp inc sbb or pop mov in or xor in cmp jg jns lea loopne adc sbb inc sbb cmc cmpl imul jne mov dec sub dec das pop ss insl sub je les pop outsl inc pop rclb aad clc lahf aad push adc ficoml incl dec div mov push mov cmp cmpl cld neg sbb pop jmp mov mov mov jne lea pop mov lea (bad) lcall mov mov mov xor mov cmp setge dec and dec inc jbe xlat mov setae pop adcl inc or add cmpsb mov jae orb mov movl daa add (bad) jmp xchg daa mov adc je mov mov adc andl ret mov pop cld cltd xor xor shlb inc and mov inc mov mov mov add movsl dec add push inc adc dec pop ret orl inc jo add decl test mov adc add add add jl test (bad) je orl decl mov je neg adc cmp jbe and or jmp (bad) lcall sub test jge and je cmpl jne push lea jns lds pop out inc push cli out orl nop pop cmp stos icebp jg pop (bad) lcall lcall cmp jbe cmp jb mov cmp je sbb out test jne mov mov (bad) outsl fistpll bnd mov mov add and mov sub add clc add inc or ret dec adc stc or inc enter adc adc adc adc loop sti movl add and pextrw adc out push pop cmp xchg je cmp fdiv or (bad) jnp sarl (bad) clc add loopne add cmp mov jae mov fdivrs lret jl cmp dec jge loopne adc and push jecxz xchg mov bound xor inc mov jb sarl inc or sbb jg (bad) cmp mov jae mov cmp jl dec adc push pushl out push xor inc cld lahf mov push std (bad) or jge jb inc cmp mov push out mov pop mov (bad) jmp in psubsb mov cmpl je cmpl jne mov cmp clc xor mov inc mov mov mov (bad) ljmp testl add cmpl jne add jge andl mov divb loope inc adc loopne push push mov pop (bad) jne dec mov clc xchg sahf fsubl (bad) rorb mov cld orb decb cld mov inc pushf clc lock sbb dec cld jne mov mov jg cmp jae cmpl je sbb repnz mov rorl mov sub sub xor (bad) sbb mov jmp movsl and mov mov mov lea jne out (bad) mov jne rcll mov sub lea adc cmc mov mov imul mov lea out stos mov and cmp jae add mov push add or inc or pop add (bad) push cmpb je mov lea cmp jae mov test jne cmp pop cmpb (bad) (bad) cmp jne inc inc jmp cmp jae cmp jne mov jmp or arpl clc push or (bad) cltd jno ret jmp movzbl add or jb lea cmp jae lea cmp jae ss lcall add inc inc jmp lea cmp jae sub mov jmp jno mov mov lods jmp cmp jae sub sti (bad) jg jb mov jmp movzbl add jmp lea aaa ret shrd push lea imul shl sub and es and movzbl (bad) jg pop xor sub sar cmp lea (bad) fs jbe mov sub mov add dec jge pusha jae (bad) jg out adc push lock lea cmp jae cmpb jne (bad) (bad) incl inc jmp cmp jne mov mov mov cmp ja cmp jbe sub adc rorb inc cmpb je mov arpl xor incb mov sub push lcall and mov pushl call test (bad) out mov pop je push pop ret xor sub jne push mov cmp js cmp adc inc add out test sbb add je sbb push jg rcl push pushl jne in mov (bad) decl fbstp cmp insl loopne sub js jbe mov pushl sbb dec or sbb push pushl pushl cmp in out test mov roll pop pushl sbb mov iret sbb out lcall andb mov sub std outsl push lock mov cmp jl popf jne mov jg push jne (bad) fistp add cmp jne cmpl jne mov add hlt mov faddl mov pop inc jo add roll ret inc in add sbb mov stc cmp jns pop out adc jg jle outsl sbb test and test jge sub inc mov dec push out idivl inc add mov cmp orl cmp jg cmp jg mov mov mov test mov jle mov mov arpl (bad) sti lea mov adc jle pushl pushl in clc (bad) ljmp sbb dec clc add cmp jg decl addl (bad) sbb mov pushl pusha jp xor add cmp jne incl cwtl out cmp rol adc and mov stos cmpb je or icebp rcrl fsub lds lock lock mov aad repnz testb imul and xor roll mov pop and lock jae cmp jl cmp jg sbb daa test rorl out icebp cmpb mov decl jmp (bad) adc test xchg leave ret push dec in (bad) lock loop je cmpb lea je pusha dec add (bad) je sbb add arpl repz or sub jmp testb je testb je mov test xor std decl add add pop add add call push push pop rolb scas (bad) lcall or adc jne je cmp jle arpl fimull or pop adc adc insb add adc repnz jae sbb fdivrl insl cmpsl out daa int dec mov mov xor pop jmp mov test ss fs cmp sysenter incb cmpl push mov add cmpsb sbb jge je and mov out std out cmpl mov add lahf es fnsave jp pop mov pushl outsb popa in mov (bad) jg mov push inc mov pushl sbb rorl jae pop xor enter aad or addb mov mov andl mov aas (bad) dec cs les mov lea jo sarb jge mov add sbb dec in xor xlat adc insl cli push nop pushf xchg mov cld and out dec dec out test add cmp insb out shll add mov shr xchg jge mov mov inc fidivr mov mov cmpl jae sub jg je sbb das mov push adc hlt and push xchg data16 and jg stos jne cmpl jne loopne in adc js enter and xorb dec adc rcrb mov je jg add je lea out call or sbb add loope (bad) sbb je add push cmp or mov cmp sub mov (bad) mov sbb jne testb je popf push pushl test add cwtl dec js sbb es in mov jle add test inc pop cmp jmp cmpl push inc insb add jne mov inc cltd push je push xor addr16 loop pop fadds je xor jg push push je testb je insl inc or mov test es xor sbb jmp movsb sub mov xor shl es test jne adcl addr16 fs cmpsb aas add jo pop shrb nop or sarb or xchg shlb mov adc fwait decb decl add test jl mov mov or add add pop xor cmp out push inc dec jle ja push pushl out decl ficom rcrb mov pop adc or cli push mov cmp add xchg mov pop leave ret mov xor mov and pop stos test inc pusha mov jmp sub cmp jg out repnz jmp jbe rcrb mov je ret pusha pop call jmp push repz lea push add call mov pop repnz or je adc outsl mov and (bad) jo aad and adc and sbb inc and sbb sbb mov test sub loopne frstor daa test inc lret (bad) in sub cltd jmp mov pop les mov inc (bad) mov add notl inc and (bad) jo adc push push inc cld decl jns jmp lea jmp lea jmp lea incl sbb je mov inc adc mov add mov das xor fiadd test je lods incl je pop push in sbb nop or data16 inc add cmp fcoms sbb pusha xor or test je add aam inc mov or adc loopne repnz mov inc add push call nop mov inc mov push adc cmp jne fdivrl decl add fwait push mov out fwait fwait add (bad) jmp sbb jge and push call add ja loop,pn ja mov dec add and lods cli outsb (bad) gs xor divb clc add jnp jle push rclb mov jle icebp jmp and cmp je mov lea mov adc hlt mov push nop movsb cmpsb loop ds test pop cmp je pushl cltd or sahf pop mov or into mov push sbb pop cmovns loopne pop lea sub sar popa add adc rcrb (bad) push cmp jge mov mov sbb cld pusha mov jne push push mov dec jg or adc mov xor icebp adc mov ljmp mov rol add or incb lea mov aaa je jne orl cmpl inc cmp jl dec add mov sub add adc (bad) decl (bad) jb cmp ja sub sar add pop lds cmp xor adc push leave pop sbb iret and adc and mov ja (bad) rolb push and lods fsubs out clc test jg les mov in (bad) loopne adc or test fndisi(8087 or adc enter add in fadds in cmp pop push idivl hlt dec in js (bad) scas add clc (bad) cmp int3 (bad) je pushl jmp xor ljmp (bad) inc aas fildl sub adc adc sub stc or out bound cltd adc push push inc rorl mov lahf push daa cmp ret iret or (bad) (bad) (bad) jmp mov inc loopne mov das ljmp lea mov cmp push push mov (bad) (bad) (bad) mov rolb stc (bad) je dec dec cmp jae mov mov mov mov inc int3 loopne clc dec jmp mov mov jb inc lahf jle cmp jb push int3 xor je adc stos aaa cld add and add setge (bad) ss or sbb add add sbb mov movl ja mov pop cmp aaa insb cld andb push lea push lea add push out pop or inc or movb call mov pop call inc mov das ja mov test jne cmp jg mov fwait pop test ja add xchg jle mov push loop adc cli xor add inc cmp xlat mov and add mov je (bad) mov adc sub or and push or xchg add mov adc add jmp push outsb xor std adc (bad) je mov mov testb mov je inc inc sbb push mov inc (bad) (bad) fmuls pop adc or add addr16 cli incb mov dec out je lea xor mov shr rep mov xchg (bad) pop pop pop ret cmpl sti pusha add jne push adc xor pop jne cmp in std sti aad add orl pop xor push mov hlt imull cltd incl sbb fisttp movl add aaa mov pop cmp jne mov sbb and adc rorb cmpsl mov sbb xorl cmp pop mov out mov mov imul add adc sbb loopne jo movlps rorl popf aas mov sbb fisttp cld mov aas mov repz push rcll jno pushl adc pop cld out std out jne mov add or and inc cmp pushl test mov jne inc cmp or add test sub xchg loopne jne in pop sbb out je sbb jg mov mov ret mov orb insb pop sti or add enter test pushf les andb cmpb jne movl add xchg pop mov mov imul mov cmp je cmp jl cmp jg fadds out cmpb jne sub mov add pop nop out and cld mov add or (bad) test mov lcall (bad) mov inc and jmp ljmp nop sub (bad) jge or adc fs pop (bad) mov fisttpll add inc adc add clc jne cmp js cmp pop adc mov and mov push push pop and jmp iret and adc push sbb or xchg push push push jmp sbb push mov adc push push jp add movzwl (bad) ss popa les push adc pop jne inc push into int3 jne sbb (bad) hlt (bad) or lret pop push pushl cwtl (bad) mov add inc jmp daa push clc (bad) sti mov and fstl push push push push push pop jae mov adc fisttpll inc pop mov add mov sbb sarb cmp jl jg (bad) decl clc push cmp jge mov cmp jl cmp jg cmp jle inc in mov mov add mov imul rdpmc leave std stc (bad) out cmp rorl pushf shr mov cmpl and mov inc arpl pop adc lock shl mov and inc (bad) (bad) jmp add imul push sar (bad) (bad) (bad) decl clc lea pop cltd idiv mov pop cmp jg imul sub add jmp inc sbb dec add jmp or sbb adc or sbb push mov adc into jle sub jmp mov ret add mov addb jle dec and sub (bad) push decl ss inc sub push mov iret cld add mov pop cmp (bad) push sub sub (bad) mov add dec mov cmp jl shl in sub inc adc mov pushw push mov fwait outsb addl movzbl mov test (bad) jmp mov sbb jl or je movzwl fist int3 or test jne ret dec inc and jo lret adc scas incb add ret adc push lcall mov lea mov orl dec cmp dec adc ret loop add decl cmp xor adc jmp cmp jne pop or aaa loope xchg test jl sbb mov (bad) ja cmp jg push sub sti xor inc adc pop jmp std aas arpl mov cmp je cmp adc pop mov cmp jne (bad) pop fldt jne pop add pop jne mov inc inc arpl fcomps divl mov mov (bad) scas xor lret sub jmp stos inc rol jle ljmp mov and jecxz orl dec pushl adc sub cmp jae mov in or jne jb jne sbb nopl lret add or jne jbe (bad) clc mov incl mov jmp outsb decl and or xor lock sub test or test jne fcoml ds je cmpl sub jne icebp outsl loopne jbe inc mov testb movl out fisubr (bad) jmp push and neg add cmp jp (bad) mov add cmpsb sbb add inc clc mov xlat adc or add ds leave ret ds push push add aaa icebp jne push call scas fnstenv js (bad) cmp mov push jne jle mov mov pusha js mov push call mov loop mov adc mov add adc ret xor jmp lock rcll cmp call addl or pusha fcoms inc icebp add popl adc inc jo sub add inc or andl dec push xchg movsb (bad) je or add lds pop sbb adc jmp push adc sbb adc mov cmp jne call dec push je add push lock jmp mov and sar mov lock xchg sti addl xlat add mov in adc add sbb adc lock pop adc clc ja clc clc add or loopne lea mov ret cmp sbb inc xor je inc call mov mov mov add testb je or bound cmp cld fmuls xchg ret cmp in sti (bad) decl or sub out std (bad) decl cmp jne incl movb inc mov inc mov lea stc cmc iret incb mov mov cmp clc lea push loopne jnp pop push push mov pushl call xchg add cmp jl enter inc into rorb mov hlt adc lock pop cmp je push pop cmp jne in decl sub xor inc mov inc or (bad) lea push push scas pop jbe nop jmp rcll loope dec xor cmpsl sub push (bad) ret xchg sub add inc cwtl inc or cmp sub data16 test (bad) mov cmp shrb inc lock incl es lcall pop lock decl rorb dec or movl outsb jmp or lea sbb push add rorl mov aam add sbb mov dec or sbb lea mov and ret or mov inc push mov or add ficomp dec push decl pop je jle jb or adc add ljmp adc cmp ja push mov pop pop ret lea add std or xor push lea adc push push outsl insl adc nop rolb push es xchg shll decb call and sub xor pop sub add das test mov sar decl test call repz mull mov inc adc call pop call inc sub rclb leave mov adc or icebp pop or fstl dec pop and mov inc and shrl dec lcall (bad) ljmp adc ss or dec push inc pop and adc pop add jl fcomip sbb and imul lret or call fldcw aad sbb decb and icebp or and pop pop ret jne xor push test push je push pop imul aaa add add iret add test or add ret and add add add ljmp mov mov add and mov push pop dec je pop (bad) (bad) jmp je or (bad) jne or jmp or jmp or and pop je cmp jle (bad) jne inc add jmp add pop pop test pop je add xor ret xchg push jp mov pop aaa pop xchg add test mov add mov jo sbb into je push or (bad) std or or mov and (bad) mov add or jmp or pop dec add pop je jg jmp push cltd pop idiv push popa inc and cltd idiv pop (bad) (bad) decl fsubrl lret call loop rolb inc cmp jge lea cmpl or incb jne inc add adc jnp loopne int dec push js (bad) int dec adc cmp push push pop sub lret push loope pusha ret pushl xchg push lock cmpsb jg fsubrp adc sub test jge pop dec mov (bad) (bad) push cmc js push sub pop pop decl add or add hlt clc lea test into shl test je inc push ret cmp inc push in add loopne jae jbe cld pop stos in push pop and clc inc cmp jge mov sub lea xor rep push fild mov push push sub ds aaa cld pop mov mov add ret lock getsec mov xor and mov add cmp jb jge pop or cltd mov into sbb pop add stc nop sbb adc lret sub not mov mov and (bad) mov or mov mov add loopne (bad) fistp pop in jne mov push pop mov push pop mov cmp jl rorl adc or jmp jmp sbb out clc popf mov mov or add push mov (bad) out (bad) decl add (bad) jg add clc shl cmp fcom (bad) decl notb jae add or pop adc (bad) mov pop fstpl add or (bad) sbb ret or or sub out mov inc add enter cmp jge sbb or aas fstpl cmp fdivrs sub mov push ret add dec std cwtl sbbl push and add xor ja add cmp jl xor jge pop cmc (bad) ja aad or mov mov aaa push cmpsl or push adc idivl add mov xor shrb aaa cld decl mov shl mov neg sbb sub icebp or cmp fdivr ffreep jne in mov mov mov jmp cmp jne adc leave ret push jbe xlat push xor xchg inc push mov fwait and (bad) jo pushl or sbb leave xchg inc or leave les inc push gs adc adc or lea movb test mov jle mov xor (bad) lcall out je movsbl inc jmp push pop mov inc decl (bad) (bad) (bad) fnsave andb test jl cmpb jl dec cmpb jne movb jmp incb xchg incl incl jmp xchg mov xor mov rcrl sub push lea (bad) jg push stc sahf orps inc fcomps jne push push push jg mov movsl movsl movsw fcomps mov mov dec shr inc fimull add ss sbb pusha repz (bad) jo sub mov hlt decl inc push mov mov and jge jmp mov mov movzwl lahf (bad) mov shufps fbstp mov inc std icebp add sub cmp cmp jne ljmp cmp mov jmp lea fcomip lcall mov shr shl or aaa or shl mov mov test sbb pushl mov add mov shr or lea mov aas add lret jmp or iret mov dec jg adc test pop adc add or push sub or je dec dec cwtl test pusha imul sub imul faddp or xor or fisttpll cld push setge push push push ljmp pop push pop cmp mov mov divl add pop inc testb je (bad) dec cmpsl ds std repnz cmp jl sub inc test push cmp adc xor or jnp pop pop andl inc cmp movsl pop out xchg pop mov mov ret pop outsl mov cs je int ret testb je pushl lods and cs neg pop pop sbb adc ret loope and xor push out sub adc add (bad) test je mov test jle clc adc or cmp cmp mov or xorb mov jmp lea bound adc or clc inc mov push mov push xchg je adc jmp js inc std int3 xor negb in je mov mov sbb pop pop cwtl negl mov (bad) fstpl sbb xorl and add jge mov das sbb add jle cmp dec sbb or (bad) incb mov add (bad) pop pop inc cmp mov or adc xor add sbb mov test xor gs jne cmp je push mov push sbb test je jle ds aam jg adc insb pop mov lods das test movsb insb cmp pop jbe pop sar mov cmpb jne push scas add cmp scas fucomp add rorl add shlb in int3 push add loopne adc or pop test push sub adc inc fmull inc mov adc adc cmp adc lcall cmp cld or cmpsb add and or pop aam jge xchg or add dec std lret (bad) xchg mov and xchg push nop cmpsb add imul sub outsl mov mov push adc test testl push push outsl lcall pusha adc add (bad) ljmp xchg push jae mov fcoms lea roll sbb je mov je mov cmpl pop xor sub je dec je dec jne push push jmp push push jmp push push stos jmp insb in mov orl xor jmp add sbb (bad) out mov or add pop outsb adc subl jae pop nop add sbb mov adc pusha add inc push icebp ret jle add cmp mov lcall cmp shl add cmpl jne sarl jne lea push (bad) mov incl sbb add push loopne xchg jmp pop add dec lock fild (bad) rolb addr16 add dec push push dec push je dec dec je ljmp call sub dec je idivl test sbb mov sbb out or jmp mov sub (bad) mov add mov clc pop add pop mov xchg mov mov add add bound cmpl inc xchg test xchg jae (bad) (bad) jecxz push lods xor cmp jne cmp je fs pop adc jle clc or clc or pushl clc add sbb or dec mov hlt out push loop inc pop push mov pop jne mov scas mov enter (bad) ljmp lea shl mov add andl cmc mov pushl and cli cmp jl jmp mov lcall jge or jae jmp out cmpb or bound mov or mov mov mov mov add dec ss cmp jne sbb push mov pop adcl sub lret cmp jae push adc dec jge push sbb cmp push pushl ja stos and add pop lea int3 aad add adc ficom add adc out push pushl mov and pop (bad) ljmp jle push mov mov mov add mov lea shr or lds clc decl mov shr shl ret cmp jecxz,pn stc add repnz shl (bad) mov or fisttpl shr or pop mov mov dec aam mov sub xor lcall and sbb (bad) or or push mov mov lea movsl movsl push inc (bad) aam outsl add outsl lea mov (bad) in pop adc push gs int3 rorl mov and xlat (bad) incl decl jne xor pop cmp jne mov dec call mov out (bad) aam mov shr shl or popl lock loop jmp jmp mov jne addl xchg jmp lret pop mov mov insl sub cld loope inc movsb push push sbb jl rcrb push call cmp fcmovnbe mov mov in inc clc mov mov mov cmp fmuls out clc (bad) pushl stc or stc or out add mov inc in xchg (bad) incl sub xor sti cmp push mov sbb cmp aam mov movsbl sub je fisttpll adc into fstp jne les mov pop jmp and mov sahf dec mov jl push jle incl lcall xor in (bad) out incl cmp jle inc jle cmp jle fstpt jg arpl popa dec push pop fsubl fistl or mov (bad) call or jbe out dec jne sub call cmc or movzbl mov or pop jne add push hlt mov and push (bad) sbb lock mov hlt incl sub incl add inc clc jmp aas fldt jmp addr16 mov pop sub pop ss mov or repz je add adc jo sbb mov outsb mov shl cmp sub jbe jb jne aas push xor pcmpeqd fdiv push lea xor dec adc dec xor shr (bad) push jmp mov int3 add mov pop or imul icebp mov fnstsw jg push pop dec xchg sbb xor popf jecxz push divb lea and je (bad) mov jne push pusha int3 std dec mov call cmp je loope inc fiadd sbb movl sub mov lock aaa push jl push sbb fwait mov je out mov inc rolb add mov jne dec (bad) or rorb add pop test cmp shll incl jbe cmpb jl incb jp dec test sbb jmp or add xchg sbb sbb lea push mov pushl je jne fiaddl pop lret in leave add cmp jge neg add out (bad) incl cmp jne add cmp jne sub cmp add minps push lds frstor fstpt add xor movl inc lock cmp inc sarb jmp (bad) jmp mov jne js add mov mov (bad) out inc mov mov jl mov (bad) xor xor xor jmp or in mov adc mov dec or inc fcomps jno mov mov mov jg xlat inc in mov inc add inc add int sub inc add add test xor cmp sbb inc adc (bad) or enter loope and test push movb movb out call jmp out sti sti pop xor movb (bad) mov inc add ja mov xchg push test jne cmp jne data16 sbb add movb movb insb pop in cmp jne mov testb cmp jne add (bad) adc out (bad) inc jne push jmp xchg je cmp push jmp outsl test jne push and sbb arpl test add push push push pop jmp movzwl mov inc lock and sbb adc add out or (bad) pushl aas push lea mov imul mov lea inc sbb out test (bad) adc (bad) neg fdivr aaa sbb shlb jge (bad) aas jb lea (bad) pushl pop pop testb mov je mov xor sti clc test jg nop sbb adc pop movzwl sub out aas add jl add inc sbb call aaa fcoms outsl decl pop jne test jge neg and out incb jne lea testb push mov out sbb movsl movsl and jnp arpl dec lea sahf pop adc mov mov andb add add sbb dec jg adc adc add mov push dec cmp lea (bad) jg cld jl cmp jb roll movb dec jmp cmp jae inc incw xchg mov (bad) incb sub sub mov movsbl andb ds mov das or cmp jne dec jmp sub add andb jmp add iret push push or or je das stos orb mov mov mov (bad) lcall add es mov je or je inc inc cmp jb cmp mov add out clc or (bad) cmp jne dec jne xor cmp je inc mov add jbe in neg test notb push push cmp sub mov (bad) xor (bad) jmp mov mov mov or mov je or je inc popa adc cmpsb add out call jne dec jne out je jne add adcl pop xor (bad) jg add mov call jmp iret push inc or ja or jmp cld push ja add add cs push push jo testl xor adc es dec add jge and jmp mov cmp decb add dec cli or sbb jb ret pop popf add je add je ljmp mov pop movaps or mov test pop ja mov jmp xor test je sbb add mov push add adc jmp jb pop add xor xor add lds jb mov cmp call es or push inc pop xlat jg ret add pop ret push push push sti (bad) jg push mov push xor mov cmp je mov push add call rorl ds lahf loopne movsb cmp pop ja push push push push push pushl mov xor push pushl inc sub mov jbe inc cwtl pop sub add inc pusha negl pop ret scas jmp push and mov push mov mov xor loopne sbb in mov mov mov ret and je cmp add aaa lock jb or subl sbb sti std mov mov cmp sarb jg sbb test xor cmp jne add push jne xlat and xor mov jp adc cmp jne cmp jne mov inc pop fidivrl aad (bad) (bad) lcall mov movl lock cmpl jle add lea push jne mov orl jg clc mov movzwl movzwl imul mov add push push pushl push cmpsb ret lret push cmc icebp (bad) decl subl decl jne addl incl decl jg aaa lret or jg addl or jle testb jne pop (bad) adc sbb ficomp jbe andl adc pop jge movswl neg add mov testb je in jo std popa inc popf dec pop jne cld decl add jnp (bad) (bad) (bad) (bad) incl add jne cmpl jne andl cmpl jne andl (bad) incl pushl xor inc out sub incw jmp incl pop add loop (bad) fdivrp cmpsb jae mov or (bad) jmp push mov mov mov mov mov jmp neg sbb (bad) xor add addb andl mov (bad) xor pop or mov (bad) cmp adc jmp pop arpl or subb add pop add push adc or mov and push xchg or and decl je lea cmp add or jge movsl movsl movsl incl addl dec (bad) lea aad jnp push inc divl leave jne,pt pop inc jo adc rclb ret xor mov pushf insb inc inc add or std je cmp je adc adc cmpsb push scas add push mov or je cmpsl adc pop inc mov es xlat xchg orb mov sub sbb loopne mov add add shrl andb test je aas adc pop mov test (bad) (bad) xorl je pushl lods lea idiv xor pop mov test push push push add xor jl ja jmp pop jne push mov mov push push push push call (bad) fstl or push mov sbbl test movl adc repz fwait adc ficom pop lds jmp cmp jle ljmp pop push add push shll jns sbb (bad) cmpsb (bad) or adc cmp jne mov dec and repz ljmp dec cmp jne push iret (bad) aas push sub cmp jle mov cmp jg lea push incl orb test (bad) mov cmpl jb lea cmp je mov cmp je aaa inc std decl cmp jb cmp jbe inc xlat out add pop mov jmp push xor push xchg popf xchg mov or lret jle (bad) pop jmp loop daa pop push push shrb (bad) ja les mov cmp or arpl addb or sti (bad) ljmp pop jb jne push pop cmp je or pop push pop mov cmp (bad) jns xchg jge lea cld mov sub jge cmp icebp (bad) jnp xor adc je push pop sbb jne push fiadd mov and rorb add mov shr jg incl pushl je inc mov dec test jne or mov add ret mov cmpsl xor pushl jno je,pt push (bad) fild in shll mov je cmp je mov insb clc pusha add fstpt pop add xchg ret cmp mov (bad) mov mov push cmp je cmp jecxz insl push je mov adc fisttp test (bad) sbb mov cmp add xor sbb cmp ret sti sub mov add (bad) (bad) (bad) nop popf test pop jl cmpl je test je pushl lea mov lea inc add shr pusha adc clc mov shl mov lock ja cmp xor jmp test jne mov add fimul fdivr aaa icebp cltd daa je or mov add loopne bound cmp insb inc inc push jbe dec (bad) jg fistl add in mov pop sub pop add andb imul fistpl fcomi shll fcomps pop faddl stos mov sub adc das cli loop push sub push lcall ret adc mov mov mov cmp je pop rcl mov sub cmp clc add (bad) jl sbb lock xor test or sbb jae ret sbb mov or cmp mov push push lea je lds jmp aaa test pop mov mov mov push add sub or mov jmp loopne jne lds pop pop lock inc adcl ret das or lods mov clc pushl dec mov mov sbb mov (bad) and and sub cmp ret mov test je clc outsl loopne sub mov iret enter mov mov push mov pop popw push test mov or push push pop adc call jno das cmp sti std es sub mov push or insl jp adcl jne adc jmp cmp dec in adc sbb adc pusha pop xor jle arpl add inc add mov shrl sub ret push leave (bad) ret mov xchg testb pop jne orb pop adc mov sub push ss or in add jmp xor or sub sub mov fucom lock and int3 jmp fistpll and jmp or test aaa aam sbb je ret pop nop lret leave mov or (bad) dec adc (bad) aaa inc es or add jbe lcall out push sbb mov mov push mov (bad) cli (bad) and lea movl inc in or daa inc jo incl insl enter adc mov je adc mov xchg cmp xlat std aaa inc faddl cs jle add or push jbe daa mov mov push mov inc fist inc insl mov xor inc add inc cld push (bad) add inc xor inc loop enter rorl adc mov sbb dec mov mov push add sbb lock lahf xchg add pop leave cmpsb out pop xchg pop (bad) mov out mov hlt insb pop jae stos jmp movzwl in pop cmp or movzwl push push movzwl push lea sub cmp (bad) fs cmp push push mov (bad) adc cld (bad) sahf adc sbb clc adc adc popa aaa loopne sbb add fisttpll add ret leave sahf fadd add lret js sub mov aaa xor insb push icebp imul inc test sysenter inc test mov mov hlt xchg inc dec aas js jbe mov das out inc nop adc sbb cmp (bad) icebp pop ja pop push push mov dec push push push lea and out iret aaa loopne or out cmpsb incl mov push push pushf push xlat mov mov xor mov sti fstpt sti jne fs pusha pop aaa les sub pop or pop pop xor mov mov cmp jne mov popa lds push push mov popf ret aam xor subl ret (bad) decl sti jg mov cmp (bad) xlat sub lea push and (bad) sti pushl and sub push lea comiss pop pop jmp xor out mov or clc add adc xchg sarl shr adc push pop popf int3 std mov jl mov int3 mov iret cmp lds lahf in jnp clc sub lea jae xor (bad) nop ss fidivrl mov aas daa sbb scas es push scas in inc mov in inc adc in jne pop or sbb mov not test je ds loop mov add pop jle jle lcall pop mov add lret or jle jl addr16 cli fldpi sub jnp call xor sub in bound fadds add cld dec push test decl adc ljmp xor mov push and mov mov decl mov cltd add mov mov mov mov test mov je andl jmp andl sub ficompl mov loopne rcr icebp add pop xor mov mov mov mov clc adc xor pop test mov jne pop (bad) xor mov nop and dec add aam or fist movl movl out mov adcb dec into sbb xor insb add pop add pop and je xor add xchg push push fs or mov adc pop pop scas inc inc test or jnp pop adc hlt jge adc pop ret mov sub dec fbld aad inc leave pushf sub cmc xlat (bad) push pushl pop push cmp xchg sbb lea cld call dec test lea jl inc mov aas sub dec inc aad (bad) jne mov or dec adc outsb pusha or add xor sarl mov xor shr divl or mov mov adc shrb or jo mov jmp xor dec aaa hlt (bad) sbb test push je sub rolb cmp test je cmp je mov jmp mov jp icebp dec enter scas fsubs icebp dec xor mov into mov call mov sub jg push or jmp add pop add inc jb xor mov xchg xchg lea (bad) mov mov jbe shr mov pop xor mov cmp frstor setb cmp jne mov test aaa insb push jbe test xor cli jb out push mov pop or jg out (bad) repz cmp jae sub push or (bad) jb fisttpll (bad) adc jecxz pop hlt adc pop mov pop sarb mov add add lock aaa imul (bad) repz xor mov into push decb pop jbe call inc adc call out call rorb add mov mov dec je sub je (bad) (bad) call xor push cmp mov jne cmp jne inc adc jge jmp inc add sbb mov push push jmp push adc adc adc jmp push test psraw mov test jg cmp mov sbb mov call test mov mov sbb adc enter (bad) out or loope or or push and rorb pop setl pop clc push jo repnz (bad) xchg mull add je mov dec loop icebp movzwl daa add push call sub icebp into das add outsb pop mov cmp je add adc lock and pushl fidivr add sub call jge adc shrl inc and loop je movsl and mov pusha xchg mov stc cmp lock in or mov or (bad) add xchg mov decl push push push push (bad) (bad) jg adc lcall add dec mov or mov je or lret or push adc frstor aam out out adc mov and jb mov cltd cli pop ficompl add push push xor mov in sti je lea push add mov cltd inc imul adc out push or push pusha adc xor xchg (bad) out scas (bad) arpl daa mov cmp (bad) fs dec adc dec push dec or sahf xor lcall arpl cmp je cmp lret adc (bad) (bad) out dec jne xor jmp mov mov cmp jne cmp jne cmp je xor lock sbb pusha mov rclb out jmp add push xor push cmp push jg sub sub std inc sbb lds cmp gs sbb push pop or push pushl mov push or (bad) mov add cltd cli enter out pusha xchg mov test outsb sbb pop fcomps jle cmp je cmp and iret push out call jl int3 jo jne push sbb dec adc adc cld jnp packsswb lds imul mov orl (bad) adc cmp int jo shll fdivl dec add xor divl pop sbb mov add push push mov call ss clc pushl cmp je mov add mov cmp jae push push push jbe pushl lds mov cmp jne jmp test cmp out pop je mov mov cmp je ret push ja add jmp pushl adc jae call (bad) fnstsw add pop pop jp jl or aas mov jne pop cmp loope jmp test mov pop cmp imul and xchg jecxz fisttpl (bad) je jg outsb jbe pop nop outsb pop pop (bad) fist jo enter cmpl jecxz clc pcmpeqw push pushl call jns sbb mov jne test jge cmp pop xorl (bad) pop pop mov insb push call jmp push sti mov xchg mov jo call jmp push cmpl pop jne cmpl jne mov shr test jne mov repnz adc (bad) test jl push or push jmp add add add (bad) sbb and or repz mov je push cwtl mov dec dec je sub xor cmp add cmp mov loope je pop (bad) push dec lock fwait add inc inc cmp je add cld and cmp je and flds cmpl pop stc sbbl aaa push jne push push push mov mov adc cmpl mov jae push sbb cmp sbb les pop or mov add clc cmp je xor cmp leave ja push mov cmpl add push lea pop movl movsl mov mov dec test mov inc mov in jecxz test sub push sbb inc and mov mov push or adc xor decl push push lea push push push lcall addr16 popf pop cmpl push xor jbe jne pop mov inc into add decb pop xor dec push or dec adc push sbb mov lock ja pop dec gs add call fbstp mov push test pop aaa mov mov push jae fisttpl inc sbb clc sub je repnz sub je dec je sub je sub cld mov dec jne mov xor add push adc adc pop jnp (bad) sbb inc pxor fdiv jmp or das jne inc jmp sub test out sub ds je dec je dec je push pushl ja (bad) insb push adc inc or inc mov mov (bad) fstl xor cmp sete dec jmp pop fstl pop jmp data16 ret pop pop mov (bad) push push push cmp sub jne xchg cmp fwait xor lea loop add jnp loop (bad) (bad) or mov mov ss call jecxz test add mov jbe jno adc loop je or mov inc or addl add and enter push data16 cmp pop insb push mov inc fs scas sti decl or mov aas jmp test cmpsl incl fmuls mov shr mov jne mov iret push roll mov sbb repnz dec dec mov pop ss pushl pushl push jo (bad) xor aad cmp lds adc xlat mov rol dec pushf add jge das adc enter xchg cmc pop jbe mov out decl push mov out add popa sahf in cltd add and push je cs pop inc dec inc lea fwait rorb mov push or add pop lock cmpl adc or or roll std or negl dec sbb push std push mov mov loope add or push jo rcpps jmp cmpl push push jne mov call sbb xor add push mov mov push cmp leave jne push sub les pop fnstsw sbb mov enter add push ds and lods add (bad) hlt jmp push inc push jmp mov mov pop pop xor xchg test je lcall sbb les pop (bad) icebp xor xor cmp arpl fmuls lcall cmp fstl clc jne cmp mov fdivrs pushl sub xor adc xchg icebp sbb test inc mov push mov lcall and or test mov inc cmp pop jmp sbb push subb outsb jo or js xchg add orb mov sub xor push inc pop jne and or jne out jo popa repz lea or dec and mov cmpl jl mov add inc add push test jmp mov aam scas mov pushl popf inc mov movb fadd inc out inc push mov (bad) or in pop icebp ret push out pop ret push jmp aas mov roll inc push mov xor push push xor pusha inc dec xor mov xor jge mov sbbb hlt iret (bad) fwait lcall divb out jmp push push clc ja ss jg mov js jmp mov pop add idivl mov pop cmp sub mov cli pop pop jmp lea inc addr16 mov (bad) aas add andb mov add mov aaa push push push xor pushf std cmp inc cmp push dec outsl push addr16 inc arpl mov pop fsubr jbe nop es clc dec roll dec hlt cmp shrb scas sub flds call adc pusha pop fistl adc adc mov adc mov loop (bad) aaa cmpl jle mov clc mov mov push std mov inc push push int les and inc mov inc andb cmp jle xor fadds inc push sub adc cmp pop test xchg fisttpl ret mov or mov mov repz push xor hlt mov xor insb push push push lahf out loop lock xchg pop cmp mov cli sti out loopne and push sub push andb test mov sub dec jmp movsb mov push sar xchg inc test push test mov je loopne adcb jge add into push cmp inc mov inc adc add hlt data16 add imul push adc test mov sbb sub push fisttp les cmp and test (bad) out mov js add mov lea cmp jg push (bad) mov add cmp push int3 lahf in and or call and push sbb mov push push pushl scas inc sbb pop push call lea dec cmp xchg mov dec and add pop xlat adc or sar xor jle push mov cmp jge mov and dec push pop inc xchg lea push lea push fdivrl out pushf mov mov pop lods jno add add outsb or ss pushl call mov pop mov subl loope (bad) mov enter int3 pop and call or or repz push add push push (bad) and sbb (bad) jg cmp jle mov pop pop ret mov incl add push cs cmp sub push push jbe inc or gs mov mov call daa lds in sbb iret pop mov ret mov mov push aam or lret pop shrl (bad) lea and jbe sub sub dec (bad) out daa adc dec and je mov jmp push lock loope push test adc fmulp add mov std mov ret add add jle xor xchg xlat pushl jo in add mov lea push lea push mov movnti pop outsl addl and cs add pushl sbb popf fidivrl xchg call aam push push ret dec insl mov lock ja ja mov mov out bound sbb fcoml sbb mov or inc inc sbb inc sbb sbb sbb dec cmpsb jmp das pop adc fwait cs pop ret adc sub ss push fs sar mov orl daa jb and jae mov cmpsl mov cmpl enter addl pop sbb pushf mov pop stos ss enter cmpl jne (bad) mov ja or dec jno xor jge mov jo ja push or clc or sbb sub rolb mov mov cmc pusha mov aaa mov add jno push out dec cmp add adc sti shrl xor dec orl nop push mov mov test cmp lds add xor mov dec mov cwtl cmp enter xor decl dec or (bad) mov mov or mov jmp lea push movl xor movb (bad) enter inc pusha (bad) aas push push sbb xchg lea push push push and jb pop les inc scas sbb sub aad inc out js cmpsb (bad) pop mov pop inc mov inc adc push jne mov and jne jb inc or or dec popa in outsl ljmp hlt jne push sbb rorb popa xchg sti push push and int mov or clc imul int3 mov pop sti jnp (bad) jne andl fdivr (bad) incl bound mov test mov jne and jmp mov stos jmp inc clc push leave push (bad) cmp gs inc pusha jmp (bad) push jne cmpl or jle pop out inc jne mov cmp lahf ds adc jge data16 call je popf push add push sti mov (bad) pop pop xor push dec push add jge pop sbb les ljmp fsubrs pop lea lea sub decl mov mov or cmp mov add incl mov mov mov jne mov push add push (bad) shrl sbbb jne,pt lea or add imul popf add addb out cltd sbbl inc or cli addl dec sar call push mov mov add (bad) xlat xor (bad) add jl in lock inc pop mov mov in push lea pop lea mov mov pop or ret push in ja loope ljmp inc inc call enter pop call dec dec mov lea mov mov jg pushl mov mov pushl pushl in or lock ret mov jmp jne imul sbb incb inc push push dec add mov mov cmp scas mov and mov inc sub inc sbb pop sbb scas sbb (bad) fild push push push dec imul push mov push add scas loop dec call add and xor addr16 dec loopne add sbb or test outsb and clc push mov mov dec sub add cmp cmp push mov sbb sbb or pop lock xor ret andl xchg jp ret ret movl fldl (bad) xor sub aaa pop cmp jne (bad) dec inc xor jmp adc cmp call add jmp mov je sub push jne or scas mov xor push ret adc sub pop je sbb test fdivr pop jne call mov jne sbb dec fcomi in js add mov fwait mov push mov pop pushl ja rclb add mov es ret call das mov or call adc pavgb pusha jb adc jmp dec adc adc dec lcall clc ret rolb dec fistl dec fistl jne clc cmp (bad) add test je and xchg leave dec push push (bad) xchg inc pop mov mov sti ss adc push push icebp loopne push insb jle mov dec outsb pop pop scas push push push (bad) pop loopne mov dec mov mov mov idiv btr pushl and cmp cld adc jmp pop (bad) mov or xchg (bad) (bad) decl inc jl popa enter repnz mov mov pop loopne rep mov add pop or test std sub push scas pop in push cmpsb or jo mov bound adc pop cli clc test jne testb paddusw fldl jne in pusha rorl outsl loopne enter add add jne lods mov mov (bad) test jne and lock or pushw push call adc js sub lds lret test je arpl xchg pusha push push push sbb pusha cmpl ljmp cmp hlt adc je cmpl je cmp fcoms dec adc lock scas paddsw dec shrl push sti call mov jne push pop inc call out adc and adc dec rorl mov fmuls mov mov andl jmp je out lds dec data16 cmp mov push mov push fild fmuls adc stos and call or cmpl mov jne mov or arpl jbe arpl (bad) cmpsl lock je adc jno in xor data16 pop movd out dec pop sub and cmp je cmpl stos frstor jo add mov js,pn test inc (bad) jmp cmp add inc sub or aas cmp xor rcrb add sub inc push inc xchg xchg sbb inc clc aam inc inc mov sbb shll jno and daa in inc loopne inc sub sub fadds jns lea mov mov mov mov push orb cmp out add push sbb shr sub or call pushl pushl pushl xor push jb lock aad and clc and fs orl popa dec test setne pop les jg decb pusha cmpl jne sub inc sub xor iret inc and imul test push std (bad) jmp mov pop mov adc ss jg mov sub sub push push add sub jmp or clc push cmp sbb mov inc inc or adc jp sbb incb cmp push je cmp (bad) mov add mov add mov inc loop or jo jne andl loopne pop mov mov pop fsubs andl test add inc lret sub mov cli clc xor cmp je cmp repz ret mov sbb cmp jne lcall and xchg lahf clc mov cmp jne jg out decl xor lret je mov push test pop je ljmp scas jbe pop and dec inc mov fs cmp je push lea push inc aaa add das or pop aad push movl out add mov (bad) cmpsl pop das mov call mov test jbe cmp ret jne cld rorl je sbb bound pop and (bad) pop mov sbb mov mov jmp movsb add add fmuls inc int ret xor mov mov or inc cld or jge add fdivs jno loope retw pop pop outsl dec mov push jl ficomp stc lcall mov xor jmp and push ffreep push or lea fmuls inc ret aaa inc xorb add fucomp or shrb fstpl loope mov mov and into xor dec push inc sub mov je test je push call push test jl mov push xchg nop faddl push in mov in loop ja jae gs (bad) pushl loopne jg fist (bad) leave je cmpl jb jne in decl add orl jge push out enter andl push les jne orl cmp cli and lahf clc pop push mov pushl jae mov push je sbb push pop rcrl inc xchg dec inc pop mov fs sahf or icebp pushl es jae and inc or cltd ljmp and push test or out cwtl and pop and push mov add mov cmc fs add orl or pushl call aas psubusb incl xchg add jae cmp jae push cmp jmp and cmp je inc cmp jl jne push add ret jae jmp adc shl (bad) incl sbb dec push jne pushl jmp push call aas mull inc imul into hlt aas adc pop mov push push push sbb xchg or pop or add xor xchg enter jae out or inc enter push pushl pushl call and in (bad) leave inc cmp inc inc nop lret dec sub lcall std nop lret xor xor call lea pushf cli incl movb push push mov call jmp rcrb out faddl pop fwait add fstpt roll out dec call sbb sub (bad) mov dec hlt sub cmp jecxz or add es xor or ljmp push xor or or nop in test or lock out sbb push sbb xlat sbbb call pusha bound (bad) mov and adc je aaa mov fdiv push call jno inc jmp (bad) gs (bad) call pop jne push push push addr16 sbb xor dec push push or mov int3 leave push mov rorl (bad) (bad) (bad) incl sbb add jmp cmp jne cmp jb cmp ja mov push add or add lock cmpsl mov cld push mov ret adc add nop or push adc inc mov int clc pop xacquire add jl out call pop or cmp jo pop adc mov test aad faddl ja jmp mov mov lea push out std adc iret call sub cmp sub scas mov cmp jne mov (bad) add ljmp sti and mov shr push movswl add call cmp das push dec or fdivrs and push xor aas idiv (bad) call mov lea cmp lea mov jne mov (bad) cmp jne mov push mov fwait add inc subb mov add add add jb movsb clc xlat mov or push cmp and lret addb in xchg addr16 mov inc adc jmp mov sbb push je lahf inc adc lahf sti fwait xor cmp je rcrb dec push faddp dec ljmp jne gs xor mov inc dec add push cmpsb add fstl add mov adc or push mov cli mov jne call jg add shlb shrb cmp ja jmp mov mov cmp pop push pop in mov dec insl adc dec fistl test (bad) clc out pop pop lahf lea sbb inc add lea mov mov adc scas jbe push movb mov adc popa add inc mov adc jne lea adc fmuls scas or fmull andl andl add pop adc popf ss jmp add or sub mov pop (bad) iret movl cld decl sub aam jne mov ja dec iret pop jmp dec push movzwl push pop lahf push push cld jbe (bad) rorl pusha sbb jo mov and or bound into or test cltd into jge stc adc lret outsb push push xor mov xchg rcr popw outsb pop into sbb cmpsl pop pop ljmp add push lahf jae adc jmp std cmpsb xchg jge dec fucomi iret fs adc out adc mov and pop mov jbe lods jnp cmp por adc lds ljmp or nopl int dec push push jmp push cld and push pop jb ja jmp ds fstl mov lcall sub xor fisubr dec addr16 into jo and loopne jbe add or inc pop (bad) pop pusha lret in pop jmp out aaa rolb or cs adc inc add jl je jnp push outsb inc add scas jmp adc sbb ja xchg add out fwait pushf mov add jne (bad) jne loop lock push and (bad) xor roll cmp popa jmp xlat or pop cltd pop cmpsb add cwtl sti sahf adc outsl add sub and mov roll lret movl lret aad add (bad) pop rolb loope or into roll inc add in sub lock movzwl jbe ljmp lea dec pusha clc outsl mov cmp call jge call loopne cld or pop cld je xor push or xor cmpsb andb cmp sbbb inc sbb or je arpl dec push int sti jne xor jmp mov inc (bad) (bad) mov call testb inc or lret int3 inc push inc test sbb divb (bad) mov push movzwl or and cld mov mov (bad) pushl push push test je in je add ljmp push lds adc pop icebp sbb jmp mov stos lret cmp add aad sbb je mov addl jmp push push mov rcrl test or rcrb js pop adc push mov jge packssdw mov pop pop push fldl lods push push sbb into jmp pusha dec je sub adc push mov mov jmp shll (bad) inc jne call mov mov clc jmp adc jb jne add fdiv push jne and les jmp cmp aas testl jmp testl push (bad) outsl cmp icebp jmp test adc push je mov dec pushl orb inc or jge add arpl dec aad call movsb fbld cltd jl add cmc cmpl inc cmpsb incb jne and push add loope je,pn adc adc mov jo rclb mov data16 dec xchg mov mov push mov inc hlt adc faddl (bad) xchg je jecxz mov into aam xlat jmp inc push enter arpl stos pop cli or adc das mov mov cli sbb mov lea sub add inc lock push fmull mov fcoms je (bad) std or inc push pop mov push lea les popa fdivs mov (bad) clc or lcall push push jg movsb sbb loope mov xchg xor je out stos decl lea push xchg rcrb jo or decb cmp rcrb (bad) add out or pop pop pop cmp in sarl ljmp inc cmp jb jbe cmp je cmp gs rorb push or (bad) lea insl loop clc push xor or add add dec xor jmp push sbb mov pop inc cld mov pop je mov jmp cmp outsl loopne cmp cmp cmpsl cs adc add mov jmp cmp sub (bad) ja fistl jge lea notb push cltd mov add aaa pop jne fisttp jns add je or cmc enter jne push ds arpl lock scas inc and xlat ja add mov jne add pop daa push fimul stos add je mov or sti push xchg (bad) sub mov or sbb (bad) or dec movsb pop add rclb push sub adc mov scas jle push mov rcrb int3 fnsave inc adcl adc dec out (bad) push and adc in js cmc fldcw andl mov pop leave sbb mov adc test inc mov cmp sbb fnsave loopne or xlat jbe arpl ljmp add ljmp clc or cmp call test jl ds in sub adc and sbb mov fstpt pop lds pop loope,pn data16 push cmp jne fwait pusha mov sub ret jmp loopne lea cmp sbb mov mov stos mov in sbb aam inc mov ja mov lea ljmp call mov push jmp fsubrl insl dec sub iret jo insb push jo mov icebp je push lock clc add push cmp je test aam dec or jmp cmpsb (bad) cmp push push or mov call sbb inc pop cwtl mov push je rcrl dec leave ret fidivrl icebp push pop push inc fnop mov jae mov jmp testb je clc inc movsb lods pushf jmp or inc sub js imul loopne addl mov mov xchg call inc jne xchg test je push sub (bad) jle mov adc and incl sbb sub outsb adc gs add add mov add rorl inc enter out pop or jmp enter shll push push xor fisubr cmp sub (bad) fisttp (bad) sti xchg jae push pop enter push stos inc icebp ljmp mov mov add sub mov sub sub mov mov or sar sub mov outsb div inc int3 add adc mov push sar adc cmp jge (bad) lcall mov add cmp jle sub add mov cmp sbb (bad) (bad) mov add cmp jle mov sub add push push push push push mov arpl mov add ret mov and add inc sub test data16 (bad) je and mov jge dec shl mov call push mov loop lret pop mov or cmp or sar rorb add xlat or inc fwait ret xor mov xlat inc push lahf inc das push adc mov xlat xor pop inc jl push push idiv adc out jne jo mov and xchg jne call sbb sbb es fnsave adc ficompl pushw or or xchg mov int3 (bad) pop cmp in scas nop lret sbb shlb inc or ja lods pop outsl and sub xor daa jb pop xchg sahf fsubl pushl or testb mov mov adc in pop hlt je xor fdivrs leave xor jle out (bad) outsl push pop xor je orb daa and iret fnstsw dec and and mov pop mov inc inc insl out fistp xor add and jp add (bad) (bad) (bad) and mov sub insl or test push in or je push push dec ja jbe sub or push adc push pusha jp dec and or leavew mov sti andl je push pop adc out sbb cmpsb xor sbb add mov sbb push hlt cmpsb xchg iret int jne and out movl js xlat or rclb push push cli (bad) movaps or shll push inc mov xor sbb sbb int3 inc or cltd and sbb jge add leave sahf fwait jne add fcompl ret xor dec dec or nop sub cld mov (bad) pushl mov mov and cmp jne or or mov (bad) pop and pop pop sub sbb inc dec mov aaa sbb cmp je cmp cli push add xor sbb xor (bad) pushl cmp popf mov push call push mov push adc inc sub push fdivrl mov cmp int3 jl jns jmp adc or inc mov (bad) mov inc or xlat cmpl mov call add jnp cmpsl pop insl and nop movsl sbb pop jle ja sub sbb call sub adc in push aas add sbb test (bad) (bad) pushl sbb out sub xchg jbe sub incl data16 rolb cmp inc or sbb (bad) push lea inc jecxz pop fistl aam cmp xor frstor outsb mov fistpl pop ja jle dec xchg mov lcall rorb or pop cmp and (bad) dec nop lock sbb push in push mov xor mov cmp je (bad) mov jne xor lahf inc push je mov in (bad) je mov push add push mov sub pop pop sarb or cs mulps sti inc jb lretw add test mov mov popa mov sti sti es add pop jae cmpl add daa insl mov aaa xor mov lea es popa cli xor inc or adc lcall mov pop cmp pop pop setne ret add push arpl lods jle push lea movsl xor jle inc (bad) call xor pop mov dec sbb pop push movl nop cmc outsb ljmp mov jge pop jno mov mov or mov leave fs mov test mov mov jne xor xor adc mov add and loop dec and decl inc mov add cmpl jne mov jmp jnp (bad) ret dec cmp mov add pop xchg orb hlt in mov xchg inc push mov sbb ret mov push addb ret mov and jle clc dec out xchg test je jg scas subb inc clc je push lea (bad) arpl and in inc clc stos xor pop add sub add mov cmp ss add mov pop (bad) xor ret mov ds inc rcrb add js and adc or rcrb shlb (bad) lret mov fimul push adc nop inc insb jp push leave je sbb hlt xchg push mov mov mov add mov add mov fwait inc and lcall adc in cmpsb cmpsl maskmovq notl (bad) data16 push pushf notl adc pop jne push pop nop adc hlt and adc addr16 push rcll adc add aas xorb or je clc pop inc clc ret mov mov mov add and cmp inc and mov pusha adc add jne push or orb pop add jb add xor scas test popf sub sbb je (bad) loope mov je adc push add clc mov das inc cmp and push pop add fwait push cld mov aad hlt test movsb mov and mov stos sub shrl add rol jg add mov xor push mov pop popf mov mov cmp je rcl or add cmp sub dec or pop imul aaa icebp or call mov push das inc push or cmpsl cmpsl push mov xchg imul fst add xor sub inc mov mov dec je push inc add push inc cmp (bad) xor mov xor push mov aaa xor test je mov mov flds cmp test sub jne enter ret and or xor stos int3 cmp sahf jo push jne lret push paddd mov jb lea push lcall adc sub (bad) jmp ror cltd cmpsb clc pop pop mov mov sub dec js and cmpl jecxz jo ret xchg cmp insb cltd stos out out lret push loope mov test fsts mov add stos call loope lahf inc push sarl pop js add add adc xchg push jb jns jns xchg xor jno jp mov pop dec enter xchg adc mov mov dec cld decl cmp jge mov mov xor js jmp or mov cmp loopne sbb lret mov add jmp lds (bad) into mov and jbe adc mov inc pushl mov jl out pop jae inc mov inc inc add cmpb pop xor (bad) jae movzbl jmp mov jge sub inc cmpsl jnp or ljmp (bad) pushl cmp jmp movzwl iret (bad) xlat jnp push cwtl xor sub orl or out hlt pushl cld lea imul jmp and int or dec stos add jmp mov or jge lea push pop inc pop rolw aas push add dec or add dec movsl and dec cld push andw loopne or iret lea jle xchg fadd inc adc shr leave lret push mov adc aad fnstcw inc and decl jg sub cmp jae mov push dec add add cmp add fistpll ret xor divl mov mov cli andl mov lods jg ljmp xor inc or inc clc sub test jbe xlat ja sub sub pop clc cmp jne call inc mov mov cmp ja add inc sub inc clc mov jmp clc inc add inc or (bad) jg jbe cmp jb sub lea mov jmp xor jne (bad) jle push mov push pushl call adc pusha aaa andl lret andl sbb test push inc cmp add loopne jge or scas loop dec and cli and push cmp sub xchg lahf add push mov jbe popa sbb add sahf lea push (bad) fnstsw add push sub out ret push mov call ljmp and push sbb (bad) jle pop or jne cmp je sub mov call jmp ja mov push sub mov push push push call pop adc add push cs xor jno mov sbb sub sub stc add hlt fbstp pop jg enter (bad) jle push xorl push add adc out clc or fild into push push incl cld add sub leave or (bad) mov hlt incl jb dec imul sub sub cmp int3 ljmp push push dec and push stos add push mov sub sub pop pop cmp jae je fwait pop (bad) adc (bad) cmp mov jae lret inc lock sbb cmovs xchg push lea icebp in loope and (bad) (bad) pushl (bad) scas clc mov sbb addb popf stos roll les test mov je ficom add or mov inc out lea inc fwait cs dec cld fcos js add push sbb mov addl (bad) sbb mov lock mov mov and sbb lock mov inc decl mov ljmp addr16 pop mov (bad) mov sub dec add jle fwait add push arpl inc or mov add imulb aaa cld add lock push icebp add in or lcall cmpsb jo call and cmp inc and ja test jne call int3 or call (bad) aas pop mov inc or call xchg stos out push jmp out pop mov push inc sbb lcall adc inc lock and addr16 adc ds scas pop pop push js add mov xor add roll mov adc jb mov push lea sti cld call sub (bad) push adc xlat sbb movsb (bad) cwtl or and int3 or mov stc adc (bad) ja aad or sub adc shr and jmp mov dec jne aaa rorb cmp pop aam aaa aas sahf pusha xorl aaa (bad) decl add cmp ja pushl aam jmp and or pop jmp sub sub push adc loopne cli cmpsb rcrl pop in js adc adc jl or mov add jle pushl call (bad) insl frstor pop add mov fsubrp adc mov andl std or mov sbb pusha and mov leave je add push and sub adc fldz cmp decl push pop adc xor lds arpl dec pop aad sbb mov cld es mov mov mov repz or mov pop mov xchg xchg out mov cmc pop add sub je mov lods or push cmpsb out sub test mov push mov (bad) jno ja das push lret xor cmp mov je mov push push call adc pushl lock cmp je lea pop clc je stos popf lret rorb add mov lock mov dec (bad) jg jl clc add cld or or inc adcb jg mov jmp lea mov mov push push lea mov adc or jno bound sub test mov or mov je push xchg sbb or mov (bad) jno xchg jmp idivl shll fcoms test in jmp popf leave je xor pop lcall mov mov pop mov pop push sti push add cmpsl loopne test push loope incl addl mov hlt mov arpl pop adc sbb fnstsw push push test mov jne jne mov cmp pop or incb (bad) je push mov call adc test jne xor mov sbb jb es inc cmp enter das cmp je push push mov (bad) ljmp mov aaa scas loop jg pusha inc je push call ret in and lcall xchg or les fiadd popf jl je cld sbb jmp fist lea push push jns add jmp or psrlw add out xor xchg rcrb outsb mov mov adc mov xor insb loopne adc lods (bad) negl adc xchg mov or mov push pop lock test into (bad) aaa shrl push je (bad) (bad) jg mov jne mov cmp jl cmp jle cmp jl cmp jg lcall sti out or movsbl sub jmp pop xor cmp jge mov mov add fldl sbb pop mov adc mov push add inc call std inc cmpb jne pop or sbbb je mov cmp jne mov inc cmp jg dec inc inc jl movb inc jmp je add jo push (bad) sar jns push jl jmp add cmova push mov mov inc jmp sub mov add inc xor ljmp pushl loope and push test or add out rclb dec sub xchg rorl lahf or ret mov movl and pop lahf lret stc push inc add cmp pop (bad) in out and push lock inc fcom jge adc add js add jle push fsubrs lea jo xchg mov adc in adc movq addb sub jle mov jo mov mov mov xorl daa push push adc stos mov mov or rorb cwtl jbe roll mov mov or inc fwait and xchg add add leave sub scas es mov mov add lahf mov push mov test je cmpl add mov andl pop fisubrl or pop andl lock add ret mov mov jb xor xor cmp xor (bad) mov mov mov cmp adc (bad) aaa inc nop lret adc mov adc jle loop mov push sbbl js sbb dec pcmpgtd jle push mov push loope adc call adc sbb ror (bad) aaa fimul cmp jne mov cmp pop add jbe in jo jle lea pushl in adc or or out incl add mov mov push mov xor inc cmp daa sbb or xchg jbe jmp push add (bad) and test and cmpl data16 add adc inc mov mov pop ret mov mov add mov aad and stc sarb or or push nop lds push test push mov xchg xor cmp mov xor (bad) mov mov jnp mov cmp sub iret push call cmp xor or movl mov mov int3 in sbb mov nop pop push xor lea mov push mov mov mov mov mov mov mov mov movl mov push ret mov pop xor jae (bad) in outsb imul xchg xchg pop or cmp inc push imul inc out pushf push dec pop xchg cmp jns adc sub pop test adc fadd std (bad) lcall and push pop lea lea cltd sub sar out add aas sar jae sub addl (bad) (bad) or or push pop cmp jle stos js hlt pop cmpsl lea hlt sti jg gs icebp inc hlt add add movl icebp mov movb movl inc das mov (bad) mov mov shl incl xor not mov mov mov add ljmp cmp decl jne push push divl push call pop mov pop test mov (bad) mov or ret mov or inc into mov or es mov icebp mov ret push jmp mov fwait xchg mov pop push into aaa sub ret push notl aaa ja sbb or mov (bad) mov mov sub movl xor addb mov add std or shrb sub test (bad) int xor into cmpl push mov xor mov insb inc xchg cmp xchg adc ds es ret sub xchg lods mov cwtl add stos scas gs dec jno cld sarl mov ja sub push push enter xchg add pop testb jnp or aaa (bad) xor cs imull decl aas out adc aas mov addr16 es mov orl incl add in inc lcall loopne mov dec and xor es push sarb mov or mov mov arpl jbe in pusha push pop sub add dec dec ret jbe loope cld cmc mov push mov (bad) mov (bad) xor lea mov int lcall push and sub orl push (bad) aad mov mov mov mov movl sub movl sbb add movl xor cmp das cld dec push jb mov inc and ret lret in pop mov adc mov adc mov lock xchg pushf (bad) cmp icebp add test or xchg das and adc ja out mov add add nop rcrl push push mov dec push fdivl push aad pop inc mov shrl xor push call mov cmpsb or nop mov rclb and sub fwait add pop cmpl ret fcomip xor fldl inc nop pop mov jmp mov sbb or notb hlt (bad) (bad) out ss nop scas icebp nop scas ret push out xor mov test (bad) aad mov (bad) punpckhbw inc add in inc xchg dec dec aam sub les ljmp inc daa add stos orb push or push jne mov pop into jo lds je push mov lock adc out (bad) movl lret (bad) mov ja mov repnz rorb jne ret mov mov xchg cmpsb push ret mov aas push inc ret pop lret loope rclb ja xchg fildll adcb fcompl push jne pop das push or mov xchg pop push out sub or push aaa cli mov push cmpsb add mov mov stos mov inc add mov test lds (bad) jmp jne mov jg incl add mov jmp xchg pop mov push mov cmp je mov add out sub je mov mov ja jle pusha out or call addb sbb fstl jl add mov pushf and fdivl fist inc sbb inc sbb inc add inc sti mov or inc adc adc xor lea push push cmpl push repnz mov pop cld scas mov shrb inc adc adc (bad) arpl xchg movb mov sbb sbb ljmp mov cld xor push xor adc jnp push push push fwait push imul xor add jle std dec jg cmp jge dec testb je pop cmp jle cmp rcr adc add jl (bad) lcall mov test push jne mov shl push push jbe mov (bad) fcomp mov dec out mov push daa adc cmp jp lea clc jnp pushf rcll dec adc fisttpll js,pn adc or sar and jg cltd pop add lea shl push or add mov mov pop cmp jl lea cld sbb or mov jbe lea adc push inc xor push cmp stc lea inc cld (bad) jmp mov mov and pop or mov mov ljmp adc andl mov test (bad) push jne mov pushl andl lea pop pop loop mov ret push xchg add je or aad mov lea cmp jl loop push pop scas jmp jl aas cld sbb or add int add incl addr16 pusha and cmpsb push lea jnp sub mov inc push sarb or push xchg sub add loope push xchg ret xchg jnp rorb push or mov or mov push lea sbb mov xchg inc or add (bad) push movsb arpl or pop mov pop xorb lds aas sbb push add fcos fnstsw loopne cmp jle mov je mov cmp adc clc fnsave cmpl je in jae add add jo inc hlt je lea in push lea fdivl cmpsb xchg inc pinsrw jbe xchg fidivl xchg clc or adc incl sahf or lcall sbb inc enter sbb push sub or sbb dec cli add pop popa adc xchg xchg pop inc push icebp mov jns add push mov inc je fucomip sub pusha add lock (bad) mov fmul std negl xchg push mov mov xor (bad) out pop adc jo jge mov mov push or imulb pushl adc arpl mov notb jge adc inc movl cld dec push add icebp xor cmp jne jne nop mov or mov dec jl add fwait add insl sbb add sbb call jnp jecxz and flds mov inc cld add cld pop and cmp push popa (bad) dec sbb dec xchg pop ret call mov or or xchg lahf adc loope andl xor lock pop add add call fldcw sub (bad) pop leave orb enter call cli inc jne lea push lea push push push (bad) jae mov xchg mov fstps hlt push mov and dec pushl call cmp mov xor (bad) sti (bad) cmp or call mov inc faddl push xor jge lods cwtl jnp fnstsw stos push push push inc andl cmpsb push push sub push mov loopne dec fcomps push dec xor out push push sbb ret mov and push push loopne xor push xor lock scas xor xchg dec xor push insb rol adc jne movb shr data16 xorl adc push fmul dec (bad) aam cltd xchg setns ret push mov (bad) testb scas dec les es push jne and mov enter pop xchg cmpsb std xchg cltd loope cmp add xor add xor stos sarl jae out (bad) sbb push and cmc std cmp das pop ret jmp je decl jne add jge loop adc xlat mov add jg test add push add add cmp xor fninit notl js cmp jne test jle jl adc sbb inc mov jne (bad) out out sub xchg push call pop jne lea lea sbb mov rcrl negl add add cmp scas push sub test popf push mov or inc pushl adc call inc push mov fs inc add out cmp add and test xchg xor push mov fadds movzbl movzbl shl dec push (bad) (bad) out sub dec pop sbb pop inc xor sub cmp mov mov aam decl mov mov je xor mov add sbb sbb inc mov mov mov fisubrl mov enter jg add sub inc cmp inc xor cmp mov mov out clc testl inc adc pop ret mov in out or push jns xor pop or inc call and add xor aad mov in dec mov aad add fwait aas or inc aad loope in xchg clc mov mov push xor sub and add fstp or pop push or lds add jnp sar (bad) call or push call cmp or sub push inc je mov mov mov in (bad) out fimul adc mov mov sub ss loop inc inc aam pop sub ffree and clc mov inc push or lea push push pushl incl cld das sahf adc sbb pop jbe and in push sbb sbb sahf ja fstpt sahf mov or (bad) cmp jne sub cld (bad) lcall xchg push jl inc mov push decb inc js inc js inc adc sahf or jmp and xor mov cmp mov sub dec hlt and pop orl jne movsl push add cltd roll cmc ja adc mov and or je cmp jne jl push push add mov int3 daa or jmp cmp rorl add jae jmp std add mov movsl xor pop aam rolb cs cmpsl adc push jge stos adc in addr16 cmp ret push push sahf cmc mov roll jno int ffreep outsb loopne or pusha add ss out push jle mov lock pop (bad) jo ja cmp xchg rol lahf pop fisubrl pop sbb pop push add adc jle pop lds imul xchg mov js sahf mov testb and or (bad) sub adc cld push add add sub adc adcl mov push fnstcw inc (bad) ss adc sbb and add outsb repz push xor xor into push push dec nop lock adc lds inc xlat gs test ror aam dec xchg push xor dec xchg mov nop add xor mov fcomps je push push outsb mov pop es jg cmc pushl inc lock lea jmp push mov cmp xchg ficomp je movl mov xchg mov movsb lea inc pop mov nop cs pop scas mov cmpsb inc push push stc pop xor stos lahf in mov or pop pop pop pop fsts push mov imul jne dec or dec push mov stos mov mov sbbb mov lea mov add (bad) aam jns mov std sub jbe mov add add mov fisub add xchg movsb ret mov fwait test in insl mov mov pop adc dec test dec (bad) lea adc sbb sbb jns nop pop ret mov mov daa and mov dec adc daa jo int3 lahf fnsave call ret fisub sbb (bad) mov inc and addr16 mov int3 mov lret or lock dec (bad) dec mov roll or cli jg and lea insl inc or add inc insl test mov inc or add xor pop outsl addr16 rcll pop mov int3 pop xchg lock mov (bad) mov jne jbe jno fcomps faddp mov je add pop (bad) pusha mov cmp xchg popf pop rclb mov cwtl or ss sub lock mov jg adc cwtl or pop testb mov mov sti in push dec (bad) sbb push lea sbb push adc add mov push dec adc outsl dec scas mov adc enter das dec jbe adc sbb ja in or iret imul or cmp adc add or shlb sub and mov (bad) clc or jae adcb js mov outsb je mov push sbb adc add add add add add cmpsb xchg pop cltd cmpsb imul add dec add add (bad) aam in repnz out add xlat jne cltd loopne cli pop or dec (bad) xor sbb sub push insb jle jmp cli add rolb call or lcall push jmp cmpsb jbe and imul add cmpsb imul imul imul lcall scas enter cmpsb imul add cs insb mov mov cmpsb jmp or add movsb ret nop add push imul mov add add lock add fiadd rol cmpsb imul imul or testb call imul imul out push clc cmc add out enter lcall mov and add mov call cli jae (bad) cmp xlat (bad) add (bad) aas pop int3 add add je (bad) je ljmp (bad) xor (bad) xor pop jb (bad) xor adcb xor aaa loop add rol mov pop xlat xor mov add xchg xorb xlat jne sarl and sub pop add dec (bad) je (bad) or add and cld sub je add add into imul jbe imul push add add xlat xor lods pop pushf add xor mov push xor (bad) xor es sbb add dec (bad) je fnsetpm(287 add mov (bad) xor jbe dec ss fmull add cld outsl in add add adc inc xchg add inc and cltd inc add out inc add out inc add inc add dec inc add cld je xlat jge incl inc pop xchg aaa add inc cmp add daa add add dec inc add inc add or inc inc add jmp jmp pop or dec inc add pop adc xchg inc add lcall inc add pop mov sub pop shr adcb and mov ds aas adc loopne add iret (bad) cmc inc add test inc inc mov pushf sbb sub mov cmp aas add inc push imul movl aas adc add jae (bad) mov mov adc add and iret pop or adc cmpb pop adc in (bad) (bad) jg jb jbe gs popa addr16 push gs imul jg fildl stos xchg inc add faddl mov aas dec mov or aaa add cwtl inc add loope pushf or aas push add ja cmovg gs add inc (bad) mov add cmp (bad) xor pop xchg arpl dec inc and pop addl jg jnp pop or out pop pusha cmpsl inc mov lret dec pop inc inc insl fs popa jb gs add (bad) (bad) clts sub add int3 sbb jb neg test pop mov pop es leave sahf cmpl pop ja das pusha sub sbb or adc add push lock or inc add fiaddl push sahf sbb push jle and adc pop mov daa xor adc sub inc add pop inc push inc add sti pop add pop push popf inc add xlat lock jo imul nop pop adc cmp cli daa mov (bad) push add inc inc add fcoml mov dec inc das fsubs ds mov inc js inc pop clc clc cmp str mov push jae jb js gs imul stos cmp int3 and push gs jne arpl pushl jne js (bad) imul add cmpsb imul add outsl lcall inc add mov cmp xor xchg add inc pop cmpl add ja sbb and xlat loopne arpl mov push ja invd lock subl jae inc add push pop stc cwtl or popf test inc add loopne add mov push sbb mov icebp mov adc inc sti mov push je fild jb jns fdivrs xchg jnp cmpsb lahf nop aas arpl add aas (bad) sti pop incl imul sub inc add mov mov xlat mov outsl lea inc pop mov add inc add dec loop inc add xlat add or pop call pop fldenv add cmp das add dec mov ja jb push loopne out add dec scas mov or dec aas xlat mov icebp decl je jne jo jb gs call inc dec gs outsl jb sub add dec jp jb adc dec aaa pusha sub lahf shr mov loop add pop cmp mov nop scas movsl inc add insl bound outsl js pop idivl je popa jb or nop ja or dec rcrl and push cmp pushf call push add jecxz test jecxz inc and sub adc and mov or fsubrs add and pop xor xchg sub mov jb das xchg add aaa into xchg or and stos addr16 add or cmpsl pop mov pop mov adc adc jns add push add xor inc lret adc ljmp js add test es add xchg cmp into or pop imul (bad) adc push jmp dec ss adc push fwait and or das xchg add (bad) jae cmp adc xchg jbe add jge das loope (bad) pop or jge pop or ja add add cld pop sbb xor mov jbe aam push inc add fs add push xchg cmp add mov loope and test xor adc or inc out fcomip js insb fs jb arpl xor adc in jg push inc outsl outsb je outsl insb inc popa jb out (bad) out add dec inc dec inc jb insl adc or lds adc dec insb gs dec (bad) cmp add je outsl outsb imul inc add cmp ljmp insl inc imul jae or jno dec cld outsl insl push outsl imul inc add movsb and outsl ja jg cld cmp jns je insl dec andb push push (bad) jg incl xor add inc dec push push dec inc pop imull je insb pop inc jb addr16 imul je jae cmp enter pop pop inc hlt add pop aas sbb imul pop pusha jg pop inc add mov cmpsb pop add adc pop or mov add jno lcall pop (bad) bound outsb ret scas jmp call outsl mov js out shrl inc add jae imul inc add xor addr16 outsl insl insl outsl outsb xorl pop idiv jg dec dec inc push dec xor cs dec dec sti jo mov xor sbb add cmp or lods xchg dec fldl out dec shlb lahf sti dec push das dec popa jo je push outsl add or std test in add lods inc add jmp dec dec dec pop cs dec push addl (bad) out and pushf (bad) decl outsb jne cltd cmp jne mov push mov addr16 pop das xchg subl pop mov call pop lret sbb jnp cmp add sahf inc or inc es lahf pop mov or push clc movsb adc pusha mov cmpsl inc add ja lods push jbe out lds jg data16 sti or pushl sbb cmp cmp add outsl out add dec and and dec das fs jns (bad) out mov add inc arpl bound pop dec outsl jbe call arpl push in adc ja pop inc jne jne cmc dec jne inc add dec jne cs fwait inc jo imul dec popa cmpsl dec inc bound popa jb popa outsb mov add push add into rcrb dec aas insb add dec mov (bad) out jbe jb cmp dec popa outsb add je jb sbb inc jle jb or jb add push gs gs mov or push jne mov popa je inc jb add das add (bad) (bad) fistpll add add inc dec dec inc inc dec pop dec inc inc push pop push inc dec inc inc push mov inc add dec push push inc push push (bad) add pop mov iret and jb jb or aam dec dec push push adc add dec inc (bad) mov dec dec inc dec dec adc xor cmp outsb popa fdivr pop jmp and imul jp and popa jo (bad) (bad) aas fild daa aaa outsb outsl je outsb outsl jne push arpl data16 pusha out jnp outsl ja cmp aaa dec sahf inc cs fs (bad) lcall xor and jb jne insb and outsb arpl ficom sti and insb insb pusha xchg xor xchg fdivr std lahf pop outsl outsb gs je popa je and ljmp jnp iret xor aaa imull outsb and outsb jae and or imul jbe gs push gs adc jbe dec pop jg fnstcw sarl jne je je and imul mov sbb xor popa je aaa cld mov popa bound jb add outsl addr16 les test insl imul dec and outsb inc outsl outsb insl outsb je dec pusha mov xor iret sub addr16 out jne jae xlat xor daa data16 outsl out ficom out outsb outsb and and adc xchg cmc (bad) add arpl sbb push imul inc sub and dec imul ret sbb push inc mov or ret jle out aam ret cs outsb xor outsb add mov fbstp add push add add add inc inc add clc (bad) aas add pop or aaa xor push push pop add and scas stc out pop jb or pusha add add js and (bad) mov or sbb add add add add jne insb add pop add outsb jne insb or jle push pop (bad) out outsl int3 cmp inc inc dec jae arpl jae jb pcmpgtw jb jae xor inc sub push inc fisttp add xor mov jg pop js das mov add outsl fiadd fdivrp fldl jae pop jns add xor add pop mov insw outsl (bad) add jns outsl fistpl pop aaa sti lds mov data16 addl gs add outsl jae jae outsb add jb add jge pop sbb cmp into mov and xor ds pop repz push pop insb outsl xor push jo addl arpl std inc add add roll aas xlat popf les imul mov out inc add add and stmxcsr in sbb clc pmulhuw call jnp pop dec add add pop ds jnp aas pop cmp add sysret andl xchg or or outsb or xor pop xchg imul push jb sbb addb push into adc shl cmp add push or push or frstor push pop add popa jae inc jb pusha xor std gs outsl jo jo cmovns dec jge dec or gs outsl xor gs lcall js and inc dec add xor dec dec loopnew sub pop lret out mov sbb inc add add mov inc xlat pop popl or jle add xlat out lcall out jae push add negl add dec or mov aaa push neg jg xor inc add add add pop mov outsl dec pop inc pop adc dec das addr16 add pop rclb xor or das loopne imul dec xlat sbb cwtl sbbb push sbb add pop and pop dec clc adc mov and arpl xor sbb fcoml (bad) cmp daa jo push sti (bad) lds add adcb inc cwtl sbb dec test dec shr add inc rclb cmpl bound fdivr pop push add outsl popa out sbb mov jnp sub inc pop outsl neg ret add or in sbb adc outsb nop pop dec test dec mov inc mov ja out jae lahf loopne mov xlat clc sbb add or lock xor add mov jno out or pop mov daa js mov fldl inc iret mov cwtl in add mov divl out sbb pop pop ret dec loopne rclb inc add sbb add sarl pop out or sbb sbb mov mov mov das mov dec pop xchg in mov inc fcoms pop wrmsr aaa and lahf add iret iret and dec or or sub dec dec mov fadd add mov in dec out add adc cwtl lahf mov cltd cmp enter adcl dec lock dec bound and loope dec add out sti inc sbb loopne out (bad) jo fdivr pop pop aaa mov pop jo pusha add call adc mov pop sbb test pop int3 sbb cmp insb mov dec fcoms pop push rcr movb negl and push sti bound dec xor adcb ja mov pop cmpsl testb add adcb rol inc scas ret push push or aaa test add rcll xchg pop jae outsl and aas lret clc sbb ja outsl fadds inc or add dec mov sbb outsl test or outsl fadds dec pusha adc push add push mov pop enter push mov neg pusha adc inc and inc fcoml xchg rcrb fucomip sbb in sbb das add adc mov or and and inc add sbb outsb mov push push inc dec adc dec jae (bad) push arpl dec jo push neg ret add sbb add cwtl adc push insb dec rcrb fcoms mov adc adc loopne dec clc sbb mov mov xchg pop pop xor out add push xor jo jnp ret fsub pop push xchg xchg push pushf daa fdivs sbb xlat les orb sub xor add push in js loope,pn add xchg add adc sub cmp pop and out push daa xor add inc fs js xchg adc pop mov pop inc pop add aad repnz and adc and xchg or cmp pop mov (bad) iret pusha daa mov sub das mov pop mov daa push mov ret xchg pop add mov loopne in gs push pop call adc xlat and mov hlt jg daa cmp mov adc xlat out push das cmp cmpsl sub mov xor aaa mov out aaa pop pop aaa fs aaa sti faddl fsubs in ret jae aaa cwtl pop aaa push adc mov pop add dec daa and int3 jge les das inc mov jge lock das clc pop addr16 or dec pop mov pop inc (bad) or fdivr mov iret sbb ja mov or or mov out jae ret adc aaa or mov xor and mov dec dec pop fwait pop mov outsb clc inc clc lahf cmp sbb dec dec pusha ss mov pop aas add xchg add das cmpsl jge mov rcrb fdivs pop dec pop pusha fistpll adc sub loopne int add pop push or adc cmp add (bad) lock pusha pop inc xlat cmp das jnp fs dec pop daa comiss cmpb add add pusha xchg in mov pusha jg pop pusha mov incl aaa mov pop add sbb fisub or or out or imull add das jg sub or enter in jmp adc daa mov mov pop pop inc pop aaa jg mov in jo fsubs cwtl dec push fs rorb sbb daa adc sub adcb ljmp daa adc cmp int3 inc mulb pusha daa push daa pop cmp pop das nop daa mov pop sbb inc or in jnp or mov add das mov in add add cwtl sti fdivrl xchg xchg out inc sbb faddl sub sbb das fidivr fimul pop or cmpl add add xchg xchg jnp stc fiadd push pop jo add or or cwtl and nop cmpl fisubr xchg sub orl pop mov call add add daa push add adc adc arpl adc push xor xorb ret or add insb jo jo add mov mov std dec mov dec dec dec dec or pop (bad) jmp adc push inc push push dec dec dec pop cld add and arpl fs addr16 test insl popa movsb mov (bad) dec dec inc push mov mov cmpsb sti aas and push inc add push inc add add (bad) mov add test inc add scas adc mov add add cmp inc add inc add inc add test mov outsl mov inc add mov cmpsb imul stc mov stos inc add scas inc add inc add incl stos add inc add mov daa and push inc add add int3 jne fdivs pop lock aas roll pop push sbb pop pop pop (bad) decl inc jne jb outsb je gs imul pop add insb imul iret pop inc (bad) jg pop enter pop add add lock ret mov pushl repnz rol jmp cmp jo cmc jg dec scas mov cltd add (bad) out data16 push gs bound push jb jbe insb gs sti (bad) jg add mov (bad) jae arpl jae cs add add enter and scas (bad) lcall jge jne cmp add inc push push inc pop rclb inc pop jb insl popa add shll and arpl lahf or inc dec xor push popa jae insl addr16 rcrb rcrb gs (bad) pop push addr16 popa outsb addr16 jne push push std inc test push inc push jb jns xor xor gs test das and mov imul imul outsl outsb incl mov or popa mov (bad) ljmp and and arpl jo outsl outsb imul and das and aas mov pop and fs jne je and sbb mov jbe xor push add dec add je insl and jb popa xchg jg (bad) ljmp xor popa jne outsl and insb arpl popa arpl jb mov outsl jne fs and gs inc or lcall add je and outsb gs imul inc arpl outsl jb inc js mov popaw insb jae add stc imul (bad) sub and je jne es jo sub popa data16 add dec and jae je jo outsl mov and fwait inc push push dec jb and aaa std sub sub insl push and js and arpl gs outsb and popa jo imul popa xor xchg and xor imul outsl mov push sub cwtl sti jmp popa je sub insb mov shr pop in mov and sbb fdivs and sub int3 xor aaa add ljmp test popa and sub gs insl jo cmp decl jae insl gs jo je das js jb imul (bad) and popa js arpl cltd in fmull xchg sbb inc test roll sarb insl and fs push (bad) fbld and imul je sbb ja imul adc arpl movsb je adc and jle or sub mov jge and jae jb add or cltd and push fnsetpm(287 js jns dec cwtl ss jb cmp or gs push cmp and mov or arpl sub and data16 and jecxz jae imul pop jb gs dec out add jo jne gs pop popf sti negb je gs movsb mov jb cmp adc ss xchg xchg cmpsb (bad) jnp clc cmp push jae aaa outsb (bad) dec adc popa jbe bound add push pop popl adc sub movsb gs test aaa (bad) fwait jge jo outsl insb xor ffreep fisttp or and popf and add outsl insl cmp out jnp push push dec and imul or inc add xor (bad) (bad) (bad) and pop inc push cmp jno js pop jae jbe jp cmp aaa dec (bad) (bad) (bad) ljmp push js pop outsl jb inc inc push xor pop inc dec inc fs inc inc xor (bad) (bad) (bad) lcall dec dec dec jae gs xor js push push addr16 je push xor ss lret jne push jo movsb cmp mul sub xchg lods jo jae and adc mov outsl jb xchg lock pop fs imul popa insb imul jmp mov or sub fidiv jmp outsb or gs and outsb gs mov inc jl and dec or aas pop inc and outsb imul popa xor pop push into sbb inc xchg sub sub and push or iret or pop and imul xchg stos imul subl adc dec and je jae das das shll jae bound add ja imul jg and int ret sub outsb jns and ror int jno pop sub or mov imul inc aaa add push arpl dec ljmp add add nop sub scas inc jmp rorl adc xor je add (bad) cmp push add dec int push out and sbb cwtl test arpl fwait cmp add bound push dec inc dec inc inc pop adcl xor (bad) out into pop push inc add xchg in pop pop push add add add add sbb mov prefetch and xor adc mov out outsl cwtl cltd or add mov add jae or or inc adc das pop nop sub adc cmovne sbb sbbl cmc mov loop or loopne inc or dec adc mov push and nop or mov mov and or clc adc jle cli or lock add je js iret in and (bad) repz sti (bad) pop rcrl cs add cs lahf jmp cmp mov jg jae adc inc add jb,pn orl mov adc mov and daa inc jo,pn inc pop fwait jecxz add adc and inc add inc js,pn xorb inc push adc or add or push add bound adc jle in cmp daa sbbb ret xchg cwtl lea dec imul xchg fwait add fstpl out dec pop daa shrb push xchg enter add and push mov cmp (bad) incb je,pn lahf xchg xchg mov aas cmp dec add mov and gs outsl sub aaa fisttpll cld daa inc adc add nopl cs lcall dec sub dec mov xor mov or data16 enter sub xchg or cmpw je xor sbb add jg test xchg call dec mov cmc call dec mov add fdivrp jne and mov inc jnp mov mov call or or cmpl je xor dec add ret (bad) mov movsb push jmp xchg dec arpl dec add cmpl pop jne dec sbb stc or je push add sbb fldl lock jbe adc outsl (bad) lea rolb jmp aam lea call outsb mov sbb (bad) sti mov inc test cmp adc fbstp lds sahf or dec lea mov or pop dec lea cmpsb sti mov das inc inc mov call nop out loop nop/reserved inc push push push push push dec sub add sarb or repz stos dec mov int mov push lock mov pop xchg or out (bad) pushl xor dec mov jmp dec cmp je ljmp icebp inc call dec mov lock cmpxchg dec test jne dec mov jbe xor adc sub out scas sub je mov pusha pop cmc push sbb pop mov pop xchg outsb add or xor mov cld jg leave call call sub adc adc jg mov call or call out out call add dec mov push (bad) lcall into pop jne jmp nopl test je and je pop push cld xor dec add movzbl (bad) lock jg out mov inc xor cmp inc cmove jmp test jne in das jecxz jmp incl ss or cmp jecxz push testb mov inc jne mov sbb inc lea add in shl dec mov call test dec mov xchg scas adc fistp jle lea xor dec lea fdivrp fwait decb or call jo dec mov call inc sbb (bad) adc dec mov or sbb dec cmp jne dec lea push cmc inc and mov out pop call xchg insl adc pmaxsw mov dec mov xchg test or (bad) ljmp ret lret mov test jne call mov (bad) inc add pop inc pop inc pop ret movzwl jmp mov aas push sbb js pop in add test mov sbb insl mov adc fucomp pop xchg loopne sub or sbb aam (bad) rorb test and add out in jmp loope call jmp ss nop inc outsl inc add jbe add dec jmp call or jne dec (bad) icebp sub call cld (bad) call pop sub inc das inc dec mov sbb test jnp dec mov dec lea popf pop jmp push jg or pop pop mov nop or les push mov outsl movsl call dec mov dec mov call into adc and lahf dec jo (bad) mov je out cld pop dec mov call jmp outsb ret cmp testl inc (bad) lret dec mov je nop jno jecxz xor call or (bad) cwtl xor jge cld pop sbb ret call out out mov imul xor jmp outsw mov cmpl pop xlat cltd ret into std jne xchg cmp call sti cmp mov mov gs or scas dec mov fs xchg inc das push mov or cwtl dec insb push inc push ret jmp nop nop inc aam iret dec mov dec mov fdivrp add mov cmp call and cmp and in and out sub iret dec mov (bad) call xor loopne cmpsl pop mov inc mov outsl icebp dec mov call dec add inc mov jmp cwtl sti (bad) sti add dec mov xor ret sbb std jae inc mov fisubl xor dec std rcr dec add call inc add add inc cmp mov and add movsd fstl call xchg cmp adc mov adc inc mov push inc test mov dec loopne imul int inc into movsl into movb movsb inc mov lea movl add fcompl movsl mov sbb in ljmp adc incb fstl add xchg dec and dec cmp je out and push fwait add loop mov mov dec sub dec shr dec lea inc and je pop pusha mov mov cmp je stc add add fstpl xor add add push add je push je dec mov dec lea orl cltd sti mov mov dec lea pop mov out push dec dec mov das pop mov out fidivr mov pop push dec and dec cmp je out inc dec pop pop nop lds (bad) pop pop jl orb je cmp dec in fild lds pop or dec mov repnz cmp jns push add cltd mov lds jne lock or imul test sub out daa dec adc push je adc dec frstor mov and loop cld mov dec shll call add xor xor mov jns dec push outsl jae pop and lret inc or inc mov lock or or lea mov decl fsubs dec add arpl dec mov mov movb call jmp pop mov mov add xchg loopne mov call call cmc icebp add cmp loop jg add pop lds jnp gs cmovs loopne std dec lea mov dec lea adc add dec cmp mov call (bad) mov mov dec sub js dec sub inc mov dec cmp (bad) icebp out decl lds shr dec aas or and lea inc sbb movl cli dec jmp and dec mov dec mov dec movl mov sub sbb rcrb sub shr (bad) dec mov dec mov out out (bad) push adc (bad) je inc inc mov ds popf sbbl pop jmp fs adc call ret int inc push popa sub orb dec imul push dec mov dec sbb mov dec lea mov call ljmp jne mov inc sub dec mov cmp xor notb rcr aam add into dec or adc cmp xlat (bad) decl dec and je dec mov dec lea dec lea push xor sub dec mov (bad) dec push cmpsb cs push and cmp ljmp insl inc daa add dec mov mov jae cmp sub jnp push (bad) mov (bad) jno subb and dec mov dec mov dec mov dec mov call sbb rol clc pop out pushl gs inc mov dec or add adc sbb xor adc push dec dec mov dec xchg aas out pushf mov dec mov mov dec mov push mov js cltd dec or sti jg std inc mov and dec fs mov add dec out into jge pop xor data16 leave bound jbe jno ret dec mov jmp inc outsl pop ja dec mov pop ret sbb jp mov pop inc mov pop lcall inc movl jbe dec mov fdivs aaa push icebp ja dec and inc mov dec enter pop add and dec lea dec mov das add cmp pop movsb cmp inc and push int3 (bad) sbb or push mov mov push dec mov push out aam inc cld rol pop mov and loopne dec mov lock jecxz dec lahf mov aam scas push dec mov and sahf dec mov dec lea (bad) fnsave push add or dec mov inc push (bad) enter adc jle cmp push push or add (bad) (bad) cmp add inc mov shr dec shl inc lea dec and dec mov inc mov dec mov jecxz dec test je dec mov out or jae icebp dec mov dec xchg lea or mov dec sub dec add dec cmp je fimull fmull sar jge loope (bad) sbbl lcall fstl js psubsb dec mov dec mov dec mov aad jg lds dec mov push inc mov or dec mov je and out jo fisttpll dec or or sbb hlt mov dec mov and or and loopne adc arpl addl cmp mov inc pop xchg rcrb adc jmp lahf mov xchg inc mov or mov dec inc mov ljmp add inc add dec mov inc or test mov add dec cmp jbe jne cmp dec inc jo mov push out jo cmpsb dec lea add lret jno sub das loope xor or dec or push jmp les mov xchg aaa cltd dec test dec lea and fdiv dec push pop xor jmp pop push fisttpl inc pop or (bad) add mov sbb sbb test lock jg popf orl rolb mov sbb fimull test xor cmp add je aaa mov dec mov inc mov mov loope inc mov ja or push dec lea jmp jmp (bad) cli (bad) (bad) (bad) mov mov call test in jp xor mov imul mov jmp sbb dec mov dec sub dec jg je dec cmp jmp cmp jg or mov dec mov mov imull push mov inc xor call inc sbb inc and (bad) sbb adc into (bad) fidiv cld dec ja je dec adc xor dec add xor xor imul jne push or sub dec xorl fldcw push inc call je fadd ficom dec mov xchg inc mov cltd xorl lret int fcompl or lahf mov leave push leave stos and jo sahf out in int3 aaa loopne (bad) xor jb dec xchg jmp dec cmp push inc sub jp mov jns sub ret xchg adc fcmovnbe cmc ja dec mov dec mov cmp xchg lea ljmp inc and and movapd out pop fwait cli adc test push mov adc sti (bad) enter into comisd movsb pop add or int xchg mulsd xor fbld dec cvttps2pi pxor push or jg dec cvtpi2ps and cmpnlesd or sub inc je div subps or dec sub push xor push add leave dec mov icebp ja jp xor jns dec mov dec shl mov incl and dec mov dec shl adc mov loope fbld dec mov inc mov dec cmp ja mov dec test push rolb mov dec mov pop in add xchg jg sti add pop dec mov jne clc pop outsb loopne mov sub inc xor xor or add add (bad) dec push push add mov repnz dec mov addr16 dec mov and outsb sbb push or repnz movups or icebp mov int3 out icebp add xchg or xlat loopne sub or ss call and in xchg into es and js scas imul inc xchg js and xchg dec mov and dec and je roll inc mov dec lea dec add xchg rorl test cltd dec cmp ja dec mov es (bad) (bad) stc outsb dec add arpl mov mov mov or getsec and pusha or int3 (bad) adc fmull (bad) sbb and sub add push and sub or lock jns adc pop add clc and dec movsl (bad) and mov dec sbb popf mov in popa scas cmp jp sub xor xchg or jnp sti scas sub xor out rorl dec xor popa pusha sbb add int3 scas scas (bad) cltd pop xchg xor mov movsl js ret adc fcomi ljmp (bad) jecxz cmp sti js mov dec mov ja inc (bad) decl inc lea shr inc add inc cmp jb es dec mov inc inc lods dec and dec mov mov (bad) iret (bad) sbb push xor dec mov inc mov adc (bad) adc or cmp jg push xchg dec or mov in nop dec fwait mov je push dec mov lea ss pop push dec add clc push sbb lcall dec scas pusha loop mov iret test decb dec and dec mov loop hlt cmpsl inc pusha dec or and and dec mov lock call adc sbb movsb stc das dec cmp fnstsw or mov push or icebp and insl cmp jbe add and pop ret aam push (bad) aam mov mov adc inc daa and sbb mov out push dec insl paddq mov add push add mov lret jo or dec or dec mov popa dec mov (bad) xor jl dec sub sbb cmp xlat adc mov add cmp inc fadds cmp adc jo adc faddp js and js push jp cmp inc dec mov pusha push dec mov dec lea ja inc mov inc mov dec or dec mov lret push jb and pop lea dec mov dec cmp mov shr dec shl inc lea dec and loope decb add dec dec test je sbb cmc rorb adc arpl sbb cmp push nop aad sub dec add dec add pop dec add dec mov dec cmp ja (bad) mov rorb test or test dec mov je dec mov dec mov xchg stos mov call xor inc and sahf push xor fisubl clc dec or dec mov jbe sbb jo jbe fisttpll icebp cmc or add mov dec and cli (bad) aas xor and prefetcht0 dec mov inc mov dec cmpsb es (bad) cmp adc push roll adc insb or sbb sbb add movaps sub adc inc inc pop ret loopne dec fs decl push rorl repnz (bad) decl testl call dec and jne xor in pop dec lea dec inc dec ss clc sti cmp ja or mov dec inc mov cmp mov dec sub (bad) je ret jg add dec cmp jbe jp decb test ljmp jp add test mov scas sub add das pop pop xor xchg stc (bad) decl dec or inc push xor jbe dec lea shrb outsb xlat ds mov outsb adc das sbb (bad) cmp dec mov inc adc flds mov out lea and jne lret test je dec mov dec lea cld jge pop jg lea jbe push test inc je jo mov sar adc hlt add pop cmp (bad) js mov lock ss lea fwait cli (bad) jg and dec mov dec sub dec add dec cmp je mov dec cmp jb dec in je stc (bad) lcall and dec mov dec mov call sbb cmp dec mov jmp mov out xor imul push lds sti (bad) scas test cmp dec dec inc rolb call (bad) sbb xor test es mov outsl dec inc popf jp mov dec pop or sti or dec mov jmp sub dec mov jmp sbb cmp jg adc and movl jns cmp xchg std dec mov out pop sbb sti std clc jbe push test dec lea hlt mov test cmpsl pushl mov dec and dec or xchg cli xor fucomp push xor (bad) cmpsb out pop push sbb dec or dec mov mov dec cmp ja outsl rol clc jmp rolb notl aas lods inc mov jp mov addl jle adc or repz xor adc (bad) decl adc cmp sbb inc mov push stc out pxor add fdecstp and dec mov jb dec cmp sbb (bad) dec lea sbb daa mov leave jmp inc jo rcl lods ret pushf pop dec (bad) jmp cmp test dec xor mov pop xor into xor mov pop leave in stos test fdivl mov (bad) bound test dec mov xor push and call cmp ret andl test hlt adc inc mov fyl2xp1 push mov data16 ljmp jp dec lea jmp inc fcompl adc sub xchg pusha mov push pop sub (bad) sti inc xlat cmp test rorb lods out pusha pusha fsubs pop stos adc rorl dec or test jg out repnz incl std or (bad) jae dec mov inc mov pop (bad) (bad) out dec mov dec mov dec mov dec lea repnz add dec ljmp and xor pop fdivr decl pop inc mov shr and inc cmp dec mov jae mov cmpsb test incl je cmp (bad) (bad) (bad) pushl incl je cmp je cmp je cmp je dec mov dec mov mov xchg inc mov add dec mov dec mov inc mov or iret cltd outsb repnz mov sbb or decb sub dec mov out out cmp cmp addl aas inc lea inc ret mov adc sbb jmp popa outsb adc sbb pop das jmp ficomp ret pop cmp lea xor sbb (bad) lcall test and lea jnp mov pop sbb jbe mov pop je rol dec or xor jl mov call sti or je dec rorb je out dec nop adc inc mov addr16 push cmp scas lods out dec or add mov cmp pop add lds jmp cmp xor rcr and xchg sbb xorl rorb dec mov cmpsl or or jge jmp mov jl dec inc push out adc mov sbb and cmc push push and and sbb sub mov xor (bad) lcall movsl dec mov dec sub dec add dec cmp ja out jne mov jnp jmp and arpl popf push jge push inc outsl popf rcl insb xor inc pusha jo adc es pop (bad) mov inc and xor pop inc cmp pusha push and roll in mov pop aas dec gs sbb push xor inc jmp ljmp (bad) insb lock incl mov inc mov jmp inc cmp adc (bad) hlt sub test mov icebp out jg dec in sub sahf inc xchg push xor xor add lock pop dec dec mov stc dec push jbe ret add out and sub fs sbb and dec pop xor jg pop xor dec ss jbe xchg mov daa or cmp cmp sbb pop adc into gs mov rcrb or xor dec add dec cmp jbe dec cmp and pop add mov mov cmp sbb cltd enter je fldt dec mov jmp cmp mov fdivr lea cli adc clc or cmp jge (bad) movsb push cmp jno and addr16 xor inc in aam and out cmp fbld jmp mov inc mov sub pusha xor pop pop xchg mov movsb popa add and dec mov pop push imul dec sub or lea into cmp les jmp rcr (bad) jp pop xor out pop in adc cmp and scas xor (bad) pop or mov popf inc xchg rorl dec out adc cmp xor daa stos mov dec inc push dec das sub lock mov inc mov inc dec shl dec sar js loopne dec test enter ret ret inc mov jbe icebp mov adc or pusha inc xor mov cmp fild cmp mov je faddl sub push out ret sub dec lea dec ljmp ljmp add or mov imul dec inc cmp jb push sarl inc lea dec mov dec (bad) (bad) cmp sub add inc mov inc shr dec shl inc add dec and stos or inc pop insl dec mov ffreep dec scas insb mov icebp dec cmp jae aaa cmc arpl dec mov xlat mov dec lea rorb push mov loop dec cmp rorl mov xchg (bad) mov dec test dec mov je dec mov dec mov mov divb call mov xchg sub aam inc insl and dec or dec mov jl pushf pushf add jno jg push cwtl cmp dec and dec shl (bad) aas and mov movl dec mov dec mov fmull pop ljmp dec mov pop cmp dec mov inc lea mov cmpb paddb (bad) fldl nopl dec add cmpb jne inc mov inc sub aas sub aas pop dec lea dec jnp or dec les push (bad) xchg pop adc test nop loopne insl push or inc mov lret outsl insl dec shl inc lea dec and dec mov mov aaa cld xchg ljmp fisttpl test dec cmp out sub jae dec mov ljmp (bad) lcall dec mov dec sub dec add dec cmp je fimull ja jo jge dec add je mov test dec mov out call ljmp and dec or dec mov push adc or xor or or add mov andl out adc cmp data16 out clc dec mov dec cmp addl dec add pushf ljmp inc mov dec test je dec mov cmc sbb dec cmp jbe xchg jecxz or cld sbb xchg sti je or jne cli icebp aas sbb decl or int jmp outsl mov mov jmp mov jle imull jmp mov (bad) (bad) (bad) in push jg,pt xchg jae add dec push mov cmpsb dec mov dec and push add xchg sahf xchg mov lea jo test or pop jne inc mov inc or xchg (bad) xor fnsave dec cmp (bad) jge sbb jmp cmpsl daa prefetch or inc adc jmp mov and dec mov xor jl xor xor xor inc dec mov sbb jae xor jmp jo sbb rorl test cmp call cmpsb test dec dec mov xor jge dec mov inc and fcomip push and cmp add pop dec test dec or jmp lret add push orb ret call mov call cmc out mov dec mov dec mov inc inc fild daa push inc mov add dec sbb push or or jmp les aas add add xor jmp (bad) jg mov dec sub dec add dec cmp ja cmc aaa jl or sbb dec mov dec sub dec lea ja jb mov and push mov inc sbb addr16 mov xchg xor hlt cmp mov and mov movsb push enter sbb xor push add call inc into and and fwait and sbb adc inc inc pop inc and (bad) mov (bad) fsubl mov mov int nop dec lea dec cmp jbe dec cmp dec mov add xchg loope ds cld mov test fisttp aaa in xor in mov stos add mov (bad) outsl and dec lea jne jno xchg fbstp mov mov dec mov sarl xor add dec cmp push lret sbb ds mov sbb cmp mov xchg sbb or lea pop jo,pt jbe add sub into jmp orl dec mov jmp and sbb out sbb adc inc lahf insb jae mov inc lret je push cmp aas sub popa outsl scas push mov add rorl adc jbe sbbl adc clc nop jg roll jne mov sub dec mov dec xor mov fcomip add mov mov insb and psubd cmp test pop jo dec lea pop hlt jg mov ja or (bad) dec xor js scas bnd cmp mov (bad) mov dec xor mov jg mov dec lea inc mov add inc dec out inc incl dec or rcl push ja fnsave and pop pop sub dec mov inc mov fs sar scas jmp je dec adc or push lcall xor push fild add shr es popl loop inc and dec or inc add inc add dec mov inc (bad) jg mov adc mov dec mov dec lea aaa mov lea mov or pop call aaa insb insb and dec mov ja outsb dec fs push and and sub out inc mov dec mov mov inc pop sar (bad) decl pop inc dec arpl inc sar dec mov inc and cmp push ja ret testb mov lahf decb push pusha jo pop dec lea push outsl jo js xor jge inc mov mov dec or fwait std pop inc cmp jb packsswb or lds and push or push or inc movsb dec and dec mov inc mov out adc test adc push xchg nop jecxz sub jae dec xchg clc xchg aaa ret ljmp add dec mov jecxz hlt dec cld jns mov add (bad) fsubrp rorl lea test je sahf out dec les xchg sbb mov ja mov dec or dec mov push sbb pop cmp add dec adc dec and or xchg sub les fst mov test mov decb cmp mov dec lea mov clc dec mov inc xor jno add xor push loop dec add mov dec or dec or mov sahf pop add inc cmp mov jb mov add inc lea leave cwtl push (bad) inc shr inc lea dec and dec mov inc and sub je out xchg mov adc dec mov dec sub fisttp test inc dec add dec mov in mov dec xlat xchg stos lahf inc xor pop sbb inc das and fist pop xor mov cwtl dec cmp cli sbb js sub inc inc adcb or sti or repz xor cmp pop arpl adc xor push xlat ljmp xor mov inc lea inc mov inc cmpb pusha sbb dec mov dec add inc mov inc mov inc sub push push xor mov sti imul mov inc cmp dec mov aam and cwtl or add aad pop sub xor inc ret mov arpl insb cwtl mov loop lds std mov rorl jmp test stos roll arpl in stos shlb je jmp sub jnp or inc mov dec mov sub je adc mov xchg jg push dec and pop inc jge xlat mov and lcall sbb and xor add push xchg in mov pop sbb pushf mov lea out sbb ret lahf ljmp ljmp or out dec cmpsl inc shr inc lea dec and dec aaa cmc enter mov shl add sub mov jmp adc cmp jae sub pop (bad) mov ljmp clc dec sub dec add dec cmp je fisttpll fmull bswap aam ret xchg popf dec mov add in or cmp arpl lock orl idiv mov call stos (bad) inc jno ja dec or dec stos (bad) sbb sbb (bad) stos sbb xor fstpt cmp xor xor dec mov xor jmp lcall or or mov jl adc add jp icebp sbb ret testb cmp adc paddusw sbb adc xchg jae sarb icebp lcall jge dec lea dec or inc cmp sbb jle mov imul lea inc xor incl in inc lea inc mov ficompl xor imulb je mov sub add lret jns xchg mov mov push ja xlat adc push dec or js in es inc mov or fisubr mov dec and jl test mov push je data16 inc stos sbb or mov dec or cmpsb out adc ret fstpl pop rcr (bad) fild or add rol lea (bad) outsb jl pop (bad) shrb sbbl cmp dec and lahf lock arpl pop mov out je (bad) pop decl test push pop rcrb imul mov push outsb loopne pusha dec cmp je stc movsl enter dec cmp ja enter mov je mov lock bnd test (bad) (bad) sar rcrb xor mov enter xchg icebp insb inc dec and pop mov sbb testl mov fs daa xor and outsb dec inc js sbb jmp (bad) jge dec inc dec mov inc xor adc sbb inc inc mov dec arpl int3 inc sar inc pop mov incb adc mov lock push pop popf inc lea inc mov aas and push inc shr inc add dec and repz mov je add sbb push jbe cmp jae dec mov rol (bad) decl push or sbb dec sbb enter dec xlat cmp fild xor dec mov dec js xlat fst or sub dec mov push push push je dec mov dec mov call shll pop or jb add iret dec mov inc lock sub sbb (bad) hlt loopne mov adc fadds sub aaa lea dec mov sub sub (bad) (bad) jp aaa push add push pusha stos outsl loop adc jmp aad inc je imul das subl insl add dec dec mov or cli mov jmp clc std add or xchg add loopne pop lea or cmovl add sbb out cmp sbb pop mov xchg sbb (bad) aaa jo in aam dec test dec lea je xor (bad) jne sti adc dec in jmp mov mov pop dec mov test aam popf add repnz mov inc outsl cs adc dec lea mov jne push pop add nop sbb mulb outsl dec mov in test add mov xchg xor sbb dec lea dec mov test inc xor sbb cltd leave lock or push jmp mov push xor (bad) outsl cmp cmp jbe jg outsl jae push push repz loopne mov outsb fs sbb imul dec dec dec or fadd rorb adc dec pop outsl pop inc mov dec cmp jae add jbe insl loop sbb xor push adc inc imul lahf daa outsl cmp mov je nop shrb inc pop add dec xor cwtl push ret (bad) xor ljmp mov test rcl cmpsl mov add or pop shlb or jns shrb out arpl jne data16 jb ljmp and hlt in mov mov cmp dec lea out mov test adc cmp call cmovae dec cmpl stos fcmovnbe cmp test mov fstp mov cmpsb js cmp dec mov xor jecxz (bad) and loope jne out aad popa pop sarl or add dec mov dec fs xor mov (bad) frstor sbb xorl incb mov inc xor jmp mov lds imul mov leave dec fwait int3 sbb out xchg sbb ret jns fs repz out popf and mov push or jmp cld add lds xlat mov call or in je adc lret dec dec ret inc scas dec mov dec mov dec lea jmp jo dec and (bad) pop jmp push faddl into sub pop adc rorl mov push mov pop push xchg inc cmpsb cli dec lea jmp pop inc mov pop hlt je ret rorl or xor bound jmp dec mov dec mov pop sysexit inc xor mov adc out inc mov into arpl push push icebp call add test push pop fwait adc push mov or jmp or int3 pusha adcl inc pop and fiadd fisubl (bad) je shl mov outsl lods adc add pop outsl xorl inc outsb adc jmp shr loope push outsb add mov call les into rcr fwait pop xchg ret adc inc adc loopne addr16 add jmp dec addb out call stc call faddl pusha dec dec mov (bad) mov xchg pop mov int3 mov or popf mov pop mov loopne es pop js add es test inc dec leave inc mov cmp (bad) loope roll add test rorb sub mov jmp int sub dec add clc lret icebp xchg out dec (bad) mov push or dec sub dec mov fidivrl pop jmp dec jnp loopne add xor xor and mov dec mov dec sub dec add xchg xchg xchg (bad) inc mov arpl xor decb outsb dec (bad) outsb ljmp add in jmp cwtl sti pop xlat (bad) test jmp xor pop aas or movb jg adc cmovs xchg mov xor or jmp in fsubr xchg xor cli cmp and mov arpl fs xor call loope aad inc xchg dec mov popa clc loope or ret es insl pop call pushf add xchg jl fsubs int3 call pusha incb out (bad) (bad) call iret xor rorb test mov ret cwtl sub xchg and mov or dec mov inc and inc into fsubr sub push jb dec dec jb addr16 pop lcall inc sub enter sub aaa pusha iret pop (bad) cmp push rclb add dec popf adc xchg push outsl xor xchg bound dec push popf aam test jo test scas and adc cmp subl xchg jbe inc enter call cmp (bad) fdivl roll scas or popf mov and dec (bad) jo jnp jbe jg adc cmp andl int ja mov pop pop (bad) mov push sub cld mov (bad) dec mov pusha inc pop xor stos ds jne std mov into lea push or sub repz inc dec dec cmp xchg adc sbb sbb out orl ffree xchg das or or test adc dec lea mov ds test mov mov push or pop dec jns shll inc test mov dec test cmp sub aam (bad) mov mov je repz pop cmpsb jb pushf fldt sbb lds mov shr jmp int3 push in sub mov aaa sub sbb rorl push dec cmp sbb sahf stos dec xchg les xchg call mov cmp stos jecxz adc push cli pushf adc (bad) jo sbb sub adc mov cmpsb popf (bad) pusha add sub push jg push dec cmp ja sbb inc outsl loop dec add mov sub xchg cmp add sbb or enter sbb fwait int3 fs xor sbb add dec sub xor sbb cmp jae dec out dec ret xchg loopne dec cmp mov or cvtpi2ps loope mov cmp sbb dec fndisi(8087 imul lock loope pop les outsb mov dec mov pop push push dec test jmp bound mov in xlat in sti sbb (bad) call mov sbb inc das add imul cs es lahf or sub sti fs mov decl sbb int3 xor push movsb xor enter push add sub imul sbb and jns gs inc es dec push bound nop (bad) out sbb xor add and dec lea sarl scas enter ret scas out or mov mov dec pop out clc jg (bad) js (bad) pop and add int3 mov call and add xchg je adc dec sbb xchg pop fadds enter hlt sti and lock xchg dec movl or dec lea add adc jg das mov sti or pusha mov and dec mov and mov mov dec mov mov dec mov mov loopne add aaa fidivrl inc mov jbe jp mov shl out decl enter cwtl add fmuls icebp (bad) add adc or ret or pop cwtl jmp (bad) push and mov (bad) dec mov dec mov or fmuls inc and mov ret push xor dec lea andb mov dec lea or dec lea iret sub xor mov add dec dec or dec or dec mov loope add pop call js add aaa sahf js loop mov icebp scas bound (bad) jne jb lock lock xchg addr16 mov dec mov imul xor aas mov jle dec dec mov dec mov dec mov lock sub mov cs mov push mov ret mov inc mov fdivrl data16 add jne sbb xchg flds (bad) aam jbe mov push mov fidivr dec mov lods cmp mov scas xor mov out sbb pushf and dec mov and push hlt lock dec or add decl (bad) out nop out mov aam decb inc mov (bad) adc loopne loop lret jp jne pop je inc std inc cmp ja xchg mov and fild jecxz call cmp ja inc int pop dec mov (bad) call mov imul shl dec cmp inc hlt decl dec mov dec mov je fmuls and mov mov inc push mov sub lea sbb mov nop and mov jne rorb mov ja lea jae (bad) pushl repnz or inc jnp dec cmpl xor test mov and call aam pop cltd rorb inc and jbe mov hlt dec cmp cwtl add ljmp add jp add (bad) (bad) xor jl mov pop adc sahf daa dec stc fidiv jg lcall je inc mov repnz cmp sbb jmp ja imul inc push mov mov test loop adc test add (bad) addr16 decl clc es lds (bad) jmp sbb icebp cmp lea pop in pushf sahf inc xor cs xchg push pusha or or dec or cmp xchg movsb cs pop aad pusha xchg stos xchg inc jb movsb lods outsb test mov popa call sbb inc adc (bad) jl jle jo into loopne mov loopne aam mov out das xor dec mov jmp mov data16 push dec lea sbb (bad) lahf sbb imul jmp (bad) iret (bad) aaa jl cmpsb push inc lea dec mov dec mov cmp pop cmc inc mov inc xchg cmp dec mov movl loop dec test dec mov je mov imul jae das mov jg pop pop dec mov dec mov dec (bad) in out or (bad) je dec mov dec faddp pop push in jo add mov mov sbb dec test js sbb pop add testl ja and rcrl mov jae mov or push xor call dec into insb and dec mov xorl jg push inc mov dec mov cmc fist push dec mov mov mov dec mov and pop lcall loop pop ret call test hlt dec rcr inc call adc lds jmp jg in mov dec mov dec and cmpsb dec jne nop add sub aaa inc iret je mov (bad) call or add in mov mov inc mov jmp jae jmp sbb fisttp rorl inc call pop and jb mov jmp jne inc push inc mov cmc test push sbb ja mov add mov mov and xchg sub call js dec lea fist xchg xchg sub ja ret or and fnsave mov dec lea pop pop add inc and xorb shlb or es or adc dec mov mov dec lea push (bad) fcomip add dec and dec mov dec mov rorl into add dec jo inc rorl cmp call dec mov dec mov xchg arpl js out push pop lea xor jmp mov mov lret mov test jne cmp cmpl (bad) jmp cmpsl fwait dec and dec xor (bad) popa ret call jmp push xor test mov xor scas mov mov fwait xor xor adc jmp and xchg or mov fs repz or push cmp imul imul mov out push mov dec mov push adc jmp dec rcrb push inc sub add call call inc inc pop fildll add dec mov into dec lock cmp jmp xlat icebp sarl fcoms jl mov inc xchg mov jmp dec test mov mov mov pop xor mov jle das jmp ja (bad) repnz sub aaa inc mov dec jmp test pusha mov inc or dec mov dec mov fwait aaa dec lea je jns sbb in cmp push add mov pushf cmc int3 std daa je repnz cmp outsb xor std je dec dec push dec mov (bad) mov mov or dec lea cwtl or inc or loope (bad) (bad) in xchg imul push and data16 or pushf xor and or call (bad) loope mov mov or pop popf push lret call sbb sbb xor mov les into das jns mov shrb inc and leave data16 fcoml sub fdivrl add jmp inc mov mov dec and dec idiv (bad) inc out dec shl dec test dec mov inc mov je dec cmp jae add jmp scas dec mov lea xor dec sbb dec cmp jbe dec lea cld cmp jb fmuls fadds loopne je std jg mov dec cmp dec lea mov mov sbb dec lea cmp je sarl movzbl pop add xor add cltd data16 jnp aas and add out or jmp add mov inc out es mov (bad) into push stos and and jne pop popa add ja mov mov je aaa orl pop pop pop mov cwtl arpl je push xchg imul pop inc mov jge lret dec enter jge out and inc or lahf jmp xlat inc or rclb or in faddl or out xchg sub test and or or cmp out inc or mov je cmp pop or aad je mov cmp outsl mov test (bad) out mov cmp mov or inc pop (bad) out daa xor (bad) dec sub dec lea std (bad) fisttpll outsl aad adc rclb movups dec cmp adc jge adc pop pop pop or adc and out sti adc xor inc inc dec stc insb ds push dec push push pusha push pusha pop jo out lds or jnp adc adc test mov jmp push adc mov nop pop adc aad incb je and ret cld pushf push jmp mov cld cmp mov dec cmp scas jecxz add mov ficompl or add add add test sub jne add push and popf adc lret dec add cmp out add adc mov out lds test pop add jg out jbe push push pop inc mov je dec pop or sar inc mov je inc inc stc jg or jo push push pop or inc push push fucomp sbb push or dec or ja or inc or inc mov je ret pushl pop or pop movzbl mov dec mov hlt dec mov jo inc fcoml dec mov xchg dec mov insb loop xchg fadd dec mov mov sub mov outsb sub mov jne cmp mov cmp repnz call or xchg adc lea aad xchg adcb mov mov mov dec mov je mov or cmp cmpsl push mov adc or stos xor mov fidiv (bad) call pop vpandn pusha adc les inc xor inc movzbl inc mov or inc mov inc movzbl out fnstsw or or inc mov and inc adc add push or add push sub or ss pusha loopne rcrb data16 xor movq dec nop mov add movups pop cmpsl jmp ja mov (bad) xchg (bad) inc add mov (bad) mov sbb es push psubw push nop les decb in in cld fiadd inc dec adc jmp js negb mov mov scas sbb sahf (bad) or or fisub or add or dec add jmp jmp mov cld aaa cmc pxor dec mov dec (bad) (bad) lea loopne inc xchg or in subl inc mov jo push cmp cmpsb js sub add jg and test pop adc pop imul cmp sbb add jo push xchg (bad) cmp and call (bad) aas hlt push and (bad) push dec lea dec cmp ja aaa add outsb push dec movb push subl cmp dec add xchg ljmp dec ror or call call adcl call add clc (bad) jg pop inc dec test je dec sub dec lea dec shr dec add dec (bad) (bad) out fwait jecxz lret dec lea (bad) dec cmovb dec test je dec mov call jbe,pn lea inc and dec sub add ss popa jbe dec push shr mov xor je ret stos mov call dec cld aas ljmpw test insb leave movaps jmp incl add dec lea loope adc mov mov mov (bad) fdivs adc sbb mov mov sti pop inc fbld pusha pop ds add push xchg fsubr pop and and xor sub add push out hlt pop push pop or outsb (bad) insb push dec movl fldcw mov loop es and fnstenv ds sbb popa push mov call and cmp xchg call cmp scas (bad) std jmp jnp mov dec cmp jne dec mov nop sbb inc into cmc dec and outsl and call call dec orb fucomip push adc sbbb pushl hlt pop mov (bad) fidivl mov call jnp inc push jne jmp nop push xor dec lea or fs or or or fsubl (bad) or or andl fimull sbb or andl into loopne sbb or push add mov inc mov mov mov mull movsb adc pusha push mov lret lds push or sbb pop cmp fcoms sub add inc shrl inc mov push mov je call xchg pusha mov sub (bad) dec notl movsl fwait les dec shr dec mul dec mov or les pop ret iret dec mov out out dec mov cmpsl call (bad) bound xor fstpt mov insb mov dec mov jp dec loopne clc call clc dec shr mov xor dec div xchg xorl jg insb and paddd add dec mov mov or movb add xor mov add inc mov or dec adcl adc add cmp fucomip inc push mov sub adc dec sub jne sbb inc mov outsb mov ret (bad) scas dec mov (bad) cmp decl rorl (bad) je jp mov call out (bad) (bad) (bad) decb pop dec add dec cmp je dec cmp je dec sar inc mov jne pushf dec bsr (bad) jle (bad) decl lock dec cwtl dec sub dec add call movzwl push mov call out jae inc and xchg call nop pop loopne push add sub aaa add lahf iret dec mov dec mov dec mov rorl dec lds jl jle je (bad) in dec lea dec sar dec mov dec (bad) lcall mov dec shl out add pop clc dec sub dec mov dec mov dec lcall clc dec cmp jae dec cmp jb jb dec mov dec (bad) frstor cld mov dec mov das dec mov fimul fdivs dec cmp lds (bad) decl inc or dec lea dec dec mov dec sbb (bad) dec mov push jb dec cmp jbe dec mov dec mov inc (bad) int in and or mov gs arpl dec clc dec mov and cltd sbb jbe ret roll fisttp mov cld pop shlb ljmp jno pop stos mov call dec sub or and pop fnstenv (bad) std xor cli and int clc arpl add jp js test dec mov cli sar dec aam (bad) decl decl sti dec mov dec not inc and dec lea je mov cli repz jp lea icebp lret cmp lds out add and call dec cmp fdivl insb gs add cmp pop cltd cmp dec xor sbb fstp in push call and incl mov decl icebp inc mov sub call and cmp lods (bad) popf and loope clc sbb push and out add call popf and pop fisttp dec cld out cltd fucomip movsb sbb decl test dec out pushl cld lea dec mov out dec mov dec mov dec sub dec sub dec fsubr cli scas or call out add clc add lock ds and pop dec inc jo fcomps mov push je dec sti aas jo les add dec mov dec mov dec dec jne out add xor jmp ret fdivrs pop call es mov push mov in mov fsubrl test dec mov mov inc xor std lahf or mov xchg inc or imul or mov mov xor call pop adc jge dec or push dec sub outsb jge fistp xor lea dec mov out lds sub (bad) mov pop mov xchg imul inc stos ret mov fadd dec mov sub js test cmp jl dec mov dec mov jg mov sub push call jmp rcrb loope xchg sub sub cmp cld or pop dec addl movsb or cmp decl mov dec add adc dec push decl dec cmpl cmpl inc outsl sbb xchg fnsave icebp lcall inc mov je (bad) je adc icebp and add sub dec lea cmpsl dec lea inc mov addr16 and fsubl sub pop outsl add dec sub sbb stc add jo push (bad) mov add inc dec add call xchg stos aad mov jle decl fisttpll mov sahf (bad) jmp dec test jle (bad) divl adc imul add xor ljmp (bad) fistpll mov dec cmp scas clc arpl dec lea jb jbe int3 jae dec lea sbb decl dec lock mov dec (bad) out dec pop dec cmp jb (bad) clc jmp pop dec lea pushf dec ss das shlb lahf dec lea decl in dec not dec and dec add jmp pop dec test jle mov mov call rorl outsb fcom ja or int movb idivl out sbb clc jb dec mov (bad) jae ja insb test scas ret shr mov dec cmp scas jb jmp dec (bad) leave xor cmc dec lea mov adc xor cmp jbe dec lea push scas (bad) mov (bad) jb dec cmp dec mov lret je fildll sub jmp das mov mov and add lret dec mov call loop mov adc add xchg mov addr16 cs repnz (bad) loope cltd in add shlb iret inc outsl add call (bad) mov mov cmp (bad) ja cmp je cmp je inc ja cmpsb je fnsave xor jg dec nop dec sbb jbe call call in pop mov mov add cmp mov adc testb lods or cli or dec dec mov inc jae mov aad mov jb cmpsb pop dec mov mov test mov imul cli lea lea cmp je mov lcall cli push je cmp jne adcl pusha decb or jae sbb lret add xchg fistpll outsb sub repz jo pop andb incl cmp je jle jg pop cmp jmp inc and adc hlt jg or inc add mov jecxz mov dec cmove call rorb and cmp in nop ljmp popf andl adc sbb push jae std xor inc cmpb dec push cmove call es inc pop jg out xor dec cmpl push jecxz inc mov lea dec lea or call adc loopne inc callw lahf iret aam out inc mov mov mov sub and sub (bad) bound add xchg dec mov inc movzbl add add mov call repz repz pop mov ljmp xor push call out jg out xor dec mov mov call dec mov call lock inc dec mov call cmpsl mov adc add add fsubr add les adc add mov subb and cmp push je decl mov mov daa daa (bad) mov pop popa call inc pop pop xor fistl jo rorl sub js cltd adc or pop mov ret cmp inc lahf fcmovbe std push jnp dec sbb arpl pop xor push addr16 aas sub lea iret decl mov cmp adc or mov dec mov cmpl add and cmpsb and mov aaa cld iret addb lahf cs call cli mov cs icebp call inc and inc fistpll mov or subl inc fcomi xorb and outsl dec mov pop lds dec call or xchg mov (bad) or push loope pusha or dec adc cmp je incl sub add outsb pusha push or and and dec ficomp out inc call push cli out adc add call jae call outsb imul movsb shr scas add inc std dec xor cmp movzbl mov (bad) call (bad) mov call jle and arpl mov mov in call (bad) divl add cwtl mov test xchg mov dec jmp xor rcll add mov cmp mov adc hlt loope cmp ret cmp js inc lret test call (bad) mov and out push mov and or inc mov dec mov inc imul mov js dec outsl add aas mov push or mov dec jmp xor jmp jecxz jbe inc add dec lea jp lods ja mov call rolb repz in call scas ret test jne jnp loopne xchg (bad) (bad) aam cmp ret push add sbb push scas gs and mov out lods add cld sbb (bad) xor mov adc mov (bad) push and dec mov dec and call cmpb into outsb jbe ret or je cmp push repz out mov adc pop dec cmp jp sbb jmp out cmp or push sub jge les inc mov xor dec lea je dec add inc mov dec lock mov inc mov push aaa inc jne lods lods cmp mov lock lea jnp sub adc adc sub dec pusha rorb das or jmp jmp mov push rorl add lds (bad) (bad) incl dec roll clc add mov call dec lea stc add ds movsl aad or or fldl or je inc fbld cld or (bad) add aad inc sub mov je cmp jne dec mov xchg xchg fidiv xor call push shlb sbb sub sbb insl dec xchg adc jne dec push lea dec sbb xchg cmove adc and and jne adc leave xor popa rcrl (bad) mov je adc cmp aam jmp cmpl out ret push js ss xor jmp dec add ret cmpsb xchg lds sub andl call inc xor mov cltd shr xor add leave js loop call push or testl mov mov cmpsl (bad) (bad) out std cmp dec mov je movl subl or jne jl adc cmpsb pop or mov enter into xor ret scas ret inc adc (bad) (bad) flds and or call jmp scas cld rcrl dec pop mov and xor jae xor sti mov adc ret xchg rorb mov and sbb dec lea stc or jmp call test xor or jo push es das (bad) loop icebp call pop mov adc jmp sub loope (bad) xor jnp ror jle cmpsl mov xlat mov jmp inc ficoml call jmp sahf adc mov dec mov pop adc movntq out call dec cmp jne iret mov loopne dec out shrl xor call or jo sarl or sbb xchg outsb xchg jo stos cwtl cmc xlat mov cltd je mov ds jg mov mov mov mov mov sahf add add add xlat jmp lea inc (bad) call jle call mov dec mov sub dec mov dec mov dec add mov rorb insb and call inc lea mov mov dec arpl inc dec inc movb call push mov mov pop or dec mov call stos pop or fdivrs (bad) pop icebp dec roll inc mov add in call sbb (bad) pop aas dec mov xor nop call insb sbb inc xor lahf jg mov xchg into jne mov test js mov xchg rcrl call cmp mov lock inc mov test (bad) jl mov jo xchg inc add pop (bad) dec and push out daa or inc lea test sbb cmp xor jg scas sub add (bad) arpl dec mov inc sub adc mov shrl sbb (bad) out dec mov dec arpl daa cld lcall pop movb dec lea call fs frstor pop (bad) mov add loopne jecxz insb js jl pop bound pop or xchg jo dec out mov rorb xchg fiaddl pop dec lds out cmp into or pop inc mov adc popw idivb mov movsb push out aad (bad) aam adc sbb pop sub ret (bad) adc icebp call add leave iret pop dec xor pusha mov or cmpsb push icebp inc inc test mov call les mov xor sahf mov dec lea mov or dec cmp je fmuls dec lea call or jecxz loopne je dec in subb je dec mov (bad) adc dec mov push fs std aaa cmp rorb inc call adc sbb push adc push sbb add mov inc call dec call or adc push add pop jbe clc adc lods xor xchg add dec nop xchg pop icebp hlt and sub pop jo icebp push test (bad) je sbb imul xlat cli dec cmp je orl or mov mov mov or je add fwait fwait push add cmp test sti xchg mov (bad) (bad) lock or sbb inc jbe cwtl adc adc testb adc inc call dec outsl test sbb dec mov xor or enter mov inc cmp dec fdivs imul fwait cmp adc loopne pusha push fwait sbb rorl fwait sbb mov xchg test aam xor xchg dec mov jmp inc outsl aas sub ja rorb cmp je out clc mov dec je iret dec sub cmpsb push andl stos push mov (bad) decl add add pop ror je add adc fsubl call dec lea rcl decl adc add popa lmsw aas adc jbe fldenv adc adc out push pop sub push adc lcall add dec cmp je xor js mov cmp daa mov adc call dec or daa jnp lcall ds mov sete out addr16 mov cmovle xor jo pop cmp stos add jg,pt inc add ja pop pop jmp mov nop cmpl dec mov dec stos jg sub adc dec arpl lea ljmp call mov dec lea xlat dec sub inc test inc psubb lock leave dec add dec arpl dec add std or (bad) ret inc mov shl and dec lea (bad) (bad) incl je dec arpl dec lea dec lea dec shl dec sub dec lea sbb test lods adc btc mov jg add cmp fisttpll scas lret rorl enter decl dec mov call sub ds mov sbb xchg (bad) (bad) out push cmpb dec lea je dec arpl dec lea dec lea jmp cld dec shl dec sub (bad) cltd (bad) mov nop dec lea add dec mov lahf clc push ljmp nop call dec fcomp out mov push inc mov jg inc add mov mov pop dec lea or call inc jmp add jle dec mov dec add mov add dec add add jae out movl insl cli out faddl jne dec mov mov push dec cmp je dec clc out mov sarl sbb call shr outsb or ja pop arpl rorb xorl shl loopne mov mov call jmp dec pop (bad) jge iret fimull push adc dec jmp aad and ret mov or mov or add and dec rorb (bad) or hlt fild call movl icebp es jae call je dec (bad) in ds ja inc mov gs call mov test call sub sub fstp into sbb addl and adc aad fisub (bad) andl dec ja xor fist call cmpsb push out jne xchg outsl or outsl ret pop cmp ja or nop stc sub jge dec sub dec in addl mov neg lock xchg cwtl addr16 mov dec mov call mov jp add fild add (bad) cmp jne inc mov dec mov sub out inc les pop add add leave addr16 and sub dec and mov jecxz cmpsb push cmpsl add dec or dec cmp jo je cmpsl sub shll mov dec shr dec lea dec sar dec pop pushl (bad) jl cmp lret and inc cmovne dec and inc rol std test dec mov mov cli dec sub mov scas mov cmp rol outsb mov xchg add inc movups test mov inc mov inc cmp je (bad) and fadd loop test movsbl push inc sub and xlat leave fsubl pop ds cltd loop push ds test mov das outsb movsbl inc sub repnz cs inc testb (bad) mov jnp test inc movsbl dec mov inc sub je fsubl push dec lea xchg or aaa jbe push sub and push and cmp out jno or inc inc jge and lahf test jno lahf add push or lds xchg sub cmp jmp xor pop (bad) jb popa or add sbb mov icebp xor inc (bad) rol cmp add inc nop ret mov ret push fist jae cmp push or cmp je dec mov call test fdivrl mov je pop xchg std add (bad) adc mov add ret aas ja xor clc dec pop lea dec mov mov imul cmp mov add movl inc inc xor pop or aad out pusha xor call sbb xchg add loope mov jo sub push push dec and call dec or and je inc out sbb out repnz mov ljmp icebp dec and and inc sub and mov adc inc sti dec and pop rorb inc je inc dec sub dec sub loopne lcall add test dec cmp and loop je test std arpl out mov inc cmp jne fstl icebp call jne ja testb dec lea cli je mov add test inc loope (bad) aaa call sbb xchg dec add or pop mov jle and fdivp sub inc (bad) decl and mov inc mov dec or add inc mov outsl pop dec and or dec add dec scas dec lcall test push add dec mov dec mov sub out xor loope sar mov sub and sub dec and test xchg sbb inc cli dec sub dec sub shr dec lahf inc sub cmp pop sbb mov jne leave jp fs jne mov mov cmp and inc cmp call and shll xor push xor adc adc daa cld mov nop decl outsb jnp xor outsb out test cltd add inc movl cld jmp jo into rolb add add inc jb test push mov je je xor dec jae out sahf xchg test inc mov inc jae inc mov inc push xor push inc adc mov test inc inc push or sbb xor mov orl cli (bad) (bad) jmp and dec mov pop sbb icebp inc std dec lea xor or stos dec lea pop mov fimul test dec jmp out pop popa xchg test inc jae sarl gs mov push je inc mov jbe mov jne lods dec cld cmp das xlat pusha mov repnz cmp jae mov cmp hlt dec lea pop test and inc inc cmp test sbb dec xor call jbe adc cltd fidivr fimul test lcall sub and sub cli dec insb inc and test sbb cmp dec mov out sub inc jne pushf push xchg test jmp jae inc fbld dec jle cmp sbb mov test int3 adc test aaa xor test aam and jno cmp fistp lea add les or dec and lret cmp pop mov movl stc incl cmp (bad) clc (bad) mov xor test sbb in cmpsl mov jmp sub (bad) cmpsl test outsb (bad) out jp or je cmp add out test or out add sbb idiv and outsb testl scas xchg cmpsb roll scas cmpl idivl jbe jmp shl mov mov inc sub mov insb cmp je aaa fdivrs bound sub (bad) sub std and mov inc ds dec and jg xchg push ret sub and jno dec je out xchg lahf test adc jecxz or aaa ret mov arpl (bad) mov dec jl test push (bad) mov sbb loopne adc pop movsbl in pusha inc push in scas push movsbl mov idivl test adc pusha jno pop and sub (bad) xchg cmp loopne or test add addr16 pop dec push call outsb hlt jne sbb push movsl mov or mov add lods nop call pop jo aaa push and dec ljmp inc rorl ljmp push add mov pop pinsrw cmp xor (bad) mov adc jmp in out outsl push or imul sbb test push cltd adc orb test add ss cltd cmp (bad) dec aas xchg cmc adc dec jle lret sub pop jnp jmp push or sbb popf dec or jbe push jl mov call test cmpb stos pushl add inc movzwl cmp aad fisub faddl dec mov ja dec mov call inc testl and lea test je inc (bad) sbb sbb sbb adc je xor jmp loopne inc lea xor call jmp sbb mov stos hlt je popa inc xchg jg test jmp adc dec dec dec mov (bad) jbe inc and dec jo add movsb stos js mov dec (bad) sub test adc sub adc loope lret dec mov mov push dec mov mov dec mov jp jg ljmp add cmp not fidivr mov dec dec mov xchg loopne add movl sbb (bad) clc or dec mov rorb push cmpl mov sbb sub cmp xlat hlt dec lahf or lock out inc cmp (bad) xlat mov inc fcmovbe xlat test jmp xor xchg cmp xchg and jnp cld dec mov cmp mov xchg pusha push jmp sbb xchg xchg mov ja cmp repnz sahf or leave xchg push push in push mov (bad) popa mov fadds fnstsw lret dec mov mov mov ret incl cli movb dec lea mov mov movl mov push pop (bad) adc orl dec movl or (bad) (bad) mov sbbl movl test xlat adc fistp pusha dec xor xlat in push pusha add addr16 cld xor push or mov jnp jnp adc xor or add mov movb dec movl pop sbb pop dec mov pushf movl pop inc das add pop jne les pop add xchg or rcrl jecxz jmp nop outsl xor mov xchg dec mov je movl sbb ljmp out jne or sub call fdivrl dec lea sub jbe bound push mov (bad) je cmpb je (bad) bnd mov dec mov mov dec mov inc and movzwl pop jge orl pop push js cmp sbb call lahf neg xchg test les dec cmpl ret jg cmpl jne xor jmp push loope test and push mov xchg out sub or bound pop int3 mov leave jecxz or push out inc sbb add nop pop aaa movsb orb and clc call mov add aam xor adc outsl das movsbl mov out enter andb into mov and enter daa insb cwtl aas js push jne jne xor sti add dec add add outsl dec mov ret mov cmp jbe mov (bad) jecxz xchg js cli add test test clc cmp jne (bad) mov test ret pop xchg pop push mov test mov jle call dec mov ljmp and or jge xchg jnp jg mov or call push outsb inc cmp push popl dec mov sub aaa mov call jle pop rorl lea or or mov xor add popa movsbl push add fild lea dec mov dec lea mov dec lea or lea or loopne (bad) (bad) cmpsl mov pop add gs xchg sarb or or (bad) push mov xor add insb mov sarb sub outsb jmp dec mov jae inc mov xchg dec mov dec push or and dec mov add dec mov (bad) and jmp adc jbe decl mov dec cmp jge dec mov jne add scas test and lea out push stos mov lods mov outsl add outsl inc adc inc test test or or aas push lahf or inc sub mov dec mov dec cmp clc inc loopne jle xchg cmp je dec mov and ja lock call js dec mov push xor jge js repz push scas ret imul cmpsb stos sbb test out cmpsb jle pop dec mov jmp add icebp roll ret ja push dec mov sbb daa (bad) out imul dec mov cltd and dec mov mov icebp mov pop inc call test adc jno lock repz mov xor mov jp sub insl call push sub inc cmp add cld out mov or shld nop jge dec cmp push xor dec call stos sahf and xchg test ds cmc out mov adc fisttpl clc jne cmpsb dec cmp jg cmp mov dec mov call jmp ret (bad) adc hlt inc leave lahf shlb ret dec (bad) push and mov dec mov and mov jle test jne jmp dec decl push adc mov dec pushl inc loopne inc dec mov dec mov dec cmp jg ss mov xor jmp test (bad) jne aad lea mov test in and xchg aad repz sub pop push lret rolb adc pop xchg cmp push int jmp pop out dec mov lds popf imul or dec jecxz mov jmp aaa jne mov dec and leave dec cmp setl jmp xchg lods popf jmp fnstsw pushl dec mov jne jmp pushl inc adc mov mov cli jg sbb jecxz nop sbb xlat loopne pop inc push pusha call dec pop aas je dec mov dec cmp incb in mov out mov dec cmp je cmp pushf loope jp aam movsb fmuls push push ret jmp out into and out dec cmp jne jmp jg mov dec mov jmp fucomip pop push mov xor ja je inc mov aaa lea mov adc or add push inc push fstps clc add adc das sub mov sbb jmp nop lock (bad) push add rolb add jmp shrb mov pop jno add arpl and sub mov mov sbb aad xor mov add dec xor repz sub inc and dec shl dec lea adcb test sbb xorl sub andl inc mov pusha xor jg test cmove dec (bad) sbb sub dec shr dec add and je xor jg add adc sub inc mov jg sbb (bad) add adc xchg and loope ds clc jae sbb cmc inc movsb and add js push dec lea push fidivr inc xlat inc mov inc sub push cmp adc adc xchg add dec lea xchg lds fcoml inc jne mov jno jecxz and ret loopne inc dec movl dec movl mov shll lock lods ds mov dec cmp je int3 shrb and pop dec lea adc jle je ja (bad) fbld ja pop adc popf aad notl mov movl std or dec cs push (bad) aas push cmp call dec mov roll mov jg mov dec and das mov mov out (bad) mov ljmp inc and and test dec pop dec and dec sub dec and xor shl dec add jecxz adc dec je sbb mov lret jecxz dec shr das cli fwait js dec sar aad sub and decl mov aas xor (bad) test dec cmove dec sub sbb xor lds test push add test or je loope and jae test movsb adc or inc inc add test hlt cltd clc out scas cmpw dec lea lahf push mov loopne (bad) jmp mov inc mov cltd test lds or (bad) cmp test aad call ja jecxz adc sub test or and outsb mov inc inc lret jb cmp addl adc adc inc sbb out add inc and push in jo inc add pop or add xor dec dec and jne dec (bad) hlt add dec push mov sar adc dec je (bad) jle enter test daa jmp jo and rclb lea inc jb fldl push adc dec mov out dec aaa inc mov stos fcoml xor loopne add out test mov or xchg int3 add adc outsb divb xchg aas (bad) lock test mov call into xor push movb adc imul xlat cmp cmp popf cmp popf xchg xor inc ror test imul fldt jp rsqrtps repnz sub movsl test and test cwtl repnz or or movsl add or test dec mov pusha mov test lock cmp jmp inc int pop data16 mov out sbb test xor out mov sbb or pop jmp pop cwtl sub andb pop xor jl xor stos or adc negl push test das ss and adc out mov iret jo push mov movsb out fadd fmull dec jmp les mov or jmp shr xchg and and lahf out cmp pop test xlat je and cmc adc loopne sbb inc pushf dec stc add xor test je adc fwait add lock ret sarb dec mov call mov or mov fbstp sbb call aas sub pop adc (bad) add mov push (bad) ljmp lcall test lea (bad) icebp icebp call sti test xor call jbe sbb out jg incl xchg push dec lea dec mov xchg int pop jl pusha inc mov lcall pop adc add mov (bad) (bad) call add fwait stc dec pop testl jmp insl inc mov add je and sar je insl mov orl and pop addr16 pop jb adc sub loop popa cmp cwtl movzwl cmp adc mov push call xchg inc adc call xchg mov (bad) call push pop adc ss flds call mov lret call sub mov loop fsubrl xor (bad) and nop scas outsl clc pop pop mov inc cmpl rorb int out ja dec mov je dec ja dec lea cmp into and push and push add inc ljmp je and lahf adc jns add dec mov add sbb cld cli and dec mov xor cld xchg inc push mov mov dec mov xchg mov fs (bad) repz dec or cmp pop mov dec sub dec and pusha dec mov dec add sub out or dec cmp and test nop loopne,pn in jmp (bad) mov out pop shr xor mov add sub mov mov mulb decb (bad) aaa xlat icebp dec sub inc clc dec sub dec shr mov outsl and and je out or inc fwait repnz inc cld push xchg testb inc movsbl xchg clc or loop sub cs test xor stc daa out add pushf push ficoml push (bad) dec and je inc cmp lock mov shll test sar lea dec mov add xor push lods je dec sub mov and dec or dec cmp mov call clc and das rcll (bad) jae mov lcall (bad) cli jecxz add cmove dec and test dec cmovne dec sub dec mov dec sahf dec mov xor cmpsl dec inc test test inc inc mov mov es xor mov test xchg or adcl ljmp cwtl cmc jns,pt sbb mov iret cmp add pop dec cmp je loope or test test mov fldt ljmp push sub outsl stos and push xor or jo (bad) jg xor mov xchg mov call jmp sub push sub std outsl test sbb add stc jmp out rcr sub cmp out xor add sbb and hlt inc xchg jo (bad) fstl and testb dec mov je pop cmp push adc out push add mov cltd inc xchg add sbb pop pusha js and cmp push pop daa pusha test cwtl or or mov and mov mov add jmp pop rclb pusha push inc std nop stos cli and lea adc ljmp adc clc addb sub jmp and add or cmp inc cmp or popf in bound add rcrl cmpsb jmp cmc push iret inc mov adc jle scas mov sbb iret push xor pushf lds mov dec clc jmp xchg xor jp pusha loope imul cmp mov mov and mov push inc in in add inc pushf lcall stos or xor cmp fsubl inc rcrl and mov and popl inc stos lea into insl mov add cwtl or daa test inc or rorb ror fiadd mov mov sbb mov call test jge push sub cmp test out mov push xor xor ljmp ret fs aas (bad) cmpsb push mov hlt or movzwl popf dec mov and or into int3 lods mov xor gs xchg test mov out jns lcall pop jmp inc sub and sti xor iret sub jnp (bad) mov out mov adc pusha add and fnstenv mov dec out (bad) cmp mov shlb mov sub jmp (bad) je repnz mov sbb pop xor cltd cmc push sbb (bad) rolb jae outsl add jle dec xor xor outsb aaa pop in mov (bad) sbb lds jp bnd ret inc enter sub gs jae xchg pushf add jnp test jmp clc (bad) and subl xor orl sub icebp add and icebp (bad) (bad) mov ret sbb jb (bad) je lds xchg dec cmp je sbb mov fs mov and mov inc push addb cmovs js (bad) fldl jne dec cmp je dec cmp jg dec lea or push test int3 fmuls inc adc inc xor mov xor push repnz stos les and pop subl std adc and or push or lahf dec add inc inc movsb and add std (bad) mov and inc mov dec sub dec mov and dec add pusha dec or je add cmp dec and ja icebp pushl dec add dec cmp je sahf mov loop mov sbb sbb test (bad) cmp adc adc jl pusha inc cmove dec and pop dec cmove push cld clc dec sub inc mov pop inc sbb inc mov or je jecxz pushf test dec push mov test adc into and pop shl ja xor dec cmp je dec push aaa fs cmp add outsb xor or mov adc hlt jne loopne xor cmp and push int3 scas sbb mov incb popf int3 bound add rorb (bad) xchg iretw xor es repnz ljmp shl push dec sahf mov mov aas dec inc sarb bnd xor and mov and sahf ja mov push sub test and add icebp repnz or dec and dec mov pushl push cld ss mov jmp iret dec mov dec mov pop bswap xor in push sbb or xor jge mov mov test je dec xchg addl icebp (bad) call mov stos cmp rcl inc push jne sahf lods jp test ds push mov jae ror sbb inc push es adc in add jmp andl (bad) je add aam pinsrw rolb addl or outsb (bad) dec jo ja jmp sbb sbb and push (bad) sbb scas mov outsl sub fiadd push mov test push jmp fadds add sbb inc sub inc cmp jmp jb aas imul inc jb mov and mov dec mov icebp mov aam dec mov sub lret das xchg data16 rorb mov jo xchg push shlb jmp imul dec out jne cmp mov pause pusha push mov paddsw and adc rorb mov mov call arpl cwtl test sbb adc pusha add dec movl jmp gs xchg hlt dec inc cld jg iret dec mov dec lea dec addr16 lret mov cmovns or (bad) dec mov inc mov push xor sbb je mov push and dec sub dec and inc andb loope dec lea pusha push (bad) xor jnp repz clc xadd test mov dec mov dec rclb add xor sbb jne repnz push inc sub mov push or (bad) popf inc jmp test mov dec cmovne dec sub jne pop pop add xchg (bad) push dec rolb add test jne pop popf pop out mov mov call stos cmp and std pop mov jne cmp mov mov iret push xor add sbb bound xor jbe sub xor add clc sub rorl test cmp fadds pop inc jp sub sub mov lea pop das test sub ret adc cltd jae push les jno ret cld fs into push and fimul movl or clc and inc xor pop jp and pop jecxz shlb cwtl call sub adc fild (bad) mov jmp xchg lock sbb stos cmp in mov outsl int3 jmp xchg jl test ja call scas and sub add inc incl jne cmp je ret out cmp jne or out pop mov jmp pop xlat iret jno mov mov push fistp roll mov jne jp and sbb lret test add int3 pop je inc sub in pop fadd data16 test aad in sub lea sarb je xlat push hlt mov xchg sbb push xor ds cmpl lahf cmp jmp jo adc xor sbb in push xor pop out call and out cmp dec xorl pop jmp lahf adc mov inc test lea cmpl dec lea and test test (bad) incl je jns outsl test clc test fildl sub call add push and mov or outsl pop or aad call mov pop out add outsl push dec sub inc dec mov aad stos es push push cs pop dec mov in sbb and lcall or jle (bad) mov cmp pop sti mov push mov ret nop cmpb pop dec mov add adc rcll mov testl jmp psubusb fild push subl mov std and les mov mov dec lea and mov je movsb (bad) fist sub ss dec mov jne dec (bad) cld inc jo mov pop pop jmp or cli aas hlt jmp add pusha dec mov test dec mov js jb xor dec test add stos sub cmp push incb jp dec mov jb test fstl jmp adc lahf dec mov sti dec cmp (bad) xlat pushl js add dec cmp test test je fildl sub add and pop aam adc lret adc addl or inc push fist pop dec cwtl dec sub dec mov or bound rorb xchg movsb inc mov lock mov xor add lock test lahf repnz bound cmp inc mov push xor add mov inc mov or or fldl loope dec mov dec mov scas inc aam and mov jne or mov mov aam leave std jmp dec fwait xchg (bad) fild xor push pop nop dec add clc and movzwl ljmp inc in mov cwtl mov mov les xor jne add outsl sub outsl jb (bad) xor add sbb dec add cld popf jmp inc cmp dec mov mov int3 std and sub or xchg ret loope push and xor call lods jne test ja in xchg add sbb call fistpl stos movsl dec add cmp mov cmp pop sub pandn sarb jae jmp nop dec xlat mov call jmp mov inc inc mov js push adc push xchg sarb cmp stc call ret dec jmp pushf bound and push jno inc mov lea and gs adc mov call xchg mov xor inc xchg pop add test adc (bad) or xchg xor stos iret int (bad) sbb add mov or and and or fmull sbb cmp outsl or jae cs data16 pop xchg test test or les lods add xor sub or roll jle and mov adc dec movl mov iret push sbb pop (bad) jnp fldl (bad) xlat (bad) les add test sbb inc and or icebp or je dec mov fsub bound insl pusha xchg and popa aad adc std inc sub pushf and inc mov cld xor sub pop pop dec lea or test add dec lea dec cld dec clc decl jecxz or dec mov mov dec or dec mov lcall je push (bad) xor add outsl sub loopne dec mov addr16 jo iret sbb out test cmp dec mov add incl jb mov fbld mov lea leave inc mov adc in inc lea or push add cmp std or ret cmp xor fs xor adc rorl jmp sbb neg std cmp je hlt dec lea dec add (bad) ja fwait (bad) (bad) dec add dec mov je in dec mov je cmp adc ljmp mov xorb ret loop mov push xchg sbb xchg add add inc cltd add mov lea sub or pop fnop and dec sbb and mov loope dec fs lret mov mov std and mov roll sbb add rorb dec or inc cmp jne or jae and jb loopne test or add mov or ja mov lret dec loop dec mov popa clc fimul test dec fdivp (bad) cmp push test aam je sbb clc mov sub dec lea test sub adc push fldl fimull xchg ja jb push inc and test add dec sbb call es subl push mov or test scas enter push mov cltd add dec stos add add mov shll cwtl jp sub pop mov cld lcall cwtl push (bad) in clc sbb inc add (bad) sarb addl (bad) jle jecxz mov and inc xor jge mov je dec mov jg rolb stos bound testb inc sub popf mov or add or dec dec rolb pop pop adc add dec lea and xchg popa (bad) addr16 or ret decl js and add movsb inc or jne xchg dec dec or scas aas mov dec mov adc pop pop push movl ret add dec mov push enter sti sub loop fnstsw (bad) (bad) je sbb ljmp iret shrb lea lret aam pop xchg add dec and add xchg dec rol lcall cmp fisttpll dec sub cli outsl andb mov dec mov mov je dec ret ljmp outsl outsl cmp jne inc sub dec lea andl hlt pop dec push movsb mov or pop or dec push mov (bad) clc (bad) sbb mov mov fdivrl ret and and fisttpl push pop inc push dec lea fiaddl or sub mov dec jge lea xchg mov mov jmp cmc inc lea dec and dec mov dec aaa cmp add das add fadd cli pop dec cmp jl jmp fucompp dec lea jo sub outsl loop (bad) cmpsb sbb mov call dec sbbb mov jl addb sbb cmp and and push (bad) sti push ss ret xchg sub mov dec and or dec mov cltd lcall popf and aas xchg insb and add lea push xor decl sbb dec lea inc in mov inc mov and inc hlt mov popf and movb out das (bad) mov lock cmc (bad) adc scas mov push and or dec pop clc jnp or test push call sbb and dec push rolb sub dec cmp mov (bad) fs xor sbb call pop mov outsb pusha call fist ja sbb inc dec mov icebp (bad) cmovs adc jmp outsl ret sbb push or imul cmp push jns or mov call pop mov dec call call inc test adc inc pop inc das mov in movb and mov adc jbe data16 inc sbb pushf add mov dec cmovno fisttp bound test push sub (bad) jne iret js out dec and or pop mov mov loope mov lea ficoml jbe fiaddl dec lea push cli sbb lock subl cmp jge mov movb add xchg jns mov dec mov sub imul fs inc cltd mov add call divl mov js sub push and push dec addl ret (bad) in mov dec push or sbb lock push push in mov ds in test jmp or lock por out jge jnp je dec ljmp lds loope sub and push cld or shufps daa mov negl lea lcall ret mov jmp nop dec lea fldl2t sub mov mov dec movl std pop dec mov movsb and psrld mov loope push dec ret dec mov cwtl mov mov push imul mov lds divb inc shr and sub bound adc (bad) xchg jg jnp or aad xchg in push cmp jle xor jle int3 adc xchg add dec outsb xor sbb ljmp lea je sbb xor jmp ljmp cmp mov dec cmovae dec dec push aaa fnsave mov xchg test cwtl inc test sub pop mov inc push jmp inc mov ret cmp daa fwait adc jmp inc enter cmp jo nop in xchg cmp cmp cmp or xchg (bad) cwtl ret fmull mov pusha jp jae mov mov dec mov ja sub cwtl stos loope mov mov dec mov push or add adc sbb pop fsubp add sbb scas and pop jnp inc test ja dec mov pop out aaa gs pop js push or or lea jmp or mov mov jnp call pusha mov dec mov sub icebp pusha dec mov dec mov jmp scas cltd mov rclb fsts jle add test fld1 xor loopne test dec mov dec mov inc sbb pusha cmpsl push addr16 es adc sbb mov dec sub dec add loope cli add mov les mov ret out (bad) incl dec cmp jb and cmpsl sbbb addr16 mov and and int add ja clc pop and xor (bad) (bad) call test iret dec mov mov cwtl push ret jbe adc adc roll push xchg sbb loope int xchg sbb cmp and ljmp pusha call sbb fildll push or jo (bad) int3 dec push cmc mov daa push (bad) jmp lea dec sub dec mov dec lea dec shr dec add or jmp add dec cmovb cltd test cs outsl mov dec ja add (bad) inc and dec add fidivl dec sub fwait (bad) dec test sbb sbb xchg (bad) (bad) lcall dec mov dec lea dec add dec cmp jbe stos jle push dec (bad) out dec cmovae fildll dec mov test aad dec loopne push je nop and push (bad) je jno mov jne xchg fsubl je jo nop dec mov push lret dec or dec push dec lea inc dec cmp jbe hlt lret mov popa mov ja call cltd cmp dec mov dec mov dec mov movsb (bad) cwtl or pop inc or icebp or pusha mov and add fbld cmc (bad) dec insb xchg lock rorb and leave shlb outsb cli sbb mov lahf mov test dec inc inc clc test mov and push sbb js pop inc pop or and (bad) jb cmp xchg xor jns sbb ds lea lret sub jmp out outsb xor jae xor movl pop into mov lret int add add (bad) je ror jmp cmp push push addr16 sbb push add in push mov lods or rclb in add jo sahf data16 out mov call test scas pop out lea int add aaa inc jno int3 pop test adc pop sti pusha movq je push dec sub jne test pusha push jmp push xor mov dec mov js dec mov dec mov dec inc mov pop add or adcl push fisttpll jge loopne adc outsl pop mov cwtl leave lods lock (bad) jmp ljmp imul (bad) xorl mov shr jns sub or jnp inc add dec mov xchg and pop movsl or cmp call mov cmp js (bad) je (bad) inc into cmp divl inc cwtl cmp lret add lahf movsl adc out adc movaps adc mov jne movb adc lcall test in les pop lcall xor int3 stos or push inc mov cli add cmp mov call or mov push inc inc mov fsubrl repz add or mov cmp fiadd or sbb fmull imul pop jb inc fsubl add and adc lods movl jbe sbb lds rdtsc mulb addb in (bad) (bad) sti inc push lea test movzbl inc cmp jne mov in loopne mov inc test je dec add cmp (bad) jnp dec push add cmpb jne push icebp mov ja cmp ja mov sub lea dec add dec and ss push dec cmp je pop js and sbb mov mov dec sub dec not stos je fsubs xor sub ja es aam dec xchg mov (bad) fistpll cs movzbl cmp ja dec bt jae xor jne decl inc cmp jbe rorb (bad) xchg mov je movsb (bad) and imul fisttpl test adc and sbb jl dec lea ja data16 xor push inc (bad) out dec aad sub jbe mov dec outsl test rcrl pop jge nop xchg das sub in je jo (bad) popa pop xchg adcl loope fadds dec mov inc cmp mov cld jno xor jae (bad) ja repnz loop test pop pusha sub and fnstenv scas dec not inc and je add dec pop cmp dec jg mov je or je xor (bad) and mov icebp jae mov push shl mov mov ds dec cmp test bound lcall add int and cs cltd in lret dec lea sbb popf dec inc sbb sbbb dec mov dec mov das pop lds adc mov inc mov movsl or add dec xchg pxor adc data16 pop ljmp test xchg and ss scas inc js cmp adc xor je lahf popl inc aad aas lock mov inc sub dec cmp jne jmp jge adc or mov adc xor mov (bad) decl jge jne xor or call (bad) sahf xchg test es sub fucomp mov nop (bad) xor sub add les or sbb sbbl xor lea dec lea loope lret fs (bad) jne xchg dec std aaa add sub dec sub dec not cltd add sbb das xor cs cltd mov orl or je sub inc mov inc data16 outsb arpl jmp rcpps xchg sbb xor add les sbb sbb add add std sub (bad) fist adcl dec cmp dec mov jne movdqa in sbb lret or and repz adc fnsave shll je add por bswap cld (bad) jg aam shll xlat loopne inc xor je inc movzwl inc loope call inc bsf inc cmove add dec cwtl dec lea and inc pusha imul pusha pushf dec mov out jae out int lea loopne ret (bad) movzbl lret and std (bad) std bt jae dec sub dec not inc and cmpsb aas sbb cmp repz inc rorb pusha sub jne sbb add add cmp cmp adc dec ds clflush int3 addl inc cmp xor xor push mov adc loop popf fs sbb jae decb mov add push mov xchg fistpl jae sbb sbb sbbl jae out or push dec cmp dec mov je loopne sbb mov jmp xchg cmpw add test and add push leave (bad) (bad) push les inc lods or movl xlat jl or pushl (bad) cmp dec sub dec and sbb loopne push dec dec add dec or dec cmp dec push cmc dec outsl xor test rorl mov shl push mov dec sar dec mov ret popl inc and inc sub adc lea sti test mov dec and sbb inc out sub sbb mov (bad) (bad) dec (bad) push add popl sbb jb addr16 cmp push dec lea int3 and mov ljmp and dec add subl movsbl data16 (bad) fstpl add jne loop adc call fisttpll adc testb fs (bad) cmc or mov sbb cmpb and repnz inc aam stos mov js sub inc aas test mov mov mov dec and dec or inc (bad) lcall or pop dec shl dec shr dec sar inc sub and lock iret dec and test cmp mov (bad) lret and pop add je cli and aam jmp inc (bad) cmp cmp aas rolb enter lea testb inc pop cmp jbe sbb mov dec add and pop or adc mov (bad) fcompl dec cmp jne adc (bad) mov or add (bad) dec movl lds rcll stc dec sarl pop or sub dec cmp stc dec add dec lock or xchg orl lcall dec shl add sbb xor cli cmp xlat sbb inc or inc stc dec and adc dec sub dec sub dec sarl xor jecxz subl out xchg sti pop test pop add push (bad) (bad) stc pop outsb adc inc jnp pop inc fadd gs or out push sbbb lea sbb inc and dec iret push and in (bad) ds sbb inc sub sub cld test sldt inc scas or jmp inc in pusha add arpl xor dec sub (bad) ret adc ret dec (bad) pushf fwait rcll bound dec dec sahf jno dec (bad) pop out and sahf into add add mov add adc add clc ja fld1 std int3 (bad) (bad) jmp pop cmp xor (bad) les mov mov sub pop arpl outsl and sbb mov bound and mov (bad) dec and into pusha je subb xor push push cwtl nop fdiv jbe inc enter cmc decl and dec lea adc pop mov call jmp dec (bad) cmpsb push jg icebp add jmp dec mov add push push jmp scas (bad) xor cmp dec mov ja sub xchg ret inc test dec add inc jmp inc mov and inc sub lds dec cmp dec mov jbe int3 dec xor insl int3 fdiv mov dec lea dec xchg mov hlt in or stos (bad) fstp or es dec lea dec add push or (bad) and dec sarb and loopne pop inc jo or cmp push and mov rcrb fsubl popa clc or xor lea mov add push adc (bad) jbe add mov push mov jo or dec cmp mov stos js test dec mov dec mov fstl sub dec jp cld dec sar dec call cmc inc sub fs (bad) call dec and fs cmc dec sub sbbb or jle inc out sarb jnp femms daa leave add fs or adc or andl arpl dec push cmp lret xor arpl or outsb inc ljmp xor and call pop (bad) aad ja sub inc inc sbb push dec or jge inc mov mov movsbl call pusha adc (bad) push adc ljmp movsbl sbb aaa or adc ret pushf mov jmp cmp lea hlt push xor icebp lea adc push loope add dec sub in dec or test adc mov mov dec mov inc mov scas and mov and fidiv sar flds in or andl push dec nop or cld cmove dec sub fimull mov and adc push adc stos lock adc push adc or jo cli dec inc cmp (bad) je std xor cwtl sqrtps rol in xchg hlt mov xchg and adc lret add xchg jo scas das inc push rolb lea inc daa sub aad je mov dec subb push dec lea mov popf inc xor fdivl and jo scas int3 jnp sbb and mov test loopne test ljmp add dec lea pop and and cs fisttpl decb cmp (bad) decl scas (bad) sbb enter or out dec mov adc jmp frstpm(287 in roll loope mov jmp sub call push (bad) fbstp and in sub push inc lret pop or and ljmp pusha ljmp push jae aad mov xlat cltd sbb jae cli rclb in test dec ljmp add ljmp push dec icebp pop add dec (bad) sbbl into je out (bad) push push lods push dec lea popf mov aam sbb popf pop addl imul and repz cmpsl push push scas dec add or dec and dec das dec mov call (bad) ja add cmpl test and fdivr (bad) decl or push repnz out inc pop pop add or es mov int leave (bad) loop mov pcmpeqb and iret pop sbb xor (bad) cmp icebp xor in xor je inc movzwl inc bsf adc shlb in or and pop outsl test (bad) sbb ljmp or je (bad) cmpsb hlt push pop lahf and pop adc push incb stc jae mov mov bt jae sarb mov add push add adc je lea mov inc movzbl sbb enter aaa jnp push leave jae add add test jg inc cmp ja nop mov decl stos bound or inc push and mov add pop out out pop scas xchg ja fsub hlt pop add mov xchg js adc outsb add mov and push adc inc scas sbb xlat jne or inc or ror inc dec pop scas adc mov or and sbb inc jbe lea (bad) sub xlat je sub push jb mov (bad) lret push push dec lea mov xchg sbb push and ljmp int3 xchg inc out jo xchg stos adc test push and test xchg je enter pop inc pop movb call js aad inc jne add out cmp dec repz or (bad) sub mov roll cmp inc or les mov mov dec aas pop mov xor adc pop add or cltd mov or aaa aas cmp cld inc subb xchg mov js add (bad) mov inc je pop iret xchg fistl mov xor dec pop and lahf lahf inc add or or cmpsb out lcall out jo scas outsl aas or adc int3 mov nop iret and jmp dec jge lea incl push mov xor mov out jbe and jbe mov ljmp fistpll sbb or adc cmpsl jns mov mov mov sub or mov test inc inc rorl xchg jmp sbb inc mov jo adc (bad) jmp insb ja dec jmp in jmp fldenv jns xor loop or jmp les popa (bad) and pop jmp fwait mov je orl sbb sbb jmp psubsb fs jmp out out mov int pushl movzwl icebp aas js dec les (bad) push inc xchg inc cmpsb (bad) js mov call mov and and cwtl pop adc jne adc shl jne push or ja cld inc je dec call sbb sub leave sbb enter mov dec mov dec cmp cmp jnp icebp mov loopne cmpl adc mov xchg sub push ret lea push mov call clc dec dec lea adc mov mov mov je (bad) mov and mov (bad) adc (bad) imul sub out das lahf inc je cmp xchg and lods and add inc rolb sub adc out mov je out jge stc call and jp daa xor nop xchg push pop dec (bad) cmp mov and pusha xchg loopne std imul lock lock add inc mov dec test mov adc dec mov (bad) cmc mov in test sti xchg loope imul mov jnp jne stos ud1 or fild pop arpl mov sahf dec dec xchg fwait mov and cmp xor sbb push sbb rolb shll inc cvttps2pi adc sub std in mov push sub xor arpl inc mov (bad) and inc out fldl2t push jnp (bad) jl test sub je inc test jmp arpl and in repnz xchg sti jae loopne test dec cmp inc aas inc aad and sbb cmp cld aas inc and ret idiv xchg sbb inc call sub xlat dec arpl jmp cwtl sbb incl icebp call mov sbb jno jmp leave lea movsl gs dec out pop iretw jbe mov push sub xchg push aas inc jg lret loope out das and addb inc iret push add mov jmp xchg xor xchg (bad) xchg push call xor ja xor jb or xchg inc lahf (bad) pop cmp dec sbb jecxz fucomi inc xor (bad) pusha push imul cld mov loop test ljmp mov fldl add stos mov cwtl dec mov sbb nop mov or in lret loope imul adc sbb je aam rclb mov fadd test clc jmp dec rcr ficompl lahf sbb cmp jae (bad) stc jne sbb and or or jae bound cmpsb scas cmpsb or (bad) jne mov sti sbb std adc dec mov jmp mulb mov je cmp cmova sub cwtl test push add rcll int3 or sub nop repz rorl dec and call add pop mov or cmp sbb sbb inc sbb cmpl es (bad) jo aas ss loopne jbe pushf adc jmp or pop sarl js out bound ds or sub ja adc das jne shlb jmp out or inc mov decl paddsw fiadd lcall or mov pop sti faddl out rorb inc adc push xor int3 lahf lcall jmp pop sub fimul sub out cmp inc loope (bad) or pop (bad) notl cmp idivb int3 sbb out and cwtl sbb or dec fistp mov jmp mov mov out test icebp call pop pop inc insb fsubr rep xor sub sub pop push ret call or or sub fwait das or dec sbb mov and into out daa cmp lds mov daa mov mov sbb test jb jnp or aas out mov int3 in sub (bad) push aas scas popa fsubl and ss sub aaa sub sbb dec mov jmp xlat jmp je pusha xorb mov mov pop or pusha inc push andl dec mov js mov ljmp cmp jb sbb xlat dec mov dec mov jmp dec lea pushl iret repnz dec sub dec mov dec mov dec sub call push ret dec mov mov dec or jne dec test je ja mov dec cmp je es mov call rolb test cmp (bad) (bad) incl cmpb jne dec mov dec mov mov call dec mov pushf lock rcrl lcall or inc movzwl add sub adc inc testl cmp ds daa dec je inc sbb call in or out sets xchg and bound sbb add jns out (bad) jmp nop nop nop pxor inc mov mov movl inc cmp loope pusha popa add push pop or sbb mulb mov inc rcrl jo adc adc aas add or sub and jmp nop movsl pop jae test lahf decl dec dec int cmpsl mov and jne dec roll pop (bad) call dec mov pop jbe dec add cs ret pop (bad) (bad) aas (bad) jmp jg mov push inc lea xor inc lea lea inc shr inc lock ja cmp ja rolb shl mov out (bad) lcall add push rolb inc lea inc cmp jbe or (bad) mov adc jmp (bad) mov sbb fisttpl cli mov clc add pop add xchg add add fdivrs ss inc movzbl sbb inc sarb outsb sub jp incl sti mov pop mov mov inc or pushl shr mov push push movsl push popa inc lea std popf xor xor and inc movzbl pusha out ret cmp jg fldenv cmp ja call jmp test es add xchg dec leave inc arpl mov inc cmp lea cmp xchg push inc lea fisttpll add inc movzbl xor mov jg (bad) fmuls inc lea jno cmpl or imul test mov inc mov enter movzbl lea inc cmp jbe pop lahf inc cmp aas sub inc lea mov xchg shr or pusha out lret test jo cmove jb mov xor sub lea sub ds adc and loopne or lea pusha (bad) mov and jae test je movzbl test unpcklps cmpsb mov add add int3 jmp jbe inc xchg lock inc lea stc add adc adc fbstp in xor fildl inc pop cmp add sub nop push jg je add pusha cmp das iret jmp cltd xchg out leave (bad) ret xor cmp adc adc (bad) jmp mov push das lds xchg adc orps mov fldl dec inc (bad) je nop cmp js add clc or adc xchg mov pop or add adc add rol call dec cli movzbl pop xchg jle ja xor inc mov test inc lea stc or (bad) and jbe inc lea adc add inc lea add jmp jne mov leave inc or test inc mov jne fist movzbl inc lea inc mov inc push xchg sub (bad) jo sub lea xchg incb std pop add sub and mov and lea daa ret fwait lahf jbe lea lcall jnp dec mov lea inc or test mov jne lcall inc mov xor jecxz outsl or imul adc inc clc mov (bad) jg sub inc shl inc mov movzbl sub lret call stc aam (bad) lea dec or fistpll and inc or icebp push and jne or pop and inc lea (bad) xorb into or lea loopne sbb je shr pusha mov nop cli aaa or mov dec movl ret mov dec lahf adcb add lea pushf push inc lea xor pusha in leave gs mov jmp ljmp bound inc into nop pushl push leave xor inc mov fisubl clc arpl sbb nop pop dec and inc lea dec out adc or inc lea xchg jo mov rcl jg push fildl lds lds inc lea mov jo push jge aaa cmp lret adc fs pop push adc cmp inc xchg and sub jg mov cmp jb jle push fsubrs push std xchg cmp (bad) decb mov mov dec and lahf mov sbb inc mov or rol cli add cmp clc mov pop and jne test inc mov (bad) je inc mov or rorb repz shll div dec or mov pop xor sbb dec mov push nop scas pop aas out insb xor cld pop and stos cld jbe inc lea ret out push add in xchg xor idivl pushf and iret test inc mov ret xchg sbb pop fdivl shrb xchg xor (bad) fsubrl mov inc lea ret jbe (bad) cltd jnp jmp orl xor out xor or cmpsb and es clc inc adcb inc and mov jne xlat (bad) pop and inc scas sub dec frstor ds scas rcrb mov lea (bad) jbe (bad) jmp sub pop mov push and inc lea subb rorl pushf ret (bad) inc clc cmp rorl leave or test mov jbe mov ss jnp push cmp jbe mov inc rcrb (bad) jl mov mov fbld ret sub clc or negl (bad) dec sbb mov aad inc cld rolb pop jne out cld push and dec jbe mov int3 cmpl pop inc and fnop sbbb push cld pusha sbb add sub sbb xchg pop leave or std sahf iret push mov xchg jne fdivs mov sbb fnstsw ret xor jmp nop jp mov addr16 cld jnp imul mov shll rorl test dec cwtl sti cmp xchg sti (bad) lcall ljmp in inc dec xchg fs pop out or mov jmp fs test jns jmp inc adc test (bad) ss jne jmp xchg test xchg outsb js (bad) jmp jge sub gs mov jmp lea jmp xor (bad) test mov add adc in or adc xor daa lock inc outsb (bad) (bad) (bad) jbe xchg dec jecxz das inc lea fcmovnb test sbb icebp (bad) mov jmp jae pop jmp pop cs ja mov test ja push and cmp out push imul enter jmp je sbb inc es aam lret test lds jb rolb test mov dec cli pop dec lahf fnstsw jmp (bad) xor (bad) jle lods mov (bad) fisttpl data16 or pop aad gs das cmpsl mov faddl leave xor sbb xor inc push nop (bad) movd adc mov (bad) xor pop cmp ret test cmp fnstenv sbb nop xor cs mov stos sub pop mov jmp jmp ffree mov or out pop les xchg jmp add out lds add ljmp inc lea jecxz shr inc and pop ja xor xor mov in mov add imul xchg sub jo lea adc fistpll mov inc test inc mov jne in pop cmp dec sbb outsl js adc ja add dec and insl stos addl out adc cmp dec inc outsl and popl sbb xor loope or push idiv repnz test inc mov jne inc cmp (bad) decb into movzbl in sti jb lock mov sbbb jl lds mov in into sbb or adc popf mov test pop add mov jle lea mov aad xor icebp xor stos xchg sub mov dec push idivl lea decb jbe lea inc pusha mov test inc jg aaa popa xor pop lea jmp shr mov inc mov jne dec add xchg add mov xchg xor std ret lods jns hlt jle popf jecxz lea push xchg xor mov test jmp mov xor sbb sarb fistpll mov jle and jmp into push leave jmp (bad) gs dec ja mov (bad) xor les (bad) cmp dec scas lea jmp adc sbb decl adcl jmp add ja pop inc inc outsl test sub dec cmp xor adcl mov dec xor repz jo adc or add test mov fldt sbb inc rcrb leave adc mov jmp jg push test je lea adc pop jmp jmp dec add add (bad) cmp inc mov je (bad) mov push inc call lea cmp inc cmova loop sti flds sbb sbb rorb ret nop cmp push jne pop out fild add pusha dec mov (bad) (bad) ljmp xor dec xor dec or jne dec mov dec mov dec xor dec xor dec or addl mov in xchg pushf dec mov xor and dec dec dec or jne dec mov pushl xchg xor mov mov xchg call lahf in mov cmpsl nop add dec mov dec mov or jmp dec mov je dec mov mov sbb rorl (bad) lea dec mov dec add andps dec dec mov dec mov add add data16 inc fmuls mov call push dec mov inc jo jno or mov cmpl xor mov xor xchg jno dec sub stc call (bad) push (bad) decl push adc cwtl or dec mov and cmpb and aaa call fistp and dec cmove call push inc test pop dec sbb ja mov add mov test adc pushl inc dec mov dec mov dec mov dec mov dec or rcrl mov dec dec test dec mov sub adc dec mov dec mov lahf je inc scas dec lea lahf add add cmpl mov dec cmove call cmp testl or loope in ret call add xor lret test (bad) (bad) clc je dec mov call test jne dec mov sub rolb jbe dec lea call add adc outsb and add add scas lock mov ficom dec addl inc bound dec (bad) loope call sbb call inc scas dec sub xchg add or pop push popl inc clc mov lret push add icebp aaa test clc sarl outsb xor add mov cmpsl or cmp pop outsl fbstp inc jmp dec fwait (bad) push dec jecxz ds push je cmpl mov mov adc jecxz jne mov (bad) push call lret or cltd inc andl add call hlt orb ret mov dec mov pop jmp popa dec sub mov (bad) fwait add loopne hlt jnp add shr fldl lret xor repnz cmp adc leave je dec and push cmp jb lahf and push and push dec add jle push or hlt adc jle scas sbb jmp shll sbb cmp jle iret or and test in iret xchg loopne jne xlat mov iret add mov jge iret mov xchg mov xchg test add mov add sbb xchg xor (bad) (bad) jmp movswl sub loope push push add outsl jp inc and outsl jbe xchg aad outsl cltd or xchg or add outsl ret mov sahf sti jp lock pushf or add mov or mov mov jns dec mov cmpl or dec mov rcrl dec (bad) incl (bad) fist data16 add mov pop repz mov dec mov dec mov int cmp dec mov jbe or fistl mov mov call push pop dec aaa mov dec mov (bad) call arpl dec add adc dec xor test jle dec cs mov leave xor (bad) hlt ja dec mov call jae fwait dec jg add add pop mov ss add dec lea sub movl ja jb outsl mov and mov jno dec mov dec mov movsb stos ficom and (bad) ficompl mov or add mov je subb xor rclb dec mov ljmp repz push std mov mov aaa icebp cmpsb xchg nop jge mov mov mov sarl cld xor loope call xchg or div dec imul cmp popf rclb aam add adc out arpl jb aad movsl lahf (bad) jo outsb call call mov scas mov nop nop scas push inc inc pop sub jb test das movaps scas pop sbb pop jg loop out nop in push inc jmp (bad) fsubl jl dec xor pop pop mov icebp jl or jae dec sbb xchg aas iret clc mov push push (bad) adc or lret dec mov decb sahf inc bound dec arpl idivb mov push inc xor call push mov inc adc cltd dec mov push shl aas dec jmp lahf call jmp add pusha and inc push mov clc cli out jnp pop push pxor mov js aas fs dec fwait mov movzbl dec mov stos mov ret and jg cwtl jecxz jne dec hlt sub repnz sbb repz or push scas fiaddl scas push jmp and jne add pop jmp inc out test mov mov pop arpl (bad) aas rcrb lea cmp cmp mov mul cmpsl inc sbb inc popf fistpl sub addr16 and movb xchg jl aas and fs (bad) scas out cmp cmp add mov out dec mov sahf jp jo std cmpsb or inc or xor mov sub push and add and add jle and inc rol adc sti add jb mov add inc cltd mov mov inc and inc (bad) std push test out dec mov mov cmp (bad) imul dec mov call mov pop sub adc mov dec lea and popa mov outsl dec mov call pop mov call inc lcall lret sarb jp add inc jmp iret addr16 inc hlt add jmp test add pop imul and ja jo (bad) ljmp call mov fildl nop ds (bad) cli loopne mov mov add call xbegin mov call mov incl ficom imul and add mov inc bnd push dec mov call adc pop add inc xchg sbb das std (bad) cmp or sbb add (bad) push int3 cli (bad) push rcrb dec lea jmp inc cmc das stos ret add lea sbb arpl jmp mov (bad) das mov call (bad) js mov push call loopnew repnz decl xlat mov imul (bad) inc nop nop jg daa jg aaa lock jg arpl inc and or jmp data16 mov or jmp or pop pop into (bad) std (bad) fistp dec cmp je xor dec mov dec add call clc (bad) fistpll enter add ret jb dec mov mov push xchg test lods pop and pop ret setg arpl jns (bad) sqrtps and adc adc orb dec cmp jae notl nop add add add cs jno add test cmp sahf scas or dec or aas or xchg std mov sti je pop inc mov adc call call addr16 or lret jbe mov jnp call call cmpsb push dec stos daa cld mov cmp jne cmp pop fild mov popf shr (bad) sbb and fild stos adc adc aas dec fisttp dec mov dec jmp (bad) nop jmp iret cmp clc jmp sub mov mov test jne adc or incl inc jl cmp inc adc push dec lret dec arpl loopne (bad) decl lret cli add fimull cli add add mov dec cwtl dec mov jg sub inc inc scas lcall ficoml test mov mov adc push jmp fimul mov addl dec mov mov inc (bad) rorl stc pcmpeqd add aas lcall jecxz je mov pop popf enter popf out mov sbb cmp jne dec mov sub dec cmp jb test js cmp aas dec sbb outsb mov xor fistpl adc adc arpl sbb dec jnp adc mov pop xchg jne mov not shr inc push mov mov mov dec cmp jbe rorl jg cmp shr (bad) stos scas adc (bad) pmaxub ret jle das sbb inc mov push xlat mov test jbe rep adc adc dec mov dec (bad) hlt rorb adc push xchg jg fild jecxz or test adc pop out sub dec repz dec or pop and push jno push fdivs xor sbb clc cmpxchg8b (bad) dec adc push clc push or jecxz or dec or cmp sbb mov rorb cmp inc pop jg or cmp je push call addl lret cmp fdivrp aas rorl sti add (bad) and outsb or push fwait cmovle rorb jg dec mov dec mov pop pop dec call add out scas sbb adc dec clc mov dec sbb xor call lock jecxz dec mov dec mov jmp inc nop aas cmp outsl inc sarl decl mov dec sub lret inc fild (bad) cmp mov pop sub dec pusha or push or adc imul call mov jl cmp icebp jns mov jmp adc and dec mov dec mov inc imul dec cmp inc mov je jle mov sub inc aas es cmp bound inc push xor xchg incb stos loopne add in pop dec lea lods mov fwait int pop add out inc add (bad) jo mov dec cmp xchg dec sub (bad) dec adc sbb inc sub inc cmp inc sbb test xor jg lock lea xorl sub and inc xor xor test push and fist and loop and inc mov test call xchg lea je (bad) jbe add xor sbb (bad) cmp (bad) decl adc dec mov dec and inc imul push xor cltd je icebp xchg aas sub dec push sub add mov sub mulb dec dec (bad) (bad) and jne dec cmp or insb inc add mov call mov mov (bad) ja mov lods mov movsb dec out mov adc dec in and call xor cmovne xor inc mov aas test (bad) test push mov mov jne jl mov call adc adcb dec sub int3 fadds xor fldl je sahf jo decl xor push mov imul dec cmp sysret gs test sbb inc cmp call jne add pusha pusha pushf mov inc and xchg lahf jbe xor mov mov cmp (bad) pop lret pop es mov pop (bad) aam add adc outsb inc rcrl sbb jmp ss nop das emms out and dec (bad) add add fild jo das xor (bad) xor dec mov push push shl jg push push add lret lcall jo orl aaa loope pusha loopne test inc or adc or loope pop or pop shl xchg adc pusha das mov inc fmul dec lea or mov jne insb out ret insb and inc xor pop pop cli repnz sbb test fcoms and (bad) fadds ss and sbb xlat aaa scas sbb addl inc outsl mov dec mov mov enter dec loop xor sar mov jecxz jp add inc mov or inc jle adc dec adc call dec pushf ljmp fwait out popa das call (bad) xlat (bad) ficomp inc adc scas andb adc push or or mov movb sbb test pusha cld pusha pop and mov ret outsl or sub out dec or xchg std lea inc mov mov adc pop add popf mov inc mov dec add sbb adc pop movzbl test je xorb std cli das je mov cmp je dec mov pop lea add mov mov or mov dec lea movb inc lock push (bad) loope pop add testl js push cltd jo push dec rorl pop inc das out mov add sub mov lcall dec mov mov xor dec test mov je call pop mov add call mov pusha mov jo call fistp call adc push or cmp or popa lahf dec mov inc into jg mov dec mov jo fld1 sti push aam (bad) je fnstenv pop add enter mov test inc sete cmp push test das sete inc or jne outsb fld1 clc inc push pop enter lea call push sbb les dec cmp xor outsb xor call inc and pusha xadd jne (bad) or stos lret fdivrp ds pop (bad) cmp lcall ret push sbb scas dec or (bad) jle dec sub call adc jecxz sbb dec call ret (bad) push and call dec add jp jne ficomp dec mov push or xor out jg pop jno inc inc or data16 in stos cmpsl je insl jae icebp call lock push movb movb sbb cltd sbb pop cltd roll xchg pop pop sbb je insl into ret je clc adc adc (bad) fiadd in add decl test sbb mulb scas std lods out daa leave das mov loopne mov lods movzbl les movzwl mov mov or mov mov scas dec mov icebp ss mov push push fwait sbb mov call jbe or dec sbb jns icebp call xlat mov pop pop popa dec arpl jae fbstp sarb pop sub repnz (bad) lahf mov or out sub cmp je dec jle cmp ja adc jg cmp cli out or xchg dec cmp test or sub jmp cmp (bad) cmp jle je cmp jne loop ja xor mov ret cmp cmp mov sub cmp das xor shrl cmp adc cmp les mov dec cmp mov daa adc cmpsb (bad) cld dec idivl cli arpl sbb mov adc dec push sub dec pusha call push push lea dec lea dec cmp sti push add ja cmp pusha add jge jle in (bad) arpl dec cmp sub data16 pop test adc dec inc sbb test dec mov jmp sti cmp dec lea and rcrl cmp ja mov fsubr cmp jle mov je inc jle cmp cli rolb add jne inc mov pushl mov cli push je cmp je cmp jne ror (bad) incl leave inc test inc mov jne inc movzbl inc mov sbb add jnp add or aas dec mov dec mov pop add push add je jmp pushf (bad) arpl pusha sbb clc inc mov add lahf outsl aaa ljmp push jo xor (bad) mov pop stc mov je cmpw je dec push adc mov dec mov out pop cli es xor call (bad) cmp mov dec lea jle fcomip jmp dec call ds arpl ljmp adc (bad) (bad) mov call jae inc xchg or ss mov mov sbb out or jne add sub push and xor in aas push cmp adc enter repz je dec lea add mov jb cmp js repnz call popf or arpl aaa cmp xor mov jo pusha push cmp in imul scas movl (bad) jmp xchg cmpl mov add cli and cli add add mov and cmp sbb and jg test pop and cmpb je (bad) (bad) (bad) in dec mov inc testb jne cmp inc lea inc setle inc test inc cmovne mov sti sbb dec mov and cmp (bad) jecxz add push (bad) mov add adc inc sub std fdivs das jp dec mov add scas jae arpl ror rcrl xchg mov add lret inc jmp cwtl call dec sub loop nop loope shll or add shlb push movl mov push lock cld or mov add pusha add loopne xchg jnp add and add sti (bad) mov roll and inc and pop loope clc in inc or rcll fmull and (bad) call ja ljmp inc sub dec lea xchg dec add jl dec jae mov dec addl dec push das jb (bad) cmp dec mov sbb mov pusha inc rorb loop xor and rclb jae xor push daa push ret or push push jg pop iret xchg or sbb inc cmp ucomiss mov out mov das jne ja or push (bad) xor inc mov sbb xor sub or clc outsl cld pop dec add call lea add or std fstpl sub inc pop dec bt jae or jbe imul sub insb pop cmpb and mov pushf in sti cmp xor insb insb and or fbld fcompl vcvtsd2ss ret adc pop fisttp loop test jne inc ficompl decl lea dec mov call sub dec mov fucomip adc inc push xchg mov adc sbb pop shlb test ja or add or or add mov push mov lret std or test xor fbstp inc mov inc test je rorb adc cld inc mov jne push inc push leave add fstl dec rcll aas pop cld push dec lea push inc movzbl inc cmp dec call std js out jb data16 cltd je lcall mov jne into or cmp ja sub sbb dec cwtl sub fisttpll lahf mov cs arpl xor jo shrl or pop dec lds dec movb call dec push mov ja sbb xchg cld idivb xor xchg (bad) pop adc jmp out xchg add adcl outsl es and xor jbe jb jne cmp in orl (bad) pusha clc jecxz mov pop sub mov xchg pop inc test jne inc das jb cmp in stos clc push std jle inc (bad) dec lea in (bad) pop loope loopne inc pop dec mov push clc (bad) mov push sbb inc mov dec mov icebp rol call add inc mov dec movl jge sub inc and and call call js adc sbb mov call mov inc out ret mov xchg push cwtl jp rorb fs sbb mov call clc pop or mov dec jne jno lahf imul imul pop dec add lock sbb xchg test xor rorb push sbb dec mov jne hlt dec cmp flds sbb sbb pop das jne icebp nopl push test sti inc nop add adc lcall inc lcall add aam dec sub add jo pop scas das fwait aam imul xchg xchg adc adc jne mov (bad) adc xchg lock decl add mov add inc jmp mov enter mov pop aam jnp imul or popa add jae adc dec rorb pop jmp addb nop add mov dec dec mov jmp sbb xor sbbb sysret add xor fldl add leave dec dec and jae outsl push inc movb mov push jmp enter add pop test cmp sbb dec add sahf loopne add mov add or xchg push jne daa lock push ret ret ja inc mov ljmp ljmp and js and sub ret js sbb inc push inc sbb dec (bad) adc jnp dec inc xchg lret xor pop push cmp jae cmpsb fiaddl dec add dec (bad) fbstp or inc mov or ljmp dec imul jmp or sub leave or adc or mov scas push movsl aas repz cmpsl sti sub or xchg hlt jo add mov (bad) xor les leave sarl sahf addr16 sahf mov notl push or aas jns jge or jmp addl dec xor scas movzbl jmp xor xchg dec add nop icebp and xor add ja ret push cmc push jg pop pop jmp or int3 mov cltd xor and sub sbb aaa les jmp push pusha les inc shrb cmp or lea jb cmpsb stos dec pop fmull sbb bound lea xchg jmp mov bound and add sbb insb and adc pop scas and insl pop dec dec mov pop mov jl call dec sbb inc movb and jmp aaa adc sub lds fcmovbe sbb mov inc jne je cmpsl stos mov mov pushf jmp jnp jmp aam aas jmp inc xor jmp mov outsb jno add sbb or pop mov cmc (bad) (bad) cmp movw (bad) jbe cld lret loope xor adc cmp out clc xorl mov jmp lods repz call adc jl or into addr16 jae jo cmpsb or sub pusha sbbb test les mov jbe add push push outsb and rcll dec mov inc nop clc mov mov dec lcall add call rolb dec lea out aas dec lea mov sahf sbb xor rorl inc std push scas and in xchg and sbb enter stc xchg fiaddl mov push or cwtl adc adc (bad) shr xchg call cmp jne mov mov loope stos (bad) pop add scas (bad) mov pusha push mov pop fdivl add faddl cmp mov pop xor and enter mov mov add add and test cmp inc (bad) and loopne dec shr inc add push mov dec shll xor or or fwait cmove dec and inc test (bad) xchg cli sub les add cwtl scas push add jo add aaa sbb into mov lock mov sbb mov icebp and loopne dec dec fmuls test adc ds outsl lods stc call lods adc cmpl lds pop inc mov arpl and dec shl dec add dec pop clc jg xchg lds jge dec mov dec lea (bad) cmp dec cmp dec mov je dec add inc cmpl jne dec lea push and sbb mov iret fdivp jmp icebp dec add call fnsave ss jo sub xchg fmuls sbb in in pop jo (bad) mov fmuls test stos push push ret ror test cmp aam sub sub push add inc lcall and push (bad) sub cmp js pusha dec cmp je jno pop imul and add cmp mov cli je call pushf mov test faddl xchg scas into sarl cmc sub test roll adc lea rcrb test dec mov jo xchg lcall out dec xchg sahf cmp inc testb mov (bad) je add push dec fildll rcll fldl fbld inc push xchg sarl sbb test dec aam test dec test ds movl or dec aas lea rolb sbb adc out ljmp sahf dec or dec cmp xchg jmp movsl dec mov xchg sbb imul loop or jmp add jle leave adc sub add xchg sub xorl cmpl cmp inc test add sub shrb or and inc and dec daa mov sti add jne lock rcrl mov cli jne (bad) (bad) ja cmc outsl adc test dec lea sbb call inc adc jnp push inc ja push dec mov pusha bswap push in jne addl inc xorl test nop leave or js je mov and and in dec or adc stc lock push adc popl or test testb mov xlat xchg jnp jae and movsl cmp jae push and test xchg loope pop inc dec loopne or fnop inc mov divb mov loope mov and aad aam cmp dec mov je jbe in add push push add arpl call js cltd icebp call call ret push call mov jo in mul lock je out test mov test pop cmp sbb or jg mov in mov ss inc aad or (bad) decl xchg inc and jle dec pop (bad) sub push mov cmp cmp test mov push inc rorb mov mov push ret or (bad) addr16 jge xor loopne test sbb adc or xchg sbb test out and or add test test add pop inc sub lcall and std dec inc mov test je rcll test or cmp jne jecxz call dec or jne arpl mov out cmp dec add inc or jmp in nop mov adc std aaa cmp incl add mov adc push rolb jnp xor sub sub pop jmp daa stos mov popa inc sbb mov dec mov push gs mov dec mov sbb mov test std cmpsb (bad) (bad) jle cmp je jg imul mov push cmp je aas loop rorb enter movsb dec lods pop push mov sbb add pop fldenv aad or pop addl sbb mov cmp je jne ja dec lea mov repz je stos push call in or nop (bad) add int3 xchg xor movl jmp xor cmp loopne (bad) je aas jg pop (bad) (bad) je (bad) out call incl or dec mov call cmp popa adc stos add mov call dec mov mov das push sar (bad) (bad) jmp jg gs or cmp je jne pop dec mov hlt dec mov call adc cmp hlt fstl cmp idivl inc pop mov call loope aad mov push jo mov sub jne cmp je dec jne adc dec mov adc loope rorb or call rolb cmp lret sub clc jbe and fmuls adc xchg add loop mov cld pop sub loope call mov dec arpl push pusha mov add push dec mov call loope mov or and movsl movsb jae fcompl or inc incb push or cmp movsb push adc add xchg outsb clc push test cli (bad) push mov inc or mov inc mov jmp pop aas sbb (bad) mov sbb ds scas dec sbb into push inc mov call lock push loopne mov and int3 mov sub nop dec mov ljmp sti (bad) ja fimul jns add outsb fcoms cld jne (bad) call cmp fprem xor dec scas add fisttpll test cmpl setne jmp pop xchg push or fstpl lea leave int3 mov sbb test add out mov adc ret adc shr aas loopne mov xor mov dec mov mov jg add pop fcoml sub jg into in ljmp push pop sbb fdivrs dec in xor add iret sar add xchg jo mov (bad) arpl out sub mov inc lds loopne (bad) xor aad ja jle cmp or cmp ret and aas aaa movb cld out or jmp push jne inc sub inc push add out jle je and mov pusha dec cmp loope jb lcall dec lea dec mov jmp inc add lahf bound imul sub push jo inc add push lock and movb sbb and and out rclb add movb add (bad) or rorb arpl jmp dec pop dec lea call into inc or rolb mov add add mov dec mov sahf decl mov dec adc lock std incl xor jo dec mov dec sti dec add inc test pop jne cmpsb icebp dec mov push ljmp pavgw add mov mov push cmp pusha dec or dec cmp and xchg sbb clc mov cmovs call dec add pusha dec mov sub stos (bad) (bad) aas orl dec and test dec cmovne dec sub sbb call icebp pusha adc sub ljmp and insl mov orl je add repnz test add inc outsb pop test test adc in sbb lret cmp and (bad) adc je push in loop sbb je xor dec popa call fbstp mov cmp dec mov je sub push cmc pop mov jmp icebp xchg out push xchg test icebp dec mov outsl jne (bad) aas outsl inc mov movzwl in loop mov je inc mov cmp cmp add rolb fcomp popf mov std clc mov add mov sbb test std les fbstp inc mov dec add mov push popf jmp push cmp dec jmp cmp je inc div lret push dec mov dec mov dec cmp rorl test jns add adc dec sub lahf jmp test jg and ljmpw adc rorb test adc and loope mov testb je dec outsb (bad) push push and mov je inc out pusha xchg pop enter and loope sub push or ficoml push mov or pop or adc mov cmp push out ret nop dec xor dec adc and or push jg mov insb and inc mov pop std dec or fwait test inc pusha dec adc cmp out es ljmp sbb sbb decl fmuls std test dec cmove dec sub int3 xchg and or and iret decb sti add test add test sub insl or pop adc popa call and inc aaa bound dec adc (bad) (bad) sbb test jmp push (bad) cmc loope inc inc (bad) test push push addr16 jle test adc test mov push and inc fmul clc arpl (bad) jne dec int3 test pop adc (bad) adc adc inc dec lea test jne sbb mov test inc into push imul mov test into push add bound inc (bad) loop hlt and jnp idivb ret iret (bad) testb jo mov mov pop inc lahf repnz lcall or adc hlt add andl arpl inc inc out emms aas xlat roll test dec movl or mov fiadd clc jne daa andl sub push roll xor dec adc xor fmuls pusha cmp je mov inc ljmp (bad) jb rolb push mov fdiv jmp test in jmp packsswb pop sbb adc pop xor cmpsl and jo inc sbb dec adc xor icebp xor cltd repnz adc shr add cmp inc mov inc xchg jmp mov jbe inc jge add aaa xchg fs xorb maskmovq add loopne xor (bad) cmp aas out sub pop into add sub xorb call cmp add jmp andl push sti fdivl jo xor jmp jae fs imul out sti cmp and mov pop call scas test je adc push jno inc inc pop inc sbb aaa dec and test xchg ret xor push jg jmp mov js ss out iret xor jmp jne lret pop jbe fbld add test ljmp and mov cmp je je cmp jne mov lret xor in pushf inc mov je inc adc push movzbl fdivs inc mov jmp inc push cmp adc fsubr insb inc mov jmp mov pusha dec mov inc mov jmp std dec cmpsl xor jbe jmp xor inc and push (bad) aaa add clc inc mov inc adcl jmp test jmp adc pop jmp cli push clc movq pop dec mov dec rcr in push add dec mov movb dec out fbstp or inc add add dec sub adc xor pop movb movl mov movl jb push cmp (bad) fdivrl sub ret call ja xor pusha dec cmp dec je cwtl add dec add dec mov mov mov dec lea add mov push mov call ret mov sbb loop cmp dec mov je sbb je xor icebp outsl je flds add rolb add cmp mov cmp jne call icebp dec pop add inc cmp mov and mov cmp adc iret or (bad) jae loopne and fdivr out push push test js lea cmp mov out loopne test test fwait in push lahf push loopne rorb and ja sti xchg cmp je movb rorb push cmp jne or dec lea out div cmpsb inc seta inc setb pop adc rcrb jae sub dec add fstp sub test dec lock push jne inc movl inc pop cmp je fdivrp xor cmp je add (bad) dec test roll inc pop and or dec mov call cmc xchg inc adc std cmp mov dec arpl cmp jl inc ret sbb pop dec mov add jo clc (bad) out jle test inc mov inc mov cmp lea je outsl cs jbe add inc mov inc and inc cmp cld out incb inc sbb inc and roll mov inc mov mov xchg inc cmpb jp add ja out arpl into frstor std or shr mul pop out cmp fwait mov add xchg push add push das add add outsl jo dec mov call jle ret or sbb or and jmp or orb (bad) ja in int3 (bad) lcall adc dec dec ds in enter shr movsb fsubr fwait loopne ds in xchg call cmp ja (bad) jg dec jne inc movb jmp xchg and imul loopne adc and movsl and push inc fs mov call adc pop jo js pop mov (bad) out out pop jne add mov inc mov jmp or mov aas push add dec sbb dec nop stos add add mov movsb inc out fmuls fucom in inc out mov enter call mov dec mov call or push xchg lahf call sti and test pop dec mov dec cmpl je aaa nop or inc or mov adc mov out dec dec push loope add push cmp clc inc repz jne fistpl dec mov dec mov call lret sbb jmp outsb (bad) sbb scas decb clc jbe imul pop jmp fwait clc pop das in (bad) (bad) jmp pop pusha adc out cmpsb test call out sti mov dec mov mov inc adc add add pushl out lcall call mov dec arpl popa (bad) aaa shr adc mov push cmp inc adcl or lret std fldl int clc dec sbb aas cmp sahf jmp add pop repnz mov call xlat adc jle xlat push cmpsb mov clc in pop and jmp lret ret xchg js movb pusha cmp xor lds dec dec ds add (bad) frstor decl cmp dec mov call inc sbb mov mov call and scas cmp clc or jne add ret or or inc sbb test aam adc pop xor or ja jmp pusha testl xchg lret lea call ret fsubr pop adc mov jmp xchg (bad) bswap mov nop call es xor pop out cmpsl xchg xchg shr pop hlt ja ret add xor pushl inc testb jne cmp lea ret incl ficom inc testl out jne jae mov movzbl inc mov std pop incb call jbe mov jmp aaa adc inc and psubd mov or outsl sub mov mov sub aaa clc (bad) call add sub push or dec mov push inc sbb sti aaa cltd repz movb jmp (bad) xor inc cmp jle test adc dec ljmp or adc cmpl xchg dec add add dec mov mov mov aaa aad and xchg call (bad) (bad) incl adc mov inc pop ljmp enter add test aaa push mov int nop dec sub dec mov icebp aaa fwait sub jg addr16 or add sub cmp sbb cmpl sub pop pop sbb int adc mov inc movl dec mov popa inc nop call add out out sub jae or fldz inc fucomp ss dec pop add fwait jg inc mov pusha dec lea mov incb inc mov mov pop and mov cmp jnp call sub outsl stos xor call cmp out dec mov or push push inc jne popf push (bad) xor pop ss jg mov dec cmovne movsb sub lret mov inc les dec add dec push pusha push mov inc inc and dec pop out sbb or inc push cmp pushl add (bad) decl inc dec aaa dec mov inc mov dec loope loop mov lret cmpb loopne ja jmp dec ds push push inc test jle fadd (bad) std xor into dec cmove test or add test pop jmp (bad) and call adc test adc pop push aaa in pop sti out or cvtsi2sdl add mulsd stos jmp ja push pop or dec movd movapd add or lcall sti call dec mov dec cmp jne pushl cmpsb mov dec mov test jne cmpb mov stos pop or jne mov jno call pop out pop dec lea push dec mov dec mov or jle fiaddl inc mov js lock jge enter inc shr lods pop jg dec mov mov cmp je repz popa dec mov lea add jmp push xorps js xor lcall dec cmp jae dec mov dec mov and lcall adc fadds mov and dec or inc and je dec mov call dec pusha dec sub dec pop (bad) out and dec mov inc mov dec movzbl sti call inc test je test dec lea push dec cmove call cmc push mov sub xor outsl lea push add sub jp inc dec mov test jge dec popa push dec mov testb inc ret adc mov sub out sub mov es test jge jnp mov mov dec mov sbb xlat loopne pop leave add movsd lahf ja incb cvtpi2ps or out es xor rorb call mov test dec lea sub call jmp inc lea or in adc or insl (bad) movsb push xlat mov ret call add xchg loopne aaa iret lea adc jmp push scas jg dec lea mov idivb pop xchg js icebp call mov xchg aaa dec sbb lahf sub test sub jmp add pop fistp mov add xchg roll pop loopne jae fcompl jo and addr16 adc xor rclb or add add ja dec mov call mov mov arpl adc or dec (bad) sbb std add call xchg sub andl add cmp (bad) decl inc js rolb pop pushl inc clc fist pusha dec pop inc test js dec mov pushl pusha dec lea push push dec xor dec or jne dec mov out cli (bad) decl sbb jle dec xor dec or jne dec mov push sub pop mov xor out and sub dec xor cwtl cmp or jne mov mov repz movsl jmp rcrb and sub jg and add pop sahf sub inc les mov sub mov mov pop movsl xchg add js inc js mov je call imul stos aaa push and dec mov pushf jle xor push cli cmp push adc addl adc pop pop dec dec mov dec mov test mov js out mov push dec mov inc jo push cmpsb jns push orb adc mov mov orl test dec jo mov jb mov (bad) fimul ja dec mov cmp ds adc dec mov inc cmp popa sub imul pop adc cwtl dec dec mov sbbb je invd fcoms mov dec mov and mov call (bad) mov mov pop imul mov inc cmpb lea loopne loopne je (bad) add rolb mov div andl xor imul add inc mov adc enter js mov lock (bad) incb add dec mov inc div inc mov jg (bad) incl scas ret mov add xchg (bad) jmp mov adc push and js xor mov dec xchg dec mov pop jecxz or xor dec or cmova cmp push jo js getsec hlt jg dec xor dec or jne mov aad mov cli rcl or jne inc adc insb dec jl xor or rorl test popa mov ret sbb rolb div pop ss popa adc jo pop out idiv sbb ret inc div imul inc mov add js mov dec mov popl xor jns fucomip inc mov insb xor cli sub dec mov dec test je pop mov xor inc mov xor sub repz lea ffreep jbe add jmp rolb cmp sub lcall aas bound push inc mov mov push inc mov fcomps dec js mov mov push sbb dec mov (bad) icebp (bad) xor mov mov (bad) icebp cmp jb inc jo xor into adc add es push dec cmp jne decl inc sub jp arpl jmp or jmp inc or sti je mov fcom add cs dec pusha dec mov push adc dec mov dec js jecxz ja xor cmp mov push cld jmp fsubrl dec dec mov push dec mov mov dec mov adc icebp mov hlt push push icebp xor push insb pop jl mov call jmp xchg out add lds xor popf scas inc xorl inc and push dec and and mov xor dec fstl push subb rcll scas stos dec and scas and inc push push and and andl push jmp cmp inc pop pop test lahf fiadd pop ret dec enter add movups or pop call cmpl jne dec (bad) pushl std stc call cmp je inc mov cmp je cld sbb int mov dec js push je ret jo out push push cmpl incl sbb dec sub mov js dec mov adc mov and mov inc sub scas pop mov bound add jmp push roll iret dec ret lea jmp mov sub cmp decl dec arpl cmpsb add or jg mov (bad) mov ja ficom call call dec sbb xor lea mov inc and and test inc adc mov push shll aas test les push mov adc call or sbb call js (bad) hlt out fild and mov mov (bad) in add jle aaa mov mov push add xor dec mov es ja dec cmp je jg sbb ss call add dec add ljmp sbb adc lods sub pop dec in or or int3 cltd (bad) add mov call and mov call push call add (bad) sbb sbb (bad) loop push or rol inc aas add fs cld add call pop call sarl cmp jne sub inc add pop scas ja jo test jle fsubrs call (bad) jb mov and mov cmovs inc lea dec arpl dec arpl into and or jge (bad) or (bad) sti insb test or arpl (bad) sbb daa and and dec adc pop and sub jg movaps movaps fsubs mov mov inc out (bad) push inc xor inc xor movq dec call xchg push jo jae rorl jmp fdivs sub rolb cld lcall std sub dec mov popa sar dec sub xor dec lea dec sub sahf xchg mov les and jmp stos aaa push lds test test jne lds test icebp dec mov dec mov xchg fist sub dec cmp jb jle clc dec sub jmp sub or jg dec mov dec mov dec test je jge pop inc neg inc out mov mov xor dec nop insb neg mov ss dec lea dec inc adc or add negl test test (bad) je cmp enter inc jge cmp popf inc cs loop mov dec dec mov lock test mov dec add inc cmp jg sub movaps sbb loop sub dec pop and (bad) je loope icebp jle jg sub dec cvtpi2ps jns dec mov adc ljmp cs addsd leave das repnz cvtpi2ps jns dec mov es dec shr inc cmp pop sti loopne dec or pop daa leave push rorb div subps xchg jns dec mov adc dec lea sub pop ficomp in idiv sti fild sbb adc call dec or pop fnstsw mulsd pop aam divps sub fcomp (bad) ljmp das adc clc cmc das adc sbb (bad) lret adc js jg add and jmp rcrb jo xchg out mov xor pop sbb popf sti adc dec mov mov push (bad) jae fcomps mov jo lea add es in pushf addl (bad) aam cwtl fldt adc mov loop inc decl cmp mov subl mov das sbb outsb (bad) (bad) mov dec lea outsb loopne or mov call orl arpl or mov push dec lea adc adc fistpll push dec mov mov icebp fs cwtl xor lea jg mov cmove call bound inc pusha jo pop addr16 rorl loopne mov sub and jmp pop push jnp adc dec and outsl mov icebp call notb das jl push aas (bad) or xchg stc call xor pop das fstps repz xchg comiss call inc mov in mov daa (bad) mov jmp adc mov dec imul pop pop pop aaa and dec lea inc xor imul sub dec mov xor dec ljmp dec mov inc fldt repz jne push push dec inc ret dec out add (bad) fild and dec mov dec mov dec mov dec sub push inc xor xchg ljmp add dec mov dec mov dec add or sub dec pop dec mov or nop out and adc cmp ja pop jle js and adc dec dec mov sbb sti mov cld pop dec mov dec mov dec mov leave cmp ja aad dec lea dec mov inc and pop push dec mov dec mov dec test je cmp rol dec or dec sub dec cmp ja cmp stc (bad) dec std inc ja cmp shr stc mov lds or inc jne sub adc pop cwtl or pop add stos cmpsb push fiadd fildl jne loop scas out mov inc leave js xchg clc out js dec div scas mov in les pop out cli lret inc rclb jne into dec mov shr das dec mov es roll (bad) and dec or sub shr iret punpckhdq loop rorb divb jmp aam and jmp aas dec mov pop clc jge jo fs insb add mov pop leave dec xor fdivrs leave and jmp icebp nop push dec mov pop sbb dec and nop dec mov dec mov inc mov dec mov dec mov add adcl mov pop outsl decb lret push or add sub mov add repz xchg cmp add daa lret dec adc xchg idivl out mov xor cmp fisttpll xor xor pop out subb sbb outsl mov test cmp lea out dec or cs xchg out jge out (bad) pop and (bad) or cmpl push mov test mov out mov cmpl jle pop out xchg stc call gs pop das jmp hlt ljmp dec adc push dec dec aaa inc mov fdivp mov push or xchg das or inc or jmp add movups push and pop sub scas xchg add cli mov lea dec lea cmc jg cmp bound call dec lea pop push call pushf mov mov out or sub add aam adc dec adc sbb in or mov sub add test nop xor cmpl (bad) incl pop inc test js dec mov pusha dec xchg xor ja pop icebp dec mov ret push out jne mov dec xor push dec xor xchg and inc add xor xor mov inc cmp jne mov inc in push xchg (bad) xor jne pop push dec mov loopne loop mov mov inc cld cmpsb mov (bad) mov mov sub push pusha xor cmp dec mov fwait add cmp pop addl mov dec mov ds sub sub addr16 sbb lds cmp cs movdqu cmp mov adc in mov dec mov and roll cltd push movups sahf jnp xchg pop loopne loopne mov pop nop mov addr16 loope cltd mov inc lds pop test cmp inc les inc mulb mov addr16 push or pop cmp aam mov je xrelease fwait ljmp cltd cmc inc mov mov push add cwtl in add push cmp mov adc dec mov scas stos enter call add js mov cltd or inc test addl test cld lock push dec xor inc dec or jne (bad) jo mov dec xor dec or andnps dec mov fdivs xor dec xor mov mov dec mov cmpl dec xor or jne sbb mov dec dec mov ret or mov iret clc ret std dec mov sub popa pop dec jl and dec mov dec cmp aas inc adc mov inc lds add xchg cmc inc ret arpl stos add addl push jg dec mov inc clc xchg dec mov mov adc cld jno mov dec mov repnz loopne sbb sarl fwait dec rorl cld inc adc dec mov loope dec mov addr16 mov inc xchg cmp mov dec mov loopne inc inc mov mov scas pop jl dec cmpl mov es pusha test inc and lds cmpsb subb xor test stos call inc pop enter lods popa push enter fwait loop push test js inc or push sub dec mov pushf cli (bad) jo xor movdqa fs fs mov into and add scas fsubl fiaddl movups test iret inc or cmpb sar outsl insb dec mov add movups xchg addr16 addr16 dec addr16 pusha cmp (bad) push arpl loopne out pushf jno adc adc adc mov orb cltd mov add add rolb addr16 div jg jg out lahf mov adcl leave jp dec mov sarb pop lea push daa jne mov sub pop ret imul daa pusha cmp test cmp push scas sbb inc inc cmp xor cwtl in ds jo or fwait inc mov ret orl cmp sbb pop or push mov dec out jo mov adc push out pusha cmp dec jbe or jecxz jnp rcll fmuls outsl xchg cmp push mov jmp ljmp repz push jae (bad) (bad) jmp pop mov xchg dec inc aas fidivrl iret dec hlt mov popf mov insb pop dec mov pop mov lea dec lea loop (bad) imul inc mov or mov and lcall ret mov adc push addr16 test jne call add dec xchg jne (bad) jne jg xor jl (bad) por add jmp in inc unpckhps or push gs scas cmp sbb (bad) mov mov and mov inc call sub fild mov dec add dec jne testl rolb sub cmp dec xor jnp pop jo dec mov dec mov push adc cld inc stos out addb loop inc pop das push lea popa xor or mov scas mov es inc test push orb mov pop out dec dec mov lcall scas push xor out xchg scas or or addr16 leave leave sbb js cmpsl addl xchg mov int (bad) cltd mov cmp jecxz andl jb rcrl cmp arpl jnp cmp stos (bad) (bad) fildll lret dec mov dec mov mov inc cmpl mov mov dec adc jp lds adc cmovs cli or (bad) fild push call mov call xchg addl adc jmp out shll psllq loopne cmc dec mov xchg dec imul dec sar std sbb (bad) cs sub dec mov (bad) push fisttp sub mov xor out leave loopne je pop sbb dec jb lret mov jne cmp pop pop pop pop pop aad dec mov pop sub xchg pop dec mov cmp jnp mov sub jnp and mov mov dec mov fisttpl cmpsb push (bad) fmul std (bad) loopne into call cs xor in fild inc fdivrl dec dec lea jne adc jne inc popl out incl or dec mov enter dec mov dec mov dec decl dec add dec mov push add loopne lea enter aaa in fisttp test je nop dec mov dec mov dec cmp push cmc hlt call mov add loop mov test dec sbb push add mov push call xor jae jo mov mulb je ds jle dec jg decb dec mov dec cmp jne inc call dec inc cmpl mov adc push pop orl add call loopne adc push hlt aas sar rorb shr into push fsubs decl jmp sbb jg pop mov add add cmovs or or sbb aas push cmpsl inc pop jmp xchg call or insb and fucomip sub jge or pop inc lea jbe or add repz adc sub mov call dec mov add cmp femms nop lcall clc push adc xchg sub push pop sub sub lret (bad) pop cmp adc cli inc xor adc dec sbb push or push push and mov push js pop repnz mov inc js sbb dec jo pop js pop js sub mov lcall dec addl dec subl xor test popf sbbl test std sbb push or call and cld push add lea subb xchg push addl push xchg ret pushf add or cmp rolb pop scas sahf adc cmp inc (bad) mov iret adc or mov mov out or add pushf nop lods hlt loop ds dec mov mov ja js mov mov mov mov jo rcr and je jmp sub jecxz jmp adc (bad) dec mov pop add imul jle clc insb cld loope test dec mov jb mov orb out ss ljmp push dec mov jg mov movsl ficompl in fwait jne cmpsb xor cmp into jne outsb push push outsl push xlat mov repnz push jg pushf stos popa push jbe bound mov jle mov (bad) mov inc out scas pop push mov xchg or out mov ljmp mov dec push mull int3 jb or in movsl aas push add mov xor add in pushl lea adc dec in lahf mov mov lret adc pushl in fistpll or je cmpb testl sbb leave mov sbb pusha aam add (bad) push aam or fs out fldl or add adc es xchg (bad) repz std or mov mov jecxz fwait sbb push mov inc push fmull dec mov fldl mov mov leave push (bad) jp jmp fmuls jbe loope mov mov adc decb mov dec js (bad) std jne les mov data16 mov cmpsl sub out jno add scas scas mov sub push lods movsl adc xor out mov mov jnp pop out popa lcall xchg or call cwtl add add movb std jb js scas cmp movl rcll push jge (bad) and in scas call loop sar or shr mov add movl push or cmp in je dec lea nopl (bad) xor addr16 pop icebp mov test test aaa bound jl inc add add out mov or add inc mov std or push cmpb test xchg xor adc dec fimul pop mov jecxz sbbl pop pop jle xor dec dec pop pusha rorb shr adc push xlat pop sahf inc pop push dec jo out xor add notl sub add into jne sub and add dec dec out dec ljmp xorb iret cli mov mov call mov inc call imul lea sbb faddl mov in or add mov movl lea jg out lea cmpsb add call fbstp dec pinsrw adc cmp lea inc mov add out incb add gs inc test (bad) dec lea and and jae lds rorb insb jnp out out decb imul sub pop mov adc jb sub mov test je cmp cmp ds std dec mov dec mov js sbb repz hlt push add add pop xchg dec cmpsb int3 add incl call mov mov scas jae mov xor push andl mov pop jp lahf test xchg or mov add add (bad) xor mov sbb call and jmp xor inc push gs adc or sbb loop or mov mov push sbb mov and mov cltd mov call sub test je sub and jmp inc add inc pop (bad) dec aam and sar jo or dec out jns jmp popf mov sbb je inc xor inc das mov jb lret pop or call outsb cmp aas sub or int xchg push xor mov mov inc mov je lea inc test cmovne add shl inc test dec arpl paddusw push popf insl (bad) out cmp fs xlat dec mov mov xor sub (bad) cmp cmp add mov and insl xor inc or add add add add adc cmp add aaa add je mov or test xor mov jg out dec lea call inc je rorl pop adc jecxz sbb andb dec mov jmp xor js adc jo subb inc fwait outsb repnz and fcompl push faddl push push or int3 test xor and lahf xor xor mov dec and call aaa mov add rorb idiv mov and dec mov inc orl jmp xor fisttpl and outsb push fstpt out mov loope pop add fmull aaa nop xor jmp (bad) out cs mov call js pop xchg cmp out mulb dec mov (bad) mov test add and cmp fcos adc std nop mov mov ret adc lds push and mov xor or cmp jge cmp jmp dec and inc out ljmp mov dec movl dec dec cmp sbb or loope mov leave add inc or or push call adc je jo adc std pop jmp dec lea fldl call (bad) mov add push add push fiadd add adc xlat fildl dec and mov jle call call cld jbe add jns sti pop add fstpt or in (bad) ljmp and sbb xchg neg adc adc cmpsl in jo adc jecxz lea dec mov call cld ret xchg pop adc nop sub mov adc or loope jns xchg jno popa imull xor cli in add or jg mov jne or dec clc jmp aam ret mov mov xor add rclb sarb jmp dec stos roll fcmovbe cmc dec mov sub add mov lret xor sbb pop sbb call add sarb out mov inc inc and fist dec dec lea mov inc dec cmc lea add mov movsl or in and mov add dec arpl dec mov rol mov dec sub dec invlpg sarl lea sbb bound pop jb call js arpl dec sub dec add inc call scas add nop inc or push decl clc xor jle leave je call mov adc cmpsb mov call sbb push (bad) (bad) mov add mov adc dec pop or fldl sub rclb les lahf (bad) dec mov add jbe call dec sbb (bad) jno lea popf decb add iret cmpsl mov cs dec dec icebp mov dec xlat push or mov subl imul nop inc mov ret fldl scas wbinvd mov fldl sbb and out insb sbb inc mov and outsl addl jbe add pop je test inc cmovne xor stc pxor inc cmp push leave inc cmovle (bad) repz cvtpi2ps cvtsi2ss or repz ja divps mulss enter fildl in paddusw out adc cvtss2sd adc cmc sub and andps cmovg (bad) ljmp aad aas cvttsd2si test mov mov ret cmpb mov mov or jmp push shr inc add jbe fcomi sar jmp aas jbe gs sti pop dec mov popf xchg xchg adc fdiv addps jmp mov adc pop xchg add xchg sub aam leave add sbb addr16 je jb (bad) js add icebp call push adc add scas push add pop cltd mov idivl mov pop mov aad inc mov (bad) fild inc xor inc imul inc test inc mov mov (bad) out inc mov adc cmpl inc mov dec es je xor inc test jle inc imul and ja push sub mov xchg add add frstor mov adc add (bad) lahf jo mov lret adc les cmp add loop flds jmp cmp jmp adc adc leave movb inc add jmp inc sar xchg inc imul mov add add inc es mov ffreep aaa xor adc int sbb pop and jne dec mov icebp (bad) (bad) decl cmp inc dec mov dec mov dec mov dec mov dec mov loopne adc dec mov dec mov inc xchg inc and rorb jno mov adc jae and jb jmp xchg js mov sahf sub data16 iret sbb and add rolb scas js or jne imul ljmp popf push xor push loopne (bad) mov bound xchg cs jmp lods orl pop adc test adc sbb int3 mov cmc das dec mov dec xor fstl arpl xchg xchg bound mov dec xor jbe mov push pop and push inc dec xor dec xor cmovs dec xor cli jl push dec xor lret pop pusha dec xor cmp dec mov or dec xor push xor (bad) (bad) (bad) decl dec rol dec mov dec xor dec rol dec xor dec xor dec xor out ljmp rorb dec mov dec xor jo mov and inc fistp clc dec xor and clc jg fimul into adc xor dec xor (bad) or xchg dec rol dec rol sbb pop imull adc xor dec xor dec sub aaa iret enter or dec mov dec xor jge icebp (bad) mov sbb lret xor dec mov jne dec ror shlb sti cmpsb mov and les push ja mov lds dec rol (bad) dec xor aas adc xchg add mov xor frstor mov push and inc xchg push lock cmpb fisttp dec dec xor dec rol sub add mov jge xor aaa push fbstp or ret add dec mov dec xor mov das mov (bad) std cmp adc lret sbb int sbb ret lahf sub into dec xor sbb sbb (bad) (bad) ffree xor mov rol dec rol dec and dec rol lcall std dec mov push ljmp movsb dec and sbb mov sbb dec not dec and dec xor mov popa sbb dec and call xor bsr lock not dec dec enter stos out jg or mov dec mov dec xor dec and shl inc lcall cmc dec and sub mov dec xor cmp and dec not sbb and push dec xor aas jmp dec xor dec mov jle insb and xlat icebp out mov dec and dec mov dec sub pop clc pop add icebp repnz sbb mov push pmaxsw jns pop dec and dec and bound add in dec not pop pusha dec and dec not dec rolb adc (bad) dec xor dec not xchg ljmp jp cmp dec xor shlb rcrl mov shl mov dec push aad xor dec and ss outsb lea xlat xchg mov mov andb push add mov mov fucomp add int3 dec mov dec xor dec lcall sub iret dec add push in and xor xchg lock and dec mov cmpb dec and and dec and dec xor jbe cmpsb pop jp loop orl (bad) push (bad) cmp inc and dec xor dec cmp jl jne dec add dec mov add pop (bad) je (bad) (bad) popf int std jg or sub push dec mov dec mov xchg jmp cltd inc add cmc lcall and pop xor fiadd and xchg outsb cmp jl mov dec xor add mov sbb sbb in push pusha dec mov and or hlt or sbb pop inc dec mov add adc dec push fdiv add ret ja jge jne add push cmp data16 fs or mov (bad) fisub sub jecxz mov cld push repz mov cmp add push dec add loopne xchg (bad) mov jle inc lea test xchg xor dec mov fdivr fild cld mov movdqu dec lea pop cmp movsl addr16 xor fcomps dec adc and cmp mov and or add movaps adc push std lret mov popa mov enter xor sub gs adc outsb (bad) mov push insl push dec movsb and pusha mov mov inc pusha lods and xchg jae jbe dec jo jmp cmovo sub mov movaps movaps cltd and jnp ret mov movq or add addb and jo test adc sub add xor xor push adc inc xchg mov mov ret cs pop pop fcmovb stos and and dec cmp or andl sbb push testb ret xor xchg mov push xchg andb loope std mov sbb inc mov adc popa ret inc mov push adc js xor dec xor dec xchg mov sbb dec or in rol and sub and mov (bad) and xor dec mov icebp jg jg cmp dec rorl pop dec xor dec mov dec xor arpl aaa insb dec xor dec mov adc xor sbb dec rol or jo (bad) lock les cmp mov mov dec int3 (bad) cmp out std hlt dec xor dec xor pop adc adc in adc xor incl or mov dec mov jno dec dec ror dec ror leave add mov fwait mov xor xor cld pop (bad) xor icebp in push hlt mov das call and push adc mov mov (bad) xor popa adc push add sar add ror hlt mov dec ror jae mov movsl fidivr jbe js daa xor mov mov dec xor jbe mov (bad) loop sbb je cwtl push aad rcll ret pusha call adc sub fdivrs ret ljmp (bad) dec xor and dec rol xchg pop xchg inc or mov rorl test les cld int3 bound loop and js ja pop out rol stos sub pop psllq in add rolb and fisub add mov dec rclb mov lret (bad) es lea add mov dec and dec xor fidivl enter scas mov nop mov loopne push js clc pop clc push dec mov dec out orb icebp lahf cltd lock and dec xor mov xor pop adc mov shr xlat stos cmp inc ret jge not dec mov lods dec mov dec pushf dec xor dec and dec mov xchg call out lahf cmp dec mov adc es cmp jmp sbb notl loop add dec mov dec mov ljmp dec and rorb ljmp and dec and dec xor or aad inc std das dec dec and in je cmpsl pusha xchg sbb fdivp jle inc in dec xor stc fmuls sarb ficompl mov (bad) sbb pusha dec and in (bad) dec jne in mov push push cmp pop mov jecxz iret pop rcrb inc mov pop das push xchg jmp jnp inc cld (bad) jg and mov dec mov dec not dec mov dec and dec pop mov mov dec and adc jmp ja and std mov rol js out aad xor and loop ds dec and jnp fildll sub push and dec push push push les (bad) cmp lret push es movq add add movhps cmc push (bad) cmp movlhps sbb movhps movhps nop mov pop push sbb jb movaps es lds dec and psubq or movhps or pop and movhps call lods orl inc xchg movhps mul roll xor addl lock cmpsl sub call mov pushf cmp movhps and sbb jecxz aad sub jl sub (bad) sub pop cld inc sub inc cmp out xchg shll adc pop out dec lea xchg dec mov dec cmp fbstp dec inc (bad) incl sbb add dec movsl xor inc test je inc mov (bad) out ficom add adc je inc movzwl inc mov (bad) mov ret add add movzbl inc mov add mov mov add ret dec lea dec arpl xor call pop xor (bad) xchg dec push inc add lds mov movdqa sub and jns xor sbb loope mov and adc loope inc outsl aam test or mov lods and adc adc and and adc adc pop mov xchg mov (bad) or adc sbb in call call or sarl jo sub jne jg pushf and lds or xchg loop inc sub loopne mov mov std arpl test dec mov dec mov fisub cmp xlat js sahf stos mov jbe mov mov adc pop sbb jmp (bad) (bad) jle dec mov dec mov dec mov dec mov dec mov dec mov ds idivl push push pop js mov jnp pop cs scas mov (bad) xor (bad) jnp scas jbe fldenv mov dec mov sub sahf sub mov push or mov push sub xchg test sahf sbb gs or shr sub mov add aad or test xchg xchg inc cld dec jle fadds subl mov out xchg clc and in pop mov scas mov popa pop inc and cmp dec mov fisttpll insb and dec cmp mov sub push push (bad) (bad) mov int3 (bad) dec (bad) dec lea lds insb repz xor pop inc sbb rolb add sti jo je mov out jno pop inc les jg daa xor dec mov push (bad) dec mov mov dec popw jle dec mov shrb test mov inc out loopne mov jmp out dec and or mov sbb stos cmovs pusha mov stos test inc cmp xor sti mov ja mov dec xor dec adc push or and mov (bad) aaa rol xor outsb cli dec xchg or or mov dec rol rcll and test xor (bad) xor xchg mov scas js mov dec ror xchg (bad) dec rol adc pop dec lock pop fdivl nop xor ret dec mov and les xor mov xor dec xor dec add clc loope sbb pop pop outsb pop dec xor loopne push push outsl movb imul inc and jl sbb data16 rol xor jle dec xor adc sbb xlat mov rclb jmp fistpll rcl add push cmpsl sbb (bad) cmp xor dec xor dec movsl je sbb jb sbb cmp mov inc cmp enter dec mov xlat add test rclb je xor add sub insb leave aaa hlt push scas decb sbb adc and ljmp dec mov sbb jo adc mov not fwait dec mov dec and out das mov dec leave int and or ss push xlat cmc jo test (bad) mov pop iret test into (bad) jmp jp fwait mov dec and nop mov dec xor dec leave insb dec inc and sbb jb pushf dec mov dec and dec mov pop dec and or sbb sbb into sbb xchg jl mov or int3 dec mov mov mov test fistpl adc cmp bsr fxch mov inc mov popf and dec enter dec mov fstl cmp dec dec xor pop cmp hlt pop cs and dec xor xor sti mov dec and inc dec dec repnz jecxz scas mov add ficom rcrb cmpsl (bad) (bad) enter pop shlb pop dec mov stc dec not repz in dec mov dec and xchg lods cltd dec xor mov (bad) aad inc lods and outsl or mov push and gs dec xor cmovl dec mov decl push jg mov dec and into add dec xor lcall jmp cmp pushf sti dec cwtl jo loopne mov notl jo inc and adc mov dec sbb or mov sbbl loop mov add mov xchg sarl jno mov inc and movb adc sbb sbb push sarb dec mov dec mov (bad) sub push sbb push mov dec mov mov adc dec mov xchg inc mov ret dec mov cld popf call dec push dec shl and inc cmp icebp movsb (bad) jbe xchg and pusha sub inc ss or add mov jg sub add lea test lea mov mov clc mov add leave mov sbb sbb call mov cs icebp sbb or add fs mov inc xor xor xor sub pop incl push and push add leave inc mov sbbl fsubp (bad) sub inc shr pop jo mov push xor mov cmp in add (bad) inc fidiv jne ja movsl (bad) scas and cbtw sbb push add inc push push add inc inc xor xor jo cmp fwait adc mov cmp jg push mov add mov sti add cmpl or add xchg inc (bad) fildll movq inc cmp or and add or (bad) jbe push mov sub add out dec icebp mov and addl push dec jno shll add daa mov shrl test je push and bound sub (bad) xor or pop test inc pop and cmp pop push int push add loop cmpsl or inc popf out pop pop je sbb xlat call xchg cmpsl xchg pop movsb sar es pop or pop pushf jle dec push sbb ss mov or ds fucomip aam pop je sbb in sbb arpl inc lcall sbb jne mov dec xor push fwait dec pop add xchg pop pushf aam and add inc jnp mov (bad) or mov push shlb fmuls call sub jne flds cmp sub xor js shrl orb rolb lret call les mov inc sbbl test jae sahf aam ret sub nop test test lock jo mov in or js inc mov pop adc or inc imul inc push pop lea pop out inc dec mov dec mov dec mov xchg ja rcr jmp dec je xor loop outsb pop jl jge loopne inc stos xor dec xor sbb icebp call xor daa cs xor sub pop cli dec hlt std (bad) xlat test or dec mov dec xor adc push call or lcall mov dec mov dec xor lcall dec xor dec rol dec shrl dec adc jo,pn out xor lea or ret mov frndint xchg inc inc int ror dec call out push sub push scas dec xor or dec fs les xchg cld aaa dec inc movsb sbb mov dec xor xchg dec rorl inc ror out dec xor cmp leave jecxz (bad) push xor mov xchg dec xor xor push (bad) cltd inc dec roll test ret xchg cmp ret push inc inc iret cmp pop pop (bad) mov dec mov inc les push mov inc cli sub xor adc inc sbb xor mov test mov popa sbb js (bad) cmp call xor or jp jecxz xor popa fs rorb sub not inc (bad) sbb test dec divl leave enter dec mov push and pop sub dec jb lods mov push (bad) dec pop inc (bad) push sbb sub cmp stos (bad) rol dec mov push dec jl test push push fwait dec (bad) cmp xchg dec mov dec and mov dec xor dec dec mov data16 shll out mov inc sahf pop call frstor mov xor (bad) dec mov mov dec xor dec mov sbb aaa inc imul rorl notb pop inc mov dec adc xlat add cmpsb push dec and notl mov jmp test popf into (bad) aad push push ret and push test test mov and daa std (bad) push add cltd mov gs call xchg pushf jmp les arpl cmpsl dec sbb in enter (bad) dec pusha and sbb not ljmp insl sub add dec xor sarb push push xchg rclb insl mov adc ljmp cmp dec add pop and adc xchg out dec xor lds add xchg test jo lcall cmp (bad) arpl movd adc pop adc enter mov dec mov icebp sbb out mov jnp cmc pop ss sbbb mov test pop dec mov or sub sbb mov mov mov xchg lcall test ja lds mov dec jno and mov add push push mov xor sub or fldt es push repnz inc sub loope add push fs sbb jbe fs dec add and daa insb mov xorl adc mov fidivr divb rolb jb inc pop dec mov call dec mov push mov push cmp rol test inc mov add dec arpl call xor dec scas mov mov addb out test add data16 cmp aas jae loopne pop (bad) testl incl and mov test ja adc cmp and inc aaa and inc pop cmp and out pushf push push out out test push cmp and lock movsb das xor and push adc incl and js aaa and clc or test cmp and sbb inc pop and bound xor jb and out iret bound adc decl push pop std pop in push xchg and adc decl push aam enter pushf pusha test jg leave mov decl push pop pop xchg push movsb (bad) divb jo jb pop sbb aam cmc js or lods add dec lea inc loop incb je dec cwtl cltd cmp or dec dec xor popf jg dec mov call dec arpl mov ret dec mov call lea mov jmp test in inc in iret xchg mov xor inc add add rolb pop add fneni(8087 lcall jg and xor inc mov inc mov inc mov (bad) (bad) inc xor xor xor xor xor inc mov xor inc xor inc mov inc xor (bad) (bad) pushl inc mov inc xor dec lea xor xor inc xor inc movzbl (bad) lcall dec sbb jns xor movzbl inc lea inc (bad) (bad) pop cld fnsave add inc mov dec pop mov dec mov add pushl in das dec and mov add inc mov inc cmp std inc add add inc mov inc mov or out inc mov inc shl inc sar (bad) jmp sbb out mov inc mov inc lea inc shl inc mov inc xor inc mov fnstsw incl ljmp aad or inc or inc xor inc mov (bad) out jle in or inc xor inc add in sbb xor inc xor shl mov mov sub or shr jecxz shr inc or inc roll incl or inc xor lea inc lea inc xor fmull decb add inc mov (bad) (bad) mov mov mov shr inc shl inc mov inc mov inc shr (bad) (bad) out out cmpsl inc shl lret or mov shr inc xor inc or inc xor inc xor (bad) mov aas shl shr jno fldl sbb dec mov inc mov out cmp pop mov inc mov dec push out or xlat out (bad) fistpll inc or inc xor inc xor inc mov mov movzbl std fucomip sbb aam inc lea inc lea inc lock idiv dec jb loope inc (bad) jb xchg inc mov imul mov nop cmp mov jae mov mov out aaa loope loope add mov inc jle sbb or sbb xchg pusha xor fimul repz or or (bad) jg (bad) mov jne mov mov outsb imul inc or test inc test sbb sbb subb or fwait jb or mov adc and cmpl jns jae ljmp or mov xchg and imul push or xchg popa (bad) jecxz ljmp (bad) je dec and and add sbb xchg cwtl hlt dec fbstp add or xchg mov loope xchg sbb dec daa or or xchg sbb seta or jb aad and bound sbb xchg xchg pop mov les or xchg icebp adc dec shr cmp cwtl jmp and add ja adc or adc test sbb or test loopne inc mov in repnz fdivs inc jo subl mov jne cmp pushf or (bad) in decl dec xor and dec or xchg jb jne xchg sub jg (bad) xchg cmp testb mov test push push inc adc mov and cmp or loopne (bad) or in push jp in sbb cmp cltd push or addr16 adc xchg xchg nop or test fs (bad) pop and jb adc inc jle xchg js divb popl push outsb jmp xchg cmp sbb and fstps xlat jo or xchg xchg insl enter xor rcr and fdivs rclb or mov add xchg xor sti add in adc dec clc sbb or sbb jne jp xor inc mov jmp cmp or adc ja add pusha call sbb jbe call xchg pop xchg pop cltd xor xchg pop andl mov sti inc sub jb fildll imul or push ret mov divb mov sbb xchg test (bad) xor or jg in mov ljmp ret je popf dec xchg mov push or out (bad) jg nop pusha mov popa test test mov or xchg (bad) lock xor and popa xlat orl cmp or and loope sbb mov xchg jp pusha js test ja jnp enter jnp or or cmp push sbb inc xchg movzbl orl xchg or shrl lcall or wbinvd out lahf or aaa or or jb or mov ret std or inc mov sub cli in aaa in or ljmp call (bad) mov out mov mov inc xor xchg lods (bad) xchg mov notl adc mov js mov xor sbb (bad) fild or fild scas xor xor inc stos (bad) out fwait mov lahf inc xor xor xor mov fs or mov inc xor mov clc (bad) adc push adc push jo notl notl notl adc (bad) push sti sbb add cmp scas add rcl mov ja aad std lahf jp mov mov add add mov push jmp mov imul add mov and jae mov sbb in pop or push mov xchg and pusha or imul mov or ret nop ficom sbb or jecxz ret mov sbb push xchg mov push adc jmp jno (bad) push mov cmpsb dec pop and divb add sbb xor xchg jo dec mov sbb stos inc test pop xor jp mov nop add or insb ljmp xchg shll xchg cmp inc loopne aaa cs movsb lods dec bswap mov loope mov cmp add jo movsb push cmpsb das (bad) nop mov daa and fsubrs and dec dec xor or and xor push xor mov (bad) mov xor addl (bad) test inc and sub or jle in inc cmpsb sub dec dec xor mov adc xor and cmpsb sub dec rdtsc push loopne ja sbb sbb sbb dec mov (bad) lock dec (bad) (bad) jne sbb (bad) xor rorb xor mov pushf loope adc push adc or icebp sbb xor scas (bad) or cmp or add sbb add mov fsubrs cmp cmp jne mov jno inc push and ret loope xor imul mov mov roll and cmpsb inc mov and inc or (bad) jge ret ja cmpsb xor mov inc mov std sarb (bad) fidivr inc mov test push pop call fstpl pop in add lock jmp in or or xor mov mov inc lods xor push and aaa lods xchg add mov loopne jo lea jg or xchg and jbe bound insb pop or clc (bad) xchg xor sbb ret push ja pop xchg jp jnp xor jne fs jo xchg push push pop xchg mov std push and inc ret push mov mov inc or mov popf push or (bad) xchg xor jp jno (bad) adc popf sbb loopne lods mov hlt ret popa (bad) rorl mov cmp adc add jo lcall pop outsb sub and fwait mov popf jg add mov xchg test sbb lods inc mov adc mov add push adc or mov test orb cmp xor lods out or dec pushf sub inc dec and das test inc xor push (bad) mov xchg mov mov test mov mov enter inc cmp jg sbb dec mov jle mov inc sub inc mov inc mov sub push inc mov inc mov dec cs mov mov (bad) (bad) call dec shl mov mov dec lea mov inc mov mov mov mov add and (bad) xor mov mov dec xor fiadd je cmp mov jmp mov add cmp jge add mov inc lea dec dec ljmp inc xor movd loopne scas mov or inc dec mov iret popf std scas inc pop add (bad) in push inc push and mov inc movaps insb in je xor insb and ss sti fcoml fstl xchg adc ja outsb pop and sub mov and (bad) jmp leave inc xor and enter push out imul into mov fs std and mov sub push loopne inc imul test mov and dec fidivrl push lcall pxor (bad) jo sbb and outsb push and inc or adc (bad) (bad) add (bad) call inc mov add icebp call sbb add mov dec adc adc mov and adc rol adc inc add nop sbb or pop or div jbe and data16 xchg or dec mov call data16 ds add inc ss lea adc mov fdivs cli inc adc xchg add mov add add push adc inc insb sub loope test rclb or mov sbb ljmp ja inc mov xor out and xchg jmp inc (bad) adc and inc xor xor mov xor add (bad) aas xor inc xor inc xor inc xor xor mov jmp jb lret add cld sbb adc xor ja jle push insb inc xor inc mov dec or dec mov and jae mov adc sbb jo outsb cmp je xor pop js iret push xlat push lock (bad) das sub pop and arpl inc popl inc cmpsl xor mov and dec nop xchg add xlat mov push xor and inc fstp hlt and pop lret push and inc mov cmpsl xor jbe mov lahf inc xor add cmpsb sarb lcall jno add push cmp inc inc add jg push cmp add inc inc inc inc dec cmp jne sbb (bad) inc xchg dec sub mov add aas aas mov in into dec mov cmp mov adc shr aad mov dec mov inc loope or mov pop insb sbb scas add cmp inc xor mov or or lahf or pop add (bad) int push pushf sub pop (bad) sbb sub (bad) jg call lea test mov and cmp jle lock in cmp adc decl rorl (bad) (bad) (bad) pushl add dec lea dec lea dec mov call inc lea mov inc pop add mov and js jmp inc lea dec cwtl inc movzbl dec bound add mov inc popf mov mov inc lea inc mov movsb insb mov jg fstpl dec arpl jg jmp and aaa xchg adc inc xor cmp jmp mov jg stos ffreep add or iret jge add pop mov push dec mov jns mov shr inc shr sbb inc mov mov test mov inc or out dec and shr inc sub push rcrb inc cmp jno test into fld jge adc je (bad) sbb lds call jl sbb roll push sbb sbb roll dec sbb dec shr sub roll pop pusha sbb loope or hlt pop inc push rolb jmp xchg inc mov mov push push aam and adc adc pop call insb mov call into adc xchg lcall fsubrl ja adc call sbb or and jo or aam stc inc pop ret fsubrl adc cld call fsts inc fsubrp enter les call outsl xchg pop daa (bad) sbbl mov xor incl out dec and movups movups mov jecxz je mov mov test aad js test mov mov das jle popa push rorl (bad) cmp aas pushf sub dec cwtl dec orl fadds sar push jo push or add and cmp (bad) fist sub (bad) je cmp je cmp je xor icebp inc cmp inc add or dec ss push jne into (bad) pop lcall mov or lds cmpb and add call inc cmp pop add jae mov lea lea inc lea lcall mov push push lea add daa jmp mov add movb sbb lcall sbb xchg cwtl icebp js sbb ljmp call xor dec arpl inc mov (bad) decl outsb dec inc sub cmp inc cmovle inc mov aaa add dec lea inc ret neg and lea cmp inc cmovae inc inc cmpsb (bad) fsubrs ret das dec faddl fimull xchg inc xchg iret das add jmp movb mov lock arpl inc fildl sbb ja fwait jle arpl push xor movb mov arpl cmp sub movb mov cli sbb dec sbb or push mov popa push sbb adc pop pushl int3 xor dec arpl cmp add or and test xchg xor sbb or or dec arpl cmp xor mov fimul aaa or or je rorl in mov or xor (bad) sahf mov sub aas push xor mov pshufw dec arpl loopne (bad) pushl sbb les inc shr dec add inc cmp fstp std add sub jbe or movaps je or and lcall and inc add inc cmp je loopne xchg jb pop or inc dec inc not push xor inc (bad) cmpl jg in je inc cmp je add mov mov je add je or fsubr xchg sbb dec lea or ret add fwait out clc pop (bad) xor add add inc movb xlat in and add cmp jmp popl inc mov jmp loop mov add add jg mov nop inc mov jmp stos and lahf test scas pop dec lahf pusha sub mov je mov jmp mov movsb or ror jl scas mov add movq outsl lret sub inc mov punpckhdq jg std adc movq sub or fcomi psrlw push aad push (bad) adc fcmovnbe adc or negl in pop clc or or push and les aam packuswb dec mov dec mov addr16 out push pushf outsl xchg dec movl nop add ss loopne add out pushl inc xor or inc mov mov fcmovne inc psrlw inc xor mov fsubl mov adc inc push dec ljmp imul fnstsw rorb nop or or (bad) fsubs ret js or xlat in mov outsl scas pop and outsl mov insb and xchg inc xor inc pusha loop cli jge outsb mull push (bad) outsl hlt or jo mov add cli push lret fldl add repz imul pslld sub sbb mov hlt xchg and pslld jbe (bad) push loope outsl enter inc cvttps2pi je xlat test sti xor scas sti mov addr16 or jmp lods stc and mov jb mov or or popf xor int3 pop in punpcklwd popa add sbb lds sbb jecxz mov lock rorl and pushf fstpt iret in dec in add repnz cwtl js stos add inc por mov dec xchg (bad) mov push js xor ja and inc mov pop jmp (bad) pop pusha inc test jne xor inc xor decl insb dec in xor xor xor pop rol mov adc nop outsl shl sub les pop inc lock mov mov cmpsl pop and loop cli inc mov sbb dec dec add adc cmp xor lahf cmp xor cmp adc stos sbb inc mov or sub push mov inc mov jmp sub popa subb fbstp ja sarb adc rolb or fstl insb pusha mov test inc mov mov pop pop or pop pop hlt dec lea mov push push push add es sbb mov cmp cwtl push sbb jmp pushf adc mov or or mov cmp inc sbb cmp inc cmp adc dec arpl data16 das mov or jmp dec out inc movzbl add add (bad) (bad) (bad) mov jmp arpl inc mov movzbl dec arpl inc or or dec adc in mov sub aam mov movzbl out outsl neg cmp sub sbb adc mov mov push sbb dec arpl xor dec mov mov cmp inc sahf adc out ret or cmp call jo ret adc ret push out insb clc ss push dec sti adc mov je cli mov inc cli js xor sbb and xor rcr mov mov je sub xor adc fistp inc add inc (bad) mov shr rol inc add inc xor inc ror idiv (bad) incl xor mov lea add mov ror mov inc add gs scas sti adc icebp pop push sub inc xor add jle inc rol jmp mov inc add inc xor ror add inc xor pop fmull mov xor ror sbb mov and sti out out cmp enter rclb movsb cmpsl inc mov inc pop add fdivs movsb lds inc xor inc (bad) (bad) (bad) std rol inc add mov inc add inc add inc add xor ror add inc xor jge pop sbb or adc push scas sti and rolb xor roll les inc xor and in sahf loope push pop sub or popa and in ror das pusha inc add inc pusha (bad) sti inc xor fwait inc add inc xor daa jo sar leave jge inc lea sbb cmp lret sbb adc mov sub xor clc xchg aas inc xor cmovl inc xor add ret (bad) sti pushl or int xor inc add xor lret fidivr add xor rorl xor hlt xor insb push mov out mov xor fsubl add stc cld or xor loope sub (bad) xor inc mov or cli aaa int add dec lea fs mov inc sbb add outsb adc xor clc outsl xor loope dec arpl mov loop push ja mov int3 mov add push and xor mov repz xor add ret inc add inc xor mov adc je cmpb sbb push sub pop dec cmp mov test sti in pop and cld pop icebp sbb and movd sbb and jae (bad) fisub jl mov push add call pop and and outsb fs cmp les fstpl inc mov bound cltd cmp outsb adc and jecxz fcmovnb add mov loop adc jge dec test stos out les push jae cmpl mov inc and mov mov jbe je dec (bad) mull inc xor adc fucomp push (bad) add insb call (bad) repz rorl call (bad) loopne movd pop add inc (bad) aas addl adc sub xor mov xor xor inc xor scas fdivs outsb adc mov inc xor xor in (bad) jne scas inc pop fcoml jge inc xor repz enter dec aad xor xor mov cmp jae xor cld in mov mov adc outsl or jp jg xor inc xor pop inc rclb sbb sti sub inc movaps shll add and adc mov mov sbb pop cmp and ljmp enter das data16 inc add cmp add inc sub mov or add icebp inc pop movups movups xchg mov adc adc ret dec add cmp ffree dec mov in mov or inc repz dec jne add in (bad) pushl sbb rolb shr and mov dec cmp jo lar add std xchg xchg dec lea out or add fwait mov dec add addl inc xor aaa adc dec add call jne stos clc out fild in jne daa and pop push fstl sub outsb dec ret mov (bad) repz decl (bad) jne jmp dec aad out pop dec mov dec arpl cmpsb dec lea cmp jb aad mov inc mov dec lea dec and dec mov dec mov dec mov std call clc dec sub inc add dec sub and das stos add add scas dec inc lea inc mov sarb mov inc shr sahf inc cmp dec mov jae lahf inc test je mov add je add cmp cld mov push je dec mov dec mov inc mov decl jmp add dec mov dec mov inc mov push (bad) xchg ljmp dec mov inc mov or insl inc mov push dec ja test mov dec mov pop cmp add jmp pop dec mov inc mov sbb repnz mov jae sti jg lea inc lea dec cmp push sbb jb mov sub inc lea inc lea jae lahf inc lea into in fidivr inc lea ret cmpl std mov insl dec mov arpl aas sub data16 lea dec arpl dec arpl dec mov in decb call add sbb out xchg std icebp ret sbb dec add sbb int mov daa jge mov sub imul (bad) aas or jne test je movzbl test icebp stos clc incl adc inc lea mov cmpsl cli (bad) call inc mov inc mov inc mov inc mov jmp inc jecxz fwait test mov das (bad) inc mov jmp nop ljmp jecxz sub incl xchg popa sbb cmp or adc (bad) out add test add inc mov lahf sar inc mov inc mov add jg roll fldl rorb xchg ret (bad) (bad) (bad) frstor and cmp mov sbb shr inc mov inc mov mov mov adc subb jecxz adc jmp jmp mov inc mov mov and and lds xor popf test sub xor adc mov mov incl dec arpl call push jg or mov call push xor ljmp inc dec push sub inc mov mov call shr inc mov inc mov outsl cmp inc mov mov mov mov mov inc pop inc mov pop cld incl movzwl mov mov mov push add mov (bad) mov or or pop or or or (bad) (bad) mov mov js push push mov mov mov push fwait cmpsl jns or movlps adc mov jmp data16 adc mov pop mov movzwl mov mov scas sti inc adc pushw iret adc pop sbb jg (bad) out sbb sbb inc sbb mov pop mov (bad) (bad) fisttpll mov mov mov mov mov mov or ds sarl iret movl add mov les jge (bad) data16 xor mov inc sub xor in idiv adc imul push loopne addb rcrl dec xchg adc call in pusha and add call jmp inc inc sbb dec sub aas inc mov inc xor inc and and daa aam clc jae jo xor clc jecxz incl shr jl int sbb inc jg shr addl mov sub jne jbe pushl jle add add add test je out ret js jp rorl add std lret (bad) je xor arpl call fistl add in push and js inc add inc sar add into inc mov cmp les dec add inc cmp jbe and loop dec mov test pop movsb push sub rorl mov dec cs ret dec lods clc cs jmp clc dec mov dec mov dec mov cmpsl add dec sub ss mov jp xor fildl jl lcall or shr in inc cmp pusha inc out dec fimull jae test (bad) cltd leave mov je add je or je add mov (bad) adc std add add inc and inc add (bad) cs push add add fmull dec mov fcom mov mov sysexit sub testl jae dec cmp arpl inc lea dec mov pop in jge lea imul mov pop sub adc xor ret ret pop jnp sub nop jmp inc daa sbb jl test aas jbe jae jne leave je push aad dec nop add roll mov jne cmpsb mov mov shr inc mov inc mov scas fidivrl pop cmp jle pop pop add mov push inc mov mov mov inc inc xlat push push out insb arpl fnstsw dec mov inc mov jno rsqrtps fs inc or pushw mov pop pop pop xchg cld int pop imul dec adc in cmp pop dec adc arpl inc mov mov mov mov mov imul inc sbb sbb outsb sbb cmp jb cmp mov imul pop push aad adc out aam cmp sahf into dec cld (bad) call lret mov sbbb jno inc or sbb mov pop sub cld or in dec lea jae inc clc jo mov test fs cli inc shl shlb dec mov dec arpl (bad) dec sub jo mov sub jmp xor mov movsb xchg mov cmp es inc xor test sub loope lea jecxz test dec mov or fsubs add lods push subb jbe test leave pop dec dec mov inc rcll ljmp out js jne std inc cmp jae mov inc cmp je add je add xor sub jle adc ret or aas jnp incl enter dec mov or cwtl sub (bad) dec mov sbb or fldcw daa xor sbb aaa jae cmp inc adc in mov adc lea insl xorb sub add add popa inc gs outsl lcall push push les je ja inc mov inc movzwl inc mov jmp sbb mov mov jg cmovb cld inc mov jmp jmp mov sahf mov inc xchg pop dec or (bad) mov inc movzwl insb paddd add mov dec add sbb pop cld out sbbl addb mov push add cmpsl lret inc (bad) addb hlt add pusha je loopne (bad) std in out jo cmpl sbb or (bad) adc push push daa ja mov popl mov push lock cmp adc clc add lahf movl cld adc jmp push pop adc adc pop dec add ret lds or scas loop rclb sarb jbe xchg xor mov sbb sub (bad) (bad) mov dec shl dec lea dec lea dec shr subl pop je loope rorb cmp pusha dec jne sbbl inc and add push ficompl or je test out into adc add inc push dec add dec xor leave fs testb fisttpll sbb adc xor (bad) (bad) mov fmull dec cmp dec mov je call and xor call lea sub call lea pusha sbb pop mov add xor xor (bad) test sbb jb inc imul pop and xchg mov add and (bad) pop cmc mov pusha mov xor push sbb (bad) (bad) aas and roll inc mov mov mov mov mov inc adc push add jmp sub sar inc and dec mov insb and aam and mov je cli mov jmp cs stos sub xor or inc sub mov pop xor pop test popf sub call inc sub mov sub inc sbb adc mov decl mov mov mov int3 xor ja out adc mov mov mov inc mov push cmp sar pushl call mov inc mov inc mov es shr mov mov sbb mov mov sub imul dec adc (bad) fisttpll mov inc mov inc mov les add inc mov pop mov inc mov inc shll sbb add pop dec (bad) (bad) (bad) incl or or pop mov inc mov inc mov inc mov inc mov scas imul sbb mov inc cmpsb sti jnp mov inc mov mov push dec sbb mov call fstl sahf fisubl or call nopl lea cmc add sbb dec mov jae or add test mov arpl sub and jne sarb cli mov das and (bad) mov inc movups adcb adc mov outsl f2xm1 cli add pop loope rcr lahf in (bad) call sbb leave subl call sbb adc rcrb mov inc (bad) call xor pop decl sub dec add inc and inc cmp add xorl fisttpl test cmp pop popf inc cmp sti sti add outsl out out adc xor add or fild dec mov rorb mov dec mov (bad) out sbb or dec mov mov or mov dec into mov in mov sbb sbb decl sub dec mov inc sbb (bad) dec mov jae lea jl mov pop adc inc dec pop sti mov push je inc lea dec mov mov push inc lea cmp add pop (bad) fistpll sub movsl xor popf xchg dec lea dec xchg or lea jmp add (bad) fist pop add xor test push loopne xchg push sbb mov add add loopne adc inc add add rolb rcrl incl inc sbb das cmpsl ljmp je push and add lahf nop pop dec or in mov out invd add sub and test (bad) enter dec xadd mov xchg addr16 stos and and mov dec mov aad pop fcoms adc sbb dec bound nop sbb insb jb cmovge setl and sub (bad) je loop and sti fistpll adc es (bad) and adc push mov add adc adc nop push adc (bad) jbe pcmpgtb inc cmpsb js prefetcht0 add (bad) push add js and je cmp iret dec pop loop mov ret ja xor in in or test clc sbbl dec mov fcmovnb inc lock sub test inc jne xor inc jge mov bound movups movups adc out mov push jle je decl sti push fldl decl xchg pop add movdqu (bad) shr jne rcr push and dec cmp xchg inc je or imull adc pop and xchg je adc add and movaps loop fwait xor movaps mov out add xchg dec rorl test dec lea mov push inc xor dec cmp jbe mov inc movzbl inc xor dec cmp jbe push andl ja add dec loop rorl xchg sti cmp outsb pop push add adc ja cmpl add popf sbbl push sbb push add xor pop pop push lea or pop push pop pop in out popa ja pop or insb push or jo xchg push inc es push or fldl mov jbe push or out popa ja pop push or xor or mov and adc dec stos fdiv pop aaa push push push inc xor add iret flds push in mov mov (bad) mov icebp push mov xchg xchg lahf add xchg or or mov or sbb push movups enter pop test insl jl pusha jl pop jl push rclb push push cmp pop xchg hlt push jl sbb dec mov dec shr je jl repz or jle pop inc mov std arpl add push adc out cmp add andl aam sub inc dec pushl rorb xor dec cmp pavgw ds lea push add inc and out addb ds dec lea jo mov jl pop mov imul jmp xchg xlat (bad) inc push add sub sahf in sbb push rcrb push add mov pop push and pop xor pop push push pop mov jmp arpl push push or int3 maskmovq divl push push jl push jbe mull jo push pop push push jmp xor xor dec or lock jbe or xor cmpsb cmp dec ss sbb lds mov (bad) dec lock xor xchg jae jecxz dec fstl (bad) (bad) jo test (bad) jne lret jge xchg jae loope and inc add lret add inc testb jbe pushf cmp add mov jo mov iret addr16 dec lea shr inc and je cld dec int3 movb lret ljmp je dec adc push push or or data16 add data16 popa out add dec sbb lret jmp push xor imul inc cwtl sbb dec pop dec lea repnz add sbb mov scas testl call aam sbb mov xor je inc cld leave cmc dec lea dec push frstor and dec test pop lahf push in dec test push cmpb test push dec lea call (bad) das loope cmc cmp xor xorl and mov hlt mov pop mov (bad) (bad) jmp push dec dec mov dec lea loop mov add cli (bad) aas les cmp test jne and jne mov sar mov shr xor jns adc bswap jmp push jmp fild lock and jmp inc mov mov jmp nop inc mov inc xor add add dec mov inc lea shr dec mov and xchg mov cs (bad) (bad) incl cmp je cmp je cmp je cmp je cmp je das xor (bad) aas push orb mov dec mov inc incl popa pop inc stc dec mov dec out rorl sbb sbb adc push rcr (bad) adc inc cmp inc jae dec inc lea lea fnsave jo stos push es lea pop and fisttp and lea inc lea bound lea fnsave pusha xchg lcall mov lahf stos and add fs mov pop aas sub inc pop cmpsl or ucomiss pop jne scas mov fisttpll and xor or dec outsb inc and or pop sbb mov outsl fs push popf sbb sbb adc (bad) rep insb outsl add adc cmp stc inc inc add and into xor add inc inc push adc cmp rorb and add jo,pt push xchg outsl jl outsl or pop and push outsl jbe je stc sbb push pop ja xor add data16 or dec push cmpb call dec add scas stos mov mov inc fmull or push mov push rcll nop xchg shr aas add or add push lret loop inc gs and sbb adc cmp adc or dec and es cmpsb mov mov outsb sbb xchg xor sarb fcomps fiadd add dec cwtl sbb sbb xchg sbb ja gs mov pop push xchg sbb test push gs sub xor pop and pop popa sbb rorb in outsb mov mov adc xchg pop test pop and sbb adc push loope and jg cmpb mov jg adc sub in jge add sub mov or or sbb xchg mov pop xor xor adc dec nop (bad) cmp adc push jmp jo sahf (bad) popf or ret out es mov inc mov inc sub adcl inc push jae jne mov cwtl out mov add (bad) mov mov mov mov mov mov mov sar mov mov inc in adc roll je mov mov pop mov inc mov sub push loopne fidivr mov sbb pop aam pop (bad) daa inc inc mov inc out jl decl and fdivs inc mov inc mov mov inc mov mov mov push jmp in push jo adc incb stos adcl inc jmp mov inc dec lea out push or dec dec lea mov adc and roll outsl jne inc jno inc mov dec mov dec inc mov inc cmp sar cmpsl out mov shrb dec dec pop dec je push cmp fwait inc sub dec cwtl inc cmp clc xchg and add jbe jecxz inc mov std dec mov inc lea sbb idivl inc mov jae add test adc adc mov add or jne add mov mov out mov and lea (bad) incl call inc movzbl inc add inc mov inc mov out ljmp sbb or ljmp popa xor testl out mov pop or test jne movl pop fwait or push mov pop lock sub faddl (bad) push ret and sti dec mov call mov or inc inc adc rcll clc dec jno pop movzbl movzwl sub outsb add iret jo outsb add add mov jne aaa add adcl dec fwait inc and sub mov inc mov push fucomp int mov xchg pop push jl icebp inc mov mov ret data16 inc inc std fdivs jle movzwl cwtl inc mov mov mov or pushf or ljmp xor ret mov inc mov jmp adc scas enter lret mov subl mov xchg add sub stos sub and insl cmp inc add mov push into adc mov pop (bad) out sbb xor sbb xchg test popa add std mov sbb insb and mov (bad) decl (bad) (bad) std (bad) decl pop add dec mov sbb jmp dec mov ret (bad) decl cmp aam lea dec sub inc mov inc and add cli lahf jo pop push and decl pop or fist dec add loop dec mov (bad) ja faddl inc sahf daa lret jge stc cli cli mov (bad) jns cli push je dec mov dec mov out (bad) pop movsb adc or push and lahf jge mov outsl popa inc cmovg mov inc push pop dec lret mov pop out fs lahf dec xchg dec inc xchg (bad) cmp dec mov jae pop inc lea inc lea pop and add or pop and sbb and fistpll inc lea dec mov adc add cmp and inc add nop sti shrl nop jmp cmp or inc add ficom lret das int lcall rcrb insl and xchg fucomp mov dec cli scas (bad) push inc mov out jmp pop test jae (bad) mov jne stos mov inc test jne sarl js pop addl add (bad) mov fdivr call fiadd sub jne popf xor (bad) mov ja sub scas insl add fild int sti negl add lea std dec push loop push xorl clc pop xchg jnp fyl2xp1 call xchg push add pop call out inc mov iret mov clc (bad) incl in adc test mov mov bound call dec xchg outsl mov imul mov dec pushl std (bad) dec mov psubb push or dec sub dec sub inc add and loope cmp jb mov inc call adc push dec mov cmpsl nop test rclb inc inc and lds cmp mov add or fcmovb rorl jg jmp dec push mov or mov dec mov xor mull adc inc mov dec cmp mov inc cmp cmp and mov inc lea aas mov aaa sub adc cmc jo xlat jge imul sub xor movsb sub std mov jb jmp (bad) inc ret add adc test decl inc pop (bad) inc insl (bad) out mov jne xor inc mov inc mov sbb mov movb cltd inc mov inc hlt call inc mov inc mov jmp mov (bad) jmp sbb dec mov dec add loope shr roll imull adc and add mov mov (bad) jae xor dec jmp out push xor (bad) and pop inc cmpsl sahf and daa out ret hlt jo loop (bad) jb or pushf and sub add jbe add daa dec out jns or jns add push test or jae add in ds pop sub adc out cmp mov addl (bad) (bad) push in shr fnsave hlt push adc out cmp cmpsb cmp out scas out mov push cwtl cmp in out (bad) mov fnstcw call out mov sbb test mov dec push and rclb mov add gs mov (bad) pushl mov movdqa dec mov dec out xchg test test in negw or cmp jo lock shl xor pop add pop push je incl inc dec mov in (bad) dec test loopne icebp cmpsb add lea test pop popf adc adc or scas add add test je loop add mov decl decl jbe cld cvtpi2ps dec mov dec shr push and dec xorl push push clc ljmp movaps push loopne test pop andl sub mov movq pop push iret adc outsb jle inc faddl int3 and pop stos mov lea mov push inc xor dec cmp jae dec lea fildl aad push adc test mov push add dec push clc jae and test decb inc xor xchg inc pop fdivr pop testb xor xchg dec (bad) leave outsb and add adc inc pop inc movzbl clc inc add lea sub mov inc pusha ja into cmp or ja out jae inc popf dec push or mov out jae test push inc push or jae cmp inc push cmp sub fs dec push or pop rcr cwtl stc pushf push (bad) jae pop push push mov sbb jmp jg mov call xchg ret jbe or jae ret shll lahf adc add rcrl scas mov xchg dec test jp mov inc and mov inc or cmp xchg and or push inc jo adc and xchg push push mov aam and loope mov push or sbb aam (bad) dec shr push je jle orl mov arpl push jecxz mov je push cmp sbb adc inc xor and cmp (bad) outsl sub add push and jae inc push add enter dec cmp add dec lea ds or aas dec lea or nop ds xor pop test lcall dec lea dec ds out ljmp movsl adc push ds or jnp pop into andl jae inc fmull mov or inc and mul out sub aas cli jae lcall or xchg cld (bad) out push pop ds inc clc jae dec lea std sbb dec ds jae pop je push inc xor sbb loop or decl dec pop inc xor call (bad) lahf mov dec rcll call aas mov hlt mov and stos cli fild das add add inc setb sub and mov sbb inc roll jmp fucomp adc rolb rorb shll sub test jle push and jecxz xorl test or imul add mov test add mov xchg movsb dec arpl call push and ret fsubrl inc jmp call push into add add dec mov out out jb lock sub imul rclb sbb push aaa nop mov mov fistl jo aad shr and rolb das pop pop std out and fdiv movsb push inc mov mov mov cs (bad) aaa pop pop adc sub inc mov mov xor shr call ret push hlt es inc adc push mov add ja rcrl shr inc mov inc scas mov sbb out adc ljmp sahf xchg dec pop pop adc idivl fwait addr16 test popa pop fs ja jl gs cltd (bad) jne or push mov shl mov sub shrb insl pop sbb lock outsb outsl je decl jg sub mov add add inc and mov mov mov inc inc std mov mov jae add test std mov decl divb movzbl sub jne ret lret lahf cmc jmp mov lods lea or cmp inc add (bad) subl pop sbb jl ss cmp outsb jbe out xor xor xor and test mov jno sti iret pop mov jne jae aam sub sub jo dec pop mov inc (bad) cs sub dec lea fcoms xchg iret push xor (bad) cmp int sub sub xchg cmp mov push call push std scas enter arpl mov jne clc pop inc lds mov pop and lret and push in adc loopne cld mov mov imul and jo mov mov int3 cltd outsb (bad) decl add adc mov sub add sub xor xchg lock inc jo (bad) cmp jnp rcr jp sarl call jnp inc mov sbb imul dec pop inc mov inc mov inc mov decl mov inc mov imul sbb xlat jl xchg mov movaps mov rorl icebp out add bound dec pop add push daa shrb inc cs in mov lea add cmc mov jle (bad) cld jg jo pop dec mov inc mov dec lea dec pop adc ja dec mov dec mov dec mov roll incl decl cld inc mov sti imul push inc lea dec mov mov shr int inc cmp dec mov jae jo inc test stos incl jg out je inc cmp (bad) (bad) incl je adc and dec mov dec mov outsl bound decl or dec mov lds add dec mov inc mov fist decl sbb dec mov sub cmp das movq mov (bad) pushl inc lea dec mov inc jnp jnp lea arpl xor daa bswap pusha scas sub sub or mov sub cmp and jmp and jo aam jmp dec shl sub rolb btsl mov bound xor xor adc sub loope out loopne arpl rolb push dec lea dec lea inc add cmp (bad) jne cwtl (bad) incl pop jne movl adc (bad) cld add adc js mov mov push je dec xor rolb xchg and addr16 jbe add sti xchg mov adc adc in js call std dec arpl aaa xor jae sub roll and jb and mov mov and imul cli xchg add xchg xor push in and cmpb andl pop (bad) adc and test lock mov test and cli in xor clc (bad) out leave push leave mov mov add mov insl or pusha bsr add pushf inc call jl cmp sbb js aam jmp mov mov sub testl adc pop add mov subl pop mov insl mulb cmp dec arpl jae cli stos inc mov mov loope and mov jne in lcall and mov dec mov call dec push out pop arpl rorb jne out test jge out xor lock pop lret push pop push inc mov jmp push add fs cli sub dec lea cmpsl dec arpl push pop jp icebp call push lahf cmc dec push cmc icebp push jo in scas cmc xor ja add out pop int3 psubb adc scas outsl lea sub dec cmp scas xor sahf (bad) lcall adc (bad) xchg nop and mov data16 shrl out test aaa cmc pop inc add push in dec push lret call sbb dec xor (bad) sbb push out mov ja add fiaddl add or mov and sub or je inc insl clc mov xor stc xor adc cwtl or incl (bad) divb push divb aad adc jmp mov outsl scas jmp sbb lahf inc xor jmp test lcall dec lea dec mov dec cmp lcall pop dec mov dec mov dec sub dec sub add and rclb jb push mov sti add test pop cmp dec mov jae les lret inc lea and outsb xor add cmp lds cld dec mov mov add pop adc adc pop inc mov or xchg call dec mov inc mov add sbb das pop rol push cmp inc xchg out insl clc sbb jae in lea outsb dec data16 rclb lea pop adc das pop and lea adc push in jg negl lea push sbb cmp fucomp faddl or jb jmp mov and inc inc fildll test mov inc pavgb sbb dec pop (bad) jmp sbb pop inc mov jmp sti ljmp inc mov dec add jmp aaa inc lock or add mov xor inc xchg dec mov adc jne jecxz inc cmp jae and inc enter sti sti or sti dec mov pop cmp aaa jl inc xchg cld inc pusha dec mov dec mov inc mov out mov mov cltd sbb push jl pusha pop add adc jg out movsb adc xor pop or push adc faddp fistp lea sbb and fsubr ficomp daa sub jbe and inc push (bad) mov cwtl dec lea (bad) pushl (bad) ds mov inc mov inc mov inc mov jmp xlat repnz ljmp mov mov inc pusha mov mov jmp adc (bad) inc mov jmp jge dec add mov dec mov in hlt cmp push inc add das and adc aam mov daa call cltd xchg adc dec movsl jbe cmp xor and inc pop (bad) ficompl jl adc pop sbb push mov movsl aad and jecxz leave push mov xor test or fist xor jge dec jbe inc faddl outsl hlt call xor sbb clc fisttpll je dec cmp arpl mov sbb xor add ja add inc movq out jne loopne cmp inc aas js imul or dec mov push aam jmp and dec cmp je add incl inc sbb dec cmp jae fidivrl push inc sbb dec pop fiadd pop dec lea jno sbb inc cmc inc cmp fcomps cs sbb jne sbbb inc add pop inc sbb inc pop mov inc push cmp or add pop cs mov sbb inc in mov fdivl or inc sbb xchg inc add add or add jne inc jae inc or dec sbb add mov or inc sbb andl dec cmp inc fdivl es sbb iret or adc bound mov cmp pop dec mov and mov pop lds mov dec inc or add xlat stos mov pop enter or inc sbb mov call or cmova mov lds mov je (bad) ja or cmp dec jo push cs lret xor mov push pop pxor or inc add pop popa sub (bad) fwait lahf pop out dec and je inc push add cli pop adc inc xorl cs pop add cmp or sbbl inc pop cmp inc inc xchg enter jae pop cmp sbb or xor push pop cmp scas add pop inc push aaa push xorl inc mov icebp lfs lea ja cmp dec cmp jae loop pop push cmp or sbb push les add cs cmp cmpsb jae inc or cs adc inc jae sahf or adc inc ss lcall inc cmp ss push pop pop cmp adc xchg jae jle ficompl inc daa dec cmp dec cmp jae and jne pcmpgtb fs outsl sbb add add call call add inc dec dec inc inc enter mov or mov mov add mov push rorl push je mov and cld mov dec add cmp call mov ret ret leave add mov popf adc dec mov fcom or inc sub (bad) pop outsl jp ljmp fwait sbb ds icebp call es xor outsb xor icebp mov sub mov or hlt adcb or xchg lret and add in mov shr and in xchg repnz dec mov mov add fsubrl pop mov cmp push and add hlt push mov lret test pop cmp mov scas mov adc sarb add and inc mov sbbl pop dec lea mov popa inc xor push enter fiaddl into push sbb mov je inc mov sti sbb (bad) js pop mov test and lret xchg (bad) pushl sbb mov cwtl inc sub xchg enter lds sarb push push sbb xchg call cmpsb mov xlat inc mov mov (bad) xchg push and and out jmp xor test add jmp call add mov lea inc sub jg stc popf dec arpl mov in xchg call dec sub test lahf fucomip cld xchg into pusha in push testb or mov or sbb call aas nop inc das addl and into mov and out cmp add out add sti and paddsb xor iret inc mov sub add enter sub add mov in sbb push mov inc jmp mov enter adc je mov inc mov decl addl or or mov inc mov inc or (bad) decl dec adc mov inc mov jge sbb in rolb pusha faddl scas out aas jae insb and add pop scas xchg loop add inc add addr16 test (bad) call pxor dec shl test inc std add dec pop insl jp ss or xchg inc imul xchg jbe jg lea movsb js lahf dec lea inc mov dec shr and je les fs or inc xchg or inc add test or je in es or out mov je or je dec stos pop insb test nop add popa ja enter add pop dec lea xchg call aaa and cmp dec mov je add pop push or pop dec lahf icebp dec adc loope ljmp and icebp call test xor mov movsb dec lahf icebp call in xchg out pop and ds lahf icebp dec lea sub adc test rorl in jne adc in aad daa movsb cwtl in xchg icebp dec mov dec fs fcoml xchg std cmp rclb push insb and adc in les push inc mov jae pop jae jle (bad) (bad) fisub fcoms inc scas dec dec mov jmp dec icebp and cmpsl dec repz add inc mov add jl scas inc sub xor dec negl dec arpl call and pop push mov leave jb push push xchg sbbl push pop inc sub dec inc dec arpl xor mov aas adc pop fmull sahf jae pop fistpl call jmp pop or mov mov xor and nop inc icebp loop adc or cld add jmp std sarb and sub das sti adc mov mov jmp pop orl dec mov adc mov sbb jnp insb xlat add mov js es adc or xor jo push jl mov inc and sub jne jmp dec mov dec mov dec lea dec mov dec jg pop sub pop or test jne and jne aam adc test jmp ja xor jmp out icebp and jp icebp (bad) jmp or jmp and dec or rolb pop inc lds test mov jmp inc pop dec mov or add mov stc inc dec mov inc mov clc or outsl ds mov dec mov pop dec mov scas fwait adc mov jl je adc mov sub jae outsl fadds pop adc sbb pop pop pop pusha iret adc pop pop pop xchg test jbe pop and in add xor lea jmp jge enter dec mov dec inc std sbb dec mov dec mov dec mov inc xor jo outsb and dec mov dec mov mov dec mov dec and pop cmp push dec mov dec mov dec mov ds ljmp test jl cmp cmp dec mov xchg mov fimull xor push xor in push je jl adc pop inc mov dec mov dec mov dec not stos mov and add push not dec not dec mov push cld jmp dec mov dec and dec not dec and incl (bad) sbb cltd dec xor dec mov dec add (bad) decl decl clc dec mov dec and dec xor dec mov dec and dec mov dec xor dec and dec (bad) fild cli dec mov dec and dec and dec and mov xor dec xor dec xor jnp leave dec andl mov je (bad) ljmp and dec xor dec xor dec mov dec or dec and adc out (bad) mov icebp dec xor aad mov loopne std decl pop rorl aad xor dec xor dec xor dec xor icebp dec lea std loope add mov jmp pushl (bad) repnz mov dec mov dec lea dec xor dec xor out (bad) dec dec xor dec and dec shr dec xor dec or dec and cs mov dec lea dec ret add fisttpll or and jg adc ljmp and dec inc icebp xchg and dec mov dec and xorb jmp inc or aam push cld outsl clc mov lret not dec mov dec mov push jo (bad) testl mov popa cmp inc ret xchg inc and dec mov mov fs hlt ja push and dec and dec mov andl add clc std popf loope adc cmc dec not dec mov jno int out (bad) jg xor dec xor dec mov dec sbb fmuls in dec xor dec mov dec incl pushl int3 dec mov dec and or dec mov dec lock (bad) jmp in dec and dec xor dec xor dec not dec and dec mov dec and dec xor or mov clc dec xor dec xor jb std dec cld pop ret sti mov dec or cmp sbb mov dec or dec add mov rorb in cmpsb sub in dec and dec xor dec movq xor dec mov les mov push imul dec xor test dec lea std dec dec push adc fstl std dec xor dec xor xchg add dec mov (bad) ds rorb iret (bad) sbb jmp mov in dec and lock into std dec and dec or repnz and shr dec or xor aam dec pop dec or dec lea fs inc or and mov dec shr jo dec and dec mov loope cli test fcompl into roll mov jno popa ret rol inc (bad) dec mov mov mov adc aam out cli mov gs mov mov pop and dec je add dec mov push dec inc loope lahf push cmp and mov sbb dec xor dec mov dec leave xor dec xor and push pop or xor jmp fisttpl fisttp pop and push dec jge sbb fisubrl dec loop icebp aas fxch dec and dec xor in dec or dec xor dec or inc addr16 fstpt xor dec or and stos sub stc dec xor dec mov fisttpll rorl dec xor dec xor dec xor dec or sbb lea cmpl mov sbb add mov add mov jmp add push clc mov jecxz dec shr dec mov dec lea (bad) mov and dec or dec shr dec mov dec or aaa clc out mov dec and dec or dec lea dec shr jbe dec and cmc push cmp aas inc dec and xor add adc dec mov aaa cmp mov mov xchg cli not dec mov shrl loope fstl dec mov call jmp mov mov je pusha in mov pop dec mov outsb sub cmp loope std dec mov dec not jno jmp and stos or (bad) dec mov lret xor xor dec and push cli or test dec mov pop divl mov lods (bad) dec mov dec xor and ja fdiv sbb stc or loope dec or nop dec xor mov dec add mov sub enter sub outsl mov dec xor dec mov lret adc dec xor call dec xor pushf dec mov pop add inc pusha dec lea pop (bad) jb loope (bad) sub mov dec ret adc jle into dec mov or rorl dec and dec mov dec shr sti pop cmpsb add dec mov dec or cmp fild sub in and dec lea xor adc dec in or push int3 dec and pop jge fldl ret dec mov jp xlat dec or cmp lods int add dec in adc push mov mov dec or fild rclb dec mov dec mov aas mov dec mov mov insb loop mov (bad) mov loope mov or push decl inc mov cmp (bad) leave pop mov dec cmp movsb add sbb and lock shll lock sbb into loopne and dec cmp lock sub imul mov dec cmp insb mov mov sbb test outsl stc imul out fimull ret scas repz daa dec dec xor xor fcoms add clc dec fwait push lock dec rol rcl add mov insl jb in mov mov addl iret xor dec mov mov add je mov pop mov into aam pop add into dec or cli mov subl lcall xchg fwait cmpsb add or dec shl shrb adc or dec mov dec shr xor cmp cmc dec and mov clc mov jbe dec or out movsl push fwait jae lcall mov jb xchg sahf insb xchg dec push icebp adc dec mov fcomip clc xor iret jge inc (bad) bound mov std outsb sub inc pop pop pusha xchg xchg iret dec mov xchg dec and push pushf cmp inc adc (bad) xor push xchg mov jb sbb dec xor dec and popa ds mov xor sbb fwait clc mov inc inc inc pop mov outsb fisttpl (bad) lds or dec or repnz add mov call (bad) pop aas cltd or lret jmp lock out push inc pop fiadd dec jns ds test xor js ret dec mov sbb jns sbb (bad) lock scas mov dec mov call and push fadds add xchg dec mov adc xor dec clc dec sbb iret fadds cmp cmp inc and dec sarl mov and cmc dec mov fcoms rolb pop sub mov push shr sbb outsb ficompl dec and dec or push cmpsb jle sti js mov push push movsb xchg cmp cltd pushf stos push dec mov jmp push nop xor rolb enter mov pusha ljmp dec daa dec cltd xor call adc fmuls mov lret xor les xor mov pop push mov add mov xor rcll and xchg jmp (bad) (bad) loop mov movsb dec mov ret sbb xor pop int jmp or xchg gs sbb jl jecxz and stos cmp and dec xor cmpsb push mov jecxz xor dec xor mov lahf adc cs dec sbb fsubr dec mov push sti shr dec mov dec inc lahf js mov fmuls loop shl ljmp fldt mov dec shr push and mov addr16 jg cmpsl shr dec and dec mov dec mov mov inc cli push dec mov outsb cmp fimul loop xchg sti cmpsb sub or in xor cmp cli inc dec mov cmpsb inc dec mov push jo push mov add jge loopne test loopne call std and cmpsl mov xchg lds test sbb mov lret mov scas cmp push repnz ret sbb fimull sti iret dec and enter or xchg dec mov mov push hlt dec mov (bad) xor out call (bad) mov dec aas stos cmp dec xor (bad) xor jecxz or or into (bad) frstor push dec mov push es cmp fisub jmp mov dec test fiadd (bad) adc dec xor dec mov fiadd pushl jne and xchg outsb or inc inc fadd std mov jp pop popa dec mov insb (bad) dec or or mov mov in and sbb shrl dec loop pop adc aaa xchg stos out stos sbb js cmpsb dec mov rcr cmp cmp rorl sub mov enter dec and cli cli (bad) cmp dec js mov sahf aam scas dec xchg mov rcrl mov lahf mov adc ficoml lahf cmp loop dec inc pop push (bad) iret rcl push mov scas or inc pop iret add (bad) mov fs jp add cmp and cmp gs mov mov sbb pop (bad) cmpsb pop dec scas (bad) cld mov fwait and mov dec test cmpsb cmp sbb ret fmuls stc test mov test mov cmp lock xor bound jg inc js dec and call fdiv cmpsb mov dec xor mov add shl dec xor fs xor xchg (bad) (bad) cld and add out cs mov in movsl call call hlt pop sbb mov xlat stc dec or dec enter ljmpw (bad) hlt jle dec mov les xlat aas adc gs mov mov dec sarl jmp cmp pop pusha dec or je jbe pop xor movd push push jmp pavgb popa data16 jg pushf add pop or add out sbb pushf xor jmp add or dec and xchg mov sub push pop jmp jecxz mov jp inc dec mov dec and dec and dec and stos jo pop in push jg adc mov mov xor add sbb dec cmp pop lock std xor add and push and dec mov pop xor dec sub rorl scas mov mov ss enter dec xor dec xor test and dec fwait rcr dec xor dec push or mov rcl cmp adc (bad) xchg ret iret dec xor cmp xchg inc push loop es mov dec mov jl dec popf and xchg frstor (bad) repnz mov xchg push jbe dec xor push push add dec cmp hlt ret repnz mov inc and or dec loopne sbb out lahf and in jp xor xorl cwtl jae pop sbb insb mov sti pop rcll xchg orl cmpsl pop add xlat or xchg pop sbb (bad) cmp or push iret dec push inc lahf inc dec cltd dec mov jg not dec mov inc rorl aas and shrl and jge mov in dec and dec dec mov mov jecxz and add mov call aam dec push or xchg hlt dec and dec cltd mov xor dec int xchg sub (bad) jg jg cmc dec xor dec mov aad or dec xor dec mov dec or dec xor pop cmp int3 imul dec mov add std das pop xor ret stc cwtl (bad) cmp mov dec xor shl ss movsl xor xor scas mov add and lds push fs or xchg and addl insb and je dec lock outsb pusha dec idivl or dec and inc xlat push inc dec out pop insb pop (bad) fisttpl jo lds out xchg dec mov test cltd mov mov adc ret sub mov call test pop ret pop ret jo,pn adc sbb xchg mov or (bad) and dec xor rcrb push aaa std test xchg and rorl mov xor cli dec xor xor iret push adc clc cmp clc std adc and dec or dec xor dec popf fnop fnstsw stos dec xor dec dec jg hlt dec mov shrl ret repz inc push push cmp xor cmp lock xor insl dec xor push sub dec xor call dec xor insb push xchg ljmp add dec xor mov popa out movsl dec rcll call fimul rclb decb (bad) outsb or arpl add pop dec pop inc pop js pop jo addr16 fldl or mov mov dec cwtl dec cmp dec mov and ja mov dec and dec mov dec add pop cmpsb inc daa cs loope fcomps jmp dec and dec mov inc cs and pop aas pop not rolb xor lock and aam sub push dec pop sbb sub lock xor mov insb pop ljmp push sarb scas add cli dec xor je adc jo outsl loop mov or movsl xor dec pop ret pusha fcmovb xor je call push outsb fcoml (bad) jmp rolb jmp mov xor jns dec xor dec mov xchg test addr16 jge dec xor or add or sub pop dec xor mov enter out or pop inc pusha dec mov lea dec out sub pop js or mov dec and test roll dec mov decb push ja push dec xor pushf js ja std dec mov dec xor aaa dec (bad) mov dec and dec sub loope inc dec xor xchg test inc hlt outsl js orl lret dec xor dec xor dec xorl and dec xor jo call aam mov inc and pop dec adc jbe xor push insb mov rcl push xchg or add mov mov cmp mov jp lock inc aad ret jae jno mov jo mov insb call insb xor dec push jbe inc cwtl mov (bad) or mov and out push jl jle je decl sbb dec mov dec mov or push dec pusha data16 stos test adcl jne dec cmpl gs and (bad) addb mov xor jg cmp or add ljmp inc lods (bad) fmull jne (bad) jg movl jb or dec mov out xchg je jne jbe mov or dec scas jae shll or pop pop dec mov adc cmp or enter addr16 je and mov adc pop adc add pmuludq (bad) push shrb rolb sarb fiadd push cmpsl cmp inc lea aad or mov dec shl dec lea dec mov dec mov dec add stos adc cmp dec mov dec mov leave xor rcrb jnp scas jle dec mov fnstcw shl mov cmp dec test mov mov (bad) push inc mov test cmp jg or xor dec test xorb xchg jnp pop dec push lock in mov fldl dec xor push and bound incl movdqa or add sbb shufpd push dec adc (bad) jne (bad) mov pxor pushf or cmp or sub out les clc xchg jecxz rclb adc adc mov or xlat scas (bad) pop jecxz dec test je dec add call cmpb add ret jne cmp mov jae inc xor test je mov mov or (bad) decl inc movzwl inc mov dec add test je mov movd inc mov test test mov mov dec push aas testb jne fwait dec mov adc movsb cs add or push test xor or aaa lock jg adc add in dec sub inc add mov and cmpsb mov adc outsb sub inc lea fucom movl add inc (bad) jae lahf inc test je inc cmp je add add je add das add les mov or inc add and rorb imul rclb or pop sbb dec mov (bad) (bad) pop inc cmp ds lea inc mov inc lea adc ja out push lea inc lea or lea inc lea and into jbe cmp inc adc add sbb jae adc add incw vphaddubw loope shl add loopne pushf add test mov dec icebp mov sbb loop and jmp call add in inc dec xor dec xor mov pusha dec push push push sbb loop inc and movsb and push dec jp dec inc test enter inc jp and ret dec xor dec mov int3 rorl adc ljmp inc ljmp sub ljmp mov xor xchg dec popa insl test sahf or add mov int inc mov pop adc out loope call mov dec xor or sub xchg or push adc int3 or and or inc mov and lods and (bad) std andl inc mov sub sub xor mov cmp mov out enter cmpsl imul outsw dec mov movsb mov or xor mov dec sahf push mov call sub out xchg and mov insb dec dec arpl sbb inc inc pop dec xor cmp inc lods dec daa in mov cmp push mov dec and sbb mov addr16 jle and dec xor popl inc cmp add mov scas insl je mov push out jne mov inc or popa mov (bad) xor rcl dec mov dec mov jg jg dec mov dec mov inc adc outsb sbb dec and pop sub jp decb push cmp cmpl inc cmp je mov (bad) mov movsb push fsubrs add movl stos jb imul (bad) xchg and je std inc xor sbb pop sub xchg mov out mov jo pop mov sbb test adc pop fwait loopne dec fisttp arpl mov ljmp iret adc cmp adcl ret aam dec aad mov cmp fsubrs in flds or fcompl and sbb fisttpll push je ljmp xor sub adc pop xchg cmp xor mov mov xor loopne cmp sub xchg imull (bad) std inc add jmp dec mov dec jp inc rorl jmp rol jmp dec mov xchg sti add call loope jnp add loope shr push scas and in fmuls out and cli add in xor jmp mov loope inc (bad) in frstor inc mov or jle dec call insl loop mov and test add jo add lret mov (bad) aas push in mov mov inc mov jmp add or out popf jae dec and call das inc mov je inc (bad) jnp pushl cmp jmp jae xchg arpl ficomp or mov sbb enter xchg cmp cmp pop push and or mov push sbb mov push jle or orl xchg pop inc push add movsb (bad) and mov inc xor adc inc cmp bound pop jmp out sti inc add push and dec pop faddl dec sub dec mov and dec lcall mov dec std es jecxz add and jmp cmp jae ret jns cmp je add fwait fwait dec add je add inc adc clc or sbb dec or hlt adc dec aaa inc mov je pop sbb pop subl ffree or jg stc and inc adc (bad) inc cmp sbb jae or lea inc mov inc lea cmp inc lea cmpsb mov push and add dec sub imul jne ffree inc pop cmp and adc or pop fcomip dec sub jb jmp xor mov mov dec mov lea cmp inc push mov pop cmp jae in test add add je inc cltd fwait dec add aaa or push je dec decl cmp cmp (bad) or fs bound imul and dec cli dec mov inc mov add add jl mov inc sbb xchg dec mov (bad) cmp fisttp imul lds ret jns inc lea inc icebp (bad) das (bad) aaa adc inc lea lea imul cmp aaa mov push lds stos pop cmp push push std out data16 xchg dec lea jno mov push jp mov out mov push cmp xchg inc cmp push out lea adc inc ds xor cmc daa add fdivl aas dec or cld aas pop sbb aas inc mov fmuls dec mov dec mov or sbb push push mov (bad) push and add jg dec mov cmp dec add clc cmp pusha sbb xchg sarl jae inc mov inc sbb sub and adc out out lea insb lea pop and bound push sub cmp mov xor inc pop adc jg cs jp xchg dec lea dec (bad) flds push jno mov sub sbb shrb loop iret lahf mov add lds xor into loop cmp push dec mov (bad) jmp rcrl xor dec mov dec mov push cmc ret dec jbe jmp mov lret xchg mov inc ds mov in xor sbb ljmp fmull pop testb testl adc cli jno xor pop mov mov sti loop mov (bad) dec mov xor out addr16 or jmp dec ljmp into adc arpl js aad scas xlat aam and (bad) dec pushf add iret add fucomip mov jno jno jle (bad) (bad) orl xchg out (bad) incl inc push movl add movsl lahf nop add xor sbb mov add dec inc loop jo xor lods dec mov lahf test mov mov add and dec mov fnop es cmp push dec mov dec mov loope dec mov inc cld out pop bound dec mov dec mov jne inc scas or xor pop dec mov sub packuswb pop shlb or dec xor dec mov ficompl rcrl aas fwait loop jp dec xor test daa jae ja mov dec xor dec xor dec rcrl (bad) mov mov dec add dec xor adc (bad) mov pop mov add icebp sub je jo xor bound shrl lcall mov dec mov dec mov addl lock cmp inc add mov jno inc jg and dec mov ja dec mov add pop and adc into cmp decl dec lea dec lea inc nop xor inc adc mov (bad) jg dec and pop add dec add dec ror dec add dec xor dec add dec add (bad) jg iret dec add dec ror fcmovb rclb ror dec xor dec xor dec xor dec add aad mov sub leave inc dec xor dec add dec add in mov inc test rorb add cmp rcr (bad) fild dec xor dec add dec add dec and rcll ror dec sbb inc aad dec xor (bad) cmovs fbstp (bad) decb ret dec xor inc or lret data16 xor dec jg adc xor dec add fisttpll or iret dec add fild jl push dec add test in out mov dec mov add fimull jl add xlat jne leave dec add dec sbb fst jbe iret fadd sbb iret dec rol dec pushf (bad) xor outsb mov jmp push loopne rol rorl jae daa adc dec rol mov ret mov pop popf mov mov jmp fwait jne push faddp mov div mov dec je dec add rcll add dec add out and dec add lods in sbb sahf in out cwtl xor mov outsb add shrd jo je pop pop stc add mov and clc iret sbb lods jbe inc ja push cmc dec movsl (bad) sbb lret and mov fidivl adc iret fcmove or push (bad) or xor jne in adc int3 jle jg in mov add les dec add out iret in xchg cmp enter out in push push fbld ret xor mov enter (bad) mov pushf jmp hlt cwtl or xor push lods arpl mov and jo xchg add mov pop ret (bad) jnp cmpsl out enter in jbe mov fimull dec loope fadd xlat and dec in dec es fwait mov (bad) lret cmp xorl out mov pushf adc fs mov pop adc sub into mov xlat cmp nop add repz push ror xchg xchg aam dec es xor jb inc fildll inc add or out jecxz or loopne (bad) mov sbb daa or (bad) xor data16 jmp and adc cmp dec add dec cmp xor mov into shlb cs xchg in aaa nop or cmp mov popa rol adc cltd cmp and inc xchg add cmp jae push mov lret xor daa int mov ret rorl shrl stos leave pop and dec add dec scas clc push je jmp aam aam dec add scas mov rcrl iret xor mov sbb arpl pop push iret push push out loopne stos lds in cs flds mov lret (bad) adc out je mov cmp xor xchg je inc mov adc xchg xchg xor je adc test mov in jbe rcrb jg add jnp pop (bad) dec add iret es subb mov into xlat test jae movsb inc int mov aas mull movsb enter xor int ret xor mov sbb push sahf popa movsl clc dec add (bad) push push push mov into rol (bad) jae add popf test dec add imul cmp adc jp pusha push sbb (bad) add xchg addr16 pop dec cmp mov jo or dec loop xchg movl sbb addr16 (bad) jae or mov fs fildl mov add int3 outsb ret inc dec add ss adc dec add mov cmp pcmpgtw jl or sbb ja pop out and cli lahf popa dec ret sbb ret adc (bad) test xchg sbb bound jg popa daa inc mov adc (bad) adc push add or int inc js les cmp jecxz fnstenv cmp or lret dec cs lret in mov adc sub push adc (bad) cmp into cmp pop add (bad) rcrb pop negb push add iret adc and xor pop decl test pop pop xchg out adc jno enter leave lds dec cwtl cwtl dec push dec inc fcmovnb ret jge or dec je lret test enter mov sbb xchg pop jl out mov ror mov sbb mov bound xor sbb or pop dec cmpsl js cmp outsl scas ror loop loopne cmp jbe mov js mov xor out or xchg xor push loop,pn sar add lds mov (bad) cmc add pop shll fwait iret mov scas sbb adc movsb addr16 lds shrl vpshuflw adc test xchg jnp es fcomps sbb cwtl ret fcomps sub daa in inc test push inc loop xor jbe insl or leave or ja xlat push xchg push jmp es jnp rol inc and (bad) or mov enter loopne lret nop add jbe add add push enter sbb js addl mov or faddl mov or in push out cli pop or or add rcrb xor (bad) pop xchg or out mov mov add cwtl dec cwtl jp ret jle xor or and js pushf leave xchg cs aam xor jb les sbb push inc adc lahf enter test and ds in stos jmp rcrl rcrl aam inc mov fistp xor (bad) cld cwtl sub and xchg mov subl add lds xchg xor repz sbb mov repz xchg dec lea mov fwait and cmpsb incb jl pusha clc dec inc ret cmp jne mov in in pusha cmp add imul rol jne in dec push loopne enter js (bad) and adc movl jp push mov ja pushf les jge dec rol dec cmp insb and shrl ret pop cmpsb cs lret cmpsb add std dec jp negl jl adc jns xchg leave pusha xor and lret loope xor inc std mov pop cmc xlat or fs sti mov leave loopne jbe mov ret jb inc enter dec je dec xchg (bad) sub cltd sbb sbb xor mov push cld fmuls mov dec add jo add mov xlat push cmp xor and dec add dec jo inc cld aas xor dec add dec add push pusha pop add push insb xor pop int3 add pop enter sbb jno dec mov aaa inc les dec shrl dec mov dec mov dec (bad) out or mov dec mov xchg adc outsl add push cmp dec lea pop cwtl loopne out js mov mov roll cmp xchg jne and dec imul sub add dec inc mov shr add (bad) or add pop add mov subl mov (bad) or loopne inc pushf fwait cmp test orb mov scas or add add pop cli sar cmpsb add pusha dec lea sbb mov add adc push cmp add sub cmp inc adc mov (bad) dec movl pop scas add push bound loopne (bad) rolb adc and pop cltd mov xor push loopne push push pop add xchg lahf js rcrb out cmp adc out leave dec mov cmp pusha idiv shr inc test clc sub incl stc sub roll incl shl inc mov inc neg inc and inc or dec cmp les ja inc test pop add pusha mov dec inc mov aaa mov ljmp mov add sub or subb push addb or aam orb es sahf xchg xchg jo lea outsl and enter bnd stos ret inc pushf dec mov or stos add sbb inc mov add push fisttp jp pop inc cmp and push push adc aaa adc out add sub add mov add decl je testl and mov add push pushw inc cwtl and sub dec dec mov lods mov test inc icebp ja pxor dec mov dec mov jnp dec mov dec lea inc mov xchg adc dec inc (bad) cmp cmp xor sbb (bad) (bad) stos add and cmc dec cmovbe insl lahf mov ljmp (bad) je ljmp inc mov jne push dec cmpl sbb jmp push fdivrl sub push and or push shrb push scas clc fstpl loope shl push jne adc cmp insl dec cmp and dec adc sbb push sbb shrb add sbb xor into jmp mov cmp lea dec mov xor sbb enter ss and mov sahf or xor dec fwait pushf gs pop rcl lods xor or fwait jmp loope test dec lea dec (bad) out and xchg mov dec shr call dec jno lock rorb test arpl fisttp add sti inc ja push push pusha push jmp jmp (bad) dec mov dec mov inc push add or push or dec and dec sub dec mov inc add dec sub adc (bad) or adc scas sub test aad mov repnz lock cmp jae inc mov or out loopne cwtl fwait mov pop add sqrtps stc xor test loopne unpcklps (bad) in ja adc add or dec mov or adc rcrl movsb cmp aas sbb dec mov inc mov or mov ret or fucomp sub roll pop adc adc fs std fstl adc sbb dec mov enter and sub das xor cmp add sbb popa adc xor lcall xor stos jbe dec lea movq call rorb add call addl divb lea cmp adc sahf add addl pusha fisubr and cmp (bad) jne in dec lea dec sub movsb jae dec push mov jae jae mov sbb test movb je loopne xor inc mov cmp inc jmp dec add roll clc cld pop int3 sub jo cld jmp outsl jo insb ret dec movl inc push cli iret clc decl dec and dec sub add pop jb lea inc mov das mov dec movl pop inc cmp jae incl mov jae incl je inc dec cmp je cmp jg incl sub cmp sub inc mov incl inc add dec mov inc mov or mov mov inc mov dec mov inc sub or mov inc cmp or loop mov inc lea (bad) (bad) decl inc lea inc lea inc lea inc lea inc lea inc lea inc inc lcall add cmp adc loop imul add mov adc data16 inc mov test sbb push pusha clc dec xor call (bad) or xor aas adc stc mov mov rclb push add jmp lock dec add dec lea dec add idivl lret mov or adc arpl push (bad) jno lea fbstp adc lea jge cmp call jae stos inc cmpsb dec mov dec add call std inc lea int3 add jbe dec and inc decl dec and call jne lahf mov sbb jmp shrb movl lcall fs pusha dec rcll push cld add dec lea or lods mov aaa add es mov xchg sti xchg or push orb out mov (bad) xor mov adc ja dec mov addb add int les mov sbb or in inc mov cmp cs mov pushf js push sub xchg xchg dec mov and data16 ja and push in xchg call ljmp cmpsb sub or orb sub je jo or push cld inc es lea dec cmp push dec and jbe jg in inc inc mov jp cmp xchg push rorb mov (bad) pop (bad) data16 lds out lock xchg nop cld cmp or int3 mov movb and loop rcll mov mov pop js pop (bad) into xchg inc and je mov test loopne mov xchg call cmp cmovno mov sub mov xor pop mov xor test and mov cmp dec mov loopne mov (bad) pusha jne jne jecxz mov fstl jno loope cmc ja bound inc ret add jle dec mov mov daa lock dec sub dec mov add dec sub xchg decl fldl push decl xchg shr inc and jno jb cmp dec mov jae and daa sahf cli add cli and and cli sbb adc inc (bad) inc dec dec bound inc nop or dec jae sbb xchg jo dec cmp adc cmpl pop outsb or push xor dec lea add mov adc and dec lea leave dec pop cmp adc or and add in and inc cmp jb iret and repz mov lea dec pop add dec int add add sub lods sahf out sahf jmp cld cld cld cld addr16 and cmp inc jmp nop js loopne cmp (bad) or (bad) xchg js adc mov inc mov (bad) out inc bound sub cmp cmp (bad) outsl loop jae sbb lea inc lea inc lea xor fwait jne sub xor insl std pop (bad) jne sub das sbb and push push loopne sti add pop add sub cmc sbb (bad) loopne jmp incl mov dec jae das pop or sti incl or test jne test je test movb cmp pop mov jne dec mov lods xchg inc mov inc movzwl mov (bad) jmp jb (bad) (bad) lock int xor inc mov (bad) ffreep inc sub mov mov jmp test out dec mov sbbl xchg jmp lahf popf pop pop dec shl jmp es enter mov test inc add call sub dec lea outsl sub outsl add xlat pshufd movd or dec add mov inc movzbl movzbl and mov sbb (bad) sbb shr jle inc xor (bad) out pop inc movd movzbl inc xor jle and negl jle shr sbb pop addr16 rcrb inc mov inc movzbl jnp fisttpl popa pop mov inc into int arpl movd sbb mov outsb add dec inc dec and inc enter sbb adc into mov inc cmc or (bad) leave inc xor movd mov fwait jbe jae sbb jns fs rolb jne xor mov sbb pop insb add insb (bad) int3 push inc push inc repnz ret lock incl sbb add mov mov sti fistpll dec lret movzbl mov mov movzbl shr sbb nop add movzbl inc shl inc or and mov data16 call loopne jo jg mov or das sbb int mov leave sub (bad) (bad) push popf add or and or std and shl inc dec or inc or inc mov rcrl lret and add or iret push test adc and bound or insb (bad) and xlat rcrl jg shll cmp lcall and mov inc movq fdivs dec outsl sbb jo or fistpll loopne jle movaps add vmread sbb les sub add sbb add or roll paddd out mov adc sub int ljmp (bad) and jle dec rcrb (bad) sub cli pop jmp or movzbl or or and andb fidivr push jg inc or inc ror inc xor inc mov decb (bad) movups sub push and xor clc mov and pop sub jl sub jo test pop iret movdqa pop repnz mov data16 (bad) movb call adc add into sub mov loopne jae adc std xchg hlt inc xor leave std (bad) (bad) jge insl fcmovbe outsl sarb stos ss and fimull sub daa or rorl sti ret movsl pusha jbe aam dec ficoml jge fcomp jne out add out test inc pshufw xchg sbb out decl sub inc movd mov or or or ret push sbb fwait mov mov in sbb jg call cmp mov ljmp add enter pop inc push shl shrl (bad) clc xlat pusha mov jg push xchg enter jo sbb jae add inc or scas mov mov loop or iret mov (bad) fwait sub xor mov pop and xchg ret push xchg ret mov jg data16 ja repnz xchg test int3 jno popa and inc mov xchg mov daa jo pop jmp adcl push sub shll pop loopne mov nop loope outsl clc loopne stos xor inc pxor adc inc ret movaps jae or jo dec imul and clc inc popa (bad) loope testl movd push pusha xchg ss out adc sbb cmc ret mov push mov adc jbe or xor inc fcom popf jle jecxz arpl adc lret inc fidiv sbbl inc or mov aaa cmp inc or jmp mov adc pop add jb ret mov shl addr16 xor cli ret std add inc or inc fmull (bad) adc js ja or inc xor mov push and add (bad) pop jne ret icebp mov pusha add sub je mov inc punpckldq (bad) (bad) outsl mov mov jo lcall mov xrstor xor insl inc wbinvd dec add inc fsub sub jo dec mov cmp movq scas loopne imul loopne xchg out mov sub pop insl out iret iret lahf jnp adc fdivrl add or add pusha cmp insl gs ret loope lds mov stos (bad) jno sbb pop adc mov pop loope clc dec cmp loop movd (bad) lret sbb inc mov xchg xchg cmp or call shl outsb cmp xchg sbb sub jecxz clc or xor test shr and cmove outsb dec outsl in jno fdiv (bad) or icebp jecxz adc adc insb (bad) xor mov scas les out aad sahf out (bad) mov pop (bad) jle call loopne cmpsb xor outsl (bad) es clc mov inc clc push pusha (bad) pusha js jg or add push and insl jb dec out (bad) pop xlat movaps pop add sub inc adc inc and dec add sahf push ja add sub mov inc cli enter add and or add fimul inc pop movsb add pop or dec lea shrb and push push xor jnp jge (bad) add rol (bad) xlat cmp push xlat outsl fsubs push and (bad) or lcall inc mov xlat movl adc sub fstpt ds stos adc add jle fsubrl jecxz outsl fldenv push inc movq or add rcr sbb fldl cmc pandn out fiadd fldln2 pxor add loop xor push jae cmp bound iret jo lcall loope pop (bad) jne jne jecxz pop xor out jb out adc xchg in push pop insb call cmp in shr (bad) imul jmp cmp cmc add mov pusha mov sbb xchg push fs pxor jg cmp or scas movq fnstsw pusha xor push sbb aaa push aam add pop cmp fsubp sbb rcr mov test cmp jnp lock outsl lcall lock pminsw outsl mov fisttp cmp inc lds inc pop in fisubr jo jle loop addr16 mov sbb sbb add jmp add mov imul std in out incb dec cmp mov fadd push cmp mov fdiv aas mov repz (bad) cmpsb pop mov or fsubl ja push fdivrl fsub aesenc idivl bound inc nop adc stc cmp add (bad) mov sbb fmul or mov inc cmp pop ljmp pop pop (bad) jle jbe pop push cmp sti and inc aas jle add cmp adc arpl lahf cmp jmp fadd pop (bad) jle std lret cld sub movb add lds (bad) (bad) or add or bound and (bad) lds ss xchg fcoml fdiv pop out add out into (bad) mov fdivl faddl cmp fistpll fdivl notb mov add or sub cmp jl pushf pushf std cli cmp je insb fs sbb jne pushl inc inc movaps movaps movaps mov jecxz sub sub in std sub repnz inc inc movaps sub sub cmp sub sub les ret nop paddd mov mov add inc cs dec decl (bad) lea add incb push call dec and or mov dec lea dec mov mov mov mov cs or dec mov push fdivrl loope add sbbl je dec cmp lock mov call sar mov adc dec lea add stc inc cmpb sti (bad) incl dec sbb dec and cmp dec lea dec cmovne call (bad) stos add pusha call adc add mov rcl test sbb adc pop (bad) cmp stos xor push push pop add add inc leave inc cltd mov jns add enter and sbb lock sub xchg and out cmp dec rcll (bad) rorb pop rorb sub movaps stos mov sti rolb fsubrp add and mov and add aas push mov lock dec mov cmp icebp call aaa adc mov push sbb xor dec mov dec mov dec xor dec xor mov mov mov outsl sub add sar ja or pop add and dec add add lret pop outsl or inc lock sub pop xchg adc inc and sub leave movaps dec mov dec movd dec (bad) (bad) pushl mul dec add dec lea dec mov dec xor dec mov pop dec xor and (bad) lret leave out bound sarb enter add dec mov dec mov dec mul dec mov dec add dec lea dec mov adc mov aaa or stc dec xor cmp inc leave ss push pop in lahf sub mov fidivl das dec mov dec mov dec mul imul cs xor add mov mov dec mov dec xor xor rolb ret addr16 insl add ljmp sub push aam (bad) data16 dec mul push out dec xor imul (bad) jnp sub insl jne dec mov dec lea call mov call movzbl dec mov inc fdivrs dec mov dec mov data16 pop adc push roll sub dec dec cmc xlat dec mov mov sbb lea sti icebp ret out jb or sbb mov mov jg (bad) mov dec mov dec lea call dec clc (bad) decl call inc adc push inc xor push fwait push lea mov lea mov ds popa or test dec mov pop out scas mov push or mov clc ja sbb dec mov dec mov decb and push dec xor dec xor orl or mov push lock dec add fbld stc cmp sub or and dec add mov sub enter je jno gs les icebp pop adc and negl rorb xchg outsl (bad) sub rorb cmp cld inc dec mov out mov leave mov std mov rep dec mov inc or dec xor add jge pop rclb jmp cmp mov mov dec xor adc dec add jp or out jg or test dec mov dec negb clc or xchg lock mov call sahf xor ds loope dec xchg loopne (bad) loope incl push add cld aaa aam push dec cmp adc movzbl mov inc and insl dec mov insb mov pop push inc pop and sub dec jmp lahf fistp adc pusha inc adc mov scas addl add adcb sbb adc lcall inc shr add clc ljmp or str out popa inc mov xor xchg mov sbb cmpsb out outsb or add push out push out cmp mov sub pop (bad) sub adc popf (bad) std enter add test push fstps out adc sbb prefetchnta leave add inc mov out (bad) mov stc verr outsl inc out add inc pusha out lldt incb add jo or call push sbb out push inc and rorb test and in cmp add xor add (bad) nop add pop inc or mov and pushf xchg outsb or loopne fcomi fnstsw and sbb and (bad) mov and dec lea test or or dec lea dec mov dec adc rcrl adc add lea pop or mov add sbb add mov push clc (bad) mov jl (bad) call flds add pusha sub dec lea icebp call push mov outsb inc fstl push dec mov add pop push mov enter adc or inc or outsl aam mov add test movq es mov mov mov lds and lds or inc pop mov inc icebp mov push or cs dec mov dec mov sbb add mov icebp mov sub mov mov and (bad) and je mov cwtl jnp adc lcall mov or lea add adc cwtl mov stos mov inc pop inc loopne cltd (bad) gs and inc daa or pop aaa fcomps xchg inc enter pop inc shlb or ret call or loope mov adc cmp ss pop push and pop mov sub test adc and enter and inc dec and adc and fwait jne adc jbe mov adc ja lock mov inc movd cld jg or movd inc mov mov lret pshufd jo stos movzbl or decl and mov iret stos inc movd add scas jo movd jle roll jle sti decl std inc shr shr inc movzbl data16 out sub mov inc movzbl push icebp iret cmp inc xor addl sbb ret push cmpsb add mov mov xlat movzbl xchg jle int3 lds call push pop lock ss jnp out out cmp push inc pshufw adc lcall in push and inc mov inc xor movzbl or inc mov std lds xor mov inc lock fstpt (bad) (bad) roll movd in dec sub int xchg ja fistpll movl movzbl inc xor shr and shr push (bad) cld sub ljmp rolb mov mov sbb cs cmp lods sbb test xchg int3 jne enter repz loopne (bad) out pop jle andl xchg jo push pop gs mov roll inc xlat inc mov push adc jecxz mov inc push push or add jae cs outsb lahf ficomp sti dec push mov xor xor test pop xor lret jne sbb (bad) mov xchg shrb dec inc inc xor xor xor cld mov inc mov adc mov mov inc (bad) xchg stos or add jecxz scas out hlt insl cli jle popf xor jbe jle sbb mov cwtl into loopne (bad) jne (bad) jno inc mov or and and jmp callw fcoml pop out cwtl mov or sti fwait pop rorl mov loopne mov dec pop sbb jmp sbb je add mov lahf mov add repz mov loope cmpsb rol push or je aad cmp cmp je add lods sub mov sub ret inc xor adc pop add jmp adc inc mov in bound (bad) movzbl (bad) ljmp xorl in scas rorb pop roll loopne jle roll imul push test (bad) call add mov add pusha fsubp mov xchg sbbb xchg xchg out aaa xlat das dec or dec jo lahf mov jl inc cld pop in mov mov adc js rol xor (bad) jno enter stc xor push fistl dec xor jp pop mov or inc test incb roll movsb gs xchg stos movd lds push pop mov xor pop or lods fs push jne (bad) insb xchg adc adc rcrl mov shrl sarb jbe jle dec clc adc sbb or jns mov loopne pop enter adc sbb mov in cmp insb and jo pop shlb and rorb cmp scas aas or sbb sub rol adc xor rcrl (bad) iret xchg jbe lods popf aad and push dec jbe les inc dec and mov fadds stos outsb and movd pop punpckldq xor ret shll lds mov jo (bad) mov les jo dec mov ret mov ficompl js xor insl out mov jle mul adc adc shr cmp fstpl popf mov push sti xchg sbb fwait call rorb jo stos mov cmp xchg jbe fsubl or rcl js fcoms aaa jecxz lds aad in xor fistp bound mov clc insl jne cmpsl xchg adc dec and inc mov dec out jl add and inc mov jle add rcr leave push movsb iret jle aaa repz mov pop add clc (bad) ss mov jno fisttp out roll test jo loop xchg ret sub (bad) aaa int (bad) jo in aam fstl (bad) repnz loopne les repnz xor adc rclb loopne popa pop pop shrl sbb bound push and test scas xchg cli mov cmp fisubl pop add fwait push and add shrl mov or push adc and fild inc mov mov rolb and push call femms xor lds sub mov dec dec lcall not sbb popl inc xor xchg push arpl ljmp shrl fadds push (bad) call inc sbb xchg mov jo mov or ss push out push add cs jle (bad) cli inc mov out sub int mov out sub sbb inc xchg mov (bad) out inc xor adc add pop jge or (bad) aad push pop fnstsw popa xchg mov mov fcomip das jle cmp mov mov sti aas push inc mov inc xor outsb push ja out aam andl sbb mov pusha (bad) fmuls or inc ja lock sbb jo repnz inc inc sbbb inc ja shrb leave ljmp push call add inc jns movsb ss mov inc sbb adc ret inc fnstenv mov jo push inc mov sbb mov shr ja mov test in notl or leave movzbl pop cld stos sbb jle inc mov push push int3 jno std sbb testb mov sti jo movd add inc jo cpuid nop xchg add xchg sub ret in jle lods imul push and inc ljmp pop pop sub adc out xorb dec bound mov mov mov mov aad out fdivs aas lea sbb jle inc pshufw pushf and mov loop ss and push dec cli jle rcr add jae loopne mov cs stos jnp loopne je jo movd pushf andl ret sub push jno (bad) mov jle jne out push pop xor and nop es inc lock xor loopne or cli sub sub es and rcr loope test sbb dec jo cmp repnz xchg ja xor xorl stos xor fwait loop mov push adc mov iret outsl lods aaa inc cmpb stc dec inc mov sub mov arpl mov inc cwtl inc mov sbb and (bad) in ss cltd (bad) sbb (bad) sahf imul ljmp cld les mov das jg ds iret into test inc punpckldq dec shlb movzbl dec scas dec fmul sarl pop adc xlat jne mov int in loope jae sahf sub gs enter cli jl bound and fisubl inc out in jmp pushf jbe push mov orb xor push movsb adc and sub jo in jb dec stos stos dec sbb jns jle xor inc mov cmp sbb ret loopne ss jle xor (bad) or sub add cmp add in pop (bad) aam and ret lds mov push rcrl movzbl jle or movzbl push daa inc orl mov adc jbe xor out dec decb mov lods out lds cmpsb loop mov shr mov test sbb pop xchg push sub out adc lds jo pop xchg mov negl iret jle push fucomp loopne pop gs stos xchg jbe pop aas sub repz xchg orl orl (bad) adc test mov or bound call sbb ret sbb fs adc sti jge fisttpl mov pop xchg test push fwait push out ffree mov dec jo int mov lea jecxz jo imul data16 xchg js jge jecxz mov adc mov mov lods imul ja sbb test push dec and mov ret add dec mov jnp xor mov pushf ret test jo dec mov cmp cmp fcompl sahf in lods test icebp sahf fwait in add test pop or (bad) cmc or jne imul push xchg adc sbb or orb les and or inc out in pusha out or xchg mov addr16 xchg test mov mov mov jns and sahf mov xchg cmp cmp ret int outsb test sarb pusha (bad) loopne push xor inc popa outsl fs pop outsb inc rcr cmpsb pop push sahf (bad) fldlg2 xchg push xor loope cmpsl adc cli pop sub out out sbb popa ret mov out in jb adc loope mov dec test aaa mov mov hlt add mov lds iret xor (bad) in push aam mov mov fnsave xchg xor fdivp dec push scas inc pushf jg pop fcomps pop jecxz inc pop int3 in add inc pop (bad) ret sbb movsb cmp sub inc push hlt sbb fwait fwait mov es lods fwait push insb push ds scas roll jo popf jp lds es idivl xor pop negb loope je or jns data16 cltd popf mov lods hlt inc mov cmpsl jg outsl fs scas dec cmp fsubrs mov mov cmp test ficom data16 cmp faddp fmulp dec cmp bound outsl outsl sbbl aad inc add fbld cld mov inc inc jbe or pandn adc pop (bad) pop rolb fsubrs incb out nop sbb jmp xor mov orl jns ja lds arpl les pushf insl clc outsl mov inc jo adc xor mov out cwtl loope shr cs scas aaa mov mov movsb and mov cmp jp pop xor pop fcomps dec insb fsubrs ss sahf addr16 jns cmp clc adc sti ret lds push stos mov (bad) fistp dec inc fisttp (bad) or testl adc mov cmove cld movsl jne xchg mov hlt add inc mov jo sbb lods pop loopne iret std pushf lret test or xchg outsl jge sbb pop std push pop pop out rorb fcoml (bad) enter dec mov stos shrb pop dec mov imulb in inc repnz sbb inc mov inc pop xor fldcw in mov lret xor sub push cmp repz (bad) fadds inc mov (bad) cltd or fist inc punpckldq mov (bad) jb (bad) fiadd incl cli mov inc mov lock rclb faddl (bad) test inc gs mov inc dec outsl jae fildll jo push movzbl or stos push push xor mov ljmp xchg mov pop ljmp inc shr enter sbb sub push adc adc inc mov xor lock addr16 sub ljmp inc into sbb xor jae hlt push mov adc loope lods mov lahf sti lahf push movzbl inc mov mov (bad) dec or xor pop dec inc jb sub insb or enter std mov inc mov inc inc mov inc movzbl movzbl inc pop jo pop fldl cld inc mov add call sbb icebp adc inc xor inc mov inc or inc xor push mov push insb ret (bad) inc mov xchg add mov push sti mov movzbl scas (bad) adc (bad) out les pushf popa inc shr dec out adc push pop dec inc mov adc stos jo push inc xor iret jo out push es jle adc mov pushf lds mov subb cli stc mov scas stos clc sbb popf jo jg push mov inc mov fiaddl pushf (bad) mov sbb cmp cmp inc mov mov and push in roll mov lods sbb jg inc xor cmpsb pushf jnp or test inc add add sub sbb aaa les mov mov movzbl popa adc mov mov pop (bad) fbstp pop call mov aaa pop hlt jbe pushf sarl fstp loopne in adc inc repz movsb stc inc mov inc mov lds push jo xchg push lock loopne (bad) xor je cmp aas push mov pshufw inc mov into lock inc xor xor ret xor (bad) lock mov es js push xchg xchg cmp dec jb ss movzbl cwtl add movsb out ret mov clc mov icebp jnp,pn sub inc xor push out cltd or xchg or xchg sbb mov mov (bad) jne test mov adc shr aam rol mov pusha cli pop ret mov xchg mov sbb jno add ljmp (bad) dec hlt jle or das (bad) jmp movzbl cmp pop mov in cmp and jecxz or inc xor inc mov inc mov ret pop mov sub out in push inc mov lock loope and xchg bnd stos fcomi out push cld in inc xor (bad) sbb mov sbbb mov std movsl add pop mov xchg or orl sarb jle lods dec xor into stc or xor add xor ja movsl lock xor outsb push cmp mov xor mov cwtl outsl out jae jo adcl aam mov jnp (bad) mov cs enter lock mov jmp shr mov adc bound sbb (bad) pop ret xchg mov cld ja sbb fiadd fs add inc xor push insb (bad) xor movzbl insb decb mov inc xor mov popf aad mov popf imul jl mov xor lds mov and incl inc mov jo incl ret dec es sub and add test outsl mov and mov xor fsubp shlb in inc mov inc inc fsubl ja mov (bad) push xchg (bad) dec (bad) push adc adc out icebp enter mov lds ret jae jle mov sbb (bad) int movsb dec inc xor xor movsb mov adc fisub or pop aaa roll or mov inc mull jo mov rcrb or mov fcomps ja mov adc xchg pop lret (bad) popa incl inc mov add lods mov lods scas or mov and data16 cmp cmpsb xchg faddl cmpsl push out push das in push out mov mov inc mov sub inc punpckldq mov xor mov mov push aas mov mov inc and into loope in push ret and mov xor fisub mov xor adc repnz test out mov mov fsub jmp adc fildl mov popf pop outsb mov out adc inc mov push lcall bound idivl (bad) lret ret adc xor inc or or mov jo push mov inc xchg mov mov or pop jb fisubrl mov inc addr16 out mov cmp stos or and and in movzbl popa sbb lds sbb jge (bad) psubsb jo jle std les mov (bad) jns or or cs cmp mov ja jle shr jo fnop sbb xor imul pop outsl cld jle (bad) add and movd loope out loope push pusha rcrb jle inc mov inc arpl push inc dec pop and inc inc je je mov push iret xor adc mov push cld shrb mov fldl jbe sub adc ret aas mov call or add outsl loopne ret push cmp xchg jecxz mov mov sarl xlat adc inc sbb ljmp lock enter mov adc popa mov dec sbb jo aas pop es cmp lods adc inc mov inc int3 nop shrl adc and push mov mov inc push leave insb xchg lds sbb cltd jle inc mov mov xchg decb inc mov bswap mov inc repz into je mov jne cli jnp rolb es jo jbe mov sub rcr insb (bad) and add cmc jno call loope (bad) ljmp fdivs push mov imul push roll pop pushf ret adc (bad) xor loope or roll sahf pop adc int inc xor jp mov or out inc mov xchg sbb es and scas leave dec jbe push bound inc fdivs xchg lock push shrl add and faddl jae and sbb or ret pusha and and fadds in (bad) adc fucom sbb sbb cmc lods loopne jae sbb adc jne adc aad aaa shll inc or invd outsb inc mov xchg sbb dec (bad) (bad) and inc outsb mov aad mov xchg push fistpll jmp pop jecxz ret xor and shrb xor ret inc (bad) pop in add inc sub outsl pop jb jb rcll (bad) adc pop add stos mov inc loop js loope jnp loop inc or cmp cmpsl fsub jne loope arpl pushf push xchg add xchg cmp mov jecxz sbb pop push out inc dec jo and ja gs fldenv int3 loopne xor xor bound loope inc mov jo dec leave jb lcall outsb pusha das mov es movsb push and push xchg mov mov in (bad) cli inc aas push rol xchg imul push insl int3 inc mov imul pop lds (bad) push push add imul adc punpckldq xchg push sbb clc cmc mov loope fcmovbe loope imul push nop arpl and gs lcall push push and and ret push subl xor and adc mov and push das inc ja pop mov xor push pop adc adc adc mov pop or jno lds inc (bad) lock push rcrb insb (bad) int push mov test xor scas fidivrl mov ss sbb popa pop add ret nop jae push inc push inc ljmp aaa push ljmp aaa cmp jg movzbl and dec in iret pop pop sub xor out sbb (bad) out aaa jne jmp add jb (bad) das mov cmp out mov lock divb cmp cmove push mov inc pop and (bad) mov das punpcklwd ret sarb mov movzbl les ret mov jmp xor jge dec (bad) dec movsl sub in jno ja lret pop pop inc pxor pusha or push call dec cmp mov movsl mov sbb scas sub outsl call (bad) shrb sub or sub push aas mov movzbl inc fistp rclb or mov aas (bad) sti xchg xor shr inc mov popf add movsb pop sarl adc dec mov lea push ja pusha inc mov stos movzbl loope cmp scas rcll shrb rolb xchg stos pop adc mov stos jecxz mov ret push mov or (bad) roll adc lds inc or sbb out cli lcall cmpsb (bad) jo inc xchg mov jle (bad) sbb mov movsb sub addr16 pop call sub ja lcall popf pop (bad) mov xchg add add sbb sub push cmpsw jle xor sti int3 dec xchg insb dec shrb outsl adc jle xlat sbb fiadd call in cs call stos js int sbb inc movq and call adc je jae inc je mov jg or nop (bad) lock xor sub out dec call inc dec outsb js pusha push and sub ja cmp data16 nop jne loop test ja jo push dec jo xlat jle mov inc sbb adc data16 inc inc fstp and in stos xor xor pop jle sbb test mov cmp dec shrb iret inc mov (bad) mov inc inc inc ljmp mov mov les jo incl scas test (bad) xor stos movzbl jo,pn popf push or ret push mov pushf dec aam sbb stos add in lea aad je inc xchg in inc jle in jae push pop push out lock sti and shrl fisttp (bad) call mov (bad) pop jle sub mov mov fsubrs in ffree jnp sbb pop std sbb or jmp pop and lock (bad) lcall mov pop pushf orl push test jl cmpsb pushf pushf fwait pop jnp push adc rsm lcall jmp mov or adc or xor inc dec inc mov jg je ret lret mov shl and jns jecxz jno push lret jmp jo add inc jecxz xlat mov inc mov aam or sarb gs or data16 out dec enter cmp add pop cmp mov sub and and in mov inc call push xor addr16 mov mov call fimul out jo pop outsl je dec js push dec mov xor pop mov mov andb inc cli ljmp mov mov sti (bad) call fdivrl xchg xchg div mov or mov insl cmp mov out xor dec jp cmp inc mov pushf mov dec adc fs sbb (bad) xor in (bad) movzbl adc mov sbb popl sub (bad) out push ffree mov push movsb cmpl (bad) in insb push out ljmp call fsubs sbb inc xchg aam adc pop xchg and fsubp ficom jae insb xor inc mov push negl or or pop popf sbb mov sub or adc push dec sub jae cmp ss inc mov sub adc adc pop cli mov mov shrl push mov lea xchg push dec outsb arpl lret adc movzbl and scas pushf popa adc shll or andl or lods jo push loopne rdpmc jecxz fisttpll and or loopne pop outsb test bound or sub call leave pop mov xorl mov xor xchg (bad) lret (bad) xor sbb xor movzbl or mov or pop mov mov xor xchg lods or js sbb mov inc push or jo lds jno dec inc mov ja sbb xor adc adc sub popa rorb inc (bad) fsubl out inc dec mov cld jb inc cs scas movzbl aas cltd or cmp pop inc push inc enter mov enter sbb test cwtl roll mov xchg cmc push inc cmp loopne jg push (bad) aam insb mov out loop inc xchg loopne mov pop popf xchg ret aad ret add gs mov ret shrl sub jnp jmp inc mov rclb mov mov mov inc mov mov shr divb sub pop inc mov sub shlb rol out inc mov gs adc cmp clc int3 sbb push mov sub sbb jns mov jne dec mov out inc pop lock pushf sbb in fiadd mov dec and inc punpckldq pop pusha jp subl jg out leave xor adc dec push push or fmuls dec pusha (bad) fldenv mov push mov fwait lret loopne xor lcall or test inc mov inc std lret movl jae jo shrl fnstsw ror lds leave shr mov jne rclb inc xor mov adc cmp xchg lret or int3 or lea fdivrs cwtl sarl jb pushf loope jmp sub jbe loope loope jl stc jl xchg lret mov sub xchg mov and bound inc adc std and addr16 mov movzbl out or inc xor cmp adc cmp inc (bad) xchg lcall bound test pop iret imul lret ret adc lods pop xchg cwtl enter adc into movzbl xlat scas mov push mov fmulp (bad) shl (bad) fistpl fisub mov xlat fyl2x push jae out cmp outsb lods or (bad) cmp fsub int in push js adc or mov fadds mov daa or (bad) je sub cli inc cltd mov push mull push clc insl inc int3 lds or inc and push pusha adc clc punpckldq int3 shr shlb pushf lock sub push push add inc xchg mov rolb xchg jmp jo and pop add gs popf xor cmc sarb inc (bad) das mov and mov jmp pop xchg mov jge inc (bad) outsl ja mov aas aas mov addb leave adc or mov bound mov xchg imul jae pop pusha mov inc cmpsb test sti das xlat fs call cwtl mov xor sbb and loope xchg punpckldq pusha lret pxor (bad) xchg fs xchg mov push push ss jg shlb xchg jg dec sub inc movaps inc fwait int (bad) movaps add mov rcrb loopne inc lds inc lock cmp cmpb mov movsb mov push inc int inc lock and sub adc test inc data16 loopne sub pusha bound inc push sub and inc xchg dec add out add sub ret data16 (bad) pop jns addps jbe pushf adc push std test xchg pushf movsb aaa in add inc sahf mov xor add or mov add js popl and js or add cltd lret rclb cmp inc fimul jl shlb or xchg imul dec out xor lds dec xor sub cmp call sub dec sub or xor inc orb sbb pop mov adcb xchg insb xchg subl cmova sub incl mov jl mov cmp sbb out adc aas mov (bad) lock add xor inc scas or inc mov cmp (bad) or push outsl jnp addb movq movq movq (bad) xor daa inc xor clc sbb pop sub rcll ficoml mov popa add test cs js mov xor pop mov roll pop daa adc (bad) add sbb ja idivl movsb xchg mov dec mov adc and push push inc mov and clc sub inc pop and dec push push inc sub sbb pop (bad) or cmpsb fldenv clc iret dec call jne ds dec mov dec out cld or pop cmp sahf test fsubrl add mov out push xlat jo push pop in jle into nop jmp jp push outsb adc pop push push aam lahf jo jle ja mov movsb out xor mov out jle xor add jle adc aad jle cmp cmp aas shll jle fbstp nop xchg jle xchg test das xchg stos push out and adc ret cmc call adc ret mov push outsl inc in call and pop out xchg int inc call call test lret or jl and andb cwtl enter scas mov mov inc xor pop jl xchg (bad) xchg sbb sbb cs test dec pop mov aad mov dec inc xor test fstpl ret inc (bad) push aaa add mov inc mov jp inc shrl shrb jmp or adc iret adc adc call sbb and mov addr16 or sbb mov xor xlat outsb sub mov les mov rcrl inc xlat cmp and cmpsl outsb iret jne bound dec mov xchg push ds or add insb nop inc and add cmc call test add mov int mov fcoms xchg addw jmp sbb js xorb enter scas sbb addr16 sahf aas ret loope addr16 xchg rcll es mov inc and mov cmpb aam inc push (bad) ljmp push call xor aaa mov (bad) insl jo rolb adc fsubrs fcoml in dec test inc daa mov mov ret std lds adc cmp mov inc loope xchg in fildl adc jo punpckldq insb cld sbb cmp call xchg lea mov add cmp sbb mov inc icebp mov sbb loopne (bad) add (bad) outsb add stc sub sbb cmp inc push aam xchg mov mov lods nop in fisub movzbl adc loopne cmp cmp fcomp movzbl das jge mov cmp sbb test or (bad) flds fsubl xchg cmpsl xchg xor hlt aas mov icebp inc mov inc xor sbb xor (bad) push fs insl xorb push out fsubrl test mov or roll pop fistpl adc mov iret jle ret out (bad) mov repnz mov inc xor jg jae dec in repnz mov lea loopne ret jnp xor push (bad) pop (bad) testb sbb mov inc mov mov into pop push adc inc xor arpl loope lods cs xor mov mov rclb rorl cmp mov gs pop mov inc jo (bad) adc mov and push jecxz xor sbb xchg xor jne fcmove jle test push dec adc pop in push aam ja sbb add lea xchg inc (bad) or fnstsw dec outsl and add bound or rorb pshufw loopne mov xlat mov jg stos ss jo decl in mov mull ficoml int3 jo jnp inc mov cmpsb jecxz add and das idiv mov cmc pshufw cmp jno sbb xor test lahf hlt xor lcall mov sbb (bad) mov divl daa frstor inc mov and or jle (bad) jo (bad) mov jo mov pop lsl cmpsb ljmp ds test jo jns jne jp sub fwait roll xor jle frstor cltd sahf xchg push sbb negl dec fild sbb inc pshufw sub out cmp and call js mov in call bsf fbstp mov xchg or xchg fildl xlat push adc mov jmp enter loop add push in in adc adc push sbb sbbl or es jb movzbl xchg adc movsb cwtl sbb add xor ret adc and lock push movd imull jmp loop mov mov inc mov out fldl dec xchg lods outsb mov lds dec inc mov sbb xor lds mov mov lret aad fimul inc xchg mov (bad) cli dec mov dec xor pop pushf enter out jae inc loope leave insb adc push and adc inc popa pusha into add orl mov out jmp popf subl or jle mov in (bad) adc xchg clc notb int3 lock out loop mov jmp xchg inc mov sbb pop bound ss push jo pop ret cmp lods mov je or js in mov cmp and push jg lock daa ret loopne or lock cmp sbb inc (bad) incb fadd pop (bad) jb inc pxor pop ret lds or xchg jle dec and pop push add push mov ljmp iret xlat sub cmc fidiv mov test dec out lock ficompl (bad) jge (bad) leave pop or sub jmp fisub mov mov xor jbe test pop das and aam inc xchg inc cmp les sbb rcrb test xor out push pop lret movmskps sbb sbb inc (bad) pushf loope xor inc pxor sbb push ja jo or lock (bad) push cmpsb ljmp clc ljmp jae xchg inc jbe loope bound mov mov jo int sub pop repz sub dec inc ss das popa inc popf inc cmp pop xchg sub inc shrb push adc jmp outsb mov jb pushf and (bad) in push sub cmp cmp adc lret pop xor insb jmp jmp out (bad) and pop push (bad) icebp jp inc pop fs mov lock out outsb sbb jnp add outsb jg mov jae inc insb popa mov fidivr or pop arpl aas dec pushf jl out pop ret pop ret fisttpll inc push scas dec pop test ss xchg xchg scas aas sbb dec fcoms push push xor xchg add push or in punpckldq push adc fadds test or clc and pshufw icebp bnd jae insb lods cmp mov adc push ret xchg fsubp int xor fdivs test inc (bad) cwtl mov inc jnp jnp xorb ss faddp or xor inc jae inc pusha mov mov dec cmp and icebp add inc in xchg fsubp bound jp and adc xchg and (bad) aam push clc sub jne fsub add out sbb lock repnz loop jmp test mov mov bound xchg rcrb rolb test dec ror rorb push (bad) jne sub cmpl ss ret inc ss mov sbbl sub (bad) clc pop dec pop push ret sbb pop dec inc mov int3 adc push push push and add fldcw es pop ret jae adc mov lcall insl movsl out (bad) mov test push mov mov mov pop xor xchg lods xlat dec mov jmp int stos adc fisubr mov inc xchg ss adc mov cwtl cwtl mov push insl (bad) les movd ret cmp imul jmp loope popa cltd ss or fwait addr16 aas push lods push xchg cmpsb inc adc mov sub adc or sub add push cmp add lods dec cmp xorl test dec jns add inc pusha add sti nop jl mov xlat mov cmp mov aaa ret mov sbb lcall cli ficomp outsb inc lds in sarl xor das push xlat xchg scas fisttpl sbb imull pop sarl xor roll xor and sbb js push pop mov and sub (bad) aam movsb xchg adc cmpsl in jns sarb fidivrl leave les add fbstp lret rep adc pop mov loop inc xchg inc sbb sbb inc jle lcall aaa ficomp add popf cmp dec inc (bad) mov jle out jo idivl xchg mov rclb outsl in cli mov shr push xchg out in popa cmp inc add call mov out xchg cmp push ret xchg test enter xchg iret insl jb inc mov outsl icebp insb out cmc neg movsb or fidivl mov push xorb out out push shr es scas add es mov in and jno jno jae out inc cltd movzbl or movzbl and pop ficom js inc test or and test lock fs mov add cmc ret inc movzbl add sub sub (bad) jg stos test dec rorb out ljmp rcll xchg adc push sub shlb xor lret or pop inc dec push inc movd and push jo out push ret arpl add jle sub fnstcw ret pop outsl pushf loope pop aam adcl or idivl adc adc inc ss das (bad) push les fstps pop cli pop (bad) pop movsb fdivrl jl dec xor fmuls push lcallw pusha scas sub push les fcomps aad punpckldq push popa or icebp pop inc xor les repnz pshufw dec mov mov enter and rcl (bad) push (bad) outsl out imul xor in jo fdivrs adc cwtl lock ss ss adc add ret sbb in push outsl or pop ret inc sbb adc lea lea mov push jae insb xchg xchg cmpsl xor outsb punpckldq dec dec iret xor xchg test ret inc dec fs xchg popa xchg cld xchg mov test call push test xchg mov imulb insb xchg xchg loopne jae and cmp addl inc (bad) sub inc jo ss mov jnp sahf or and mov mull mov ret into lds clc mov (bad) scas sub stos mov in xor lcall adc push ret insb fidivl mov push xchg fildll ljmp mov mov or repnz push jo lds jp push jg xchg sub xchg sbb stc jo fstps mov inc ds xchg mov test mov or or xor es jo add or outsl add lret or adc test jae and inc push sub push movsb mov jnp test lods sbb ret mov insb and out (bad) pop shll divl push mov fsubrs and or cmp xor out aam pop inc sbb mov ret in in mov pop shl inc push dec fcomps (bad) sahf ss ss dec fadds mov pop xor lret ss lods out inc adc pop ret cltd xchg mov jae dec sub fldenv std movsb ret fisttpl sbb (bad) jmp xor sbb data16 add cmp dec cltd pop sbb dec lret bound cmp arpl inc lods push ss (bad) pxor movsb fdivl mov xor mov ja push shll (bad) pop (bad) (bad) xor sub popf jmp adc jb jmp data16 push sbb and push popa inc mov and inc xchg cmpsl push into nop xchg fist inc das fstl xchg push in dec fcmovbe frstor inc hlt sbb (bad) out adc (bad) out sbb jp pand fsubl jmp (bad) aad mov iret mov or (bad) jo out adc mov lret insb clc pop inc mov jmp fmull push incb out inc scas or pop mov dec add sbb inc push xor fidiv (bad) aas shr insb fdivs cmp mov fs pushf cmc out cmp cld testb pop cwtl mov movsb loopne fadds sbb pop xchg jae pop fstp inc mov scas dec cmpsl push test xor out push sarl pop rolb mov inc mov or test in sbb test mov inc xor mov mov inc adc inc shll cmpsb jmp aaa outsb mov aam jecxz shr roll and (bad) xlat and lcall psubsw xchg lret (bad) call aad inc mov out dec mov mov lods popa mov pusha jg inc mov leave sbb movb aad ds sahf or (bad) push outsl (bad) int mov sbb jecxz inc add ret mov jle mov xor mov std inc (bad) out push (bad) xor lret movzbl push jne out fwait imul push (bad) sbb mov xchg daa jb cmp dec std push rcrb cltd sbbb inc xor inc dec mov mov adc inc xor std inc mov push mov jae mov pop inc ss adc ljmp and movzbl inc cli outsl xor fldl fld (bad) mov mov inc shr mov inc mov movzbl je sahf jmp mov adc jp inc inc pshufw pushf lret (bad) jbe inc sti mov jle mov add sbb push test iret sbb gs inc xor jmp inc mov adc jo (bad) inc mov test (bad) cs sahf inc dec xor inc mov adc cwtl loop call int3 xor mov mov test lods pop outsb push or call xchg out mov jo mov mov add xchg add cmp lcall scas (bad) lock mov mov inc ret jmp inc adc sub add dec cmpsb test jle mov mov or push mov adc punpckldq jge mull inc insb icebp (bad) and in enter out cmc stos lock xor mov adc addb or ror mov xor jecxz mov mov fildll add or mov pop sahf lock pushf arpl mov pop dec pop jo ljmp (bad) mov inc xor inc mov xor inc dec adc sbb xor xor (bad) xchg icebp paddb xor cmpsb and test jg mov xor push sub ret (bad) xchg xchg mov push (bad) jg daa jp lods or incb sub fwait sub (bad) in xor sbb or mov add cmp and loope addr16 inc mov jle mov cmp mov and lods sbb push mov cmpsl jo sbb or shrl mov or inc aas pop lret test inc mov (bad) cmc or outsb addl dec gs gs xor ret jo adc pop sub rcrb iret movzbl ret cld stos movzbl push push bound jo stos rolb ret loope cmp das adc mov out inc xor stc stos inc xor enter mov jne mov xchg inc inc mov xor sbb leave sub dec fiadd lret out rcrb movzbl sbb mov mov adc lds jbe adc jne sbb adc mov inc xor jne pop mov inc mov (bad) xchg inc inc add dec out jmp or pop jb mov mov xchg xchg cmp or lcall add rolb ret popl sbb or dec cmpl sti gs icebp inc mov sub cltd fcmovnb aam cmp pusha leave sbb mov in mov cmp add jno adc xchg inc inc push shrb push in jae mov push fstpl xor rol xchg sbb mov pop or adc add inc mov sbb push sbb hlt mov push jo popf xor mov pop test mov mov sub clc inc mov (bad) rclb into add jle loopne add pusha andps pop or fmuls stos mov bound push or pusha and xchg out in leave aad stos xchg jg rcrl out fisub jle push mov nop rorl mov inc jo sbb addr16 adc negl sbb mov pop sub rcrl mov push push or (bad) cmpl push sti fs mov xchg mov push cmp in incl pusha add inc sub jecxz mov insl jo sub out test xchg out divb pop call outsl cmp loope jecxz outsb add fnop xchg loope les icebp inc es push inc mov jno jge mov pop inc mov inc pop loope mov test out add fs sub inc loope loope imul add or inc movsl mov out xor fs test outsb out push lea add out sub cmp icebp and dec jae adc test push and into mov ret nop or or jo xor fcoms pusha inc popa ljmp dec rorb add je xor adc fcoms in pop cwtl xchg mov xorl pusha or shl sahf ret mov adc xor call mov cmp xor movzbl adc and push jmp jo adc iret aam enter lods cmp or rorb (bad) mov (bad) xor rcll push popl sbb pop pop xchg jnp (bad) xor lcall pusha ljmp jle popa dec inc xchg inc test insb in popl arpl lock xor mov mov data16 jge add pop test out sar xor push sbb sub fimul mov outsb negl fimul movzbl inc mov or gs shrl shr punpckhwd (bad) sbb jnp add aaa inc dec es pushf or lret inc mov movsb sarl frstor js lds mov rorb or ss rclb lahf bound fstpl shll pop fisubr jp ret mov cli jo cmp or arpl test jno jne cmpsl cwtl loope icebp jp fs ret lock dec push stos lds cmp push xor xor and (bad) adc loope sbb cwtl jge jo or push (bad) in adc mov adc fld arpl sahf cmp jnp pop jmp outsb cltd xchg pop movsb test inc lods rcl into cmp inc call jecxz (bad) fsubl dec mov movzbl sbb add adc and into mov mov es mov out out and or sub shl sarb rcrb mov outsl cs mov rcrl in add aaa mov ljmp in ret out pusha mov adc pop dec pop aaa (bad) jnp loopne iret pop rorl or mov es and jns or pop aaa or sbb sub mov xlat adc sub jbe push outsb pushf test sub ss mov loope mov cmp loop pop into popa push subb dec stos fmull cs cmp int3 rorl cltd cwtl jmp loopne pop jne adc test xlat mov sub xor (bad) std xor mov shr push ljmp out push sbb pop fsubrl rorl sbb sub push push push int3 dec jo xor and add inc push push pop sbb pop ss xor mov in xor inc mov inc xor ret sarb sub inc sbb mov repnz pop and test punpckldq shlb (bad) ljmp out aas mov jne push ljmp scas stc out jmp cmpsl push popf jb cltd mov inc lret mov inc mov jo and mov inc push call inc pop xlat aad and adc add scas mov inc jo xchg jae sbb sub xchg mov mov leave pushf je add psadbw enter or cmp inc and push (bad) js ja inc mov incb mov cs xchg dec mov dec fadd xchg mov movzbl daa gs stos mov fldenv and jle pop jge in testb movq (bad) mov sbb cmp loopne push adc nop (bad) sarl orb push jnp adc in loopne orl test adc inc scas call (bad) nop lret es and mov fs lock dec and dec inc iret movsl sub pushf and adc sub pusha out rcrl leave pop das fsts sbb jo sub sub sub jnp call loop xor or in call xlat push xlat ss decl out dec mov outsl fidivrl (bad) scas jle push push iret stos inc xchg xor mov jo icebp mov dec pop inc lahf add pshufw push xor jle xor lahf jle or sub call mov jle cmp loopne insb daa sub call mov stos jl cmp dec sti pop std loopne int ds dec sub shlb lock xor clc fstl or stos popa mul rorb addl mov pop inc movd sub adc std add pop lods mov sbb mov stos cmp and daa or pusha addl mov aad lods fwait xor and pop add sbb adc jne sbb jp mov add jnp and mov pop (bad) les mov or push jb push leave sbb or aas pop sub aam mov repz adc sub aaa into (bad) jae dec stos fwait stc push mov bound push mov popf andl mov pop add jecxz cmp les lcall (bad) sar mov addr16 pop sbb sub xor subl push mov cs mov das decb out mov call jg bound mov faddp add aas stos in jne or lcall out jnp sahf pop and sbb ficompl pop lahf jp rcl ret mov lods push xor add sbb fucomp adc dec mov rolb push call push mov clc enter sbb popl sarl cwtl fnsave addr16 pop rcrl insl inc es call cwtl fmuls push xor mov jbe lcall fcoml xor jo mov inc push or in push je addr16 cmp push cmpsb test out bound dec lcall pop mov or add xor push popf add jge sbb pusha xchg dec loopne ja dec rcr je sub mov pusha mov push sub fnstenv sbb add leave push pop and mov das dec (bad) sub pop (bad) repnz ja aam xchg sbb or cmp sub push xchg add add popa pop add cmp or push sarl mov sub addr16 or adc rclb adc adc or xor out je adc push inc or ret int jne inc mov xor arpl xor mov xor movzbl (bad) mov enter (bad) dec cmp ss xchg jb sti loope mov movzbl xor and jb mov rcrb std adcl cmc (bad) sbbl clc jo scas movsb push push fildl sarl adc mov dec lret lock dec push jg ret push xor lcall inc mov inc jb leave sbb add fstpl pop clc inc rolb out push into xlat add mov sbb out lahf inc inc or movzbl cmp jmp movzbl sbb mov inc in pop ljmp mov inc mov adc or repz sub push scas dec add ljmp enter inc xor adc add outsl lahf dec loopne mov inc ljmp dec push push sub bound aad notl ret or dec sub or and add xchg inc ficom mov xor add and inc or xchg insb cld int frstor pop fs add and dec cmp enter daa add test add sub stc sub data16 addb sub or mov mov push rcrb stc rcrb inc stc dec add pop pop popf adc mov enter es mov adcb jg or xchg pop push sbb sbb lock ds lea test push mov adc mov outsl or pop pop inc or mov les dec and mov dec lea icebp (bad) rorb add lea call inc loope test addb add das xlat in pop sbbb lret pop loopne push mov xlat xchg in call sbb or pop add adc add test das test icebp adcl das sub mov outsl stos andl outsl loop fsubrl stos outsl pop jo jnp push adc xor (bad) jnp jl mov or sbbl push dec or or out pop jg xor ljmp jnp pusha push pusha (bad) sbb mov mov or out jp adc inc mov addr16 xor ljmp rcrl leave jbe cli push jbe and insl xchg inc call and in cmp push dec cmp or mov jmp cli leave add inc es leave les and push stc popf (bad) and lea push jl loope out jo inc outsl add and add rolb jb dec fs mov fcoml outsl jo adc pop loope pushf and xchg mov jle jle ret popf jle lods cmp cmp add xchg adc mov xor xchg mov mov stos mov sbb nop js pop imul push out pshufw xor add inc push movsl lret jns lahf lods mov inc (bad) psraw add push out aaa push movsl cmp dec sub scas push daa insb ficoml adc loop jnp mov dec stos xor stos mov xchg lret sti ret inc adc xchg sbb lods int push xchg ljmp popa lret cmp ret mov (bad) loopne xor insl rorl movsb call bound cmpl fidivr xor mov xchg ret call jno cmp and pop or and dec cmp xchg push (bad) int mov adc inc cs xor nop rorb shlb cmp pop or mov outsb les mov jg inc ja jmp push outsb jbe jbe cmpsl clc inc punpckldq into or test push mov dec dec push pop mov pusha pop inc inc in stos jae dec mov jo shr les push enter inc stos mov cmc mov mov mov sti daa and and sbb cmp mov cmp and int addr16 add ficoml insb lret push pop push push mov xchg out rcll outsl neg addr16 push and pop aaa inc or bound aaa rcl (bad) rclb loope cmp inc sbb push popf mov in mov fnsave or hlt or lahf add (bad) xor fistl pop mov sub jp leave push inc xchg bound dec inc pxor dec cwtl lock push dec pop dec mov pop mov rcrl fnstenv inc jo jg mov jecxz push pop or rorb xor or and xor (bad) xor cmp mov call pop pusha cs or sbb pop out outsl dec jle sbb push xorl and mov xor jo flds imul sbb fs inc lcall faddl mov and inc xchg shrl pop push push xchg sbb and xor bound insb (bad) arpl ds js jno inc mov repz (bad) decl lahf jecxz push mov lock inc test mov cmp xor jnp pop les (bad) xchg push ficomp mov xor cwtl mov pop mov arpl call sarb inc xorb mov or adc pop add jo lret cwtl mov xor mov je adc loope cmp aad xchg dec mov xchg pop inc xchg shl and mov sbb dec push mov into pusha add cmp (bad) ja and ljmp sbb dec inc in mov ss bnd enter mov jo xor or (bad) outsl mov movzbl adc inc mov (bad) lret inc mov mov ret js adc movzbl push hlt mov cmp jmp add inc mov push stc das repz cltd pushf and mov inc xchg and pop gs mov sub ret mov (bad) into xlat outsb lret push jo dec ret push sbb (bad) cmp movzbl inc xor cs movsb rcrl sub pushf adc lcall dec jno pusha jo aas mov push adc xor fsubrl mov out mov push dec dec xor cmp dec pop push mov sahf xor mov out inc xor xor lods into adc addb cmpsl leave mov inc pop aad lock ficompl xchg pop sub test mov loope jo pop arpl cmp sub movzbl outsl mov xchg mov je pusha movzbl rolb jno add mov inc adc inc pop adc mov aaa inc popa jo adc jo mov jo inc inc adc xchg mov repz cs lock lahf rolb repnz xor sub or xor xchg jo mov test dec push mov inc dec add or lret loopne sub int3 jno imulb adc insb inc add lock inc push or inc mov mov and cmpsl es subl mov sub jb mov mov pop das icebp es sub xchg xchg xchg cmp call adc jb das call jmp hlt and ljmp sbb ret mov add jmp xor outsl in movd adc ljmp mov rcll decl or out inc xor movd adc jecxz lret mov (bad) or stos xor or cmp popf or int jb movsb loopne mov inc mov mov mov pop loopne push mov or jae pusha push jo sbbl ljmp cmp add pushw repz mov pop adc test jmp shrl pop push test pop or push mov dec test in add in push or lock lock inc dec push mov xor xor dec push pop add jo add enter loope dec mov mov les cwtl adc push jp or mov rol rorl dec je es add dec mov dec andl mov sub add mov shr rcll bound adc ds xchg cmpsb and sbb pop ja (bad) cmp cmp negl (bad) fistpl rcll inc xchg jo mov es test inc xchg sbb mov mov mov xchg jo add mov into adc and pop addr16 test mov adc inc xor insb push jge fcmovnu out iret fldt call push mov ret mov push js add xlat inc roll xchg rclb (bad) push mov and pusha mov and outsb cmp jo push hlt xchg out xlat sub subb movsl dec adc mov mov inc mov pusha rolb stos subl mov jnp xor mov inc imul fsubs adc pop sti rorb fdiv sbbl (bad) lock mov mov mov inc and stos cmp test sbb mov and js and fs push sbb out test call inc mov adc icebp mov pop pop dec outsl mov jo pop pop (bad) (bad) xlat jns push les insb aad (bad) sahf loope mov subl mov sbb pop pusha and fcompl popa sbb inc sbb jge loop lcall enter lock popf jo lds ret daa or in and mov fdivrs inc int3 pusha dec sahf and enter les mov mov daa bound out movsb lea add scas and sbb sbb mov btr insb ret out fild shl inc add ds push flds cltd sbb idivb or adc pop aaa mov pop (bad) pop and push push xchg out popf movl inc and inc mov sub mov ret mov push sbb inc inc mov inc mov sbb inc mov or out push sbb adc call mov cmp rcl sbb add jns outsb mov ds lds dec mov jg test rolb insb sub lds into push scas shll push imul add cmp call mov xchg cltd mov xor andl push mov (bad) xor mov or andl mov inc mov xlat out inc push and mov or mov fst (bad) and fbld in movzbl lret mov movzbl or inc dec das rorl add out cmpsb adc jo loope std adc or xchg sub jo sti mov inc scas in jo add cmpsb sbb jo and cwtl ljmp and or pop shl enter lcall pop cmc xchg mov push popa nop rcll cmp pop push pop lret sub sub xlat pop sbb or add add scas aas push inc inc pop sbb mov mov and mov rcr mov push sbbb sub lret sbb and adc lahf xor out mov inc inc mov outsl jp xchg movzbl sahf add int3 (bad) fs mov sbb adc clc nop fidivrl mov mov pop out xchg lret pop adc ja mov out xchg cmp jge xchg stos rorb test xchg fimull std pop loopne iret xor xor (bad) ficoml fadd add adc or adc adc push push decl push daa sbb aaa mov lds cli inc outsb inc aam shll in ret or xchg inc mov pop jo pop es mov mov repz pusha and fild xor mov jb adc ja xor adc cmp mov call call mov in (bad) or sbb in cs mov fmuls outsb jae negl rolb stc mov test mov dec stos and adc push add orb or xchg dec scas sub rolb mov ret outsb dec outsb sbb mov and lods xlat out rolb hlt mov loope push mov and and xor cmp mov rorl inc int3 js lock movzbl inc movzbl xor mov lods dec inc mov adc clc xchg inc mov inc lods mov mov lds into xor es adc and or scas inc mov inc loopne push xor and adc cmc lods rcrl repz cmp inc jo inc test push addl jmp mov insl cmp sub xor inc mov xchg fmull cmp fimul xchg mov xor mov or inc in push mov ret ljmp or mov push add bound sbb andl xor pop and pusha leave ljmp dec enter aad xchg or andnps mov cmc aaa jo rcrl cmp bound mov xchg and shrl and mov sub sub cmpsb mov add xchg cmp cmc xchg jnp pushf call dec dec mov ja xor lahf cmp (bad) jmp test or add and pshufw sub jge loope leave mov push aam (bad) inc mov mov rorw or fcoms je stos icebp push addr16 or fs int3 and imul cs and jle sahf pushf or cmpl fsubs dec jle outsl and test sbb or mov movsb out movl jo loop cmp sbb pop psrlw adc or cmp je mov inc inc imul rcl sub inc loopne xchg shll pop add cwtl jecxz test cmovno cmp negb lock add int dec aam movsb jb sar fmul mov pop leave push sub fldcw and movsb pop sarl lahf jb cmpb and test addl lret loope mov sub lret sub or add out sbb mov testb loopne mov insb or out (bad) xchg (bad) or es je jne jb divl sub xor push push xchg (bad) sahf and or mov out jp xchg insl mov mov into sahf mov into cmp push addl out push imul xchg popa sub (bad) jb iret mov loope into rclb int3 cmpsb xchg cmp ror sub adc movzbl mov jle neg iret popa stc jmp jmp mov test rcrl out fadds push orb adc fdivrl mov test das ret inc mov addr16 sbb add in push popa mov fsubrl (bad) inc lcall push fcoms lret or pop adc add shlb jae mov xchg pushf pop or inc into popa adc push fmull add (bad) loopne rorb xorl inc mov pop ret jnp inc pop xor mov out lock push inc (bad) dec imul into push add test (bad) push shrb push push jle sbb shr sub mov mov mov cmp shr jg (bad) cmpsl popa xchg mov movzbl or mov clc loop jnp mov ss mov adc xor popf or mov mov movzbl adc dec sub mov cmp sbb mov push sbbb bound jbe bound lds xor ja jns cmp movsb jecxz lock nop imul rorl sbb (bad) in adc loope scas roll adc or rorl out sarb out popf pop xor rcrb and out movzbl or movzbl lcall or dec jle xchg movzbl sbb bswap pop pusha cwtl jo mov dec mov int mov adc jne cmp movl adc or ret or (bad) les push mov sahf xchg mov mov (bad) pushf jnp xchg add jbe out rcr or sbb outsb sbb mov jp enter mov cmp jle outsl mov mov pop imul mov xchg push push jo and inc xor or xchg insl lods push out add aaa in shll (bad) inc push test inc in and dec pusha adc cwtl and mov push sbb and cs push dec pop notl jge push mov adc push inc lock pop push jo dec inc and aas aas imul into lock imul test jg mov dec aam je pop loope sbb xchg adc movd ret or push (bad) fimull adc fisubr or sarw fcoms pop inc js das mov js aaa inc push dec fwait test mov push or aas push xchg sarb and xchg add xchg lret cwtl or fwait push and jo sbb loop insb push xor and mov or js push mov adc lea fs and push ss add insb aad test jae xor mov mov ss jnp in sub data16 and inc ss daa and jnp lea sbb jl ljmp psrld or js addr16 cmovb inc xor inc inc punpckldq mov insb out and pxor insb push inc ljmp out sbb pop add lock loop mov xor inc icebp negb push fdivr notb notb outsb jg jp mov insb fidivr pop dec mov mov push ss ss outsb (bad) jnp or pop push sahf loope push mov int3 fmulp pop dec pop cwtl pop lds and dec xchg add mov lcall icebp cld and dec sub jg push sub cs push jge xor inc lret fcompl inc (bad) xor scas inc jae or xor in aam push adc fs xor jo dec xchg add cltd pushf jmp jo adc insb cwtl jnp out mov sarb sbb scas pop mov xchg fadd inc jne cmp mov mov xorl or fcmovnbe rol cmp out inc and jo es bound mov jo sbb sbb ja adc (bad) enter in cltd inc in out lahf mov jae mov mov pxor sub xor leave stos imul mov jno bound loope inc sbb jae ja outsb xchg xor jb js mov pop les jae push or pop jnp pop add and add push sbb into mov arpl rdmsr inc orl movsb push popl jne push sub es fsubrl call dec or in adc cmp xlat adc insb push cmp fwait insb in mov sbb push mov in inc inc jle das push hlt cmp inc push les xor and cmp jno,pn jb test leave fsubrp lea inc cmpsb sbb xor xor add mov and (bad) adc adc xor cltd mov daa dec adc xchg adc in cli outsl ja inc cmp scas shrb addl hlt and jnp push (bad) mov cmp and ret inc ret inc je xor mov xor mov mov int aam mov inc push or sbb and out inc outsb jmp roll std lret add mov cltd jb cltd and cmpsb sbb adc xor loope in adc add sbb xchg mov or roll inc mov mov jl iret sub xor adc lret mov in gs aam add aam cmp push mov pop dec pop hlt dec adc lds mov pop sub cmp xchg sbb outsl mov push cmp (bad) sbb add mov add aam xchg (bad) popf adc in fisub decl mov sbb add mov cld inc daa rorb into and fldt ljmp mov push inc pop inc leave ljmp xchg movsl cmp jbe stos mov in mov sbb jo decl add imul xchg sti cmpsb inc mov fwait imul jmp inc lret sti mov daa in xchg or and sbb loop push inc cmc dec das mov movzbl mov mov roll popf test sahf xlat pop mov pushf mov adc jae aaa xor pop push push or add fdivrs pop lods jecxz movzbl test pop xor rcrl add add jmp push xchg mov out jge adc cmp jle jo stos add jo (bad) ljmp or test cmp daa ds dec cmp mov mov jbe sbb mov ret push jge (bad) fidivrl sbb shrl pop xor or fstps push cmp dec push mov add mov add sub sti push cmp mov xchg sbb mov or inc mov push push adcb test roll loope fs jge cmp (bad) fcoms test scas sbb pshufw jle adc mov mov or dec sar push sbb in nop xchg mov sub into loopne push call or punpckldq fcom iret pusha xor pop fxch or pop inc jo mov inc into jo fmull push adc in adc push pop mov dec xor mov jo pop xor lock xchg fistpll and jmp enter and push (bad) enter cmp insb pop mov push dec (bad) mov jne jo mov outsl loope lret cmp xchg int3 or push lds ljmp dec scas (bad) jnp or and ja mov sbb sbb xor cmp into dec sub jnp mov sbb inc (bad) mov (bad) les mov inc cmp inc sub mov and push sbb call dec ret jbe xchg pop push push ljmp push push adc sbb int3 sbb sbb insb icebp daa mov cmp adc dec sbb sub jno add insl adc (bad) mov adc inc gs mov mov xor leave jmp sbb lahf (bad) addr16 (bad) es push mov (bad) jo cli pop jg cmp mov lret out gs addr16 rorb outsb in xor and jnp mov inc and or push (bad) inc rolb ds xchg add ret iret or or scas inc cmp cmp sub arpl mov mov sbb xadd sbb cmp cwtl sbbb jle add clc add (bad) sub add (bad) leave lods mov mov (bad) mov sahf cmp xor push inc mov sbb mov mov dec lret mov inc test ja inc shl (bad) cltd inc test bswap cmp xor mov cmpsl cmc cmp es cmp or enter xor sbb push xor push cmp call sub arpl xor xlat test test shl cmpsb or mov dec imul cmpsb sbb lock push iret sbb dec push es in xchg push lcall sbb imul mov sarb pop inc inc mov sub inc mov nop and lods scas fwait scas sbb out enter jl hlt jg out mov mov push call cmc loopne jnp,pn fstpt (bad) inc mov ss cmp sbb ja push (bad) sbb jae and pushf jae lock push mov and mov sub and icebp inc inc xchg mov or je leave or or xchg adc jecxz cwtl lret mov xchg mov hlt dec cmp push movsl cmp dec mov lods fisubl enter inc pop push ffreep icebp movdqa pop enter ret mov movsl jne popl cmp or mov cmpsb lret (bad) je xchg mov inc pop cs add pushf lcall cs andl xor xchg jmp rcrl in and sub addr16 daa mov cmp and push dec jo push add data16 jg testb shrl push xchg pop js rolb pop xchg addb (bad) hlt jo xor push andl xor inc xchg cmp push sbb jg add dec xchg inc fisttpll and push mov jge or pop cmpsb sbb mov fwait and cli jae test les insl lock mov mov push inc mov gs sarb xchg jmp mov ljmp pop (bad) fcoms (bad) add jo (bad) adc into pop pop cmpsb shr sbb push push ljmp jl scas sbb (bad) xchg imul sub mov adc mov (bad) into inc adc dec popf inc xorb xlat inc inc test in sbb dec and cmpsb lock jae inc (bad) xor dec mov outsb inc or xchg lret xchg ret add adc or int xor push (bad) push popa pop mov test mov js inc mov mov mov mov cmp xchg xchg mov js xor mov sub mull cmpsb aas pop mov inc pop and scas mov movsl pusha mov loopne nop arpl ja mov inc movzbl push dec xor sbb push mov in dec xchg xchg adcl xchg rcll les add sbb loopnew (bad) loope and or mov dec pop cmp roll mov and xchg testl mov sbb repz icebp outsl rclb xchg mov ret adc ja insl out iret and adc or test sub out xchg jae xor iret or pop jo jno movzbl sub cmp ret or shlb inc les shr fmull xchg mov adc data16 ljmp cmp imul cmp clc sbb mov sub xor adc push dec xor cmp fwait xor sbb mov xchg hlt cwtl mov mov out fwait lcall sbb adc pusha (bad) sbb push stos iret stos rcl popa mov stos sbb inc fstl pop es mov mov pop xchg adc jo push dec popa cli fmuls (bad) clc pop adc mov (bad) pop adc or mov xchg rcll lcall add inc inc push add pusha dec push inc cmp fucom inc out mov fisubrl xor rorb xor shll (bad) ljmp inc and (bad) or pop sbb fimul into cmp rcll dec dec inc cmp rcrl mov orl cmp enter pop push dec sbb lret add dec sbb je pop sbb xchg (bad) jne jbe sbb add xchg adc (bad) bound inc mov ret xchg and xchg jne insb decl or mov enter xlat imul aas xor fs cmpsl add cmp inc mov out inc pop cmp jmp and push push mov (bad) lcall (bad) add xchg dec jo add adc adc mov rcl and add sbb inc ja (bad) sti dec push and inc daa push lcall (bad) xor push (bad) decl and je stc cs lds loopne mov and stos rorl or outsl cmpsl sbb mov and fild jo jne mov outsl inc movswl loop sub inc movaps movaps xchg loopne (bad) cmpsb movaps les cmpb inc add lds test pusha push add fisttpll add adc add cmp adc dec and dec mov mov jg and cmp adc clc (bad) pushl push xor hlt cmp add dec sbb dec cmp xchg dec mov add and inc pop and push hlt sti pop daa xor movq mov mov call mov mov inc and dec add subl aad pop sarb pushf mov inc mov incl or movzbl adc ja ss jle jle or inc push inc push cmc movsb mov aam ja into inc or movzbl out pop sbb test cmp lea push lds (bad) outsb rol arpl mov and into roll sbb ja ljmp sbb sub sbb dec jb aas push adcl xor lea xchg or lds push std aaa out lret adc inc xor (bad) mov add insb test fadds mov sub sbb xor cli nop mov pop cmp fs (bad) out ljmp pop inc movaps dec das mov jb mov dec push cmc sub dec mov rorl dec lcall cmovl and xor dec xor dec fwait sub sub dec pop or test mov pop les ret inc dec lea cli arpl mov call stc push mov cli fwait or dec mov dec mov out sub fldl dec add jecxz stos xchg loope inc add sub dec mov dec add ficom mov call shll dec mov pushf dec mov call lahf fisttpll mov mov je pop call (bad) mov dec lea lods dec mov call dec loop call mov or dec xor sbb cmp mov dec xor jg add mov mov mov dec xor jnp out test adc add pop add aaa mov pop add fwait test lock dec adc loope or inc or dec xor test aas sbb mov hlt dec es rorl and and icebp dec es movd out test lret add incl sub icebp sub jle add mov icebp inc xor mov inc xor icebp movzbl jmp jmp inc mov inc shr insb and sub bound outsb add xor cmp push and mov (bad) in sub adc movzbl cs cmp ja inc mov mov out sti inc mov push jmp push imul mov (bad) fnsave movzbl dec mov inc xor ljmp push dec add insb and inc scas xor cmovl pushf sub daa add shll (bad) movq mov adc popa push (bad) test inc pop (bad) adc pusha and xchg pop sbb sub pop mov add add or rcrl inc mov and add sbb repz outsb fcoms (bad) jb and scas mov pop roll xchg (bad) fmuls sub dec mov arpl dec mov cmp dec mul adc jmp inc or dec inc out inc test dec xor xor iret std inc ljmp inc cmp inc test ljmp dec add dec xor enter jne (bad) pop mov pop out icebp or or (bad) add mov xor mov aaa dec add decl or scas (bad) push ret adc pusha dec and ljmp loopne and inc call sbb pop adcl and dec mov (bad) icebp lds dec (bad) leave or push sbb jnp jmp or mov and (bad) call and adc add pop test or or inc ja call movsb pop sub push mov lods adc sub or xor rclb sub mov add cs cmpsl pusha and xchg jle cwtl or cmpsb add or push sbb dec lea xchg cmp clc sub shll dec add add lock push lea rolb (bad) jno mov xor xor test inc incl stos cmpl add insl add mov pop mov fwait mov out inc xor inc dec jle xchg cmp dec adc dec push dec fwait roll jnp push mov jo stos shlb outsl mov adc inc xchg mov dec xor cmp xor push push pop ss enter das adc test inc mov cs pxor sbb in sbb or inc je shr aaa pop xchg and (bad) inc mov inc fcmovb out dec cs mov jle rsm sub dec inc (bad) inc pop je add xor mul and or (bad) fistp out scas xchg out jnp pop jg (bad) or xor push pop (bad) (bad) imull dec ret sub xlat mov and out add mov ss mov inc xor addr16 rclb (bad) icebp mov cli push mov inc scas loopne les jo and std int frstor movsb xchg adc adc pop jbe mov sbb sbb popa xor sbb jno adc pop adc add fwait stos sbb jo mov and and xchg inc sbb sarb negb out rorl pop stos (bad) inc add ret add aad jmp decl mov inc mov and aaa icebp add jle and shr inc pop lds cmp and jmp pop rolb and add outsl sub lock sbb inc movzbl jnp cmp jle sarl mov xchg les divb sbb pop push xorb dec pop add jo pop adc ja inc movzbl and aam and inc cmp subl cld outsb mov push add ret or xor sub sbb jg insl in mov xchg movzbl inc xor ljmp adc push aam push lret popa xor loopne bound insb mov sub lock inc mov movzbl loope adc ds testl push bound pop inc xor roll lock fsubrs jecxz test pop (bad) aad sub addr16 mov push adc in out fistl dec dec and rorl mov pop push mov mov aas mov sbb mov bound sub loopne outsl (bad) jbe arpl dec shl add or xchg add sbb dec or lret lret lds in inc xor mov ja sbb sbb mov jb or xchg mov sub push loop (bad) adc push and pop aam pop xor inc sbb xchg movsl call cmp xchg mov daa pop or aad jnp pop mov (bad) jns mov out mov arpl bound inc mov xor xchg mov push aam pop out push adc outsl mov jo call and cmp dec inc out out movsb xchg aad or dec push mov roll or test push (bad) mov or lods aam test loope sbb mov xchg pop movsb push nop mov pop push adc push out xchg pop sbb (bad) incl pop arpl mov lds jo out jno popf jg (bad) imul mov jecxz sbb test inc mov jnp aas push xorb push loope mov cmp mov aam roll insl cmp xor and lret sbb mov xchg xor enter inc mov xchg xchg or inc mov adc or sbb or movd adc and push std and inc sub and push popa lds lcall xchg sarb fcomps (bad) rorl movsb call mov xchg lods out jne xor roll pop jae pop xchg xor push jl (bad) pop lret cs add out popf or or cmp stos (bad) popa mov cmp cs and cmp out (bad) mov out xchg add push cmc jecxz bound cmpsl shr inc xor cmp jb pop rcll inc aaa lods rcrl clc loop or xchg inc iret dec mov dec mov or (bad) adc bound jno std pushf jecxz les lcall sbb push gs test and sahf daa iret ret pop cli mov jle inc mov cli push add add xchg addl push js nop and sti pop out cmpsl movzbl inc push mov inc mov les popa adc sbb inc dec xor addl inc mov xchg imull cmc adc xlat adc jo dec (bad) repz inc int3 mov inc adc cmp push inc in jl mov sbb loop insb jbe fwait (bad) lret dec (bad) fnsave call sbb cmp dec out and add sti and and cmc stos mov cmp xor jae loop push fisttpll call pop sub call mov roll adc hlt mov inc mov add ret fmuls push fisubrl dec pop fdivrl pop add cmp incb sub mov adc mov and movzbl sbb sbb insb or insl and mov movzbl add mov mov cwtl mov jo mov dec rorb mov sub adc int3 or fadd push pop ret jo rcll (bad) or xor pop xorl and subps pop xchg sbb addb xor mov mov pop cmpsb test pop jl clc and pop and dec enter enter pop push inc add jmp or in or push sub pop movzbl (bad) jbe inc mov inc xor inc mov inc mov cmp mov dec mov loope cmp movzbl push push out xor arpl xor dec lea or mov (bad) xor in insb mov inc pop stos jmp mov mov icebp pusha or inc inc (bad) movsl mov test pop lret pushf jnp loop pop adc push pushf cmp into lods mov xor loopne or pop test cmp out movsb or pop push adc lcall call jo stos sub scas lret jo add adc int idivb jb or (bad) jle sub cmp scas jmp pop push push call sbb inc in push (bad) xchg outsl pushf repz mov call jle mov xchg sub data16 mov xchg fnstenv out (bad) sub or cs test addl xor pop or or inc inc leave dec mulb call fisub xor nop add iret add das call call fild xor cmp call add jo mov lret sbb cmp jne fmulp mov pushf xor add (bad) enter pop negl imul fnstsw inc mov cltd (bad) jmp dec cmp fs test int3 push addr16 adc out sbb dec cmp jo bound test add sbb xchg rorl mov dec jno mov push loopne xchg sbb push and mov inc (bad) push push imul orb jb pop sbb adc roll xor sbb lahf inc and xchg adc lea mov ret mov sarb sub outsl xchg outsl push subb outsl push push rolb or test sub xchg lds out iret cltd fdivl test and out or (bad) or sub pop and lock mov and rorl setae add sub out imul and xor insb push leave es sub add or fwait nop rolb sub outsl cmpb xchg insb mov cwtl xorl add xor push dec or and roll and int ret je ret fldl2e pop sub or test jb out stc ds push add dec xchg test xchg lds add add (bad) dec flds test xor and andl pusha add or mov fwait xor xchg and jo clc adc data16 push ds test adc sub leave xchg ds adc imulb xor pop sub pop mov pop sub adcl xor movsl test call fidiv hlt and adc ds ret mov sbb xchg sub adc jbe mov xchg and dec inc ds pop adc and sub fsubs sub in flds xor aaa or sbb sub lods and ds and bound dec pusha mov add cmp sub and inc shrb sub cmp in push jge movsb cmpb xor sub jns xchg cmp xchg and test adc aaa dec (bad) mov mov mov popa enter and icebp mov jecxz aam add push cmpb (bad) sub inc movd inc mov push flds js lds pop jle mov xor movsl data16 cmpsb mov xor jb mov mov das pop cmp arpl pop jge out adc add pop hlt mov fist sbb adc andl xor cmpsl mov scas add pop ret mov movzbl cmp xor mov mov mov mov scas dec cs push xchg push (bad) lods mov clc movzbl push scas dec mov sti lcall cmp loope pushf loope decl mov jmp or or cmc lret pop fdivp inc mov mov dec loope movzbl in fisub psrlw js loopne jae adc mov push fldcw (bad) mov lock js scas jnp pop fnstenv xchg pop (bad) or add mov lds mov (bad) and push mov sbb inc adc or das outsb inc out rcl adc xchg adc pushf pop imul pop inc rcrb pushf incl add cmpsb in or sar mov xchg cmp xchg mov dec mov sbb jo outsl adc xchg mov mov (bad) fimull inc shlb jo fsubrs sbb jbe aas push ret out pusha jo movsl shrl movzbl inc xchg inc movd (bad) jne idivb inc in jg in xor iret (bad) xlat mov int iret or out movsb pop pop jae mov mov or loop pusha dec movzbl sbb mov mov test inc mov ss xchg dec add (bad) sets loope scas dec mov (bad) xor cmp xor mov (bad) bound loop or xorl xor mov cmp test roll push pop xchg xchg arpl pcmpeqb outsl lret mov fsub add dec rorb mov mov int mov mov cltd dec pop jns decl mov ret faddl pop leave icebp jmp inc mov rclb aad xor jne shr clc xchg adc popf loope mov mov addr16 jno fmull jo mov xchg in hlt and adc dec out add ret loope jl mov inc mov push adc rol jnp sbb and sub jnp xor cmp std or xor add loope inc pop ja ffree in or sbb pop push inc fcoms outsl in inc pextrw scas push dec jo sbb adc lret sub in inc ss rclb stc jae mov or mov pop inc mov es lods decb mov popa push pop sub pop shrb jle cli dec movzbl sub xor mov mov gs scas mov sbb xchg mov popf mov jo sbb scas fistpll call movzbl add loop repz and das push shr inc mov sti sbb dec jb in mov push test sbb insb jecxz into push mov push xchg movsl in dec add add cmp sub sbb mov xchg pop mov and inc movd test sbb (bad) adc or jo mov xlat cmpsl aaa outsb bound pushf (bad) mov mov xchg cmpsl (bad) jo xor pop cmpsb out enter push rorl scas dec dec fstpt icebp add or push scas imul xor inc punpckldq push xor mov test test push in andl sbb sub shll scas into sbb cmp cmp (bad) mov mov ucomiss subl pusha xor adc (bad) ss iret aad rcr fnstsw (bad) out aam test adc jge and push inc movd xor pop add jle or and xor cmp or repnz xor lods mov ret dec push mov xor pop sbb adc pop push pop cmp lret (bad) into pop xorb out push mov sub and mov push fnop and aaa fsubrs pop or jo addl aam ror mov push out dec stos loop adc fistpl or sub andb cmpsb xchg cmp push jecxz sbb mov fisub bound xlat lock push int push mov add sub in mov inc shlb jmp xor ljmp inc js test mov bound sbb orb out sbb xchg ret js inc inc push lock jne jp cmp cmp xchg cli and inc movq movaps add xor pop pusha inc movaps scas mov mov ja pop jge sub adc add mov aas adc sub xchg lds or sub data16 inc mov cld adc jo lcall in or mov sbb xchg enter imul or enter std mov and push popa cmp push enter and and loope xchg mov call xchg or aas loope outsl scas movsb ret jne pushf scas test pop sbb and repz shl call icebp or xor scas or jo rolb and test and pop push mov lret rcl and rorl xchg mov inc call nop or push or scas rorl hlt inc push scas sub dec mov dec mov dec call sbb bound mov decl inc fs dec add pop pop ret nop (bad) (bad) decl lea cmp ja add cmp dec lea cmovne neg std decl rorb or dec test dec mov jmp xor cmp aas dec jmp andl fnstsw push jmp nop add mov and cmp cmp add pop add int3 dec mov mov cmpsb dec mov sarl lds test pop push (bad) out mov add cmpsb seta les ret movsbl test je adc sti adc fisttpl mov pop ret movd cld lcall gs mov call dec mov dec mov dec or jo test cmp inc xor mov call dec cmp dec mov jbe dec mov dec sub sti (bad) in pop call dec cmp je and xchg pop inc mov add (bad) xor call je,pn or outsl in sbb adc (bad) call adc cmp fmuls call out popf pushf jge call push sub adc mov jmp outsb les push into popf mov adc sub (bad) in bound pop inc cmc das adc ds adc adc pop testl sub outsl loop xor add icebp mov call (bad) call gs jb test (bad) (bad) jmp jle gs (bad) jo aaa cmpb jne push dec rolb fisttp lahf je add push mov fisubrl mov mov decl call dec test (bad) je cmp aaa imul jecxz cmp adc cmp mov mov je and lea adc add lock adc loope ljmp pop and lea ss jmp adc adc mov jg sti sbb mov push pop pop cmp add nop std (bad) mov nop or add popf cmp and and push das aas mov decl mov dec movl mov in inc mov xor lret test jne rolb incl jae das dec lea movzwl add ficom sub leave pop je rolb add call loopne adc adc sbb (bad) jne dec mov add or dec movsl cld add dec fwait mov lcall sub cmp mov xor sarb mov mov mov dec mov jbe into dec sub call iret mov pop dec pop pop ret adc inc shlb mov iret jo and pop jne sbb std out push orl add fildl jo lods nop xchg aas mov das and into mov dec mov je rorl mov (bad) sbb call push lea mov jg sbb push adc mov lea dec mov push rol aas pop icebp call mov mov and pop dec jge xchg mov inc outsl ret jmp ds sbb test adc aam dec sub adc dec cmp je mov jg lea sub sti (bad) (bad) (bad) cmp dec loopne mov inc and test je inc test je inc cmpl ja xor lock sub dec add jmp xchg std orl adc mov mov sete int (bad) pushl mov adc call xor xor and and nopl add add cmpsb sar xlat jno add ss pop lock ffree pop inc fs pop ret jae sub xchg jbe jge outsl adc jno jmp loopne ljmp pop pcmpgtb dec sahf inc push xor dec sahf sbb add xchg cmp cld in adc add adc add stc push jae hlt dec jg pmulhuw jns xchg aam les jns gs movsb sti es test jne fidivr psubsb add jne nopl or pop dec mov ret ud2 das (bad) cmp rcll xchg mov jmp (bad) leave dec and call mov jnp add jge ja into call pop add adc xchg jecxz repnz je (bad) mov ret popf jnp cmpsl and dec mov mov call outsl jo dec lea inc std jl fisttpll xor xchg lea shlb cmove aas xchg scas pushl popa jg dec mov call fmuls inc fmuls dec add pop adc xchg fmuls sbb adcl out dec mov sbb iret call mov mov adc leave mov mov fnstsw or pop dec or dec jno cmp int3 je fadd scas sub and je imul and push dec mov lock ret mov outsl dec mov add stc emms or add and push in jg or inc push cmpsb push lock stc sub (bad) out insl je jle cmp (bad) adc lahf mov ljmp loop and (bad) and (bad) outsb add imull xor mov push adc (bad) out mov or sbb inc cmc into jne ret cmp push push jg cmp or push jle in xchg cmp insb insb lock stos push movups data16 adc add lcall cmp xchg sub mov pop test stc and ja arpl and mov stc and scas or xchg mov jne mov jb jle cmp lea les push insb in cmp jae les stc inc adc cmp jne mov jne popa je mov add adc mov mov test dec cmc out cmp or xchg jne mull jg stc sbb je (bad) jbe arpl cmp jl fstpt test sbb jae,pt jmp inc (bad) adc jle out aaa cmp jl xor mov in inc xor inc fidivrl popl je (bad) fstl adc cmp bound mov and mov cmp or inc in inc xor test (bad) jle lcall ret dec addr16 or fs decb pop or cmp sbb jecxz mov pop or fisttp popf cmp sarb stc adc popf sbb mov mov lahf adc mov loopne xor andl (bad) mov stc sbb sbb lcall (bad) lahf daa dec je stc jl rorb std lea sub cmp cmp cmpsb and adc test mov inc aaa add mov cli cmp jae xor out mov xor lock flds sbb scas lea fwait or inc jbe outsb sbb and fsubs and das sbb pop in nop pop mov fwait outsl mov ss inc das jmp andl out je jmp add repz jne cmp adc sbb outsb sbb imul cmovle pop addr16 xor cmp sbb push faddl or jae jbe or and (bad) pop das cmp js xchg in xchg and xchg mov enter das sub aas xchg icebp leave and out or in insb enter emms das rcrb insb dec xchg stos (bad) or invd or fsts dec sbb out dec rorb fsts jge xor or mov cs nop icebp or xchg hlt das or xchg movsb outsl out mov loope out fs fcoml inc or jg or bound mov stc out sahf or or popf out inc dec mov inc or pop jb pop iret daa adc nop out lcall bound out cmpxchg8b movsb aaa out stos cmc (bad) (bad) fucomip (bad) cs test out bound ret inc out mov inc out sahf or fwait test nop jo out bound lock nop call pop sub iret out fstl out shrb push add out test push dec out lods outsl and addl pop mov inc out movsb ja (bad) xor mov or mov cld (bad) fild fwait nop fadds inc push or sub pop out fnop xor or frstor jne out je out adc sub (bad) out mov ds mov pusha adc cmp mov jmp push fmull mov sub dec aaa sbb sti lods jl cmp loope out into inc adc popa adc sub sbb daa loope arpl xor pushf xor dec bound scas jmp fisttpll aad jne clc cmp lahf nop cwtl dec and lahf loope les lahf cs popf inc in push cmp mov xchg loope mov loope out test pop sbb lahf pop pop out rol inc (bad) lahf and pusha subps cwtl pop sbb int3 xor addr16 or nop or pop cmpsb outsl ret ret jo jg lahf cltd pop data16 call (bad) out sbb fmull cmp ja test mov loopne jnp sub or movsl out sub out sbb lahf push int3 or xchg add rsqrtps pop cwtl or push jnp test dec incl popa pop push fsts push add aas loope push outsl insb enter pop adc popa enter push mov jne das sbb xor sbbl and mov out aas mov mov jg pop lahf inc ss inc lahf sti aas mov nop xor aas dec prefetch or scas or and fsts scas ss ss mov test push pop xor dec mov dec mov mov das add mov dec (bad) mov lret inc idiv jg or push inc push call dec lea dec mov sub mov dec adcl and lea push push pop cmp pop pop jae push pop adc (bad) mov and icebp call add ja je dec mov mov mov inc sub dec loope daa dec cmova dec mov cmp jg (bad) pushl inc xor test je inc mov inc mov inc jb ret (bad) (bad) (bad) decl inc movzwl inc mov dec add test je inc movzbl inc mov dec lea out out incl movb dec mov call sbb or xorl add fistl dec mov inc mov inc xor inc and lods cmp add enter (bad) in dec lea incl pop cld dec add jmp dec add or lock mov dec ror xor inc cld jmp incl jg mov cmpl inc mov jne movzwl mov add pop jne inc mov mov lret jmp popf mov (bad) aas aaa leave andl aas out cmpl jne inc movzwl mov je add adc and shr jge cmp mov sub out (bad) jmp out pop add add dec dec push jo mov movzwl mov scas add sti pop jne inc mov and xlat sbb (bad) repnz adc fsubr xor ja addr16 jmp nopl pop jmp mov add scas pop jno sbbl sti add mov scas call add pop aas dec btc xor or je inc add or mov pop or aad add aas roll and push mov clc mov inc adc jns dec mov and dec cmp je (bad) xlat mov cwtl mov mov dec mov inc and std adc fistp mov dec mov and cmp std dec inc or testb dec mov dec mov dec mov das (bad) mov mov dec mov add jne dec sub dec mov call push loopne and dec cmp jne aaa fsubr mov into pop inc pop mov sub icebp jmp lcall (bad) ja mov out pandn jle fwait jmp inc pop test sti mov mov or test mov jne test je inc or pop daa inc repnz push cli call inc dec movl jnp out (bad) mov scas test je lea dec shl dec idiv dec decl rorb rorb jne ret xor ret mov mov push int add (bad) popf sub inc pop inc xlat pop decl je dec mov pop call lahf ljmp jbe dec mov lret jmp mov sbb icebp push xor (bad) mov sbb dec pop dec add mov adc nop dec (bad) loopne xor dec add loopne xchg outsl mov dec les xchg pop sti jg dec test je cmp je sub mov cmp jbe add out decl or call mov cmp arpl jge push jb dec mov jnp sbb dec (bad) cmp (bad) xchg push aaa cltd add jg dec (bad) popa (bad) fimul sarb test je mov gs jne cmp je add mov and pusha loopne cmp ss or mov mov dec lea dec arpl dec add jmp mov pop add pop pop mov jle out int3 (bad) mov mov jo dec inc (bad) jmp movl sub (bad) or cmp xor jmp aas setae cltd sbb shrd nop mov add mov shr adcl mov inc push das jmp add xchg xor jmp out dec decl push insl and out pop push sub and in inc pop ljmp mov aad (bad) push and fildll out fild popl lea sbb js sub rcr mov dec mov or lods (bad) je dec jae mov mov inc aam mov mov xor call jmp clc jne push inc sub add jmp add lea dec cmp je out (bad) jae testb jne jmp aas or mov sbb dec lea clc scas jnp fld1 cmpsb or xor clc pop inc add sub dec sub dec mov push mov add repz stos lods adc add scas or je (bad) pop bswap push das mov sahf pop in loopne pop movl mov mov sti or daa dec cmp je (bad) dec pop push mov sti jmp cmp jno (bad) pop dec lea or xchg (bad) xadd dec call jmp add add outsl flds out sbb lcall pop add and shrl mov loopnew adc test jne test jne jno push cmpsl mov push popf jmp sbb mov sbb sbb dec pop add or loopne cmp xor lods unpckhps push (bad) addr16 out push inc mov lahf mov jl xor inc add add and lea je mov add sbb inc and mov inc (bad) mov and inc out lock push (bad) sbb inc add inc jl pusha movl rol cmc outsl out mov call add or incl cmp loop cmp loopne or cmp add nop push push or sbb cmp ljmp pop push je test jle les inc mov add adc pop jmp scas lahf sub mov dec push fdivs lret jne (bad) incb outsb lcall sbb (bad) je mov stc ret mov rorb dec cmp scas cli out dec lea (bad) or (bad) adc in test rclb lea out mov inc mov mov cmpsl add sahf outsl mov (bad) bswap and rcl mov iret sbb sbb mov mov neg xchg popa inc cmpl je movsb lods jae enter inc push out mov sbb test jne sub inc mov in sbb inc add dec jo mov jo pop mov jae push repnz out pop inc fwait add jo lahf sub gs (bad) out (bad) mov call call call sub daa sbb fucomip adc scas add hlt add nop addr16 insl sbb ljmp xor jg in inc mov (bad) cli cmpsb or int insb xchg decb jns clc cmpsb push and xchg dec mov mov add add add ja xchg mov call cmp outsb jne int3 call jg mov clc jb (bad) jg pusha pusha loop decl in je or decl lea inc mov shl add add jmp sbb and sbb dec nop rorb cmpsb jg adc sbb push mov push imul add jmp nop dec mov dec dec jmp call add leave fsin push add nop test lock mov loope pop call dec sub dec mov cmovb xchg aaa (bad) sbb movl clc (bad) aaa sbb xchg pop call nop dec or lock add sbb les push mov inc add xchg pop and xchg arpl (bad) mov dec lea dec shl dec lea jmp fisttp jge mov push sub pop inc dec dec add dec cmp je xchg out int dec lea mov ret or aas mov inc xor jmp dec mov jmp outsl clc adc adc push xchg inc out outsl jbe cmpsl pushf (bad) mov push cld test jle xor sub js dec lea sub cltd dec mov jg (bad) cmp stc pushl dec xor call bound mov or sbb dec mov cmp dec test (bad) or mov mov fidivrl xlat sbbl push mov (bad) das or and lahf cld in lret bound call push sub add adc lods out add inc cmp test mov dec movl sbb jnp lea sti sub sbb inc dec out inc adc pop scas xor mov in outsb push addr16 lea sbb cmp lods push mov lea inc scas (bad) jo mov (bad) mov mov aam ss or cwtl test or jbe cmp aas or or inc mov call and out mov out or mov jp incl ret (bad) int add lea ss lea fld1 sub (bad) incl mov mov sub and jne loopne push icebp incl rorl dec mov add nop xchg test xchg mov scas adc cmp adc in mov add sbb mov jb call inc adc xadd call push int3 sub or aas fcompl xor mov call scas inc std (bad) jo inc lea or loope shll insl add sub xor (bad) (bad) fnstsw add int3 jle add dec arpl sub dec lea lahf push adc dec add dec lea iret dec add sti jmp mov mov jbe xor mov jmp or and cld out pop lea ja sti imul aas mov (bad) out mov add nop or clc add mov dec mov sbb fisttpll sbb test lea xor jmp ja or rorb cmp je add imul cmp jne dec and call add lds add test jne or outsb ljmp and pop testl shrb mov xor (bad) loop pop insl dec mov pop xor fmull sbb cmp repnz jg mov xor or dec lea inc jg clc (bad) dec mov cmp jbe fbld add incb jne dec lea (bad) jmp outsb test mov mov adc fs test hlt inc inc mov pop cmp and clc mov mov aas pop push pop adc outsl xor add pop pop dec jmp nop jmp inc fadd adc mov mov add jmp jmp inc sub dec lea inc test inc mov adc add xchg cmp add int cmp jle inc cmp push or arpl jne fistl push adc mov sti mov xchg add sti sti loopne movl jbe (bad) adc nop pop add outsb insb push ljmp adc jl xchg add in xchg fucomi push inc mov (bad) mov std (bad) decl leave jmp jb dec mov shlb pop nopl push xor inc or or jae jg mov and cmpl je scas or (bad) push add push jo jne jmp (bad) fisttp cmp in cmp je dec sub icebp aas ss add xchg rcrb cmpsb mov xchg pop xor dec lea adc lret inc mov dec cmpl fnstsw mov cmovne inc pop push aaa cld cli popa popf je jmp dec lea sub mov bound andl sub roll lahf lds mov cmp fucomip inc dec mov inc xor cmp dec mov out mov decl dec cmove cmpl ja push arpl dec fcomip sti clc add jmp dec sub pop popa sub dec test dec mov std fucomp clc jne adc test mov cmpsb faddl cltd cmp lea jle loop flds (bad) daa cwtl cmpsl sbb lock or out call andl std adc xchg sub inc adc add dec add jmp (bad) pop push pusha stos mov adc inc ja mov inc mov rorb test or mov inc incl jecxz mov movsb mov jb jne pop cld xchg nop iret lahf mov loopne xchg jg lret shld mov je imul mov and repnz clc incb add adc leave add imull mov add jmp sbb lret lcall rcrl ja (bad) std fdiv (bad) (bad) jmp repz insl mov adc jg fisttp cmp je push psubusb test add insb xor add in outsb lods lea shrl div add jmp adc pop and ja jg stc movsl in nop dec mov ret adc fidivrl bound xorl or or mov mov add jae call jg jo fnstenv mov cmpl push js mov sbb movsl or jne loopne pop dec push addr16 jno in mov call jo jae aam pop xchg lea push sarb lds xor sub hlt idivb jmp mov pusha out ret pop jl sti mov nop jl test fcoms xorl pop (bad) sbb fsub push inc mov jge popf push jmp icebp adc and cld jnp pop es mov jge popf mov (bad) inc push and cmp lret push fidivrl call ja (bad) and test mov (bad) fimull outsl imul test arpl mov test cmpsb (bad) mov popl insb leave jne enter inc and test mov xor jmp cmp push into sti scas out gs cmp jae repz bt int mov das mov push lds adc packsswb jne orl pop mov lret mov packsswb or out gs fisubrl push psubb pop insb clc into lea call rolb jbe adc das fild (bad) (bad) sub cld (bad) cmp cmp ja mov repnz add add dec add jmp dec mov jp xor je jnp mov mov xchg lret mov jmp jle jmp inc pop mov rcll jmp dec (bad) jmp decl cmp mov jmp (bad) xor dec sub leave push sub fidivrl lahf cmp jle push jg mov dec mov inc mov cmp push sub mov movl mov dec adc xor cmp inc (bad) mov ret dec ret fsubrl dec and sub xor ja out call xlat call call or ret jge ds dec mov inc add repnz xchg clc mov iret sub cmp je or hlt lahf pop les ret call or pop das jmp arpl pop add aam aaa loope scas mov dec fnstcw jmp and stos pop aam outsb sub test jl call scas dec ret pop sti pushl cld push inc mov dec mov inc mov xor mov inc mov scas pop and add add jle pop pop and dec lea fisttpl inc (bad) (bad) fmuls pushl adc adc pusha xlat std fist dec and icebp dec mov call dec cmp push call movb in dec ds adc lahf test fwait pop mov call aas test mov negl mov stc dec mov jle cmp mov or cmp pop inc mov cmp mov je jg adc out sbb (bad) bound stc sub fwait mov out je xor mov cli xor popl mov xlat push fisttpll mov cmp push mov (bad) jg fist adc add ja add je cmp stos sub jbe mov stc fucomi or fcoms pop ret cmp sub test add stc pop or jg adc mov call adc dec in add stc pop or mov stos ret cmp mov inc fbld push in jle fistp pop jbe (bad) outsl icebp (bad) mov stc or jo fadds jmp stc xor rorb test sub (bad) lahf cmp (bad) mulb jg lea pop je cmp jne call lcall out outsb mov je popa adc stc or xchg jg std outsb (bad) adc loopne mov pusha xor addl andb push jg cmp out mov mov inc jno je cmp pop out jne cmp gs (bad) mov or popl push sub (bad) test xlat sbb or arpl inc roll mov sbb mov mov je frstor jg outsl je jo loopne add bound add lea aas pop mov pop jbe jg push or mov dec cmp enter push jnp aaa cmc je jg inc je push jne push mov das add lahf push je sti fstp fnsave inc push je inc or push mov cmp mov jg lea add out cmp jmp and jg bswap fnop fisttpll add sbb lea cmp xchg gs mov stc adc cmp icebp mov mov ret lock les pop ja in je int test jmp stc stc sub int fadds jmp mov cmp je je negl test fisttp je fmull loop adc push out ja cmp je add mov stos pop push je insl lock cmpsl or test ss xor aam mov stc cmp xor and ja inc leave pop or or cmp mov das jne bound gs cmp jnp sub jmp and xor inc popf or (bad) sub call mov stc inc pop mov sbb sbbl test mov test mov sbb lahf mov insb test les in or les push das add sbb subl and data16 dec pop add mov jmp ja adc lret sbb push les test stos sbb add rcr push pop out dec (bad) call cmpsl (bad) je dec lea decl mov pop cmp aas or jne fcomps call dec sub sbb pop push fstpl pop je fucom rcrl or sbb jg dec mov roll pusha and adc sbb rorl sbb cmc cmp dec mov pusha inc orb out dec std iret cs je xor sbb and mov pop je dec lea dec mov dec mov call inc fsts incl xor inc mov dec sub dec lea push cmpsb xor (bad) mov lea dec lea aaa call out psubusw adc mov xchg dec add jns push mov (bad) push incl jmp xchg mov push jl jmp leave (bad) iret cmp lret dec mov pop pop adc adc sbbb lcall jg mov je (bad) mov pop jne cs dec mov add call out cmp orl int3 mov loop sbb mov jg or mov prefetcht1 call inc in adc mov push dec jmp outsl lea fstpl lea dec lret jmp cmpsb dec jmp ficom add inc pop scas cli outsl mov and sbb stos out mov mov xor movl inc cli cltd and or (bad) xchg mov dec repz mov loop (bad) mov sub (bad) xor inc dec mov ret data16 and clc sub lret dec mov inc mov scas daa mov or dec mov inc movsl mov addr16 inc jo incl je cmp inc outsl test add rolb and mov mov mov sti (bad) (bad) push push repz xor or inc call lea dec arpl fcomip or pop (bad) je out xor lret arpl mov push cmp mov dec mov call jne test pushl out enter and aad pop lea inc std out adc cmpsb sub ljmp lret sub lock stc jne mov loope dec movl call xor jmp ss inc jbe lret test dec mov shll (bad) call mov flds mov inc aas sbb aas inc add fldl inc mov out mov ljmp mov ja gs inc (bad) mov inc mov xor cmp (bad) cmp (bad) jl adc dec mov dec out call mov inc xor test call lahf or xchg jb or fnop aam pop dec lea sbb sarb mov inc shr push adc iret push out push or or loope push dec cmpsb sub push xchg jmp xchg inc and inc mov mov sbb jg call addr16 je xor stos loop or sbb dec (bad) call push lds (bad) (bad) dec jmp mov adc pusha call mov push (bad) dec mov mov inc in xchg inc adc lahf sbb in adc sbb xorl mov call in lret mov push xor rcl sahf xlat out dec xor pop leave je call hlt faddp adcl push inc je test jne fs out call out or mov call call inc xor mov mov jmp cmp ret pushf push push xor sub add mov (bad) ficompl push inc mov mov mov cmp nop mov mov cmpps jne out dec dec inc not icebp xor cmpl je call or roll or jp or (bad) in pop popf ljmp fist popaw inc mov add divl jecxz mov je inc pop inc movl jne test je test jne or inc mov mov dec sarb dec mov push bound out dec cld jmp mov dec mov call mov dec mov or mov inc lock aaa popa stc call outsb scas add cmpl decl test test test pop in rcr push inc mov dec lea lahf xchg in in inc or inc jb push adc xchg daa dec xchg (bad) je mov mov adc out mov test je adc add or lock pop inc mov outsl push daa mov add jne or xor sbb dec mov inc call xchg (bad) jmp mov call test jle call mov mov or dec cwtl dec mov jl sbb cltd mov daa (bad) out fistpll dec mov dec mov push in into cmp jmp lahf in inc mov push add ja (bad) lods outsl call dec cwtl jmp sbb cmp aam mov es dec in mov inc das or pop sub arpl inc fcomps mov dec mov jmp xor loopne lock test mov cld imul mov mov cld and jns or sbb jle call add test sbb outsb test dec add dec cmpl aad lods push jmp out roll mov add dec mov inc lock adc (bad) (bad) jg inc add lea sub and jne mov xor shr movsb clc ljmp add mov push xchg loope mov cwtl jmp (bad) mov add shr lea dec arpl dec lea cmc jae pushf fdivl out fs cmp repnz mov aaa xchg sbb jbe mov shr data16 add push lcall loop cmp inc call test inc aas in fildll test dec dec arpl dec add call test push inc mov jmp sub in mov dec inc mov stc call jmp pop (bad) jbe je xor dec or rorb aam call je cmpw jne dec sub dec ja std ja or dec lea call jne lea aas cli jne dec mov iret hlt sub add outsl dec mov call (bad) jmp sbb rorb dec outsl jge arpl jo jg fs shr call fistpll mov jne push adc or rorb dec xor lret dec pop push adc (bad) pop fstpt dec jno cmp add adc inc push mov jmp pop into mov cwtl jnp iret js aaa jne call jbe jb sbb mov jb jmp or fildl jmp sahf frstor sbb js jo dec mov ds xchg pop jl scas dec loop or jmp and mov add aam cmpl push adc inc push or sbb rcr dec mov dec mov enter leave pop iret xor dec lea mov dec pop call cltd outsl mov cmp fsub jle add nop mov jmp xchg push (bad) jne test jne dec repnz dec push ljmp adc and fmull hlt mov mov add jmp jg (bad) iret and inc mov adc inc pop dec lea and testl cmp dec mov arpl lea push sbb notl je sub sbb call dec cmpl push adc jmp ret scas rcr lea push inc negl fisttp mov adc out cmp inc push inc mov das (bad) gs out dec dec mov std jg int (bad) dec mov dec mov inc mov fiaddl dec xor pop xchg mov ret ficom call dec arpl test pop (bad) fist ret dec mov xor dec test je das (bad) decl dec add leave call (bad) je push (bad) mov mov aad or inc mov dec call cmp jne movb test add add pop sbb dec pop sub fisttpll scas bound inc mov fsub mov scas (bad) out (bad) jmp mov cltd call adc call mov push call mov in testb adc (bad) xchg add mov xor sub add test (bad) pop and fist pusha lret enter and cmp or add ret mov push ret mov pop and add push pop shr cmp fild jbe pop jne cltd into std jns aas jne sub mov and inc or loopne inc sub data16 jge incb clc sbb xchg jno or jne je pop loopne or or jnp rorl aad push ja dec mov call cwtl push add ret xchg xchg insl push jnp mov jbe outsl fidivr dec add jne push add jne push pop jne jns lret jbe xchg ja and cmp out fdivrl mov push jne ds test mov jne loopne or inc jne (bad) jg mov inc or add rorl adc mov adc mov in jmp push je dec nop dec or and (bad) lcall add popl cli add mov aad rorb pop loopne (bad) ja and mov pop add mov ffreep sub adc clc decl jb cmp dec xchg fs insb mov and aaa xchg inc mov insb fnsave mov dec lea sbb cmp je js mov add out ljmp inc call cmpl je iret push xchg pop and mov jge push (bad) and movl and test or jb fsubs cmp ja ja dec mov int3 dec or (bad) decb leave mov jg in je or dec cmove dec mov aad xor sbb dec (bad) mov sbb fimul jp add push or and dec testl mov mov ljmp jle ljmp rorb rolb sub inc imul stos cmp fs mov sahf jnp (bad) jo xor push fdivs mov push mov xor inc (bad) enter ja dec mov dec cmp xchg xchg sbb loop les js orb dec cld aaa (bad) aaa ds or sar incl sub dec sub inc imul out mov jae push inc mov (bad) adc nop out mov sbb xor sbb add cmp cld push mov jmp mov or mov jge rcll cwtl push pop inc ffreep or dec lea mov call jo cmp int3 mov cmp jmp ret orl psadbw jge mov test xor dec out psubsw adc jb cmpsb popl jne adc cmp (bad) jmp jne and jne call ret sub fs stos fadd mov call nop adc dec enter (bad) fld1 es (bad) (bad) jmp scas mov pop pop or add ret and sub inc mov fimul into xor call mov mov call loopne aad aad pop test cmp add xchg ret das not and adcb movl inc mov dec lahf mov test je and or mov and aad cmp jg rcrb push cmp jmp popf std icebp scas fsubr sub addr16 jle or pop dec push add mov movl std je mov lret test dec (bad) (bad) clc sete movzbl sub test je or add (bad) (bad) decl test cmovne mov and cmp je and test call test cmpl inc mov mov faddl rorb sbb add push add ret roll mov sahf xor pop lock xor mov jmp xchg jg inc mov sub adc mov lret leave xor push mov hlt jmp lock cmp jo int3 push arpl jmp divl cs movups cs mov les add xlat cmp jne and or add test loope push add dec mov and jmp pop arpl jno or ja aas adc cmp jne das add mov add dec jmp sbb fidiv call mov push mov cmp enter push xor inc push jmp jbe sbb adc mov add fsub (bad) jmp mov xor incl jmp aad cmp jg fidivl lods add (bad) sub dec dec add adc loopne fbstp call out ja cmc xchg rolb push inc mov xor popa (bad) sbb inc lods xchg xor (bad) pop pop adc xor or pop test fldl cld rcrb call jne dec fwait dec mov je std decl test inc es xchg in xor ret aaa push lds ljmp inc dec mov fstpt or sahf jo jbe je,pn mov dec add ja rorb pusha mov fmuls stc dec mov adc ficom dec add decl mov cmp inc mov inc call add call ret inc mov jne jle in test ljmp stos addr16 or je inc mov dec mov int cvtpi2ps cld pop xchg addl shrl mov or add fldl cmp dec test adc into mov inc and jmp cmp ss sbb jmp add cmp cmp cmp push stc loope addb fcoml or mov sub jbe add pushf sbb xchg out or adc sbbl pushf aas (bad) test fucomip aam sbb xor popl add loop scas mov and xchg or in (bad) jno loopne sbb fsubs loope inc add xchg push int (bad) jg aas xor mov add adc push xchg xor push (bad) mov mov and pop pop adc les cmp jl pop sbb lock jne sub sub sub add call (bad) cmp (bad) xor sti mov add mov mov stos xchg jae test fs cli je test das adc or icebp js (bad) jg mov test dec mov jne mov xchg inc and add pop lods dec nop cli adc inc call (bad) mov mov jmp ds das call inc xchg jmp xor es mov pop pop cld call add add push imul push mov ret popf fwait adc scas popl inc mov sub mov aaa xor cli push sbb xor rorl cwtl add gs in inc outsl adc add mov jmp rcll mov nop ljmp mov and jmp movb dec outsl popl loop lcall or in and jb add nop cltd iret lahf out loopne or sbb clc add or or lds dec push cld aas jge mov add adc push incb cmp fs push sbb mov dec adc mov xlat mov movsb setnp mov adc sahf dec mov dec mov inc or add ret test cmp hlt add fmull pop sbb test pop addr16 cli decl dec dec lea dec mov pushf jg mov lret rolb shr dec mov (bad) (bad) (bad) decl shl dec sub dec add dec sub dec cmp inc movzwl dec mov inc mov cli jnp (bad) jne jb dec mov mov gs call adc test clc xchg add test push mov out jmp leave (bad) (bad) mov lret aam mov call xchg sub popf (bad) call jmp int3 and fwait imul ret jge add sahf in cmp (bad) xor std xlat and call mov xchg (bad) mov (bad) (bad) ss leave cwtl scas lahf cwtl in add jmp dec add jmp out pop lea inc mov call aaa int3 bnd jmp cmp pop ss jmp mov loop bound mov or mov sub or add mov and dec fcomps rolb aaa or ficompl shrl mov and push les mov or mov jmp lock pop cmp inc cmp test mov clc mov add xor cltd sbb adc or sbb mov in inc xor inc xor dec mov jg (bad) jae popa xor dec mov (bad) add inc mov adc mov shr test mov je jl add add lea je jmp jmp cmpl jne popf xchg dec mov dec test jne dec test jne nop mov or fstpt movb icebp sbb inc cmpsl cwtl mov mov popf fcom arpl add adc test (bad) mov fstpt mov (bad) (bad) call jmp cmp dec (bad) fwait push add test dec pop jne inc cmpl clc xchg lea xor lds into jae push pop fadds dec mov sbb loop mov fimull lock test dec mov je or decb xchg dec pop ret mov add js lea hlt call lds test dec lea inc push dec or test addr16 add dec lea dec mov jp stos xchg xchg jo add jl out fist sub jnp lods and adc mov mov inc xor add cmp and imul jo mov jne adc lea sbb aam add es inc push jmpw mov rcll cmp std jl mov loope mov and cld movsl in test popf push aaa std dec mov jmp cmpb cmp arpl andb jmp jae das jmp inc rorb in out mov cmpb add jl mov add icebp mov call mov push repnz cld adc ret or adc int3 std jge mov xchg adc divb adc mov sub fist dec test je add or call mov jne and xchg or mov mov call orb es scas aas repnz and call dec test dec mov cmc je orl cmpb out push lcall jmp jns jge sbb call add mov dec mov add call mov mov cmp subb sub jb cmp jmp jmp fstpl or je add push jl sbb mov in mov push jg cmpl iret dec lea xor ret xor mov ret add inc cmpl insl loopne mov rorl or push inc and xor jg mov dec movl js add movsl test sbb mov mov call aas aad les adc inc sub jle (bad) mov rolb cltd push jmp lock pop pop push inc movl out jmp add push xor dec inc call pop dec or adc js adc gs mov cmpl (bad) dec lea aam js xchg dec test push sub sub xchg in aas push sbb outsl jmp sub ja pop cwtl adcl and ret iret rorb test lahf jo fnsave aaa jle push test mov jne in outsb imul sbb shlb mov call sti repz (bad) jmp rcr call xor mov (bad) inc push inc movsb cmp jno insl sub pop out inc push jmp into pop mov cmc inc cmp mull cmp out pop mov push jbe js adc mov gs or sbbb push dec sbb or pusha addr16 sarl movsl dec mov dec mov xchg es mov (bad) loopew aas mov lahf call icebp add test jg adc inc mov call pusha cmp bound sub call je inc cmp je adc jo or xchg fwait mov mov inc pop aas mov je and (bad) (bad) aas cmpsb je movsd repnz movups or jg mulps adc ucomisd jae unpcklps (bad) ljmp mulsd dec mov fidiv lret fidiv push fs jae mov daa (bad) sub inc and xor mov cmp adc cmp or xor mov das inc adc lcall cli push ret aas jmp adc dec mov je lahf rcrb jmp loopne or loopne icebp cmpsb sbb shr ror test or rorb cmp xor mov cmp loop adc popf fldt call fwait mov jmp mov jo ret shl fcomip pusha xor inc mov loopne adc js mov (bad) faddl mov jmp lcall sub jle pop in push push js jl popf jmp push push cmovns or ja ret imul cmpw je dec lea adc push (bad) test je and das je add arpl mov cli add (bad) jnp nop mov pop test adc push lahf dec adc xor ljmp imul ds dec in xchg mov ljmp xchg push add decl mov inc and dec mov cmp cmc dec movl lods in lods in (bad) dec ss pop jae mov das test ret test in dec aad shlb out sbb enter inc out imull loope adc test dec mov test ljmp mov mov in dec pop mov inc push xor lock aaa stos out sarl add cmp jo or jmp gs mov mov aad shrl mov jg test outsb and clc ljmp jl nop inc mov call jmp cmp xchg test pop scas jecxz and push or out (bad) adc (bad) (bad) sbb leave push imul adc adc aaa dec mov dec (bad) mov or aaa push mov mov add xchg jmp ja pop dec pop cmp inc aas push pop popf sub add mov call call pop xchg jl xor cwtl insb pop call mov inc pop push mov inc jmp ja dec mov dec cmp repz adc jo push xchg test pop push pop je cs aam cmp xor jp (bad) fist mov jne jmp call and cli inc mov dec fcmovnu cmp ret call test add cmp jg mov ficom cli dec cmovbe (bad) out loop add mov jne dec arpl push call je xchg xchg scas das jne js cmc adc movsb imul inc lcall adc adc add ja sbb adc and mov (bad) xchg cmc push enter push je shrl jne fnop jb in add leave (bad) in repz ss (bad) jb mov add cli sub ret dec imul cmc roll fs test in loope mov dec into sub scas test xor and in cmp into bound clc rolb fs scas xlat stos cld js dec test xchg in clc or outsb mov jmp cmc jno dec pop jge inc test jne dec lds decl add add leave je and push rcrb jmp nop inc decl cmp jne cmpsb jae mov movl lods pop dec dec es lcall cmp je mov or pushl inc mov inc call test je jmp lods fisubr fld mov add fcomp jg xlat mov add pop pop (bad) in jb,pt adc outsl jmp rcrb pop cmp aam add (bad) jmp jp xor push stc roll dec lea jg jmp xor and xor inc mov test push xchg mov lea in mov or subsd or add call rorb jmp mov rcll insb xchg pop pop mov clc mov cmpsb (bad) pop popf call xor ficomp ret sub ja cs fld movsb daa dec repnz test imul out push push and jmp cmp loopne sbb mulb xor inc xor or std fmull test js mov fdivrl cli inc add in outsb test inc outsl sbb je lds mov je fidiv lea fwait inc mov shr add xlat mov ja dec lea lea inc pop or lea add xlat (bad) pushl mov call xor out js stos pop adc mov pop icebp xchg mov ret jge sub mov dec mov call mov std cmp jle movzwl and mov out and or jnp cmp test sbb fs pop adc (bad) stc lock decl movl sbb test loop rcrb add dec xor jmp addr16 cmp testl xor stc xchg jo je push data16 and xor sub cs cmpsl jge xchg add mov and or roll aad xor dec adc sub xor inc mov in and cwtl stos popf xchg add push xchg mov cltd call push inc fdivl xchg xor ret or push inc mov ret fwait jle je mov inc mov stos dec lea shrl inc inc jge iret add icebp lds sbb fadds mov inc xor adc or and dec mov inc jp rolb lea decl cmp mov dec lea aad (bad) jmp mov inc lea dec mov inc mov inc movzwl pop push neg pushl (bad) in dec mov dec add inc movzwl pop je dec arpl sub (bad) push rcl inc cmp dec lea inc add das (bad) (bad) (bad) pushl test inc lea dec lea jne dec mov inc mov dec mov inc mov dec mov jmp inc add dec lea dec lea andl roll add mov inc add inc mov pushf insl add divl fwait or xor adc je in out mov sbb jmp inc mov (bad) incb and arpl mov dec arpl cmp sub jg fist dec add movzwl dec je sub in (bad) incl dec arpl dec add cmp dec lea das je or je inc (bad) (bad) (bad) (bad) (bad) (bad) pop add lds dec mov inc mov dec mov inc mov dec mov pop std aas fsubr cmpsb fsubrs lret add testb jge movl push pop inc lea out (bad) (bad) mov lea add add lea mov mov xor fild icebp fisttpll push xor movl (bad) data16 sbb inc mov cmp and mov mov mov mov sbb cmpsl nop dec loope sbb cli (bad) xchg mov add loope pop cmp or cs mov fist inc call dec mov sbb into call lret (bad) fistp sub in shr nop mov xchg loopne js ljmp call jmp stos in dec and mov sbb or inc je mov je jo mov and mov repz xor loope cmp ss push sahf imul add jns repz or push cmp add mov in bound nop adc dec (bad) pop add mov add inc pop out add stos xor pop push add fsubl cld push out adc add cld adc or add and jecxz dec in sbb add dec fsubl mov jmp ljmp and push cmp pusha test popa fadd cmp call adc inc mov mov loopne mov lea jb or unpcklps cmpb dec sub mov or addl lock dec test je adc adc rcr pop mov call jmp fmull unpckhps sub pushf call lds stc cmp lock mov mov pop inc ss and sbb repz call into cmp push ror (bad) out jle je jg add test inc xchg jmp pmaxub fwait dec mov cmpsl add mov jmp decl add xor dec add dec cwtl dec add jmp inc add cmp (bad) cmc out pop je add xor mov cmc xor cmpsl pushf movsb scas push ds dec pushf xor add pop adc rcrb jmp (bad) call mov sbb (bad) mov (bad) push orl sbb les call scas aaa mov cmc roll jns mov pop mov and inc pop ds rcrb in mov push cmc decl push jg mov and leave dec mov ficom rorl push orl pushl adc je cmpl dec mov insl jne je,pn or and bound addl cmp je call inc adc adc add pop ret or or adc rorl or andb jg call jmp outsw mov fdivl xor movsb push jb mov pop out mov in pop in enter cmpl stos add dec sub cmp xchg and test aad lea call out inc mov inc ret or sub dec or dec mov lea fdivs rolb sbb out mov adc fidiv jmp adc or jnp adc dec mov negl xor (bad) les call stos punpcklwd fimull inc and mov xadd jp bound ss mov xlat ret test stos jle clc dec arpl dec add jo adc pop in sbb dec decl jge push movb push add dec test je or mov cli or (bad) je sub adc test dec jno call inc mov dec lret decl cmp jne aas add pushf loopne js and enter mov or test inc sub pop or add es es inc xor or inc daa sub inc shrb out in lea and dec iret ljmp and dec lea add push xor in rolb push cmc decl adc sub pop faddl add out sbb shr enter and incl (bad) sub jno out inc (bad) jg call rorl pop jge adc test jge ss sbb orl add push xchg cld ljmp xor dec sub add dec cmp jne dec jle jmp (bad) scas or mov call push mov out jmp cmpsl and ss xchg or in cmp imul les movaps in hlt or inc push int test fwait or fsubrl lea ds or movl jae inc xor (bad) ja shl ljmp adc fcoml dec lea cmpsl add in or dec mov add mov pushl lea dec add sub and mov mov dec mov dec mov inc or sbb pop sub sub call ret dec mov call xlat mov dec js (bad) nopl jmp sbb adc iret negl mov inc lods xor into je push ret test xor sbb outsl xor inc test dec test add inc shll je popf cmpsb je jo lea add inc mov mov mov out dec mov dec cwtl (bad) loope mov call insb cs icebp and pop add jns subl test scas or add ret out sbbl loope call mov loopne rcll push and fdivrs cmp push mov xchg rorl test inc mov or sub orl fild jecxz xchg mov pop mov js mov aas fwait es xchg movsl mov dec mov lods mov rcll inc mov inc movl dec test pop dec inc movl out or xchg test sbb sbb jb ret mov mov or aas iret add mov lds test mov orl pusha add cld pop insb loop add fwait je mov xor xchg sub leave cmpb inc mov xor jo (bad) cmp out jne rcrl in ret or jne sub jo add dec lea inc arpl jge ret cmp mov inc pop inc test jno pop stos aam test add std mov leave mov movl js xchg cmp loope in push mov sbb dec fcompl jmp add adc adc je xchg scas (bad) decl (bad) dec outsl ret or sub dec mov call dec cmp xlat scas cwtl jo jle jmp xchg les and pop xchg mov dec inc dec pop jg and int3 adc mov jnp movsb and lcall pop inc mov mov mov xchg mov fs adc sbb xchg adc jo add in xor push sub gs xor repz xchg (bad) jns loop xchg clc pop scas sub xor popa roll scas in mov ret (bad) stos jle hlt mov sub popa xchg js lea jb xchg popf in sbb sub xor and and test sub xor mov adc ret sub faddl (bad) (bad) aas push bound mov movsb arpl decl daa int3 in add stos stos add pop in ja sbb fild xchg sbb lahf movsb popf dec jmp add lahf lea shrl or sub stos mov (bad) cwtd cmovb scas cmp dec mov dec mov je xchg push or and and mov andb sbbb jo sbb decb testl movl dec mov jecxz push push dec mov cli call push outsl inc lea dec push add mov jecxz jle lds in dec add jecxz in pop sbb or jp and (bad) pavgw mov mov stos neg mov mov loopne (bad) mov dec cmp negb jmp mov call add movsb sahf push or int3 je mov sbb mov mov add into fist ret mov mov jnp or ret jne or popa aas jmp jae popf icebp call aam (bad) (bad) aam jmp enter pushf push cmp mov xor xor jmp lahf xchg pusha add mov (bad) pushf cli push jg add sbb push pop jg aaa inc scas mov inc testl and sub jns js pop cmp jg mov jae aad push jg and pop sub je xchg xchg jl jl sbb pop cmp pusha clc jg aam (bad) jno or mov jg push jg and (bad) or cmp jg and out and mov cs mov adc xor dec cwtl rcll add add fwait sbb cld xchg jae je sbb in test in adc es jg jbe add mov adcb mov sub sarl hlt add leave sub sub inc and lds jg cwtl jno fiadd and ja mov pop jg xchg fistp xchg add in fsts add jne (bad) sub push sbb xchg int3 dec mov cmp fwait dec xor add xchg xchg push test pop and dec mov and mov clc popa loope in adc or push or lea push lock jne ret inc or pop adc je or add (bad) fnstsw call dec arpl dec cmp jecxz sbb cmc mov je mov sbb xor sub add mov pop jno data16 lcall dec pop cwtl sub lea je add mov lcall ja out fist dec mov je mov stos sbb shl push push mov pop inc and inc pusha xchg sub addb inc cmp orl cmp clc dec lea sub mov mov cmp push dec call (bad) xchg add mov and cmc mov dec mov inc pusha add jnp (bad) xor sub cmp shlb adc jnp idivl adc push inc cmp je xchg stos enter mov idivl call dec mov outsl mov test dec xchg add loopne xchg je sbb and fwait adc ja mov or push mov dec mov dec aam and fwait rorb dec mov call and int3 aad jle adc xchg dec movl jg jne pop mov pop fildl or xchg adc mov mov sbb jno mov jp jg or xchg popf repnz mov cmp aaa xchg insl mov repz call repz sti inc xor xor add cmp cmp inc xor jmp add aad fsubl movsl test lcall mov dec mov call dec sub dec sub dec cmp lahf loope jne (bad) lret jmp sbb int scas imul ror pop dec aam add xor sahf insb aaa mov fcmovne jmp push pop add add and and dec mov dec je dec aaa inc jo mov mov je (bad) or call inc (bad) jp inc mov inc xor outsb out lock mov or add shll inc adc add add clc dec mov (bad) mov movl xchg rolb mov (bad) fistpl push pop out je (bad) (bad) and dec mov arpl mov push rcpps dec lea punpcklwd ds test mov call or cmp je adc mov or jp aam xchg jle scas or pusha leave ret xchg outsb out pop xlat jmp test dec xchg (bad) sub test mov nop sbb inc cmp roll (bad) cmp xor in gs addl jmp add and mov mov and dec sbb and in (bad) cmc mov fsubrl adc test enter (bad) lahf cld dec dec mov add dec mov decb test orl rclb dec lea inc xlat sbb rclb dec lea push or mov xchg (bad) jmp adc inc mov mov call sbb test and mov xchg fstpl dec test jne cwtl sbb das fsubr jle mov scas or push popa in push mov cmc xchg adcb mov add std (bad) xor mov mov cmp inc xor jmp mov mov push mov cld repnz push lock aas xor addl test (bad) js xchg fimull outsl in call mov jb outsl dec cmp sub sti add cmp and mov mov out pop mov pushf xor scas iret cmpsl inc mov (bad) xor add mov push inc mov nop sub pop pop or xchg or pop or mov jbe cmp xor lock fdivs inc push push pushf jb ljmp lods xor adcb dec mov sar add xor fcmovnb faddl (bad) jns xchg enter dec xchg lea inc push mov mov xor ret call jbe in pop push and bound fisttp int mov dec mov inc push push sbb dec iret mov lods jo lock add imul and and dec and adc mov pop outsb or cmpsb push mov cld mov dec mov xlat sbb jnp dec arpl cmpsl dec add dec cmp cmpsl sbb jne outsb pop outsb or or popa xchg cs je out pop add cmp shrl mov add dec repnz inc pop sub sarb stos pop popf aad lea dec add mov xlat in dec adc mov dec gs mov inc cmp enter jne stos dec rorl popa leave mov jne mov rolb adc mov mov call lea add call and cld std jne dec mov mov lahf and cmpsl xchg sbb jmp cmp adc test movsb mov cmp mov int3 loopne mov push dec jmp das jmp add mov xorb adc pop enter dec lahf int cmp les mov test or cli xchg and adc loopne mov sbb loope fadd dec xchg call test fdiv bound aad je clc pop inc sarl ret cmp jo in mov call int push cmp add dec imul dec out sub faddl addr16 add aam je js cmpsb pop and mov xchg rorb and cmp and test or mov sub js loop scas out dec call add pushf setg scas dec ror cmpsb sbb leave jg jns or shl test nop into adc scas out and sbb je pushf mov lods pop push add inc shrb sub pop je mov and xor cmpsb xchg loope sub or jp push adc sub movsl movsb repnz ret xor sti movsb mov sub or call ffreep push cltd imul (bad) jmp and jmp jo or xchg rdmsr sbb ret inc mov jecxz or (bad) sub scas sbb cmp jb iret or dec jb cli cmovp in nop pusha pop cli scas push xor sub icebp add xor fwait mov adc scas or nop fsubrl push rcpps movsb pop dec jo iret inc adc or xchg push dec into decl mov jg cmpl decl push and jmp decl gs or push xor add dec inc xchg or out xor inc gs dec (bad) push and lahf pop sbb push sbb and cmpsb cmpsb nop adc mov sbb outsl lret cltd jl jo and jle jl fistp xchg mov jbe daa fild xor xchg and and or mov in loop or and bound or jecxz shld add sub aaa and andl inc sub cwtl fildll inc test out jg jge pusha pusha jo sub test pop stos pop test loop sbb xchg adc inc xor adc in bswap lock jg pop push mov jg jns sarb test push adcl xchg mov xchg std jmp push and dec jg mov sub and stos sub adc popa repz push fistpll mov dec test jg mov test inc jmp and or ja test sbb imul and in inc inc jg jbe lcall pop scas setp or inc inc add mov cltd pop movsl js jno adc insl lahf add xor cwtl jne mov lahf adc (bad) or test cli aad in pavgb adc test adc sti daa adc xchg xchg hlt mov pop cli cmpsl rol and cs push push sub add and inc pusha ror ret pop add add mov dec sub inc adcb mov cmp mov lret ret scas leave cmpsb add add enter shr mov (bad) pop xchg add and xor je inc pushf fild pop pusha test jg mov dec sahf xchg mov dec pop dec mov nop mov inc outsb popa gs prefetch loope rorb dec mov iret adc or (bad) ja (bad) xor add dec stos inc mov and int3 adc test (bad) nop adc je adc add pop or push mov dec and jnp test fwait add (bad) sbb mov call jmp and sbb orb add adc sarl adc push push sbb adc test pop or fwait enter cmp or jno xchg sbb loop jb sub pusha sub stos pop pop nop pop loopne call lcall xor fwait xchg jo lea shl push cmp lods jo sbb jl xor dec mov jl orb testb cmovo std mov push sub xchg add aas and add inc push sub push or mov xchg push push and call sti pusha pop xchg dec add jmp ret inc cmpsb push ja rclb jmp xchg adc or stc jb ljmp (bad) aaa loope jmp add jne loop orb je xor cmp sbb cmp stos pop or sbb or push sub rcrb or (bad) adc push xchg mov or lahf xor xor pop ret lahf pop dec cmp jne xchg adc dec imul enter nop mov outsb push das xlat outsb add inc adc add rorb (bad) (bad) inc lock add mov addl icebp pop jmp and roll les push or sbb push jnp fsts xchg jnp ss or or mov add daa sub outsl inc jmp or or ljmp dec and fild das adc loopne xchg test int dec mov and add (bad) daa nop jo sahf (bad) test loopne push add add and das lods dec ret lahf iret pop pop gs daa xor outsl add add push jo test and rclb jg pop cmp xchg push inc mov fidivr mov insl mov and ret jg and (bad) cmp sbb cmpsl mov push jg sahf dec or gs inc aaa cwtl rorb jg pop pcmpgtb add mov inc cmc test and test ja lods adc jg push pop insb mov call and adc or xor negl sub xchg loope dec movhps pop push jb or pop inc push mov cvtpi2ps cmpsl fwait dec cli movups insl movsb mov in fwait xor xchg inc dec pop fwait xor pop dec cmovns xchg pop jbe punpckhwd dec sub push outsb addr16 addb xchg stos es popf call or dec or push cmp rolb popa or test (bad) xor and cmc cmp (bad) cmp adc mov out or jae cmpsl push dec add jns imulb ret mov pop cmp add inc pop mov sub inc cmpsb or jg add mov movaps movsd rorl je dec int3 inc mov scas addb xchg add or roll add dec dec popa in or and sub jp push addb adc icebp fistp push mov call xchg fistl pushf je movsb dec inc ljmp inc xchg and sub cmovb lock sub add xlat lock add mov repnz movups or add je insb sub dec and mov inc cli (bad) pslld dec mov call sub push mov pop mov jmp add shrb jns add popa mov or inc data16 sub and dec push mov outsb ficoml add sub adc dec ret dec inc arpl lock cmp popa lea and and xchg xor (bad) jmp mov stc je cmp sbb push subb sbb pusha call and pushf mov (bad) jb or xchg add addb jmp mov lahf stos lock subb andl test jae xchg adc and test adc xlat inc nop loop push in jmp stos mov mov push jmp jg lret add mov dec lea insl stos cli decl dec xor (bad) incl jbe inc push ret je inc in cs ljmp mov add lcall jg xchg inc adc sbb cld dec sub sar rorb xor mov or inc aas adc inc movl jae daa outsb aam add add dec mov sub (bad) dec arpl loope inc and cli scas ja lds test dec dec stc mov sbb (bad) dec lea and dec lea dec (bad) sti mov pop add inc add mov mov or dec test mov or mov inc mov dec mov dec movl int3 pop xchg pop stos mov xchg cld je dec lea movl push and icebp dec mov call (bad) scas (bad) or and roll and dec add dec mov or or xor popf push mov jle rorb dec cmp jb add pop push mov mov adc pusha dec call push (bad) or movsb dec cwtl dec add and stos mov dec mov dec fbld mov dec mov inc xchg shlb cmp cmp pop dec mov call cmp loope xchg dec mov pop clc scas jo (bad) enter and rcrl or push mov scas aas add aas popa dec mov dec mov mov adc mov hlt sarb inc sar push pop dec mov das test add dec push add icebp loopne inc pop xor and lock movl jne arpl lahf dec lea mov scas fdivr mov test or mov add arpl js jg dec mov fisttpl test call (bad) push mov jo jns call jmp or fistpll lods and sub dec mov jmp pop sbb mov je call out fcomp (bad) mov mov call mov jmp js sub or out cmpsl pop dec jmp aaa (bad) inc lahf pop mov add dec lahf test inc scas xor jmp leave add push jmp (bad) xchg mov test jle mov cmp add std add stc sti pop mov sbb (bad) jmp cmp je jle bnd inc lds adc mov adc fildll (bad) mov add fisubr cmp mov ss dec xor test jne das inc mov sbbb das mov add dec jbe dec mov dec mov aas cwtl incb jecxz movl dec dec call mov out xor add (bad) sti cmp test or push mov js test cwtl xlat inc pop inc or dec push ja fidivr iret je or sub pushf mov mov mov lock mov jnp icebp cmp add jnp (bad) sbb je mov outsl cli jmp icebp xor add dec lea dec ljmp and loopne test bound mov sub sahf cmc (bad) cmc jg ficom inc dec loope test dec arpl movaps call inc add lea dec test cmovne cmc pop sbb hlt into cmp xchg ret (bad) jno stos into fimull je iret or dec mov lcall shr pop cmp (bad) sub jb int mov out mov fiadd ret jg dec mov dec mov fldenv mov dec repnz lahf sub inc mov dec mov mov mov stos mov mov or inc roll (bad) loopne fadds adc adc adc inc mov dec lea dec stc out aaa hlt jg jae dec mov dec mov loopne dec mov dec sbb mov je or subb dec jmp call dec add decl inc mov inc xor jmp test jge adc dec mov jnp scas cmp icebp sub and (bad) mov adc xchg (bad) jle out cmp cmp test ja cs adc jmp addl cmpsb mov fcoms sub add xor adc jmp mov jmp cli clc cmpsl daa jg les call (bad) (bad) cmp dec or cmp mov je cmp xor (bad) je cmp mov mov out cmp pushl pop ret dec lea push mov rclb push sti push scas scas stos call mov and cmp (bad) dec pop addl add jne sub lock js sbb xchg ja adc pop out outsb jbe arpl dec add jmp pmulhw or inc or jg out push pop pop jmp lret rol adc mov iret push push adc lcall push add mov mov and mov push adc pop push movsl xor jo iret mul out pop mov je test mov repz push inc mov in call pop jmp mov call jne xor sub fcmovnu jne sbb inc mov xor test or dec jo frstor call add call test inc test push mov movl inc mov and mov jns outsl push scas cmp fs call mov out scas push inc mov loop clc jo jmp fs mov pushf iret xor add out sub jmp or sbb inc mov adc stos movsl add nop dec xor (bad) loop cmp add xchg rolb xor nop flds (bad) dec (bad) aas inc test jne dec mov dec mov or bound push and cld and push or inc jno packuswb test mov (bad) addb pop or fisttpll mov cli push inc mov add mov (bad) jmp iret decl int sub (bad) aaa lea mov mov and testl jb es inc adc js pusha jbe mov jne inc je clc pusha sub mov sub push push je dec mov test pop pusha dec mov jne jmp shrb loopne jge or xor mov iret or pop push jmp jbe push aad mov sbb into jg or sahf data16 (bad) lret stos (bad) pop and lahf rcr push inc mov pop test je dec cmp sbb (bad) pusha dec mov je or jbe fucom in push stos in inc push push xor jmp ret push mov and and movsl mov jae sbb push mov leave pusha scas test rcr pop movsb pop sub dec mov jne jne jbe pop mov dec rolb mov mov lret xchg inc js pop dec mov sbb js push jo shlb popf xor jne sbb pop dec call (bad) (bad) mov push push out push inc mov jns pusha push xchg jmp add adc ljmp sub push and cwtl push add stos inc xchg into gs mov inc andl or lcall xchg add cmpsb push mov pusha and inc jo lahf ja inc lods cmp push loopne add mov mov incl fwait mov jg xchg pop or orl jne adc (bad) mov pop bswap inc sbb clc clts (bad) mov arpl push inc mov sbb push push cmpsb pshufw or push dec out packuswb mov dec (bad) xor and cmp setle inc jo push inc jo push sbb inc inc mov jo jno adc adc add or or cwtl add pop cs or pop mov mov bound into mov test sub push icebp or (bad) ljmp fildll inc pop int subb aas inc pop andl call incl sbbb xchg mov fild mov jge dec mov and cmpsl push push fidiv or adc into inc das mov call test jne testb je imul fist loopne or jnp lock insl inc ret jge add outsl inc sbb fdivs pop std inc adc rolb inc adc jmp ljmp inc add push je mov mov mov (bad) call push enter push dec in lret sahf mov jge test adc mov add test lock rcrb adc jmp mov (bad) testb lret je push pop pop cwtl aad add cmp jmp lea (bad) call xor fbld pop ds bound scas setns or out push inc mov add jmp lcall subl add sub inc call movl pop inc mov xchg sub sbb mov mov mov jne adc out cmp pop pop mov inc pop dec iret cmp in loopne cmp inc test repz add add sbb mov jg mov popa mov ret pop insb pop push addr16 push imul inc mov jb scas mov test (bad) outsl or mov paddw mov and xor mov mov mov bnd (bad) cmc out out jne mov test mov mov (bad) jo push pop rorb (bad) jg mov pop add adc xchg cld je addl das ds fstpt sub cmp or add mov ret jb cmp adc jae push lcall test jle cmp aad mov and inc dec sub adc popa stc and fsubrs pusha pop add xchg jbe insb dec mov push inc mov xchg call daa dec jmp movsb mov adc mov movl jae scas mov (bad) (bad) call dec cwtl jmp pop outsb ja mov push inc mov pop mov and loope mov sub dec mov aas dec inc cld dec xchg sbb mov js (bad) fucomip or mov jne push pushf cmpsl inc mov inc inc mov dec rorl fdivrs rorb add test mov pop roll test jno fwait xchg sub push jp dec (bad) fbstp cmc jmp pop inc call int3 adc decb inc cmp cmpsl inc inc inc int3 popf test cmp out xor pusha sti cmpl xchg add add mov pop mov pop adc pop ja inc pop jbe and ljmp mov dec mov jno mov je stos rolb pop leave je orl jns mov sti mov and rorb test xchg jl daa popf cmovno lock movsl dec jecxz ret (bad) mov call and call hlt mov outsl adc decl and jne mov mov aaa push lock inc or dec mov loopne mov les rorb or and xchg mulb mov lds ja lods sbb sub or std (bad) cmp call dec mov call (bad) sub test mov add adc add push pop ljmp pop (bad) xor lea pop aaa into mov out adc add aas mov shr ficompl dec ss aaa pop push xchg and adc pop add loop roll rolb jl push mov mov and (bad) stos mov add adc loopne mov stc push (bad) incl adc add iret das (bad) sbb (bad) lahf data16 loope mov pop jmp (bad) movntps adc jo mov mov cmp mov rcr jae cmp add test je rorl add inc sarb fisttp ret sbb sub mov daa fisttp dec inc adc addl mov js (bad) xchg mov and adc jl pusha or mov mov clc dec inc xor enter adc mov fcomp lock mov pop add adc mov call je mov std add test or jmp mov pusha aam dec lea cmp sub pop xor dec mov into outsb cli icebp dec lea cmp sbb add ss and mov rol or add adc xlat rcr mov dec mov aaa inc fadds xor xchg dec shlb sbb daa aas sahf call push add outsl mov inc dec xor jmp orl mov or fstpt ds sti lods sbb loopne test cmp rorb les (bad) lock adc dec mov aas push xor xor fnstsw mov call into pop stos jle cld push mov inc add out sbb mov faddl mov rol insb (bad) mov jle fstpl loopne mov aaa add fbstp jno mov sub inc mov or xchg call in pop ja adc inc lods xchg out jmp insl (bad) mov add clc inc rcrb iret fcomp (bad) jecxz add out add pushl adc jo sbb (bad) sbb push sbb loopne jnp addl ds (bad) in xor dec and movl or pop or insl or mov mov xorl sub ss jne cmpsb std fisubr push testb jne clc daa dec mov sbb add push data16 mov lea aas sub or inc outsl mov cmp add iret and pop cmp aaa (bad) je dec mov dec pop rorb inc roll pushl call or jo xor js vmread sbb outsl (bad) xor or inc adc mov or iret enter cmpsb inc and pushf je and jb lea inc cltd jbe add jmp sbb call (bad) mov mov je dec mov rolb pushl dec mov sub lahf clc icebp dec mov sub sbb xor arpl pop pop inc (bad) inc fdivrs lea dec outsb sbb add jmp adc inc aas mov xor cs jge pushf jne cltd pop repnz inc mov jo aam jmp stos mov scas jg mov dec and je mov or dec cwtl xchg aas lea pushf jg das inc iret mov fcompl cs ret xchg (bad) mov inc xchg xor call push push xchg call hlt cmpsb and dec mov add cmp je dec mov pusha mov sti dec push cmp add js and mov sarb fucomi aam adc ret pop (bad) lea dec inc bound in pcmpeqd (bad) lods dec mov mov mov adc xchg add pop add add call sub cld pop xchg pop add cmp ret data16 call cmp je call and out js rclb cli add xchg inc and xor mov inc and mov adc add lahf inc jl dec fwait leave dec xor leave mov dec mov dec out adc or xor icebp test je add or cmp popaw jmp or pop lahf mov cmp test pop adc push xchg jl xor stos jne dec ljmp push rorl dec inc add cmp bound or jmp dec push ret mov inc mov inc dec imul push sbb (bad) push out imul movsb mov jmp adc cwtl jmp fistpll inc lahf or xchg add cmp leave std xchg add jmp pop (bad) daa shr dec js addr16 and pop mov or push mov call fdivp daa sub adc adc (bad) cmpsl inc push dec jo popa loopne ror dec mov dec mov adc fstpl enter call pop (bad) jg decl test sbb jbe in ret adc push jo out pop das xchg subl mov cld addb std cltd cmp lock cmpl es lahf cmp ljmp jne mov cli pop (bad) jae adc or xor mov rorb sbb and (bad) stos incl dec mov mov cmp pushl sti insl je push and add call clc popf sti icebp call jle call js mov arpl loopne pop cmpl or adc lods and add pop sub jl dec cmpl scas sub dec mov adc mov bound jo packssdw movl add popa add push pop push in jo add lret add jp scas and pusha scas or dec movl clc add test test test testb jne xchg adc test pusha push inc mov pop sub ficom or mov call pop les test out mov xchg and test adc mov inc pop adc or push or add sub in dec mov hlt (bad) pop out jne leave dec movl loopne scas adc in pusha das or call pop jb fiaddl je (bad) jg adc lea mov and cmp dec ja fstpl rcrb std (bad) incl mov mov lock pop dec movl call mov adc lea lock test mov mov jne pop test and cmp je icebp decl inc and and dec add dec mov inc in xor les inc imul cmp xchg add inc and mov nop sti sti decl and cmp push and xchg xor mov dec mov cltd xor push mov dec mov rorl pop fimul inc xchg in cmpsb lret inc push jno lds clc xor add ss dec add icebp jmp jo ja daa in in in mov test pop jne inc (bad) jbe (bad) sbb jb clc mov adc out jne or mov mov test add adc cltd xor js or es clc mov call test or inc in push lods dec mov call jae mov sub fs cmp mov cmp push or and add gs into mov inc xor inc mov dec add les sub decl inc cmpsb fnsave inc in call add push dec adc adc cli jmp add pushf pushf or pushf mov testb adc pop pop (bad) xor call and adc je test out gs push xchg sbb (bad) (bad) inc imulb adc ljmp call (bad) jmp sbb jecxz dec jmp ss jns out xchg aas inc ret call movb inc inc jne or loopne cmp dec into (bad) out lea jmp ja or lods inc and cmpl inc add test push dec lea mov inc adc inc mov jmp (bad) pop test xor mov fadd cmp stos inc mov lods cmp pop xor xlat sbb mov and psrlq jle in xchg pop push and inc les pcmpeqw dec dec cs mov jge mov xchg jecxz test call xor icebp lea inc add aas jo and call mov mov out jmp and aam jne mov mov (bad) std test or and cli call jmp call fdiv (bad) (bad) jmp pop out (bad) cmp pop ret clc cmpsl xor adc jmp adc add sub sbb mov add xorl mov fsubrl bound test ud1 fcompl xor dec call (bad) jne xchg jmp add pushf call pop les mov call in jne hlt dec inc clc jmp sub dec jne and (bad) cmc pop pop adc jp (bad) hlt call xchg mov std iret jge and add sub in je or mov adc faddl xor lahf sbb add movlhps jmp pop mov (bad) mov dec pop dec call xor fdiv mov sbb cmp sbb js xchg xorl cmp and sub mov dec divl scas jne sub lahf sti cmpsl fidiv adc popa call ret inc pop cld push lea movsb push aad (bad) dec test jno loope je pop daa iret lahf mov call dec daa jo mov sbb inc mov inc dec dec inc adc movsb dec mov call cmp je jbe inc pop add test sub hlt fs rclb cmp sbb inc sub mov call cmp loop lock inc xor leave cmp lahf inc cmp or cmpsb fmull adc jmp jno (bad) je cmp mov inc inc loopne stc mov adc jo jecxz gs aaa loope loop lea into call mov add test adc cli popa (bad) out lahf inc mov dec lea inc test jne lahf xor jmp pusha lods das push mov adc inc push pushf and shr inc add inc mov sbb (bad) jmp sub (bad) je lea dec cmp jb stos jo hlt add mov sbb xchg test shrl dec dec add jmp cltd (bad) mov adc call aaa std (bad) decl dec mov jo jo nop push lock mov inc mov jl xchg loopne test dec lea (bad) inc cmpsb int je add xor (bad) inc andb inc mov and adc mov pop pop dec sub int3 dec das or push cltd xor add push in jo outsb cmp scas add add mov dec iret (bad) dec add lea lahf aam in scas loopne xchg inc scas add sbb push clc imul add jo imul (bad) dec nop jnp mov adc decb cld or (bad) pop or out sbb mov or push cld dec dec or (bad) cld or loop and test jg pop dec mov push rorl mov hlt dec lea (bad) dec mov scas and mov into or shll cmp push sbb cmp sbb ja (bad) ja mov je cmp jne inc (bad) cmp push call add mov or addb js sbb push add xor mov std cmp dec pop xchg insb aaa adc dec mov jl dec mov push (bad) fild cmp adc sarb je dec mov add ss sub lock cli dec lock stos incb mov xor dec call or xchg cmp call and jmp push adc outsl pop or sub jne (bad) loop mov es roll mov pop mov mov push fstpl cmove test xchg push add clc xor add pop adcl and lock sarl subl and mov add rorl mov loope dec pop ret xor or dec lea dec cmp mov stc sbb int3 lods mov or sbb dec pop rolb cmpsb dec cmpl je daa pop lret fnstsw lcall dec mov call (bad) inc js test ja add sub jg rorb ret or test jne dec mov or mov dec mov or subl pushl (bad) je mov test jne add add inc xchg lret aas cmp cmpsb test mov dec mov dec lea cmp cltd loopne mov popl mul push push add cmp add inc dec mov mov mov dec mov call aas andl pop dec cmp jne mov movl addr16 fidivr adc adc xchg lea pop cmc sbb sbb movl mov es xchg jae sbbl pop inc add sub dec rclb or je pop ret pop dec mov (bad) ds cmp test icebp fstl ret add cwtl sti (bad) idiv loopne lea call imul faddp aas gs dec lea adc xchg out cmovbe rorl rcrl ret jmp pop sbb loop adc xchg fcmovnb add insb cmp jne loop pop rorb dec mov dec mov jo push xor clc jns out dec aas jb mov jns out cs jbe cmp imul testl daa xor int3 sub cwtl insl test mov sub mov shrl inc stos ret adc pop je and (bad) je and lea inc jo sub orl and in pop push push or dec sbb sbb adc xor cmc mov das cmc test ja pop sahf lret jae inc or call aad inc js jmp add divb cmc xchg ja (bad) dec add add insl (bad) (bad) dec cmp imul test push mov call lea (bad) arpl cs mov mov insl cmpsb jae fstl nop push lods sbb mov cli subl (bad) ficom xchg mov mov cmp mov cmpsb sbb jmp xchg out (bad) cmp push pop cmp xor lcall jmp imul call adc mov cmp sbb xchg pop das sbb shrl les jne or push add pop lods ja aad scas incl cmpsb mov imul jne leave std dec test je test dec arpl inc dec shl call cmp (bad) sub mov ds dec shl dec lea fisttpll ret movl inc jb incl scas dec sub dec mov push lock add decl dec cmp jne xor outsl mov xchg pop shlb sbb aam notl ret dec stos pop nop jno test pop add and mov dec xchg call mov mov js ret inc adc inc rolb clc scas incl or adc inc jo mov dec mov dec aad and into popf ljmp rorl mov call push xorb add jle inc test rorb aad (bad) and pusha clc (bad) jmp loopne push jo lea xchg xchg je call addl mov nop dec mov dec cmp or idiv adc jb cwtl and xchg xor mov call outsl lret adc cmp jne mov sbb mov xor xorb dec fcomi jnp lock xchg mov or hlt jecxz loope mov push movl dec movl jne js mov dec mov or aad mov sbb icebp mul mov xchg je jle shr (bad) pop and lds dec aam test lock mov arpl mov popf dec imul jle movzwl cmc mov das mov dec mov sbb push or jne pop mov or (bad) jl sub test pop mov jne out cs test or push int3 or add push xchg movsb pop ret jg mov lea call add cld adc add dec mov js pop aas adc jne adc mov movl adc add fwait add mov push sbb mov or test push cmp cmp sub lods ja call and add dec push das mov inc aaa inc jne pusha mov inc or fs popf and inc iret sub roll idiv and dec push in and dec pop dec jmp es imul adc xchg or cmp cmp call je call dec arpl jmp sub jmp pop pop xchg sbb add inc dec mov call jmp xchg popa push add lahf out shl adc fisubr (bad) ret and jne add loop jle pusha inc jnp cmp (bad) sbb xor aaa jmp fsubrp lea sub mov pop inc jne fild adc jmp int3 and push insl popa aaa stos xchg dec cmp jmp pop mov (bad) jne push sub sub lea jns push dec das outsl testb jne mov jmp cli (bad) ds dec add add xchg sbb lcall rolb add jne popa push pop icebp add push and cmp and das add sub call test dec and sbb mov lds or and dec pushf mov push add inc inc and popa adc add mov dec mov cmp sub insb into jge pushl jo movl cmp gs iret add cmp les jne mov sbb adc in iret adc out mov call add je dec fnstenv add aad ss adcb testl icebp test je mov jb hlt incl jl mov jne mov cmp lcall pop loop test idiv daa decb jne je mov and subl sbb fistl adc mov mov ficoml mov mov test jne test je mov and std jg incl inc je or sub enter dec les pop push jmp inc push mov dec mov inc scas xchg jbe je mov and mov aaa fstl call pop jmp popf loope lahf dec jns outsb subb adc xchg mov add enter and xchg dec or sub inc test mov jmp (bad) scas out shrb xchg jnp loop (bad) (bad) lret jg mov mov test cmp xchg push sub dec cmp je shll dec mov inc mov or cmpsb call or (bad) cmc push call dec (bad) or scas mov pop (bad) out xchg jbe pop loope mov mov pop mov dec test je dec mov clc pop outsl dec shr mov jo dec pop stos sbb inc mov inc sbb sbb sbb xorl inc inc and loop inc mov inc xor mov add call insl adc mov (bad) sbb fdivrs mov mov (bad) sub add sub in hlt scas cli decl test je dec mov mov ds movb mov jne add (bad) sub je jl mov lcall add inc mov inc test mov dec jb cli mov je pop mov loop mov dec cmpl outsl mov scas xor xchg jle xchg dec xchg roll or sti sbb sub clc dec sub call cmp pop cmp jle pop pop lahf cmc (bad) out and imul mov or inc and dec pop adc adc jmp daa add lea es adc push fbld dec and outsl lcall xor movl jbe aas cmpsl pop inc mov or xor addl add push mov and jle loopne add mov mov decl aaa arpl lea rorl inc test jne fiaddl gs out mov xchg test inc cmp mov dec mov jne dec call and cmp jg arpl test in add jmp pushl arpl inc mov int3 lock iret jns iret mov jmp cli adc in push call add mov stos js ror clc cs addr16 and call sbb les imul movb sub mov cmp cmp je decl push jae or and arpl inc pop add add jne outsb ret xchg lret andl aam scas sub cmp sub push js (bad) push dec add dec mov mov ficom ret call (bad) je dec mov dec cmpsb mov or mov mov lea or mov int into add test (bad) movsl dec lea aas out subb dec mov sub addl mov mov (bad) pusha inc loop daa fild push je outsl sub sub fldl fstps faddl pop lahf adc add call dec cld add std lcall jne or mov add mov sub (bad) fild dec mov dec lea dec (bad) jo icebp je dec mov mov sbb es pusha loopne insb and push push push out je sbb mov mov xchg adc mov adc aaa pop nop in add aas mov mov dec mov test or jo mov xlat sbb add inc inc mov mov imul mov clc pop jg je xchg dec sub dec cmp push jbe mov inc mov mov or scas jmp call dec pusha pop js jle mov loopne call xor add mov and in ror je mov mov push and adc (bad) sti rclb push push data16 outsl add test loop and pop dec std mov dec inc cmovbe mov adc dec out lock mov sbb outsl cmp psrld fisub adc mov push jae pop jmp mov mov xor call mov push jae dec mov mov sti mov pop cmp jbe daa add popf cmp add add std (bad) cmp loope add add mov inc js or jne mov shll pop inc inc fcoms or inc jl pop scas inc push push and jmp movsl iret cmp fnsave mov das pop jo xchg popa jmp pop mov inc mov pushl call and jb mov cli cmpsb or sub inc push dec sbb pop addr16 jae pop jns add mov sahf cmpsl ret pop mov shlb inc pop xchg ds push inc fisttp or add out fidiv mov adc mov adc flds test push lea std add iret ja mov js nop pop scas cmc out lods sbb inc mov mov push sti ljmp mov add or pop lds sbb add aas add and (bad) (bad) fdivr adc idivb ret or push mov cwtl loope pusha fcomps in (bad) cmp dec mov ret mov adc dec pop mov ja mov jle mov or xor pusha jnp inc mov push cld call inc sbb push adc inc pop out mov jb sbb adc je fnstenv mov call xchg hlt (bad) mov sbb or dec je iret adc add adc jl xor jl (bad) je adc mov inc pop add (bad) cmpl xor mov call push scas xchg pop je cmp subb cs inc push test iret dec inc enter mov jbe add mov imul fwait ret inc xor icebp adc test fld pop jb lea mov pop fsubrp cmpl je sbb das push aas inc and call icebp pop mov and jbe ret test or xchg dec mov out pop sub enter push xlat test sbb fnsave pop sbb jae ret (bad) das xchg cmp mov dec bound pop push push or push stc jb xor loope pop sbb sbb in rcrl jecxz pop test xchg cmp mov jmp pop nop jg pop sub sbb jle inc inc mov sub add dec mov add das jmp subl mov xor lret xor sub mov rorb sub sub (bad) jo or cmp insb loopne dec jne add add js dec xchg orl mov or inc lods mov pop nop stos mov inc pop mov test mov or mov js aaa adc dec inc js mov mov mov decl sbb adc fadd inc xchg mov addr16 pushf jg jb pop out mov les fistpl fwait adc (bad) mov iret iret ss (bad) jmp adc mov aam push jmp adc xor iret in loopne add dec jne call dec iret and jne xchg pop je lods inc dec sbb push adc and es lods shlb mov insb push aas push mov add xchg jns into cmp add xor sbb test fcoml insl or stos scas mov jno or dec pop std dec cmp lea (bad) and clc mov mov mov call push adc test sysret out and sti loopne out mov mov gs (bad) fimul je stos hlt test test dec dec mov test inc push sbb je fiaddl adc arpl and push mov cmpsb push je call mov stos cmp mov call fldl and push adc call add test (bad) mov loope call jmp xchg jno daa or pop mov lahf lcall mov add mov mov pop call jo or cmp adc es xlat or ret loopne push arpl adc cmp or inc into or and inc mov js,pt fwait decl dec sub mov cwtl jle add nop out js imulb adc jg das in out out cmp inc mov js xchg (bad) ds mov mov call mov mov por pop push jo sbb (bad) incl fcompl add pop mov or mov rorl jo mov push shll sub cmpsb bound sub jne xor idiv fist add shl mov or subl mov loop cmovne call dec shrb xchg loopne call jle js pushl mov in jp lahf push jne call lods add push mov adcl and adc lock decl je hlt fcomi mov or rorb imul mov inc add jmp rorb stc push pop cmovns and push sub pusha out (bad) icebp pop lds addr16 dec mov mov insl sti jg aam pop add outsl call mov ret call stos arpl sub sbbl push mov dec jo decl cmpsb sub xor into (bad) ljmp ret jecxz pusha rol ret jmp inc pop add and pop mov out xor outsl xchg (bad) xor test je addl insb clc add (bad) notl mov inc rol cmpb psubb roll mov lea nop dec lea movb fisttp fwait and cmp (bad) (bad) jg mov dec in popa push lock js sub jmp cmp dec adc (bad) mov jb cwtl sub add jge call lea add (bad) sub (bad) rclb mov xor cli cli in dec movl cmp arpl mov je rorb mov call sti sbb or jo cmpsl cltd cmp and add test dec xchg in jo jbe jne stos dec lea ret iret jo mov pop adc mov shr test (bad) jbe cmpsb call icebp imul sub mov add cwtl push scas add or inc pop dec loope add or loope jne movzbl sub (bad) popl outsl add fdivr adc cmp inc (bad) lahf fbstp adc in sub fdivp mov jmp scas addr16 jle or inc or push dec add jg mov jns addl movsl sbb or push pop pop and mov jo mov mov sub inc mov rorb push inc mov cwtl call or pop pop push jg shrb call movzbl add push push push mov iret inc mov and test maxps sbb pop adc add push cmpsb mov dec lea push in adc cmp lea scas repnz out (bad) into and adc je clc jg rolb inc and xor into sbb test xchg pop lock jge jne and daa je and ret sbb xor pop jne incl mov dec (bad) aad mov outsb stos fcoml and xor dec xor icebp xor clc adc test push nop sti pop or ret rcrb pop fsubr sub jmp adc or mov pusha mov popf jge mov outsb mov orl push cwtl or outsl push mov out daa imul push out andb mov fdivr jle popa pop clc jmp rorb popa fbstp mov push pop sub insl mov inc mov fmull je mov outsl cwtl stc dec dec lret push lret fnsave inc mov loop lds fadds xchg mov mov das push or mov addr16 sub mov xlat mov push cld call int3 ds inc push sbb mov lahf push mov push push inc mov out call mov xabort jg mov mov je test jne dec test je aam movzbl hlt or test jne imulb in out cmp cmp push xchg js mov inc (bad) sbb loop jmp in ret mov mov adc add ja dec loop or lea ja (bad) fidivr jmp (bad) (bad) pop push fisub and push pop (bad) ret fldcw aas out push aaa pop loopne nopl stos or jmp mulb dec lea xchg pop das test stos ret mov das iret cmpl mov movmskps push inc mov out and movb pop mov outsl test or push ficom test mov (bad) fstps fimull stc (bad) (bad) fistpl (bad) (bad) mov pop and jecxz cmpsl (bad) push mov sub nop insb add adc in sub leave xor inc cmp add adc xor xor scas xchg movl sarb mov fucomp xor ret call adc add nop scas jo ljmp fcom rcrl push dec mov pop inc xor sbb mov js xor pop adc or daa push xorl out mov sub dec cmp je adc xchg mov decl incl xor dec mov movl aam inc pop lea cmp inc lcall and push sbb inc and ja dec mov dec mov mov inc sbb loopne (bad) dec dec imul call cmpsl push je and cld fsubrs push adc jne jmp aas fbstp rclb mov dec mov dec call or or enter enter dec add cmp jne inc cmp add leave dec lea dec mov mov test je cld decl test clc cmp jo rol aad je push dec mov mov sahf (bad) and fsubrs and push adc mov dec mov adcl stos testl (bad) xor or or pop inc mov mov insb and jmp popl ds (bad) insb fnsave adc (bad) jle add jmp iret and icebp jnp xlat push adc add and stos bound and aaa mov popa dec ret mov je push jecxz and xchg inc xchg sub mov jns out jl push inc clc inc lock mov add jnp lahf dec mov cmp fbstp dec xor fcoml into dec mov je add mov dec mov call (bad) cmp je fmuls call jo jne (bad) (bad) rorb call sub add push (bad) push dec in into clc sar pop repz scas orl shrb cwtl add cs jg or fldcw testb dec mov jne popf jge xlat call jne sub pusha xor in sbb fwait cli imul and jmp xor fdivrl call adc cwtl rcrl call dec mov es adc (bad) lea sub hlt or je mov test dec or cmpsl decb mov leave pushl cmpsb in or inc dec inc movzbl inc not (bad) sbb inc and je rcpps cmp push jne lret pop incb je cmpw inc dec icebp xor outsl or popw popf test into add jno mov jg dec lea mov mov test je inc mov (bad) (bad) decl je inc mov and cmp sbb and add inc mov loop mov mov inc or inc test cmovne inc and sbb loopne je test cmp test push push jg,pn test loop fidivrl or adc incb nop inc test je ds sbb hlt inc js scas push sbb mov dec imul outsl movsb (bad) (bad) jl (bad) incl mov les adc arpl add (bad) push cs add push jl fisttpll je add jle xor sub or test dec (bad) xor jecxz adc jmp mov sti adc dec js pop adc iret arpl xchg daa lahf mov pop repnz (bad) call cmp outsb ljmp orb test jb push jmp dec jmp sbb ss adc mov int lea inc mov and pop sti add dec inc je mov sbb xchg xchg (bad) jg jg ret or fwait outsl ret add mov xor repnz jne xor mov test and dec pop pop ret sbbl pcmpeqb xchg test mov dec je push mov decb sbb sub sbb call dec push dec and stos cmp arpl call ljmp adc sbb out inc in sbb push sub outsb mov cli push ret push loop ret arpl in xchg or add std inc adc stc cs mov or add popa test jne fidivrl jge bnd jno jnp movsl aam push or or scas adc iret mov mov adc add (bad) mov dec daa nop or sbb lea dec lahf (bad) inc aaa and iret lahf test je mov shll imul pop pop xchg test inc lock fist jg icebp clc add scas test test add xchg mov mov bound les pop dec mov or dec jg dec (bad) es xor dec mov dec mov or or pop push rolb les arpl cmc pop dec mov jle dec push rcl (bad) pop lds mov rorb mov (bad) cmp jbe out add push inc mov mov and out les push (bad) loop dec jmp jg or cmp jno (bad) ficom mov add cmpsb ljmp int xchg inc add pop je xor call in or sbb out fisttpll sti add inc cmpl lcall dec and dec add xchg or lock (bad) mov repnz cmp call stos cs add test dec pop add dec mov call test (bad) fisttpl cmp jne test call lea je ja ja je cmpw je mov ret add push decb mov aaa mov sbb movsb call icebp data16 add adc fcoms out lds dec mov adc rolb adc test push aam daa push jmp (bad) pop je sbb push dec icebp test push adc mov test cmc dec (bad) jmp adc jl inc test adc adc call shll rcr push dec add call loope sbbb mov psadbw bound (bad) jnp test cmpl jne pop outsb test mov mov call pop inc or add inc inc test pop out out das je (bad) je dec cmp jbe inc jbe test (bad) adc dec add dec sub pop leave jge mov and das mov add sub xor call lds jno test fdivrs test jne movb pushf pop fwait add inc nop std call (bad) mov mov push cmpsl je inc mov dec iret sbb call dec je icebp xor mov fs inc mov add jmp sar lock adc jmp mov mov push push dec sub sahf xor mov pop and jle pop jmp or stos dec mov (bad) dec mov repz mov fisttpll or add jecxz incl sbb inc mov lock mov mov sbb dec xor lock pop inc sarl lea leave (bad) dec fwait call and xor das mov sub das ret xor pushf aam mov dec mov into or cmp dec imul sub (bad) xor addr16 mov sub es aas add xchg jge mov jno inc push aad pop add clc sahf insl push ret out bnd push xor jmp inc xor push data16 js xchg jmp jg xchg sti mov je jg sbb jne sub jb and mov sub mov cmp cmp dec pop add incl cmp je pop mov add sbb sarb call dec jne call in adc fld1 jbe and mov adc adc bound mov call jae xchg int3 test inc mov aas aas rcr nop xor dec mov call mov jne shlb add push and and orl movsl mov dec lea call bound inc push cmc in add dec lea call mov (bad) mov mov dec mov jne jmp fisttp pop pop movb sub je movzwl (bad) (bad) pop incb or inc add (bad) jne lret inc mov out mov mov add inc loope call cmp lea outsl mov mov movb (bad) jmp pusha pop add mov sbb adc (bad) dec pop dec mov call dec add inc mov inc or add sbb or dec iret dec dec or mov cmp cs mov xor mov jg xor dec mov scas (bad) aas jmp mov dec add dec cmp dec cmovb rorl dec mov add push adc pop jbe add bound (bad) les sub loope pop add pushl loopne add push stc iret call aam pop dec lea call out out xor mov je test sti dec lea cmpsl mov pop pop out inc cmpsl xchg loop push xor std mov mov pop dec sub dec sar dec jl xlat clc sub inc test push mov mov lds inc pushl push lea imul dec lea dec cmp mov iret pop xchg jae aad call scas mov mov dec mov xor call and clc xchg push les mov xchg mov (bad) xor dec mov call dec aas lods add call jnp lahf shr das xor inc xor and mov inc cmp clc dec ret das push push in mov loop dec mov inc lea js and or adc sub incl lea dec arpl adc lea dec mov dec add dec loop test and call lea dec mov dec cwtl dec add dec mov and je loopne jg dec sub dec mov adc xor incb dec mov xlat inc pop pop mov test std add sbb incb ja jo inc mov stc cltd test (bad) dec mov pop inc mov mov in push mov and movl and call addr16 mov push add js aaa iret ja or je hlt lds movzwl (bad) aad decb mov (bad) cmp jae xchg dec lea pop pop pop adc ret nop loope or in push add shr inc loopne (bad) cmp cmp sub dec mov dec sar inc mov out (bad) jbe sbb aad rorl icebp in or call mov jae and add jns mov lcall xor out pop dec mov stos sub push sub or mov dec mov mov inc cmp mulb es dec mov call xor icebp into cmp (bad) sub dec add dec add dec cli out fimul dec mov outsl jne dec lea call (bad) jecxz inc sub add push push dec dec rolb add (bad) sbb lea dec jne dec mov je out sub out dec mov (bad) jg clc aaa fldl call cli dec sub dec sar (bad) jo sbb inc mov dec cmpxchg rorb lock inc and stos hlt (bad) hlt call mov ds inc (bad) out fidivr lock sub dec sar pop or (bad) aas push inc jne dec mov dec cmp dec movl xor (bad) jg mov dec lea dec lea and cmp mov jecxz cmp mov dec lea mov dec mov mov pop cld fidivr push adc dec cmp ficom add xor ljmp jg lea dec mov call dec mov add je dec fstpl js add jbe outsl inc decl jne inc clc or call enter aas pop add xchg mov sbb xchg mov dec mov dec mov jmp outsb mov cli call push mov test xchg dec arpl dec lea fld1 mov pop inc pop jo scas push je int xor dec lea lret adc neg sub inc dec mov push xchg sub test jne dec add jmp aas jle fisttpll cmp sbb and or jecxz and mov dec sahf xor mov dec cmp jne cmc out out scas mov call sub dec mov sub lea mov outsl xor mov push cmc pop push or jmp sar aaa add dec mov inc mov dec mov dec lea pushl lock jae fiaddl inc sub call lea mov pop xchg call add mov stc add (bad) out pusha adc push call ja cmp lea or out push adc inc call adc lea mov call cltd mov sarb ret call jmp mov adc push movl enter inc std (bad) call sti pop inc int (bad) ljmp add lret je (bad) mov outsl loop cmp dec mov test je pop mov push add pop popa mov or mov cmp je call dec inc xlat inc or sub mov add jmp mov orb xor inc jne decl (bad) adc mov dec mov dec test je icebp xchg rolb mov xchg and jae xchg mov cmpl lahf jns into push lea daa jecxz pop mov or mov call lret arpl data16 ficomp sahf bound aas into sub sub or sub fdivs dec inc inc cmpsb (bad) int adc adc lds jbe add and xchg testb cmp enter shll out cli add lods call adc out leave dec hlt (bad) lahf fild jmp pop jo add push cmc je test mov or out or (bad) inc mov sbb rolb inc cmp outsl jmp pusha aaa jnp inc mov sbb jne or pop jp cmpl int pop add test cmp daa popf and popf add jo ret lds push pusha test mov in xchg pop adc dec add cld mov movl push or adc xchg lea cs daa push sbb pop dec mov dec (bad) and add pop add stos or mov mov shlb dec cmp pop inc dec mov mov cmp sbb mov rcrb les movl outsl dec mov inc mov (bad) cmp cmp jo add test add dec or leave paddsw outsl call add test and jne push and call stos in push mov inc xor les adc mov (bad) fnsave push mov dec adc mov or ss lret or pushf pop adc or je ja call shrl fisub jg sbb shlb push pop sbb mov xchg out mov dec adc divb (bad) js loop call popf mov pop popf adcl dec lea cwtl jb (bad) dec mov jg in fdivs repnz lahf mov cli fnstcw dec ret sbb dec bsf jge sbb mov pop mov cmp or fcoms jbe add int3 fldl shrb je jb adc incb xchg mov xor scas (bad) scas mov lds dec and test inc xor push push dec lea dec push add fs or lock jne sub scas fidiv mov jo call mov mov jns adc push mov out dec stc add test jle cmp jae jecxz movzwl sub cmp ja dec mov or insb dec bt jb wrmsr (bad) fdivrs add pusha sbb in dec icebp mov aam call enter test cmpw cld scas ret add movl add pushf nop mov mov sub dec das icebp out or inc and inc push xchg or inc inc inc mull dec dec lret lock fdivl aad adc mov inc or in addr16 cs pop stos jb inc imul and jnp mov mov test sbb daa add mov loope bound int sbb mov pop pop xchg sbb call inc mov sub notb xchg pop rol xchg sbb loopne and cltd mov and test sbb and std pop push lds sbb add sbb sbb adc (bad) loopne cmp sbb inc stos mov outsb clc orl rcr je sub or mov lods mov pop mov js inc and mov test jle cmp ljmp mov shl in add mov dec add jmp jg cmp dec jmp dec add testb je mov mov cmpl jne inc mov inc test je inc paddb mov lea pop fnsave ret add fwait dec mov sub or xchg sti (bad) mov cmp sub stc mov je mov xor adc push add test cld fisttp cmp ja std cmp mov (bad) push jmp jne mov pop adc rol push pop (bad) idivb inc jne je jmp es mov data16 or (bad) loope xchg push or cwtl inc fs or cli push jmp lahf into mov cmp adc mov (bad) out (bad) jle jmp ds mov add jmp mov pop inc pop adc test push enter mov fist adc sbb sbb sbb (bad) out outsb or aas hlt push lret fild cmp addr16 inc cmp bswap xor and push popa cli (bad) and add movsb ret nop sbb cwtl pop xchg cmp push or xchg test push inc pop xchg sbb ret dec mov movzwl pop test scas decl je icebp iret cltd stos (bad) jg outsb add mov add cli and test or enter add jo mov sub dec outsl cli ja in iret adc out je movzwl lock sub (bad) push push cmp cmp je add mov (bad) aam je add fldcw fwait rcrb ret dec mov sbb push ret je sub mov and cmpsb dec sub jmp int3 out orl dec lea jmp fisttp les sti lea call test insb (bad) into mov stc sub adc fwait jae jne loope mov in xor jmp call loope test or sbb or sbb stos fsubrp mov jmp call movsb es xor dec mov or ficom call or mov jmp int xor inc pusha add in fmull mov fldt adc cmp adc fild ficom dec mov rorl repz add (bad) ret data16 lock mov inc mov mov mov mov jg mov je mov shr dec decb lret pop mov repz (bad) mov cmp je mov mov pop jmp mov mov or sub add (bad) mov shrl add scas mov (bad) add cld xchg test add mov inc or mov cmpsb aam push and xor cmp jl decb inc dec cmpl push sar jne dec cmp jb ja out mov push lahf jne mov xchg xchg push pop test jne xchg mov test mov jle je or (bad) mov dec pop out out ficom daa dec mov or cmp je cmpsl mov cli out scas mov cmp insl dec mov rorb popa and cld ja dec test jne xor jmp iret adc mov mov jne jmp dec mov adc and out into jge pop js call dec inc jmp rcrb cli (bad) mov jmp lahf mov add pop inc adc adc jb fsubrp loope xchg pop dec lea mov dec dec pop in sub mov add cmp xor aad and fisttp call in or ret sbb adc mov and inc les es adc xchg test cmc inc and aas jno orb into das add inc arpl jp mov (bad) cmp cmp ret loop push add and xchg incl jbe (bad) mov add inc mov dec mov inc (bad) and cmpsb push shlb or or lock sbb push orl jne pop aad add cli out cmpsb xor test sub pop jo test add dec mov xchg sub sub (bad) cmp cmp and add add es or or push je loop je orl aaa loopne fs mov (bad) jne dec mov dec mov mov and (bad) je dec xchg arpl cmp jo push sti mov xor ret lret dec mov aas mov mov mov dec mov dec mov sbb jle mov dec adc pop push mov xlat mov dec mov je psllw mov lock ja fcomps hlt sub or inc xor jmp and push cmpl sub dec adc ja jbe xor test insb (bad) je inc mov das inc test jne jl bound roll mov mov inc push fild fidiv dec cmp insb or push jo scas orl orl cmpb cmp out cmp pop ss push (bad) xchg sbb je inc test jne sti fisttp dec js mov xchg sti mov fwait inc or push aam popa xchg call dec mov je dec mov push je inc pop mov jo cwtl pop mov xorl js mov mov das push cli lds mov jb je or cmp dec (bad) js jecxz mov sbb negl scas jo fisttpl push dec test dec cltd jo out je cmp add imul inc js mov mov add rorl dec pusha das test outsb mov data16 imul sub imul sti pop movsb jo mov dec mov jmp cmpl mov inc jb cmpsl fwait cwtl lahf inc xor add mov fucomp pop (bad) mov inc xor add dec mov fstpl and adc je mov jo pop xchg dec mov sti addl aas dec mov jae repz out pop dec mov xchg xchg mov test dec inc sub fldl int mull add jmp or (bad) jp xor out sahf arpl incb pop add sbb jmp mov mov adc adc add clc xor xor mov pop dec mov cwtl verr movsb mov adc inc xlat jno cwtl jno dec adc inc js mov and xor gs scas mov (bad) xor jno std int dec xchg add and and sbb iret clc and push test dec mov test test (bad) daa push cmp and out jo mov push mov mov imul psubsb aaa jl jmp add jmp sub dec out outsl aas inc test xchg rolb js push ret dec lret mov sbb lds jo mov pusha push cmp movsb push movsl cmpsb adc (bad) sbb dec push add mov inc mov in inc (bad) mov sbb jmp scas or in jle mov xchg andl je inc arpl int3 and icebp inc jo int out mov adc mov jmp dec mov xchg popf andl ret dec adcl popf jge cmp imul pop pop or add fild inc (bad) ljmp mov xchg dec mov inc pop int3 cmp inc seta xlat out cli incl clc sbb xchg rolb jne push pop fadds jnp lea in mov (bad) xor push push ficomp dec mov test mov rcll pop int3 or out lcall ja dec cmp jb ja test call adc movsl fistp add icebp test jne mov inc pop inc mov pop inc call and je jns jge adc jo adc cmp outsl dec movl pop enter mov test inc add ss popa push inc cmpl and hlt mov mov push inc adc dec imul inc dec jg shl mov test cmpsb xchg dec xor or or aaa adc nop pop sbbl push cld popf add test xchg dec mov aas incb lahf lret rorl dec and add insb leave je dec lret out (bad) outsl dec mov rorl je fcmovnb add jge dec dec mov mov sti jle movsb dec push int3 out fstpl je jmp inc or leave cmp jmp outsl pop orl in loopne lea pop adc and or push inc mov pop pop (bad) icebp push mov add add je into inc cmp in roll (bad) fsubrl stos cmp pop sbb inc add mov mov mov mov jecxz pop add dec test cmp ja dec mov dec dec mov dec mov xchg add dec (bad) ljmp inc test punpcklbw jg test dec mov push mov xchg mov inc lods mov sbb sbb mov xchg test data16 (bad) mov mov add lret dec mov movsb fildl int jg nop out jo (bad) or js push jmp cmp out cmp in dec addr16 icebp out aaa jmp mov pop js or dec mov outsb jmp mov or roll dec pop sarb pop jo pop push adc mov loope dec xchg sub movl sti mov dec mov dec mov inc int3 frstor jo or sbb pop rcll adc js sbb and and xor jmp adc cli scas fist adc (bad) call dec mov dec (bad) cmp mov loop mov push inc mov add cmpl mov pop pop mov push inc mov ljmp xchg (bad) fild divb jae jne into fcos push pusha mov test jne test pusha aam add push push xchg aam adc pop adc scas dec mov call ret lock in cltd mov jp call jmp daa pop mov sti cmp into jge xchg pop subl (bad) mov (bad) negl clc fstps shr dec imul outsl and adc sahf xchg adc sub mov insl and inc mov jmp cmp add incb pop mov imul adc lret add and dec mov les jp inc cwtl mov sub ret les add jb lcall lret outsl sbb adc mov sbb jp jo inc movq push pop mov mov pusha inc in push inc mov and cltd js xor mov movsb add ss call sub mov outsl mov cmp je cmp je aas cmp loope jae inc inc push inc mov add add push inc mov sub js xor iret xor out call sbb or fucomp pusha pop call (bad) pop add movsl loop inc mov mov pop sbb (bad) sti call pop call xor lock je les sti (bad) int3 or inc cmp je (bad) dec shll in xchg or (bad) jo mov hlt leave shll push cmpsb dec pop call xor fstl jo mov add adc jo lcall outsl jb mov stc nop je mov cmp je cmp and pop je hlt inc jl es decl mov jne outsl unpckhps jle inc add jne outsl popf sbb fnsave leave insb and aas pop add mov dec xor jno push inc mov mov and call js andb fsubs pushf pop mov loopne jmp ret cmp inc pop add aam addr16 dec mov je fwait out mov pop imul and push jno mov enter cmp inc mov (bad) jg and dec mov dec mov call out rcrl sub ret sbb aad iret pop ret das push lds jmp popa das (bad) jne and cmp push dec adc je cmpl popf lea pop fsubrl push mov call jmp jbe mov fisttpl dec cmpb mull in call xor jg loopne in sub jmp ja out and dec adc stc or inc add inc adc xchg je outsl fwait push mov fstl call jo fldt (bad) and jmp jmp xchg rorl jmp insb and mov scas (bad) jmp (bad) lock mov (bad) idiv lcall rcrl inc js mov dec mov mov movl ret mov loop (bad) (bad) call pop adc mov mov mov incl sarb push pop lret push sbb fnstsw sub inc jno cmp add jne in mov dec pop add cli out loopne xchg ret test and jne mov or and jbe incb cld daa mov sarb pop fdivl push inc mov lret xchg inc sbbl bound and mov je in sbb sbb cmp scas cmp aas add sarl shr sbbl mov pop or mov daa jne and or mov add add add mov pop push testb loopne rclb je out and (bad) aas in stc adc aam call inc in test cmp movb clc add cli jg push insl and add call add mov adc inc fiadd shrb push popa dec mov inc loopne fstl jle enter inc pop rolb pop xor mov call nop xchg push xor jle dec inc pop ret dec lea add inc dec push jb je dec mov jl or and clc and dec mov aas pusha mov lea xchg sarl adc and dec mov call lds mov stos ja cld mov add add add test aam push xchg dec mov lock push pop or xor push inc enter dec mov and cmp aas jle lock sbb mov adc sbb les adc in inc iret sbb call jmp push lret call pop nop jae push mov int inc sbb add je call decl test inc lea loopne into pop adc mov stc test and inc shl stc mov push cmpsl add sti add or fsubs nop or cwtl jmp dec cmovs pop dec push ret push mov jo fnstenv dec mov dec and sub sti inc fild je inc pop call andl jne fs xchg push orb scas jmp lods jg pop gs jmp adc and mov in push or aad test jne out lea pop shrb pop add add jl fild movl mov jo pusha xor dec movl or je dec lcall jno jmp add adcl into cmp loopne in inc or jo cli and adc gs adc (bad) ja (bad) xchg repnz mov cmp in lahf mov add mov mov je cmp (bad) pop xchg decl in movsl insb and insb ret xor inc je mov cmp dec jo dec and (bad) loope sub test (bad) cmc dec and js dec mov sbb scas rorl push cli lcall mov lret jmp fcmovnb clc (bad) add push out call jp ss mov add pusha jle add mov adc dec pop cltd fstpl add jns and add pop ljmp mov data16 or push ret dec mov jns adc dec cmp test data16 xor add call mov (bad) dec cmp inc adc push lahf sbb xchg (bad) out fcompl scas imul add mov mov and ret inc pusha or add js push pop ss xchg call cmp je mov inc lods xor add pusha inc in or mov cmpsb aas (bad) xchg icebp cmp call cld pusha inc mov cmpl inc cmpsb pop adc dec mov or push (bad) xorl pop jno jne mov inc and call (bad) xor out mov mov stos jae lock mov sbb pop adc fisttp pop cmpl outsl mov daa push sbb orb push add inc and je arpl add test or mov adc dec mov je dec xor push add je mov and mov aam aad cmp inc and call popa inc mov call out or push or jo mov call lds jg lock jle add cmp and mov call ljmp mov jmp add rorb std push pop dec mov xor mov jae and pop adc dec data16 inc xchg or add lcall inc jl adc cs push add jmp lods jmp aad jne and (bad) jmp jg add arpl decl mov dec mov jmp mov inc sub cmp je cmp pop inc mov sub (bad) loopne mov call and fwait pop es dec rolb jp stos fwait subb mov mov fisttp mov aas call incb je movzwl push pop dec lea or pushf push hlt mov jne (bad) in lea pusha jne sub and mov xor add mov ja and inc mov mov adc lds lea jnp (bad) jmp mov cmpsl mov jo inc test inc lock orl xlat xchg shll and mov adc je dec lods je,pt (bad) cmp outsl xchg mov out xorb xchg mov adc sbb insl mov ja sahf outsl lea add push pop push std dec add sbb add sub mov dec outsl cltd stos mov fmull mov jo mov xchg sbbl lea icebp jbe repz lods mov mov xchg inc negb xchg pop add pop dec mov pop cmp mov xchg adc cmpsb push arpl test jne in dec cmp ja test test add or (bad) xor movsl or adc sbb mov pop dec cmp (bad) cmc push shll hlt mov mov xor fiadd das scas adc mov call add jne cli pop xchg cmp xchg in iret and int3 in inc mov call bound js sbb (bad) push dec pop push xchg aas scas xor ret (bad) push sar mov inc movzbl je cmp jne and sarb jl jbe stc test faddl xor sub dec add loope and cli inc and (bad) add enter popa mov pop sub mov jl inc fbld push icebp cmp or or push sbb mov add leave lock mov call mov je sbb dec mov push and dec mov call (bad) lcall push mov dec mov or and jmp push add pop xor loop dec sub clc cmp rorl lcall cmpsb (bad) das sete adc imul pop adc in ss loopne aas (bad) test je mov mov jnp mov inc jo arpl test sbb sub rclb test cmp dec popf cmp inc (bad) mull je cmp subb mov dec push add push adc inc sbb inc or test ret cli sbb sbb fwait or adc sub test push inc call ret jo or lea adc sub cmp inc lahf add pop pop push dec mov dec and iret (bad) test je mov in ljmp roll push dec fistpll loop mov adc je dec insl ficoml insb nop int3 movsb jg dec push clc and dec mov adc dec mov fist pop dec test call dec movl (bad) imul add jne mov cld xchg (bad) imul sub cmp adc add jle je cld add or lods test add add or mov xor lret lea bound (bad) and arpl ret mov cmpsb mov into rcrl and call pop pop jae (bad) or mov out cmp clc mov sbb call xlat mov mov out inc xchg int3 iret call addr16 sbb scas mov jmp jb outsl pushf mov divl jl adc cmp jne popa sub mov aas mov push repz push xchg orb arpl inc add adc sar popf mov add jmp rorb sub cs sahf lds mov xchg loope das repnz dec rolb xchg mov scas or add push daa mov mov sahf adc push pop push inc je insb mov cmpsl sub int3 pop sbb add leave repnz jl push loopne and xor xlat push and out pushf sub aas inc mov test jle test or ja in and add mov mov adcb sub sbb dec outsb sbb xor jns ds mov out jns xchg test addb mov fimull aas cmp (bad) insl and call xchg mov cmp mov aas dec mov dec mov les test xor aam (bad) mov push push add rorb in jmp sub xor cld aas call dec cmp je rorl add sub inc jge cwtl inc mov jo loop dec ret dec mov cmp dec lret loopne mulb clc jne call cmp sub adc sub push leave add fld1 scas or aas fisttpll mov push xor or leave (bad) ficom jmp ljmp add out lea or lcall lock lea rorb shl dec (bad) loopne xor movl std pop sbb (bad) (bad) decl cwtl push push (bad) sbb add enter push clc mov dec lea xchg call mov mov cmp leave jmp shll movl (bad) mov test jne mov pushf dec dec jl jle ret add pop jle jmp inc dec pop cwtl test (bad) (bad) adc icebp ret mov xor mov test push rcl jg dec mov dec add icebp pop aam stos mov movsb lea call cmpsb cli fcoms loopne add mov jnp xor mov jne pop add mov or mov cmp sahf adc inc or jg pop or dec mov aad fistpll test mov (bad) stos or inc pop dec (bad) adc push aas sahf inc inc jo test popf push sbb mov inc std add je mov pop ja mov push add add push pop sub ret dec add adc jmp push dec adcb arpl call jp insb out ret push and ret or add add (bad) inc mov jns mov iret jge xchg mov push insb mov mov dec inc cmc mov ja call mov sub dec rorb jno fs mov jb add pcmpeqw push ret inc xor jne push mov or or push rcll and call adc adc lea jle aaa call inc push cmpxchg lea loope and or imul gs adc (bad) mov jbe call adc pop mov push jl or push or inc dec fs (bad) (bad) push jp xor jne aam stos aaa sar adc or sub add adc jmp jb and loopne rorb jg xorl dec adc push xor or sub push push adc in (bad) fwait add inc or adc movl cmp inc jo inc (bad) loopne mov and (bad) in dec mov inc testb je inc pop fwait mov inc xor test nop add inc push or out and xor inc dec or push pop jne add movsl and ficom inc aas loop adc mov fisttp mov sub inc sbb add push ss pop mov lea mov mov jne mov mov cmpsl popa and add cmp pusha inc les lret jnp xchg xor push and std push add dec sbb cli jo sub ret add mov or ret mov data16 addr16 lahf mov or inc mov jbe jae inc rolb jb push pop mov mov leave pop jg adc ret push push outsb js mov aad sbbb test mov inc fsubrl cmp adc and sbb xor rolb lea (bad) add jl jne push add dec mov inc in mov lods ds stos aaa loope push inc add inc add call inc sbb add pop sub mov out scas mov jle (bad) lods les sbb adc mov (bad) mov dec pop adc inc les lret xchg sub roll clc je mov ret sub out movsb (bad) (bad) std jne loope ss cltd pop jge sti addl sbb and jo adc or pop (bad) mov inc clc lock orl sbb inc mov out inc cmpsb in adc out mov nop jne add call ja cs adc mov inc add dec jl inc das pop mov push mov mov in cmp movsl bound and push insl in inc lcall faddl lahf push mov aas mov je xor cmp mov andb pop sbb mov icebp jnp addb adc ret sub sarl shl mov dec pop mov mov dec mov incl mov cmpsb lcall lock and adc or decl aad pop add sbb (bad) and call test lret rcr and dec mov dec xor jo add stos sub xchg cmpl adc jo mov fmul ljmp insb jne push sbb ret cmpsl inc jns mov decb mov mov inc call test cmpsb mov imul andb fiaddl cmp ja into aam push push dec mov cmp mov push push inc (bad) outsl int3 cli push or adcb out bound stos dec dec outsl mov cs mov outsl (bad) mov cmp jno or pop mov stc call test outsb jne (bad) cwtl outsl lahf adc sub add cmc movsl roll xchg add add mov lret (bad) (bad) std (bad) jge xchg test cmp ss mov pop loop mov lock xchg xchg push stos test dec mov lea decl js mov call mov insl cmp add and push rol jo fcos (bad) push inc mov movsb popl insb jmp adc jge cld fs roll test test int3 mov and cmp daa lret popa inc bnd icebp aaa pop dec lea xor xchg xor sbb pop (bad) xchg bound jno sahf pop push jge loopne adc adc mov inc pop jmp pop jnp add clc or pop jne cwtl jne adc inc sarl mov and je pop je inc sbb and ret xlat adc pop mov push iret inc test sti and dec mov pop jmp add or inc pop jne adc xchg daa je sbb pop xchg mov incl enter es xchg cmp adc jge fwait in mov and ficoml jne arpl sbb and leave pop loopne mov jo push mov dec cs outsb test fcos aad mov mov movsb mov add rorb mov rcrb enter jg lods repz and std inc inc loopne mov jmp scas inc xchg mov mov test addr16 pop fcoml sbb call sub sbb xor mov mov add mov sbb lret push push push sbb xchg sbb mov sbb xchg sbb imul and add pop icebp (bad) mov (bad) (bad) fcoml pop push cmp pop adc push jo jg ljmp (bad) cmp cmovnp mov add mov add cmp js add ror cmpsb imul jns aam icebp (bad) or xchg xchg mov adc jle inc mov adc jmp lret xor dec popf jmp adc nop scas xchg jge sub ret xchg cmp shll decl jbe in mov mov sub mov fsubrl std call aaa jbe inc fist push mov xlat mov dec push adc xor addr16 adc (bad) aas xor push adc push push sbbb sarb rorl push arpl ja sub rorl popa and (bad) dec lea orl mov pop cmp adc pop or es test dec scas sbb and push adc pop push mov sbb add pop in or call test jne test je pusha pop add jg or scas push inc pop das jecxz dec in and je xchg inc call icebp add dec mov xchg sbbb xor sbb mov adc ja pop and ss or mov (bad) hlt mov (bad) or add xchg lds mov mov (bad) or cmpsl fs out or sbb lcall fdivl mov out fidiv mov ds in sahf into daa adc sub mov fistpll shlb xchg mov cmp mov and cld call repz mov mov dec or or xor clc hlt popa add js xor lock pmaxsw inc mov data16 jnp lods adc add ret or pop or mov rorl stos les sbb stos ret pop push pop add mov xlat mov pop cmp cmp jae les inc mov (bad) addr16 add lea sub int3 pop iret loope ljmp loop inc xor call adc add xchg jo or mov (bad) outsl insb in adc bound ret xor popa idivl add mov fstpl pop adc out xor les cld aas push imul dec mov dec mov mov lock mov inc mov sub insb dec mov je cwtl loop inc dec jle fiadd mov ret stc cmpsl and add sub inc test inc cmp mov dec clc or inc push dec mov and or inc mov lahf or leave mov push mov or je outsb adcl ret pop add scas add add adc clc fisttp stos in push adc (bad) jne adc std sub add test jbe pop pop ret jge ret shrd mov pop adc xor lcall adc pushl call mov movsb dec sub pop jg pusha lahf sub adc cli fisttpl fcomip jg (bad) loopne (bad) test je cwtl push ljmp pop orl ret es or test je in (bad) (bad) or dec clc sub (bad) jg adc inc cmp jnp jne sbb mov ret fcoml push or push jle and movsl adc inc add test lcall std inc pusha lret aaa je ret xor cld sbb add jp dec les js (bad) je inc sbbl mov jmp out push or add int3 outsl rol andb in and sahf mov in lds mov pop test dec mov orb dec mov fdivrl add adc inc mov inc dec sbb test dec cmpxchg sub test or add adc enter mov jne clc out and test je mov and test xchg pop cli out loopne or add or aaa gs jnp jg or iret cltd and or and xchg ss js leave jne test jne popl xchg cmp mov dec add mov (bad) mov or leave add or clc push pop cmpl and fsincos add or negb pop dec mov xor call clc cs setne jmp xlat pop mov jns or notl subb (bad) dec faddl out out jns mov dec lea (bad) jae shlb test and call xor test jae mov incl test inc test lret cmp popf jae adc inc mov shr sbb lea out xlat addr16 pop ret loope test mov pop fmuls loopne arpl add std not aas xor dec mov test adc (bad) aad ljmp cs mov rolb dec add push clc or aas cmc faddl roll aam mov jmp aas inc xor push xchg mov mov jbe pop cmp pop sub cmpb xchg lea inc adc (bad) mov mov fmull rolb daa and push ja fwait aam test mov addl mov jmp clc xlat cmp xlat jnp (bad) jne mov cmp inc outsl addb and fadds and dec add decl decl (bad) decl sbbl mov pop out mov ret mov call ret xchg dec pop movl pop in test adc xchg mov pushf sbb adc lea dec sub call pop roll test les jmp add mov xchg ljmp inc mov test cld fild jne add or inc add adc sub sbb test dec mov adc mov call adc push jne dec cmpsl gs or and ljmp mov xor movl loopne ret inc inc add add add inc call adc lea pop js jl enter cs ficomp lods dec or call or insb xchg mov add sbbb pop test push add sbb leave mov and inc test jne iret or and or jmp xor inc or adc jl rorb mov les (bad) out out movsb inc adc push and lcall mov jne inc push cmp es mov (bad) pop jb data16 icebp lcall dec mov dec mov jmp dec inc (bad) fildll mov mov call sub jo mov inc (bad) call and push aaa cltd jae int3 rol rol es test pusha test jne jne ss add mov sub xorl xor fild mov xchg sub (bad) (bad) jo fcompl call dec push shrl push ss cli sbb add ljmp loopne dec or push push ja call outsl nop call xchg (bad) and inc jmp sbb mov (bad) xor sti out jnp stos push fs xorps adcl mov pop push dec pop sti scas outsb sub mov sbb pop daa cmp mov je add aas loope mov roll add xchg push stos inc je iret dec mov push push adc popf add push pop (bad) fwait xor lock movsbl divl ret jne call enter jne pop scas and push inc inc xchg xchg xchg add movb ja add jbe,pt pop ret xor mov fcos adc fmull leave les or aas fiaddl dec mov jmp mov pop xor cwtl jbe aas sahf icebp adc aad cmp inc xor cmp aam mov mov and sbb mov addl or sbb cmp adc inc xlat mov and or (bad) mov add sub inc cmp mov jne test je cmp adc inc cmp nop and inc ljmp mov call push nop loope jns pop rcl hlt call lret lock mov sub add popf push cmp cmp je outsl add ret add sub lahf je cs ljmp push add inc sbb ljmp jbe dec mov jo mov scas pop cltd fdivrp (bad) add push sbb rorl or or and jne jp es (bad) mov dec dec cmp je jle cmp je cmp jne mov sbb incl mov xor dec mov rorl adc adc dec mov rcrb ret xchg mov mov test je mov aas adc jle sti jmp mov out lcall pop cmpb je mov inc push mov and add jae incl and call jmp call jmp or xor sar adc call mov mov call dec (bad) loopne daa ds jle add mov jmp (bad) imul mov add inc or ret jle lcall (bad) int xchg xor arpl pmullw bound mov or mov and and xchg mov pop aas iret push movl or inc push push xor outsl clc sbb lods xor adc fdivrl adc (bad) mov pop or std push outsb lea call mov (bad) jl xchg addl pop jno jae mov mulb mov or mov test and mov xor nop mov adc call pushf jmp lds daa repnz xchg sbb ss mov cmp outsb in pop and add fstpt pop mov cmp pop fstpt xor pop push pushf std outsl call jmp mov je xor jmp dec push shrb (bad) lahf mov mov adc mov pop adc lahf idivb add loopne jne lahf cmp adc aaa pushf mov jnp call jge ret sbb sbb loope aas sub xchg xor jb or cmp jae cwtl ss mov aas add je mov jne mov ret mov in dec enter nop fmuls xchg aaa pop (bad) fcoms and inc aas pop cmp jg (bad) push or mov je mov xchg xor out call ret mov mov (bad) out add jae mov stos daa out int3 xor fldenv lahf mov outsl sub or adc and call pop cmp mov jo xor cmpb mov lret call add dec and sbb mov rclb add add rcl adc rcrb sbb loope mov add call pop add orl mov jno jne call popf mov jg and push and push pusha adc mov adc mov dec outsl inc push pop je out or es pop push imul icebp dec xor adc outsb pop sbb mov jbe call cwtl loope mov mov cmp js sbb add pop inc add push add sub call pop and test cmc mov ret add or xchg or jb setb xor outsl cmp gs (bad) lea int3 add insb jge fildll mov je (bad) adc fcomi lret (bad) pushl je call aas dec test js pxor repnz cvtpi2ps lock (bad) divsd add cmp repnz fiaddl cvttps2pi je scas call stos pop mov jl pop aaa push cld mov cmp jne mov ljmp ljmp call (bad) repnz arpl lds call sub inc pusha cmp fstl scas xor jo fdiv mov pop xlat add imul inc push push add clc push test sti fidivl ret popl add int3 inc sub and mov mov aam jbe ss adc pop dec popf and jge cmp aam xor pop loope call inc xor cs dec cmp outsl (bad) cmp mov jnp dec cmp stos fisttpll mov pop cmp jg mov je orb ja dec mov call and pop fdivrl adc sbb subl ret mov mov jne jmp mov mov stc call jo test and and pop xchg lds out add scas mov mov and orl sbb cli or add decl call cltd das fs sub inc ret insb mov (bad) lahf into jne (bad) (bad) or call cwtl jecxz add pop sub lcall (bad) mov call cmpb jbe push cmp hlt push lea repz dec mov call add lds add cmp xor movups cmpsb mov mov inc inc jbe mov lahf adc or pop pop sub ds inc nop shlb aam outsb shlb dec mov cmp dec and (bad) xlat cmp mov or call mov and adc pop sahf in push inc mov addl mov mov xor mov inc test icebp and lods pop stc cmovl js pusha dec mov dec test je or jg (bad) jne dec mov inc mov jo loopne fisttpll je pop pusha adc js xor mov add test inc mov loopne inc divb sub push scas jge ret nop jg mov sbb dec mov gs js dec mov je inc jo mov xlat std into jno mov push jno or outsl dec out fwait mov mov movups (bad) (bad) fistpll jo test je ja cmp mov mov dec mov pop and je or je test jmp ja cmpl je test je sti inc icebp or test inc push fwait ja (bad) je inc mov fisttpl test movl push push jo lods arpl fist leave je mov test clc dec push mov cld cmp je push pusha mov xchg or xchg xor insl add (bad) aas enter je mov dec mov mov (bad) out rcrl inc (bad) inc pop dec mov loopne inc hlt rorb push inc jo ret xor xlat inc shr je inc sbb or dec mov dec mov dec mov scas in push adc (bad) movl sub sub mov lock mov pusha into scas inc mov adc jnp lret ja loope mov cld dec mov inc std and mov jmp xchg test out sbb dec out dec adc clc jbe inc pusha push dec dec pusha jmp ja dec mov jmp aaa shrb fwait pop rolb push add jnp call inc mov sub aas jne adc addr16 xor je orl shll lds sub loop cmp add pop jmp out cmpb aaa nopl add rorb pop dec mov jmp add dec mov aas push pusha jmp dec das pop push movq icebp jg stc (bad) (bad) incl xorb push popa sbb pusha inc mov mov add rorb and rorb adc xchg mov inc inc push mov icebp or adc dec mov imul add insb outsb mov push dec leave push test adc xor dec cmp dec sbb mov push push or push js mov gs (bad) jmp inc pushf shr dec mov fcomps cs xor push xor sub xlat out addr16 inc xchg inc jo jb jo dec sub je lahf ds adc enter dec jo dec mov inc mov clc lock je add adc ljmp jecxz adc adc pop cmpsb fldcw jmp sub std dec mov jmp insl pusha jmp push dec cld add dec dec mov xchg lret dec adc add mov test jne sub rorb inc dec mov dec setb xchg or mov lea test lock jbe test mov xchg dec mov rorb inc add bound test dec mov out xchg sub dec inc das jmp sub mov nop lea jbe add insb (bad) je dec pop aas and aam pusha add mov pop jne loopne push fadd inc jo xor jp ds movl jl out jno mov jmp pusha je inc cmpl lcall add xchg pop cmp sub aad int3 or or push jo test movsb xor add jo sbb inc arpl pop sbb sub dec cmp and dec cmp jne jnp xchg (bad) cmp rorb je subb out adc dec mov sti insl adc sub out mov sbb aad outsl je cmp inc jo inc jbe out hlt xchg imul and pop cwtl xor inc pushf (bad) and sar roll dec cmp mov inc or jmp push cld dec mov jmp jae dec int3 leave jb outsl jl jmp pop dec mov xor xor adc inc and dec mov fsts inc addr16 pop cmpsl ret mov outsl lock add ret push cmp aad or pop pop mov or daa push add dec rcrl mov jmp mov inc pusha jmp jnp scas pusha push xor stos leave mov mov add cmp push dec lahf subl lea test mov pop adc les xor mov call mov inc adc push cmp loope fsubr sub das sbb add add mov xor dec jo pop test fdivs mov jmp or push inc and lds jmp jmp outsl push cmpl xor add pushl push add sbb (bad) decl orb pop mov dec mov call xchg cmp sub ret mov jmp scas dec cmpl stos test lock lret inc add or call cmpsb mov mov xchg shll inc fisttp mov sub lea (bad) pusha out pop push call je mov mov (bad) xor jle test imul (bad) lock mov jp loopne sub sub add dec ret add inc jl std dec mov aaa test jne jmp lds dec mov andl mov or jns mov call rol les out (bad) cmc add sbb loop (bad) mov push push dec je pop jmp iretw stos adc out fld1 cwtl inc orl int daa cmp jne push scas dec in shr inc cwtl mov rorl iret mov mov push cmp inc inc test adc add mov inc dec dec dec adc dec sub dec cmp ja xor mov (bad) add es or add mov cmp mov sbb loopne or mov flds and mov mov dec adc push mov sub sbb mov jge sbb or dec jmp rclb call das or mov sarb and mov add dec insb sbb rolb pusha sbb xchg lret mov es icebp or mov dec lea ret sbb lds test or inc fwait and add or jg stc test jo xchg sbb sub jbe add decl push inc mov pop not xor add adc mov inc mov or outsw (bad) sbb add mov jo test aas cmovs fcomps addr16 mov mov cmp add dec pop jmp adc std xor pop insl mov ja adc cmc adc outsl dec jmp jmp out ljmp sub cmp sub fmull xor rclb adc arpl jmp adc cltd nop pop mov and shr jne aas jmp subl xchg std mov mov mov xchg pop addr16 sbb push pop ret insl mov call mov inc adc data16 mov or ja pop aad (bad) cmp jmp stos inc dec and fstpt das aas mov lahf mov add sub push mov (bad) ja call mov xchg in or inc and cmp adc pop add ja incl stos stos stos stos mov inc mul xchg call xchg xchg cmp dec lea adc stos bound mov add lods ljmp sbb inc and stos push adc sbb dec mov mov jb rclb dec test and adc cmp shl sbb inc roll xchg test pop mov dec adc jb cli mov les mov jmp add mov cmp push stos lea (bad) popa cmp call or inc ja jne aam es ja call jmp mov or mov mov popl lock (bad) xchg call mov add in cs mov (bad) and mov mov sbb cmp push xchg std lcall adc mov mov lock fimull jne in mov stos and jg sub int push cmp jle xor call lret ja mov lcall test fdivrl or lret ja lods jb jl ret add adc out sar ret aaa fs jmp loopne adc adc adc push jle mov fisttpll mov inc mov (bad) fstp sbb inc add inc sub inc mov (bad) mov add stc pushl sub inc cmp jle inc lea movswl inc out jg (bad) cmp jle sub inc mov mov leave jns movl add inc cmp je inc cmp je inc cmp jne inc cmp je mov pusha jmp jmp dec add int3 xor cmpsl xchg inc mov fisttp inc mov jmp scas aas push inc cmp mov add test xor lcall jne test movzwl movzwl (bad) out (bad) xor dec and add xor sub push and mov mov neg mov sub mov add inc dec inc test je inc cmp (bad) mov cmp mov sub ret jmp (bad) call fistpl mov push lret sub inc test jne xor jle ficomp adc push pop push dec cmp loop push inc aas mov dec lea enter test je jge pushf arpl cmp mov mov pop adc add jmp jg fcomps pop ret push inc mov stc call adc add add pop mov incl mov dec mov mov (bad) (bad) mov cmp aad cmpsl pusha push mov aas jmp adc stc repz adc and push in push add popa outsl xor mov adc daa sbb inc mov movzwl inc mov mov jg and dec or inc push movzwl call (bad) jg test je inc movswl mov icebp inc cmp jl add fmull mov cmovge inc test je movswl add xor test add (bad) sti js mov cmp mov cmovge enter sbb jns mov inc pop add mov or cs ret jmp pop pop js add inc pshufw mov test hlt and cli cmp ja rolb mov sar mov mov inc cmovne cmovne adc fcomip inc cmovne fwait cmp lea jmp push inc pop xor or mov out add insb and xchg dec call cld add cmp mov inc adc pushl loopne mov call dec and mov cwtl sar inc mov imul add inc icebp out fmull mov mov sub sub cmpsl xchg dec movl pop pop add pop mov and call (bad) and call push jne sub subl inc adc add mov mov sarl mov cli lods js adc xor ret inc xor cmpl mov test xchg es inc xor das sysret or divb shr cmp ret loopne adc std lahf pop cmp inc movzbl add movzbl xor dec mov ss aam incl call or inc jae in mov adc insb loopne inc out pop add inc lds jne sbb ficompl dec outsl jecxz sbb jmp call movsb rol push or add push inc andb jmp pandn icebp add mulb jo popa add or nop addr16 or (bad) mov subb push ret daa or xor call sbb mov std and push stc stos call mov in je cmp xchg loope std and or call mov jnp call jmp (bad) pmuludq mov xor xor adc mov repnz arpl insl push test push push dec mov inc pop mov mov inc movsb add (bad) dec mov aaa sar add jno (bad) call ret add cmp decb je cmp in dec mov sub push mov adc xor or add cmp or or push incl mov xor in mov mov jne pop test xchg decl mov inc mov inc test je inc mov mov loop js mov push jne std or inc test je pop inc cmp inc mov pusha incl or lds lods inc mov and sarb adc test inc lea cmp ja clc and nop xchg arpl add xchg stos sti lcall add inc cmp ja dec subl movsl cmp adc adc mov inc xor inc mov dec lea ret adc and cmp jg sub and sub push jle mov cmp lods sets and dec (bad) mov sti mov mov cmp je out mov incl int adc inc call icebp mov lret lret lock pandn pushl xor pop pop je cmp fnop incl (bad) incl and mov sub inc or push aad (bad) lret cmp cmp call jle call mov mov in movb jmp repz shl and inc or inc sub mov test mov out movsl sbb cmp mov inc rclb dec mov outsb add sarl cmp jmp mov or rcr mov or je sub inc and jmp adc sbb dec inc mov and call inc fdivrp mov nop aas cmp test (bad) aas xadd jno icebp sbb cmp ja into les pop sbb je (bad) decl xor sbb sbb add dec add jmp add rorl aaa jmp andb cmp inc cmovo jmp xchg and xor mov add nop dec mov mov test adc add xor cmp lds mov cmp (bad) push lods adc sub dec lea xor cmp jnp lds push inc mov fstpl xchg push outsl and in pop mov and inc adc push inc adc pop add mov nop inc mov (bad) out jmp dec lea dec mov inc cmp inc cmovbe inc mov inc add call jecxz (bad) incl ja mov pushf push jmp orb stc jbe outsl lret mov jno adc add mov std cltd inc mov xor inc mov mov mov or dec neg dec add mov inc mov jmp loop jmp jg (bad) jmp mov jg rorb (bad) push sarb jg inc lea mov jmp jmp outsl test jne push outsb push cmp dec push xor add mov decb inc mov test mov jg ja cmpsb sbb int3 add mov ds lea stc enter and mov popf inc jge inc jmp dec or aas or test or cli ja xor inc mov dec push mov lahf lock or xor inc mov mov into inc sub incl or add call cmp or clc std ja xor push (bad) xor mov mov dec jno xchg pop test push sbb inc pop scas and sbb ret sbb mov add adc xor jae stc sub xor dec in clc dec ja test mov jnp inc hlt js lea mov mov mov subl lds jmp push sub and call icebp inc fmuls push inc mov add call dec push (bad) ja sub dec mov dec mov out inc sub push ficom int loop (bad) out mov ss (bad) repnz (bad) jmp inc enter out cmp les or movzbl push leave mov mov pfrcpit2 sub fcomip std out sbb sti pushl add scas decl xchg ret inc cld fldl ret inc and addl popa mov fcmovnbe aas sbb and inc mov jo rclb mov pop jge mov (bad) push cld push adc jle inc and add je popl inc mov test je mov mov data16 mov wrmsr leave and shl or or lcall je and inc test je or lahf in addr16 add sbb or and lock cmp out int3 je fnsave or jmp mov and push inc test inc and pusha ret daa push adc pop sub ja je imul add sbb rclb inc test je inc inc sbbl shl xor (bad) loope lock call test stos or sub jmp dec in or inc cmpl sbb test push dec lea inc inc jp inc es sub daa fwait cmp dec push sub mov add dec ljmp in pop rorb ret push ja xor (bad) fdivr ja xor call jmp nop jne out test add add test out js dec sub hlt and lock adc (bad) inc jb xorb je inc movzwl cs das push rcll sub scas ret pop lods adc jbe pop and lods inc pusha push sahf lock test or in out xor inc stos je movsl xchg jnp pop sbb add xor pop lods inc loopne lcall (bad) sbb data16 stos sub dec rol pop je inc movzwl scas inc neg test loope and rol sbb insb (bad) pop sub daa test out stos ret enter lret push jo movsb xchg or or cld add pop jb neg mov in inc pusha jnp in mul pop jbe in add cli add (bad) jae add jae lcall xchg cmp add in movzbl es mov cmp mov out mov cmc pop ljmp xchg xchg loop jp mov rcrb push test scas xchg in push leave mov cmpl std lret lret and sub fsubrs stos fisubl movsb and or out jmp xchg xchg mov pusha xchg cltd or mov cwtl movsb sbb mov and or inc out stos cs mov xchg andl cld push sbb and mov dec lods cmp les dec incl mov lock mov dec lea stos add loop (bad) fistpll popa test ja test (bad) push dec mov mov pop out add inc mov sub rcll movzwl aam push in cmp fisubrl out sbbl fisttp xchg push (bad) ja pop dec mov dec mov inc movswl mov pop xchg add inc add sti ljmp and inc imul call es (bad) aas pop sbb inc and mov call mov inc pop int3 push inc push inc les (bad) sti aas adc xlat test jne call mov push and push insl inc and sub xchg jmp cwtl and insb adc (bad) hlt mov dec cmp (bad) out bound push pop test lahf out inc hlt add adc xor mov mov jo out movzwl mov decl test mov and fwait call movl mov mov pop add rolb cmpsb test adc mov mov adc in lods inc jmp jmp add xor mov push sub sbb jbe jge pop add sub and cmovns pushf dec lea inc mov lret in outsb xor sarb fldl or add pusha iret outsb out (bad) jg inc mov jmp cmp je add je push je outsl pop je lea or test call out or sbb push loop mov jo ja loop pop std scas dec dec cmp je add mov mov add jmp movsb mov out insb and add iret push mov popa loopne inc xor mov aad mov jmp and mov xchg in push jmp push xor out lret and cvtdq2ps adc in or dec add mov push sub sti je lea scas ja lea push pop mov outsl xchg mov jmp jle add xor push cmpsb and cmpsb mov cmp xchg (bad) lret add jle lea sub xchg mov inc jo pop pushf int mov (bad) jmp add lret clc add adc mov inc lea ljmp cmp cs inc xchg add ja outsl cli mov xchg rolb sete je test je and or je test je mov push dec sub dec (bad) jbe mov inc add mov or add inc mov in push loop icebp jg or test jne xchg je popa jo mov inc mov sbb mov loopne jmp add jmp add in push sbbl adcb push les sahf sbb lods jmp xchg jmp lea (bad) push pushf call and cmp push (bad) cmp js sahf iret dec mov inc mov call dec sar call push subl test add add lret lods bnd cld pop inc pop dec lea dec mov mov test inc and cmp clc dec mov dec loope mov sbb subb and orb inc testl pop js add enter adc mov xor push add push cmp jge mov jbe cmpsb xchg or test push ret jg or mov dec mov inc hlt jmp lock adc mov call (bad) xor push jg ret lds adc je scas sub jo (bad) incl cmp add xchg mov sub sbb jne mov mov je inc mov mov mov inc mov inc mov test or sti add mov in inc and inc and (bad) (bad) fildll and and and inc test movb sar movb xchg popl movups je orb cmp add or out (bad) je movb sub or sbb rorb (bad) inc add test movb data16 sub and add push lcall pusha mov ljmp add push insb ss or sbb (bad) incl cld std lds mov in hlt rcl add call sbb nop push or or loop add adc out dec or push xor aaa or stos xor mov or fldl pop mov lcall faddl push mov inc mov in aas inc xor movb mov inc mov es jne pushf sub jecxz dec rolb and (bad) mov dec mov das aas jne adc add out cmp nop dec and and call iret std xlat movl mov pop or pop cmp adc sub add push and dec andps jne push icebp cmp test pop push std jmp cmp ret movsl xor adc mov sti xchg les test cmp xor test jl lret push xor mov mov mov lock add (bad) insb jb (bad) adc pop pop pop pop inc adc add (bad) decb incl cmp adc jae mov xchg stos aaa pop or shr push nop mov sub mov rorl add rcr rolb and dec adc sahf pop int bound lea mov test mov movsb mov dec add test test jne dec pusha adc sub or call dec push add adc jnp inc icebp push movb xchg dec mov lock mov mov adc xchg pop nop mov pop jb xchg or adc xchg add call mov inc dec lea or add add dec add (bad) and mov mov jnp push sub add jne sarl or inc addr16 pop jne cmpsl inc pop push mov rorb out pminsw inc or inc inc nopl loope inc adc inc popf pop jl add pop sub mov std mov pop jl sub icebp sub iret and push enter mov mov jmp jmp dec or mov out adc cli jae inc lret mov dec inc out mov xchg xor dec in loope icebp pop pop cmp inc cmovs sub jb mov pusha inc test add shrl sub and or pusha test dec dec sub or inc pop jmp scas mov xchg xor add adc and movsl add js add je outsl enter jno push add inc and adc negl test dec or vunpcklps inc mov nop fiadd rolb push cmpw adc test pop add aam je dec inc mov and je adc movzwl add add inc cmp jmp insb dec add loopne jne decl xor mov xchg add add je sti add cmp jl mov cmp dec or jb mov and and or add sub push jge and xchg push and (bad) (bad) fwait insl call xor test mov push arpl out xchg arpl daa data16 aaa jl cmpsl imul mov movsl dec add cmp iret mov dec pop dec jb jo push inc lock cld ljmp mov jmp xchg or mov icebp jne movb sbb clc inc test mov adc dec or or push fidivrl or push es popa adc sbb cmp add mov dec add cmp inc mov jae add test ret inc das adc inc test inc mov loopne notl jne mov adc decl sub lea movzbl jecxz mov dec lea inc mov xchg dec inc mov mov add xchg push loope (bad) js fmuls mov insb pusha addl pusha das inc mov ret call jmp ja and push xor aaa adc jne (bad) jae inc mov and inc setne xchg adc mov sub mov ja xor (bad) (bad) hlt call dec arpl dec add jmp xchg lods xor and pop or fnstsw inc imul add mov aam (bad) rorb test popa inc sahf into or jge divl fcompl jb and out negb and mov shll fsubl push icebp or sarb jmp and arpl inc pop or aaa data16 push lds sbb in int3 add xor stos and inc mov ret mov and sub pop and jp enter fstpt fisub int3 xchg and fcompl loop loopne out and or dec inc xchg xchg scas mov push jae and pop add xchg data16 xchg iret iret inc xchg and push sub cli and cwtl sbb and or lock out fucompp cmpsl sub xchg mov inc test jo cwtl sbb and and mov sti sbb repnz xchg and push cwtl mov and add arpl lods sti and adc out or test je or out inc push aad psrlq pop daa adc pushf sbb sbb out inc cmpsb and int3 sbb js push inc aas xor xchg jmp mov jge mov dec and cmp out je or data16 jnp and cmp inc add and push xor sbb mov roll loopne (bad) inc pushf and cmp pop sbb xor fstps inc rorb jno jae inc and int3 add sti lods mov nop ja cmp inc inc or mov xor push inc jns mov fdivl inc xor (bad) mov jmp bound pop inc or das mov pop aaa rcl pop inc xlat cmc push imul inc xor cmp ja dec mov ljmp jmp pusha sbb lsl mov fsubrl cmp mov pop js fisubrl add dec inc mov fdivrs hlt push stos xchg stc pushl jo adc mov jo lea aad sub mov mulb popa (bad) xor imul push push lea jmp adc jmp xchg xor jo movsl dec mov jne test out or test or mov or adc adc (bad) incl clc mov push xchg sbb (bad) decl dec mov dec mov dec mov dec mov dec lea dec and mov sub inc lea dec sub daa clc inc cmp jb cmp shl clc cmpsb inc mov or xor inc cmp dec and decb jmp loopne mov jns pop faddl sbb hlt inc mov nop orl push mov add add jo pushf sar pushl mov mov and out and inc mov inc mov inc mov inc mov mov inc jne jne dec lea mov subb jmp or enter xor jmp ja adc or rorb loop dec add test pop adc pop leave mov bound push popa cmp adc imul cmp insl mov push and outsb int3 sbb sbb push cltd cmp and and (bad) xchg adc lea (bad) das cmc ljmp fs dec sbb xor das cltd fwait in nop lds cmp mov das xchg bound popa out add das xor add nop ret das gs cmp push (bad) ficomp ret push cvtdq2ps sub jae loopne pop jne pop jmp fs pop pop adc or and adc fldcw sbb xchg sbb mov xchg xor push and cwtl cmp andl out mov push ja out int3 call jae adc xor fs sbb das add and das jo or sub hlt xor fnstenv test jne sub sbb bound das test ficompl dec cwtl mov out das cltd sub jns das arpl enter das test das dec sbb shll add jae sbb sti cltd fwait insb add mov cwtl mov das div loope fcompl into sbb fldenv arpl mov das (bad) movsl pop cwtl cmp aaa imul xchg test daa dec das insl adc cmp sub mov and sbb insl inc adc cmp and ja das insl mov (bad) fcompl das or pop xor outsb xchg sbb jnp das mov repnz sbb dec mov out sub int3 fstpl or movsb adc cltd add cmp jge adc pop push into or xor popa out das leave add das cwtl cmp sub ja xor mov into (bad) add outsl rcrb stc icebp (bad) ljmp ret int call idivb mov xlat adc xchg and adc jbe dec push jmp cmp cmp inc mov in push jae pop jge adc xor jg inc xchg push dec sbb jle iret cmpb sub or call sbbl add and lock jl out xor adc push insb sub lds rdmsr mov outsl sarb push and adc adcl mov pop xorl imul dec adc (bad) or shll fisub stos push cmpsl adc xchg sub leave (bad) sbb (bad) sbb add out add ret adc push mov (bad) pop lahf (bad) icebp ret arpl mov push inc mov adc push and mov dec leave dec add stos and adc push pop dec mov cli sbb push test mov js das push inc add jo push and cmpsl mov or stos mov inc call mov je push inc call call mov pop js sbb dec xchg cmpb dec sbb stos sub fadd sbb inc mov push ja and add add call push sarb test jne push js jo xor push call pop dec mov inc sub push cmpsl pop jmp sub ret test xchg and pop jne test jne push sar inc test je sbb push test sub push test jg or inc in mov and outsb and mov jo add sbb into inc andb shlb xchg pop repz jo inc pop fldl add inc aaa add testb je outsl (bad) clc sbbl inc pop addl ret out or call push jo int ss dec lret ja mov push xchg mov mov cmc movl mov mov dec mov or daa or or inc jl es test or gs pop jle push xor jp push outsl mov add sub call roll add iret dec mov dec in or add mov iret add dec sbb sbb mov xchg push loop mov pop dec mov inc dec xor mov add mov (bad) inc jno jmp iret mov push seto stos pop jge inc mov and add scas add dec mov mov xchg ret mov inc cmp add (bad) flds jae,pn push inc rcll jae adc out ret ret add add jmp outsb mov jmp mov js jp or xor je sub cli divl add jne call popa sub xor mov hlt sub xchg xchg pop mov iret loope xchg xchg add push ljmp call pop jmp test je mov xor in pop je add xchg call add and inc cmp arpl add dec lea call adc mov setae clc and mov or and push add fs (bad) (bad) mov xor je jo mov fiadd add adc add or call pop add call push adc mov jae cltd cltd xor or add dec aam lods push out push orb jg call inc mov jbe pop (bad) bnd mov mov std xlat daa arpl aam xor xor sbb mov call mov jne les test arpl mov or xor add mov mov fnsave or out pop add std mov cltd movsl pushf aas adc cmp rolb mov mov dec mov mov xorl push std cmp (bad) out and xchg jns (bad) mov sete shr and xor out inc (bad) or jb cmp (bad) outsl pop inc daa jle and cmp (bad) in inc add daa inc mov mov xor out repnz mov push call loopne jmp push je sub fimul inc push sbb or inc mov call xor ja mov fnstsw iret or add pop inc cld test mov bswap sbb sti nop dec call mov or mov call lock jb ss inc sbb sub xor xor mov pop pop pop lock xor mov ljmp lods data16 test mov lcall ja cwtl hlt mov mov (bad) xor dec test push sbb iret mov push (bad) incl push jl mov inc addl inc addl lea js add ret inc mov xchg test push int clc test jne mov xchg inc push mov xor inc and pop inc jo cmp dec mov mov inc adc dec cmc pop aad stos cmpsb add inc sti lock sub call cmp mov dec adc inc xor push ss dec mov pop add lods push lods incl test jle addr16 adc jmp setg jbe int3 adc cmp es push in bound pop or (bad) mov movsb xor es xor sbb xchg inc pop or rclb pop inc ficomp mov iret xchg test cmp loope ret mov jne adc cld push (bad) lock and xor ret mov call dec icebp mov jmp (bad) ljmp inc pusha dec sub rorl adc or lock lock stos test (bad) adc test mov aaa rcrl call push imul add test add push cmp shrb sbb decb fadd dec cmpl xchg push in je in mov push shlb (bad) sub pop shlb (bad) sbb mov mov or jl call push adc dec sarb jl mov or test sbb scas jne cmp dec inc xor pop pop ret test cmpps and in add sahf jne xchg lods dec push out pslld jmp repz addl inc add push and jmp inc pusha enter add orb or dec cwtl mov je add jle test jne fisttpll mov lds mov leave ret data16 test jae or dec ljmp cmpsl sub mov das pop push lahf or call stos test or aas mov call pop fmull adc push inc mov cmp pop jmp inc movsl mov push mov popa loop popa cmp orl imul sub je in push test mov add inc add and test xchg xor dec mov dec adc (bad) add xchg sahf js cld je aas jno out adc sub jb xchg push cmc test or inc or mov sbb imul mov adc jg in rolb lock inc ret pop sbb cmp push mov call push add pop test jne dec inc xorl scas or xorl cmp and in stos or pop ja push in xchg les push es pop jmp jns xor and and test mov dec sbb sar rcl out push (bad) mov stc inc cmpsb xchg adc in cmp cmp loopne sbb mov inc pusha fs pusha mov or jmp add (bad) fmulp dec idivb dec pop (bad) out pop sub in sub inc jp (bad) dec mov aaa xor ret nop add add pop (bad) push add cmp aad gs addr16 les test subl push roll into dec lea adc cmp andb inc cmovg aas inc out dec lea sbb enter sub in cltd and pop inc pusha dec and and xor and and push jmp push sar outsl call or lock xor pop add mov xor lret dec xorl mov scas xchg pop dec mov or add lods mov dec pop mov add xchg fst incl add in mov xor lcall dec dec and mov xor jle movb inc sbb call popf std jno arpl lea inc mov ss and push push add mov mov add dec mov pop adc push and push (bad) xor mov xor inc adc sub ret dec inc fidiv and inc mov leave inc call mov std pop inc jg mov (bad) fcos adc (bad) pop sub add inc sarb je stos and je rolb scas jecxz inc arpl in or adc push (bad) je in add je push add pop sbb add jp sbb dec mov pop add add imull xchg add xor adc imul push sbb add adc dec cmpsl mov je xor (bad) mov push loopne xor adc add daa mov test pop call jmp incl add in cmp jp lock loop add sub pop adc mov xor sub pop add inc mov in test dec xchg stc call out dec repnz add call mov nop ja mov inc xor testb lret dec mov inc cmp xchg jne inc repnz mov dec ret (bad) ja icebp je jne push or add je inc pop and jno ljmp (bad) mov pop into sub fild aad inc bound cmpw jle aam mov fimul pop push aam loopne mov dec add add clc imull divb das jne arpl add inc push pop push push fdivrs inc shll jle,pn (bad) adc jmp (bad) ja call inc test mov out sarb mov pop in sub pop fnstcw mov sbb or enter (bad) jne adc mov dec jecxz push loop sbb (bad) jg fnsave sub mov push cmpsl mov outsl call lret sub pop xor jmp scas lahf (bad) xchg adc inc aas xor lret movb test add sub loopne push cmp sbb push sbb push add adc insb jns push xor dec out sub popf or pop and dec scas ds inc xor out adc adc rorb dec mov scas or mov jl jnp sbb inc sbb (bad) je stos pop inc xor sahf loopne mov fimul push pop and sub test cmpsl (bad) in xor dec cmp aad dec loop ret movsb xor ret dec test or dec push add fwait es pop and pop scas jle scas jns dec mov call xor std mov call pop add test mov push push popa (bad) inc adc pop cmp psubsb add xchg mov outsb mov sub call pop push mov and cmpb loopne fist js (bad) jne loopne inc add xchg inc or jo pop jnp arpl aas mov cmp xlat and xor nop (bad) pop add das dec mov dec mov add test (bad) mov out push movsb or adc shr cmp subl (bad) pusha cli mov add or sub sbb add sub and adc cmp lock dec les pop add mov dec dec roll add lock push (bad) fiaddl jne stc das dec add xor sub push outsl cltd aas jle add cmp and in out repz pop mov jmp out das xor xchg imul scas pop addr16 cmp dec jl pop cld sbb add je dec mov (bad) std sbb push pop inc subl cmpsl mov dec sbb sub and je inc cmpl sub ja mov inc adc cwtl inc mov push xchg mov (bad) xor xchg pop sub cmpsb cmpl xlat sarl jge dec (bad) loope (bad) call mov mov and out xchg pop js loop shr or je sbb mov mov dec loopne add jnp add pop push jg fs jge dec (bad) mov mov push adc and pusha jne loopne call in cmc (bad) ljmp xchg adc arpl sub xor outsl call jmp jne addb push popl dec add mov call ljmp je mov and cmp das mov pop dec sbb mov andb mov test push inc dec add test inc cmovs jmp sti dec dec aad out mov (bad) jo fdivr std call adc lcall push pop adcb (bad) js push cmc cmp cs js push add dec cmpsb cmpsl jne or mov dec xchg or jg sti adc call testb inc icebp pop or test cmpsb mov add dec mov arpl jmp (bad) sub cli or add dec arpl inc sbb in push fcos es adc jmp mov dec lea movsl xor mov push pop aam and push lds out js xchg ljmp ret dec hlt (bad) cs pop adc jb lods mov and and call mov pushf mov dec call adc jmp jp push mov xchg (bad) and ret push and (bad) sar push idiv adc mov jne mov add adc push cmpb or jns (bad) int fnstcw jmp (bad) incl je xchg call call mov out cmp adc inc call jmp mov movsl jg sub add mov lods inc add inc push cmp mov mov dec cmp jb inc adc fisubrl clc mov lock or push and sbb lcall xor (bad) and adcb outsb js test je add js jno arpl sub pop push (bad) jbe je or pop (bad) idivl or or inc pop test cmp lret inc push sbb or xchg mov icebp mov mov out push jns aas adc iret aaa adc pop fs push pop (bad) setno rolb cmp pop adc imul add mov ret test push lea or and (bad) dec sub push jne outsl dec dec ja mov pop jae shr xor add outsb js shr push xor (bad) mov inc xor inc mov mov adc add add add iret dec mov mov mov fucomp pop hlt push ret jne add inc jb fs jne sbb push push pop cmc pop enter or jecxz fcmovnbe inc aad push aas cmp push sbb test nop mov out out (bad) cmp incl jne inc mov jo add jmp cmpsb decb scas rclb jne call xor hlt shr sub pop mov (bad) mov inc pop ret adc and lahf and add jmp jg pusha and lds into push inc mov call cmp lea add mov fucom call push cwtl outsl xor dec mov mov fwait je mov adc andl mov arpl dec mov les cmpsl das or jne dec test addr16 push jg lea dec mov mov mov outsl jne pop xor in pusha cwtl lock pop je cmp jne inc jle mov push jle adc push push das (bad) call add sbb es or mov pop ja and add push jmp xor ret outsl jmp dec jg scas push sbb xor aaa adc dec mov insb and lea je jg adc icebp call pusha testb mov push xor into push push addb icebp out mov pop jne jo lea pusha mov inc mov mov mov call les mov xor or inc xor mov fisttp shrb and push orb pop adc ja test fbstp jne push mov iret adcb loope dec add ds addr16 call inc and punpckhdq addr16 inc xor push lock test inc and (bad) mov pop fwait in cmp mov cld sbb call call inc outsb push mov add je sub loope addb inc mov fdivs in dec or mov and sub les aam fcompl xor (bad) mov xor cmp ss loopne jle push inc popa out jp repnz call mov mov mov sbb call arpl add cmc pop adc adc pusha arpl cmpl cmp push ret cwtl je inc add add dec adc inc icebp call daa sahf jecxz jne pop cmc sbb add push and arpl je call and dec ret lahf rcrb fs dec das mov lahf ret fmuls and add lahf or jne xor call arpl xor leave sbb adc inc mov and mov xorb clc add push inc mov addl jne test arpl outsb add sbb (bad) rorl add out outsl sub imul test pop push sub fcoml lds add mov mov aas mov int das cmp je sbb test or or je push sti xlat call (bad) xchg test aas fiadd dec mov std insb dec pop add aas pop cmp mull testl (bad) decl sbb sahf inc js lea movl lret mov cmp and mov pusha cmp mov rcll mov or aaa bound (bad) mov and jo lcall push inc lea mov mov jne div (bad) mov test jne inc mov inc or and inc mov push negl test or (bad) jae jmp lea out pushl inc mov dec lea mov dec mov dec mov dec mov je insb and push test (bad) or dec addl add fild adc call mov mov inc andb mov incb inc pusha lds ljmp mov mov and or test jne xchg arpl xchg jle dec incb mov dec mov push adc orl mov je loopne xor pop and xchg add sub inc cmp icebp (bad) decb mov jo inc jl mov mov xor and xchg inc push rcrl mov xchg ret popf add pop leave cs frstor lds pop call outsb gs jmp jmp jg lea fucomp or (bad) inc inc mov loop je dec subps pop cmp mov sbb daa cmp pop (bad) or and pusha mov inc test xor inc mov dec push test or jg cmpl jne add cmp subl inc xor or adc scas inc lock dec aaa movsb call repz pop ds hlt dec adc je xor fs or pop frndint or btc lcall jo xor fldcw adc mov push sbb loope xchg xor inc mov jae mov add in and lock mov xor fwait pushf aas sbb xor mov xor sub cmp dec push mov add shr cmp movups (bad) out (bad) outsl cmp mulsd pop (bad) ucomisd jb subsd dec push adc ret cmpps cld or inc pop inc sub sbb lret js movq mov or jo es sbb or xor pushf and je scas cmp sbb lret jbe mov cmpsb mov fisttpl add and repz push outsb or dec and fisubrl adc lcall inc mov (bad) or pop aad roll pop and mov mov jle pop mov fs icebp rcl mov add ja shrl jecxz mov pop add fild adc add push roll leave sbb test cmp cmp dec cmp (bad) movsd push mov sub add sbb loopne lods dec fnop orl adc std mov clc jns ret lcall add cmovbe dec lea call cmp test leave inc enter adc add cwtl add mov mov dec mov xor bound dec mov aam mov xor hlt mov jne incl mull stos mov call adc sbb incl sbb mov outsb sbb mov fisubrl mov ret mov and dec add sub mov test dec pop (bad) sete rorb test cld std sbb add dec mov call test aas (bad) xor xchg sbb mov incl push jmp jl inc pop jb sbb sub (bad) adc fnop maxps sub push arpl push lock pop cld cmp mov jl (bad) (bad) (bad) jg add lock loope inc cmova or rorb icebp dec cmp inc aam push sub dec cwtl push inc jge out repz adc scas dec lods pop sbb les pop push mov mov or shrb lahf sbb cmp jmp mov sub gs inc jb mov scas inc scas sub popa outsl dec mov inc sub jg shrb adc sbb pop (bad) (bad) xor jne call jp in mov iret cmc lods sbb aad lahf mov call cmp lock mov inc adc add fnstcw add dec cmp pop jne add or les mov shrl push incw mov jbe lea sti push lahf sub or mov cmp sub ss cmp or sarb add lods aad call mov nop xor (bad) push cmp lahf pushf loope adc bound aad test jb lock add lods jg (bad) loope orb or jnp dec out pop btsl jge and adc mov add cwtl xor xchg sbb das xchg andl out loope sub je adc cmp shrb fisub cmp call cmpsb or repnz dec rorl ds pop clc (bad) fcomps adc jl sub mov stos add fwait inc call jo sbb ret nop mov sti cmpsl lahf int3 sbb sub jne call cmp add iret mov ret das mov scas mov call push ret mov xchg mov scas imul dec lret mov or dec (bad) add call mov sbb inc cmp mov add jg xchg push je lock mov add idiv adc or fisttpl call call or add ja call jae mov xadd push loope (bad) or call (bad) daa jle xchg call mov jmp dec mov cmp add outsb sub mov mov xchg adc call xchg fidivrl loop leave ljmp xor call sub fcomip call ljmp out ss or xor jp inc in ret jmp jo cmc mov lock inc mov out sbb aas and je pop xchg negl pushf cmp jo ret call xor psraw stos sbb push mov jp push (bad) jmp add in add dec lea and dec cmp stos lcall xor dec (bad) ljmp add mov sub inc sbb pop (bad) jmp push cld cmp push test dec add sub je sarl sbb cmpsb mov call jae jg (bad) dec mov jne mov sbb push add mov mov mov sbb mov inc pop (bad) mov and cmp jbe stos pop leave dec cmp je xor movzwl or cmp jne dec das cmp jne (bad) (bad) (bad) jmp mov inc mov dec lea dec cmp jb dec lea inc cmpl jne inc mov insb mov inc and rorb je xor adc or dec cmp rsm (bad) jg cmp shr push mov add dec add inc ja nop mov and or (bad) pop cmpl outsl cmp and jne mov dec lea dec cmp jb jb inc push and jmp decl add add dec in add dec mov js pop test sbb popa or sbb cmp and mov ud1 add xchg in pushl shrb ret mov jecxz aad cli add test iret or fadd dec push test sub clc mov fldl rcrb cmc aas and addsd jmp add aaa (bad) cmp jle sub aas (bad) push add mov je cmp or ret cmp add repz dec mov adc pop loopne movsl in in sbb arpl das (bad) cmp xor clc add mov jp test outsb inc call mov enter sahf jl fdivrl sbb jl add idivb and ret jl and icebp mov call out (bad) and call outsl fild test pop je cmp sbb loopne push pop rorb push cs jmp dec mov inc sub test adc jmp loop iret mov xor jmp das cmp out scas push mov sbb (bad) jmp push ds call push imull (bad) jmp push (bad) into jl cmpsl aad push cmpsb jecxz aas (bad) jne push jmp adc test dec mov add and cmp pop (bad) out decb mov push add test xchg cmpl jne dec cmpl in test add inc dec jg cmp pop inc xor jbe adc mov xchg dec mov lods pop add je iret dec mov pusha fadds push and loop (bad) mov dec test jne dec mov inc mov mov push call pop je and mov pop dec inc jmp lret push push enter dec clc add dec mov movswl test das shll je dec add mov cmpsb jg mov push negl pop mov or pop cld sti mov sbb dec cmp ret test push popa add fstl pusha jle loope ja arpl jmp xor (bad) cmp inc cmp adc (bad) sbb mov sub inc cs mov cs test push das out sbb cmpps jg push dec mov lds rolb sbb xchg shlb cmp inc mov dec mov dec mov dec mov dec mov (bad) mov pushw cltd call shlb fisttp or jne je jg test dec mov jne jo mov movzwl mov jmp add inc or dec clc aas adc adc xor push inc mov inc cmp unpcklps cmpsl or cmp push push sbb adc jne or lea inc mov sar dec xor movhps sub mov inc cmp jne shrl push jg dec add jmp jg mov add add dec pop pushl dec cmp mov jne inc test jg out xchg sbb roll inc mov dec add inc sar inc out pop (bad) inc out sbb and inc sub inc mov inc mov (bad) lcall inc inc shl inc and inc cmp inc cmove dec mov stos (bad) cmp jne or (bad) decl fsubr cmp (bad) icebp (bad) jne dec add dec cmpsb jne sbb sub loopne add xchg add mov pop stos mov push mov jbe mov jne sti (bad) lcall mov (bad) loopne inc cmp dec xchg mov dec mov mov mov lea (bad) fmuls inc sbb lock xor call jbe and pop mov hlt mov inc xor mov inc mov xchg sti sti or mov push ds mov popl cmp pop add mov inc push xor pop (bad) (bad) mov adc call add (bad) loopne sbb mov cs adc aas dec out call cli (bad) pushl leave call pop paddw push add (bad) fdivrp (bad) jmp int3 fs pop imull dec mov adc dec mov (bad) mov jb dec mov mov stc call inc daa sub xor mov add unpckhps adc test mov or sahf inc stc push aaa hlt mov dec pop push and sar mov bound lea add inc popa mov dec add addl out sub (bad) cmc push add out xor sbb es adc iret mov cmp rorb insb push pop mov and fistp sbb call adc push mov add mov inc and and test mov mov inc pop (bad) adc dec shr inc xchg pop mov js add dec jg and dec adc adc cwtl sub mov scas push aam mov cmpsb ja jne dec (bad) dec (bad) cmpl addl mov jmp xor pop xor cmp sbb xchg in xor sub sbb pushf push fwait xor sub add dec pop dec mov mov js cmp adc add adc rcr and inc sbb mov mov mov push in int add pusha xor pop or sub rorl jle dec pushf add in movsb icebp dec shufps decl add add pop test pcmpeqd pop pop test je jmp orl jl inc mov mov dec push out (bad) pop call dec mov int3 inc enter bound adc mov adc jg cli incl mov je lea call add je das ret cmp dec and lahf lcall stc outsb jb (bad) mov mov mov movb lahf push sbb out dec mov call mov int ret jb in push and sub adc shr xchg push mov push cmc loopne mov add sar adc push push add lea call mov inc sub inc (bad) (bad) jmp or or outsl scas and aam dec into dec mov mov add call or ja call pusha or test je (bad) loopne ja call dec lea dec cmp jb adc dec add dec lea shl (bad) dec loope push jecxz call ljmp xchg adc dec fdivrl mov mov cltd and mov dec mov dec cli (bad) mov jmp scas out mov mov adc out (bad) call xor inc std pop pop jmp mov dec or pusha or jmp dec push cwtl outsl cmp ja loopne out aas fmull call and call cmp pop in sbb lret call dec std aaa cmpsb lds xor shl inc adc dec mov les dec mov dec and inc mov in andb lods lods jns sbb mov inc mov jne or fsubrp mov decl call jmp les jge (bad) test ljmp fildl dec add mov xor dec mov add dec add call ja cmp ja jmp das cmp je sbb and inc mov xchg mov je inc insl pop dec mov sbb pusha out inc xor les dec mov (bad) lds test sahf (bad) jmp loopne pop out fildl xchg add mov inc out rcll mov pop cmpl sub dec or (bad) lcall and adc push dec lea or into aam ss push les pop jno xor inc dec pop sbb dec loopne inc and popa ja (bad) dec dec sar dec imul dec sar dec sub dec mov dec mov and dec sub dec mov dec mov dec sar and mov ret add push lock lock movl jne xor push shr call out inc cmp je cltd or repz add mov rol push add jmp sbb jp mov cmp jbe and (bad) xor mov testl mov add xor popa pusha call clc in add rcl and jno add dec cmp inc sti mov adc std dec mov ret jo lret dec int3 sub dec pop push adc test pusha lahf inc leave sbb lahf outsb sub fcoml lahf out mov scas orl dec sub cmpsb orl mov aad xchg push test cmpl mov andl sbb sbbb inc orl and inc pop jmp push mov pop ret add addr16 add jle mov cmp je loope sbb or jae in lret cli das or lea sbb xor dec mov call jne call sbb mov pop inc cmp je or ja stc ret ss sbb lret test ljmp push (bad) incl push jmp shrb fwait loope add mov outsl jmp aas push sub sbb inc sbb push cwtl push add dec mov call xor test sub add adc jmp and outsb jne aaa mov push mov ss dec mov mov call xchg sub inc js loopne jmp mov or je int3 arpl cli dec adc je pusha inc mov or xor or push sub and imul ja outsb out inc loope test nop ret xor xor jge loop iret mov cs cwtl pop cmp call mov mov jecxz loopne incl inc adc sahf rcrb mov jmp mov mov call jne pop push cmp dec cld sub rorb call outsl clc test inc mov add mov and call jmp add jmp sub xor jns (bad) (bad) daa adc pop and aaa psubsb call (bad) pushl adc jmp mov (bad) push add xlat call add add stos jle mov sete sbb xchg paddusw cmpl cmp xor bound call mov je mov jne jno sub jae inc mov cmp dec jbe decl call mov call cmp incl add dec test jne (bad) pop inc loop push push je (bad) std (bad) cmp fsubs sti add ljmp loopne inc lea add icebp add adc or out in cmp adc dec mov pop rcll mov push popa add ficom xor loopne mov or dec mov sbb rcrb into test mov (bad) mov and mov xchg fsubr les jne push or or dec mov scas dec add mov dec push jp jg inc add xchg push xchg pop inc and inc cmp call cmp sub fdivrp cmp mov call call jne (bad) cmpsl mov and jle cmp and jecxz or mov outsb iret xchg mov imul popf insb mov call lds sub sbb mov in jmp ja mov call sbb xor add cmp in pop iret xor or ss mov cmp lcall push call call mov dec cmp push cmp test xchg test sti mov dec add add decl (bad) not and and jg push mov cmove dec lea sar pop mov inc fiaddl rorl add sti dec cmp jbe dec lahf jo mov cmp push aam mov das and call push cmp dec fmuls in data16 xchg add inc dec mov jmp nop jg loopne hlt lea cmp call fcmovnb paddusw xchg mov stos mov shlb fistp add sub push xor icebp lcall fdivs sbb sbb sbb hlt pop mov sub in sbb sbb aaa jo rcrb cmp aad je popl pcmpeqw push lret add mov sahf jo or adc cmp sbb add leave push jmp cs lods adc or xchg lea xor enter inc dec jb and inc push cmp and inc pusha or sbb fidiv test mov adc add mov call adc lock int fdiv fcoml and adc hlt mov inc aad jo test add sub push mov adc add xor xor rcll cmp mov enter dec cmp lds dec push mov or sbb out addb (bad) fwait mov cmc push add repz push push out and push imul pop xchg cmp add mov das mov das xor or inc addr16 sbb and decl mov mov jge xchg leave push dec xor call sbb std lcall jmp pop pop sub cmp addl mov xor dec push mov (bad) sub cmp inc and mov fmuls mov sbb call mov loop inc sub sub pxor pop and jns adc add add dec xchg jb push mull sbb jb cs outsb leave enter sbb icebp or scas push das add aas jo inc out movl stos call call lea andl mov daa add cmp jbe test fwait or std dec mov pop gs aad aas ja lea (bad) cmp add adc dec mov lret adc jae cltd cmpsl and cltd inc sar lahf cmp je pop jle add jle cmp fidivl test jg adc ja je jle pop jbe rol mov fadd cmp out jmp lea ss add pmaxsw aas outsl cmp adc inc out sbb ljmp stc inc or mov inc push dec cmp arpl prefetch std cmp aad add je jle hlt cmp movups pop mov out (bad) bound jle and jg mov stc sbb loopne clc fnsave stc mov mov (bad) leave outsl cmp jbe shr jle xor test or sub sub inc mov test xor test je ja lret loop ror roll pop cmp ljmp inc ret inc (bad) cmp cmp lret aas jg add test jae and mov stc (bad) xor push xchg aam (bad) iret inc push add xor jne jo push push xchg cmp fcomps stc mov mov or xchg les lahf jg cmp lock mov pop add out xor or jne sbb inc das cmp inc adc mov cmp fwait xor inc bound mov test outsl inc adc cmp (bad) scas cmpl ret mov add ret sbb jge pop fmuls test aam ja pop add je lea add jo add inc push nopl (bad) dec jmp stos xor cmpl scas cmp emms inc mov cmp push sbb aas cmp sbb sbb mov push adc (bad) mov (bad) jmp sub push add cmp out xor scas jo orb pushf enter pop subl test js cmpl dec jo,pt stos inc and push incl and pop mov test (bad) push xorb push adc test movhps push dec mov mov push mov fdivr push ljmp pop addl frstor sub push dec push out inc dec cmove les orb cmp pop inc std arpl adc add adc push mov cmp mov je ret inc call xor testl jae mov cwtl test out insb lock mov (bad) jne jne,pn addr16 fbstp sub enter adc scas mov sbb addr16 mov sbb into or aas pop push pushl jmp ud1 mov adc and push ret outsb test call or add add cmp dec push scas addr16 jo out fucomi mov outsb test and dec pushf hlt sbb cmp ret push xor sar lods sub inc push adc sbb sbb and popa or gs and ret sbb jg cmp (bad) jge sbb pusha in or mov sbb aad psubusw fiaddl add sbb or xor xchg lcall push push xor les bswap dec fdivrs in jae and xchg inc push cs cmp das icebp fcos ss popfw aas pop rcrl xor mov mov xchg push rorl jno hlt dec incl rorb push sbb fwait jne inc movl jge mov dec movl or sub add call sub and (bad) call mov test je cmp fld1 cmc idivl adc jnp lcall push adc (bad) xor test pop adc sarb loope rdtsc ret and les dec inc mov inc inc sbb call jg jp lds test xlat sbb int mov pop aad sub dec fdivs mov in ljmp popf mov je dec mov call mov push nop jbe adc aam nop lea frstor sbb adc add outsb sbb xlat push add mov std pusha jg xchg jmp out mov movsb fucomip mov cmp dec lea test adc mov dec arpl orl adc mov ret dec lea inc insb pusha or call jge int3 mov mov call dec cmpl add mov sub stos aam decl cmp mov dec dec mov dec div dec sub out mov dec mov call push popa pop adc dec xchg (bad) cmc loop test mov jns jnp mov inc dec lea pop fistl xchg sbb mov ja dec mov mov adc xchg pop sbb xchg jnp sbb sbb adc mov xor out jmp add jl sbb inc into inc mov add adc and mov and sbb fsubrl out enter xor sbb scas sub and inc add add (bad) addr16 mov sbb push pop add inc pop jmp fmul les lea xchg sbb cmp nop mov adc xorl inc lds or cmpsb stos fcomp pop cmp call mov sbb in pop jne test cmp pop inc xchg push inc divl cmpl push push lock arpl xorl loopne or cmpl jle stos mov mov sarl cmp mov data16 cltd jne sbbl test aam cmp and jnp cmp jne out fldenv orb ret ja cmp pop lea call dec sub add sbb sub inc fsubr lea in je shrl jo add or add fnstcw add dec lock inc xor dec lea mov ljmp inc call (bad) or xchg sub in into lcall push inc mov out add xchg fsubr xchg lods sub scas lahf pop pusha cld aas cmp push xchg mov je testb add dec movl jne dec add inc and add push push jbe js jg ret xlat dec or or push notl test inc pop neg add inc jne add out dec sub xchg inc fdivr or (bad) (bad) jmp or mov inc mov jmp pop outsb adc outsl jo mov sbb cmp out add pushf pop addb inc mov in cmp inc pop inc andl je loop ja sbb roll xor decl decb roll aaa sub add nop sbb add subps mov call adc mov mov dec mov stc dec mov (bad) pushl orl xor test inc cmove inc mov call dec lea sbb add out adc xor inc popa add jmp push sub stc call jg mov dec sub and mov test dec cli (bad) decl loope mov pop sub mov test test (bad) hlt jne test xor addl pop jmp ffreep loopne or sub loop or test mov pcmpeqw inc xor jmp adc call pop (bad) and and adc mov inc mov fcos (bad) test adc cwtl mov add std je call ret aas push sub lahf aas and aad mov je dec mov ret inc inc std or daa mov pop dec mov jbe incl jbe lcall mov xor movb inc add ja mov add mov inc mov mov or lods dec add mov jmp adc sbb mov mov and adc cmp nop mov add mov xor int3 push std and mov adc mov aaa push push mov add cltd cmp dec cld scas call gs sbb pop in out (bad) mov dec lea loopne,pn xor insb je sub aad inc and outsl or sub iret (bad) movsbl outsb cmp xchg push imul inc movzbl dec sub test mov lea lea je cmp emms insb test je dec cmp push test jne inc cmp ret call jo mov jmp pop (bad) cmp xor inc add sub inc rorl xchg popl sti cs inc test je sbb adc int3 xor dec mov sub mov pop inc clc mov pop lods fistp dec lea insb and aad clc imul or call dec and pop out push movzbl inc movzbl fnsave push inc dec mov inc push mov cltd scas imul pop sub mov mov mov std mov dec cwtl dec cmp jae dec xchg cmp jae mov add movb insl clc (bad) mov (bad) mov jmp sub scas pop js rorb dec cmp outsl pop adc jb out loopne cmp test pop cmp jne clc dec mov cli adc mov inc loopne or out fidivr mov (bad) shr maxps outsl clc decl cwtl inc mov iret add inc mov and inc sar pushl clc add dec arpl dec push inc sub shl inc or cmp inc mov jne stos (bad) pop mov xor xor inc mov adc inc mov jmp add cmp jne mov adc cmc mov clc or mov lock push jo push mov jg fistpll mov add inc mov sub rorl adc and jl out xor test cmp inc mov inc setge inc cmovge jb loopne pop inc lea fcompl add out fldl mov nopl inc cmp mov jg andb sbb cmp jnp mov inc test dec lea movb jne cmp mov test xor out jmp outsl test cld cwtl dec add cmpsl dec cmp jne nop dec sete decl inc add cmp jne cmp cltd jo fstpt ret xchg and or pop xor mov ret push xor dec mov fadds dec push adc and inc pop sub jg dec mov inc mov mov es add or add dec pusha mov dec fadds sub dec jmp inc dec xor mov into aad pop xor jge fimul test popf and ret lods xchg xor and out in jmp push ja incl cmp je cmp jne and adc sbb jmp or mov ret (bad) call call (bad) mov leave decl repnz adc not dec lea sub adc sahf inc inc add add cld mov pop xchg in (bad) or mov adc pusha stos mov test leave inc push pop rolb mov test adc jbe inc adc and clc dec mov inc fldl call cmp jg fcomip aas ficomp dec mov jl mov jae shrb jne cmp bound add test movb dec mov inc movzbl fs minps jl,pt out js and jno inc xor xchg cli incb mov and dec mov pop jns jmp repnz mov sub shl fmull ret cmp jg sarb scas mov push in jae loope rcll adc mov jbe xlat sahf jne or mov rcll test decl jne dec test jne dec mov dec mov jmp jo dec mov loope mov movsl fnstcw cmpb je (bad) pushl push mov add xor movzbl inc mov cmp mov add pop pop cmpsl mov jo cmp adc sbb je decb orl adc push aad pop enter movzwl inc mov dec mov inc mov add stos scas addb cmp sbb popa inc add push mov jle scas test je je push adc ret movsb lahf ja add pusha je mov dec sub dec arpl dec lea int3 je add sub decl mov cltd not xchg (bad) push add and adc das incl insb add jne jbe xchg cs cld sbb or shr (bad) (bad) (bad) (bad) pushl rorb loopne dec mov dec mov dec add dec cmp jb dec lea dec add jmp dec mov cs dec test dec lea cmp ret ja rorb loop cmp lds clc dec mov mov add add xchg nop add lea push inc pusha lock call cli fldl mov jge add out jo inc call test (bad) dec mov call aad jp sbb lea mov cmp dec mov push add roll fstps jo ret sbb jge adc decb adc add outsl jb mov dec lea cmpl lea dec jle fsubrp mov call add sbb out and movl and dec lea cmp daa adc mov in adc add int mov add out loopne ret fisttpl adc sbb push or inc outsl mov mov inc push lea add lahf or in or xchg add sahf or jbe add jle sbb inc call std (bad) (bad) outsb add add add dec mov mov mov inc lods or xchg pusha out pop jmp roll sub cs ss iret jnp and xchg jp xor lea fdivr fstpl cmp cmp jne mov push cs and mov out outsb call rorb xor add ja je dec cmp je add inc mov pop dec ffreep fbstp push rcrb dec mov call dec call aad call mov add cmp inc clc dec movl jg mov dec mov mov or and mov jle dec lods call dec clc dec add xor test push orb jae or xor pop jmp lock push jmp dec mov mov cmpsl mov adc cmp mov (bad) lcall inc mov nop dec mov inc ret jae mov loope push (bad) adc push fdivrp lea or mov std pop xchg call jmp decl jle out popf mov dec mov aad dec mov fiadd jp pop into call adc adc cmp jae sbb pop pop jmp pop movsl mov dec cmp cltd jo or lea ds mov push inc clc push enter imul clc lods mov pop and dec mov sbb dec mov fcomps adc stc call (bad) out les fdivs lea mov sub (bad) (bad) mov sub push mov cmp pop fcom xlat jg dec call push lock jne push adc pusha push dec cpuid call pop and sub inc and jg add mov je movl hlt lret mov push test fcomip sub inc xor sbb add mov inc sub cmpb fs jns js mov ficomp jle call add lds dec mov inc sbb add or cmp es fist sub pop or sahf xor jbe sbb dec mov dec lea mov jns push or call jg fldenv xor sbb (bad) je add test jmp pushf mov scas call hlt out out orl lret fs call call xor sbb mov xchg inc nop add ret call jmp incl inc (bad) mov dec adc loopne iret test pusha mov add arpl sbb flds jno cltd js addb jo inc sbb ret sbb insb adc nop cli cmpsb es or call iret adc sub xchg mov push inc or dec (bad) adc arpl dec pop mov dec jl dec or out jmp or es pusha inc sub movl or mov mov sbb add in outsl xchg and mov or std cmc add call je or add incb pop sub mov and loope clc sub aad dec pop cld aas jmp dec mov dec lea dec mov stc add add aad or mov dec test jmp push insb repnz add insb and dec mov dec not inc pop rolb testl cmp decb dec clc dec arpl add out dec inc rolb dec cmp adc xor fild iret sub inc add (bad) jg fisttpll add (bad) dec mov jg xor inc cmp cld jmp mov jg dec cmp jbe add idivl dec icebp ss mov sti inc cmpsl add loop mov stos (bad) fwait mov dec add inc outsl stos loop sub inc aam cmp (bad) fist je clc add and fist adc add or aad mov adc scas arpl cwtl int3 adc adc dec jmp iret loope mov ret hlt in inc call adc add inc pop addr16 cmp je mov xchg mov aaa mov int3 decb test or add sbb popa js je cmp jg inc jl inc xor adc add inc cmp dec fstpt decl (bad) fcomps aas roll pop je out lods add cmp loop rolb mov jl add testl mov and jne into inc and jl and mov inc not inc and mov rolb icebp inc fwait test add pop or add cwtl mov sbb dec lea push icebp add dec mov push and dec mov and call jge xchg rorb movsb mov les shrb (bad) ljmp mov inc movsb or mov bound test aas setne inc mov dec mov shl mov sbb jp xchg adc jg or and push test mov or je or stos test call inc fadd scas inc je pop out icebp repnz call pop jb aam mov test jne mov mov js adc je inc push sbb pop pop mov orl and and dec insb js cmp cmp cltd cmpb test cld popl (bad) jmp incl mov push push decl fdivrs or pop pop sbb add adc and mov testb je fwait add cltd mov cwtl lock push adc or je push or inc (bad) mov scas xchg test inc (bad) fild fldt add mov dec scas xor jg add (bad) xor mov decl mov add sbb arpl adc and sbb xchg and jnp mov fnop xchg inc jge lock inc jle mov mov add fdivl bound (bad) test insb pusha xlat sub mov xor outsl xor push lcall push lods adc mov pop ja pusha test jne add aam push add dec fild pop mov adc add clc add pop cmp push je jge out scas mov sub (bad) or aaa add xor dec xorl cmp popl and incl faddl dec mov sarb sbb jbe push adc dec push pop call dec sbb sbb lock ja movsl mov dec jmp popf and mov or ja and and call (bad) ds adc dec lds cwtl sbb addl dec (bad) fs xor pusha (bad) sbb add and adc dec lock add call pushf sub mov inc jmp lcall and mov pop das sbb shll dec mov out inc inc pop push sbb out or or popl fcmovb add xchg (bad) fmull mov add mov out mov not dec les daa mov dec shl jbe mov or sbb push mov bound push dec test je mov adc adc (bad) jb call adc mov add jecxz adc adc sub xchg sbb xchg xor pop cmp jmp cli add ret mov mov xor mov sarb inc rolb xchg rorb adc pusha push rdtsc hlt das test add mov cmp adc ja rorl inc add in cmp xchg call cwtl roll jg add arpl ror sub cmpl add inc and pop fnstsw sub cmp inc cmp je testb add adc call jmp mov pop jb fs test test sbb sub aaa cmp enter push aam subl sbb je add cli (bad) jge cli je cmc sbb push dec mov inc mov and ljmp (bad) jne dec mov dec test jne dec mov imul mov dec lea jecxz dec sbb xchg das repnz call loope sbb call je test mov push ret sti or pop cmovbe and sub jne jmp stos fild je dec orl addr16 ffreep test cmp testb cli call dec sub jmp (bad) xor lcall add stos dec mov into orb inc and xchg mov push imull xchg jg test add bound aam mov mov adc outsb dec mov inc xor and es cmc adc add es out push pop test and dec lea dec mov inc jmp std cmp cmovne punpckhbw fadds in push dec test je or test repz jl pop add test jmp dec mov lcall add inc inc cmp jne dec mov xor cld mov es xor loop sti mov (bad) call or dec mov ja mov dec add arpl nopl dec jmp or dec mov pop pusha call add rol movsl jle bound inc sbbl andl stos add mov test jne sbb and sbb les test adc dec xor mov test je and dec out (bad) ja iret dec lea dec mov (bad) mov idiv xor cmp jne dec data16 mov call add aam and dec sbb or dec mov xor mov loope repnz inc or cwtl dec add dec jne mov ja mov aaa inc add fimul and mov and jge xor add std xchg inc and dec mov orb fsubs (bad) sbb dec mov loope icebp xor js inc mov or cli or jmp test in jmp das mov sub pop fnstenv xor aam and cltd and imul mov or (bad) stc jmp or sbb adc push out fidiv loope dec lea (bad) gs xchg sti sub movups push inc mov adc pop call outsb sub cli mov je inc testb mov jb cmp sub call ljmp add test frstor mov jne xor xchg testb je hlt es dec cmpl push mov ja movsb inc lods pop xor push pop add push sarb test daa sub je ja test mov xlat (bad) int cmp in sbb lahf cmp dec je pushf cmpb je jbe into fnsave mov mov cmp pop orl pop call outsl adc or cmp sub leave lcall and dec mov dec add call jmp andl aaa dec mov jae gs jmp mov outsl imul or adc mov push adc xchg inc fnstsw and enter outsb outsb arpl sbb out (bad) and cmp dec gs or sub gs fmul push sbb aas jg fwait jle mov (bad) adc insb outsl jae inc jo cmpsb test scas push or inc adc jmp loopne lahf mov push xor call xchg push enter das push sub mov mov or (bad) incl or jne inc cmpb fcmovnb inc cmpl fdivrp jo jne cmp (bad) xor testl call and add xchg call pop add cmp push cmp cltd and fcoml jne pop mov test mov or cltd mov inc mov and out mov add test cs hlt cmpl or xor insb loopne pop iret adc xchg in jg jbe add test negl stc call sahf je mov mov jge dec lea fstpt pop push or jne call or cmpsb and or pushf and out or fidiv adc mov cld fwait mov scas fsubrp aaa idiv decl jb adc dec cmove ja aaa lock add int dec sbb dec sub testb pop inc cmp add test xor rol mov dec add in ljmp enter mov inc shr test mov dec rorl mov cld out daa push dec sbb ljmp pop xchg std or ljmp and push (bad) jmp inc and adc mov inc shlb call sbb scas ljmp (bad) xchg ret inc test scas cmp jne jmp fbstp jno,pt push je mov xchg mov adc fimull dec add jp jmp call int3 jmp mov out shlb andl test out clc sub sbb add gs repz pop pop lea (bad) jmp push call (bad) std xor mov dec add xchg ss dec push mov mov push cltd idiv dec lea mov xchg dec mov and aad sub movb inc adc push or aaa add out wrmsr (bad) dec fcoml mov loope js cmpl inc pop das and xchg jb mov xlat add aad je mov pop mov inc shr cli inc into dec pusha rorb loop rolb out push adc call xor pop push pop (bad) lock xlat ljmp jbe push stos pop scas clc push and flds nop test (bad) (bad) out xlat adc adc cmp scas add or loope jnp (bad) jmp inc mov out mov push ret cmp test xor cld sbb lods je ja mov stc adc jno je xor aas sti mov stos cmp in sbb ficompl jmp mov or cmp xor adc je mov cld xchg and add test js movzbl loope (bad) pushl fst push add or movzbl test je cmp je fcoml icebp cmp je dec mov mov sbb pop pop ret test orl sub and mov (bad) ja fwait lock ds call rol xchg ret or nop adc jae aaa push push fsubl mov in mov movl subl je dec test je dec movl aas mov jo inc push jg je cmpb js sti jg xor inc dec dec mov call movb xor pop inc std dec cmp jo push add dec xlat icebp adc xor pop inc into push sbb arpl dec mov dec mov xchg ror dec push cld dec jb dec add or mov std mov dec cmp dec cmova dec mov call push (bad) decl push add cli add dec mov (bad) cmc dec loope push push add bound pop in jge adc pop dec lea adc mov push and dec sti scas ret xor dec mov pusha call clc xchg sub repnz loopne pop sahf imul dec je xor sbb pushf sbbl loop cmpsb add ret (bad) jb loop test adc inc xor dec fucomip mov mov adc pushf test add cmp pushf rolb pop jg mov out push lret push cs sbb mov (bad) push insl push and adcl dec rorl (bad) dec cmp ja dec cmp icebp sbb (bad) je dec add dec sub jbe xchg and aaa mov cltd pop sbb cmp (bad) add mov dec add mov dec lea (bad) aas push add cmp je ja cmp ja addb ret loopne adc test dec lea (bad) jne dec mov dec mov repz sbb call mov adc or mov add test jae xchg arpl mulb inc dec mov call jmp cwtl das dec mov sub ffreep andl das sbb je or inc mov inc sbb dec xor pusha lret inc mov enter mov xchg out jg out mov mov xchg es mov lock cmp test push add adc adc adc lds dec push lret ss mov xor push push sbb inc std add adc xor mov jle sbb push pop iret push inc dec mov pop pop stc daa or icebp call jbe mov repnz xchg jb test cmp enter sub call cmpb adc dec out iret mov push ja dec jl mov cld popa scas and (bad) call or inc jle xor je std rcll dec mov push andb mov jno bound sbbl je test push out or mov (bad) jnp adc fist mov data16 rolb je or stc call popa ret or sbb dec add (bad) dec lods dec dec sbb addr16 xchg push push mov sub cmpb dec mov (bad) mov std inc dec jmp dec mov jmp xchg incl (bad) pop inc mov (bad) sbb int3 je outsl sub (bad) dec test je (bad) je sar jo jnp je add (bad) cmpb adc mov call movsb clc enter mov and (bad) pop inc pop ret into mov and out xchg scas sbb push jne jmp int3 loopne lods clc jmp nopl mov add sar jecxz aam mov call (bad) je dec mov dec mov mov ja sbb nop push mov dec test je (bad) lret pop mov (bad) mov rcr pop iret pop aas loopne out mov je jmp push (bad) es aas outsl cmp je stc movsl je repnz test add js dec cmp je out mov jo dec leave inc mov (bad) jne add fsubs aam (bad) or adc popf loop pop dec mov (bad) lret rcrb jmp je repz dec mov pop jecxz mov dec jmp mov jg dec mov xor jbe jns dec dec mov inc push rolb je add sti mov cmp mov je xchg adc pusha bound mov dec (bad) fcompp int3 andb popa fs dec inc pop mov movsl sahf lahf add and mov push into adc or push ja inc (bad) ja aaa flds dec xor outsl (bad) mov (bad) ljmp inc mov pusha mov xchg pusha xor add xchg sub mov (bad) cmp stos jae call pop adc mov or dec xchg or xchg or pop xchg push les cltd xchg or push fldt xor iret sahf and sbb add (bad) dec add add scas sub add jmp add fsubl loopne (bad) stos dec arpl mov pop and push or and bound adc add push cmpl mov pop adc sub mov or or or and pop add pop aas add leave rcl lret pop aas xor sbb lcall sbb sbb ret add aas out mov lock pop mov lods scas (bad) call mov sbb inc inc lahf maskmovq testl rorb cmp push add test pop adc push cmpb push std (bad) adc out xchg push pusha dec cmp ud2 cmpl (bad) out incl je dec lea call fld1 dec repz jmp shll push out jne inc push jg mov nop push or xchg jg in das inc dec mov inc mov test js push sahf mov dec add pop dec mov movsl jbe adc std daa mov push pusha jmp mov jmp mov sbbb pop sub xor push leave jo xchg xor int xor nop dec popf pop stos adc add sbbb or xchg gs or xchg pop adc test or sbb pop jns pop cmpl cmp cld ljmp mov fstpl jo mov add and (bad) (bad) add dec out roll call or cmpsb lahf pop incl cmp sbbl mov adc fwait cli (bad) call push and sbb adc inc pop mov call and pusha loope sbb add shr (bad) push pop or ficompl inc or dec pop dec int3 adc cltd pop dec pop fldenv push adc and push (bad) aam sbb or jmp fs cmp and adc adc lret (bad) fisttp adc adc cmpsl sub out es pusha xchg stos fadds in aaa je pop popl (bad) and cwtl cmc push (bad) push jae std inc fnop (bad) (bad) call mov loope jae or and or imul sbb call jmp adc adc pusha dec loop pop jb push test mov push jg ret adc ret sbb into push push cs pusha dec fstps sub mov (bad) pushl xor or xor cmp add (bad) dec or cwtl push adc imul push add push icebp mov sbbl loop sbb pop loope xor mov mov (bad) mov std fisub cmpsl jmp inc cmp sbb addl fbstp outsl dec mov or inc jno int3 pushf popa sub or mov cmp xchg mov or dec cmpl push push jge adc dec call repnz sbb and dec rcrb je pop jl inc scas ret repz dec push mov fsubrs adc rcll jmp and jmp loope jmp pop jg lock mov jnp and inc jne xorl dec lea andl or and inc and xchg (bad) jmp or add mov dec arpl dec add jmp jmp mov jbe cmp jbe dec mov addl cltd push dec pop dec lea adc fbstp aam add push ret movzbl pop mov sbb popa cli mov test scas mov fiaddl stos stos pusha push dec ret icebp add push mov add shr outsl jne or ret inc inc sbb inc and jmp sub rcll shrb arpl les lea sbb adc je rclb lea add jo (bad) adc sbb push sbb fistl cmp rcrl or inc push or incl call mov mov dec and and out xor aam mov inc adc mov sbb fisttp bound or dec add sub inc sub push movlps dec and jbe pop add jns jmp dec adc mov jp arpl push icebp and scas mov mov or pop dec cmpl je and inc js adc push or aas cmp je cmp jne dec xchg and (bad) ja and adcl (bad) sub cmp je mov xor call pop and add sbb sub repz dec pop inc sub (bad) dec mov je aaa mov cmpsb loop mov rorb inc cmp ret shlb stos jne lea ljmp je cmpb add jne dec or mov arpl insb out movsb xor rcrb (bad) jbe je sbb call out mov subl es mov (bad) jne adc mov xchg aas das sub aas sbb push mov insb lcall subl push ja movsb cmp adc fidivr inc xchg test sbb push scas adc xchg ret xchg inc inc xchg fisub loope movb push dec pop dec inc scas loopne pcmpgtw aaa rclb call (bad) mov add ljmp add inc mov sbb or add mov jne or clc test jne mov lahf lock dec or ja pop dec add add (bad) shrb jmp add add sub dec cmp jl mov je add pop pavgw test daa mov jo sub mov or js sub pop mov jnp test jmp insl push mov sbb std or inc add call roll stc cli push sbb inc cmpb sbb mov in pop pop jmp or cmpb daa out pop jo mov add je call imul push add pop je or pop jne inc cmp adc sbb pop sbb xchg inc cmp mov add push mov mov adc cmc or das sbb nop mov out clc xor mov dec cmpl outsl adc inc xor mov pop pop stc movb add adc (bad) sbb mov lret dec mov fisubrl call int3 adc (bad) test jmp sbb adc nopl call pop jnp shr or jae jle out lock or mov add add out and pmullw jo xor hlt xlat test enter mov add cmpb std adc loope or call ret xor adc pop add mov and cmp je bsf and paddb sub sub pop and mov js xor jmp cmpl fnstcw decl sub imul mov (bad) movb sub movl ljmp insb and (bad) call fsub sahf cltd (bad) mov test xor ss pop cwtl std sub jmp push movsb aas aas push dec mov pop lcall inc jle mov jmp xchg pop test inc nop jmp add (bad) iret aam les jle xor movsl pop ss (bad) mov ljmp xchg add pusha movl jne add adc xchg pushf jmp cmp imull add dec mov and add jno sbb adc cld push (bad) mov mov call or jae push loop test pop shr sub daa jmp jae (bad) adc jne jo int3 add jg cli popf lods pop call lcall cmpsb mov rorb jne xchg inc inc (bad) aas cmc test je jne add data16 jg jno add inc rorb sub mov aaa rolb jmp sub je dec jg sar cmp testb jno or cli je in add xchg call mov jns fcoms ss xchg add mov leave jle aad (bad) icebp mov lea xor jmp adc push jo and je outsl jg sbb cmp xor xchg dec notb jae cltd dec aas in mov lahf xchg aas lock mov mov push push xchg nop pop jo in test lret std lods clc (bad) (bad) jmp hlt mov jne add aas cmp aaa jl lea mov popf shr or stc call sub pop in es dec mov in cmp jae scas mov mov das ds mov test test pop dec inc push ret lds push jl mov push into mov add jg cmpl (bad) pop (bad) mov lcall sbb (bad) push rorl test (bad) inc sbb movlps faddl mov mov fs (bad) push sub orl cmpsl call inc mov rorb dec dec out loopne and or inc mov sbb inc iret inc rcrb test push add movl lret xor test or orb lds xor movsl enter sbb jo pop nop pop or xor hlt cmc ljmp adc mov (bad) sbb dec mov test mov cmp ja push cld inc js lea les (bad) ljmp lret out or sub dec cmp dec cmovbe jne dec add lock sar dec mov dec lea call decb test sub arpl lcall pop inc xor adc inc femms mov push and mov push insb enter je pop cmpsb fs addb jmp outsb xchg xor hlt fwait push popf dec fcom dec pop adc scas ret sub jnp jae adc or fimul arpl jg mov lods (bad) mov jmp gs jg mov xchg xchg aas mov mov call adc xor lea dec call stos call test les sub call mov add repnz mov call aaa inc cmp cmpb add or repz clc xchg nop pop inc movzbl imul decl mov dec shr dec jnp and decl inc cmova jnp inc cmpb dec lea jne and jg mov push jb call add inc push loope mov movb je adc jo pop pusha stc call test or js mov mov popf ret mov mov adc decl test addb test je loopne dec lea xchg imull sbb mov repz pop dec bt enter bound (bad) scas ja hlt dec inc movzbl dec lea dec (bad) inc test pop xchg rolb test jne cli cmp lock adc cmp (bad) decl add and inc rorl sub (bad) xor inc addb das aam fdivrp inc js into jge test je and sti inc dec fcmovbe dec mov xlat pop adc test out add divl test xchg xor into push and scas ret js roll mov dec add mov add jmp (bad) or or imul inc imul and test out sbb mov incb adc cs out leave gs xchg je mov pop push incl call negl test add cmp lahf (bad) adc add imul cld or addb or addl add add cltd lahf inc jo lcall mov jmp lcall testb mov cltd lret inc iret sub adc sets pop (bad) aaa add cwtl repz lcall cwtl std pop push cwtl std (bad) or insl jmp push pop faddl enter push sbb sub dec cmp jne and pop std and dec sub adc jmp pusha js orb jl clc pusha es std pusha enter movsl push jp sbb cltd jnp add push jmp cmp xlat dec inc and popa js push xchg iret mov outsl xor or mov xchg out or mov dec mov inc mov dec shr call pop mov and jmp out inc push jne sbbl out (bad) call repz out jle jne lock jne int dec cmpl fld1 mulb pop sbb inc es addl jp add mov js out add imul mov (bad) adc movzbl dec mov sbb addr16 push je pop lods push jle inc xor testb cmp sub dec mov test je pop cmp pop dec add (bad) dec sub dec cmp jae fdivs and cmp jne push je dec sbb push iret aas mov ret out jae cmp jbe mov and pusha push push std push dec bound mov test stos into mov mov xor call clc sub fcoml cmp jae and loopne push lea push hlt out rorb dec mov push cmp lock fisttp andb ja outsb mov mov aaa fwait cwtl jp adc add aam or rcll leave lret outsl sub shll es push or test inc sub or mov dec mov dec mov call test aaa in mov mov jo cmpb or jne (bad) stos dec sarl ljmp clc cmpb jne dec cmp ja add lea jne jmp mov je dec sub xchg adc mov mov roll adc jmp adc fucomp and xchg orl add mov jbe mov lock (bad) frstor mov dec cmpl dec hlt pop dec mov dec mov jo inc call dec lea incb iret inc add pop add fadd mov add xor enter pop xlat jge inc xchg dec mov inc mov xor mov dec aaa dec inc mov sti jmp inc and jp jb imul sbb inc jmp scas addl push mov jo mov pop add call jmp dec out clc lea divb ffreep smsw mov lods ds adc stc dec mov cmp mov mov add call adc lock (bad) test fwait push dec fwait mov mov decb inc fwait add jmp lgdtl sbbb or or cmova mov xchg jmp dec mov popf jmp call sbb pusha movsb aam dec jl lcall orl jb js cmpps jmp adc nopl rcr mov dec adcl jmp scas pop stos leave lock cli call test (bad) sbb arpl out dec cmp ja and incl mov xchg cmpl xchg mov pop aas loope (bad) out add sub mov clc mov sar aaa lock setne dec cld xchg ret je popf pop add fdivp fwait push push je je fwait mov xchg and pop pop (bad) or je push sbb shll movsb inc adc fadd cs sbb fidivrl test push jmp out xchg cmpl ss sub pop clc inc seta lds push je in add leave pop sbb dec mov cld (bad) jb cmc dec test mov dec mov call push xor mov dec shrb aad ret cld outsb mov cmp nop flds add pop (bad) fldl2t ss incl pop or add (bad) jb and shll out cli xchg sarb ljmp iret jno or pop les call mov mov rcrl push jmp stc gs or test (bad) aaa adc je ja dec mov call inc xchg and ja je sbb fldl sti jno mov jno dec lea ss mov insl mov lahf int3 fnstcw adc (bad) fdivrl movsb add outsb sub add out pop cmpsb dec adc mov adc add (bad) out mov xchg (bad) (bad) decl (bad) sbb mov mov push or jecxz dec loopne lods pop and insl clc arpl jne or inc adc mov imul ss lret pop js jne push or cmp push pusha scas push je addl cmpsb iret pop dec mov cmp into cmpl jnp mov and movl push pop pusha js enter sbb mov push or jb push xchg outsb jne jmp dec loopne push dec lea loope dec lea ja rorb (bad) (bad) jmp pop mov loopne add rclb add inc sub pop xchg and (bad) movl je hlt lahf stos pop pushf cmp ja dec mov inc pop or mov push pushf sahf jge push das outsl test mov negb mov (bad) adc inc mov cmp cmp icebp je stos jb call pusha (bad) xor inc sub and cmpb in cmp je orb dec in add or stc lret stos sub xor add mov rorl scas and out jbe mov movzbl cmp mov add dec mov dec sub sti sbb ja mov inc enter decl nop push test ds xor out jmp mov sub sub shrl das ret jb insb inc sub (bad) dec cld (bad) std or and mov inc sbb jmp jg mov dec mov jmp clc ret imul or repz lea dec arpl mov inc inc test test sahf daa sbb jmp ja add loop test jne cmp mov sub test mov push (bad) pmuludq dec mov jne dec dec (bad) xor int mov aaa je jp in sbb xchg dec ss cmp bound int3 pop dec scas test scas inc jbe cwtl imul mov into jp pop movsl negl cmpb push add jp push add int adc invd push dec push dec mov call sbb xchg clc push sahf xchg lods jmp jmp push push or adcl inc insl xor push popa sbb cmpl or or out or incl hlt pop jl push mov mov clc mov (bad) decb jmp or sbb adc shr dec icebp dec add ja gs leave cs mov jo mov dec add add mov repnz jmp adc adc mov cli cmpl adc xchg xor xchg clc jb ret arpl mov addr16 sub clc ds test daa jge enter addl dec mov sub mov mov sbb mov (bad) xor jmp fcom mov inc push jmp inc add ss adc or mov pop add cmp cmpsb fdivrp outsl add dec lea dec cmp ja xor add outsl mov cmp cli call and add jmp mov clc jmp xchg out jne jmp and and repz mov (bad) jmp ja xor sbb dec dec cmpsl jmp xchg mov inc mov xchg mov push (bad) xor (bad) jle mov cld cs xor clc call mov and and aaa adc std test pop rclb push sbb push pop inc lret dec sbb fldl ja dec sub call (bad) je les xchg call pop ljmp mov out je movsb jecxz punpckldq xor or scas cmp add data16 xor ja inc jbe pop ret push and cwtl (bad) orl sub dec loopne movsb loopne je test mov cmpsb test push add lds mov popf or dec out mov ss lea inc push adc dec test jae (bad) ja movsb test push jmp mov inc fwait add daa inc inc icebp and jne fdivr (bad) jmp jb mov sbb maxps in bound cltd arpl mov adc ret jle stc push xchg fwait mov or mov lahf iret hlt (bad) dec inc inc lret mov inc mov call je xor cmpsb mov dec int3 or mov add xchg in (bad) fldl shlb add enter lods xor nop and jmp dec inc rcrl aad cmp fcmovnu xlat dec mov inc js pop les loop (bad) pop cwtl pusha jne mov decl fucomi and inc movzbl dec mov (bad) out jbe dec add je add mov dec lea dec cmp jne dec lea cmpb je dec cmp push jnp pop and or (bad) std ret nop dec add sbb dec mov cmpb je movb dec add dec sub cmp sarl hlt pop out or cmpb jne daa cmp mov int3 dec lea mov dec stc dec mov jne jmp inc xor mov ret jmp dec lea adc ret fld1 andl mov (bad) je pop mov or push pusha cmpsb enter and add xor cltd pmuludq adc add test gs cmp je cmp jne fnstsw ja call (bad) dec add movzbl sbb aas jnp icebp cmp je mov inc add or jp dec lea call je and or jl (bad) lea or ja mov faddl orb mov adc cmp (bad) aam js call test adc dec push push push push mov add cmpb jne pop jo add mov or sbb cmp mov call andl sub lahf sti mov call pushf das dec movsb fwait (bad) xchg push out call mull jmp push shrl nop mov jmp inc pushf cmp (bad) (bad) decl jmp mul shr imul dec shl sub dec lea push adc cmp jbe dec mov dec mov dec mov nop nop std sub mov or mov mov sub (bad) dec and dec mov inc setne call cmpb mov add negb movb clc push mov mov aad or outsl ljmp push or or je dec test dec mov je or mov je roll jl fisttpll mov punpcklwd inc xchg mov dec mov dec cmpl xchg daa xor sbb outsb clc outsb add test inc and xor call cmp sub (bad) lods mov loop xor adc mov xchg insl mov inc or idiv adc lock mov incb iret pop stos xor pop or and jge adc test dec int3 add sbb test mov adc sub push les pop leave push cs mov dec mov aad sbb push sub rolb callw xchg mov jg mov popa call jne test fisttp test out roll sbb (bad) fwait mov sbb call cmp inc sub cmp cltd cmpsb enter add push mov cmp pop inc jmp jmp sbb pop dec jmp jg and test pop std test sub mov or push jne mov inc inc test je and jl adc mov jne subb push inc popa add inc jg cmp cmpl and cmp jne jg mov sub mov call aaa sub cmpb (bad) ljmp or pop aad pop pop mov push test (bad) ss stos mov loopne lds xchg inc enter loop and dec sub test in sti inc push dec movb sub ss rolb scas or pop xchg sub and cld inc add outsb cmpl mov inc and lods (bad) jg (bad) sbb clc jg cmova mov add call stos lea call push insl push ljmp mov call add in arpl ja sbb dec mov movsl (bad) call cmp push pop iret dec sub enter inc (bad) sahf sub lcall stc add sar jae enter dec cwtl ljmp ret pop call aad or out stos mov adc jmp add sub sub (bad) push mov cmp dec pop push sub xchg icebp (bad) out push cmp cmc pop mull dec lea sub push mov inc mov mov sbb sbb dec arpl (bad) loop movl dec lea push cmp dec pmaddwd sbb test lea xor add loopne jne inc or das sbb dec add mov fdivrl jmp dec pop prefetcht0 outsb inc cmp or loop std ljmp mov xor test sete and enter idivl das or xor add add adc enter ds jle jmp push cs pushf push sbbl popa push dec push add pop cmp mov fcomip and inc dec mov inc mov inc dec push inc xor inc or hlt or ja sub inc test dec add das jg add xchg rorb dec add test mov cmp or test sahf or push cmp jmp lea ja or lea mov and dec lahf sbb aas sbb jmp jae adc push push rcr ds cwtl fs (bad) decl xor js pop jmp mov imul inc inc jo ds js mov jns add jmp daa adc xor or xchg inc outsl xchg in (bad) outsb jmp dec or sbb inc rcrb bound call loope jne es lea dec mov dec lea dec lea jo loope mov shl or push jl jbe sbb aas pop push cs push cmc fild or or or push xor add nop das mov pop and es add imul adc jbe (bad) mov sub aam aas adc sub movq jae dec jg pop pop jo pop adc inc icebp dec scas lea inc mov cmp jbe cmp push hlt xor ljmp scas xchg rcll sbbl fimul vmovups shrl loope or pop sti ret ss sbb mov mov jge pop and xchg mov inc adc adc cmp xor notl add decl jmp xor pandn mov xor (bad) pop lods mov js inc jge dec dec (bad) dec mov or (bad) movzbl stos loop je add pop xchg mov (bad) xor movsb jb loopne cli add add mov call (bad) out mov inc xor dec test dec mov je mov or sar cli add dec mov dec mov call lock jb sbb hlt movsb and xor mov test popa jne inc add mov xor and pop pushf subl push jl xchg xchg int into sbb call scas or and test xor xchg jmp xchg or call xor pop inc mov pop in fsubr pop fbstp lcall icebp mov rolb mov test adc ja sub add bndstx dec push xchg push ss test faddl and sub lea dec hlt pop ja add push add les out out lret loopne cmp add outsb mov mov mov pop inc sub popa inc adc sbb arpl mov arpl push std mov adc jmp jg pushf xchg dec lea cmp aad or mov popf sti push add adc (bad) jmp pop add or mov inc xchg add add mov mov mov stc inc call dec mov dec mov idivl add ret add sub xchg or dec mov or xor in lret sub or int3 call sbbb ret or push scas or int mov outsl mov fwait mov mov lret inc call subl add xchg mov mov roll pop call dec inc adc mov inc je jp call sub leave je call push sub jbe or jne and out xor fld1 add shll test je fmull cmc jne lahf cmpsl xor sub pusha out dec jb add (bad) and jbe loope (bad) pop lds mov or sub stos loope add sub (bad) jmp add mov add ss or xchg sub out and inc mov call mov jbe adc lahf outsl (bad) mov orl inc mov mov and cmc inc and test mov ja jecxz lock sub mov decl add cli aad push and and lock subl je,pt cmp sbbb push add add pop push fisttpl add sub add rorb data16 xchg jne dec mov daa call incl cmpl jne ja dec mov adc test mov jg int3 and cli pop (bad) or adc pop std call testb mov push pushl andl in push stos out or dec mov arpl cmpsl out adc aas imul dec mov (bad) je push push add out push cld scas cmpsb inc jb mov inc cli frstor out jbe divb cmpb out pop addr16 dec mov fwait mov dec adc shll call inc movb add mov mov test nop dec mov mull xor fimul sarb dec mov mov outsl dec lea or insl fld1 or mov ljmp cmp mov int3 and sbbb (bad) inc adc je mov insb inc loope inc inc adc int bound sarb lods test sbb mov xor adc jbe mov jb dec test or out pop xor xor cmp cmp push nop jmp fwait xchg fsubr mov (bad) jmp int3 cmpxchg rorb les pop cmp pusha pop shr test or jmp hlt dec cmpsl jl add mov les and mov call push pop cmpsl ficom sbb lea movsb and lock add jp mov test cmp jo enter insl lock adc and sti mov fstl xchg in mulb ja cmp bound call jbe movb incl out pop push jmp rorb jmp out cmp pop push or pop inc shrb add and adc dec and pop out sbb adc adc push fcoml and add and inc add call and inc sub xchg outsl test je movzbl (bad) jne mov lret mov outsl sub nop adc outsl pop xchg ret sbb sbb call stos cs cmp insb or add jmp lahf dec adc xor push mov mov pop add xor (bad) ja les call adc fild lea inc mov dec push jl and lahf test mov lods shrb mov test inc mov dec mov xchg dec mov or jmp mov dec inc int3 imul xor dec test rorl loope dec sub add cmp cmp lea inc sub dec add jmp push fcomp scas pop mov xor mov cmp jb dec cmp pushf mov call cs push ret jne jbe xor repnz andl in clc movups loop mov data16 scas ljmp lds into jne jmp or mov dec sarl icebp inc mov test icebp ja ja dec mov je dec mov inc and inc pop loop call (bad) mov pop in lods lds jle andl lea outsb dec mov pop inc inc je test mov add js cmp xchg test adc std outsb dec mov cli dec mov call cmpsb jne emms and inc mov sahf pmaxsw jg dec mov call test dec mov je cmp push xchg or cli and push sub sti or push andb xorb add mov lea inc call dec sarl mov dec mov rcll dec scas test lret dec mov adc sub and dec pop jge test pop mov inc or push jae sub xchg je mov inc jmp sub inc mov icebp cmp ja repz dec mov call clc out (bad) aas xor jbe add dec mov call in dec push add arpl sbb mov mov mov cmpb je call jmp mov je ds lea loope cmp and add lock call je andl sbb scas jo shr test push fs mov test test sbb outsb sub mov decl fildl dec mov dec mov dec mov dec mov aad jecxz dec lea sbb and adc ret or and in (bad) incl xbegin je jp mov dec cmp je sbb call jg add xchg and adc push adc adc fsubr jmp jle iret fstpl aaa cmp push call cmp out add jns test out ljmp dec xor xchg jge rolb xor sar cmp dec mov je jo dec mov and pushf std adc adc dec mov je cltd (bad) adc call dec sbb fbld sub add test adc dec nop add inc addl add rol add ret add pusha jmp dec outsb js outsl loopne inc mov into or push cmpsl dec lea cmp dec test loopne scas cs loope jecxz,pn jle mov dec pop icebp mov pop or arpl sub jno mov call dec xchg int3 adc dec cmc outsb cmpl call movl into add fdivrl jb enter cmpsb addr16 ss sbb sbb addr16 pop leave shll mov mov dec dec (bad) dec jecxz pop lods and mov inc sbb outsb or adc dec mov jmp fisttpll test xorl push arpl fnstsw call mov adc dec cwtl lret jns xchg xchg cmp xchg and in mov fwait nop dec nop mov inc or test mov loopne cwtl inc mov call lahf xor inc pop rorb mov into push mov jmp push cwtl cmp sbb orb jmp pop push dec popf fdivrl mov push sbb adc lcall sbb adc leave leave dec pop lods adcl jmp adc adc iret and jne fildl repz cmp adc jbe push lea sbb out cmp adc adc dec inc push fcompl or scas sbb adc or push add and pop lock ret lret mov in outsb pop inc adc fisttpl stc pushl je bound mov fbld or call mov (bad) je arpl mov pop test dec imul push orb inc popa xchg push dec mov jg sub insl cld adc incl sub adc sbb (bad) lea and je incl add out (bad) lea neg das inc inc inc adc xchg call insb js (bad) je inc pop fwait in sbb jle lcall nop and sub dec inc mov jmp dec sub loopne in inc fsubl in fisttp xor mov add dec in js xchg or mov (bad) (bad) bnd jmp sub dec inc cmpsb movb jbe call mov mov stc imul push mov adc ja,pn decl lea pop cld or negl int pushf mov mov fldl loope into dec in or (bad) pop icebp movsb sbb (bad) leave sbb wbinvd ret pusha lds cli cmp inc add dec mov xor push dec movsb cmpl mov or jg fcompl fs movsb imul mov inc mov call mov call loop sbb ret test je cmp pcmpgtw adc outsb ljmp cmpb xchg ljmp add movb add dec inc sti jne cmp pop push xor pusha add and jbe sbb xorl test jne sub jno sbb pusha mov lods and cmp stos fiadd cwtl mov mov push push cs mov jo (bad) jo lret xchg adcl sub xchg jo imul sub adc out pop adc nop inc test je negl jo jmp aaa jo sbb je or mov aas jne mov cmp xor mov sbb mov push roll sub ret dec mov fwait cld dec mov pop pop add jle leave inc mov cmpb and movzbl test clc adc test call scas ss sete inc and sar test push add test jne xor hlt and incl dec test jg sub cmp (bad) loopne adc stos jmp fimul add mov rolb adc inc in jle (bad) dec push loope loopne cmp clc add test dec mov std dec lea cld jg (bad) dec lea inc mov mov inc imul jecxz sar imul sar sub inc lea call fldt inc mov sub mov call insb and nop lds les out insl out ljmp out scas lea inc add dec xchg mov das dec adc jb xlat scas or push xor (bad) pop inc fnstsw setne inc xor test or adc in or xchg ret (bad) je ljmp push je jmp jle cli jne ja (bad) dec push push jno call cmp in pusha add clc adc call les add or lahf call movhps stos push mov sub mov (bad) jg dec call loope and jmp jge cmovl inc push add mov add cmp pop xor add js (bad) sbb pop mov je (bad) loope add jbe (bad) and mov fadd add add mov lahf pop jo js,pt add lcall and imul pop xchg nopl lcall and xor jp add (bad) imul pusha mov scas inc std call ret inc outsl jg xchg sbb mov lds mov inc shr xor test lret inc and call push mov pop jne test push scas cmp push aaa lds (bad) (bad) cmp test out pop pop adc add jne ret ret cmp ss or push dec xor inc test pop dec mov mov add mov dec mov call jbe test adc rcll nop sbb (bad) outsb lods test aaa xor mov mov orl cmpsb hlt test outsl xor pop and ljmp lret jns call orl ret cmp in sbb xchg cmp xchg sti cmp add adc jmp cmp sbb mov xchg test push inc cmp add out mov inc outsl dec push inc inc jo cmp sbbl bound and adc shll inc dec or add dec cmp pushf pop inc add dec test xor pusha cmp test xor cs add jmp cmp data16 dec test inc (bad) fistpl cs mov (bad) mov (bad) mov cmp call inc sbb out jmp sahf mov bound popf call loopne test jns call fidiv lcall loopne jmp jne add test push or pop call sub dec dec aas faddl dec mov data16 xchg movsb pusha outsb lahf push popl out jmp mov cmp test jmp or mov stos or jo push clc ja or push scas bound mov dec mov (bad) mov test call jmp inc mov ja pop and inc mov dec adc and aas inc push ret mov sbb leave adc jns mov xchg shr aaa or popa out jmp and sbb dec js or rolb popf mov or add bound and adc push add xor xchg add (bad) call dec or into push sbb pop sbb push adc lds out mov (bad) lock and dec shll adc pop xlat icebp inc rcrl jb outsl jp xchg (bad) cmp jmp adc jo decl push adc addl dec mov dec mov dec mov dec mov call push rcrl rorl ret loop pop push aas add dec test je testb jne mov test xchg dec out clc inc and and jb (bad) decl sbb push dec test xchg rolb inc or jne aas adc add sti dec jne pop jmp cmp jg rcrb or insl icebp add loop lret jge cmp add jne cmp add inc or add test rolb mov and lret cli jle add inc sub push pop add pop dec jmp push cmp mov adc inc sub adc xchg push les test add add popl xor jbe inc and push sbb and inc sbb push in ljmp pop sub (bad) pop mov je icebp adc sbb adc jl mov push dec jmp mov inc push jmp stc pop (bad) pop test xchg push inc adc jl xor adc call je dec lea lcall xor pop ret xorb dec ss cmp dec sub dec loop fnsave or idivb adc test je test jno or xlat mov cmpsb test push subb pop loopne ret pop xor push faddl adc pop jl jb add popa ret or lods adc ret jo iret test jo add (bad) lock mov dec andb sub data16 mov add es inc mov fcomps nop sbb test or or add xor iret pop cli into scas push rorl lea in pop (bad) cmc call pusha shufps ds pushl mov fucomp das (bad) out call or test movsb xchg call jmp in in sub and xor add gs or cmpl nop sub jmp dec hlt paddd int3 call ret je add stos adc mov sub xor cmp in rcll aas icebp call mov (bad) lods sbb add push or or jmp (bad) xor cmpl and sbb pop xor setp unpcklps faddl clc mov mov call fbstp fucomi adc add inc sbb add mov (bad) ja rcrl cmp dec mov cmp dec lea sub cmp fdivrs sub dec cmp jg dec jne lahf adc (bad) pop dec mov mov orb fmuls enter jle push adc lahf add popa push pop xor ds hlt pusha fild dec lea jge fbld and call fmuls or mov sub loopne (bad) decl out cmpsl (bad) dec aaa mov dec cmp jg dec imul mov mov jmp incl push ja push sbb fdivrs sbb call push dec (bad) mov test gs pop mov fdivp gs xor jmp pop pop rcll aas cmp or inc mov cmove jle push dec mov lock inc mov shr add lea add lea inc call sub xor mov prefetcht0 xchg add jns adc ss in mov dec mov insb orl outsl dec lea (bad) decl in cmp dec or inc or xchg and mov dec adc (bad) je inc jp jmp xchg jb cmc pop lock cmp inc fsubrl call add (bad) je mov popf and out lcall mov inc mov es orw mov (bad) jne das jge hlt das inc mov add (bad) inc (bad) jg push (bad) icebp call mov add (bad) inc xchg add inc testl or pop test jne (bad) fisttpll outsl test dec mov je or push xchg (bad) (bad) mov cmp dec mov dec mov jae dec mov inc lea dec add or jae mov cmp jne movzwl jbe mov aas rorb setne inc add call stc iret (bad) call test testw mov add popa adc sbb ret nop or add (bad) leave (bad) mov dec xadd mov jb jbe mov pop testl mov out outsb ljmp jb add test shr cs inc fadd dec mov loope or sub fadds or mov mov and dec popf sbb mov xchg add clc arpl or aaa push cmc mov dec (bad) popf incl (bad) sti xor shr cwtl jne ja xchg or dec lea jnp (bad) jl (bad) (bad) jbe dec mov cmc daa ljmp call ss rcrb mov (bad) incl lahf dec (bad) fistpl adc or add aam mov cld scas ljmp cmova jmp pop mov mov aas add call mov call test ret sub inc cmpsb fdivp jmp fdivl sbb adc mov sub adc pop rcrl daa scas inc push inc push ja or fisub aam call movzbl sbb push sbb ss movl mov test adc sbb movl pop mov mov push les jne je movsb dec mov (bad) inc rol je loopne,pt sbb inc mov xchg dec mov push xchg js and adc cltd dec leave je cmpb je mov sub leave dec sarb cmp and jne jmp adc in inc clc je (bad) jne add in dec loopne in test stos add or test stc mov (bad) jle add fimul xchg and test jne das mov mov push js sbb rorb shrl push mov pop test jne call adc mov call clc pop or fdivs lea clc rorl call and popa pop sbb push je ret lret test cmp ljmp mov icebp dec sbb push rorl call dec fdivrs mov mov stc dec lea xchg arpl loopne mov adc test pop add test xor cmp test xchg mov je xor dec cmp mov loop adc push xchg cmp outsl and add cmp jne add test fcoml call movl xor or popa test rorb inc and and test iret and inc sbb clc (bad) inc sub dec xor pusha clc clc call pop push cmp das cs outsl cwtl popf mov das dec mov call scas mov jne lock sahf cmp (bad) and dec (bad) xor lret push pop pusha and sti dec (bad) imulb test pop dec mov movsl fwait les (bad) ja ljmp mul or imul sti dec sub imul out mov cmp jbe mov rolb jg jmp inc stc into mov jo (bad) lret call pop ja test lea inc add call cmp xchg mov jmp popl incl int3 jbe push (bad) fistpll sub rcl or dec int dec lea mov add jp jmp pop bound xchg leave add mov cmc dec lea sub cli popf rolb add add out (bad) decl call inc decb or rolb mov jmp and inc jmp and aas rclb add dec sub mov dec cmpsl (bad) jg shll dec mov jmp movzbl loopne test xor call andl test hlt inc mov shl shr push cli (bad) (bad) jmp out cmc stos or sbb jae (bad) dec insb xor mov sbb push js jnp xchg push xor pop mov jmp dec cmp and bswap gs xor dec jl ja shl stos dec mov mov inc or jne xchg jle jle dec stc mov sbb popa sub fidivl sbb cli loop dec adc cmp je sahf mov add push lods mov (bad) (bad) (bad) xchg hlt (bad) or in pop sar push inc mov fs fadds stos push mov and cmc cmp and mov lcall inc mov and fildll and mov dec add lods dec int3 jb dec hlt out out add jno adc mov nop or sub scas dec les jo cmp call lods mov (bad) dec pop dec loop lds cs mov rol push xor jbe aas or je add jmp mov dec lea push adc sub ret ret (bad) (bad) out mov js xchg popa sub mov mov dec add push push mov dec stos call push clc jg fmuls (bad) test jne dec test je xor daa dec test je test jne subl lret jo call pop fs add mov or femms and cs imul push and mov xor lds push (bad) and inc and xchg add cmp sub (bad) rsqrtps dec pop movzbl pop into mov test jne mov leave inc adcl clc loope jne (bad) (bad) iret sbbb movsb dec push sbb cld into inc jge mov pop add testb mov mov sbbl or stos adc sbb cmp cmp inc inc es jbe test or xchg or add inc and sbb sbbl mov inc mov dec pop and dec xor mov or (bad) add daa mov call popf dec cmp out xor cmp add mov xor adc movsb pop push or js cmpsb sub cmp lret cs je and test mov fnop int nop xor psadbw cwtl dec gs rolb lcall das das (bad) icebp sti sbb inc mov dec arpl inc inc inc fwait cli xor jmp inc push test (bad) xor aam mov call inc lock dec jnp loopne test mov fwait movsb fildll jne inc jmp call fwait and popa xchg daa out sub andb sbb sbb icebp mov mov sbb imul hlt or test dec mov sub test ljmp xor dec mov imul lea sbb sub cld std pop sbb inc add inc cmp movsl dec mov dec inc mov xor into clc sti (bad) mov add movb and mov push pushl mov out sub sbb mov xor call loope (bad) adc lcall mov decl mov call sbb sub xor inc shr sub adc dec lret xadd jmp je cmp outsb dec into or pop out sarb adc mov jbe mov cs fnstcw adc in incl or pop sub adc mov outsl mov test test movb add scas mov test and pop into dec mov or (bad) mov mov push movsl dec lea mov or mov ds inc add jmp add inc out rol push jnp sub mov xchg lock xorb movsb (bad) dec or cli sahf inc lcall loope aam xchg sbb push (bad) mov push scas ss movsl sti add js gs dec gs nopl (bad) mov out mov aas push (bad) popa shll and or out in push test adc call mov jne xor push aad mov jmp sub jne rorl mov mov or outsb jmp dec inc sbb jns decl mov fild sbb addr16 or fwait mov jl dec mov aaa lds sbb inc call dec mov dec add mov sub loope pusha scas push sbb sarl in cwtl sbb aaa lea aad ja inc call cmp xchg cli pop mov dec dec mov dec shl adc movsb sti push add scas loopne (bad) fs mov enter pop add lahf jl sarb mov xor call gs scas lret ja dec mov punpckhdq cmp adc out aam test and inc inc mov jge push or mov add adc inc sti and jo outsb ret ret shlb (bad) iret or add adc (bad) notl mov inc mov loope fidiv outsl insl call aas cwtl call jmp movsl and loop mov aas jmp sahf and aas das cmp adc pop hlt rorb inc cwtl sub test sub adc add cmp and jg aas add test mov and lds push add test mov and adc std insl cli mov fiaddl cli add mov (bad) cmp and cmp je out ja ss adc test je inc icebp or mov in call packsswb jl stos dec hlt dec pop cld inc rorb push dec divl xlat mov dec mov or jo shrb lea pop fldl push or xchg out add sbb lock mov and fist dec mov dec mov and hlt jg cwtl and repz add dec movl pop orl mov cli adc add inc lods xchg js adc rcrb inc mov int cmp mov mov mov xchg mov int and pop cmp test mov pop push rorb or cmpsl add test es push dec mov call je pop and cltd cmp roll (bad) mov inc xchg in inc mov add ds lea inc (bad) decl pop inc jns in xchg xlat dec lea dec shl adc ljmp test add addr16 call mov test lea cmp jno push getsec mov sub inc mov xor rorl adc rorb fwait lahf dec mov mov dec mov call mov dec test lea int3 pop mov cs add sbb leave pop outsl sbb lods mov mov test dec insb inc push pop iret mov jno aam ret add test mov (bad) loope lahf test xchg leave and lahf call das mov call jl les pop ljmp or sbb add out cmp rcl je rcrb rcll je mov xor adc mov arpl and jnp stc call into lock jp insb mov mov mov or mov orl loopne xchg hlt dec add dec lahf jne shrb test rcl inc ljmp les dec les jle jecxz xor (bad) mov or dec inc fsubr push cld (bad) incl jno jo dec int jno cmp fadds movsb fist sbb jecxz push lea and add setbe pop pop je je mov sbb test dec xor inc mov or jne outsb xor pop push jo xor sti pop xor pop xor call incl leave fsts mov jae test daa stc call add mov add add adc das imul rorl dec sbb xor dec test mov cmpsl test push and add add (bad) negl dec mov (bad) enter je fs popf mov push and dec lea pop jae std mov mov push mov jmp ja xchg dec (bad) outsl adc das xlat and or or pop and imul icebp inc dec popl clc cmovb inc mov cmp imul (bad) out or pop call mov call sub add inc cmp dec push adc jg loopne sahf out mov and push add mov mov dec lea dec mov inc lock dec sub dec sbb mov test pusha (bad) dec mov mov and or or test xlat andb dec lea or movsb test sbb aaa adc out push dec mov call xlat jns (bad) dec rorb (bad) lock adc pop test jne and adc push xchg btr notb dec sbb mov aam scas test xor jle nop hlt repnz mov mov adc jmp add sub es aad cmp dec jne ret movsl xchg call out mov pop outsl sbb inc sbb mul int3 add mov addb movsb das adc or mov ret or fisttpll div jnp jmp mov pop push xchg xlat es adcl sarb xchg es mov jmp push clc fnstsw adc cmp mov je cltd push (bad) cmpl je fs and inc pusha or nop or add outsl mov xor inc test test push inc push xor mov je inc mov dec and pop push add rolb ja movzbl dec call sbb insb int inc mov inc cmp ja call dec cmp mov xchg aad fsub jbe pusha add adc out fisubrl push and popa out cmp lds das test andl add into cmp and adc outsb andl inc fsubl out push xor push inc mov (bad) cmpsl stc incb jb cmp adc lods add outsl (bad) clc dec fcompl roll (bad) push leave sub int3 and xchg mov inc mov imull or in call dec scas xor imul call inc push scas and bound push dec addl cs mov mov xor call push cwtl call ja inc jne cmp jg call enter sbb xlat in push gs lret xor inc (bad) cs mov mov cli call push xor jmp ret sub movzwl clc pop adc or les dec test call mov cmp push in xor test insb je jbe jmp and loop mov popa outsl inc or sbb das adc nop fild movl call mov decb roll jo es and or jmp xor sbb xchg xchg mov negl and mov fcomps out (bad) (bad) jmp jbe,pt shll fcmovnu bound mov fsub fiadd mov xor sub mov add jae (bad) call loopne lea mov cltd sbb dec mov add dec jo jl jne in jl adc mov xchg push out mov adc jl mov pop jns jl icebp ret jl outsl mov push push jl (bad) pxor add jl lea stos inc cmpsb loope jl or aas loope mov xor xchg sti push add dec mov rorb lret mov jo sbb adc inc xor pop push ret sub je push adc ficoml mov push push mov ja adc sti inc test je test leave call xor and push push mov out pop adc ss cmp mov sub ja out rcrl push call add es dec mov (bad) sbb xchg mov sti push xor sub xchg sub loop dec pop ja in stc call out aas test jne repz fnsave xchg lea sbb cli or enter sbb fwait je sar adc sbb aam jbe inc out imul das xlat out dec pop or push or jne shrb xchg popf mov dec out xchg sbb pop sub pop mov cmp outsl sbb cmp push mov (bad) cmp push lahf add sbb add outsl jge adc sbb sbb inc push cmpsb and sub or outsb int3 aam push mov cmp or outsl shll sahf or or fsub fidiv push pusha in outsl pop and mov ffree test push call push cmp cwtl cmp mov dec rolb pop imul mov sub call or mov xchg outsl movsl push mov outsl cmp xor scas lods outsl js lock cmp sub outsl ror in adcl sub or push movsb outsl bound lock adc and outsb orl add sbb outsl inc ss or or xchg jmp push pop outsl daa imul outsl mov xor fildll popa ljmp add jl lods outsl mov dec pop into pop mov shr outsl in adcb mov aam sti jmp frstor push in outsl fldenv mov push enter call leave push test fidiv pusha mov mov inc ficom add xorl cltd shrb and rcr outsl push outsl mov add divb xchg or adc or push jle pop insb insb call in xlat mov dec sarb adc ja sbb fidivrl sbb mov mov xchg and pavgw jo adc sub cmp and test push push sbb stc add mov jo adc or loopne sbb mov dec mov inc mov push mov jno inc sbb mov test aam add jmp jmp je hlt mov jge out xchg jp lock dec cltd push lret jae cltd scas leave cltd push leave jns pop cltd jae jne lcall loopne addl pop int and jb lds ret inc gs adc pop jb jb lods sbb mov push jb jl scas (bad) and sub jne jle dec sti sbb inc pushf test push sub and adc and push lea xchg test sbb jb sub adc dec lds fsubl ret inc orb bound xor cmpb and stos popa xchg lods andb push (bad) call adcb mov push mov loope andl dec fadds xor mov push adc stc push jecxz (bad) das jns jecxz into sbb add adc (bad) sbb movhps gs push out jg jecxz push sbb stos xlat push pop (bad) jg pop push sub mov add mov jg and sbb adc mov dec pop inc pop rol lret ret inc in dec adc (bad) out je add and lea das dec std je dec add cli push adc ret inc sub sbb or fwait and (bad) fmuls dec mov incl adc inc lea dec lea mov dec sub inc cld pop frstor add xor add dec add jnp cmp mov insb call cli lods (bad) (bad) jmp (bad) xor lock dec mov dec mov jne ret scas add std inc scas xor sub cmp ja dec lea mov ret pop or pop sub jae cmc add add clc xchg dec mov call test jne (bad) and add clc (bad) ljmp or call add call or es ret xchg or add lea cmp cmpsb dec test and insb jo and pop test call adc in sub sbb pop pop pop call jmp mov in cmp push pop dec mov sbb je stos add and pop mov inc std daa sub nop mov imul les xor aas sub popa into decb das and dec lea movb adc dec jne dec sub data16 xor mov dec mov test je dec lea into ljmp jmp or shrd mov and cmp jne dec lea dec mov sbb push sbb mov call je sub incb rorb call push je les add sub add jmp dec mov xor jmp xchg sub mov dec loopne push push and dec mov dec mov inc (bad) xor mov movsb inc test or push into aad dec mov call mov mov cmovs je pop test movb jg test jo inc fbstp dec cmp jae push mov call add dec loop ret insb (bad) pop dec mov scas fwait gs xchg cwtl inc icebp call lods js sbb aas xchg pop add pop pop add and dec add (bad) jmp inc inc mov addl dec test je rcrl or jne shlb mov loope fld1 sub (bad) adc pusha jno dec mov (bad) je hlt xchg add xchg xchg jo daa int3 daa mov jb inc sarb out jl setbe popw jge icebp call data16 push sbb mov adc pop jb mov pop shl jne add jmp mov fld1 cmova add mov fmuls push lds (bad) aas mov mov mov ljmp pop dec mov je dec cmp adc add add inc and inc (bad) mov sbbb cli mov dec push mov add fwait (bad) sub ret xor ret out ds mov bnd jp add cmp ja inc mov add mov in jmp data16 sbb add pop je mov mov push inc addb xor dec fiadd dec shll jmp out adc or sub cltd or xor add mov dec sub imul call and jne inc jne dec mov (bad) decl ljmp jb dec cmp ja inc cmp cmp fdiv je dec add in dec sub test std lret rorb add dec ret iret mov lea push (bad) (bad) jg dec and dec test jne dec mov dec cmp ja dec cmp jb dec mov (bad) (bad) (bad) decl enter mov dec mov dec sub dec lea dec cmp je dec cmp dec mov jbe dec jg (bad) decl jb dec cmp jb dec mov dec add inc jne dec mov dec fdivrp mov pop pop pop ret dec add and xor in or adc fsubrs pop jg jbe sbb pop adc rcrl jae dec lea push (bad) decl dec sub xor call jmp nopl cmp xchg add jg mov pop dec cmp je mov sbb dec mov dec mov jb mov mull (bad) lock adc addl clc mov add xchg push cmc jmp dec es xchg xorb push dec adc and data16 lds jl or mov mov jmp lahf xor jmp xlat mov sub adc xor cmp mov and xchg lods inc or dec mov fstl add jl incl dec mul dec mov dec shr (bad) sub nop nop mov fadds outsb nop cld arpl sub push mov jg add jbe inc cmp jne inc popf mov ret inc movzbl out (bad) incl (bad) je inc lea inc cmp jbe inc or mov jmp mov add xchg sbb mov (bad) pusha outsl push xchg je push adc sbb test je (bad) int3 pushl pop lahf inc lea inc add roll inc cmp jne fstpt adc je xor add fdivr mov add xor (bad) je inc lea sub inc adc sub and leave sub stos pop aas add inc test lahf adc mov xor and test cmpsb out ret pop or aas xor xchg ret in sub sbb ja dec bt jae aas push add push fisttpl int icebp pop and inc mov dec mov adc rorb sub jmp das inc lea movsb and aaa pop cmp jbe inc cmp pop out loop popa dec jnp cmp dec mov je dec pop inc movzbl (bad) out mov sbb enter js inc cmp jbe lea popl lea jmp iret idiv call sbb jg mov add jmp add adc or repz out psubusb in jg xchg rorl jne and je fnstcw jne roll jecxz incl movsb and inc out clc inc popa xlat pop and test je lcall mov (bad) xor ja inc sub ljmp pop jnp cltd add xchg dec cmp fcmovnb jg jne mov ja dec lea dec arpl rolb fnstsw scas dec aas add pop cmp sub pop inc mov push (bad) dec mov dec sub ret dec add outsl sarl inc or jne insl pop dec or push dec cli or inc sub inc xor dec mov sub or mov stc ja aas incb adc jns arpl dec cmp or mov add pop rolb jbe and mov pop jne pop sarb cmovl add jg or inc movzbl enter out sahf bound adc loopne inc add inc lea jbe jg out or mov leave xor clc dec xor pcmpeqd xor add mov jbe pop lahf xor imul aad lea and dec lahf and mov fistp ret mov or jl mov dec outsl iret jl pop sbb pop je enter dec push inc cmp jb push leave js imul decl (bad) shrb loope rolb add fbstp inc ljmp jbe inc scas jae int push cli add or cmp fidiv js push test mov mov ret decl mov inc lea clc or jl insl cmp sbb xor imul imul jg dec arpl dec shl xor dec add xor sarl add enter add inc outsl xsha1 cmpsb mov sub leave pop inc iret or outsb int3 add mov outsl xor and mov inc imul inc outsl ficom je jo inc xor dec mov out add jne jmp dec leave dec cmp out (bad) ja dec shl test jo dec arpl in lret outsl ret pusha sbb aad add fdivrl jecxz add or jbe jo pop call jbe popa loopne mov xlat inc (bad) lds pop call ja movl daa imul shll cltd cmpl dec sbb xor nop or out call push mov add nop nop cmp mov add jle cmp add mov sbb or aaa add stc loopne test stos sub sti cmp std mov pop add je jg push adc out iret push adc jne imul push adc sub stc add test or cmp lock (bad) data16 adc outsb dec pop fidivr (bad) adc test stc push idivl mov test ret cmp arpl decl in add jbe cmp pusha jne leave add mov push lahf add into sub popa sbb lea in mov je mov cmp pop je dec (bad) fstl adc test adc cmp cld popa daa pop (bad) ss mov mov ds pop sbb cmp clc push adc add or (bad) pop cmp sahf es fnop popl xchg stc test adc sbbl je aas adc and or test inc jg xchg adc sbb xchg test rolb mov lods add jne cmpsb (bad) fs in stc add es adc addl mov xchg jae cmp fwait cmp fwait scas cmp fstpl sbb push ss minps jg je mov insl pop dec inc aam out adc jne repz js outsl js jnp dec dec and (bad) pushf fstl cmp in xchg sbb add ja sbb dec and add paddb call cwtl pop xchg enter push cli sbb in loope repnz cld cwtl sti adc jge mov sbb push (bad) mov es xchg jbe lret lahf shrb inc sbb test jge sbb mov push inc jmp sbb ja pop adc inc push adc inc inc cmp xchg mov enter push (bad) cmp inc jl sbb adc into sub leave inc inc adc test (bad) xor pop cli jg lock call test sti add adc test mov push cmpsl xchg in in out test push sbb inc aam fwait cmp mov inc push stos and push inc cmpl jg stc outsb test or incb jo outsl adc pop dec test insb insb sub adc frstor mov xchg jno mov adc mov out mov lds test inc aas cmp invlpg cmp or jns (bad) test cmp test sub pop push inc enter mov stc stos mov or test das xchg fwait lret je cmp dec adc adc int3 mov test jl sub rcrb test aaa das insb sbb negb stc mov into xchg test jno cwtl and pusha arpl push adc inc push and cmp out scas adc or sbb rorb cli cmp test test das scas dec ja mulb pop dec (bad) adc fstpt jecxz fnstenv out cmp sub push mov push (bad) jo stc jecxz adc fsubs cmp daa addr16 adc push stc cmp pop (bad) pop les test inc mov cli jo pop test adc mov jg bound cmp fsub in or test pop or aaa and cmp inc xchg punpcklbw xstore-rng cmpsl pop testb mov jbe jns xchg jae bswap push ud2 add js push inc out pop negb cwtl mov bswap xor dec xor pop flds cmovne mov add mov xor sub rolb mov mov je push push xor mov push cmp sbb add xchg dec mov call sub je into roll and mov or pop inc cmpsb mov add dec in ret vmread psubd xor sub mov dec and nop jg call dec sbb push and inc push icebp fild dec mov jne push cltd mov je js arpl jle lcall mov call in sbb test inc cltd add jb mov mov add outsb idivl dec mov aas dec push xor je jne bnd mov idivl cmpb sub sbb pop pop test jns nop mov push mov pop mov dec mov call ret dec test insb scas ja sbb call je ds adc adc jle ret mov lea ds sti add adc je andl inc daa test jne mov dec jbe std cmp je fisttp fucomip jae test adc lock arpl xchg push push (bad) cmc push jmp adc fidiv notb fs mov addl rolb push dec aam cmp jo pop sete test je push lea add xchg xchg mov ljmp jo mov mov js inc mov fimull jp or xchg stos add iret dec pop decl fiaddl je mov inc mov inc cmp adc lret add cmp cmp jg jle adcb leave jmp (bad) out add cld (bad) lcall je lea inc cmp jne add mov dec mov jg js ja dec mov inc and cmp add sbb cmp mov (bad) xor and sbb nop loope cmpsb pop xor xchg inc mov pop (bad) or lock (bad) jmp ret (bad) xor sbb jmp iret dec sub loope andl mov mov mov pop and sub pop add call sub mov and cmp mov push cmp mov adc mov call pop add pop pushf nop in (bad) (bad) jmp dec mov mov push movl xor setnp ja cmp mov dec mov cmp cmp call pop jo mov mov ljmp mov lock test (bad) (bad) jg shr dec lcall dec cmovbe sahf and addb mov sub movaps hlt ret mov rorl dec mov pop or add insl mov add cmove sbb sub xor adc pop rorl into mov or jne jl add dec cmc cmp je or mov call push or add orl lods add jne xchg fmuls jmp dec mov dec adc rclb mov in (bad) ss mov call movsb push jne sbb std orl pop addr16 dec mov dec mov outsb je mov sbb push js sub movl pop sti push inc lds les call adcl inc adc insb or das lret sbb add adc mov test and das fldl mov add fs mov or out test sbb mov das lods pop das push or test inc mov dec mov je pop hlt scas push jnp dec mov scas dec xor jmp clc pop mov jae push mov call mov sbb adc push adc call mov fnsave push pop inc call inc pop ret data16 (bad) scas mov pop ret nop dec mov call out xchg dec mov call cmp cmp sti push sti dec push pusha mov xchg outsl and push add sbb xor dec sbb pop adc xchg jne sub inc add and decl add mov movsl loopne lock jae jo rorl xor jne jmp pop std test and pop dec mov je push jne jmp sbb out pop xor sbb and call or add rorb xchg add inc mov inc or dec mov je cmpb je adcb sarl je addr16 inc pop cmp cmp add cmpsb out movups call mov (bad) jne xor inc lds adc cmpsb lret insl dec mov loopne,pt add rcrl aad (bad) dec lea xchg sub cmpsl inc sub xorl cmpb and mov or fadd pop pop inc mov push aam adc dec mov dec mov dec adc and dec mov dec xacquire movb and push add clc inc add (bad) ret (bad) stos bound mov mov inc and pop scas loopne sbb cmpsl lock std (bad) xor ret dec clc test jne daa and out sbb mov sub jg pop mov dec shr dec mov test psubb add aas push pushf (bad) hlt sti addr16 push add js setb xchg xchg mov inc mov sub adc ret push stc (bad) decl pop or push sub fidiv inc sbb add pop adc or rclb fld1 (bad) aas and sbb insb adc leave mov add mov fisttp jb mov jne nop inc cwtl fwait and fcomip adc and xlat js xor cld cmp mov ja idivl mov pop ret sahf arpl mov test xchg add cmp xchg add mov xor add inc inc insb or jg add add xchg fiadd inc setne cmp lea or test push jp dec jp xor push (bad) test dec lea mov cmp call inc test je jmp aas fmuls pop xor clc fistp addl add sbbb subb jae push push mov sub in pop add dec pop inc test je jmp jns mov pop mov call xor xor jmp pop std fidivr inc std inc setne cmpb jne inc test jne mov cli xchg sbb cli (bad) xchg mov fisubr std add dec je cli in pop jb test cli cwtl fwait sbb xchg cli in push push or jg adc daa push aad les or dec mov jp push and mov inc cmp mov mov and (bad) ljmp and je test jne movzbl clc inc roll add and pop push pop inc dec sub les pop popl push dec mov dec jmp xorb gs bound cmp aas mov or jne test fcoms and bound test add or inc repnz push shr test dec cmpl je pop add sahf adc pop inc je lahf dec mov js clc dec mov xchg cmpsb add add add orl jno into aad push arpl dec mov dec mov dec or test mov and jg mov cmp mov cmp push cmc ja mov call mov add std into dec mov je mov je cmp xchg sub mov cltd and les sub mov rclb fdivr pop jnp pusha cmp (bad) je dec lea call pop jo inc je pop fdivs fcmovbe cmovbe je mov pop and xor push jmp and pop lahf ja mov add add iret push push arpl shrb inc cmp je dec adc shr mov dec mov or cmp jne adc repz pop mov dec test jne add jge jmp xor call dec jb ficompl ret pushl cld xor iret mov dec lea cs jp call mov add push jno or jne call adc inc mov dec add ja call or rorl and fmul lea outsb xchg pusha jmp inc jbe,pn dec jmp fbstp pop fwait test dec out scas lea gs cmp lret aas call (bad) jge add dec aas das nop nop nop xor loopw and incb sbb jae pmaxsw fmulp sbb mov inc push mov nop inc push sbb ds push sbb push fs cmp nop inc push sbb mov fs mov sbb pop dec ds fs inc cs pop mov and setbe add and pop mov ret ret push xchg leave bound xlat bound pushl inc mov add ret jmp mov dec mov dec (bad) mov add movl sbb mov call mov pop lcall fildll mov (bad) decl movl jmp (bad) jmp (bad) loopne psrld mov xchg cmp adc mov pop xor dec ljmp inc or mov (bad) (bad) out sbb inc add (bad) call (bad) adc ret aad lea aaa jb pushf xor add inc mov xor adc xchg add mov ret add dec or or add into fstl dec add xor pop je adc ret rorb or cmp or dec push imul pushf (bad) mul push imul js mov stos dec imul push mov dec mov dec lea mov sbb push scas or repnz dec adc movd xor in and xchg add (bad) (bad) inc mov rep and mov inc mov inc mov movb inc mov (bad) pop or aam fisttp in dec add call (bad) fbstp dec imul inc pop outsb inc mov jmp dec inc dec cmp shlb or inc cmp inc mov mov fnstsw aaa cmpl jle pop adc roll rolb outsl sub roll jmp outsl inc mov inc and inc and subl inc shr inc shr inc cmp inc mov test xor mov mov dec jne push out or or sti add inc mov shl jmp add loopne mov int3 inc sub cmp lcall and push dec mov (bad) (bad) pushl test and add dec add dec cmp jne dec add dec inc aam incl cmp jne sbb ljmp in arpl lock cmpb je (bad) mov dec add inc adc dec xor add inc inc add movl loopne jl xor sbb popa push dec mov loopne stos add call pop arpl adc std or repz fsts cmpl jbe sbb xor sbb mov call mov andb pop adc and inc mov addr16 in lea push es mov je ss jns inc push js sbb fwait in or inc imul cld jg call imul dec mov test je jp inc aaa inc add sbb or adc and xchg cmpl cmpl (bad) dec cmovge mov xchg in roll mov inc test xchg imul jne adc xchg call (bad) lock sahf pusha jmp sti fiaddl pop scas inc mov psubb call into dec sbb call int3 das dec ret mov sub imul and (bad) (bad) out or mov mov mov mov cpuid mov mov push lcall mov mov pop pop pop pop dec sbb xor push and lock dec shl mov (bad) (bad) (bad) mov mov xorps xorps xorps xorps xorps xorps xorps xorps popa (bad) (bad) decl pop rorl lret rorl pop fmull pop in pop out addps addps pop mov inc push dec jne dec jnp nop fild popa mov (bad) jbe inc mov or sarl adc mov mov outsl aas or out call rclb int3 lods call dec sti cmp subl xchg push and cmp rolb dec or or stc adc jbe lahf adc push mov pop push inc mov int3 clc push sbb and shr add pop cmp loopne push mov xchg inc mov mov out mov push add or fisubl push mov mov inc mov inc or clc mov call mov lcall mov shl inc and fwait add loop ss inc mov xchg (bad) jmp pop cs inc cmp mov je cmp aad push jbe push xchg mov jg gs inc cmpb je inc cmp jle subl incl lea jle inc sar js mov pop call jb adc adc inc cmovl out sbb jmp dec roll imul aad add jmp (bad) xor lret lea je dec jg dec arpl inc std push lcall adc addr16 xor and pop mov mov cmpsb call xchg call and sarl inc mov jmp lret inc mov inc sub mov sub decl add inc and aaa pushf shl dec shl or and dec or dec or jmp xor push rcrb dec mov dec mov xor (bad) mov add dec mov pop icebp jno dec sarl push scas inc mull (bad) fnstcw xor inc subl adc sub or ljmp add inc mov xchg add xchg inc xor inc mov push pop inc mov inc and je mov add inc jp (bad) mov incl jne test jne or jne xor or into inc aad adc jne inc test aaa dec mov lsl add mov add test fbld sbb jne jmp loopne pusha inc mov xchg push sbb mov fbld inc call and add (bad) (bad) (bad) out incl rorl vcmpsd or cltd inc idiv cmp je ja dec je and hlt (bad) jmp cmp je cmp je test aas popf hlt jmp mov cmp mov or lods mov into jmp scas mov lock jmp mov inc in clc adc dec add cmp enter jmp jbe mov push xor in rep mov lds test js shrl shr cli mov movb jne dec add std adc (bad) cmpb je call dec rclb cmp push (bad) mov and nop in cmc es (bad) and cltd or xchg xor cmpsl enter hlt dec mov cmp sti sarb ss and and and jae push push sbb xor pop mov leave mov (bad) mov jp les xchg (bad) push into popf and lods xor (bad) xor xor and and push data16 pop dec pop jbe xor insb cmp adc cmpsb insb outsb insl and xchg int xor sub xor cwtl outsb (bad) nop dec int dec cmpsb jno dec xchg insb adc xchg mov mov and aam lret xchg dec je gs mov or and jl and add insb (bad) xor and and movsl push jp mov maskmovq negl add stos pushf adcl inc loopne and out mov ja outsb jl push fsubs xor and sub jle into sbb xchg mov xor daa addr16 push rolb xor cmp add loope xchg daa sbb sbb sub dec daa inc or sbb push dec xor dec push fmull call arpl notl dec adc and jmp push add sbb cs sbb dec leave dec add add insb stc aas fwait cmp dec dec daa dec dec mov stos mov daa lret sbb sub dec or lods dec dec push or ja or dec lret dec push or add (bad) cmp or xor out and inc cwtl daa cmp addl pop inc push sbb mov add cs (bad) jg inc data16 jl jns je inc lds sub pusha je jne inc push push push insb or jmp pop dec add cmpl popa cmpl lds jmp jmp (bad) lds or or loope lds mov mov psubq lds repz inc movzwl popl flds std decl test sbb cmp adc iret incl stos inc push jbe jmp adc rolb decl adc loope inc mov inc shr inc inc out mov or jle inc jge dec lds cmp sarb inc cmovg mov out inc dec dec and movb repz push inc (bad) pop pop (bad) jmp mov lea dec lea xor xor (bad) (bad) decl jle dec mov dec mov call je dec or movsb jae out cmp dec cmp jne dec lea push clc (bad) lcall enter mov inc cmp je add or lea iret aaa push outsb add adc inc mov ja add xor je xor sbb xor das test push (bad) mov in jg dec arpl je dec icebp pop rcr mov lahf dec inc in mov call into stos fisttpll or mov arpl out inc mov jmp out bt jae mov into jo jge or jmp je push jmp in dec mull (bad) jne adc fmull and mov rcrl or rorl mov (bad) xlat adc mov stc call cmp je ss and cli and fistpl xor sbb add jne dec inc jmp cmp jne scas push inc icebp iret add jecxz mov pop jmp mov ret mov jmp cmpl jg jmp sti mov mov lods adc sbb push mov mov movl jle je dec push inc mov outsl ljmp setg add rcl subl pop jne inc je cmp test jg mov das or lock sub dec mov cmpb add cmpl jbe xchg add mov fsubrs addl add cmpl and adc inc mov popf xor adc mov push mov mov sub add movl mov dec mov inc sarb call and add (bad) pushl or inc inc cmp jne cmpl pushl dec adc lahf add test femms mov sti jmp addl xchg adcl jb mov sarb adc rorb pop lahf lods xor sub ret nop test std dec inc mov je inc mov inc cmp je addr16 add test roll or dec clc pop jno das sbb inc dec mov inc mov into fstl test (bad) pop jne pop or lcall lds sarl dec inc inc cmp jne inc (bad) (bad) (bad) (bad) inc add enter cmp (bad) decl lret jle inc mov inc mov shl inc test sbb inc mov inc movb popa jmp xchg enter sub rorl mov mov out and out dec not inc lea dec mov mull decl cmp jle movsbl dec mov call ret (bad) je dec and std jge inc inc std incl mov dec inc dec add call push pop je inc add jmp jne mov jmp ja adc (bad) popa dec (bad) ljmp in and add jne jae mov jb outsb ljmp (bad) dec lea (bad) rep movl lea les pop cmp orl leave jmp fstl jmp or enter pop or enter push in in and out pop nop inc push sbb (bad) mov push sbb xchg sbb dec ds push (bad) mov outsl pop fmulp nop inc push sbb sbb outsb push sbb dec ds push (bad) mov jg mov nop inc push sbb sbb ds sbb push push idivb out (bad) (bad) enter mov mov orl outsb pop orl dec ds sbb in and mov fs inc push scas mov inc push sbb dec inc push sbb push or jbe push idivb xor and and and sbb sub es push (bad) add push psadbw pusha pop (bad) (bad) mov enter xchg xchg and and rorl enter mov pusha pop (bad) (bad) mov enter xchg xchg and and rorl enter mov inc cmp push sbb pop xchg pop xchg fs inc push inc fs inc push ss mov pop sbb divb jg (bad) cmp ja dec lea dec arpl (bad) dec add jmp mov (bad) mov sub sub cmp ret ret lea dec mov dec lea sar rol inc fild add sub or jl add jle aas add and jg sar mov dec mov inc movzbl rclb cli dec je fbld clc or rol dec adc mov je scas and or ret add jbe loopne dec mov inc xor inc mov cmp and sbb and mull loop call aad mov je cmpl ja mov dec arpl clc inc mov dec mov jmp sahf push pop ret adc (bad) jg sbbb dec mov inc cmpl jne addl xchg add mov negb addl (bad) xchg push cwtl xchg das js je popl jo pop dec mov dec lea jmp cmp inc adc clc (bad) xor repnz mov call push addl or dec out sub (bad) adc dec cmp inc mov incl dec xor mov mov insb adc or jmp pop (bad) outsl orb imul stc xor cld mov mov add call call addl dec outsb adc lea cmp ja mov add xor jg out ja lea dec mov cmove incl inc rolb mov mov xor sub inc test cmovne ret dec lea adc push push add shl insb or dec mov jmp push inc add add dec and sub aaa dec arpl js add dec lea dec mov test arpl dec lea movl add call jg inc or and inc in adc std ljmp cmp dec mov movzbl cmp je cmp je dec test add sbb sti pop js mov cmp push dec fisttpl push add jae lea xor jmp cmp jle jmp lahf lahf cli out clc (bad) dec cmpb jne insl dec mov call js jge (bad) incl dec sub dec sub xor roll ror ss dec sub iret rol add xor or (bad) outsl mov dec lea stos clc mov cmp sbb dec mov jle sar jg aas popa sarb add testb (bad) je cmpb je outsl push cmp inc mov mov jle dec mov inc inc dec pop dec cmp jne inc sbb (bad) decl mov or dec faddl stc cmp dec mov out xor dec bt jae cmpb movd adc jl xor push push test arpl inc nop xor outsl inc dec test dec lea jmp jg mov je or add sub out and inc adc stc ret mov pushf mov mov out jg inc dec pop pop mov add sub xchg dec push jge jg hlt outsl xlat lea inc and lea mov xor fstpl mov jp or inc adc or push outsl icebp es and mov and jne adc jg fnstcw call (bad) dec mov mov add mov dec mov ret jbe je xlat mov aas ss jle pop ret popw pop mov cmpb out jg les out dec mov cmpb je or add mov rolb dec mov mov dec bt jae xor cmp jne cmp sbb mov sub lahf imul clc fldl mov cmp xchg (bad) jne sbbl (bad) jmp add mov movzbl sub cmp fiaddl lret mov mov ds cmp dec lea decl dec cmp jae movzbl cmp jne dec mov loopne test xchg test add cs inc cmp jg inc add aad and mov add push cmp jle dec je popa shlb or sub add inc in cmp mov push popl mov add mov call imul and cmp (bad) rorl dec arpl and std dec mov mov dec xchg cmpl stc or xor pusha clc jg or lea cmp ja jg or orb add out fcompl sub iret lea cmp ja out cmp jmp (bad) jmp jo lahf xor mov jmp cli out fidivr and add cmc inc mov sub xor pop leave (bad) stc dec lea push or adc mov test pop clc ret add ds je imul ja mov inc (bad) mov dec pop je and mov pop xor test jns sub add dec mov dec pop mov je (bad) dec add pop jne cli sbb mov lahf sub jg ljmp push mov cli daa jbe movl (bad) call lea cmp setbe and cmp sete or movzbl ret mov dec mov push dec adc push lcall sub and and cmp mov or sbb adc dec mov sub and (bad) mov jmp jne xor jge cs dec mov test dec mov js (bad) addl cmpsl fild ret shll dec dec cld pushl lea cmpl ja jmp cmp inc pop add stc call pushf mov add loop push das sbb cs cmovs das mov jg fild out pop inc add getsec mov jg pushl dec mov dec mov insl dec lea inc mov dec cmp ja icebp outsb xchg jmp or pop pop jecxz or out loop xor clc dec call add clc test inc or add dec add aaa adc test jne dec or and mov add push clc loop mov call xchg jae jmp (bad) lahf cs in and pop popa jmp rcrl mov add movl loopne jp sahf or (bad) fisttp jne xchg sub sub ret nop jg clc decl movsbl cmp je cmp jne dec lea pusha mov icebp call add (bad) jne test pop sbb in lar dec lea call inc push movsb call inc pop push outsl pop scas je sbb lock inc mov adc push mov icebp call repnz push mov sbb repnz inc mov add push jmp jns cmc and and (bad) addl xorb jb lea inc mov jmp mov and cmp je inc push pushf scas inc mov inc movl add pop sub and cmp je fbld cmp je data16 test sbb divl test dec mov call fist sub clc xor adc je mov clc xor test xor inc or out inc rcrl cmp jmp jle dec (bad) or xchg inc dec push push push lock dec je outsb push jo fdivl dec mov mov repz incl mov adc subb incb jne adc cmp dec mov push sub cmc mov jmp cmp je jo test jmp in enter call mov addl or cwtl inc shr cwtl mov jne out dec inc xor jmp aad outsl das fdiv ds jg mov sbbl cmovp mov test push lock add push mov js mov lods ljmp jne add inc cmp jge dec arpl cld mov dec dec mov dec lea inc movl add inc mov movl pop fstpt mov mov (bad) cli or add mov jg cmpsb je dec adc cmp inc cli in popf mov lar test or jne stos test cvtpi2ps mov dec lea pop and jg adc push je cmp paddw movzbl cmp je cmp jne dec mov pop std jno pop inc pop icebp xor adc mov (bad) cmpsb inc je out mov cli imul jo mov popf and je test emms sbb cmp insl lock mov sqrtps fistpll pop sbb mov lahf scas icebp and insl je icebp sub mov pop cs cmpsb gs out decl xchg ret sarb jne or add in adc lea inc ja call adc int3 out adc pop daa mov cwtl sti loopne loopne nop dec test pop cld icebp call dec daa ret lds test push test ds mov cmpb je cltd leave pop cs or mov rcr (bad) adc (bad) je jb mov xchg pop das pop inc daa jae lahf lock lock int insb shr out cmp inc movl sar daa (bad) jmp cmp jne xchg in cmpb pop negl push lret vhsubpd call mov jne inc inc mov loopne ret fsubr dec pop jg jmp push mov cmp mov sub bound out jg js push inc mov call cmpb cmp dec repz dec dec dec mov andl cmp sub loope push lock mov lods sub or push and sub and sub popf add and push xchg (bad) test stos cmp inc stos (bad) push call sbb xchg sbb mov push push xchg dec mov mov jo adc push stos mov add add sub cmpsb xchg xor outsb pop mov push jnp inc inc xor inc pop call (bad) jmp sub (bad) push ror loopne cmp dec sub and push into pop pop pushf inc or outsb jb mov imul sub jmp pop jae push pop push dec mov in popa arpl (bad) jbe gs jns lret movsl add sbb sar mov or cmpsl pusha dec call mov movsl mov in test jne dec popf pop fnsave lahf cmp data16 sub pushf sti cli je test dec and repnz (bad) int3 pop cwtl fistl xor std std pop adc push in xchg jmp rorb or jb js add test mov dec (bad) jg les inc test daa mov movsb pop dec cmp je cmp fist imul inc add lock cmpb mov mov mov mov cmp xchg cmp add sub dec and xor (bad) aam cld xchg add mov or stos mov push push cmp mov test in add mov add or mov adc inc add add inc inc aad pop or int3 xor call xor jns lock sbb dec sbb add das jo cmp loope xchg push es xchg ret pop xor jb mov call loopne sbb jne pop xor cmp or int cmp inc roll jmp pop movsb aaa xchg lea inc adc fcoml fbstp add dec mov les mov aaa xor xor xlat push inc popf mov les add orl data16 stos dec or mov inc movzbl flds add ss mov icebp adc adc push in test popf jae pop jmp or in xor xor push xor or adc (bad) mov fcomps mov clc mov mov sti pop adc clc jmp push cwtl jb xor sbb stos hlt rclb aaa jmp icebp fsubl push popa nop lcall jmp test xlat fs mov jo fidivr sbb sbb ret sbb jo loopne push out jg push xor pusha mov xor enter cwtl fadd cmpsb xchg call test loop out popa pusha push mov imul maxps jae mov adc sbb fisttp add mov (bad) fidiv mov rolb sbb mov (bad) xor or mov insl je sbb andb and ds test rclb xchg inc gs ret jo (bad) call push adc lea sub pop imul jne inc jne andl mov jo add dec cmp mov sub call bound xchg add outsb mov das outsl mov arpl fdivl mov add (bad) cmp push les dec inc inc xor sub scas aas adc jp cmpb test add pop pextrw and addl cmp out or mov cmpsb dec push push or repnz subps sub loop adc popa out loope cmp (bad) inc psubusw cmp push and arpl adc or add pushf fldenv js pop pop adc mull movsl or das mov lds push push add addr16 xchg je jmp pop cmp mov (bad) call (bad) ficom dec mov call shll dec adcb fdivs jl and call inc mov fldl test orl arpl shr pop adc movsb lock or jle xchg jae (bad) pop cmp xor mov cmp cmp je in pop mov xchg sub testl adc xor adc sahf (bad) adc pop aas movl aas sub dec xchg sub test add lsl (bad) jae faddl pop sbb jg inc pop ljmp (bad) aas (bad) lea pop je cmp je jle cmp jne scas add cmpsb jo (bad) movl inc dec jbe sub cmp daa xor cwtl pop mov std jo cmc and shr cmp or xchg adc mov cmp cmp fs mov ljmp sbb dec pop mov clc pop pop jmp inc jle ljmp ja test xchg xchg lock (bad) xor dec mov dec lret dec cmp adc mov out ret aaa adc pop cmp jne subl ficompl idivl adc bound test addb (bad) loop ja jae test cmp xor les sub sub mov clc inc pop rcrb je and sahf jmp mov je clc cmp je mov cmp push jl dec sub mov inc sub inc jo clc or mov mov aas and movsb jecxz mov mov int3 jle mov adc jg sub enter cli dec jne out add cmp xor repz add adc xor les push or call clc jg mov dec mov push add mov xchg inc test je inc pop adc cmp je (bad) out arpl cwtl cmp mov rorl and pop nop sarl fs ret sbb cmp adc push cmc (bad) xor out or sbb in je movsb xchg movzbl in mov jne repz mov cwtl repnz or lock mov inc pushf js or dec test fwait js pushl inc cmp inc cmp les add mov jg (bad) xor mov jmp das js je dec xor call sub loopne xor call dec js inc fwait or (bad) std inc cmpsb pop (bad) sbb add mov or mov pop and add push push call addl mov stos pop add adc adc aas adc mov sbb push jle mov je roll add jge fs out dec mov clc adc pop sub push and sub call jae lcall sbb jne mov sbb scas fildll je lds loope sub push data16 pushf adcl loopne clc stos add mov imul mov jne popf sbbl je adc mov call int3 push mov jmp fist ljmp movsb dec lea mov add inc (bad) pop inc mov xchg mov adc jae and mov call hlt das out cmp pusha insb out jge pop test mov mov lahf jecxz mov movsb outsb lahf pop push add rorl jecxz in out jb je test pop jmp into add dec or sbb push jo xchg pop pusha jb and xor ss pop xchg ss sbb icebp jg sbb dec lea inc movl mov mov jmp mov sub je test cmp insb and inc or xlat rolb mov inc sub inc (bad) int pusha inc loopne jg jnp mov jg mov call out jnp adc or ja pop movsl mov mov dec arpl dec or xor lahf js inc add mov mov cmp push push lahf je test and lea cmp ja sub scas and mov sub adc aas pop or xor jge jge sbb pop dec mov stc scas les shrb call daa dec mov jmp mov and (bad) xor iret icebp pop mov sbb js inc movsb imulb mov ss cld dec sbb inc and ja and dec mov call and lret fstl jg pop mov das test je inc stos dec inc mov mov arpl aas pop sbbl adc in mov insl pop pop out xchg pop lea sarb fs shrl cmp stos push mov dec lea cmpsb and jl sbb jns (bad) add jo les jmp imull sub cmp ja sbb push add (bad) jg sbb adc cmp jg inc or jg mov sbb and mov or cwtl das and popf add rorl (bad) (bad) jg sub mov sub dec arpl dec shl dec add cmp mov add cmpl adcb emms aaa add movl or add loop rcll mov xchg call jmp rol in repnz je ret xchg test and out pusha ja call out pop loopne (bad) cs test fist test pop mov test jne adc jge loope dec adc outsb call push lea jns xchg aaa xchg das add sub push inc jle in dec add jnp dec iret cmc mov add jbe mull popf push es sbb test dec enter jle iret dec lea dec out fmull pop je mov cmp xor clc or jmp je loopne sbb ljmp sar loopnew xchg inc test dec lea dec ds push decb xor scas inc sub test cmp or dec mov fcmovnbe arpl cmp jg lcall pusha enter xchg call jb jbe mov dec fisubr fisub notl or mov loopne and dec fs jnp cwtl into (bad) subl enter xor inc stos (bad) mov push mov (bad) ja push pop aaa adc xor cs nop ja sti fwait jo jge lea in adc (bad) mov xor xor mov pop inc add popl out cmpb mov sti add je je or dec inc or pop cmpl or pop jo in int3 cmc sbbl jmp mov sbb fnstcw adc dec and int3 and movl jle (bad) incl or outsb sbb aaa cmp add sbb (bad) mov xor xor out in mov sub push sub imul popa cmp setbe mov ja xor jl call jnp clc cwtl inc add dec cmpl cwtl jmp and sub inc sbb rolb sbb je mov push jae xchg ret hlt xor rcrl das dec call mov sub iret fcoml xchg jmp gs push and sub (bad) cmc out adc int idiv push out std pop jne xchg adc fcompl mov jmp pop add daa lcall hlt orps ud2 dec mov ret sbb sub outsl and pop add stos sub jno pushf add bound std out test inc or inc jb jg imul sahf aas mov sub jns fstpt mov or mov jmp mov jnp add loopne aas mov je fildl jmp cli pop lea inc mov inc mov mov test jnp call dec je clc out (bad) ds mov inc mov mov mov mov mov daa jbe movl fidiv sub jae call inc add (bad) outsl push push add test das imul or ja dec jnp loopne mov mov ret aam sub popa adc out fucomip cmp (bad) inc adc adc and xchg and outsb je xchg jb add mov jne mov dec jl call fild sub mov shr mov enter rorb or or dec mov inc cmp je (bad) and mov inc cmp jne sub call mov inc cmp jne (bad) mov mov je addr16 inc leave cs inc decl inc xor iret mov add cli jbe movsbl jne lea mov out mov pop xlat (bad) incl sbb sarl mov add push inc rclb lea movl or dec adc insl arpl test mov (bad) jbe test vsqrtsd mov xor mov xchg rorb jmp and and leave jne mov fwait setle (bad) jae rcll mov or jmp (bad) and push xor push sarb call insb sete inc or fbstp cmp arpl push test je jmp aad mov mov clc fld1 rcl push je mov jae fwait xchg add dec sub cmp loopne call add dec jne cmpb je cmpsl arpl mov jne add pop jecxz je lds loop jp add aaa cmpl jne mov jp or mov push push dec movl xor fistp repz cmp lret dec sub fwait decb inc mov dec mov adc lds and in and inc add push sbb pusha add incl sbb cli cmp push lods xchg cmp loop push dec jb jg inc fstl scas push je decb test add add imul addr16 imul jl mov out aaa loope test dec jne or inc je jae int imul dec scas ljmp add cwtl mov or pop sbb movsl inc push int shll jbe mov repz call flds and jne or je jmp iret cmp scas (bad) (bad) sti pop cmp jne movl or out je dec mov mov outsl sar add sbb mov addl adc clc inc adc sahf ja (bad) dec sub inc mov dec push push negl mov or and call inc (bad) sbb test pop inc jne add add fisubr jmp dec inc xchg push sbb fistpll fs inc test je pop rorb (bad) psraw mov shrl sub sti dec shlb jmp add imul rolb xor mov push scas mov inc jne push mov in push rcrb inc xor call mov call shll cmpb jne movsb push test pusha fldl les pop out in lds lods push jae imul clc fwait (bad) testl outsl je out imul mov je cmpl inc add mov and or call jo lea cmp jbe je sarl hlt insb je jne jnp mov in pushf sbb hlt add icebp push pushf push sbb pop lahf test js inc inc mov roll mov add lea dec dec (bad) sub movl (bad) mov xor lock sbb inc aad lea xor sub jge ficompl dec in loopw pusha mov cmc dec (bad) jp in shr out rorb adc jae or mov dec rcll (bad) mov repz jne and pop jne mov mov mov addr16 or inc fsubr icebp out sub xor sbb mov call pop pop or mov orl jmp push data16 sbb (bad) mov add (bad) jne mov add rolb xor jmp cli cmpl ja dec lea xor jecxz arpl dec add jmp out sbb out (bad) jae jmp ljmp cmp je xor je loop ja or xchg or cmp in inc sbb add mov xor jl dec lea (bad) xor or lret sbb int fisttpl dec inc inc add jle lods sub out dec jmp inc mov sbb jmp inc jmp sbb js adc je push cs push mov inc xchg jl sub or ret push pop fimul je jbe scas pop push mov mov dec add scas pop jmp mov jmp mov add test cmp lahf loopne mov daa jb lahf sbb mov test lds or mov mov jbe dec cld pop into jle imul xchg cld jge sar sub add xchg loope mov pmuludq in pop mov add iret or test cwtl xor fidivl popf xchg out add adc cmpsb outsl xchg jg cli ja dec lea adc ljmp add dec add jmp js sub clc ret icebp mov hlt pushf pushf jo ds push push jmp push pop scas mov (bad) call nop mov movzbl cmp je cmp je pop mov cmp out je testb je (bad) decb push mov push or jne adc mov jp lcall mov mov mov lea cmp jbe cmp jne (bad) scas ss dec mov jmp adc push or rorl pop mov dec mov sar push adc sub test stos cmp inc mov adc or push sbb into stos adc in js lea or inc hlt cli xor xchg add sarb decl adc dec add jmp dec mov mov cmp ja sbb andl clc xchg push lcall or cmp ja sbb outsl add dec mov add loop test jne cwtl cmp push int and sub in addr16 (bad) sbb sub and je cmp inc adc loopne jmp dec xor and or es cwtl jnp jb lods fdivl fcoms (bad) aas inc add ja dec lea rolb je jb sub push dec and push ss jae and daa fisubrl or std jmp scas mov outsb test pop out test jmp nop repnz add (bad) call xchg aaa push add mov je xchg (bad) jmp outsb je or push mov xchg jmp dec js adc push adc inc inc cmp dec sbb pop gs dec ret add test inc in mov (bad) leave jae cmpb clc aaa hlt dec add mov test je mov cld popf mov push decl loop je and (bad) mov push dec add iret xor add pop xor addl lods dec and mov add inc mov jae adc aad ds lods sub out mov test imul push inc mov sbb cmp push sbb push jmp lahf mov dec adc mov add daa aas xor das stc jmp lea loop mov and adc jmp leave jbe jae out push add add dec mov call sbb jbe push inc xchg (bad) push cmp bound xor add mov icebp sub and iret mov mov je fbld scas out jbe mov sub iret or pushf adc and (bad) sti cs lds ds lahf fildll adc dec dec insb out xchg add mov push sti out cltd or pop xchg add pop (bad) testb or lret fbstp repz or xor and add pop or aas daa mov cld jg (bad) decl mov cmc cmp je test je cmp dec arpl jl and jmp jl dec add xor jmp das mov sub dec (bad) out jo adc or repnz add ja test inc mov jae jmp mov jmp fsubl xor addb mov dec mov dec (bad) lret push dec lret sub push mov (bad) pop scas add les movzbl cmp sti pop cltd mov cmp je frstor shl je daa je mov adc mov stc outsb jne dec lea push sbb dec add rolb mov mov std add push test minps dec add dec add inc inc jne ja inc aam movzbl inc sub roll mov cltd popa dec arpl mov ds mov lea dec lea cmp je test je adc xor or fstps dec aaa or ds std pop scas inc mov xchg je or bound mov in (bad) lret shr cltd in mov jne sbb pop insb jmp aas xchg push xchg dec add rolb dec lock jmp xchg mov test leave (bad) push nop xor jmp test sub xchg les lret mov and incb cs ret xchg loopne ja sbb add mov insl xchg cli sbb cli dec lea mov inc mov call jno ficomp mov or loop movsl and add or mov (bad) mov or inc cmpl je fs mov pop jle lods add push aam jecxz sbb xor test push cmc and cmpsl jne jecxz and adc pop xchg mov or sbb pop mov (bad) push xor pop and fstl (bad) fbld mov (bad) das pop mov mov jle mov into push in lea pop fs (bad) sti mov or cmpl jne or dec clc leave push pusha jae sub (bad) loopne push jo jle hlt push (bad) dec stc mov mov sbb push mov shr add test xor ja scas pop add rcr xchg hlt pop mov in dec arpl rorl test daa sub je roll dec lea inc mov ds nop mov add pop pop add cmp adc je xor push lods dec int into jo pushf xor adc add fisttpl test sub js in sub mov pop pop test ds je or inc jb jmp sbb cs (bad) negl je push sbb call inc icebp je je xor sub mov dec shrl fidivrl ljmp cmpl dec mov (bad) mov test je (bad) and push in inc dec mov cmp aaa cli inc mov dec mov dec sub push sub cs mov inc aam rorb ret dec mov dec je ret cmp and mov jne dec mov int3 adc loopne pop dec mov in cmp dec mov je inc mov inc inc inc lock jg push je xor pop inc ja imul sub and js cmpsb jne add cmpsb cmp cmp fnstcw loopne mov (bad) aaa add imul push enter adc and xchg inc ds mov ljmp out jl pop xchg je sbb sbb cmp jle sbb fbstp add jmp dec lea inc bound lea inc test jne jmp inc and add stos movsb pop and sbb je,pt dec lea and popl jmp jo jg aas data16 adc std inc mov sbb mov daa je add fs mov mov add xlat adc jno fadds or xor xchg aaa adc cs adc pop push cmove fcmovnu icebp pushl cltd push or out cmp ja je xchg cmp mov imul cwtl jo std jnp test mov push into lds les sbb and pop je inc pop sbb jbe inc jb xchg or and lret and test pop out jle jmp andl in incl rorb cmp xor into sar pop cmp dec mov je cmp leave pop cmp je mov int3 push shrb dec and add lds dec arpl dec mov dec (bad) adc jo add push ret jmp dec scas (bad) js push inc scas xchg pop inc xor les pop add xorl pop les into sbb and jbe jno (bad) jmp in push mov cmpl jne sbb push ja flds cmc (bad) decl xor sbb mov pop add ret jb mov inc add and fimull call adc aam inc xor mov rolw jl enter push (bad) flds outsb cmpl jne cmp jne or xor mov and lock js xchg pusha pop jo imul (bad) std dec mov call es ljmp mov repz cmpl je dec mov xor mov jnp dec bound xor dec mov loop xor sbb outsl cmc dec and out js jmp push lods das data16 out and call loopne xor jb nop fcoml adc loopne (bad) mov sbb mov ja jmp sbb jecxz and test inc lret cmp add xchg ds pushl add test decl je gs aaa add jp scas sti jmp jb xchg hlt cmp bound jmp data16 lds lahf push xor scas roll pop push fadds jo jbe ljmp mov inc mov mov and inc mov in xlat mov call xchg loopne cli jp xor je lret push inc pop pop scas adc std mov inc js je mov aas xor fmull push adc test gs aas dec pop pop sbb or jo sbb add test add and inc xchg mov jecxz xor adc xchg jo popa dec lea push in and test out pop or mov sub out rolb imul (bad) jno test push gs adc push lahf pop inc js popf push adc repz pop ret (bad) mov mov lock lods ljmp (bad) test nopl sub mov mov mov ficomp adc ret push jecxz out lea add push cs lock cmpw jne or incl dec cmp inc addr16 inc inc sbb in mov ret (bad) pusha add sub ret mov (bad) es cmp insb ret out lea push out rolb in dec ror fldcw pushf or (bad) je xlat or sub add dec cmp add add cli dec mov loop inc cwtl xor adc sbb dec lea dec lea and nop aas ficoml fistpll ficom add (bad) dec dec add std (bad) mov sub dec cmp inc mov rolb adcl cmp xor sti ljmp je dec mov dec add jmp (bad) xor adc faddl cmp sub sub movb rcrb sbb sub ljmp jge (bad) dec in and or pop inc popa lock inc mov dec push pushf xor dec cmp or into or adc or jge loopne fucompp dec ljmp lahf inc testb inc push mov cmp and je cli fistl add jmp ljmp or flds xchg mov push loopne jno cmp sbb xor adc add (bad) sbb ja or inc aam les inc or je add (bad) inc rol aam sub inc or inc jbe pusha dec test loop fcomi adc cli xor rdmsr test enter sub and dec cmp (bad) out pop inc and dec test dec mov je mov jp aas loop call jo call pop mov pop adc ljmp mov test jne inc cmp ja mov or inc sub loop movaps adc dec mov or fimul dec lea adc inc xor mov movsb out xchg lret push xchg mov (bad) out incl test jne add inc lea cmpl and dec shl pop lea sti arpl mov sub dec mov dec mov add out and cmp jge mov ljmp call orl adc jae lahf xchg bound add add (bad) jne jb scas or clc and jnp xor xchg lea or jp test les push insb push dec or (bad) out sbb out dec jno add pop roll push ret mov fisubr and adc xchg xlat add loope outsb add inc ss in mov adc addr16 in inc mov dec cmp inc push sbb popa pextrw add adc rorb jo jg or and mov mov movb jno xor mov test inc xor call xor or rorb pop pop add (bad) cmp out inc push mov std adc lds dec test dec mov inc lea out pop movsb mov inc and mov popf or (bad) mov jl sub (bad) fild xor js pop int3 inc mov hlt inc cmp je and cmp pop jl test frstor les cmp test outsl add pop mov nop xor std add cmpsb add cmp (bad) jmp pop mov pop cmp rolb jmp xorl pop popa jmp jne sbb jecxz movzbl lea cmp ja cwtl sbb xchg mov out clc call arpl cmpb jne insb and dec arpl iret cmp cmp repnz or cmc xorl aas aaa xchg sub push lcall inc mov mov cli mov sbb and addl sbb aad jle and lock mov xor push xorb push jmp out ss adc cld push popa insb mov sti (bad) or and add xchg sbb xor xor sbb jb sub outsb cmpl mov int jo insb mov push fwait and adc fstpl fbstp inc lods xchg sbb adc sub jmp or popf arpl sahf test cmpl lea call push popa test inc pop cli je pop mov loope sahf andl int3 dec je jecxz and and adc js mov xchg fstpl test adcl push xor ficomp xchg addr16 (bad) subl add sti sbb insl sti das (bad) icebp mov lahf mov mov jo nop sbb bound (bad) and dec mov inc lods pusha cmp ret push leave jmp fisttpl arpl or push sbb adc xchg sub sub sbb add cmp xchg out fucompp xchg adc jns in jg nop addr16 sahf insb mov mov inc (bad) xor sahf or imul inc adc adc es and fdivl mov adc inc mov inc cmp out xchg cmp dec cmp hlt push add dec sub dec mov jmp addr16 (bad) out adc add mov dec mov call add (bad) adc in call adc mov push add rorl ljmp dec sub je dec add jmp test dec out incl add inc test inc jne jmp (bad) adc test jg mov jmp fcomps add test out enter gs das or add push in dec scas inc and mov mov scas scas inc push leave jno xlat or jg or cmp ja jmp sub sub ljmp (bad) mov xchg dec mov movzbl dec sub dec cmp jle inc cmp jne addb (bad) (bad) jle pop jne cmpb jne dec lea adc pop and movsbl sub shl mov dec cmp je cli inc movzbl xor lea cmp ja jg push cs jmp (bad) jmp jp lea add cmp (bad) dec jo or lds adc shll jo push pusha loope fs lahf (bad) je add push lods rcl ror sub je nop and mov rclb jge rorl test push sub sub xor pop cs repz jne xor loop call fmull sbb inc (bad) push push (bad) adc je xchg mov push add adc ja test xchg je fimull cli leave inc ret dec cmp mov cmp xor adc insl cmp jno adc je,pt ret movsb cmp ljmp aam inc or mov mov incl jbe add jne adc xor jne jg stc cmp test or add lock xor test add cmp jne dec pop outsl add and ret mov adcb test adc adc les inc jbe add jns or test jg mov roll les inc mov dec mov repz jp rorl ret jne or and cmp je cmp (bad) ljmp seta setb inc sub inc movsbl inc and and xchg pop lods int je add out fdivrl negl add cmp lods cmp push sbb dec cmp rolb add fs mov test sbb xor lea fiadd dec lea loop fcomps xchg and call jno loope rolb scas shrl jno and jecxz jno mov push pop jne cmp push or arpl dec xor inc scas mov xor mov in push add dec pushl sar pushl (bad) jmp adc cli cmpsb push cmp jne sbb fldenv push add pop fwait aaa lea aas xor mov cmc xchg adc jbe jmp addl iret mov stos xor xchg jg icebp cmp test add push jne dec mov rorl cmp test mov fnstsw mov jmp inc je fiadd cmp cmp arpl mov outsl dec add dec lea movaps or repz mov lock mov rol jg test mov pop inc mov call and test jne mov inc cmpl fdivrp and je lea dec orl cli out sbb push jne dec lret adc inc dec inc out push aaa xor add and cli outsl (bad) stos call and (bad) jne xor add jmp clc and xor add jne push inc add test shll adc sbb addr16 xor mov arpl mov jnp sti mov adc je dec cmp pop xchg inc and mov fildl call or ret xor test xor movsb pop ret or xchg jmp shr jle jg jae fs dec test je (bad) das jne fwait mov and orl jne (bad) sbb mov repnz lds jmp scas dec push orb push je les enter incl cmp je inc add jmp inc mov cmp mov add inc mov dec add push hlt incl add fstpt dec cmp je decl jg call add jmp dec mov mov adc inc lock jne inc cmp add lea xorl aad add pusha or mov test jg lret add or ds sahf cli arpl inc cmp arpl leave inc add dec push rcr cmp pop inc mov jge mov dec pop or lret adc (bad) jne dec (bad) sbb lea outsl jp mov push je inc mov dec mov cmp jne fcomps shr sub ja and jnp adc (bad) and js scas ja lea fmuls das ror jmp cmp dec call popa push in fcmovnbe mov loopne adc mov dec cmp insb clc xor mov cmp jne je,pn scas sbb add (bad) sbb or std ja es mov outsl popa dec mov adc mov fist call roll aaa dec hlt cmc mov jl scas add xlat xor and scas jmp mov mov jne lods mov xchg mov add adcl (bad) cmc je xor sbb popf mov test add in cmp ja inc mov sahf dec arpl add movsb push sub into xor invd and imul mov leave mov add jmp push mov mov cmp scas xor lea aad sbb pop add jmp (bad) movsb sarb add cmpsl (bad) sahf xchg loope dec cmc jmp shlb xchg cmpl testl jo enter aaa inc ret fld1 sub sbb mov jne jmp nopl jg jne mov and fs cmp sbb sub sub lea and add and xchg inc fwait dec jg jmp dec mov xor cmp pusha inc sbb dec fmull call mov add xchg sub push bound cmc and cmpl jne mov dec cmove jmp push jg dec mov add add inc inc cmpsb mov std push scas lea push lahf xchg pop cltd dec test mov call sub shlb jbe mov cmpl adc into mov (bad) mov cmpb jne adc and loopne mov jmp mov sbb jmp out sbb les dec mov rolb sub pop jmp in or adc mov ja nop or cmp loopne jnp mov or adc push frstor loope cmpsb mov mov xchg jp or jmp data16 xchg mov mov dec and enter ucomiss jle xor cmp push pusha (bad) loop add xchg out sti std scas mov jbe cli pop jne enter into repz or inc mov adc xchg roll ret das (bad) lahf popl (bad) jmp arpl mov rolb pop ror jg inc pop cmp dec mov dec mov je inc mov cmp dec adc lock movl das add dec mov adc add mov mov mov push ret dec shr dec cmc call mov fldl out dec test sub cltd sbb (bad) push inc sub cmp ja jno mov loop push mov lea (bad) hlt (bad) lods pop lds dec fwait popa inc aaa shrb lods arpl mov ja decb mov add fsubr jmp nop les xor mov add push adc jl xor dec scas lea dec lea les or jecxz xor test sahf (bad) lock lea scas nop add mov push xadd pop push cwtl jmp test inc jmp (bad) je mov movb add jb movsb sub call add dec mov mov jo bound pop push xchg pusha push sub mov or out and xchg and jne sahf dec enter lahf shrb sub dec addr16 and mov xorl add add cs jo shrb loopne inc pop or out sbb mov or cmc xor or mov call adc sub mov imul ret mov adc or mov pop pop xor xor mov lea in rcll out scas ss pop pop adc test adc jle lea inc and out mov xorl test and clc and jae outsb add xor arpl or out arpl mov ja push inc mov fs cmp add (bad) jo mov jmp mov je sbb adc add fiadd mov popa xchg push call jb movsb mov fs pop je popa add jmp xor mov add and lea adc je inc mov icebp lods fimul jmp fisttp pop pushl les xor cmp ja dec cs loop ret add jne mov jecxz (bad) jne (bad) jo pop jo in sub lock call sub or test mov or mov movb dec mov add test add add (bad) jae adc faddl add test roll bound add (bad) or dec adc aad or dec mov out cli cmp fadds movzbl sub jmp aam roll sub test js loop test addr16 test loopne inc pop mov add negl add xor fadds pusha out test sub push inc ret jbe push push adc pop out push clc pop out sbbb cmovnp jne and mov imul jne test dec pop or in pop mov sub mov xchg and sbb mov ja push push testl (bad) sbb jmp mov scas push dec mov test inc mov loopne dec mov call ds inc fist cmp movl mov pop dec mov (bad) jmp je cmp je inc inc into icebp call sub adc jmp mov clc test je daa ja shlb add lods or cmp test sbb add (bad) fimul and xor mov jnp iret dec mov or mov call inc test dec mov dec mov rolb je cmp jbe xor xchg jo pop adc lds adc aad add cs std mov cs or pop adc jne and aas inc lcall call lahf add fistp nop or pop pusha decl sub dec lea js inc xchg popl dec idivl test mov dec cmp inc mov loopne test cmpsb pop inc subb insl add into subb mov push jb in inc pop nop push jb push outsb cmp add scas jae addl inc mov incl inc out in lea add and clc mov dec add dec lea mov idiv xor dec cmove out dec sbb dec sub je dec add mov dec cmp xor sub ljmp test fildl cltd popw addl sbbl aas enter xor inc sbb aam test add adc lods test cmpsl (bad) add add jb mov jg dec mov pop jne push bound xor sub addb (bad) sub sub bound sub xor xor xlat ss fdivrl push cld sbb cmp jne jmpw mov mov daa roll push ljmp popa int andl or test and inc push lock sbb mov dec lea jmp push sub xor insl jnp (bad) and jp adc stos stos stos adc notb or mov je pop xchg mov bound insb ret add fisttpl mov adc push jne jp lds sub cmc (bad) (bad) add loopne imul aas xor sub sbb ret lahf jg ret incl cmp dec mov je movl lock (bad) jmp dec mov dec arpl dec mov dec test je sub iret bound or das cmpsl xchg mov das inc and and mov mov ret (bad) add lahf lcall inc mov and rcrb mov cvtps2pi or cli es jns add mov and aad jbe popf sub mov mov orb push inc pop pop pop (bad) mov jmp inc iret push cmc rolb add dec mov xor addb add cmp adc aas adc pop dec mov inc xor dec mov inc cmpl and (bad) cmp dec mov dec mov mov adc aad adc push je std inc add inc cmp setg jne rorl dec mov or data16 xor xor call popa daa shr pop cmpsb dec lea jae dec (bad) or cmp push les add xor roll mov and nop fs mov pop outsl adc ljmp sti or mov cs aaa jb sub push mov cmpsl lock cmp jne cmp jne orl jo leave add scas out andl add or cld (bad) push jg pop (bad) sub jmp dec jno sub dec jg or add dec imul es or add call sar dec xchg fist push inc add (bad) aas inc (bad) xor dec mov inc cmp je (bad) push cmp (bad) dec mov repz (bad) pushl stos mov (bad) cmp jne inc movzbl sub cmp cs fdivr ja dec mov add mov adc je jecxz in mov jmp dec lea std incl mov lea movl dec mov movl or inc mov mov dec lea movl add inc fild dec movl pop sub and adc aam lods (bad) mov mov add dec sub jg jnp mov je daa push aad dec shr dec and jbe lock lea add mov cmp dec mov dec inc inc loopne dec add (bad) cmp (bad) decl jge pop dec lea dec mov je (bad) (bad) icebp mov jo lods inc decl pop dec lea inc xor xor cmp loope test ret add ja jmp call enter sbb outsl cmp mov lock test je in ret lea sbb pop (bad) lock fldl add (bad) jb add (bad) adc repz icebp call testb imul jl fild fwait add jne xchg or lea jbe or dec iret inc je hlt sub jns bound ja adc cmp jne les cld out sbb movzbl dec lea sbbl mov adc mov dec mov je mov cmp dec mov jge int arpl dec sub add dec (bad) push hlt add mov je mov pop sbb mov cld push outsb stos imul jmp cmpb jg cmpl inc pop jmp dec mov arpl dec cld movzbl out rcr sarl dec lea push dec mov nop dec movl sbb dec mov dec lea pop jl jle dec mov or sarb (bad) pusha mov mov out (bad) or and mov je (bad) iret (bad) jo or test dec arpl addb jnp outsb js imul test dec cmovle dec shl dec (bad) std add add mov call rorb push jbe adc and and xchg jecxz je sbb mov and sub js pop mov pop incb mov dec mov inc adc add jg xor test and lcall std jg add inc setne add jmp jo (bad) sbb sbb ret mov icebp call jle js insb iret test movl ffreep sbb je add cli jmp xor scas mov and jmp addr16 jmp add dec add sbb push movzbl or jbe cmp je jmp in daa add mov clc add inc sub dec mov sbb test je jnp and leave je inc (bad) mov and cwtl mov add or stos xchg xor adc mov stos mov mov lods cmp adc xorb and test gs aaa pop add cs jmp pop mov dec mov test je dec test jno pusha sub test sbb aad cmp adc call pop mov (bad) push test dec lea and out out pop sbb call pusha int3 std aad test popl addl add out and jne sub xchg sti dec mov std add push imul and popa fcomp sbb inc popa dec mov fs mov test je pop jmp adc outsb int3 call dec dec loopne add mov mov push rclb add dec (bad) or shrl bndstx pop xchg adc adc call cmp mov sub inc ret mov pop scas mov xor inc push ret decl or call clc mov and jne dec mov fcos adc ret xchg dec jbe adc xor (bad) es (bad) call lahf inc jp or mov imul add jo fstl fsubr stos xor call ljmp call sub pop dec mov jle xchg pop out call fs xchg ds call jae cmp pop les je and adc jns (bad) jne adc iret scas decb ret sub cli decl inc (bad) cmp mov sub dec lea std jmp sar fcos adc jmp dec cmp jne dec lea jne pop pop jmp cld es xor jmp mov pop dec cmpl mov lock sti add mov pop push ret iret movl mov push adc and (bad) lret or insb or mov outsl (bad) xor (bad) imul sarb ret pop not dec mov cltd sub clc outsl clc xchg adc je and (bad) out call inc mov call call cmp (bad) mov call je sub dec mov (bad) fildll lock dec xor mov dec xor dec and dec cmp je add not iret fadd xchg mov sarb push out dec mov or xor nop mov fdiv xchg aad dec mov popa insb fisttpll sub inc inc ljmp call xchg jmp push loopne cmp jmp dec dec mov dec movsl mov push call in idiv std mov outsb mov call (bad) cli out fmul xor xor loope add or jo adc out sub (bad) cmp inc mov pusha add mov call divl or call pop sbb add mov call sbb inc sbb lea or xchg (bad) sub and adc pop (bad) and adc call clc ljmp subl mov cmpl je movl repnz adc lock nop dec lea (bad) fst lea je dec mov or insl lock aaa shrl paddsb jne xor jns inc inc (bad) adc push push das in movsd inc movsb mov add inc mov adc out or add call mov les pop dec mov jbe jmp js incb mov jl push inc fwait cmp mov cmpl ja adc or dec mov add inc fucomip jbe movups dec mov xchg jns add adc out jp sbb sbb push jmp adc cmp mov or sti lcall add nop movaps xor movaps inc and in or lcall cmpsb pop inc xchg mov sbb (bad) add push scas jnp loope sub xor wbinvd or sbb mov mov jmp (bad) hlt nop dec mov lds enter dec xchg jg dec arpl loop test mov mov push add nop dec mov inc je cld dec cmp jb dec daa inc add js inc rorl (bad) lea jecxz jle shrb icebp jne fld1 jno pushf jne aad dec adc adc fisttp xor dec shl dec enter and and call mov or and xor add in dec call jl xor adc test repz lea and push aad sti je sub and jo inc les add add test es add push adc mov add mov bswap add pop add sub cwtl and (bad) mov add dec lea dec and (bad) fist ljmp fldl sti and cmp jb std (bad) (bad) out pop xor mov add dec mov cmp dec mov jb jmp dec add jo lcall iret cmp dec mov push cmpsb mov adc test add push call xchg call xchg decl mov mov ja cmp cld jmp jmp jg decl mov cmp jmp jae fbstp mov flds dec cltd xor call icebp push pusha lea call inc (bad) pusha outsl jae ja adc sbb je dec lea aaa mov add call inc scas cwtl dec lea add push mov add and call and ret incl sub movl int3 mov es incl dec cmp mov bndstx test sub jae or (bad) sar ljmp sub test sub dec shr dec lea inc std rsqrtps add mov mov mov cli dec mov dec add add mov call mov (bad) mulb adc cmpsb cmp inc data16 lock mov inc loop push ja push dec mov jbe cmp outsb add dec add cmp neg sub jne out jg push or push or or movl js sub stos and cmovge inc jmp mov sub loopne (bad) pushl pop cmc icebp sub leave add and cld aam movsl dec mov inc mov jno or aaa inc xchg push test mov call cwtl pop cmp jno movzbl (bad) fcomip or or or inc movzwl das aas add jne dec mov dec or dec cmovs js pusha dec add dec xor push inc mov nop mov push ret cs mov dec or sub dec shrb ret push andl cli or inc movzbl inc test lea mov addr16 imul fsub sub movl call adc and call mov cmp std add (bad) ja cmp cmp add add ja cmp in pop adc jl xor mov jae adc adc mov sbb sarb add shr dec cmp cmp push inc mov (bad) ja cmp out fsubrl xchg or push jl call popf sub mov mov shr sub xchg push jne xor call pusha xor test outsl int3 sub nop mov aaa inc dec (bad) je cmp ja or dec adc out call stc ljmp ret mov lock add test xor out sbb shr adc stos pusha imul add sarb ret dec pop inc loope add add loopne push push add jb push std mov mov and xchg pop mov mov mov outsl jecxz sub add movl imul dec movsb ja push fimul lea incb es lea std jg inc fimull mov dec sub repz stos aaa (bad) fisttp jmp movb inc mov adc mov ret or lcall xor dec hlt add aam dec add mov mov gs (bad) clc dec cmp je dec mov call lds icebp sbb je call cwtl push (bad) call jmp out add jmp lahf aas loopne std out adc lret mov mov and inc inc inc and and addr16 stos push mov loope push into stos lahf daa stos jne mov xchg (bad) pop (bad) jo cmpsb sub loope sbb test push xchg add movsb sbb adc pop (bad) (bad) mov je sbb mov (bad) pop or pop negl cmp fbstp je inc call mov inc pushl add sbb xor add inc xor xor or mov ficompl test in add pop jmp ror push aas or pop jmp lcall ret push sbb int3 sbb nop dec push mov mov xor push cmp (bad) scas divl cmp int3 idiv (bad) jmp adc imul jmp loope call pusha mov (bad) (bad) jl fstpl adc nop call sbb fs test je dec mov lds nop mov jmp lret aad mov call pop push sub test icebp dec loope fisttpll fmull ja,pt adc dec jmp inc mov mov mov jne loopne xchg dec or pop ret mov sbb mov dec mov je mov data16 sbb call mov jmp aam mov les mov call mov ret mov sbb pop and (bad) or pop pop pop or je mov aaa adc jne jmp mov cmp lahf enter mov dec test jne jge and dec add adc dec mov arpl push adc adc lea aam decl outsl popf mov dec mov jmp jg mov test cli add mov add mov call rorl call add js mov iret sub add cmp or test pop adc (bad) insl nop mov jne sti sar ret movl sbb pop call jmp bound add out test ffree add pop ja xchg dec dec adc adc mov call (bad) pushl insb add inc cmp add xor cmpl je ret xor call inc cmpw sete jmp je xor sub jmp and cmpl mov adc lea movzwl test je sub dec lea dec std add decl mov dec cmp dec mov ja and dec dec mov dec fmuls jne pop (bad) fcomip (bad) adc and into call clc or ja (bad) decl adc cmpw jne dec mov call dec arpl jge mov pop inc push pop cmp decl ret sub or ret sub sti je je lcall dec mov dec mov call or and adc mov mov pop movsb add xlat std cs mov mov inc cmpl negl push dec arpl xchg dec sub dec add inc add mov push add adc rorb inc add je jmp or xchg or sub or dec mov xlat xor push or (bad) jb sub pop jg adc ss add (bad) or xchg int3 lahf or hlt popf mov inc cmp inc adc ljmp mov lcall dec in es arpl dec add inc shrl jle sbb testb arpl add ljmp cmp jne addr16 nop das scas outsl insl (bad) or dec test push arpl pop ja dec cmovne in aaa into (bad) in int3 lahf scas and aas sbb dec jno mov add in jns add or jg arpl arpl mov rol call lds sbb scas cli inc mov (bad) pop dec dec outsb clc push bound dec arpl fmuls mov sbb leave inc mov or sub mov or cmp dec mov jb inc add jo testl loop out xchg jne jmp jns xchg add mov (bad) xchg pop mov or inc test jg or xor add push dec cmp dec and jb dec sub sti orl dec sub dec sub dec adc pop icebp ret addl push xor mov jg call nopl arpl push xor das add scas incl inc push and dec mov mov adc es les (bad) fdivrl xchg ja dec arpl dec mov jbe loopne sbb pop inc das in sub leave ret pop dec mov mov or sbb lds mov ss push pop pop inc cmp outsl mov inc adc sub dec js sub adc add scas or inc and les idivl les inc or and push or sbb dec (bad) les test inc ret mov sub and mov adc dec mov mov aas mov mov dec mov pop cmp out mov add jne mov mov adc dec mov les pusha mov push adc pop pop and xchg and arpl xor insb jle test pop add or push outsl loop dec dec mov push cmp nop subw jmp dec cmp jne push inc xor inc out sub add dec mov cwtl loope shrl call sub call jne test xchg cld xor sub mov and test cmp jne sbb mov pop loopne cmp dec push lret push push push sahf fmuls outsl sbb inc addr16 and sbb enter inc movl xchg dec mov push xor jl cmp and adc jo stos daa xchg push jmp cmp pusha std imul lea mov stos call dec or call mov dec pop cmp mov push inc jnp dec movl pop sub imull call loopne addr16 and lahf fild mov pop dec lea jp adc jb jl movl pop out sbb mov lret mov push pop dec mov mov mov aam loope add pop inc and dec mov pop jg sbb dec inc and call or dec pop dec sbb fprem1 cmp cmp mov fldt cltd out sbb outsl push jns add fildl or jno mov (bad) (bad) jmp jae scas hlt incl sbb adc fist dec mov jmp (bad) xor ljmp or sbb pop inc or mov nop js std dec mov pop inc push mov jo mov fnstsw mov movl add sbb mov scas fbld adc test addr16 cmp decb (bad) jae jp or out add loope out or add jae repnz fmuls sahf cmp pop int inc int3 sbb (bad) or test or mov (bad) adc lods mov pop and dec mov cmpl add mov fnstsw and dec push jmp dec pop add push or leave addr16 xor shrb dec cmpsb (bad) (bad) mov inc les dec roll inc mov pop push adc push jnp jge push aaa xchg lock mov jne inc push insl mov add js movsl inc jo add jmp call add mov test je rorl fstl pop adc call cmp jne push jmp ret pop outsl lea xor call adc mov jo call imul call add out mov mov fwait test je mov jo jg xchg std or (bad) sti xchg dec lea dec mov out pop adc add mov cmp cmp xchg dec lea fbld add or std hlt scas mov (bad) je rclb add xchg (bad) sbb mov outsb and outsb popa das test xorb mov test or mov ret mov push add ja dec mov dec cmp ja cli dec or cmpsb ret enter xchg jg (bad) jmp add push lret test das mov loope dec mov call dec mov mov jne (bad) shr cmc out lcall sub dec cmp dec cmova dec lea in call dec mov dec sub mov call in mov adc lret (bad) mov add jg xor lock fsubrs pop dec neg dec and dec mov jmp into pop test stos and fwait dec mov add xor cmpsb decb and cmp lahf pop push xlat pop dec cmp jae adc mov jmp jae jno int add dec mov call mov inc mov mov or int xlat mov rolb cmp mov jmp aas adc cltd inc idiv inc mov test jne (bad) sub cmovne (bad) lcall lea dec arpl inc mov dec lea dec add dec lea test inc mov jle dec mov (bad) mov xchg aas inc lea inc sub cmp inc mov inc cmovg add dec arpl rcr std (bad) cmp dec lea dec mov dec mov dec mov add sbb dec cmp jne jge cwtl xor (bad) pop ret inc mov jmp das pop inc (bad) sbb add dec and dec mov rclb idivb mov stc push sbb adc les popf add dec pusha dec mov call call sarb xchg pop adc xchg push pusha imull es test and les clc out lahf (bad) mov loope in test sub andb mov fisttpll dec pop sti adc jmp cmp ret mov pop mov fistpl and push in dec mov dec push sub cld sub decb dec test sets mov and mov xor fisttpl (bad) (bad) cmc mov rclb decl mov jmp dec arpl in outsl mov xabort dec or xchg jmp or mov mov and pop dec pop pop cli dec cmpl mov fdivl pop add mov dec cmp comiss add inc test jne inc cmp jne inc mov test out scas mov adc mov cmp add leave add mov decl je inc mov and xor dec cmpb cmpsb (bad) cmp popf pushf add lahf sti or movl aas add inc aad mov in jne mov std test aaa fadd xorl lods mov push mov call xchg dec arpl inc mov dec add mov jne adc inc mov xchg cmpsl rclb mov jne jg pushf mov movl and sbb (bad) ds mov dec mov mov or loop lods or push adc pop outsl xchg jne scas fistpll mov xor jmp sbb ficomp les inc dec cmp rorl mov add mov scas add fldl mov insb psrld jl sbb cld lcall mov movw pop sub mov vmovss cmp adc enter lcall rcr lret xor cmp dec or push leave adc lea adc cltd lahf jge inc shrb test fisttp jmp hlt and test jmp je loopne add cmp cs add test or decb mov add jge lcall sub (bad) jne cmp jne andl int3 or cmp add je fdivrs notl add movl sbb lea and inc and test shr ja mov popl cmp jge jbe incl dec arpl dec mov inc cmpb dec mov mov mov sub inc mov sub inc mov decl cs mov inc cmp push aad jmp inc lea inc mov fidivr push inc movzbl mov test outsb and push dec cmp rolb ret adc adc cmpsb mov fcmovnbe testb call push inc movsbl cmp dec mov dec mov loope mov dec mov dec test rorl gs ret mov je jle inc adc je push jne in push pop roll jp add test bound fnstsw and lock adc adc lahf mov cwtl mov (bad) mov add aaa in pop cwtl lahf ja mov stc out out testl andb test outsl lahf or scas mov ffreep add mov imul pop ret std mov int3 sub loope push stos inc mov into xor mov add lds xchg sub popa jnp outsb test mov jo and call mov aas out or test idivb jle out out jge cmp pop inc mov mov push mov sbb cmp ja shrl pop jne or paddusb idivl dec arpl dec cmp je ret rorb std mov xor add sbb shlb add push cmp std decl sub xchg movsl fdivl pop aam jmp (bad) loopne bound adc jecxz mov inc out jmp cmp stc inc adc std xchg sti pop pop cmp add rolb cli std mov sub mov ss add jmp ja nopl mov mov std or add pushl ss mov addr16 add movl clc xor pop iret jbe push shrb lds lret iret (bad) mov stc sub call sub loope xchg xor inc cmp je ljmp push xchg test sub mov fwait mov insb sub push push stos jecxz rcrl adc (bad) aas mov mov mov je and sbb stos or cmp test mov cwtl lahf or add sbb add add adc mov xchg add cmp jae push aad jno lret add ret xchg mov dec mov add xlat loopne add sbb sbb mov dec mov jmp jo adc cmp ret sti (bad) incl jbe cmp (bad) mov mov cmp out scas xor dec adc lea rdtsc xor js push mov mov mov dec mov inc pop and pop or xchg mov call jg (bad) jmp dec mov ja (bad) sub jmp mov lea dec jmp push and mov ret jne jecxz add sbb adc xchg push cmpb add mov push jmp mov inc xor mov dec or inc in xor push call fildll push pop adc cmc das negb cmc clc (bad) ljmp fs add aad inc adc pop das sub (bad) jmp dec arpl je dec mov cmp je cmp jbe push adc push add inc xor movl push pushf sub and add mov dec dec std (bad) jg inc mov jne lea mov test jne movzbl mov mov hlt test je setno movsbl inc call dec and cmp nopl call inc lock add mov loope addl out std pushl or scas xlat dec add dec cmp ja dec mov sbb ljmp inc lea cmp mov jbe inc scas jne sti arpl lea jne pcmpeqb test xchg inc add pop dec xor jno decb jle div dec pop dec cmp jae inc mov lahf test cmp mov test push and mov mov add jne fcoml arpl add sbb es roll sbb loope mov neg inc xchg add push adc in pushf out call cmpsb pop cmp stc ljmp xchg test mov pop outsl je out sub mov leave jmp out (bad) scas fcomi dec popa movl sub adc sub sbb stos add sub sbbl adc xor pusha pop icebp xchg insl push fisttp push sahf je dec mov jns dec mov dec lea loope push je fbstp in decl inc rorb dec mov dec mov fiaddl adc aam ja push jne dec mov push call ja,pt ret bound (bad) dec mov pop ja rorb push pusha (bad) jne or xor dec aad cmp cmp dec mov mov call sahf dec jmp outsl mov call add inc mov mov add lods mov jmp rorl (bad) sbb sub cmovs mov fcoml lret jne sar ret nop adc adc pop push daa into dec push (bad) jmp dec lea mov mov out xor je fs ss and cmp je jns and jne cmp sbb flds dec flds dec movl (bad) adc fldenv mov scas hlt jmp lds mov nop inc mov call rorl je cmc cmpw mov nop xchg cmove dec jne mov cmpl and lock xor inc incb movsb xor icebp cld je dec lea jmp je xor mov pop or mov call jo mov xchg out mov and add popa ljmp orl idiv clc add clc add les (bad) dec lea stc call jmp dec lea out pop inc inc iret lea mov outsl loopne mov popf sub pop adc call add fnsave scas fildll mov call mov nop inc mov pop cmp xlat inc lds call jp dec lea call call add lock inc jo mov fs leave je (bad) dec xor or dec add inc movzbl test jne mov lea xor mov movntps in adc inc add mov out jo,pn pusha mov call cmp mov jmp dec mov pop stos fs cli jne nop inc jmp sbb lahf jbe dec push ja mov call icebp add stc jl and (bad) call mov call mov xor mov call out dec xor jbe call push xor mov push (bad) call mov pop in ret call mov insb mulb cmp inc pop add clc jg jne je dec lea dec jmp mov dec mov dec mov call mov cmovg dec arpl inc out hlt rol add sbb sub xchg imul clc popa jmp mov pop dec mov dec mov dec mov data16 lcall arpl sbb mov inc movzwl dec shr or fucomp rol js or jmp and and idiv jg ja mov or pop push cmc and inc add inc cltd rclb jae sub jg inc mov dec lea sahf xor dec (bad) outsb test dec int3 xchg add inc and test stos jnp and dec fidivr cmp mov pop dec add ret (bad) cmp xchg into aad mov or je pop loop mov mov rolb xor mov pushf addl add inc aam mov push roll shrb or sub inc and (bad) mov pop dec arpl mov mov lock push and outsl inc and nop call adc xchg adc push mov shrl lea stos cmp dec mov mov xor dec or call lock outsb adc call mov mov cmp jl pushl in incl add inc movzwl cmp (bad) mov jle sub dec mov dec lea outsl lds or mov jg enter cmp jne sub jmp mov xor rcll loop call (bad) insb lea test mov jg loopne and adc mov sub testb jae cld add inc or test jo push mov leave inc mov add scas mov jmp pusha jo pop inc mov fist and cmp jge mov mov cmp jl test movl mov incl adc dec iret (bad) es pop dec cmp jne xor int3 inc adc divl mov testb cmp inc or and xor into sub pop xor jne test jne jmp mov jmp arpl jg jmp cmp sub pop lahf sub mov (bad) dec arpl (bad) cmp lret dec push mov mov call dec mov mov dec adc popa ret push push outsl jns mov mov cmp pop or add pushl and mov mov sub jecxz xor cld pop insb dec add jmp mov xor and incl dec lea dec sub call or inc test jg xorb outsl inc test xor fnstenv and sbb lret mov push jmp cmpl dec mov mov (bad) incl mov test je dec arpl dec mov sbb dec ffree dec es mov lea movl add add jle jo mov add movq rorl jne dec mov aaa icebp cld dec mov adc pop mov adc call mov ret pop lahf popa call out ljmp lea outsl cli aam xchg call sub cli mov mov hlt sbb mov jg pop jecxz and mov sbb (bad) jmp pop sub inc daa push incl int (bad) dec mov inc mov jle jae sbb pop add inc mov xor scas and adc push roll rorl (bad) pop jmp cltd or or add test (bad) jo test adc loop push add dec push mov je inc test mov dec lea jle jae mov flds movl enter ret sbb cmp adc cmpl je cld (bad) dec mov imul mov sar sub lea cmp jne dec mov and pop pop inc add dec aaa jmp out (bad) clc inc cli inc movl stos mov add (bad) decl lea inc mov mov inc mul shr sbb push (bad) cli add test jle push (bad) sbb and ja sbb sbb cmp jne mov push es mov push or test push je and mov les jne ljmp xor push xchg loope (bad) pushl jg dec test sub mov jmp rcll jno (bad) stc xor add cli outsb jg fisttp jne test adc sub pop outsb fld1 add lock je int3 add mov sbb ja push in pop dec cs test rcr out and popf cmp jns jg outsl (bad) mov dec or fs mul aad orl xor movntq and jle cmp jle sub and aas sbb sub pop jmp cmp outsb adc les jne sti mov inc push mov adc cmp jge pop push and es fildll ret clc (bad) (bad) jmp inc or (bad) sbb or popl adc inc sub shrl aaa push mov lea test (bad) enter push andb iret nop (bad) outsb arpl jmp mov adc popa test jg jbe mov test dec arpl out sub pop ffree or push xchg or or add js sub jl fs (bad) push or push xor xchg sub xor jg push or and dec mov inc cmp je sbb mov or push add mov xor maxps mov or pop mov mov sahf mov je pusha (bad) pop mov fdiv aad sti enter and push and sbb jo mov jnp adc (bad) lcall fildl ret inc add inc test dec es je cmpw dec inc sbb jmp or arpl inc cmp dec cmovge movsl push mov lock mov test xchg je dec push rcll dec cltd mov inc and inc mov inc ja mov mov dec mov dec mov and out decb dec mov dec lea dec mul xchg (bad) (bad) (bad) incl dec lea dec add dec sub add dec test inc mov dec mov je dec cmp je inc test outsl jo in je cmpw clc dec sub dec cltd xor mov add and rorb clc add dec add inc add sti jmp dec mov jmp test jle dec mov mov xor ret jo inc sarb xchg pop add xchg movb dec fisttpll dec pop jl add sti mov loop test lahf inc test jle xor fstpl or cmp incb sub adc mov mov sbb je push pop dec lea movb dec cmp jae dec sub sti xchg orb call adc cmp and adc mov lea jecxz pop xor inc pop pop (bad) je daa icebp aas lock bound jmp inc mov mov ljmp adc loope dec mov jp (bad) push cld movb hlt mov out jo outsl jle xor js hlt or mov add or sbb dec neg jmp and movb popa clc loopne pushf push outsl inc mov and fwait (bad) sub test orb mov shll movsb sub (bad) mov fild (bad) jne dec lea (bad) pop aad inc (bad) out outsl fdivrs add mov mov clc or (bad) adc imul inc mov mov add push inc mov add pop repz imul sar sub mov fcomip lcall cli pushl dec or cmp cmpsb inc cmovl inc lcall rcrb movsl cmp jge dec ret jae fucomip rolb or mov mov jle cmpsb sub clc mov and or inc mov or mov inc lods pop pop add (bad) jmp (bad) decl add test je popa mov mov movl add incl jne jmp dec lea call mov lds aad mov cmp ja movl mov js pop dec int3 push add push out adc repnz mov pop call popf loope ljmp (bad) lcall nop xor cmp xor fistpll js or mov mov xchg inc fiadd test jl push and outsl sarb push mov mov xor incl mov jns outsb inc decl sarb insb test test fidivr and add mov inc sub into push rcrb mov mov dec mov sbb or jmp loopne pusha pusha (bad) ret js mov call aas sbb push iret test jne sbb das add and inc adc mov lea pop inc out hlt cmp sbb stos add decb imul or pop lret pop adc orl sub mov pop mov data16 packsswb cmpb xchg and xchg add hlt les push add mov mov popf add lret pusha or xchg rorl ret mov add mov jle pop std inc add inc test inc cmovns add loop je inc cmpl jne dec pop incl dec arpl inc cmp xchg shlb (bad) pushl or stos sarb inc cmp sub sub jecxz adc leave lea clc cmp aad and das mov ret add inc lea add inc or test (bad) (bad) incl inc (bad) dec shr dec test mov jne dec cmp je mov jle inc mov dec sub push cmp mov test cld push cwtl mov in mov add add inc je ljmp inc inc inc cmp clts jmp stos (bad) mov subl rolb jno outsl mov xor insl sbb fbstp cmp sbb iret sub aaa sbb dec sbb mov sub pop inc cld cmp inc xchg outsl insl jne or push and fwait movb ret add dec cld jle inc sub and mov je jge add roll add pop push and iret js (bad) out adc dec lea movb jg mov incl push pop inc das nop mov roll jns out xchg pop test aaa hlt xor fnsave jae and aaa sbb or sarl loopne fdivrs sub (bad) fistl push push push jo movd xchg pop aas out (bad) call and sbb jmp lcall je fnstcw pop adc jle fnsave jle nop inc (bad) (bad) jo roll lret adc fimul ret inc pop (bad) jne dec cmp std ja cli outsl dec lea je cmp jae out (bad) fnstsw pop std popa inc push or jg outsl sub inc movswl or inc lea incl jg mov inc or inc jge (bad) decl mov mov neg or shr inc or inc enter sub mov fisttpll test ja mov and cmp je mov add incl dec mov lldt fldl inc push sarl ss and mov incl mov movb movb inc lock les xchg lcall xor dec mov inc movswl dec sub lea (bad) and daa decb xor inc test pop push std lea push sti pop imul cld test and mov jmp aas and add inc movswl test jmp add pop adc adc ja pushf inc mov ja std (bad) test jne jne jg and mov lds clc sub add out dec mov fcmovbe or call or sarb xor pop add nop lcall out sub fiadd lret ja,pn jmp xchg jg mov and shlb je ja daa or call out setnp dec cltd mov std cmp je sub ret push mov lea sub push xor adc movsl xchg cmpsb pop ffreep dec test js pop pop jns mov ret shr pcmpeqd cmpsb jle loope dec shl inc js sysexit rcrl loop les pop loop loope dec clc pushl lock jmp jae out ja mov test js lea mov sub cmpsb jbe je hlt mov mov dec add test cli shr inc push sub (bad) fild mov lret add pop icebp and jmp aas orl lcall fwait je jmp mov ja fdivs push call push mov lea push test adc movsl mov lret push call mov aas pushf outsb jle movswl sbb mov cwtl push mov js mov sar mov ret mulb inc test out or icebp add or test aam rcl jmp push push jne ja ror pop jnp pop movb fist mov shr mov dec data16 cli out cmp or xor jmp scas add (bad) loope iret pop lods arpl push imul jge das mov mov xchg sub and jmp jge inc out xor rolb pop lds (bad) mov and das gs test sub add addr16 call mov mov je pop test add and xlat call dec jns xchg aas ds stos jp icebp sub and sbb sub xchg inc incl mov outsb xor mov mov scas movsbl lcall js xor mov test or hlt dec inc (bad) mov and pop mov out or jg aas or and sub pushl dec lea je cmp pop ja loopne push and call movsbl pushf jae test add std leave jne mov lcall add jo mov add pop and popf out sbb inc or (bad) dec lea out add or xor inc insb pop and movsbl test mov inc mov je loopne or mov add rorb push xchg add ljmp add icebp (bad) ljmp ja mov jbe ret dec xor call mov pop jmp cmp jae (bad) stos or inc mov ss test outsb call in mov aaa loopne ret call inc test adc test mov movzbl fistpll xor es and mov dec add adc cld or mov test out (bad) fwait jno call xor daa jo jnp push cmp xchg jmp repz add je xlat jb xor test cmp fldl pop inc mov mov and push xor pushl dec lea decl inc clc mov pop mov arpl dec mov adc add call jg call dec mov xor add sti popf sti je inc mov je or je lahf adc mov inc cmp je dec testl pop dec xor pop inc jno nop in cmp lods jae insb sbb add pcmpeqb push (bad) adc (bad) mov add mov enter aas ret push inc lcall and roll mov lahf inc jmp cltd pusha cmpl rcl mov jmp inc push jo insb jne loope mov sbb inc popf jmp lret adc or sub push in outsb cltd sub sub xor mov aad cmp int3 add movsb mov or mov mov xchg outsb push add test imul add add test pop out and inc (bad) mov call jl add je mov call push jb mov mov fs jne sahf mov mov ret jmp adc jmp pop mov push out or pusha call in adc pop push mov out adc ds jnp dec mov fdiv pop cs cmp call jge pop adc inc adc push and jmp and jb push addb jmp pop pusha mov jo (bad) shrl cmp lock jle and loopne and test inc loop (bad) sbb jae mov pusha sbb mov arpl outsl stos out mov hlt outsl push push inc cmp adc cli (bad) fsubl push sbb test je inc (bad) or mov jns loop push add push or js (bad) aaa dec mov inc xor jmp sar les adc das je scas jmp jmp repz cwtl add xchg adc xsave pop decl mov fucomi ljmp mov mov decl add inc cmove add pop shr lret mov jmp cmpsb addb fstps std cmpb je pop lcall imul sbb out and add data16 leave fdivl sbb inc mov adcl or xor pop (bad) jmp xchg xlat loopne int3 std ret mov jmp or in inc fadds pop inc sbb adc ja test jmp jmp jo test jne adc add fsubr mov xchg add stc push or sbb push xor sbb adc call lret sub lea int3 xchg ljmp mov mov jle movzwl push pop es ror stc push or movzwl jb shr push and jo or ja sbb negl divl in clc (bad) jnp (bad) mov int3 roll jl rcrl pop lahf or cmpsl or xor pushl fildl clc decl cwtl lea cmp jl mov call inc add inc fldl les pop pop mov add js dec cwtl xlat jle ss out aas jae mov inc cmp jg aas scas fild mov inc movzbl mov dec lea dec lea inc test inc mov adc add inc movzbl adc or push int3 mov add fxsave or and test pop xchg pushf mov shl mov dec lea mov test or hlt mov fild (bad) cmp rorb dec mov xor jmp dec lea dec arpl dec (bad) (bad) out pop shl dec lea dec add mov lea mov div lahf (bad) incl packuswb aaa adc ljmp inc mov inc mov fnsave icebp add ret lret rcll aaa push popf call dec mov inc mov dec shr inc and (bad) (bad) add jae pop test jne dec lea dec cmp jae inc mov inc test jne ja aad dec (bad) ljmp loop dec imul outsl ljmp clc jmp nop inc mov (bad) jne dec sub mov fild add inc mov dec mov loope cld push pop js push inc dec mov xor mov mov sub dec stos mov dec cld inc inc adc sub out (bad) fistpll inc cld dec shr and dec xchg fimull (bad) dec lea inc mov out mov dec lea inc aaa dec repz jne dec mov dec sub dec sub (bad) clc jmp jb out push mov das popf out adc push sub lahf push add jg sub cmc mov mov inc mov imul stos xor loopne inc mov pop mov clc add xchg xchg imul dec cwtl (bad) pop sub mov xor cmp jle mov cld ja roll (bad) jg call (bad) pushl orb sar dec cwtl dec lea dec mov lcall push add mov dec roll mov jae outsl call clc add cmp adc jbe ljmp inc lea cli (bad) (bad) incl arpl inc mov shl inc bsr inc mov xor inc sub inc add fild imul test (bad) outsl pop inc mov inc cli orl and stos jo test sbb sbb stos push adc (bad) loope mov insl jg mov movaps add inc xor inc aad pop fistl inc jge and and xor daa or sbb fisttpl sub stos jbe xchg jl mov sbb sub (bad) and add sarl dec mov inc mov dec testl push sarl or inc jle lret sub inc loop cvtsi2sd dec or into or and test movsd cmovns sub into std decl pop or test mulsd leave mov or jne ret jbe test rcll mulb cs mov loope push fsubrl mov out (bad) fbstp add loop add jo mov cmp jl mov push ja dec mov dec arpl sti fnsave out sub pop lds xchg inc mov out add add mov out jg jmp mov sub jg jns jmp jo pop sbb adc push out mov lcall clc sbbb adcl ja mov add add pop add inc mov sub or add mov dec das add inc icebp cmp je mov movsb and test mov xor cmp (bad) cmp loope ja and cwtl mov push mov inc pop dec cld lock clc push call or cmp psubw sbb fldl sbb call int3 sub popf stos push dec dec rorl jg enter cmove outsl xor rorb lock lahf add mov inc and adc jne jo xor clc out fbstp jnp and inc test je or jle (bad) ret push cld pop add lcall dec movd data16 in rolb fdivl push jg dec or cmp (bad) fcmovnb mov movapd inc xor idivb ljmp dec xorb lea dec mov push and dec cwtl test pusha out divl sub je or (bad) cmp dec lea jno divsd lea inc mov mov lret jg xchg fimull ret lods enter out xchg sub sbb adc cmc aaa lret ja add and xorl fdivrs jge icebp add jmp mov in int3 ja pop cmp movl fucomp outsl jb bound loopne (bad) xor inc enter fnsave add add je add fldl jmp lock movl lods pusha outsb rorl sbb fbstp jmp aad inc dec xor sarb pop ret inc push xor or xchg xor mov add pop call xchg popa mov cmp lret pop jne das inc pop int call fdivs fildl iret mov js add jl cmc sbb cmp outsb adc psrlq inc cmp (bad) cld cmp test adc fcompl fidiv insb and sub jae and mov incl pop xor push test sub pop adc test je out dec xchg jnp or dec pop xor jno movb ja xor push pop dec mov nop push inc or and test outsl mov add xchg push lods jae fdivr mov jmp daa sbb adc xor jmp xor test push add sub inc imul rorb cmp xorl mov mov lea and je (bad) cmp lods cmp mov setg xor out incl test je cmp jg loop (bad) insb sub inc and add mov push pop jns out mov leave jle popf inc test jle jle cmovle sub (bad) std and sub sub pop popf push cmp test sub pusha lret (bad) sub jo jne loop imul aas rolb jnp mov fs stc sub std decl sahf rolb add xchg lds lds pop push inc test pandn clc mov and xor in add mov pop add mov jbe imul sub ret cwtl cmp imul clc outsb add pop inc setg jne inc mov adc test test jg cmpsb ja (bad) je mov and push dec mov call xchg jo ret into call movsl cmpl pop pop mov dec and fs add add neg push sub (bad) sbb xchg addb pandn cwtl std cmove mov push fistpl mov clc push adc inc pop (bad) out mov jmp mov in or testb mov jp shr mov dec adc adc push jae popf sub popf add fisttp insb xchg xor cmp cmpsl cmovle jnp hlt test insb push add or adc jecxz pop dec loope outsl mov bnd movsb and loope sbb adc jmp mov and jmp cmp shr popa mov or cmpsl sbb mov cwtl inc inc jno push decb push and je mov dec fiaddl jg (bad) pop test add test sbb orl add test lock mov sbb cmp test (bad) dec out mov orl out adc loope loope test jnp mov call sahf mov dec add mov dec or jg mov call dec mov or xor mov or (bad) (bad) inc mov call adc rorb mov test out mov inc call inc mov jmp repz call pop (bad) dec mov jl sbbl clc popf pop sub cmp or (bad) jge mov sub xor add dec (bad) pop fwait bound or dec push or ret jmp aas inc inc cltd (bad) call aaa inc clc loopne mov sub mov xchg inc mov fdivs mov xchg test imul jl jg jne pop popw and mov push or lcall mov push dec xor loopne jno dec mov sbb jg data16 (bad) ljmp cmp jl inc xor dec xor int scas jmp inc mov movzbl jecxz clc add jmp ja dec cmp je mov cmp jg cmp dec lea je add jo out jmp adc cmpsb push and jmp and inc hlt fnstsw dec cmp je inc xor jmp jmp mov xorb and add mov mov lret sub roll leave outsb lret frstor pop adc jp je xchg cltd jne cmpb cmp push pop ja mov sbb mov and mov stc jae bound pushf pop shrb testl mov mov les mov in mov arpl jecxz ret call mov call or ret cs cmp adc jae jmp std cmp hlt (bad) call pop adc mov push mov mul push cmp insl mov cs adc fnstenv xorpd xchg sbb sbb mov jb or jmp mov xorb (bad) jmp fisttpll js dec cli mov dec faddp js cmp (bad) call loopne jl dec mov sti test loop loope cmp xor mov jne push jg mov (bad) jmp dec cwtl push jno mov jle cmp push pushl call out mov jmp and add call or dec push int3 jo add sbb jl jmp jecxz sbb sub xor adc icebp mov clc pop lret out mov mov jne stc cmova jmp in jl push int3 xor aas cmp cmp jne test jne jo jnp loop test arpl ja or mov (bad) test jae xor dec inc inc ljmp movl repz jmp les jl call cmp pop sbb clc add popl lods ljmp add in imul jmp jg jmp pop out mov (bad) arpl (bad) lock inc pop inc xor inc movsb cmp sbb mov mov add jle push ficomp dec adc in sub lret cmc xor cmp jmp mov testl insb and mov into push jbe fisttpll clc dec cmove and jne pop cmp cwtl in int mov (bad) out mov in mov dec lea call jg cmp mov push and sbb pusha cwtl stos jo lds cmc pusha cmp mov mov sahf inc inc mov jmp or xchg dec sub and (bad) push mov stos jmp jl adc mov inc mov jae aaa xchg add pop out pop cmpsb mov sbb jmp or iret lea xchg add stos mov std push adc test add adc add dec xchg jmp inc jmp es push (bad) xchg cmpsl jl mov frstor push pop add inc mov or dec inc fiaddl lret fcmovnb repnz add pop or add xor js fwait jmp and or jge mov jmp xchg or dec rorb test push sub mov mov push push mov xor sub jnp xchg shrb cmp ret pop insb jp jne and adc mov push decb jae adc lea jmp lds xchg jg push pop int3 je sbb daa je dec mov lock pop jns sbbl add mov aad dec lea or pop jecxz gs ret push fdivrs sub xor cmp jecxz mov or sarl subps addr16 incl inc (bad) (bad) (bad) out cmp gs scas adc and sbb lahf mov jbe jmp sbb ret pop je sub dec sub push clc pop lahf mov rcl mov pop cmp mov nop (bad) mov mov (bad) pusha mov push mov jne call cwtl sbb push (bad) lea hlt imul inc cmp add lret ret bnd dec adc dec aas movsl mov jo imul or jle cltd mov or inc mulb icebp lahf mov inc xor jmp jg ret xchg xor mov dec lea inc cld lcall dec arpl mov sar cmp jle jle cwtl and dec aaa lea dec lea jmp jg ss mov dec lea inc mov sub inc (bad) (bad) (bad) call ljmp mov inc mov inc mov dec add dec add shl mov inc or mov cld inc mov es dec sub sti dec shr (bad) cmp decl jl add test inc mov je adc dec sub dec sar jmp jmp inc movl stos pop lods ljmp lock dec cmp dec mov jbe out movsl dec cmp ja dec ja jecxz not dec lea pusha xchg data16 je enter cmp jmp arpl (bad) add mov xor test je jmp aad push (bad) out or mov dec cmp ja ret tzcnt add ret (bad) out xor iret rol lcall mov dec arpl cmp je (bad) pop loop stos jb pop sbb cmc jbe (bad) cltd call mov out es ret movl dec lea dec lea or dec orl in out and and out loope iret std jmp add dec mov pop adc out decb or sbb call or sbb push call lcall mov adc fisttp iret std pop xchg (bad) adc iret sbb or loope push and ret loopne test (bad) dec fdivrs adcb cmp sti fild lahf cmp jg dec lea fnstsw mov dec (bad) jns cmp mov dec mov jne mov sub jecxz mov dec add jmp mov hlt shl inc aam call daa aam aas sarl or shr add cmp cmp jo mov je dec adc dec (bad) (bad) out jg mov shl jae jp add rorl dec sub aaa jge sub stc add add dec cmp jge mov mov pop inc jmp push and iret dec dec pop pusha clc aas loopne sub jns or or out outsl js arpl in pop addl cmp mov inc fdivl mov or and mov and jbe jg mov sbb (bad) jg adc sub mov dec mov dec lea ljmp dec arpl (bad) xor aas inc mov dec imul dec add dec mov jle add orl cmp jg cmc (bad) aas add ja jle dec arpl add je mov xchg mov call cmc aas jmp or stos jb dec faddl arpl dec lea mov xchg mov push add dec sub call xchg orb mov and iret or sbb mov movl lcall pop and jns dec arpl inc pushl int mov inc cmp jge mov hlt std dec mov sti (bad) dec dec arpl xor inc lea cmp setl add call loopne add rorl xor xchg dec cmp jae dec mov nop cltd test add dec cmp ja dec lea dec add mov add sub dec (bad) xor jb jmp dec (bad) clc cmp jbe mov mov dec in dec mov dec pop gs jg (bad) (bad) push movsb mov dec push dec imul dec add dec add dec mov incl sti incl inc cld dec shr dec cmp ja dec inc mov ja test jle inc jnp jge cli cld dec lea je jmp jb jg xchg jg sub mov jne mov add and xchg inc mov and add mov mov and psubd pop mov dec mov test je dec mov add test je and sbb psrlw je dec mov dec test je div ret add and call test loop insb dec int3 cmc pushl sti jne pop xchg cmpl popa ret (bad) jge dec mov adc cmpl jne insl sub fild loop out add ljmp xor loopne xchg mov mov call cmp je dec (bad) or pushl cmp pop cmpl jmp rclb push int (bad) call jmp mov shlb dec jns loop xorl inc sti mov inc adc mov movl sbb scas mov (bad) (bad) mov test incb dec or cmc inc lea cmp jle jle loopne xchg sbb ret rorb mov test stos sbb fcomip jle lea clc dec lea pop rcrb cmp jne aaa jge jl add arpl jne inc and dec lea je sbb lds mov mov inc mov aas mov dec jp shl mov mov clc (bad) (bad) cld inc mov inc mov inc shr dec cmp ja inc add inc clc or inc cmovne insb loop mov call jo ja jbe movsl iret movsl cmp roll cs xchg dec arpl mov inc sub jne dec lea (bad) (bad) decl rcrl lea dec lea jmp dec cmp jae xlat std (bad) icebp dec sub mov rolb leave iret dec inc pop subb sub (bad) sbbl cltd push lea dec lea jmp inc mov adc sub or ja call cmp (bad) ljmp shrb wrmsr cs push sub sbb std outsl (bad) push sbb dec mov cmp dec arpl dec lea jo xor add jmp jae inc mov ret call push cld loop sub dec sub dec mov ficom and (bad) jg and loopne dec cmp ja dec cmp jbe dec mov aas nop lret sahf mov xor enter ja dec sub cmp ljmp fstl ljmp dec incl adc rcrb popl xchg test mov mov mov sub out xchg jmp add out call les (bad) loopne inc arpl (bad) adc pop jecxz and lea xor lea mov inc (bad) aaa cld mov inc bsr inc xor rolb clc or (bad) jg adc xor inc sub shr or dec shl (bad) decl inc mov shr inc lea inc shl inc or dec or sbb cmc inc and inc adc or sub xlat jae outsl das je mov (bad) mov roll loopne mov mov push inc shr adc (bad) mov lea inc dec fs jae pusha (bad) hlt mov mov add jo ja decl enter jmp xor push push mov inc lcall xchg addr16 shl sbb arpl mov sbbb ret dec or inc jecxz call rclb or jg push inc mov shr inc push mov cs lret enter call push (bad) sahf inc cmovne jno inc xor repz bsf inc mov or pop imul inc int3 ljmp (bad) mov leave inc mov inc setne scas stos pop std aas inc inc adc inc inc lea push sbb mov inc sub mov push sbb xor dec ja (bad) mov repz int3 pop aas lea fist push sbb out shl inc cmpl add add mov mov xor sub fadd add dec lahf cltd jmp fs (bad) mov ljmp (bad) ja movzbl test mov je dec dec movzbl dec add inc lock jne push cld and cwtl sub dec add adc cli scas adc rorb call jge mov inc (bad) mov and test je das sbbl adc adc mov cmp inc mov cli call loop insb dec inc xor add sbb xchg movl inc mov int3 add fcomps aas add or push sbb pop outsl cmpsl faddp add adc loopne add mov movzbl mov fcomps dec mov jne adc insb jo mov jmp xchg sbb jnp or and pop jge pop push aam mov mov push add movl lcall add xchg nop incl xor and sahf dec out or and dec test (bad) adcb mov mov call mov dec cmp jb inc (bad) mov mov lock out dec cmovne mov push xor sbb ja or das ds test mov dec mov insl scas into dec mov xor orl dec test inc mov je cmp loope cli (bad) je xchg pop mov mov cmpb jne jmp jg cmc mov add ret dec dec sar fildll fisttpll push jbe dec mov inc mov jg dec sub dec jp call jg dec cmp andl mov dec (bad) je and mov fbstp rolb jae,pt (bad) das ds jo imul loopne into jbe call mov xor aas iret loopne loopne mov jg xlat dec mov aad clc es lea cmp cmp and mov inc push cmp (bad) fimull repnz mov call les std jg sub dec mov je cmpb jne jmp nop fcoms mov das add jb ret mov cmp fcmovnb in pop push inc mov adc cli incl ja mov add mov and and inc rcll sub jne in mov icebp and cmpsb jbe inc jl cmove xor xor xchg cmpsl ja mov mov flds adc dec sbb (bad) xchg (bad) xor mov add sbb cmp pop xchg sub inc mov call mov push outsl (bad) and xor notb sti sbb (bad) call pop add popf outsb je popa cmova pop dec xor (bad) incl mov dec lods mov loop xor pop fbstp (bad) (bad) jg (bad) dec add cmpb je dec add dec cmp jbe movzwl inc xor loope inc mov pushl out push aam mov xchg sub pop nop idiv (bad) call cwtl dec add cmpb je inc ja,pt mov mov aad mov das dec movl adc imul pop ds loopne in add je add lcall out or adc add idivl lock nop nop jmp pop orl ds push sarl and gs out pop push sbb into mov inc addr16 mov push sbb pop outsb pop dec sbb ds jge inc push push (bad) aas dec out xor and idivb das xchg enter jbe push and push rorl push (bad) cmpsb pop out pop push sbb into mov inc sahf mov nop inc push outsb pop dec nop inc push sbb cs roll jg push sbb into mov inc sahf mov inc inc push outsb push sbb (bad) jae inc (bad) pop or inc push (bad) movsb ja fs inc push fmulp mov inc push sbb sbb ds sbb push push mulb outsl out into mov cmpsb xchg xchg and outsb out (bad) inc orb fnstsw add nop mov adc mov fcoms cld decl mov dec lea call fisttpll or lds scas dec jo mov fwait ret add inc push push mov divb add xchg insb int3 popf fnstsw call dec imul sarl test dec pop xchg mov add and mov lret add fimul xor jmp out ret je pop dec movsb sub xchg fmuls call pop shrb mov shrd sti cmp xor inc fptan fnop inc test inc js adc gs aad cmp add dec movl pop ret aad mov cmp (bad) (bad) fnsave sar adc (bad) je dec mov dec mov dec mov dec mov mov adc sbb adc sbb and out pop loope inc ret call mov mov add and jg adc loope,pt add sbb adc sub das adc mov cs das inc or add scas movups add mov or and jge mov ret sbb clc pop add aas dec cmp ja call nop dec add ret jbe ja clc adc dec xor add dec mov clc rorb clc add mov rorb mov stos sbb xor jbe lret dec pop xchg pop test and nop pop add aas cli pushf add andl call in sbb sar imul jmp or pop ror out (bad) insb pop mov stos pop inc into adc cli inc cld xchg aam cmp pop jae inc sub (bad) adc je inc cmp jno (bad) outsb pop std sbb movl mov jne ljmp call jmp dec and jmp inc add clc add fs (bad) mov cmp push add (bad) jne fisub std fist add mov jmp out aas sub lahf out dec mov mov outsb pop stos jne out xchg mov cmp loopne cmpsl dec dec cmpl iret cmp dec (bad) xor mov xchg pusha fwait dec mov mov mov in cmp mov xchg inc ret pop mov cmpsl inc std lcall stos mov lock cmpl mov rorb test addl xor std fistp mov (bad) xor call pop and dec sbb rclb add clc cwtl add push call jmp mov addb cmp das jg and push call iret je dec mov xor call call xlat xor jnp jmp cmp dec pop shlb cmovbe dec mov fs in decl in jne adc enter jbe sbb (bad) mov jecxz cmp dec std and jb aas cmp aaa jb outsl dec mov lods xchg mov xchg add and call jns ret loopne add scas xchg arpl sbb stos mov jno add nop sub pop push inc jno nop insb or outsl les in call loopne aad adc lahf push push mov mov dec lea out ljmp add jne xor xchg xor pcmpeqb xor aam sbb add mov jne out sbb sbb mov incb pop adc sub adc (bad) aas push pop int cmp jne mov mov and inc inc jmp jg mov push fbstp test jbe mov jmp and inc adc movsl sbb lret and xor mov dec adc lods xor push push dec xor push pop or (bad) rclb clc jne sbb mov adc jmp mov lods push loope inc aas cmp jne xchg imul movsl outsl dec (bad) ja mov mov mov cmp add and inc outsl (bad) and push dec cmp psraw loopne std dec mov push xor clc ljmp lret xchg les push fs call add fld1 xor push popf aad adc fimull and fisttpll dec cmp sbb and cli fbld xchg mov mov and (bad) inc call pop (bad) outsl test ja and or xor mov idiv or push aas sbb mov shr and inc add and or ja or cmp ja add xor ret mov and lahf das out jge jo push outsl pop inc (bad) (bad) aas inc mov inc and inc cmp jne out add pop incl add in loopne add sarb mov mov insl inc push neg int3 test pop and iret sbb cmp add push mov pavgw test je dec cmp jne jmp lahf cmp dec mov je dec mov add sbbl je dec (bad) call cmp fwait test daa test dec or sbb cmc xor call jg repz cmp lock dec lret fsubl push add mov add jg (bad) mov pusha mov cmp mov pop fnsave scas sub call mov inc cwtl out ficom out mov dec push mov decl cmp je dec lea dec sbb lea dec aaa ret (bad) inc loop dec add dec cmp je ja dec lea and xor ret dec cmp dec xor jne dec mov ret pop add pop out pop add je fildll mov add and cmc dec cmp pop mov js dec fwait xchg inc dec add dec into std outsb add jne je dec movl mov xchg mov sbb pop aam jbe jne pushf je jmp cltd cmp dec mov add loopne nop dec cmp jae add sub ljmp dec mov dec mov add dec daa aaa dec push mov loopne hlt call idiv aaa movsb fmuls pop and dec mov dec mov inc (bad) out rorl cmp xchg cmpsb call je mov (bad) xor inc ret or inc add add sbb or in mov pop inc rorl (bad) out out fcomps push jmp xlat dec lea jne jbe call dec sub ret sub outsl jbe sbb inc cmp (bad) decl mov jne xlat pop push scas je call xor mov call sbb into sbb or push (bad) sbb es xchg orl addl adc push ret scas xchg shll jge dec mov or adc or mov pop jmp cmp xchg push scas je xchg dec lea cmp dec mov add cmpsb mov add lea dec cmp jb loop or dec cmp mov sbb dec lea jmp jae inc push dec adc sbb orl push mov xor cmp out sbb mov call add add test jmp rcr dec jae add or (bad) jg adc dec lea call jmp (bad) popa mov push pop outsb (bad) sbb and sub inc xchg mov mov jmp nop ffreep dec mov rorb jecxz adc xchg ret jne flds adc je (bad) fs pop pop jmp or mov xor mov je dec mov icebp call icebp test insl and call clc or xor add pusha dec mov call mov xor jmp mov prefetchw or or fisttp arpl jg pop jmp orl pop jg std sub lea xchg mov inc cmc test arpl push or int mov arpl popl std mov add je dec (bad) adc outsb adc mov ret mov out mov lahf loope out test ret je xchg call push divb jmp (bad) mov adc pop add xor call outsl outsl sub (bad) and xor add cmp (bad) adc dec add sbbl and xor mov movsl and (bad) rep sbb pop jle add adc daa adc mov xchg add xchg js sbb je add repnz jg je cmpb mov jne cmp jne cmpsb call call (bad) sbb dec arpl movb sarb add fldenv xor call bound mov aaa icebp call push (bad) call push push inc icebp call std mov xor call inc fcomp ja incl je call dec lea xlat inc decl adc jp lahf jmp aas cli lahf add dec cmpl xchg pop loope fwait mov call push (bad) or ljmp mov (bad) mov dec mov je cmp rol cmp movl add jmp aam inc in leave mov call cs les jo dec movl (bad) call jle (bad) test lock mov inc or push jo clc cmp test dec mov call movl mov dec cmc xor mov ds int3 push cmc fwait js dec mov sbb push aam fdivp movzbl xor xchg (bad) pushl xor add adc daa icebp pop (bad) into int3 cmp dec mov stc call push xor and dec pcmpeqb xor or js fldl xor das cltd lea pop in mov fdivl sbb pop adc add pop scas sub call inc imul cmpsb push pusha push push inc mov std dec mov call es jno jp xor orl cmp std (bad) pushl dec mov mov cmpb je or mov dec mov call or pop nop cmpl sbb add std pop inc mov or add add arpl rcrb and ja dec mov call sbb out inc mov imul add aam mov pop cvttps2pi or add and add scas fcoml add jno daa fmul dec cmp adc xlat dec sar test test jne bound mov xchg or cmpsb lock add in or ret ffreep stc pushl adc je fwait add int3 testb je add inc xlat ds jmp sub and mov call adc xchg out add jo jmp (bad) sbb lea call push push aas lock dec add jmp pop jg mov xchg jecxz and sahf xchg in inc cmp jno xlat mov dec test jbe pop call add or (bad) icebp sbb mov test lret pop stc addr16 sub sbb fidivl ljmp jle xchg outsb testb dec lea dec lea add daa adc mov movl pop dec decb icebp call mov mov in test mov in daa cli rcll nop cmp jmp aaa lea push ljmp cmp add je jmp inc sbb mov and shrl adc pop inc call jmp test dec mov stos and in out and inc addps mov xor subb pop rorb dec mov mov or dec scas call xor call loope inc mov dec lea inc mov ljmp or call int3 aas imul movsb and idivb aaa dec cmpl jnp xor add scas scas pop insb and (bad) adc add fidivl pmaxsw inc jbe add fsubr mov xor call jmp or inc sub mov jge dec mov call add dec clc sub adc sbb mov mov test fadds call and fld add call push xor add cmpl sahf shr lcall mov pop mov (bad) lock call jmp cwtl in mov xchg push adc (bad) lock jb cmp pusha dec mov call push xor sar (bad) mov pusha (bad) push cs mov call (bad) call mov xchg pop sub or xor add lock mov call and imul pop iret jge mov inc lea inc jg rorb (bad) pusha pop pop add fidivr add aad xor push dec dec sub mov lea shll aaa push test and (bad) cli (bad) fist mov and add dec shr jne test fmull inc or mov cmp jo dec mov mov cmove xor call fisttp popa push call rol je sub pop aaa and fstpt incb fcoms hlt jle test sbb add shr mov and inc push dec outsl stos mov call rcll or adc pop inc mov mov dec mov je je (bad) movq call push lds mov inc test je dec fisttp adc jmp cmp stc call or adc adc movsl lea inc xorl je sahf shlb popf xchg jecxz sbb das dec lea sbb iret inc and call fist inc sbb call iret je and push sbb dec mov (bad) xor movl inc add cltd dec mov lods arpl cmpsb ud2 (bad) into xor inc jne mov jae or pusha jle or xlat in xor je ja sbb mov mov jae (bad) scas mov lret add dec sti pop push cs iret lea dec adc out call adc nop dec mov jb dec cmpl je push add cmp jne lods xor fcoml jmp add cmp lea jne jmp nop xor in sarl or jne cmp arpl jge shr fdivrs xchg dec inc cmove cmp adc dec call shl call decl or jns mov inc mov xor dec jecxz (bad) decl sub dec shl dec mov call mov stos jg out ds sti lea add dec mov dec mov inc mov jecxz fbld add add inc mov dec test in out lcall push dec mov call dec lods jge xchg sbb sbb push jecxz mov shr mov (bad) call or mov jbe jns sahf push cld pop and loope add mov dec ja sbb loop cmp mov push jbe mov jg lea out mov jmp xchg inc xchg decb stos leave int3 (bad) mov and push push out ljmp (bad) je cmp jae dec movl dec pop mov xor out dec cmp jne addr16 mov adc dec mov bound test repz (bad) popa add mov call lcall dec lea (bad) ss mov xor cmpb je or jo fwait out mov push imul insb or mov push mov jb std enter dec mov jp std mov lea (bad) (bad) cmp iret jmp jae jbe dec mov dec mov dec mov jl sbb call cmp add ret push mov out inc lea (bad) push dec arpl dec lea rorb cmc add mov out dec mov pop dec mov call (bad) decl (bad) je mov inc mov xor inc sub dec lea dec mov sbb mov dec add sbb xor jg jnp inc mov jmp mov call outsl cmpsl cmp inc scas sub fwait cmp aas jmp and movaps xchg shlb hlt cs inc movsb pop dec mov in scas rcl sub nop pop ja and adc xor mov xor jmp scas inc ja,pt adc sub cld push pop pop lea pop push add add (bad) push xor mov adc or adc sbb call test cmc mov jne push jne cs mov mov mov xlat jg nop and je rorl je aas mov outsb xor mov loop adc add and cmp sbb in sbb sub mov inc fstl imul ja add je xchg andl mov leave imul push jne xchg jge adc adc jbe mov sbb or std mov (bad) jmp clc add and inc inc add inc inc add or outsl fcomip in pop pop mov call out test jle inc mov lock mov subl gs int3 jg call push inc cmp sar arpl and or mov call sub in pop pop rcr je add call mov psllw leave call sbb mov inc push aaa cld sbb sbb or adc pop jne mov and cmp je inc adc mov mov adc ljmp je (bad) (bad) call mov comiss call pop stc adc mov cltd push aas or fsub push pop icebp call std (bad) pushl je mov test je mov test jg fnsave and lock add dec enter inc mov pop cld cmc rcl pop jg icebp call daa or cltd or rclb mov je lahf decl mov xor mov aad std daa xchg mov call nop xor push mov decl xchg clc adc iret negl call fldt mov adc (bad) jne call inc pop data16 dec call jbe jmp iret aad sub sbb adc and sti es inc (bad) je call dec mov mov call adc jno pop call adc call xor call outsl das (bad) test clc clc dec mov call jg xor dec sub inc decl clc pop nop test pop or loopne jg dec mov call test pop inc mov call loope daa lret in nop fidivr (bad) int3 je (bad) incl add test jne and or rolb jle addl int3 jg ja push xchg push sbb (bad) inc add cmp test je testb pop cmc inc or (bad) dec mov inc outsl test jne test jne xor pop into xor adc sub xor jge fsubrl and mov jnp lea pop add arpl adc int3 andl and or mov out inc dec daa push pop mov pop call mov fsubs xchg ss jb ret push dec daa xlat and dec mov (bad) or sti enter add ret jmp insl dec aas xor xchg lea mov rcl cmp fld1 mov movsb pop jl xorl cwtl jae inc mov cmc js,pn mov xor fcmovb mov clc std ja imul add out cmp je sub cmp sbb sub jle je cmp mov jae fadd add adc das or shrl nop or mov and (bad) sbb (bad) aas not inc test jne and xor inc or mov aas ljmp faddl dec (bad) jecxz pop mov pop lods add movl mov (bad) mov sti dec mov das mov lret sbb jo add ret pop xchg xchg ljmp scas or iret iret add add lret lahf pushf sbb mov or sti add loopne mov dec mov aas or idivl ljmpw adc mov add iret setae add (bad) mov test add adc jne imul or mov inc mov mov je test mov dec lea jmp movl mov dec dec mov (bad) mov call sar mov call insb sbb jo mov jg or sahf jmp inc add pushf dec cs std inc or inc clc fisub jg xchg xor std aaa sahf aad mov dec mov call push xchg arpl jp dec mov sbb inc add cli jns mov dec mov inc movsb clc jae xor inc jge inc inc out pop cmp push out je mov xor sti call outsb dec mov jne scas push sub adc stc inc call cmp je mull movb rclb aam repnz lea dec jg jno cld gs cmpl cmp incl movl (bad) jo cmp jbe mov xor dec test je inc mov adc adc mov mov xor jecxz fs or fcoms cmp dec jp (bad) or inc loopne lea jbe mov sbb adc call fs cwtl and pushf mov push jl push inc or fildl adc or jmp addr16 mov clc bnd fdivr jmp add cmp jl cmp mov outsb pusha sbb pop dec push call (bad) dec sub adc mov dec mov stc call xchg ds jb mov lods call adc adc addr16 orl push and call daa mov fist daa dec jmp clc add cmovle jmp test mov mov and dec dec test je pop mov adc je ja icebp mov xor outsb js xchg cmpsl dec test sbb and mov mov xchg mov std adc call mov mov add cli es call dec mov enter cmpsl aas hlt xchg cmpsb sub sbb jne or sub outsb in sub or outsl repnz add orl aaa fmull sbb pusha xlat call lock icebp call (bad) pop dec adc sub pop adc adc push loopne push rorl push call aaa sbbb inc mov (bad) sbb jne fmul mov inc push xor daa and jb xchg divl pop cmp xchg mov sbb jno xchg nopl pusha sub jno data16 andb jmp in sahf scas xor and jmp std or rcll cs fcos jmp jmp sbb mov gs lock jb fwait push loopne rcr xchg and jne adc jge adc and stc addr16 fmuls or sub jo cmovb jo mov inc pusha je es push xchg xor outsl call xor imul fs dec fwait push inc lock inc sub cmp dec (bad) lea sub sarl pop test add cmp pop hlt push mov pusha pop cmp mov addb ja or lahf lahf dec mov mov iret dec adc add movd das push ret adc sub add test cmp and test inc jne scas mov xor in dec jnp cmc cwtl add out dec (bad) je or aas xor pusha cmp call add mov jmp and xor jne std cmpsl mov jno jne dec cmpl dec adc ret icebp xor mov mov lcall push mov pusha jg sub mov (bad) fmul call jle test inc je and aas inc inc or test cmp adc loopne adc jnp jne or scas dec mov decl test mov call call repz dec sbbl je movzbl test jne jmp or lcall cmp mov dec lea dec add fnsave sub cmp inc incl mov (bad) xchg jno pusha xor (bad) push cld and movb jmp insb jle js pop arpl xor ss cli mov lds add jbe fdivl push mov xor xchg loope mov adc cs cmp (bad) addl jbe call dec nop or mov add (bad) or inc cld cmp ja call push (bad) xor call or add cmpb insb dec test pop mov dec les mov mov or ds mov dec sub push fs (bad) (bad) outsl or rorb add xchg jno aas pop inc rolb insl jl rcr (bad) aaa dec (bad) je call mov jne dec out and shr xor mov dec adc fisubr ds mov cmpsl adc pop lret pusha xor mov inc adc and xchg mov add jp (bad) je call (bad) (bad) jne cmp ja jo test mov aaa lea cmp jbe or adc test pop orl std (bad) (bad) icebp je cmp jl cmp je cmp mov dec lock fldcw ret inc inc mov mov inc aas je mov (bad) mov sti xor jmp mov pop outsl in mov pop jne testb hlt sbb (bad) insb jo dec and dec cwtl dec cmp je mov mov idiv adc or pop imul out incb jmp call cmp setne lea call insl xchg mov sub fwait jg dec jne je jbe test jne push pop test jp jge mov sarb inc push stc addl add adc inc aas mov aaa imul aas xchg std jmp call cwtl call jo mov cmp sbb lcall outsb add jmp mov iret cmp dec mov je jg adc cli xor and lea push fistpll adc and fs jg sahf int inc insb nop cmp jle call or add push (bad) call lcall mov dec sar dec add popf sub decl dec idiv test jg movl pop cmpl stos cmc jle mov jne loopne ljmp test and in test popf subl mov dec mov aad mov shr idiv call dec mov dec imul dec sub imul mov int sub call (bad) outsb lods and adc js outsb dec arpl stos cwtl ret std out sub add (bad) (bad) xchg xor xor adc mov push popf std cmp push push sahf xchg loopne add ret inc dec cltd dec idiv mov dec scas mov dec pop add sbb cld inc js (bad) mov stc dec lcall fistp sub out pop test jne clts loop aas xor dec mov jne test je in fdivp push adc cli call adc add push and sub and rclb repnz pop push sbb jl adc and nop rcll stos (bad) add add jmp mov (bad) jmp cmp mov pop cmovo inc arpl mov mov lods cs aas stos gs mov lret cld push ljmp dec arpl dec add pusha ds mov add jmp push cmpsb fimull popf pusha jb addr16 xchg pop (bad) and dec inc out call aas xor adc adc out sub sar add js dec mov inc push ret test js jl out mov inc adc and adc in cmp ljmp mov sar out iret adc lret loopne pusha aad dec mov jne jmp pop (bad) incl fisub dec cmp call dec sub call in xchg in imul incl insl mov dec mov (bad) call insl xor dec mov dec shr dec cmp jbe dec sub dec mov ds adc (bad) ficompl mul or sbb xchg lds inc inc vmread mov call push sbb call push test jne jmp (bad) xor jmp cmp incb imul movsb movsl addr16 mov mov (bad) xchg hlt cmpsl and enter and mov int3 sbb mov sbb and dec imul push inc push into dec adcb loopne dec add arpl (bad) pop xor arpl cmpsb ret dec add call or std or sub dec cmp pop dec cmova push ljmp lret addl cltd mov add fwait mov mov rorb scas test scas (bad) call inc dec cmp je cmpl rolb xchg jo cmp push add xchg lea lcall imul cmp (bad) lar ss jmp pslld imul repz popf sbb sub outsl or cmp add hlt sahf insl mov adc pushl inc add xor aam or iret xor jmp inc or loopne pop decl clc cmpsb xor stc call jno fwait inc ret je xor pop std jmp jg lea call sub (bad) ljmp xchg sub test (bad) call dec sbb and sbb movb cmc sub cmp lock inc (bad) aaa nop mov xor (bad) pop data16 neg mov jmp cmc pop psubd das (bad) lea push popa ret sbb mov add sub sti add sarb psrld call sub dec (bad) ds lock lea jg add or mov es jle (bad) call call mov sub scas (bad) pop mov fdivr xchg mov jecxz dec jle je mov fldl arpl mov mov adc ja inc mov outsl inc add daa shr inc mov movl js mov call orb inc fdivrl dec mov icebp jp sbb in out adc stos pop mov mov dec mov je dec fldcw and lds je loope shll sbb je dec lea mov out mov fimul inc lods test mov call fist dec lea xor dec mov call clc mov sub shr scas mov (bad) xchg icebp rol push inc dec mov cmp fcompl call inc ret adc lahf jmp dec pop pop inc pop daa call mov sbb or js clc or dec cmpl jb or out imul xor ja icebp mov call lods and loope or jne sub cmp fstpt xlat mov inc rolb add xchg or arpl and les insb sub pop ret fwait imul jecxz call push test je jmp (bad) and popf adc cmp addr16 les call jmp push sbb and inc test outsl ds cld push lock jne mov cmp jg mov das jbe jle mov adc push call test test bound loope inc fcoms and lds xor sbb pop mov call dec lea icebp dec sub iret push lea call cmc out adc call xor cmp icebp cwtl lahf fs lret call rcl or and mov dec lea xlat and jne lock cmpl jg pop sbb adc xchg out pop jmp mov shr js call lds stc call mov fucomp decl or inc mov dec add addl inc mov std std dec incl jb pop lahf mov dec lea jmp faddp sbb add mov sbb dec dec mov call je out jle mov xor (bad) xlat cli jmp or movsb cli repz xchg or pusha and add shrb test dec xor and xchg mov push ja (bad) fwait mov xchg outsb dec xchg ret adc and adc pop stc stc stos mov pop inc mov out mov push faddl xchg push clc movl or lds mov pushl stos ljmp inc or sarb ja inc aad (bad) repnz sarb or pop ret cwtl sub inc ret jmp js,pn lret xor cmp xor cmpsl nop movl jo ds (bad) lret call pop xchg cmp mov lock imul dec inc sub rcrl lea stc call xor jne mov cltd and ljmp fs jae fisttp or pop mov loope call and shl inc shr mov dec mov jnp popf ret jne (bad) testb jne mov inc or jg movsb or xlat loop add sbb clc xchg and ret neg lods sub sub lea push lea add roll pop jne dec jne dec (bad) aaa inc icebp mov cmp dec adc out add jmp sti jns dec out loope mov fidiv mov call xor sub mov lods dec data16 xchg add and movl sbb mov daa andl ss mov inc sub pop add sbb jg sbb mov dec lea lret ja xchg jnp dec lea repnz arpl mov inc popf push mov test pop push xchg stos cwtl cli call and mov test jg lock inc addl dec loop arpl jg call scas push lret nop push enter push add or pop (bad) (bad) mov sub add ja pop sub call and outsl mov arpl in jne dec shl mov loope push (bad) call mov ss js call pusha (bad) lock insb cmp inc mov insb test or add jg call inc pop cmpl add shll mov test je mov mov nop pop mov or cmc add xor pop pop mov xor lret scas or xor jo dec add xchg lock nop cltd imul out jmp (bad) sbb xchg rorb rol add sub or loopne or jae dec add (bad) jno or sar adc arpl dec arpl dec rolb push dec cmp lock test js mov adc mov imul ljmp call jnp das jne neg cmp pop add rcrb jnp adc (bad) scas adc es dec mov pushl jg cmp pop dec mov mov into add dec cmpl mov adc sub adc sub add (bad) test mov test dec mov mov cmp mov std call push add dec mov dec mov outsl incb pop ja cmc add sarl lret jl dec negb divl test cmp xchg pushf dec inc sub call cwtl dec aas das dec mov push ss or outsl and jecxz rcll pop dec (bad) mov xor outsl (bad) decl add int3 ja and dec mov jne call decb ret mov jmp iret sub je dec cmp orl pop and (bad) (bad) call push out or ja sbb je dec inc scas ss add add mov sub shr ret call jle add sbb das hlt les pop je rcrb adc dec mov outsl lcall cmp adc add je mov xor orl mov inc xor xor xor mov lcall jg mov add inc lods mov call xor sub std cltd add xlat dec mov push adc in out idivw lea and dec jo cmpsb aas stos jle call movl (bad) mov add mov rorb outsb sti pusha icebp add call xor pop rcr mov loopne mov or push pop ret mov push add add setg pusha loop sbbl jnp dec (bad) aad (bad) ss xchg push into inc dec leave lret mov cmc sub sub mov (bad) jmp xchg imul xor push cmp mov (bad) outsl mov rolb pop dec lds hlt xchg test jg mov ja push bound fnstcw add loopne sub call orl fmull add jb cmp adc push lock jnp out sarl call or jns add xchg mov or cmove fadds inc or call pop adc es pop test dec test sbb not and aaa out mov sti sahf stos aas je cmp mov add data16 orb push hlt push add fstps pop sti adc or jmp cmc fistpll test setne mov push (bad) (bad) inc insl mov cmc mov mov mov push mov mov mov divl addr16 xor adc xor fs mov cmp pslld sub adc cmovne xor icebp sub sbb mov push xor jmp adc test inc pop push cmc inc jne sbb mov ja sbb adcl rcrl clc or jmp fsubr lret sbb loopne icebp xor dec setne xor mov nop das cld std pusha fcomps sub adc sbb jo das jmp adc int3 mov je adc push ret call aaa sbb stos sahf incb and add dec mov inc mov dec mov dec mov loope lcall sub call lock inc mov dec mov xor mov aad test inc mov js adc cltd inc outsb push adc call pop (bad) mov jne or aad iret lock jmp pop aam inc sub leave icebp sub dec mov dec jg in mov cmp insl dec lea and jmp xor mov mov ja stos (bad) call jno aaa jo mov out lea mov jge pop fisttpll pushl xor inc out push call popa (bad) gs adc dec cmpsl (bad) jle jle (bad) jmp mov dec add popa call test sti aaa imul sbb push call iret jo adc cmp cltd jae xor jmp popl mov bnd sbbl jnp es jne mov inc lods jle sbb sbb mov dec lea add addl or add xchg push nop popa jmp adc and pop dec adc enter cmp mov inc add dec shlb mov dec call test dec mov or popl sub add mov mov clc cmpsb gs call dec xor decb inc inc cmp push or (bad) mov fdivrs push ror call xchg cmp inc inc xchg lcall cs cmp inc xorl sbbb call add or sub nop nop push xchg xor loopne in je cmp adc les push inc and push loope lcall out inc inc ja into add es ret pop or iret jae pop das dec sub (bad) xlat add jnp stos xchg nop add into jo inc shrb mov mov mov dec and sub mov jo adcl dec xor xor das (bad) xor xor add cmpl jnp jmp or mov adc dec (bad) and adc or sbb jg les push in dec mov je sub cwtl and je cmp stos stos add jb inc push add call lds orb jp pop dec (bad) mov dec lea sbb outsl scas loope adc addl or xor or gs dec mov ss ja call jne dec lea pop out mov and dec push dec lea outsl or inc or jo push sbb scas lock jle lea dec mov pop fwait movsb call je call js mov sbb push shrl xor call pop sub jne,pn clc mov jmp jo adc hlt clc mov psubd (bad) mov cmp cld test add outsl dec jl orl jno call loopne jnp test je lea jmp dec xchg loope daa incl jne pop dec lea dec cwtl jo pop bnd dec stos (bad) mov imul dec mov sbbl sarb rcl scas dec pop lahf outsb andb je testl arpl jne nop insb data16 scas jne and std jnp (bad) adc push mov pop stc call xlat pop pop daa dec sub loop sar jnp mov sub stos icebp and inc adc loope sar and push adc jmp mov inc mov jmp insb out iret insb sub test pop push add loope test and push or mov push add inc and add aas lock (bad) incl ja andl add jp and jne push add add jge stos aad js jbe jne mov dec mov pop cmp dec sub mov pop jge or sbb call pop rolb repz ret jo pop les (bad) mov outsl testl xchg sub and sbb mov pop add pusha dec dec test inc mov sbb sbb adc adc inc rclb gs scas mov sub adc mov dec imul inc cmp dec scas and (bad) das mov sub (bad) jae loop mov dec das inc xor jmp mov or nop add and inc test lahf imul enter out dec fs roll pop into mov scas mov or jbe dec aaa scas pop sahf outsb or enter ds and inc fiadd cmp ds inc pop scas scas pop ret out add pop lahf add jmp jg iret out xor pusha fbstp (bad) push push adc ret dec xchg push mov loopne or push and call or pop in cmp das and int push sub jae das sti imul dec and adc sub clc sub fwait adc sub pushl mov outsl dec mov movzbl cmp mov je cmp jecxz loopne cmp je jbe dec lea add fdivrs jne dec add dec mov loope fist push or pop adc cmp xchg jmp test jne jecxz (bad) jb or mov or (bad) das cmp je call pushf add push mov cs dec xor call roll call test je inc and (bad) cwtl leave push addb rclb add in ret push and or adc mov bound mov add ret je call ret mov dec lea icebp decl or test push dec lea cmp mov add add sarl inc js (bad) (bad) mov loopne dec shl add dec or inc test js dec add dec mov add adc push sub fwait ljmp and loop lcall push mov mov ljmp ret or mov dec mov pushf test movl push ljmp not popf pusha data16 and xor dec add sub pushfw inc ja in lret iret dec or pushf mov dec mov call sbb mov call mov (bad) sub xchg mov and cmp idiv jmp je jbe cmp je cmp je cmp jne dec mov xor fnstcw jae fadds pop test push adc sbb push test push add adc ja mov push ret nop xor pop call out aaa ljmp mov ja lock jne dec mov dec lea (bad) je divb sub rolb and xor add or mov call (bad) cmp inc mov je and cmp ja dec lea movzbl dec arpl pop add push lahf dec mov dec dec cmp incl mov and cmp dec cmove dec add inc test jns nop shrl mov pcmpgtd dec jg pop dec and dec mov dec lea sbb sti add decl mov jne jo jb push inc mov jg movzbl repz rcrl jmp test js jnp movzwl jmp inc lahf add jge pop adc add ret mov stc jne or aas ja je cs inc sbb shl dec or daa test stos sbb sbb imul fiaddl add incl dec sub shr jecxz inc dec mov push or mov frstor fldenv sub call cmp std or lret jmp (bad) enter and add test dec mov call mov sbb (bad) add stc clc sub jmp cmpsb and dec mov push add mov push mov sub jmp adc in in add test cmpsl sub or ss push jp mov pop pop aaa hlt incl mov mov add je inc psubsb lock sete inc and mov je dec mov cld sbb call inc call addr16 inc test dec arpl js jl or mov call and pop adc mov (bad) pop call jmp xchg push dec inc aaa jge sub je test inc or push xor push jno (bad) in inc and call xchg mov mov rolb add inc pop pop (bad) mov (bad) and or or mov clc adc jg and cmp jae jl je,pn jo jle add js mov (bad) (bad) std out jle mov and and rolb std decl call sbb gs mov inc gs dec (bad) and mov repz (bad) xor call out sbb jmp pop sub mov jl pusha jecxz dec gs push mov js decl and add cmp jbe inc test subps loop inc add inc xor pop inc fwait sub adc addr16 xchg mov jg add mov dec mov dec mov dec loopne lahf cli mov jmp sub loopne xchg and (bad) (bad) dec cmp inc cmc jge mov clc inc sub insl ret mov daa pop jne push dec scas andl popa jmp add mov dec sub jmp lret cmova jns and sbb add sti or xor mov aaa cmc call mov lret sub sbb call push sbb sub aas push add addr16 mov jmp jo dec mov dec add adc test cmp and adc je cmp je jmp fwait cli pop dec ret and pop inc jne incb mov add jbe inc adc fwait and jb xchg sub fcom jecxz mov inc push dec (bad) mov jg dec pop mov lcall pop je dec les inc movzbl shlb dec or test js (bad) ja and je mov mov dec mov sarl push (bad) add xchg cmp daa cmp or (bad) push in adc and sbb std mov jg test data16 je dec test (bad) inc cs repnz dec not dec add inc movsl pop inc cmc adc jb dec test mov lods inc dec dec test je cmp dec lea jmp hlt iret inc push jmp daa faddl push push test je movl daa mov dec pop mov mov mov lock xchg dec mov fsubs scas mov out jne inc fldl push sti add xchg add js xor adc ja ja call decb test outsb ja sbb xor sub test xor in jo in (bad) ja jmp mov stc dec mov cli push adc call xor sub inc sub add shr dec testb sbb (bad) decl inc inc je dec mov add jmp cmp inc and sbb add shr aam add es jg je ja mov lea add dec dec mov jmp call call mov in mov mov out mov lea call fsubl cwtl inc jge shll adc dec lea lahf sti mov test mov rclb je mov dec lea dec les (bad) (bad) cmp ja je dec mov je outsl dec cmp jb pop dec cmp mov adc mov dec and out pop fs jne pop je dec mov jge aam xor leave jmp pop sbb inc clc sbb sti sbb add dec mov pop inc clc dec mov jbe mov mov dec xor and rorb ja fbstp mov jmp xchg dec add test sbb cmp in mov jbe adc addr16 cld aas push cld dec lea call add and scas out sbb call pop sbb call call inc call or mov or rcll sahf dec leave leave mov fadds inc rorl or xchg jo dec and leave je dec mov dec cmp ja jmp out pop push scas popl jbe test inc outsl (bad) jne (bad) adc and out call push loope inc cmc sbb rol dec mov call cmp jbe dec lea dec mov dec mov dec mov dec mov add pop adc mov mov lock dec mov addr16 or jmp sbb sub push hlt nop dec lea es xchg out mov sbb das rcrl xor mov xchg nop nop vprotd pop mov sub pop clc (bad) fimul lea dec add dec nop jmp outsl fisttpll dec and leave je inc loopne jae mov fsubrl sbb sbb add jmp (bad) enter adc add cmp imull and dec lea dec or clc push (bad) (bad) lea dec lea dec mov mov dec sar mov lea dec add dec sub (bad) (bad) (bad) fbstp push dec mov inc mov jne dec mov dec sub dec cmp ja dec sub dec mov cli es fdivrs mov mov pop dec inc add add jmp mov jg daa (bad) and lock lea lret jmp add jbe jns je jae loop (bad) (bad) decl mov add cmp je cmp sete movzbl dec add jmp mov sbb lea movzbl test pop mov dec sub dec add jmp lahf dec cmp je jp ret add jmp je jo mov cmp ret sub aas cmpb jne mov push cli out fimull popa or xchg stos (bad) out ja test jle dec cwtl dec add loope add mov arpl call sbb lea mov sub loopne mov es jne cltd sub jmp jb jg adc call adc arpl mov add shll adc pop push outsl push push dec mov dec ja (bad) (bad) (bad) mov and insb dec mov outsb outsl jne mov jo arpl sub push inc sbb dec mov dec mov cli adc insb and and dec lea enter (bad) (bad) pushl jb and and arpl outsb jne dec mov add insl (bad) (bad) pushl gs popa dec mov outsb and push dec mov and dec mov pushl jae das das dec mov push loopne mov fs pushl jae mov and dec and dec mov dec mov dec mov dec mov xchg sti ljmp dec mov dec mov cmp lock sub add inc sub les mov lock mov lea test fbstp pop dec aam adc mov mov jo mov lds je xchg push cld jg call movb fld1 pop mov and mov fildl jne or add add or and std dec sbb pop or adc mov inc ds mov inc and ss call xor or (bad) call cmp lea inc mov jle add cmp idiv and add push pusha inc call pushf mov push aas jae ret sbb inc call mov ss call call cwtl in lea outsb lret inc mov cmp lock add stc call call dec (bad) add popf mov call mov (bad) jne call lret push add ret call fsub sbb inc sti jnp in sbb push ss movsl fld1 addr16 mov pop psubsb xor lahf call or pop jl pmuludq pushl negl xor sub ror jnp adc sbb add adc orl nop inc cwtl das mov adc call rcr movl or dec cmpb push lds sub adc dec mov scas dec mov lret ja sar mov mov jne dec inc je and adc mov mov mov rclb mov dec shl xor pop adc fwait clc outsl loop adc mov jbe dec cmp std dec rolb decl inc imul add test mov rcrl or leave jmp (bad) out mov mov imul pushf (bad) scas mov inc test mov add inc mov mov dec mov mov mov dec mov sbb pop dec adc or pop dec das mov std and dec or inc or das push into fadds stc jp mov aaa enter and loop dec xor inc sbb inc and loopne fs dec mov push dec jo dec add add dec mov popa cwtl cmp (bad) ret push dec sub (bad) call dec mov dec cmp lret je sbb lock outsb mov sbb cmp dec mov mov je ja dec incl mov sbb add inc inc add iret dec mov dec mov dec faddl lds ja aaa scas dec mov inc movb sub adc adc (bad) cmp cmpsb sub jne dec cmp add cwtl test jne adc mov out and jnp dec mov dec shr dec imul dec mov dec and adc lret lods mov mov call ds add dec out movb jp test jne jnp cmp pop in add ja jae push or iret daa pop (bad) xchg adc rcrl dec mov xchg sbbb ljmp dec dec shrl stos xchg (bad) jmp add dec sub lds loopne out imul cmovb dec test je inc mov jbe in dec lea mov dec cld dec mov dec add in add nop out or int3 inc mov push and loope lea rorb xchg mov inc inc mov pop je cmp lret dec lea dec shr dec add (bad) fbstp fwait dec lea aad cmp dec cmovb dec test je jecxz loop out sbb adc adc scas pushf inc adc dec mov jmp inc iret pop pop mov dec sub dec lea dec shr dec mov lea mov add aam cmp in call fsubrp call adc inc mov push (bad) leave fs mov inc outsb movsb cmp or les lods sti dec mov call or mov mov lret iret dec mov call or or push out call cmpl xor dec mov jmp loop scas push adc call dec add dec sub dec ds mov (bad) loope ret iret xor rorb out mov jmp mov push inc pop jecxz jo jmp rorb push jecxz dec out push jae (bad) xor lea out push dec loopne fcoml add cmp mov dec adc adc pusha add dec cmp push lods mov inc xor (bad) lahf jmp pop int3 inc pop inc cmpsl rcr sub cmpsl pop push cmpsl mov mov icebp call jmp or mov dec add outsb adc aas (bad) dec pusha cmp jmp adc push mov call fsubrl or and orb jmp mov mov push push call int dec call insb adc sbb jbe int shr or add xor push xor pushf xchg sub sbb inc vpunpcklwd cltd adc adc and cmp or push aad fisubr lret call call mov (bad) jb or push sbb sbb xor sbb nop add int3 adc cmp in adc mov pop ret mov mov push push jnp jmp sbb sub cmp pop aad lahf pop sbb cwtl cld mov inc enter fstpt sarb add lahf sub lahf xor inc movzbl js (bad) aaa cld sbb je test cmp je test cmp je loopne push cmc lods mov call dec xchg (bad) (bad) out aaa sub cmp je rorl sbb (bad) ljmp ljmp or add lea dec cmp inc outsl or ja dec mov popl dec fisttpl pop jg icebp ja push and add add cmpsb and xchg clc popa mov adc das jne insb dec cmp ja lock arpl push and cmp add std mov dec lea pop and mov pop fiaddl cld or test ss mov inc test test cs ja pop std cmp jne cs add xor or ds xor mov cmp push inc (bad) out push add dec mov fdivl movb xor jg sbb dec mov movb shr scas push rcl mov dec cmp jb (bad) loopne ljmp cli dec or test or add mov add aam mov sub and ret xchg sbb loop (bad) aas out push mov lds scas iret decb inc adc mov test lods dec lea test arpl jae sbb inc mov lods pop inc sbb fldenv dec lea arpl dec or andb les add add pop pop jne popf sub dec add and and (bad) jae cld and or pop sbb inc shlb fadd add mov ljmp xor xchg add jmp jae jo push rorb sbb jp dec lcall xchg rorb dec sbb cmp ficoml add xchg mov inc movzbl xor cmovno jge loopne fcoml jg cmp ja js jne into loope add test push add outsb or and sbb lea decl push add inc mov (bad) (bad) fsubrl sbb adc inc mov jne dec mov dec add xor pop mov subb xchg pop subl mov outsl push bt jae jne push mov pop outsb mov dec lea push lds and outsb out lds decl je mov mov fsubr orb cmp jb jo popa les test sti enter pushf mov and dec enter inc aad dec dec sbb fdivrp sub cmp mov mov pop mov test xor rorb inc arpl ja movsb sbb pop cmp add jmp jnp dec and movl add inc mov cltd push dec push sbb or add clc jge test xchg pushf mov addr16 (bad) cmpsl jmp mov ja and add push and cmp test sbb jb push mov arpl clc pop adc jne arpl xchg sti mov mov call ret add insb dec mov (bad) mov pop dec xor jne dec or jmp into das mov adc xchg add (bad) pop shrd mov inc inc push lods pop pop pop add dec lods ret mov clc ss sub lods sub fimul (bad) jne test push sub inc shll xor (bad) add aas addb or dec mov pop pop out jo das push mov arpl stc (bad) jnp loopne lss mov xor xor sub jmp fadds (bad) insb jne stos mov add (bad) outsb dec or das xchg adc cmp (bad) dec lea xchg repz and aaa jl sti shlb test cmp pop mov push and incl lea dec cmp ja push cmp test clc (bad) decl dec inc sub and jmp sar or inc cmp jne xchg (bad) movsb pop testb test or std out mov sub jmp test and aad adc adc aad jbe pop das cmp add jne dec cmp jb xchg (bad) leave dec inc inc add sub adc out leave test pop mov out jg pusha jge ja in jae ret jo jne outsl xlat lds add divl aam push stos cmp push pop push xor shll in mov inc sbb dec mov jne hlt popf dec cmp hlt rcll mov hlt push das jne dec test jl test sub dec les mov jne adc or jmp cli inc jnp in xor mov imul jae scas add mov cmc inc lret sbb lcall pop jge pop dec ret sub add mov sbb jne adcl pop push (bad) jne xor ljmp or cmp push std pop mov jmp ds pusha jae test andl test jp insl inc (bad) daa jae imul dec imul xlat inc jbe pushf xlat leave xchg test pop outsl jb inc inc sahf dec rorl (bad) dec loope push inc dec pop dec (bad) pusha xchg push xor xlat or xchg inc out or push aas or push fisttp jmp test jmp loop das mov inc mov cmpsb push lods fwait call mov dec lea into mov push arpl jmp add fisttpl pop jmp bound pop sub fs ret adc dec mov and and pop out or movsb push sub or mov in stos xchg imul pop scas imul aam xor icebp repnz (bad) mov add js xor loopne (bad) dec out adc mov lret cmpsl in and dec fisub jmp dec popa mov gs xchg popa mov sub push popa cmpsb xor adc xchg int3 gs mov inc xor push pop push jo test dec lea pop push dec mov shlb jae std fnsave int3 les stos jmp push dec imul std or (bad) dec pop cmpsl jo and dec and cmpsl sub out rorb dec pushf cmpsb and ljmp lcall (bad) out and or pushf jmp dec popa in lock dec in int3 xor mov xor subl adc and pop and cltd and iret jg ret jb and jle jmp mov push inc dec lea cltd jmp dec mov les mov ja fcoml dec mov je enter lea dec mov dec loope shrb (bad) pop push jl pop icebp jne decl xor inc xor dec xor aam std aas enter add in dec add pusha imul (bad) je or push push adc sub aad ljmp outsb out mov jmp jae add mov jmp fcoms push xor jmp inc adc mov call orb cld jne pusha push cmpsb pop adc inc push popf add das sbb pushf test mov adc mov loopne (bad) call mov dec mov inc test je dec cmp outsb test pop dec std or pop inc loop xor mov jae dec push dec pusha cltd fadd pop jne mov int3 rcrl mov pop sub push add adc push and push aas pop outsl push mov clc lds es and add stc icebp jae mov sbbl adc adc add pushl rorb sub dec add movl popf add cmp jne popa clc cmp insb sbb dec xchg add add bound mov inc (bad) dec roll jg lret je fsubrs sub or or cltd je fadds fistpl or mov cmpsb orl outsb dec lea dec insb sbb sbb mov js cmp pusha (bad) xchg inc mov xor mov or xor xorb inc dec shrb and mov mov xchg stc cmpb lahf stos fist out dec cmp jb pop push fucomp test sahf mov add mov popf (bad) mov addb clc inc divb jne mov add leave jno movsb sub test mov clc xchg decl or mov inc mov rorb test hlt (bad) jp dec (bad) push cmp dec rcrl inc ljmp ret push cmp ret (bad) sub mov loop (bad) xor movb adc das stos test inc cmp sar jae loopne lahf jb test or aas and cmp sbb cmp jne push mov incl xor inc cmp jne lret mov mov push hlt sbb jmp fidivrl testl test fistpll dec cmp jb pop dec lods les call mov dec push arpl imul hlt dec sbb cmp imul test adc cmp adc aad rcl in pop sbb jne xor lea xchg in dec mov dec shl dec sub ficom out pop cmp test add inc clc mov mov rolb lock cmp or cld sub jbe xor enter pop and inc inc inc or cmp sahf sub cwtl xor aas push rorb xchg call or xchg sbb lret pop add jmp add dec sub dec lea mov dec cmp dec cmovb das xor or ds mov call icebp inc lahf cltd mov cmpsb aaa push inc xor fsubrl fnsave inc or movb repz faddl fwait aas mov (bad) xlat pop cmpsl adcl push xchg lods xor orl or into call dec fwait mov and sub fsubrp cmpsl call jmp or or dec dec je or (bad) dec lea js xor rcrl popa dec add xor and call mov imul or cmp and pushf cmp inc pop lea sbb test imul imul and je cmp dec mov jmp out ja xchg sub cs and pop test xchg jmp mov push jge (bad) cmp std mov jmp mov jmp mov cmp subl rolb or notl call cmp lods and push int jmp pop out push push insb and sbb addr16 jmp and jge pop cmp jne ja jecxz fs and lcall in dec shl dec sub inc test dec mov fnsave push or stos int mov mov andl clc inc mov add jmp inc loop dec movsb imul mov xchg loope loop andl dec testl dec lea sbb dec sbb or cs jge or inc sub jno adc dec pop adc add addl pop bound xchg jmp js pop dec add sub loope pop xor loop flds jo and mov js add sub les cli call jg mov adcl shl inc mov dec sub (bad) (bad) (bad) jmp cmp sbb push mov dec lea sub bound aad xchg add rorb add lds or out push push cmp (bad) cmpsb mov pop popa push sbb pop in pop or dec xor mov jp sbb xorl test inc cmp or xchg push mov pushf je dec pop jmp or inc xchg inc leave dec (bad) roll movsl in (bad) jb,pt mov jne mov and or xchg test dec mov pop sub call dec ret std and cli dec mov dec mov gs cltd mov and dec push stos pop sar aas (bad) idiv decl in aaa dec mov dec mov mov (bad) pushl dec mov fisttp jbe dec cmp dec mov dec cmovae dec addl mov mov hlt dec inc dec pop daa xor cmp jge aas dec and dec ret mov dec or (bad) clc call sbb adc sub xor mov dec mov nop mov push dec mov push aam xlat pusha arpl out test jle or stos pop pop aaa add xor mov fadds fcoms jmp mov out push mov test je dec or jmp xor jbe pop aad adc fisubrl jo call clc call rcr pop call adc lcall push dec mov dec add dec lea nop push aas xchg mov adc bound push xchg sub mov jmp or test push push sahf andl mov orb fs jo imul scas sbb mov cwtl jle cmp jl jne xlat dec into or inc xor jmp push cmp jmp jmp push or push ret fldenv or andb dec or sbb orl test ror pop adc enter jle add pop inc and fsubrl leave jmp sub ret inc lock lret inc cwtl (bad) push scas or (bad) or ret cwtl ret adc dec pop mov push inc mov and dec lea test push add ja,pn adc jo and mov mov in and in cli inc ret inc mov popf jl (bad) (bad) mov fs jmp push bound mov popa push and ret movlps lea dec push push fs push or mov adc push sarb mov mov js or jmp add inc push cwtl sbb ret sahf adc add fwait or push pop pusha test mov out movsb nop jo dec cmp ja scas jbe lods test or pop add dec andl xlat xchg fiadd jmp xor aas sub cltd arpl jmp xchg or xor js jp cmp idivl jo and xchg cs lods push lods andl fsubl cmp icebp xchg int3 jp dec mov jmp or sbb cmp sbb aaa arpl movsl movsb inc movsl jmp outsb xor fadd call movb pop mov inc in (bad) roll rcrb sbb rcll mov nop dec lea and push jmp fimul test fcoms nop add or lods dec pusha push inc (bad) xor inc add fistp dec mov dec mov movzbl cmp je sti xchg dec cmp je je outsb jnp sub std or cmpsl stc movaps sub add les pop dec jmp sub cli and test sbb inc std incl dec mov dec mov dec lea addr16 scas add xchg cmp adc hlt out (bad) out xchg inc movzbl dec mov inc cmp jbe mov inc and jo test mov add mov add cld sub test add js fnsave out push add mov out mov or test scas jp mov or sub inc push and mov stos xchg dec bt jae lock lea push add jecxz jmp test stos (bad) (bad) fnsave sub jae dec mov dec sub dec not and je cmp mov cmp jae dec cmp je (bad) sbb add inc mov fnsave inc leave jae adc xchg les test test adc ret mov fadds iret lods adc cs mov mov mov dec xchg push incb adc jae ret mov ja dec lea or into icebp jb test sbb adc jl pop add into adc dec mov gs incl add push cmp inc mov dec inc add add icebp imul inc loope or and dec dec inc or std ds jnp xchg jle jne test lea fsubr orl (bad) adc out cwtl popf sub mov dec lea dec cmp (bad) sbb out ja rcrb test or test jbe push aad xchg les flds jo ficompl mov mov aaa mov jae mov jg dec and dec cmp je cmp xchg and or clc fwait sub jmp loope js iret adc xchg lds jae (bad) stc mov add ja mov fidivr mov inc sub adcb arpl cmp sub mov sbb mov and xchg push stos mov dec lea cmp jne xlat sbb ret or fsub fmull sbb adc sbb outsl cli pop push or ffree jne movdqa add imul and jge mov adc sub pop aad sarl jl pcmpeqb sar por pop lret sub out pop movl xor je movzwl adc bsf inc cmove inc fsubl dec cwtl dec popa jmp lods pop das mov add aam dec leave ja adc mov and xor (bad) movzbl inc cmp inc hlt aad fbld std adc and pop sbb cmp test adc mov dec mov or or bt xchg leave jae add xlat xchg mov add (bad) jae dec mov dec push add not inc and and push js ja mov out jle jae dec cmp add mov (bad) jae andb xchg xchg test (bad) std lret sbb and and xlat sub (bad) iret push outsl mov xchg or nop add imul xchg lret addl and adc jae test lret (bad) mov loope stos add pop repz and xchg icebp cmp test xchg or dec inc sar xor mov jmp adc sbb push cmp add lea adc cmp push out subl scas fsub bt jae aam sub dec not movsb pop xchg loope and sub push xchg ret or cld xchg mov loop xor cld add ret in add shufps insl data16 shrl inc arpl fs lahf lcall xor push out out xchg sbb sub mov xchg inc aaa sbb stos imul xor rolb or mov aaa or or lret push out cli cmp cmp sbb repz lods add movsb aas dec mov test inc movq hlt mov jmp inc movq outsb mov or je je sbb sub adc insl mov fldpi daa incl jbe loope fldenv xor pop into jge les ret adc or cld pop add les enter bsf cmove sub adc adc push cld sbb movl dec mov jmp add movq mov outsl lock mov into je mov fistp inc por sbb ja outsb int jmp add lods xor je inc movzwl mov les xchg and adc cmp jecxz mov in sub cld je insl adc xchg sub xor lds fsub (bad) aaa call jae and jo outsl mov mov jae jae push dec and push and shlb cmp enter pop int3 bound push pushf mov int mov iret push push int3 inc push mov push jb dec shlb mov insb icebp sub jae into or push dec jne out or sbb jae add out ret xchg adc (bad) xchg dec mov pop rolb adc add inc add pop jb fwait adc ds inc cmpsb mov push xor mov adc rorb fimull test or lea int cmp sbb xchg sti add push scas ds es push dec adc inc xchg cmp outsl add fmull cmp shr xor test test movsl dec jbe ljmp add imulb add sbb push dec fwait (bad) fist dec bt jae mov loop rorb test adc add (bad) ja mov ja sub jae dec mov dec sub dec pop pop push cmpb pop pop mov bt jae dec orl add sub clc call test and inc les xor (bad) adc xchg ret push pop addr16 adc xor (bad) add pusha dec lea dec mov ljmp ljmp ljmp notl lea stc sub rolb jo cmp lds xlat inc stos aam inc adc and dec cmp xchg or je sbb scas shll sub jae dec sub in fwait or aaa ret xor ja rcrb cmpsl sbb inc aam push into jne jmp jno cld jmp inc mov mov or lahf cmp test fs mov or jnp dec mov jae cmp pmaxsw add das leave je inc ret decl dec mov dec sub dec not inc and (bad) pop std pop jecxz lea movzbl xchg vmovups cmp sbb sbb cmp pop mul mov rcrl cmp sbb vrcpps lret adc xchg sub jp (bad) nopl shll push pop jl add mov roll aam mov or cmp std sbb sub dec add inc js das jne inc mov add sub or push (bad) mov xor pop and inc fcom rcrl dec xor mov imul sbb sbb push jne mov inc push jbe das je xor jg mov aad call ror js rcr sbb adc dec mov dec psubsw push lsl dec lea inc cmp scas ror mov mov sub add dec sub adc fisub xchg test adc dec mov xchg fadds mov int3 or test jo mov (bad) cmpsb ret roll inc xchg add dec push lea shlb test cmpb dec (bad) mov push push rol test rorb add and push test push sub sarb sub sbbl lds (bad) fnop sti sub test mov js mov xchg jp pusha add or cmp adc pop cmp jmp lcall cmp jmp pop push jle pop icebp (bad) dec jae or inc add fimull test bnd sti (bad) or int3 jae ror insl ja jle jae adc pushf cmp dec mov sbb or roll inc rcpps leave sbb xchg adc test test xor sub popf jae mov inc popa and lret mov jo or push ja xor (bad) xor dec fldl je js mov mov adc or jmp aaa je je test addr16 sahf pop and je mov out jbe jmp adc lds sahf scas outsb dec enter xchg jae in ja lcall rorl (bad) into fcoml or sbb inc or xlat mulb into adc push xor cmpsb pop push jmp xchg aaa sbb frstor or call add mov inc push dec cmp loop popa (bad) test jae adc cld pop mov jle mov inc and rclb es pushf xor xor mov out mov inc mov mov iret and outsl pop cs outsb push cmp push or jae jae or jg adc add out jmp xlat adc ret jle fwait xor out sti dec push fwait mov pusha out mov xlat cmp cwtl sti sbbl inc adc jnp pop int3 cwtl cmp xchg pusha sbb jnp int3 jne adc sbb push adc dec add xchg shr and stos add aas arpl add mov xor sbb jmp in das (bad) pop inc into cld jl sarl pusha data16 sbb lea pop popf mov fdiv das pop xor jne lock sub jae dec mov jmp mov cmp and xor je mov sbb cmp mov nop stos ret aad nop mov adc das or add mov xor or popa popf jo popa pop inc or pop add xchg testl jne test or je add add or test stos orl stc loopne mov sub aam push xorl ja sub jae stc shlb stc mov cmpl fdivl cmpsb enter add sti aad ja and jae jo jp mov sub mov cmpb loopne sti incl xor fisttpl test (bad) jmp sub test dec test loopne sbb mov cmc pop aam jge cs xchg lahf leave ret mov movzbl and pusha pushf imul bnd jge dec add pop or cmp jae jb (bad) movsb pop mov push or je sbb dec int3 jae pop or or xchg repnz inc js dec lea or repz inc out dec xchg xor adc jmp mov je fmull sti insl jne xor out xor xor and ret shlb jge adc divb stos jae rcrl inc je pusha repz arpl aam xchg mov xorb and (bad) les out clc mov cmp or aam adc sbb mov adc out and scas ss nopl push mov dec leave jne jne xor mov hlt adc xchg dec adc out cltd cli outsl loop jb jecxz cmp js push addl jmp or imul add adc mov lock enter enter cmp cwtl sub adc push loopne sbb inc adc call es sbb jnp je dec inc lock inc jne push inc cs lock addr16 in dec jnp mov rolb ja and mov inc loop or xchg std in daa or les pusha dec jl adc mov push xchg jl dec stos xchg mov jge idivl movntq jae and mov jo je into shrl and push mov cmp shll shl ja (bad) push jo je jae push cmp inc or dec arpl mov xor je xor dec sub add iret mov (bad) pcmpeqb fild adc and jecxz sub por lcall iret mov ret dec add and divl xlat loopne gs jno je lods pushf jae xor fbld (bad) (bad) xor xchg add inc sar cmp into xchg xor jae xor fnstsw sbb jmp jmp or and push cmp ffree hlt pop mov rol and add scas fildl movsl je adc ffree add pusha repz shl icebp pushl inc and or ret inc in cld mov dec add jmp mov xchg movsb inc jae movq adc aas mov je dec je adc mov sbb nop adc lret jmp xchg enter jnp addr16 xlat jl outsl je je stos cmp out pop jnp push pcmpeqb mov icebp adc lock push add jmp xor add sub sub mov inc hlt (bad) incl in mov dec sub dec lea dec cmp dec cmovb dec (bad) out and daa nop dec mov call sti fbstp add dec mov dec add push pop jmp (bad) fcos (bad) mov (bad) out std dec sub dec lea dec shr dec add dec mov pop dec cmp out stc out cmovb dec addr16 dec dec clc mov enter jmp inc adc mov push push rcr out dec mov rcll lock mov call adc inc out rcrb pop xchg push xchg icebp pop mov arpl cmp sbb xchg fisttp nop sub pop inc movq mov notl or adc (bad) out jmp pop jmp pmovmskb xor je inc movzwl dec rorl lods xor mov (bad) out nop movq outsl fnstcw pusha ja fucomp pop (bad) pop je ret icebp cmp movq call lds out addr16 ret out xor rcrb repnz orl adc out (bad) (bad) call jmp jae call and into push pop sub call cmpsb je sbb mov mov in mov and lock dec orl or int lods adc sbb mov inc xchg ffreep call cmpsb shr push test mov (bad) lcall xlat fld1 jl inc cmp outsl jle fstp and or outsl sbb lds movq sahf jnp jb inc jmp jecxz into xor mov sbbb xlat mov mov mov lea cli mov lock dec (bad) cmp cmpsl test push add dec mov jmp add dec mov test adc jmp xchg mov jmp pusha daa sub cmp jmp push aaa loope inc loope int3 push cmp call loop arpl dec pop dec jmp xchg (bad) int3 insl (bad) cmp add mov push faddl jno dec mov cmp jle add leave jge test mov add mov mov dec and dec or dec hlt mov xlat mov shr inc (bad) (bad) jmp outsl loopne and fistp in adcl out adc mov adc bt and std les dec lea jge (bad) sbb popa jae,pt loope nop loop mov cmp sbb and dec jb cmpsb clc fdivl dec cmpl orl push pop dec int3 jae popf pusha lret or xchg aaa push jg or cmp add dec mov (bad) mov jnp inc cli dec mov push ficoml lds jne or scas xor sub sar sbb daa mov push lods cmp dec cmc mov cmp incl iret (bad) ss es sbb xor (bad) adc ret je out fistp loope pop (bad) mov decl test ja xchg or je add je roll sahf imul push inc jo dec or imul rsm aaa adc int3 push adc add add xchg cmp sbb cmp cmc fdivl jne jae clc add push push into mov xor frstor pop cmp insb lret cmp and or rorl dec test push int inc xor cmp jmp add xor out cmpsb or pop and sbb jae xor pop insb inc inc add add dec scas jecxz divl daa pop add dec dec daa ds int fdivl adc push push cmp int3 outsb pop in outsb lea sbb cwtl ja sub jae enter mov scas sbb push add cmpsl pop clc pop test insl es test repnz out and pop scas inc xor insl push nop push push test mov roll (bad) jno outsl rorl mov adc inc jo pop jae adc jle jae sbb xor cmp xor dec dec pop rcl mov add xchg jmp and add in pop out mov fwait test pop jo cmp adc and and mov inc and sbb movzwl bsf outsb int3 (bad) mulb inc stos outsl (bad) je sbb adc cmp jmp mov dec call mov enter adc or inc daa sbb push cmc mov add icebp scas ljmp push cli mov std das jne add or test out (bad) push call decl jne dec mov jmp mov cld das xlat pop das push fs adc pop (bad) das scas or decb aad gs int3 icebp or int3 mov jnp mov pop rclb xchg mov mov sbb dec inc ret pushf sub (bad) fiadd out pop sarl add jns or add andl rcrl add hlt mov add xchg mov je leave inc sub or sahf xchg xor xchg dec cmp addr16 fldl2t int3 mov aas and stc add push inc cmp sar jae and jmp add andl sbb mov inc adc jbe leave and pop into mov jle jmp cvtps2pi sub fwait adc fucom ret mov adcb out dec pop cmp mov jmp lahf cmp xchg cmp push sbb ret push pop mov hlt xchg mov int3 xor cld pop outsl mov scas fwait cmp xchg inc (bad) mov mov mov cwtl lds pop mov out popf dec mov out movsb xchg stos jecxz add inc cmp in ja aam jmp cmp fsubrp rolb insb or daa adc sbb xor fcoms je,pn outsl pop push adc ss jmp mov push sub push jmp mov into adc movsb xchg mov dec push cwtl mov sub jne adc and jo nop fiadd bound ret xchg mov jmp test ret jl,pt mov jmp lea inc cmp (bad) add xor fdivs loop or dec mov pop dec sub das jne notl lahf sbb test out rcrl push jg cmp inc adc dec mov movl lret pop mov jle dec mov sbb test clc jmp mov jne xchg ret mov mov add idivl mov pusha inc dec lock xchg jmp inc pop mulb dec mov jle mov and push adc pop (bad) mov loope movl sub add mov dec scas lds ljmp dec mov dec mov inc movsbl dec mov out adc sarb sub fimul cmp jb push test fisttp sub inc (bad) jae add dec mov fild add (bad) push inc movaps or mov (bad) and test fcmovb ss imul jne inc mov iret inc inc cmp add test mov popa (bad) mov add in xor in xor add jmp ja fbstp std lret int3 int3 or pushl lea add inc inc pop imul (bad) out movsbl rolb rolb les lea faddl pushl push inc jbe inc movsbl jbe cmp inc inc decl stc mov inc lea fistpll add dec mov jmp xchg dec lea fwait sub inc jnp in cli inc fwait test std movsbl inc lea popf dec arpl dec add xchg inc lock mov dec cmp ja lea dec lea ja jg inc ljmp mov jne aam mov or cli (bad) call add pop push hlt and jp adc bound xchg addr16 call test sbb jbe push ret js adc call roll lea add addb mov jg lret pxor inc xor inc xor xor fldcw jne lret xchg add pop and mov je mov push hlt dec xchg add add dec mov jmp sbb jg inc mov jne inc mov mov dec repnz adc cmp fmul jo push test sbb add cltd sbb ss xor lea push mov lea fild inc cmp repnz cmp aaa sbb je mov rorb and cltd sbb jbe jmp sbb mov fdivrs sbb lea sub dec arpl mov daa arpl jmp outsb mov push xchg mov add adc daa inc mov jne cmp mov daa adc xchg inc push icebp mov xlat jno sbb movsbl lock ss and cmp lea call pop push aas cltd or divl mov fwait mov (bad) lret xchg incl (bad) call fist jmp dec mov lcall add ja jle incl cmp ja dec lea dec add sbb xchg ss xlat adc out sub pushl jl add notb mov incl inc sbb cmp jbe cmc decl push dec cvtpi2ps js and insl out lcall montmul cmpsb add inc loop (bad) fisttpll ja inc cmp sbb (bad) pop (bad) push dec cmp repnz mulps jae xor adc jmp cvtsi2sd addsd comisd jbe jnp (bad) sahf pop jbe inc inc js or lods in aas mov je testb jne adc cmc addps in mov clc adc jbe jg call or sub test jmp sarb lret xlat cs or mov adc push sarb mov jne ret inc mov call xchg xor cltd pusha adc dec aas lret mov nop and inc insl mov sub pcmpgtw push sub mov or sarb lahf xor inc ja subb pop ja addr16 and test jecxz inc rcrl ret mov icebp aas sbb in sub test insl mov jnp xchg inc adc es andb cmp add sbb (bad) mov mov icebp lea leave les loope dec fdiv aaa mov jbe inc or les pop mov push push aad adc mov bound fidivl cmp es mov jb dec and notl cs rorb cmc pop push lock jg cmp cmp inc inc inc add cmp mov mov test js (bad) pusha xchg add dec arpl es jg (bad) adc mulsd fdivl xorps dec lea xlat scas adcb xchg out test dec mov addl call or inc push cld mov and mov push mov outsl mov mov roll (bad) mov mov (bad) pop movsbl inc lea (bad) mov stos inc faddl loope iret fnsave decb add lods enter call push sub adc inc sub aad outsb rcrb arpl add mov les dec insb jg xor in movzbl (bad) jle lea push je dec daa cwtl dec push mov outsl add mov loopne mov jne cmp loop inc adc shrl mov pop pop sbb xchg icebp nop faddl jmp fdivp xchg outsl into adc jne and (bad) or ja adc pop dec jae (bad) lock sbb nop dec mov arpl fmuls vcmpsd inc mov sub inc shlb dec jmp jae (bad) dec icebp jle iret dec add testw outsb call or (bad) popa mov ffree call test mov nopl cmp jl or xor mov (bad) out clc dec lea movapd divsd jmp or dec clc enter jge shr and dec or repnz cvtpi2ps test lret fnsave sub or adc add and les aas pusha je in inc test rcl xchg call inc mov and inc shrb xor test addr16 int ret in xor lcall (bad) or test lahf dec add fs sbb (bad) pusha or mov call sbb xchg lret jne jae jo lret add adc lds mov xchg mov popf add sbb sbb pop (bad) sbb xchg xor test jl xchg add jne inc add imul xchg (bad) jmp inc aas and leave pop shlb xor pop and fistpll add cmp je dec dec subl dec mov aaa adc imul loope lret repz jg ret popf add jae or adc or rcl xchg jl arpl push jae cmp test out aad pop rolb sub int jb cs lock inc comiss stos cmp ja cmp (bad) jne mov ds dec call shl test sbb add dec imul js sub lods jmp mov add (bad) movswl fldl or inc movsd enter jmp mov jne arpl mov sti jne add mov mov pusha fadd xchg aad int3 add ficompl mov arpl inc test mov cmp mov xor dec lea lcall dec cmp jb dec mov loopne addl lock push fisttpll inc cmpsb add dec arpl out (bad) call sar and dec mov lea mov jmp lds jbe push jmp fdivrl mov jnp insl loopne inc adc adc adc es loope cmp jnp mov mov xor cmp clc popf jp arpl or (bad) mov in sub leave aas div jmp cmc add add xchg in mov and dec mov lea mov lahf jg xchg jmp fimul add xchg mov decb fdivp fsubr xor out sbb incb test icebp mov dec mov dec lea (bad) aaa fisttpl mov pop (bad) jno test dec cmp ja push movsb mov testl pop dec mov jns test cmpb mov jnp dec (bad) outsl jle jmp dec out loope ds or mov divl mov push mov jnp (bad) dec test aaa push fcomip jne inc int mov dec mull pop jae repz jmp test icebp push add ds jae sahf adc sub xchg insb sbb inc loop sub dec lea mov sbb and dec or push std cmp dec cmovb stc inc cmp mov cmp or push mov xor mov decl idiv ljmp scas dec test je mov fstps mov pop add fisubrl stc mov sub inc push inc mov pop jmp jmp movb mov (bad) incl (bad) fldl pop idivl jne add in mov shr inc mov dec mov jmp std jl push loope jmp push mov add mov jge add cmp dec cmpsb shrl dec idiv mov dec add dec lea dec cmp dec cmovb dec test je or mov call xor xor lds push sbb jmp push push jae dec sub dec lea aas ret out dec add dec mov jno and dec cmp dec cmovae push cld sbb adc push int3 and es lea dec push mov and mov dec lea rorl dec sub dec lea dec cmp add and out into cmp add push test fs push push div pushl (bad) dec add dec mov dec sub dec lea mov idivl dec cmovae sub (bad) clc test insl mov sbb insl cmp adc call call lcall mov subl or adc addl test adcb and cmp and sbb js es lea mov pop aas adc outsb inc (bad) fnop je push cmpsl setno (bad) pop mov sbb arpl lcall pop setge addr16 into push jnp mov mov fldcw push into dec pop enter push cmp addr16 adc mov xchg rol sbb lret dec adc out fiadd push dec mov xor jmp ljmp xor add dec cld lcall mov dec mov dec mov dec mov dec mov (bad) decl dec mov pop xchg cwtl inc fistp sbb cli (bad) out pop xor test pop iret cmp ja cli (bad) mov out xor (bad) dec lea inc lea je dec (bad) ja mov fdivr ja lea dec add add je rcrb rcl jnp jbe,pn aad fdiv or stc jne,pn std jg lea movzbl sub cmp dec inc cwtl test (bad) incl icebp inc test dec mov mov jmp dec mov inc lea sub dec int test ja dec int out push or arpl or or cmpsl sbb dec xchg cmp ret mov fcmovb mov insl adc sbb jmp hlt jmp xor and in xor sbb xor loope (bad) neg incl ret add dec add in or ret inc mov jecxz in cmp jne jo fucomi jne push rcr sub jle (bad) movaps mov mov sub test jnp pop add jnp sarb xlat adc aam add mov cmp inc js inc adc jmp lea jnp lea inc cmp jge stos decl or movl fmuls cmp inc out or mov jmp std cltd ja cltd cltd sbb inc repnz subl xor inc lea push cmp aam xchg out jbe cmp mov lods mov mov ja rcrl mov dec lea and or rcrl js add jmp faddl incl jp ss inc inc lea cmp mov leave js xor or movups cmpsb lock into add cli xor cmpsl mov mov ljmp dec cmp repz add (bad) movsd dec mov mov enter lds call sahf sbb adc dec cltd aaa (bad) lahf cli cmp rorb and dec or (bad) sbb jmp outsb out sbb (bad) jl pop xchg test incl adc cmp sub dec lock xor icebp sbb inc std sbb add sti mov (bad) jg dec shr inc and dec or pop shll push push (bad) mov loop inc hlt outsl xor dec sub dec mov or clc out call add loop mov jmp sbb incl mov pop ror add mov lahf add jns lahf add inc rorb mov sbb xchg shrl mov inc lea in lds mov dec mov mov jg sub dec mov jmp jb pop repnz mov add xor in pusha in pop cmp negb mov nop mov inc xor cmp jg jmp popa jg xor lcall xchg dec inc jae fwait sub sysenter test sbb movsl (bad) or test adc in mov xchg movl and cmpl or shll cltd sti mov mov push or or push fstp enter inc ret jb and xor jmp daa in (bad) jne push pop push out out pop add jmp adc les pusha dec mov adc inc adc test add inc push lods enter jmp cmp ja rorb test dec neg xlat sahf push ret out clc dec mov jns inc mov aas inc cmovge mov jmp push stos ds add jmp (bad) repz sti mov xchg lea dec lea lea daa (bad) fucomp mov or fildl cli stc or dec add jp push lea ret mov andl arpl (bad) aas dec arpl sar and dec mov lea add push push jmp add sahf fwait int3 jle sbb fild pop inc jge mov inc mov cmc inc mov dec and mov rcll push inc mov inc ja mov cs push jmp sbb out xchg je lahf inc mov mov (bad) out js out add jmp incl call sbb dec arpl repnz divps jmp loope lds (bad) outsl mov lea out dec add dec fist dec dec lea dec int ljmp (bad) dec test je call push inc ja dec lea inc movsb lock mov mov sub or dec test je inc in mov or dec push jmp sbb stos ja mov inc mov inc mov aad lcall stc (bad) call fisttpll adc (bad) notl pop or mov call jb sbbb adc xorl divl dec sub mov mov jmp psrlw mov incb rcll (bad) and sbb xlat inc incl data16 dec add dec sub dec sbb dec mov dec inc movsb loope cmp inc neg dec jmp pop inc ljmp add cmp loopne inc icebp push inc dec adc pop xchg add enter andl pusha mov jae and (bad) lret sarl lret out rorl cmp dec adc and pop sub add shll cltd sub pusha xchg fnsave lock dec add push cmp and dec je fwait cmpps lret adc dec dec mov (bad) sti dec xor stc push push xor test push adc add call mov mov or xchg call push (bad) push inc xor cmpsb bnd dec mov jmp (bad) nopl mov jmp (bad) adc and dec cmp (bad) jae cmp dec loope cmp inc sub cmp or sub out inc cmp sub movsl in sbbb adc popa adcl (bad) mov push int3 sub jmp lsl pop cmp jb dec cmp dec sbb mov mov jb and push fistpll clc incl pushl add das nopl nop dec mov dec mov dec mov popf stos fwait add xor stos mov movb mov dec mov movzbl adc fstpl add adc fnstsw inc movsbl cmp jbe push clc cmp ja add mov sub add dec cmpb call rolb jg dec lea dec sbb xorl add add lods popa jae jo out sbb inc cmpsl push (bad) aaa xchg mov or icebp sbb fwait dec mov mov orl popf adc mov lea xchg or and mov sbb std das jecxz xchg gs inc sbb xchg dec mov call jnp mov push jnp dec mov xchg adc insl movb jmp iret mov lea adc inc loopne cmpsb cli movzbl xchg push xchg orb mov dec add add (bad) imull dec mov inc gs mov incl sub mov inc aad decl pop add lret ja pop loop (bad) (bad) jg inc lea mov test jne dec mov dec sub dec mov dec mov dec mov icebp xor outsl adc dec arpl pop test dec mov je inc cmp rorl ja aad mov rcr inc sub mov inc (bad) fild mov dec adc call inc movb inc mov sbbl pushl or jae cli jne movl popa mov jmp nop into jb jmp rcl mov repz sbb add fsubs pushf (bad) add dec jo ret call mov dec add dec mov aas movsb (bad) add inc xchg jge adc jle jmp xlat push jbe,pn (bad) dec dec mov dec xchg push jmp rcll out mov add out and push je and outsl adc mov loopne ja cmp dec mov fdivl sbb xor in adc jne mov pop and out mov or jae mov mov dec push dec sbb mov cltd add stc xchg dec xor sti shlb jmp mov mov in inc mov fistpll je dec mov dec add dec cmpl inc je dec dec lea aas add adc cmp inc icebp fild dec cmovae dec cmpl decl test xor inc xor push mov add leave and or out outsb stos (bad) jmp unpcklps or sbb xor ljmp mov add sub lahf aad add dec mov jmp dec jge add test dec mov add inc dec mov pop stos sub cmp add dec push cltd clc cmpsb loope adc aam test or xor (bad) jl push (bad) add dec mov jnp ja sub dec adc adc add inc cmp sqrtps (bad) sub (bad) jb add es jmp adc lahf hlt es aad pop dec lea cld add add fldcw arpl jl into icebp jge mov stos ljmp mov in xchg add cltd mov fs call call faddl ret inc and dec cmp jecxz dec dec add dec jo add scas inc and call xchg ds mov call jmp mov shr xor ljmp pop and dec and inc mov inc lea sar push ja (bad) mov or sbb je or out inc lea inc add (bad) out dec inc mov inc cmp jbe popa mov jbe sar inc lea inc cmp ja data16 and push int3 pushf jae push dec inc inc or adc inc cwtl sbb es inc lea jne inc out imul inc enter cltd mov pop inc adc sub fwait jmp or sahf xorb jne mov push mov and les sub cli jnp das cli out jbe jg xchg inc sbb mov shr cmp cmpsb xor xchg or dec cmp ja jne sbb xor or dec incl (bad) decl inc and xchg pop add dec mov add cmp jg push fcompl sbb imul cmp adc push sbb cmp jmp dec inc insb or mov dec dec sub jmp xor enter fldl inc adc orl dec and mov sbb sub sub (bad) push outsb fiaddl rcl rcl fidiv or ret sbb scas xchg loope lcall cmp testb es push les roll mov xlat outsl and in sub or sahf or insl or ret cmp dec pop add and mov mov call in add test pop inc or out out lret outsl push xor push sub jmp or xor gs pop arpl mov cltd push stos std mov sub sub xchg sub mov insb inc enter clc add mov push mov dec lea pop rcl aaa in stos xchg lea sti or xchg push adc test xchg imull (bad) fsubs push je je mov push nop inc nop xchg inc sbb dec add test inc jb inc cmp and jmp (bad) (bad) mov cmpsb (bad) stc bound into sbb and sbb jge fsubl jae (bad) mov (bad) incl jae orb ds (bad) out dec mov out add add pop inc ja out add dec jns or add push mov jnp inc mov inc shr dec fwait mov xchg repz or pushl adc ds mov inc mov and dec scas imul orb mov mov daa stos pop stos or mov dec cmp fidivrl (bad) call cmp jmp add mov inc adc and sbb jo test (bad) pushf and pushf mov sbb ja push pusha push jne sub or lds enter xchg jne and dec jno fsubl cmp aaa mov imul fwait add pop outsb sbb ss nop clc inc or or subl (bad) inc sbb lods or sbb sub aam pop out mov push shll inc scas cmpsb out sbb imul push and cli ja loopne cltd adc push outsb inc mov or sbb inc shr inc or inc dec cmpsl inc idivl ss sbb mov loop inc or outsl jecxz or and sbb adc data16 fstpl pop repz inc mov adc (bad) jne or pop loope lea movb ds cmpb mov ljmp sub ret aaa nop pushf nop pop insb stos addr16 xor and loope aad push pop cs lret mov nop leave push inc sbbl xor cmp pop ret dec mov add ret and daa sub push cmp popl pop or mov out sbb iret add aam dec das dec push jnp cltd mov pop dec jmp std or popa adc jle test test xchg inc inc pop nopl leave sbb push push inc call cmpb shr or rcrb shll and nop jno sti cmpsl mov cmp clc dec and sbb jbe in in daa aam fnsave sbb xor popa add add cmp adcl sbb pop lcall out sarl mov xchg add (bad) (bad) nop leave or inc gs inc cmpsb push adc pushf cmp inc add pop bnd sbb mov add leave scas add and jnp dec lret or jnp cmp and scas add xor popa ja out mov sbb push call dec out mov sbb adc (bad) mov in dec inc int3 cmp sbb and rcr rcrb gs int and jmp pushf and add mov add call cmp repz pop fs (bad) ja lea jmp call mov mov jmp mov cltd xchg and pop je sbb jp sti loopne and cli cmp mov test test bound mov adc mov js jmp jmp mov cli nop and add sub ljmp add dec mov movb mov xor bound fwait popf sti mov movq sub (bad) fdivr clc dec mov inc movq icebp pop inc push or flds xchg test adc push mov lea stos decb test inc movzbl cmp je mov test jecxz (bad) mov std sbb fimul (bad) dec not addl je fstl mov aas pop je inc je decl loopne aaa roll cli pop jbe ud1 mov aad cli loope cmp je xor ljmp mov mov push mov sbb mov movsl jne mov test jbe mov roll or test mov dec cvtps2pi cmp dec (bad) (bad) out xor scas mov je movsbl cmp idiv jmp popf aas mov dec sub dec not and lcall in sbb dec cs dec movsbl cmp cmp in sbb incl je sub push popf xor mov aaa push inc jae fwait xchg fisubl (bad) out jo enter lea inc movzbl inc (bad) (bad) test push insl roll mov jmp mov pusha xchg rcrl jnp cmp push je xlat lds clc ss xchg aaa je push subl inc jns push add pop add test mov je aam sti ljmp es lea dec cmp dec mov je shlb test xor push add push (bad) mov cmp dec decl dec mov dec mov (bad) mov push sbb push bound pop jae je (bad) (bad) lcall or mov test lds fmuls outsb jbe push add dec add pop loop shlb sub or jbe sub sub or pop sub cmp dec sub sti pop ja adcl (bad) (bad) popf sbb add inc mov xchg lea inc test jne mov xor adc (bad) sub loope xor fldl2t dec cmp ja dec sarb movl or lock xor add mov dec or dec push out adc dec mov call inc movaps dec add sub inc pop mov add ret pmaxub jb mov stos (bad) jmp movups ror addr16 push int3 pop pop sub and fdivl mov lds jmp pop inc jmp dec adc ja xlat fisubl test je repz (bad) incl bsf inc cmove dec arpl dec lea dec cmp je sbb adc clc aas stos push add (bad) call inc setae inc or je cli push jbe cmp fimull fiaddl push cmovns lret dec cmpsb decl cwtl test je adc outsl jb sbb add btc mov inc adc add add inc sub mov push sbb scas dec xor add add test mov popf imul js inc mov fnstcw dec add cmp out jbe js push add test jbe fstps push add push add push mov sbb pop cmp mov push push je pop rcr into xor add push pop je sbb add add fnstsw push or test movzbl outsb out or or je xor xor dec or or js dec or mov or js dec or fucomp dec mov or add inc or xor jbe fsts dec or inc or mov jae dec lea inc push lds (bad) aas mov adc sarl sub dec add dec add out mov cmp jmp decl jmp adc inc and dec cmp pop inc push rorb test idivl add add je outsl jp jae je add test sbb movq incb adc xor neg roll add movups sbb xor int or adc mov insl pop sbb fdivrl adc or adc dec or movups (bad) mov and adc inc or movups fcomip out pop or adc dec or push or jg or pusha or das jo sub insb les sarb mov pop (bad) incl pop add dec add dec cmp (bad) mov mov dec sub dec lea inc je adc je add add je add sar add mov add dec movzbl or (bad) or stc inc mov fwait (bad) out decb mov cli mov divps inc mov movzbl mov push std into in fidiv decb incl out mov mov sub rcl push sti or jns scas jbe ljmp xor mov push sub inc jle mov je adc jnp lea or icebp adc (bad) ret sbb mov (bad) decl and mov mov add and leave cli fisttp fucompp add lahf dec mov dec sub test jne inc movl dec insb cmp pop mov add jmp pop add xchg ret addb js inc outsl and iret mov flds push adc inc add mov and je add push iret and (bad) jg xchg pop fldenv xlat lret test je inc movzwl cs incl inc bsf cmove dec cwtl dec add xor fsubr adc mov lea and dec mov gs rcrl rcrl pushf rcrl add pushf xor std out inc and jmp (bad) jmp fbld inc lea (bad) incl inc mov cmp jbe neg sbb and add sti mov out push movzbl inc shl cmp inc add inc lea inc cmp jle adc lea sub ss inc cmp les push inc cld (bad) cmp add shl inc lea inc movsbl inc add push cmp cmp lea add xchg inc adc ljmp mov call shl cmpsl inc add inc lea jbe push sti mov imul shr mov dec lea test jne inc adc jbe cmp aaa dec inc cmp jbe inc sbb repz aas shr inc or inc cmp mov bound jecxz pop mov mov dec mov jmp add xorl adc adc jmp jmp push js test mov lea clc xchg or in cmc (bad) ljmp out sahf loope and shlb jmp xor loop aaa mov jmp jmp stos mov mov mov fbstp xor adc jnp pop jne mov jne test loopne sbb in add test add lea rclb adc aas add js mov inc lea ret inc add cmp aaa fcomps jae xor insl xor sahf mov xchg mov or push mov or mov jl sbb std inc inc lea fsubl or icebp jne or cmp lea xchg mov lret or push inc sub cs cmp add ja shl inc or inc lea loope inc mov inc shr and clc shr push mov or or cmp cmp ja push jno jecxz inc mov shr adc loope jb or mov pop add sub adc mov test cmpsl jo and popa out sub and call sub jmp out repz jmp outsb or aaa add or add dec call cmp sti fiadd dec lds mov xchg icebp (bad) (bad) stc add sbb or sbb xor popa push cmp fdivl dec mov jmp mov add stos add jmp fidivrl sub xor insl mov lds pop ja dec mov ret xorl xor fs mov push push or leave and ret jge xlat inc loopne push mov jmp jae popf jnp or sub or jmp subl sub addr16 mov dec push push add iret imul pop callw (bad) stos and jp jb das jne aas aaa push cmp dec (bad) adc mov ja jne jmp ret sbb dec stc mov or test inc mov inc test (bad) jbe out je aam inc mov dec mov add adc dec mov dec mov dec es (bad) decl adc pusha fmuls cmp (bad) sbb lar push add jne jmp sub das mov bt jae cwtl jno dec mov push inc mov mov add fnstenv sub (bad) lahf je mov adc ljmp sub dec add inc mov adc stos ret adc dec mov pop loop xor into jmp mov xchg test je mov inc cmp dec mov jne dec cmp ja lods and jno jmp and fdivrl adc lret mov add push sbb test (bad) jae and jmp out aaa dec cmp mov push fnstsw loopne repnz or jmp ret xlat adc mov imul lods sub push stc sub or mov mov das jne dec icebp (bad) adcb test adc pop fsubrp out or pop jbe cmp popa sub and xchg jo adc loop or loopne xchg nop pop add jmp mov pusha mov inc adc call lea sub in push add in sbb push adc add adc inc xor out add add data16 add adc test ljmp movzbl jmp pop xor dec sbb fbld repz mov add fs lret pop sub push push lds and push xor mov jb cmpb sub cmp je mov sub ret dec orl add inc and jg push aad dec mov push test rolb and sub roll and dec (bad) out cmp movsb inc jecxz mov ss adc ljmp and call dec dec lea dec mov dec and adc lock sbb ja dec add dec cmp pop pop jne adc ret nop dec cmp cmp inc jle icebp ja adc add stc dec add jne daa (bad) and sbb loopne (bad) call shlb inc pop mov mov dec clc add fist dec mov inc jmp add call aaa subl mov jl push mov dec or je out dec inc inc adc dec test dec mov fistl pop jb cmp lock or in xchg xor sar dec or mov xchg mov jmp out dec test jne call fildll jmp (bad) je fiadd sti xor sub xchg and movsb mov dec mov dec mov jmp dec mov jmp daa push sbb push add stc jmp cmc add insb dec cmp (bad) (bad) lcall enter mov inc mul dec lea shr imul inc lea mov outsb cli lret mov add xchg ja aaa and xchg jno or cs add ja bound mov and pop add ljmp mov xacquire add dec idiv (bad) std into popa test ja stos dec mov mov dec mul dec xchg inc ljmp cmc add out mul mov dec sub inc mov std lcall inc mov inc mul shr inc imul shr inc lea inc sub inc mov loope clc mov sub or loop jg out jbe mul and les jmp imul or push mov xor testl mov inc add cmp jmp fisttpl sbb cmp jg movsb jle add sbb and push inc add flds dec (bad) lcall cmp rorb movzbl inc mov inc add dec lea inc pmaxsw pushl adc addr16 add adc xor or ljmp dec add mov cmp add mov sub out cmc mov mov iret sub inc mov jmp outsl inc dec mov das movsl cmp add shrl fist aaa dec xor scas ficoml cli pushf or inc mov fstpl les add add adc out gs inc add inc mov sbbb mov enter cmp mov jecxz mov loope mov imul lds dec sub pop loope xor in jmp jecxz sbb xchg mov gs inc jecxz sub sbb xchg pop add push lods inc sub jle fwait or in or sub ficom in mov mov xor mov add sarb sub inc add push jnp sbbl aam inc lea xor (bad) lock out mov lea adc outsl jo ret imul imul add mov mov lea push add and inc mov mov mov sbb sub push or ja jg add inc lea pop push unpcklps inc mov inc add xor push pop aaa lock or jmp std or inc mov or inc or dec lea inc mov pop or push or sbb inc mov or cli or xchg or inc mov push sbb test loopne (bad) pop inc int3 mov shr mov imul shl out call inc mul mov or or or in inc imul or (bad) mov fistl xchg cwtl add dec lea jg inc mov mov push aam sbb out lea nopl mov in dec lea add mov jmp mov push sbb cmp jecxz inc sbb add andl sbb xor mov or xchg inc andps js add inc lea xor inc icebp add mov mov inc add mov push inc out lcall push inc mov mov movzbl push inc mov inc mov (bad) aaa nop add dec mov repz or add mov lcall sub push add and mov xchg ja or out dec pop loop cs hlt cmpsb imul or cwtl gs jmp rorl add pop ja (bad) ds inc mov mov mov mov daa lds clc aaa out adc inc mov inc lea aaa add ret std push add inc imul aaa cld jo xor rorb cmp outsl sub inc xor imul inc mov or pop or xor notb or adc inc mov jmp sarb (bad) mov push mul dec sub cmc aaa lock fs data16 aam add and int3 inc sbbl ja add mov lock mov and inc mov jmp rcr sahf add dec mov pop je jmp pushf sub mov test loopne xor add xchg adc or fucomip mov dec jle jbe adc jmp mov add jmp (bad) push fldenv sub out dec adc xchg push out xchg fistp mov or sahf scas xor push pop push add adc dec outsl call (bad) cwtl mov lds call add incl test jne cmp jbe mov rorb add inc arpl (bad) repnz inc into or mov dec jmp push pop pushl dec mov call dec mov dec movl xor dec add add pop fild mov mov inc and fmull add pop pop add enter pop push cmpsb sub pop inc mov dec mov call or rolb call cmp and adc sbb sub adc scas decl icebp dec cmp mov inc mov dec out idivl mov dec mov dec mov call or out mov mov add shrb out fmuls sbb cs je xor mov sub decl dec cmp sete lea ret outsl sub jl dec mov daa iret call shr je cmp das sbb push jge dec adc dec mov daa dec mov shlb xor jae push lds pushf and sub fmul dec mov push aaa inc pop iret inc mov test push nop cmp mov scas add push inc mov js dec push loope incb jmp rorb mov inc adc lcall dec push adc pop dec mov dec sarb mov mov add data16 iret mov nop sbb decl std (bad) jne movl js xchg cmpsb dec cmp xchg mov dec push push outsl mov dec ret das (bad) sar xlat dec cmp je dec mov cli mov into push test mov xor and mov call cmp shrb je popa add push (bad) inc hlt cmp inc adc mov fs dec add adc or in cltd lret pop sub mov adc push shlb add adc inc loopne sbb fistp dec outsb loop add push mov roll push add (bad) jg adc movzwl dec arpl dec add jmp stos mov clc adc push (bad) decl hlt mov mov mov adc dec mov je xchg js hlt jg movb dec mov dec push lea dec mov out test inc sbb add mov (bad) incl add outsb or es and inc test je dec mov dec mov pop inc rorl inc push (bad) mov mov lds dec and dec shl pop xor (bad) decl jne dec mov dec mov dec lea dec cmpl outsl jmp sbb and inc inc add call or pushl sbb add dec mov dec sub inc mov dec mov inc cld ja icebp movsbl test dec sbb scas ret dec pop jg add cmp ja in (bad) scas xchg (bad) ljmp mov inc mov (bad) cmp cmpsb mov pop jmp decl in je inc movsbl mov jle mov inc sub push mov xor call mov inc lea dec mov pop and or dec cmp jb add call insb nop fwait ds ret aas add dec lea dec lea jb pop loope cmpb movq movb mov sbb js jg mov dec mov sti sbb fimul clc cmovns fucomip dec cmp jbe (bad) mov dec and dec cmp jb je ret mov lds sti and fdivr inc sete inc or jne je add cld push ret dec mov sbb cmp test dec out cmp scas dec inc sbb or incb ja rcr je add dec lea fstl sub push xchg jae jle pop jne add stos repz lea loopne fistpll icebp mov repnz je int3 cmp xor adc out sbb pop negl mov inc sbb sbb cmp insl or (bad) lea pop add jae jp or inc dec pop add push sub push jb cwtl decl (bad) dec dec pop dec mov inc and push add cmp adc rorb (bad) mov lea movb mov mov jb out cmpsb push ljmp dec mov popf jmp adc and dec mov cmp xlat or je push add icebp add xchg mov dec sub add jmp dec cmp jb fisttp mov dec mov decb jo mov movb xchg dec mov fwait out fucomp push add movb aaa dec mov outsb outsb sbb fsubl movb (bad) mov (bad) shll dec add gs pop ret stos or call xor mov mov pop (bad) or aad (bad) cli mov fs jb jmp insb scas mov add mov fwait arpl pop pop push sub sbb adc inc (bad) cmc sbb push mov inc or das adc add aam xchg inc movb pop incl cmp push dec and test or jle pop (bad) jg inc xorps inc movsbl mov push dec cmc dec mov dec cmp dec mov jle out loopne decb inc and test sub jl clc add lock orl lea dec cmp ja sti pusha adc push sbb pop sub aas je sti mov into dec cmp ja pop sub fs test sub inc and shrb rcrb sub js jp dec sbb mov jmp test jne pop adc leave xor out sub adc xlat push fbstp (bad) inc seta inc fdivl jne mov test inc jmp or lahf arpl add aas adc pop or inc movb inc lea outsl clc incl mov or dec cmp jb call mov add dec lea sbb add sub xor rolb insl add and icebp std or and outsb add add bound fisttpll cmpl cmp jbe int pop xchg loope (bad) in test idivl adc cli and xchg les mov inc or jne daa adc pop dec mov dec sub dec lret gs mov imul adc inc sbb mov mov fisttp mov sbb or clc (bad) inc repz add lea add inc int mov xchg push mov mov inc or jne dec dec xchg aaa in add jns sbb add mov cmp inc or pushf push xorl (bad) aas fidivr dec dec cmp dec mov dec mov inc mov imul mov mov test dec dec inc xchg mov jo lcall loopne iret les and orl xor (bad) (bad) add jne adc je je cs aaa leave aaa add sbb shlb mov dec sub inc mov pusha cmp in dec jb sub mov cld aas cmp inc seta inc test jne cld es jne (bad) scas add out andl mov std mov dec push (bad) and sar ljmp dec and dec shl dec add dec cmp jne pop ljmp lea dec mov je add dec mov dec and mov je dec insl add outsb sbb es dec pop or inc xchg test dec imul loope push insl push add (bad) sub in aaa push or sbb mov (bad) jno xlat shll mov dec pop stc ja add dec ja add je loope mov pop movb mov inc jne dec fmuls push pop sbb test cld add sar inc and dec arpl dec mov xor push mov dec cmp xor cmp (bad) ss push add sbb jp cltd adc pop sbb loopne xor inc mov xchg sti daa jmp scas call mov stc cmp je adc rcl pop flds lock psllw pop hlt add jmp por pmovmskb nop sbb inc adc jg jmp dec shr dec mov movl and sub idivl adc mulps scas pop jmp inc cmp pop je gs cmpsb mov andb add xor cmp add pop icebp mov mov bound icebp push fldl pop ficompl xor dec lahf cmp (bad) dec mov inc xchg add aas outsl and xchg sub cltd or add mov dec mov jp loop dec cmpsb pusha ret loope je call add add pop jne pop pop in pusha dec pop les xlat xlat sti sbb push push leave out (bad) mov out xor inc xor add fdivr inc inc imul and movups jbe cmp sbb test xor sbb (bad) (bad) jmp xor inc and jmp nop movzwl bsf inc cmove mov call lea dec test pfrcpit1 outsl sbb enter les inc or jg sbb call jbe mov lea dec neg inc and dec lea lcall sbb test je aad jl dec cmp arpl (bad) jae fistp mov je test cltd jg inc mov je adc into lds jae cmpsb adc add inc mov je add arpl adc pop pop mov je jns adc pop pop pslld mov movzbl adc inc mov je scas cmp or test add push or test pop jne ja or or or test dec pop or idivl adc addb les test sub fbstp nopl dec mov dec lea mov cmpsl add inc fild addl xor in add ljmp dec lea in aaa and dec cmp inc movups jae fisttpll in movlps icebp add dec ficoml int fstp je lsl add dec add mov fnsave push adc or inc aaa inc in push xlat dec push adc inc setle sbb outsl sbb inc movups ret add nop addr16 xor adc xchg and std add jbe push or cld fdivr fldl pop pop and inc pop xor fdivr faddl je inc je inc push pop push cld fdivr fcoml pop pop pusha pop adc pop jo hlt fstp inc adc sub jb lea jl jg fdivr fs roll int3 dec cmp ffreep and dec mov mov and jl decl not dec add jo cmp inc mov jbe (bad) jo dec mov je add je add xor out mov push je xchg adc inc mov push add fbstp and dec add or (bad) (bad) je or mov cmp sub and sbb sbb inc xor jae gs xchg jbe sub insb cmp mov mov pop cmp inc mov push cmp inc mov dec fwait add cmp cmp dec out sahf out cmpsb cmp dec cmp pop cmp xchg shrl pop ja jg mov rorl (bad) or lahf clc xchg (bad) jmp add shrb add test or lcall mov xchg stos rorl jg loop push xchg or inc xor (bad) call jne test jne les fcmovbe test mov mov xor test stos out mov daa dec mov push and dec lea lcall rorb xchg (bad) dec mov dec mov dec mov call call lds add dec sub jmp adc pop xchg or dec dec out mov jo (bad) out jmp jecxz lcall xor mov xor add sub je sbb je (bad) sub mov ljmp jmp into dec sub dec shr dec mov inc adc sbb in mov call outsl (bad) ljmp add or fiadd xchg insb sti sbb dec cmp je add mov inc sbb mov outsl push icebp fsubrs dec dec mov adc xor lcall jno dec cmp dec mov icebp mov das pushf loope test test scas ss out outsb outsl lret or dec mov cmp sbb and xor pop mov cs push push pop push scas stos adc sbb sbb add adc dec mov cmp push dec cwtl jbe pop push push or push inc adc add push inc mov pop inc rcr fisubl fimul test xchg or movzwl loop into xchg (bad) lea test adc imul dec cmp mov inc or je rorl dec mov out repz (bad) fiaddl loop push adc cwtl movzbl dec cmp xor test add bound dec mov sbb loopne call pop (bad) cmp stc mov add cmp adc cli add in push cltd rorb cli pop js xor adc (bad) cli cmp dec je pop lea dec xor xor (bad) cli push aaa loope mov or cwtl add dec xlat test push mov adc xor cmp mov pop mov out and dec mov test ss lcall adc fsubl mov push dec mov fimull cwtl add rol scas mov xor lock add dec add inc mov mov push fwait cmpsb insb and insl xchg cmovne je xor movlps fldenv stc and addl inc inc jae out or je add loop mov je or je sub mov xchg mov lock pop ret jns dec sub xor inc sahf or add push xchg nop add (bad) jae jle push jle or adc push inc pop enter xchg inc sbb sbb out out pop je dec pop dec sbb out out pop inc sbb sbb pop je jmp dec je mov cmp lock loop dec add dec cmp je (bad) ffreep aaa negb dec lea (bad) dec add and dec cmp inc mov or lock xchg lcall dec jmp (bad) inc fstp inc incb xor add je shr call mov push add pop adc inc sub ret or cwtl mov and adc or or sbb xor fldcw xchg jbe cmp adc inc mov (bad) out lcall adc inc mov je add je add pop adc out sbb inc mov sub push sub ss adc sub ret ja bound icebp jb inc mov clc cmpl jmp add mov pop inc cmp daa add inc mov outsl ljmp mov movsb dec arpl dec jmp push lock dec js xor aaa inc movzbl decb or sbb adc jo mov lret dec popl cmp icebp sti aaa fisttpll sbb das jmp and xchg and inc inc mov lahf loopne mov scas (bad) sbb push cld dec mov sbb dec and (bad) ja mov call ficom dec mov jmp add jg push xor data16 imul inc and push inc test jne,pn in pop inc mov inc inc movsbl ret or adc xchg lods loop pop addb wrmsr lds mov mov dec rcrb push or scas jg (bad) or push pop pop jg jp js (bad) lock mov dec cmp ja pop mov call jl (bad) aas dec mov dec mov adc fadd xchg push popa jnp jg mov push and inc movb dec notl cmp xor cld pop dec sub shl adc outsb sbb ret jmp adc movsb repz clc sub leave je mov add jmp sub and decl cmp lds call pusha test ljmp mov xchg dec add dec mov dec add add mov pop pop jmp mov mov or enter pop paddsb add pop mov ret adc pop rol stos dec jle xchg loope js cmp jmp (bad) adc out out call (bad) out nop push loopne jg mov dec mov dec and sbb inc fwait dec jbe lock sbb rcrl je push add dec test jne jg stos dec mov jns dec lea movb inc mov clc sbb inc add inc mov push add aas dec sub push sbb jg dec sub jmp imul xlat jmp cld jl (bad) icebp ja mov nop ss mov dec mov dec push loopne mov dec or adc fist dec sbb dec jmp inc add clc neg inc cmp (bad) call dec lea mul shr inc imul mov std xchg inc mov inc sub sub add or adc xchg push orl xor mov mov (bad) dec lea or pushl and mov push pop out mov dec lea inc mov inc lea sub inc mov cmc loop jg dec mov dec sub dec add dec sub jmp dec orb out lock jmp and and (bad) (bad) pushl adc jg mov repnz inc mov dec add sub inc mov (bad) je sub sbb or mov mov cmp sbb or mov test data16 out dec sub push jg add jae and adc mov iret out jae and and bsf push ss and (bad) fbstp loop mov fsubr push jmp mov mov inc mov call inc lods js div inc subl (bad) jl xchg aas or fmul lock mov mul dec lea inc mov lahf xchg incl jmp fs lea inc sub inc add decb xchg mov lea into add inc mov ret jg clc inc lea dec mov and inc mov inc mov dec mov movzbl dec lea push inc lea sub imul dec dec sub or scas call (bad) call jb scas ja push inc mov call mov mov lea loop ret inc mov shr pop icebp (bad) incl aad cli adc add mul inc mov inc sub shr add inc mov mov js outsl in sub scas inc add mov adc roll fldt cmpsb sbb jbe dec and sbb mov daa inc mov inc lea inc ret sbb mov arpl and cmp mov cmovne (bad) decl fiadd pop xlat adc inc mov ds (bad) dec (bad) mov inc mov movzbl cmp sbb cmp inc mov jmp aas mov inc mov lahf add pop or das enter nop ljmp sti aas dec mov push mov add xor and mov pop adc test lret je (bad) dec add or mov dec add dec lea mov roll decl pop add mov fnop jmp shll add add sub dec test je dec (bad) fbld (bad) ficoml add jecxz inc lea dec cmp scas fcomip out dec mov inc decl test sarb cli inc sub inc sub rorb jecxz sarb jg cvtpi2ps mulsd addsd sub sub (bad) mov pop ret seta dec bsr add dec xor sar add lea fist mov lea push pusha fimul mov mov dec mov dec mov dec shl inc add dec hlt jmp sti mov rorl ret dec mov psrlw rorl mul pop and decl decl (bad) mov (bad) jg jne mov push shl dec sub dec shr dec lea paddusw and and xchg cmp lds cmp add jmp cmp cmpsl mov push inc adc and jbe cmp faddl push jbe cmp inc jbe cmp fs mov xor cmp roll loop add dec lea xor inc sub (bad) (bad) stc or inc mov dec arpl dec add inc jmp cmp and pop jl (bad) out push js add add dec arpl add adc inc sub aas lock cmpsl ret icebp or leave jne mov cmp pop xchg dec arpl sub es and sub fistpll dec lea dec lea dec add dec add ja (bad) add dec shr test jne test jne sar les fucomi int imul imul shr inc imul inc inc sub mov jle add jmp add cmp int3 out dec mov mov jl jns xorl add mov jecxz or cmp and rorl adc aad dec xor and roll mov cmp sbb lahf addl xchg inc add and cmp push mov sbb ljmp sub pop pop pop lea jns stos jp jmp dec sbb pop stos mov inc push in dec lcall cld add dec mov dec dec jae dec cmp dec cmovb cld or mov pop mov je sbb inc sbb lock nop cmp lea jmp aaa adc sub ljmp call push out js add mov dec cmp repz push out xor ljmp dec mov dec add dec add dec mov or cmp pusha ja jmp or or xchg pop add cmpsl pop lods mov and fimul sbb xchg and loop cmp lea xchg fcoms out (bad) mov dec push imul push push push pop (bad) dec add dec mov mov mov inc mov pop dec mov testl dec mov dec sub dec lea jmp pop cld xchg dec mov dec sub ret dec cmp (bad) stc inc icebp and push out mov les dec mov mov add pop adc jnp push test mov call add dec mov dec cmp dec cmovb mov xchg xor shrb inc (bad) dec mov mov aas fidivr sbb fisttpl test and lcall dec and dec lea dec add dec mov lcall scas adc (bad) dec cmovb out jge cmpsl popa pop cmp adc mov push les jmp mov push jbe imul push out dec aas int push xor fcoml mov pop loope insb sbb push cli jmp gs stos pop add clc push jb push mov addl mov das pop out mov add xlat and dec pushf clc out ja lock mov and in sub repz mov inc imul call outsl mov mul inc cmpsb imul mul sub mov popf lret inc sub pusha cli adcl icebp (bad) ss dec lea fild mov inc lea dec lea cmp inc mov decb push fwait or inc mov lea mov pushf inc mov inc movzbl inc jge mov mov inc movzbl mov xor pop add cmp inc mov (bad) incl sbb lea inc mov jmp inc xor jmp pop lret ja jmp out aaa sar (bad) xor inc and aam cmp je add add je add adc call or je jp dec in adc gs and adc fs sbb or dec cwtl outsb jbe pusha jne and cmpsb mov imul add mov jnp cmp inc mov sti add pop push push movzbl sub jne jmp clc jne out or dec shr dec adc dec lds clc inc mov dec sub (bad) ja xor roll je sbb mov decl mov js lret andb pop shrb inc aaa scas dec inc mov dec add cwtl or lock dec lea or out jle push add loope inc jecxz and lea dec ret call rorb adc and dec sar adc adc dec cmovb fadd hlt cmp mov shr mov es test push dec sub adc cs icebp out out mov jmp jmp int clc jl inc mul or dec arpl mov mov dec imul dec cmp jae dec mov dec pop cmp jb (bad) (bad) decl dec sub dec lea dec sub dec lea dec cmp ja dec mov dec sub mov cmp jbe dec arpl inc subb test (bad) (bad) (bad) in inc lea js inc cmp jg inc cmp jle lea dec arpl cmp add dec lea call ffree add movb dec lea outsl clc push add lret icebp pop mov inc subb dec push jge decl dec mov jmp inc lea (bad) adc xchg or sahf inc lea inc cmp jbe ret std scas sub inc cmp jl lea inc mov mov cmc je push lcall dec arpl call lret inc test movb push add (bad) (bad) mov add mov dec add inc sub cmp jg sti cs pop or cmpsl jno inc mov jmp call push std pop sbb idivb mov xchg and jb pop dec mov jmp stos jle outsl push stc inc shr inc imul neg rcrb and jbe pop sub jl adc push je lea and dec mov fst aaa (bad) or inc mov rolb push pop jl mov aad lcall inc mov mov mul shr out std scas push ljmp out inc mul mov mov jge sbb mov xchg pop inc mov inc jmp cmc (bad) out out call inc mov lea lea inc mov add dec lea pop sub or fs inc sub inc mov lea call inc mov lods inc mov push (bad) ja sbbl mov sbb fist mov ss mov jmp (bad) mov and add mov out cmp cmp lds xchg pop dec mov ret bnd lock dec sub dec lea outsl dec lea jle cmpsb loop pop dec sub mov idivl mov rolb sub dec ds cmp ja mov dec push movsb loopne mov xchg call sbb mov or mov mov jg push fsubrs add stos xchg jl mov movsb sti out outsl (bad) jmp call jmp into jbe rclb in cmp pop pop or xlat mov cmp cmpsb add testl call inc int3 jbe call test or sbb imul mov jmp mov or mov shr imul mov in jbe inc fist into adc add lods add dec mov add icebp outsl (bad) add movzbl inc mov lock aam adc or mov testl shr fcmovnu push clc decl xor inc sub mul mov inc mov mov popl or (bad) out js inc lea adc mov mov xor xlat inc lea push loopne incl fs mov add xor or mov lea testb std dec cmp inc mov or inc mov push out (bad) out sub insb and add inc mov sub pop jmp add add mov inc cmp ja or xor rclb mov jmp xor pop jmp decb ljmp jmp jg add test jle mov jmp rcr adc dec mov jmp push sarl add dec mov jmp mov cld jecxz and inc iret dec lods aam mov jle lcall and dec cmp dec cmovae dec or pop (bad) lea push push jno,pn popa test mov sbbl dec test jmp addr16 cmp pop imul jmp push ja ret add cltd (bad) outsb aas and push xor sahf repz insb out cmpb sub cmpsb xor ja orb lea faddl xchg inc aaa pop mov roll sbb mov lahf or nop test outsl movsb scas xchg in adc push or insb mov je add test test jmp lret mov lock adc pop and movsl lock mov ljmp mov inc or lea data16 shr dec cmp aad iret je add mov scas in cltd mov enter mov inc into cwtl mov mov and dec outsl mov out insb pop dec js lahf pop inc ds cs pop pop add aaa jbe mov sbb or xor jmp pop xchg pop jecxz outsb (bad) mov shr dec add xor lea dec mov xlat or dec cmp dec cmovae aam fdivp sub stos lods adc sub dec jne icebp sbb dec or ret into mov dec jecxz pop ja imulb bound jecxz popa add mov outsb or add xchg or imul add or mov jne or sbb sti dec incl hlt dec sub dec lea dec cmp xchg outsb imull mov (bad) je mov mov fwait mov xor inc jge xchg jo das into jo sbb loop jmp int cs stc aam push xchg or jmp pop nopl add clc outsb ror gs dec add loop xchg popa xor pop push dec sub dec popl fs or dec icebp cmp adc hlt je shrb lods push pusha cmp pop leave loopne (bad) sbb pusha or mov clc jmp loopne adc add pop push or inc add fcompl movsl add add jmp jae into pop aaa or jmp dec cmp cmpsb lods pop call sti xchg jge add push push push sub aad dec arpl inc mov cs jmp pop dec sub sti ljmp bnd add inc movb js fstpt or pop mov dec (bad) jne popa mov pushf dec sbb or cmp or dec pop mov dec mov je call fadds mov adc lea jmp flds cld inc mov mov inc and fsubr sub and push jmp jo stos add sbb lret mov cmp cmp ja orl inc dec mov dec lea dec mov dec aad or cmp xchg cltd or push push mov pop lea dec hlt sbb or mov add mov cs jle sub dec lea dec add dec sub dec mov scas add cmove mov dec cmp pop ljmp dec mov dec mov call and push mov push or jmp xor xchg stc arpl mov mov mov popa add xchg rcrl adc into hlt repz call pop pop jo jb (bad) adc jle add xor cmc inc jecxz mov mov or jmp inc push aas mov orl inc and mov push sbb mov adc push mov arpl aam sub dec arpl cltd mov lahf addl pop add nop cmp mov je call inc test inc mov je add inc (bad) jmp mov loopne inc cmp jae (bad) je sbb je fwait fwait mov dec add je add fwait sbb je movb mov mov out inc add movb inc mov or add or jne or xor adc iret or or mov inc cmp or inc lea mov inc lea dec inc lea (bad) dec add add sub inc lea lea and add adc scas jnp xor aaa or or add xor or out fnstsw call ja lret xchg and cmp xor jo jne sub or cltd pop decb arpl lcall push xchg stos rclb incl dec cmp je add je mov je dec sub cmpb push cmp call dec out lcall jo movsb cmp lock and fstps dec mov adc pop dec mov dec cmp mov test incl sti ja mov dec mov inc (bad) shl outsb call cmp xor jne sahf std jg xor inc decb dec std jne je out into decb cld jne fmuls push jne loop sti and dec lea jne fwait cli loopne lea jne ljmp sbb gs roll mov fucomp loopne mov push add pop xchg mov xor push loopne mov cmp aaa inc sub cmp outsl mov inc (bad) sbb pop mov or cmpsb add lcall addr16 addr16 and (bad) cmpsb push int pop ja xor mov push fnstenv cmpsl or xor call ret adc or dec jns adc insb call sub cmp push dec mov rorl dec mov (bad) arpl push in and add jl pop xor cmp inc faddl ljmp push jg arpl cmpb test (bad) out adc sub inc sub dec mov dec sub inc and or pop mov and lea xor outsb stos gs cmp ror fs cli cli cli lds data16 ljmp insl dec mov dec mov or fsts dec lea enter arpl jmp pusha sub cld dec lea ljmp dec xchg and dec cmp je xchg or pop enter dec lea aaa data16 flds jno mov jno jne push enter lea ficomp and dec lea xor (bad) cmp adc mov dec lea and out lods jecxz sti and dec lea adc cli and icebp jmp imul jo enter dec mov and mov outsb add iret fnstcw mov sbb and je dec adc mov or icebp call sbb (bad) dec or addr16 pop les or cltd addl cmp mov fcoml add adc addl adc sbb jge cmp dec sbb orl adc mov andb mov cmp sub jmp into dec jle adc adc pushl dec mov jmp sub jg add hlt (bad) lcall lock lea movzbl mov inc movzbl inc mov jmp ja mov inc mov push (bad) (bad) fbstp cltd add clc add mov lea dec cwtl dec add movzbl addr16 out aaa jo add ja add adc in int3 fldl or jns sbb int3 sbb adcl sahf add add outsl sub ss jecxz inc sub aaa add dec cmp cwtl cmp adc push sub jmp data16 cmp ret add add inc es dec ret push call clc pop das mov inc std aaa icebp jg jns inc sub mov sub lahf add int3 adc dec cmpsl lea loope push add pop (bad) incl add je jmp xor mov and mov inc sub jge adc rcrl scas and add push add mov pusha push add cld inc dec lea jmp repnz jl das or sbb mov js outsl mov out cmp mov ret popa inc jno pop and sub and xorl inc (bad) sbb cltd and xor fabs repnz push xor mov dec clc add add push mov and mov rolb aas or int3 cltd sbb push dec int3 fs mov mov test enter inc inc add outsl sbb rorl cmp lret mov adc dec inc mov lret xor push movsl aas jbe mov sbb mov and mov aam dec dec mov or loope jnp insl xcrypt-cbc cmpsl aam sbb out enter dec mov (bad) incl add mov popa out popa cs and xchg mov pop sub inc and out cmp pop sub aad dec pop inc andb daa stos (bad) or or inc stc add cmp sarb test jmp outsl dec cmp je dec mov dec lock mov dec test je dec mov jmp loopne pushf dec mov dec popf dec add test rolb inc push xor cmpsb mov sub sub xor cld lock dec mov dec stc dec lea dec cmp ja dec test incb (bad) adc add inc or orb adc dec mov xlat (bad) insb mov xor (bad) cmp aad incl cmp ds and test cmc popl loope iret cmp or imul inc clc out decl dec add dec and ret aam dec subl mov sarl add ja mov mov jo std pop push push sbb and fcompl dec mov sub inc mov dec std add ret mov and and inc inc cmp or fsubrl divb mov test sbb cmp ja dec pop divl add sub cs inc mov add dec mov inc lea lea dec lea dec pop ja popf mov dec inc mov ja add outsl sub decl dec lea movb movdqa sti pop aad fisubl adc fsubrl and into adc xor or xor adc cmp add xchg sti mov cmp je mov push inc xor dec das inc add clts into faddl in xor adcl jo or enter dec cltd or and or data16 mov cmp inc lods (bad) xor in add clc mov iret dec mov (bad) incl dec mov dec mov je inc lock test je (bad) dec mov (bad) xor inc lock rorl xchg xor inc sbb loop fisttpll sub dec xorl mov dec lea dec inc and aaa adc dec and dec sbb dec mov idiv aaa dec mov dec lea dec mov add jg je imul pop dec dec add aas dec mov mov adc movb push lods addb jge mov arpl je push outsl mov dec lea inc dec cmp (bad) scas stos jecxz and into lea sahf add mov (bad) mov movsl aam xchg push adc dec cmp jb jo (bad) mov rolb push inc dec push add shlb mov and ljmp mov dec and dec mov dec mov dec lea jo xor jbe inc add dec mov add jmp inc add sbb push iret pop jae dec mov je shl outsb in je lahf inc ud2 leave or pop jo ret cmpsb imul outsb lock jae lds testl fcoml incl add pop dec mov insb or push add jb dec popf inc or jle test and aas je arpl or in je dec mov lcall fdivs push and je rcr in incl pop dec pop pop add out pop std rol dec add fmull loopne call shrb xchg ja dec mov xlat push sub pop movb pop push out out dec dec cmp ja sbb add ficom mov dec and jnp mov inc and cmpsb lcall mov loop cld das clc dec mov inc sub mov dec cmp dec dec add ds or mulps jge add je sub pop jbe cld lods sbb pushf aaa dec sub (bad) mov into dec mov lea lea cmpsb (bad) mov cmp jb clc dec lea mov hlt push or dec jge xchg dec add sub inc mov and sbb icebp cmovge lock pushf or aas repnz fmuls xchg call xchg (bad) mov or mov mov inc cmp xor rorb jne xlat sbbb or inc sarb dec xchg int3 adc jle setle ds dec shrb dec push or cs adc dec mov ja inc dec add int jo sbb mov jne scas jae mov or clc or enter fisubrl and test push inc movzbl rorb addr16 jg inc ds mov mov test xor cmp xor cld dec lea mov jns or add push cmp push cmp and or stos popl sarl test dec mov aaa fst sbb jne inc jne or jne jmp shll sub ss lret dec and test loope hlt inc xor aas pusha push int3 es movsl dec mov sti jg jae dec cmp ja cmp mov call dec sub enter cmc dec lea dec ret ficoml mov repz adc mull inc mov adc aaa inc add mov xor cld inc jmp dec mov inc xor lea or add insl jge push ret repz or fs adc out dec and sbb dec shl sarb les test lock dec addr16 xchg adc xchg scas dec clc mov cwtl mov xchg jb call lcall push inc sar loopne cmpsb rorb in bound push popa add fsub sbb rcrb movb or lock movzbl pop sbb or adc loopne sub push inc fcoml dec fucomp pop jmp cli pusha add mov je in inc jp add iret (bad) lock add test inc ror push out dec jle mov push out test add inc jle add add inc jle cltd mov cmp adc adc testl sti jle inc mov mov fimull jno dec mov movups je mov xor jecxz mov mov jge gs adc push adc and or cmpsl xchg pop jg adcb dec xor adcb inc xor (bad) (bad) xor add jne push inc cmove mov mov clc dec rolb xchg ret aaa cmc cmp fimull test and add jbe loopne push lock dec cmp out (bad) jg jl and add mov dec cmp inc mov je push adc inc mov add ss inc sti es add cmp (bad) out dec out mov add add je jae mov add ss push adc call je pop outsb xchg xor or pop je or scas sbb or test or or je add ss adc cmc scas jnp or test mov or test pop aad out dec or dec repnz push pop push roll cwtl push mov lea ljmp orl (bad) (bad) mov add sub out add pop and cld icebp mov jne inc push pop mov or je or repnz call or jns inc movlps add ret test test and adc adc mov ss icebp xor dec add sbb xor push push xchg rclb icebp xchg loopne push push icebp or addl roll pusha xchg icebp pop sbb out sbb add mov icebp sbb sbb push rolb mov sbb not or inc mov psllw mov dec or inc mov mov xor xor adc mov or jae into sub xor mov icebp adc xor aad adc or inc mov pop or inc mov inc xor jge or mov fmulp push or sub push fwait incb ljmp mov rorl andl adc push sbb inc mov dec and mov pop and jmp adc call (bad) pop sbb jle add repnz rcll adc data16 jg cmpsl and dec mov inc cmp (bad) faddl lds mov and pop call inc lods mov lret icebp xor in ljmp sbb inc and inc add add push add jecxz push aas mov jmp fistp cmp xor jmp dec (bad) and add inc shlb mov shrb pushf or inc outsl (bad) mov push gs stos lahf adc dec cmp or iret iret pop add mov lahf xor mov lahf jge cmp icebp add rorb outsb push adc mov scas rorb test push xchg add xchg lahf cli popf jecxz mov scas lahf ljmp lahf lret or mov lahf add mov cmc pop or lahf icebp adc xor push and (bad) rorb mov imul lahf scas adc push mov add jo lods lahf xchg adc fsubl adc icebp add ljmp lahf call pusha lahf enter inc mov or cmpsb mov mov fildll rorb sbbb js lahf add pop mov mov dec add shrb aam (bad) incl and add rorb xchg sbb add (bad) cmpsb jb ja lret (bad) (bad) ja pop dec and (bad) jmp incl arpl scas xor roll cmp xchg pusha mov inc mov dec mov cmp fucomip sbb outsb fild pop pop inc and jo sub push push add inc mov cmp or inc push jnp push jmp jo lahf inc aas nop or popf mov dec dec adc aam repz mov dec mov jmp and fidiv in and repz xchg mov mov inc mov dec mov dec das jmp mov aas stc add jg cmp cli sub fisttpll add mov and movsb nop jmp pop scas fdiv les dec test je push add test inc in sub push cmpsl and iret mov push sbb je andl add lea pop (bad) cmp out dec dec dec test adc mov jns dec lea (bad) loop and add popa xchg dec push pushl es lea dec sub jmp and add ret mov sti repnz jmp add orl add call sub dec add dec mov dec sub adc add push sbb mov dec add dec mov dec mov or or jmp icebp aaa cmp push je pop rcll dec mov and sbb outsl and je call dec mov add sub lock rolb fisttp repnz (bad) lcall std cmp je dec mov dec lea dec cmp ja lret inc (bad) (bad) (bad) jg mov jg mov jne decl out jns dec lea movb cmpsb lcall xor mov lea dec sub jmp ja sub in jo jmp movsl pop clc ret icebp mov je test or scas dec cmc dec fisttpll test adc add (bad) testb dec cmc sub sub gs dec call mov dec mov jns dec sub push xorb neg cmp add add aas add mov dec lea clc outsl sub js adc cmp push inc lea jbe adc adc incl inc mov inc movzbl inc mov inc add jnp std aas mov xor add inc mov test loop cld inc movzbl dec lea jge inc lea fdiv mov mov dec sub jecxz mov dec insb mov mov mov mov call push add mov je or out add pushf mov or push mov dec add pushf push push inc sarb and push mov and mov mov xchg inc pushf out mov mov cmp xor test push sub popa xabort dec mov jmp add jecxz mov ss call sub sub (bad) or jne add inc aam xchg add ja sarl loop lea pop sar mov shr imul (bad) shrl icebp inc add (bad) aas cld (bad) xor jbe iret fiadd add sbb clc lock inc mov inc lea dec lea sub mov lock lock fstl xchg pop inc lea pop or mov cmp or (bad) (bad) stc call aad sbb sti (bad) incl adc push push inc in call inc jge mov lcall dec pop (bad) inc scas lock push test inc push and mul mov cld cmp inc sub shr add xor or out add cmp jo lock lea test pop shrl cmovne ret lock mov pop inc mov das rorb mov pop mov mov inc mov lea inc rcrb sub inc mov dec add xor inc mov or inc mov lcall add bound decl cld (bad) (bad) out dec mov jmp xor add jno push and cmp dec add dec mov decl mov dec cmp dec cmovb mov or movsl jl decl addb and push dec jbe pop dec fwait out rclb mov (bad) dec dec lea dec shr dec add dec mov dec mov adc xor cmp jp mov call jbe dec lea jmp and shrb inc das pop pop mov pop psubd mov adc dec mov dec cmp mov sub fadds dec sbb bnd pop add or dec mov add pop flds jmp sbb mov ret cwtl mov dec fadds out dec adc nop sbb gs pop dec lea rorl cli and inc sbb dec mov pop jl adc and push jle or paddsw pop mov outsl add cmp jmp mov call loopne arpl dec mov out mov push ret pop insl sbb addl icebp ja dec mov dec sub dec cmp mov iret dec lea sbb cli ret add jecxz pop (bad) mov pop and pop sbb sub sbb mov (bad) stos fmull in dec and imul add dec sub dec lea pop insl jbe out int dec lea mov inc mov jle xchg mov fldl data16 xor pop jmp and jbe repnz sub in fimull or and in ljmp add in pop jg mov inc lea inc lea sbb lret inc add xor and jmp add rolb je dec mov add clc incl loopne repz mov dec lea je out scas in jbe nop mov xlat aas add adc sbb jle and movswl imul add and push or xbegin rolb add fildl stc or inc mov dec arpl dec add jmp and or ret test add inc je add add add rorb xor test jne xchg inc lock mov enter add test jne adc bswap test out rol call rcl and (bad) mov dec shl dec add jmp push and pop add and clc mov jecxz add daa mov in sbb dec or xchg test sub data16 push mov add xor jmp jg (bad) (bad) (bad) mov ja cmp fs mov pop jmp add adcb xchg (bad) lods sbb adc xor aad pop in push xor idivb rorb sub or mov pop (bad) xor (bad) fisttpl cmp lods addb or push sub dec lea jmp sar insl dec lea dec cmp dec cmovb mov loopne adc push or jbe ja pushf mov add scas daa enter pop xchg and shrb jmp cmp add pop mov aad add decl lea dec cmp dec cmovae dec xchg int mov mov push dec and call mov mov xchg or xchg fadds and xchg jmp push cmp add test lret notb mov rolb bound rcrl jmp ja push cmp jmp add and inc daa faddl ret jbe mov movsl jmp or fistpll dec add sub push loop ss popl inc mov loop sbb push xlat inc inc sar inc test mov (bad) loope lret bound jg loop fs inc sub loop call add (bad) loopne adc ljmp xchg decl push aad add loope and sbb stc movsb dec or sar out loop mov and mov dec lea add pushl lea inc mov dec inc mov ljmp sti pop add dec xor add outsb idivl dec lea inc mov or add add (bad) incl jecxz lock jmp scas scas jle pusha les sub dec lea mov and out dec mov dec mov in dec lea aaa adc inc in loop arpl popf mov sub dec pop test bnd inc and fcmovbe (bad) decl pop cltd sub adc call add add in (bad) ljmp mov stc clc jl inc jmp sbb sbb fisttp dec dec enter incl cmp xchg incl (bad) decl lock out inc incl out (bad) out cli clc adc xchg mov jne inc cmp jbe fs mov neg inc cmp jl pusha test cli incl inc mov je inc lea push push sarb adc test in push rolb sbb pop out cmp jg or (bad) jne addr16 inc xor jno inc mov jmp lock movsb sub (bad) inc shr inc imul mov mov inc lea lahf ss ss lea push mov add inc mov push dec (bad) and jo mov adc jmp add enter (bad) push ror sub inc sub xlat mov add push clc inc mov lea sbb loop bound (bad) rorl adc or (bad) xor inc mov and aas popl dec lea dec inc mov add inc fldl jmp inc add inc mov inc jmp ljmp iret sbb inc mov push mov dec or inc push rclb mov jmp push adc xchg adc outsb std or rcl add xchg sbb jmp icebp cmp aad dec enter lea clc sbb loopne hlt iret aad xchg lcall mov dec sub dec cmp jb push scas hlt lock lea push and xor out rorl ljmp jl sub adc and lret repnz rorl xchg dec jmp sbb mov lds lcall ficomp inc or jmp outsl insl mov in call or mov mov adc add ljmp or (bad) (bad) call jnp mov pop mov mov test sub inc pusha lock (bad) out loopne mov add jnp fcompl cmp jmp sbb sub pop std rorb mov lret jbe ffreep inc lea dec lea imul adc movsb lret fs test ljmp mov sbb lock movsl loop mov cmpsb enter lock xchg inc movzbl fisttp inc add dec je xor inc jo rol hlt jb outsl jno shlb inc and (bad) loopne shr stc jb add adc sarl movzbl push adc mov xchg add cmp mov pop push mov nop les insl pop jmp mov dec inc jo bound cmp mov mov pop pop sbb jmp insl or jae leave jo jmp ja faddl dec xchg add pusha add fbld mov jmp (bad) aas je insb (bad) (bad) push sbb or popa insb pop js lret inc add xor jg in das mul pop lret fdiv jmp cmp jmp bound inc rorb icebp sub loope and add pop sub rorb lcall jle push jo mov pop xor adc add cwtl adc xchg dec mov fnsave fsubr movsb imul jmp aaa dec add test loop sub dec mov dec mov dec sub dec lea lret loop cmp lods cmc dec add dec mov call les mov jecxz lds or and roll aam sbb aaa dec push mov dec add sub sbb sub std fcomp or movsl dec sub inc cmc adc leave dec pop sub rorb add add dec lea push or and sti jmp jbe loopne (bad) xor fcmovne xor add mov jmp ret cld inc add jbe pusha push sbb aam lock and xchg mov rclb push adc dec add xchg add add fmull (bad) cmp add cli fwait stc push sbb push pop ret mov mull dec testb repnz fld1 sbb sbb lret enter cmpsl call in cs jmp call push sbb ss cli outsl inc (bad) sbb mov pushf push adc mov cmc sbb loop inc (bad) test dec mov (bad) icebp mov (bad) pushl in jmp push xchg fdivrl inc or or (bad) xor add or call mov dec lea dec mov out sub xorb test ret mov call sbb add dec add sbb lahf dec lea push inc sbb cmp mov inc cmp mov push sbb icebp insl js loope incb insl fwait push dec lea mov dec rolb bound mov xchg cmpsl xor cmp div push sbb aam push mov cmp fwait cli inc pop sbb jmp xor in test (bad) fldenv (bad) daa int3 add imul ss jo in subl mov add enter dec xchg negl imul push pop pushf ljmp popf mov mov arpl mov mov lahf inc adc ljmp (bad) xor mov (bad) jmp jecxz (bad) cmp jmp ret and loopne mov sbb adc sbb stos sub add jo int3 adc mov clc or add aaa out sbb push push arpl jae jmp mov mov or jno inc addl push sub pop sbb daa lret call and mov mov jae addl and add out ds sbb mov jmp xchg scas push stc mov (bad) incl jl jecxz rolb shr jbe push push push mov shr orb fisubr add pop xor fcompl xor sub jb ss and test inc cmpb inc lea nop mov inc cmp fistpl sti sti sti sti sti rclb nop dec or or adc mov or and cld leave gs inc jo inc lea cmp sbbl aaa xor adc or xchg adc fistpll clc jge and add sub out dec loopne cmp sub pop inc push push decb pop pop cmpsl incl popa push xor js jne dec add out sub add add add or clc out and jne xchg dec sub test shlb adc or je xor bound ds mov fsubrs aaa sbb loopne jmp subb sbb shrb adc fsubl sub or add sub icebp addr16 adc push cld jne into repz rorb jp adc and and fsubrl clc dec (bad) int sub adc inc stc jne fcoml sub pop add out cmpsl sahf dec ja les adc call out xlat decb call fidivr mov jmp sahf add (bad) fmull add lret or rcrb push cld pop sti dec mov dec fnsave sbb dec lea jmp add add (bad) sub js lea sub mov je fs jmp inc and in data16 mov loopne jo xor int3 (bad) jo cld incl lea inc add inc cmp jle aaa push dec arpl push jne adc sub ret fnop jne mov inc add cltd and adc (bad) sub sub je jae add add je add add je dec sub inc mov lret jne cmp dec dec lea jnp int fwait sub push dec mov dec (bad) ret and mov dec sbb data16 dec mov xor aaa or add adc inc sbb sbb cmp mov (bad) (bad) or (bad) mov xor test dec lea jne jg popa rorl jg xlat (bad) fcoml popa rorl jnp xor jg adc dec lea jne adc popa rol adc popa dec mov dec call fwait dec sub dec lea mov ljmp inc in loopne (bad) push adc loopne add out (bad) call fs or es ja pop lea push repz (bad) mov add xor jo jecxz adc add xchg andb xor stos stos cmp out xchg mov decl ret mov push outsb mov xor test out rcrl push fsubl inc add sbb enter jle dec inc cli hlt push insb out (bad) cmp int3 les aas or push sbb mov mov dec mov fisttpl test clc dec sub dec mov sbbb loopne add (bad) decl imul cmp dec cmovb dec test je sbb inc and (bad) (bad) (bad) hlt jns faddl jae (bad) shrl iret sbb outsl xchg pop inc (bad) mov fcmovbe addr16 push les rcrb dec mov loop rclb daa je push aaa (bad) data16 mov mov adc jb,pt push sbb imull ret jmp ss jmp in leave sub mov push dec or shrb stc test scas push sbb out arpl cmovb dec test mov test mov pop dec xor sub imulb lret sbb push cmp pop push add dec add dec lea sub icebp (bad) dec sbb xchg or ds dec out mov (bad) jg lret inc test movb jns inc xchg lea jbe adc call jno inc rcll cwtl mov mov call jmp call push and fsubs subb or arpl inc dec in push inc adc mov sub add int3 (bad) add ja xchg (bad) cltd mov add cmp enter inc leave stos jno adc and or pop jno js pusha inc mov (bad) fidivr and cmp ja xchg ret mov mov call mov or (bad) jbe popa dec jo adc jnp or xchg roll lods (bad) add mov fsub jle enter fildl add rorl int sbb ss sub fadd or (bad) je aaa adc and jnp sbb mov lea inc (bad) stc (bad) pushl movzbl mov jmp mov inc mov push addl (bad) inc add add jge call add adc jne or xchg stc mov lods lea pop jb nop add lret inc cmp add sub in mov mov dec int or xor ret push xchg stos or xchg sbb mov xchg sbb pusha imul mov jmp sub sti push sub arpl cmp sub int3 cmp idiv pop xchg dec mov dec lea jmp (bad) pop pop mov sti fistpl dec mov dec lea outsb ljmp mov cmp pop add mov pop iret fisttp mov dec lea mov add mov int3 aad jg dec mov dec lea and js out and dec mov and repz jge stc and out ret das pop xor fcompl sbb xchg add cltd fwait inc dec push cld xchg icebp ret pop mov inc andl ja add and and dec add fildl xchg xchg rcr mov rorl icebp aaa adc inc and call orl dec sub fimull icebp dec sub adc dec sub pusha add sub out loopne mov dec mov dec mov dec mov (bad) je push call dec mov dec cmp dec cmovbe jmp nop dec test nop loopne (bad) mov mov pop sub jmp test je sbb enter ret fcmovb incl mov nop mov inc icebp andl mov dec mov dec (bad) imul hlt out decl in test je in cmp dec cmovbe (bad) (bad) inc jmp nop dec lea inc cmp je dec mov dec cmp jne or adc cs pxor or adc xchg clc xchg push dec mov add add (bad) scas inc outsl call push and jns cmp je or ja lds dec pop loope add bound add dec cmc rclb sbb push aas adc out add movsbl jmp cwtl bound hlt out icebp pop push jo sidtl inc add (bad) aas push and mov dec cmp jb gs dec mov call xorl push cmp cmp inc adc ss jae adc outsl pusha xor dec cmp dec cmova pop mov (bad) jmp cmp adc dec or xor daa xor xor sbb or das (bad) call add mov xor cmp je adc sub push (bad) popa or das inc mov das dec outsb sub inc loope inc mov jg ret cmp jno das cmp shrb jae sbb hlt sbb enter fstp hlt shll rorb cmp jae inc cmp or and inc add dec add sbb sub decw aas push mov jae dec mov jae leave clc pop jecxz add push dec lea call jg sub inc call push and inc adc call lahf lods sub add push call ljmp sbb jnp (bad) sbb std mov rorb adc pop push fnstenv xor sarl dec pop gs je dec add std fist dec mov dec mov call inc jb jl movzbl inc mov arpl dec fadd and adc or jbe add shr (bad) jg arpl sahf xchg add out sbb mov inc clc sbb daa call roll cmovae std pop add and inc add (bad) (bad) (bad) jg loop lea dec sub inc movsbl dec cmp dec lea ja inc or cmp fmull loope mov jne jmp add aaa loopne mov dec mov call dec (bad) hlt mov dec xor ret ja dec add je inc sarl js mov jne test adcl dec and jg test and or sbb (bad) jae dec sub mov out mov in push nop ret (bad) ja test dec cmovne and insl aas adc dec mov pusha mov jnp cltd jnp mov pop pcmpgtd sub aas cmpl sete mov enter dec and setae dec cmp ja dec je inc sbb sub popa cltd adc or mov sbb dec lea jne stos sbb lods faddp sbb or leave add daa adc aas xor orl xchg and pop pop nop dec scas fistpll cmp rcl push push mov dec mov fbstp outsb lret mov ja call movsb aas and dec lea insb add adc mov fild and dec outsl out jbe mov push pop mov (bad) dec cmp inc inc pop sbb pop punpckhbw mov call jne dec sub or or rorl sbb jg or inc popa add jno (bad) mov inc add fucomip out (bad) scas or mov dec mov arpl fisub test or or or mov sbb mov mov rorb cld mov fidivl dec sub mov dec call jns dec mov movsb push mov jl jne aam jge lret fisttp imul push dec and mull movq dec imul push sbb jmp pushf scas std loope (bad) pcmpeqb dec adc fidivl jmp (bad) loopne repz ret mov ret dec xor out mov (bad) call in mov adc mov cltd rol dec push cmp add test xchg out xchg setp ret and ret lcall ror jp inc and sub adc ja dec lock loope inc dec cmp ja xor sub dec cmp test call pop jne dec sbb or pop push adc call imul pushf stos jne push cltd jnp icebp mov cmpsb mov out (bad) call (bad) push xchg dec dec iret ljmp jb js dec mov dec aam sbb push cmp call nop adc sub jae pop scas nop lock pop sbb sub dec mov xor pop or add dec adc adc add mov or pop cld cmpl lea call cmc jg inc mov dec mov dec mov call sbb stos sbb push xadd test jle mov xor sub call lds aam leave adc dec lea lea call clc push call jg or dec mov cmp ja dec mov inc or inc adc mov and inc lahf pop dec mov or mov lock nop ret pop xor add dec mov stos add jae mov sub cmp rol loopne mov movl cmp loop fisttp push es add cmp or fcoml inc jg push pop dec loop add push dec push pop cwtl add or dec pop decl fwait push inc jg xchg sti pushl cmp ret sub mov dec cmp jae dec mov jmp out stos stos (bad) aam sti je inc fstps or decb (bad) mov or roll push add sbb pop das out sbb stos push mov movl dec outsb dec ja call int3 adc xor cs das xchg dec cmpl add dec sti ret inc aas sbb sbb dec mov cmp das movsbl add add pop xchg das xchg dec and loopne int3 inc rorb cmpsb add add sbb adc aas xchg xchg sub dec inc loope mov jne jmp bndstx bound or inc sbbl aas cwtl (bad) jg cmovno jae dec mov inc cmp test incl dec mov pusha loop cmpsb jae dec pop (bad) ds xchg shll mov mov mov dec push jnp (bad) xchg mov pop xchg mov add add cmp ja fmull repnz add aad inc insl sbb jg js pop ret movzbl mov jbe arpl xchg lock rep flds sti fld1 sub or call pusha and (bad) nop add or mov fsubl add rol (bad) mov dec lea or dec lea dec cmp ja in and xor mov xor mov mov ds jo and clc push add add scas out push jmp push ficom push rcll psubd xor in mov xor ret das or mov mov out iret inc inc dec or push pop loop cmpl inc orb loopne adc inc out xchg sub pop jo and ja in movl in pop sbb pushf push out sbb or mov decl out dec xor (bad) jmp cmp pop loope sub dec add arpl add bound inc sub cli ja (bad) daa or nop dec mov out dec cmp ja dec push loope ds or pop loope lea or cmp jle xchg imul movsb sti jg call dec mov sbb fsubr push enter pop xchg xor mov incb aam pusha test adc pop inc ja xor and insl mov aas add or mov fsubr clc jge xor push dec mov mov loopne pop cmp fnstenv mov lock bndldx fmuls (bad) dec cmp sbbb psubq in sysret cmp test mov shlb call stos lahf pop sahf push daa mov pusha fld1 push movsb add insl pop dec (bad) add stos mov cmpsl push xor push add pop or jg mov mov call pushf or adc cwtl popa and call dec mov and arpl roll xor (bad) jge rorl adc and fadds outsb stos xchg inc mov or mov inc add movups dec cmp ja cmp or (bad) imul inc or xlat cmp scas add jo lods daa mov sbb add mov outsl inc inc imul popa (bad) rcll add dec lea or pop mov lret jo dec cmp bswap mov xor mov (bad) jne gs jns sti mov pop cld add add cmp mov ret xchg cmp or and or lcall fs sub add out pop jmp add and pop push or (bad) jmp and mov xor cmpb je (bad) (bad) out dec mov cmp sete dec add call subl stos dec nop jl mov loope pushf xor mov cmovge ret nop test in nop maxps dec mov mov lcall jle inc mov call add xor push cmpsb xchg jge inc out call mov xor call (bad) ja test and cmp mov pop adc push call rorl mov adc movb and ret inc icebp bound icebp mov jmp mov mov dec mov inc mov and call lods sti movsl (bad) dec addr16 jne dec or push aas (bad) sbb leave xchg cmp fdivrp jmp movzbl mov jmp outsb iret jbe fild dec iret je dec test je cli dec mov sbb enter mov sbb orl outsl pop roll mov sub jmp fdivs popf and xchg cmp jg inc sahf add imul icebp jg adc nop dec sub dec cmp je xor dec dec add nop jmp add pop pop jae je enter adc icebp incl cmp jb daa sub ret mov aas push loope in push popf jnp or les and out insb lds rolb rorb ja fxch dec sub aas inc in fcoms pop or rorl mov je aad call cli notl insl pop pop pop pop dec lock mov jbe pop push xchg mov jo clc leave jg pop and dec dec (bad) mov mov dec add addr16 lea icebp je arpl ljmp fcos xor mov dec mov cmpsl les jmp or sub push xchg inc sbb xor or or cmpsl add insb jbe rol roll jae cmp iret and xor aaa in in add pop jmp shr pop adc das in jecxz sarb pop lock add icebp or lahf lea inc adc bound xsave loopne add out ja inc inc adc add inc out adc sarb mov sbb add sub pop mov iret sub dec mov dec add push std pop cltd mov call ja jmp or xor push sbb inc mov mov push fisubl and dec mov inc movb call (bad) fisttp mov sbb (bad) js lock cmp (bad) (bad) lcall jns push dec cmp dec lea jbe dec lea dec cmp dec cmovb dec lea adc sub dec cmp incl (bad) jge pop dec add pcmpeqd lret dec cmp dec cmova rcr mov and mov subl pusha xor out push push bound aas into dec mov pop jae or mov call add in jnp das mov rorl xchg pop sub call mov lods and mov inc mov or or inc add add clc inc sbb jns adc outsl jnp sub int roll inc fmul add jmp lahf sbbl mov adc dec sub into inc flds mov jae dec sar jo sub aad mov jne add ja mov fmull ret adc cltd loope fisttp arpl cli sbb dec pop sub rorl in sub push rorl jge xchg dec push jne mov inc push (bad) push call add dec stos (bad) mov bt mov mov push mov je mov pop dec sbb addr16 and out (bad) arpl xor je clc outsb test and pusha sub dec xor test aaa ja xchg jbe iret jb mov call cmp jbe pop mov inc hlt jo loop or push loope dec (bad) in dec call add mov push mov sbb mov ret adc jbe lahf mov call lahf push push stos (bad) pusha jg jmp das sub cli sbbl add jl mov loope gs xchg xchg pop (bad) out (bad) dec inc dec test je out jns (bad) dec cmp jbe sbb mov push push movsl or cmp jne lock int3 loope cmp cmp xchg push or scas mov lret out orl pusha xor (bad) cmp add push fmuls xchg scas cmpb ret dec cmp jp enter sbb fisttp jns jae adc loope icebp stc orl cmpsl addr16 mov in dec add scas sti ljmp stc push (bad) cmp rorb cli arpl call in push orl call add std dec mov dec mov lea jmp adc mov add or mov scas xorb sub (bad) aas inc icebp or xlat mov fmuls (bad) jb or scas sub cmp sahf mov push in add inc mov xchg xor cmp test (bad) mov mov call cs push jge in call call push dec mov cs jne orb pop adc adc jae popf pop (bad) lcall push insb cmp lret aad mov dec cmp dec mov dec cli mov ljmp lret rcrl mov jbe je and inc cwtl sahf jmp neg ds mov loope add loopne sub ja (bad) (bad) ja incb je rorb insb repz or fldl xchg movl movsb jno xor and loop aad loope sbb cs das inc nopl mov mov xlat dec sub pop in adc xor cld mov cmpsb xor daa mov dec lea arpl icebp ljmp (bad) int push stc jle dec mov add (bad) mov das jbe xchg mov (bad) jmp into arpl cld inc imul adc push cmp (bad) call sub dec cmp xadd (bad) ja jecxz add push out mov dec add dec mov call fcomps stos add lahf jo sbb jno push pop cmp and popa mov or out mov iret cmc push pop inc decl dec sub dec mov dec mov jmp adc cmp lock dec cmp or push or xchg test arpl cli xchg jg adc cmp dec mov xor push xor pop sarb cmp mov (bad) sti lahf xor or pop insb inc sbb inc sub repnz pop pop pop sbb push xchg inc aad inc lret dec ret add decl int xchg lcall (bad) ja dec orl enter cmp jbe mov jae inc pushf insl call sbb stc mov jg sar dec sub psrlw lds dec lea dec add dec xorb lea lret hlt jb mov je out insb add or out sbb and int je dec push leave call loope cmp cmc cmp ja dec je dec test jne and dec incb sub data16 je call push lcall fsubrs bound mov jmp setns fdivs and fwait xor fsubrl or (bad) mov inc jbe adc call mov inc loopne mov dec sbb pop pop fdivrs xchg adc in jo movsb cmp cmp call adc mov xchg or dec mov dec mov pop dec sub (bad) dec cld jg dec cmova dec cmp ja dec lea sub ds cltd mov in pusha xor shr pop cmp cs xchg dec iret leave dec icebp rcr lret adc lock rclb dec rcll out leave call and mov mov out dec pop iret dec pop sub fs cmp test sub push inc fwait outsl dec mov incl jl test cmp xchg shrb rclb mov jmp pop dec sub sub jno imul push call shrb pop je mov add repz (bad) call dec lcall cmp add mov test js jmp inc cmpsb insb dec fwait dec sub xorb rclb dec sub jmp loope add loopne push xor dec sbb icebp or call repnz sub and dec sub stc cmp push rorl call mov add outsb enter adc sti fildll adc mov in cmp dec mov or or call test pop mov cs or pop out inc loopne add fistp dec mov jne mov add adc dec mov push jne mov mov int3 or sub push lock push jg ret and inc and inc out push lock xor stos sub int fldl lock je mov inc dec popf arpl nop aas jo loop sub dec mov popf dec add test clc cmp ja fsubrl sub dec mov pop dec sub dec add dec cmp ja jb mov or or xor adc push push call adc dec (bad) decl movsb jg dec lea dec lea dec cmp ja jmp int3 std dec sub dec mov cmp call test mov adc dec sub fistpll jmp adc and dec mov dec cld lea dec add (bad) jb dec dec add sub sub dec jle push sarl lea inc dec scas xor mov int3 cltd sahf lods ljmp xor mov inc xadd sbb inc and jg push cmpsb call add sub inc adc inc lods test xchg test (bad) push push mov or out loopne push xor dec and dec mov in adcl fld1 mov jle mov idiv call dec loop scas jg inc lahf aas dec mov lahf push dec mov dec sbb mov enter or dec cmp ja dec lea inc push pop and pop ja jg adc xlat out movsb dec mov call add scas popl add rorb in fdivl push (bad) ja inc mov push sub and mov add mov shr push add adc (bad) in jae push lock jp push call cmp dec cmovb ds and lock call mov push sbb jae loopne add sbb sub xor pusha call fdiv movsl push push pop or aas mov push jo inc paddsw arpl sbb lea inc loopne test xchg or call cmp je dec test lcall mov stos sub jmp sub inc mov jg or mov dec mov push fidiv out js mov dec (bad) fwait loopne add xor sub sub fidivr ja mov mov add das dec mov call (bad) jg cmp sbb cmp dec mov or inc out jo jae mov rclb je in enter lea dec add dec add dec out mov and and test sbb and inc idivl sub add push pop (bad) int (bad) lcall dec lea mov rcl (bad) fnstenv fcompl pop jg xorb lods or je dec cmp je (bad) cmpsb push ja dec add dec fsubrl dec lea je mov cmp sbb jb gs add lcall inc mov ja jge arpl dec cmp ja sub call xorb mov lahf inc mov sbb jg call lock test lods aas mov outsb mov xor call or (bad) hlt xor xor ficom dec mov orl push xchg imul aas cmp jbe in jbe flds xlat dec push and and adc dec add and jmp mov iret add into call sub xor or adc neg sub outsb cmpsl es iret push push xor inc inc mov push into and es adc addl shrl pop cltd mov pop xor cmp mov add sub mov or mov cmpsb or dec add or inc push or (bad) call add and leave mov mov lret scas dec add dec ss jo rcrl pop xchg or sbb mov leave pop cltd pop fildl jnp mov push pusha pop scas scas imul rorb jnp aas jae pusha out or mov cmp sbb sbb add aas bound dec mov add rcll loope pop cli xlat push pop scas mov pop rorb enter pop mov and dec mov push xchg pop imul rorl (bad) cmp ror nop insb xchg das and movsb mov test add cs mov dec das jae dec and xorl jo jge mov mov jmp out lock jg jbe adc inc stos mov cmp push cmpb sub (bad) xchg or cltd pop in xchg sbb ds and lret or into nop in mov pop dec movsb add ret push das sbbl add jecxz inc mov (bad) das lret mov xchg into maxps fldenv aas pop sbb gs out push push das daa fwait cltd rcr xor ja nop clc or or fcoml aaa cli jle ret mov cli dec xchg sub out add mov test ss iret fidivrl or xchg sub dec aam or pop (bad) adc pop pop add movsbl adc push addr16 call sbb out inc ret jno sub pop shr daa add sub das pop jae pmuludq mov pushf imul pop add scas popa and push das sub stc ret outsb mov das jb mov vcomisd je sbb inc call sbb sub sar cmpsb decl and add lret dec mov call dec mov loop jbe cmpsb pop mov mov xchg cmp jmp mov subl lea dec add dec mov call stos mov cmp inc je call stos mov sbb dec jae,pt cmpsl cmp inc jmp adc and add out jge dec push shll scas fsubl jnp push cmp icebp call call call sti pushf jae loopne leave jl pop xor arpl adc repnz push or aad dec mov es call sub sbb mov mov (bad) popa (bad) sub test mov jbe dec addr16 cmp fstpl mov fmull sub lea into jle iret jmp fdivrl dec nop ljmp pusha inc push sub pop add add push sub aas adc int3 vmovaps cmp dec sub (bad) das call call pusha mov add mov add insb ss sub enter fsubp test frstor shrl mov or cmp fsubr ljmp jmp pop les cvttps2pi sbb jae ja pop cmpsb leave pop add and sbb xlat or rcr adc mov dec lea lret cld cmpsb sti out test adc adc or dec mov dec movl add movb mov dec mov push sbb xor jmp ja roll shlb xchg adc inc (bad) dec mov pop dec mov dec add jmp push addr16 movsb leave xor aaa les add inc adc pop xor movsb (bad) nop dec sbb js and ret shr mov shrl stos jmp enter mov dec lea lcall je dec cmp je dec mov dec mov dec test dec mov dec pushf std push push pop adc mov dec mov dec movl add sbb cmp jp mov xchg add jmp mov xchg rcll xchg adc es fisttp jmp pushf add add push sti push push inc xor pop pop xchg xchg or das lea neg sub outsl lea push rcr dec call push les add sub jmp ret daa out scas adc mov dec mov into inc pop dec jl fcompl ret pop (bad) cmp ret fldlg2 scas out loopne neg cmp add adc (bad) xor or bound and jae lea in lret pop (bad) sub pop (bad) fnstenv mov jmp rclb mov cmp arpl call gs mov mov decl pop nopl mov mov shr xor (bad) (bad) (bad) ljmp mov insb add mov dec add dec cmp jne dec movl or pop pop ret dec mov aam inc xor adc lcall cmpsb add (bad) incl je fsubr call cmp je fistpll or and lock shr das mov dec or call mov jne cpuid cmp jne test jne dec (bad) fucomp (bad) cmp pop push mov call jbe outsl ja fdivl adc xor cmp dec mov call adc jl popf adc ja add setl bound cmp mov je dec notl popf mov xor jns and jl (bad) push sbb cmpsb ja fld1 inc xor sarb ljmp mov sub sbb sbb mov cmp mov push or adc push es mov test pop mov cmp mov sub mov das mov fnstcw addr16 int loop sbb ret sti jecxz push pop dec mov in out add loopne repz bound in lea pop nop pop add pop aas notb sub dec mov iret ja divb pop mov mov dec (bad) hlt outsl sub shlb dec call add mov psraw sbb jmp add cmp pop inc pop mov cmp daa lods dec (bad) fimul mov xchg pop pop dec sub xchg adc cld dec or mov add sub jmp ljmp and jge push mov and add lcall das xor sub es adc outsl das dec mov and mov dec mov mov std cmpsb mov fmuls clc add je inc dec lea dec mov rorb xchg (bad) dec adc dec mov mov mov call lcallw push dec add dec sub dec add je (bad) out stos pop arpl fbstp mov dec xor (bad) (bad) (bad) jmp decl in lea dec sub dec cmp je dec mov dec mov dec mov daa jbe fucomp int3 sbb test cli shrl (bad) hlt fld1 rorl dec mov jbe mov call shlb adc lea ljmp mov call push pop pop dec push inc adc mov ret sti inc xor xor and add or pop adc mov sbb adc xchg jb test mov fmull or adc dec mov in (bad) sbb aaa popa mov inc repnz sbb fmull inc fs add sbb arpl dec sar pmulhw add xor ret shll or inc movzwl inc adc enter inc or pusha add sub or push sbb pusha add fcoms dec xchg jne adc pop addl sub add xchg mov addb dec mov dec mov dec mov dec mov stos mov push rcrb cli mov incl mov dec sub sar dec cmp ja dec cmp sbb adc lock add dec mov inc sub sub add (bad) decl (bad) je dec test js ja inc jne fdivr sub (bad) cmp loop insb bound push or test lahf jmp call into mov jmp lcall andl dec cmp jne dec cmp je ret fdivrl shr out add jmp sbbb jmp jg pop push shr mov (bad) out out out mov outsl mov dec sub dec add push je ja jmp call mov jmp ja rorl sbb out dec inc mov add pop sbb jb dec or cmp jg dec dec cmp ja add adc decb movb decl xor je dec mov dec cmp jb sub cmp dec sub dec cmp inc setne dec sub (bad) (bad) push setne inc and dec cmp jae inc test je dec cmp dec lea dec lea je ja dec mov pop cmp mov out mov and lahf dec test je ja xchg test test popf push inc mov bound imul add add dec mov dec inc (bad) ja cmp mov bound dec or decl dec xorl or mov mov cwtl fwait int3 inc cmpsl adc das pop sub scas test dec lea dec adc (bad) jae mov add dec cmp ja adc xor test sbb ret (bad) jmp aas out mov call jmp dec mov call mov push adc mov add fistl mov adc movsb inc in mov dec arpl int3 cmc les inc dec push inc add sub in add je add fwait xchg or xchg aas aaa dec sub out (bad) pop jnp dec test je inc orl je rorb jmp dec fisttpll mov jmp jae or mov jmp dec lea call dec adc fs sqrtps dec sub inc popa scas and lahf outsl lret sub cli cmove mov rorb push dec mov fidivl sub mov fistl xor iret dec bound add add call inc mov lahf xor push (bad) cltd dec inc pop inc int xor call dec sbb adc xchg mov add dec sub dec cmp lock popf decb pop and ja mov jo adc jne fisttp inc ljmp pop ret mov in sub loope lea outsl repz or jne mov jle push dec mov (bad) jno jge push mov test jle xor sub sub push lock dec mov jne out xchg lock or dec mov or add (bad) je dec test jne or les orl jmp movq or and loopne adc adc in sbb sub inc das xor inc mov dec mov jo or rol aas jne and inc add xor add nop outsb ret sbb mov out push and mov outsb sbb sbb outsl gs mov inc mov push loop push xchg jo roll xchg or test mov dec push mov scas lret cmp je push dec cmp push decb xor call repz add cmpl ds add mov aaa or mov pop or aas or (bad) jg add dec mov dec sub dec cmp ja (bad) std mov lea dec sub mov dec cmp jle adc (bad) (bad) (bad) cmp jb dec sub dec sub je dec cmp je dec add dec lea mov imul aam sbb pusha cmp cli in and jl (bad) mov outsb xor pop sarl cltd or loop pop popl out fnstenv xor addr16 adc or adc mov jmp ret insb loop and mov fisub or ret xor mov add lods cs stos xadd add jae mov add jl push dec mov cmp je dec mov stc dec mov dec lea xlat (bad) out ja je dec cmp dec mov je dec mov inc add pop adc inc aad xor cmp xchg mov ret sub aad pusha inc adc movq jbe (bad) pushf jmp dec mov mov xor push adc lahf aas and cmpb mov jmp dec push fdivr mov je lret dec mov dec mov je sub mov push sbb adc dec xchg je das and dec dec mov or fnsave ret (bad) push pop mov dec mov dec ds jmp mov cmp nopl mov mov push xor sbb fwait mov fwait (bad) out (bad) dec sub dec add dec cmp je lcall icebp dec mov call pop jg das dec mov (bad) stos lds add xor (bad) jg ja pushl je dec sub dec cmp dec cmovbe call icebp popa lret arpl jno es jmp and std iret and push push add dec lea pop ret cmpsl pop lahf iret inc cld outsl (bad) clc rorl (bad) call dec and cwtl pop dec cmp push or enter negb jmp icebp sti lea mov out xchg push xor inc sbb ja ss mov xor call jg xor sbb aas fs mov dec leave fldl hlt dec lea cmp cs cmp js paddd in or cmpsb dec or push jbe stos sub cmp rorl push or xor cmp aad jno jg inc stos aaa push aad out mov orl add std decl cmp inc and dec mov xor imul test sub pop (bad) push sbb sub xchg pop call sub sbb add nop adc das je push std sbb or cmp ret xchg cmp lret sbb push (bad) jno aas dec and xor ret xchg sbb xor mov stos mov or jb cmovno iret sub sub dec scas cltd iret daa sub test adc cmp mov and or clc (bad) or in (bad) decl adc jecxz mov mov (bad) hlt push inc out jge insb icebp incl cmp fldl push adc shr bound mov movq dec adc mov call in and or ja pop dec mov pop popf sbb xchg mov or roll mov xor fistpl dec push (bad) push jbe call mov movsl adc lock popf stos adcl pushf dec pop nop jle push cmpsl aad push aas es jge mov or mov and call ja cmp xchg aas sub pop or jp out or push dec mov imul fiaddl loop add orb inc and (bad) (bad) out ja jmp lods pop or call xor or out ret and pop dec mov inc or ret jp mov imul dec add inc add or shll out pop push xchg and sahf jg push adc and jne push ffree add xlat insl into adc popa xor popf sarl popa push ret js les xchg cmp nop add stc inc mov cli std call pop out sub or push inc mov dec sub mov dec mov dec sub mov cmova dec cmp mov and shr mov adc pop int3 jo adc call ja inc mov push negl sub dec cltd jne cwtl mov pop cmp add mov mov adc stc in (bad) cmp mov push mov dec and out push hlt ja sub int lods clc sbb (bad) lahf jae mov dec sub dec sub dec test xor dec and jge cmp dec leave ja dec adc pusha dec mov lods ret xlat out enter call or adc in (bad) adc lea adc fsubrs fs push cmp mov sub shll aaa adc fwait jecxz fsts xor and cmp sbb ss scas jnp adc pop rcrl dec lods dec outsb (bad) enter mov sbb mov arpl adc adc sbb add xor icebp cmp jl bswap dec mov cld jo or sbb pushf (bad) dec or aaa lock cmp dec cmovbe nop dec mov push inc mov xor fisubrl call loop sbbb xchg adc ja dec inc call and test push mov dec push or out dec movb inc inc push shll or dec mov loopne inc call xor test dec mull xchg btl loope lock push outsb fwait hlt cmp dec setge dec cmp ja shll decl dec cmp (bad) inc fidivl std jne clc mov jbe adc shll jne mov jne int3 jno xor out push leave jo or insb sbb ss pop mov and and cmp push in mov push loopne fstpl rorl inc outsl mov dec cmp lcall push lret cmp jae inc push orl scas mov cli emms xor sub xor dec lea jle fisttpll test hlt mov call xor rcr sbb call ja mov dec mov test jne dec cmp pop lock divl scas cmp mov add pop (bad) (bad) fidivl jge out or (bad) lar jmp aas dec mov dec push jne mov jmp adc sahf inc mov lock add fdivs fdivr pop in pop dec lea dec add dec add int push rorb call inc or jo pop pop mov in cmp add cmp or jge pop push test xor decl loopne sahf lea dec lea dec cmp (bad) cmp ja sbb xchg and loopne aaa mov in out add int3 es mov clc dec rcll pop fucomip mov call xchg call (bad) out call out mov je dec mov dec lea mov mov clc mov out test dec cmp jb cmp je or (bad) imul inc push decb push add mov jnp jmp jb dec mov call or mov dec cmp in jecxz sbb les push lock jmp aas aas push mov icebp ja popf repnz jmp (bad) jmp popa idiv test js dec cmp jbe dec add pop jae sbb sbb add jmp insb push dec roll xchg and cmp seto add cmpb jmp sgdtl call mov (bad) int3 or gs and nop dec fwait aaa shlb dec mov push dec lea sbb lock les mov call sub popa lods mov dec sub dec cmp sub inc clc xor inc adc loopne pop dec mov je mov test sbb dec inc mov dec test je dec test outsl sub dec lea je outsb dec dec mov ret jnp call pop add pushf or lea dec add dec emms lods sub ljmp fisubl or int push sub loope fs pop cmp (bad) jnp pop ret fbld jo imul ds aas add lcall ret xor add mov repnz outsl (bad) lock call mov jno fcoml mov xor jbe cmp jle add fildl and cmc inc xor ja dec loopne ret call add inc cli decl add jnp movb mov inc mov dec mov in dec dec cmp pop loope addl and mov scas mov addb das pop mov movsb outsb outsl xor mov adc in pop cli xorl (bad) out cmp dec lea push sub fs or jbe icebp inc adc and inc lds (bad) aas sbbb stos inc xchg dec pop mov inc aam sbb dec loope add mov (bad) adc sub decl (bad) ja dec lea dec mov lock lea or lds mov mov add add push dec (bad) cmp daa dec enter pop push movsl in adc sub sti fmul and insb insb jmp xchg xor mov std ds jbe push xchg lea jno ret aaa ret mov idivl add (bad) dec adc add and mov jno or inc pop nop sub ret adc loopne dec inc add add inc dec fldenv ucomiss aas push inc or mov pusha rorl das test nop pop (bad) setne (bad) cmp adc or das pop test mov cmp xchg aad push pop nop push dec jmp leave pusha arpl inc dec test or btr (bad) cmp aaa dec outsl pop (bad) loope (bad) loope icebp loop outsl jmp notb icebp dec mov sub or or dec jne add sbbl aaa roll push bound sarl and push adc mov or mov cmp call movl xorl sbb push icebp stos sub es dec nopl ror and jno add notb add pop or adc adc xchg jp dec daa sbb dec bswap sub push dec fs test sbb ss lea adc fisttp mov jmp xor push into lret sbb ss cmpl cld inc dec mov mov fcmovnbe mov enter jae dec push loop mov into jbe rol fnop loope inc and call dec mov inc pusha ljmp dec mov sbb je adc pop pop stos lahf and or fcoms je test rcl sbb mov test sbb subb rolb and mov push je test push loope fidiv lds cpuid dec (bad) ja mov je dec mov pushl mov push ret divb mov jg sub loopne mov icebp call ja addl pop adc call (bad) fbstp dec mov stc call (bad) dec mov jne lock out mov call mov dec mov loope mov icebp mov jne push jmp rcl (bad) dec mov jne out outsl and jns call ret addr16 jl and test sub adc aaa push fistpl test pop sti fadds popa mov imul dec mov jne xor adc enter push dec mov dec mov (bad) jne scas call and cmp sti inc or or mov dec or dec adc xchg mov mov dec mov cmp je cmp xor mov sub adc flds dec mov add cmp jge shlb das pop adc neg ja or push fnsave cmp mov fisubl inc mov lahf adc push and and pop mov jnp mov test mov add jns adc dec out (bad) sbb lahf dec lea push daa aas or mov adc cmp aas xor dec sub jmp popf adc data16 test push stos jmp pop sub mov or std inc decb out (bad) (bad) (bad) decl dec lea dec mov inc mov inc and dec mov dec shr dec add dec rorl out (bad) (bad) (bad) jg mov nop dec lea dec lea dec lea dec lea inc movzwl dec lea movq (bad) pushl cmp jbe dec cmp mov jle fsubr lret dec cmp jmp mov jg fwait je dec lea dec mov dec loop (bad) fild dec add dec sar dec cmp jle inc movzwl inc cmp ja jmp out (bad) outsb adc inc adc dec mov dec mov pop out pop cld (bad) out in dec and lods addl out aas dec add dec sar add call inc mov mov test nopl decb loopne dec add popf jmp sbb inc jmp (bad) fstp mov cmpsl jne dec lea pop imul mov inc dec mov jmp inc add jmp mov dec mov xchg inc push or aas dec cmp jle std dec mov jmp dec jne dec cmp dec mov jle push dec mov dec int add jg add dec shl dec lea dec add lea dec lea fisttpll sbb inc stos mov dec mov iret ja mov sub pop dec mov jg popf jne push cwtl adc dec lea dec mov sbb push ja aad test dec lea lock insb dec repz lea enter cld pop dec add test dec mov inc jnp xor lea sub incl rorl stc dec mov dec cmp ja jmp fistpll mov sub scas out sub sub jge sbb mov jbe mov dec shl jae xor mov dec je ret mov dec sub dec add dec sar into mov aas imul jg lea roll dec lea fild add add lds dec sub dec mov inc test pop clc jmp fisttpll adc cli lock jbe sbb test adc loop shr test push and nop test cli add or push mov jo fistpll mov je adc (bad) ja (bad) sti add jmp mov decb add cmp aas add cmp jae mov lods add rorl jbe add mov cmp dec mov iret xor call aad aas add (bad) jbe dec lea (bad) out ja sbb sub push add ja dec cmp jae data16 addr16 inc mov add aas push push add jmp nop (bad) aas insb addr16 and aas dec cmp dec cmovb dec cmovae inc cli out in decl inc ljmp sub fnstenv popf dec test jne inc dec lea dec mov dec sub dec mov push dec cmp (bad) sti stc add mov decb dec scas add dec sar dec mov fistp out je dec mov movb add in add dec push cld mov add fisttp add (bad) incb pop adc push mov mov addl fs fdivr jmp sbb aaa clc cli push ret lods dec aaa pop int3 or hlt das out ret call test idiv lcall aam inc push inc mov call fsubr lea adc push int3 dec adc in inc sti cs mul in sbb dec sub pop je loop (bad) stc (bad) incl jno movsb sarb fdiv (bad) stos pop std (bad) jmp add movzwl mov mov adc inc adc fdivrp fs pushl lea dec cmp dec mov jne jmp dec dec cmp je (bad) (bad) or sub sub call dec add data16 fbstp mov sub movzwl mov fbstp lds jmp aas out dec mov addb decb inc push cmpsb test fucomp adc inc dec cmp jne lock cwtl inc rorl ret dec cmp (bad) lcall jns dec lea dec mov dec sub dec add dec and ja (bad) decb dec mov dec sub lods add push roll and xorb mov insl sbb push xchg aam sahf inc ja mov test inc rorb stc add stc add jecxz push je std dec add pop ja loop jb insl or jae sti xor mov xor sbb call pushf add and mov (bad) jecxz jbe add daa xchg lock (bad) pop add dec inc jns cmp test or into mov pop and dec sti or xchg cmpb notb xchg push and mov dec cs dec fldenv add fldenv jb sub and and or mov outsb or or rclb loope testb sbb adc test add pop dec mov les rorl mov sbb jmp mov sbb lret push hlt pop sub sbb add mov mov dec mov inc dec out inc pop pavgb mov aad push pop xchg orb fadds pop sub add punpcklwd dec mov dec mov dec lea call out sub sahf and sbb and and sti or sub xor or out dec sbb (bad) jne jmp das or insl sub dec mov jne das pop std cmc decl dec sbb sbb mov xor push sbb cmp dec cmove xchg push jno mov mov cmp or mov fnstcw and mov add mov or in xor das into clc or fs push ret call mov adc or (bad) mov call adc fwait add call mov lahf dec dec lea cmp push jb jns out ret cltd add dec mov xchg pop jo sar test jne jmp pop mov inc xor cmpl inc jo cmp xchg rolb cmp pop xor and inc adc inc sbb ret or or mov or xor setle dec adc mov roll mov fucomi add inc punpckhbw and leave inc cmp and mov mov dec jns (bad) fdivs dec fldcw inc mov call and aas dec xorl dec mov (bad) and xlat mov dec dec clc push arpl fsts pusha dec inc dec adc nop xchg sbb sbb (bad) or scas dec sbb (bad) mov or mov (bad) decl cli mov sti pop pushl cwtl cmp xor sbb or jge fbstp inc cmp roll push jnp jmp icebp call test sub xor enter pop das cltd dec dec fs adc push fisttpll in orl rcrb gs (bad) pop icebp call xchg or lea js pop insb nop xor xchg out fs dec push mov mov test dec mov pop aaa hlt jg mov dec mov call nop add dec add call imul sub dec lea dec mov dec leave and pushf cmc popa ds jmp inc stos mov ret call push lds and jecxz inc (bad) in sbb dec mov dec mov enter xchg sub dec cld je dec fnstenv xlat dec mov fimull cmp je out pop cmp je dec mov sbb mov jne push dec cmpl (bad) jne jmp pop pop dec mov dec mov sar out leave jne dec mov jmp dec mov dec mov adc add rorl sbb test pop dec (bad) out jp pop dec jl dec mov dec mov dec test dec mov je ja in adc or mov scas mov push cmpsb (bad) (bad) out es or dec mov inc mov inc mov inc mov mov outsb inc test inc (bad) jmp dec push nopl orb inc movl subl mov iret cmp adc cmp ss mov adc dec mov pusha sbb mov push je inc cmpl jne testb or shrb rcll bound decl mov dec cmp lahf scas jae out ds fs fwait test mov pop fstps dec mov test jne jae roll aam (bad) (bad) mov cmpsb lods out decb or pop or or lock cmp ds pushf adc das fistpl je push jne dec mov xor and rcrl gs xchg jne inc and inc push dec pop mov dec mov lea cwtl das inc aam cld adc pop dec xchg or inc ret pop mov inc mov into fst sbb or jno xchg rorb or jmp dec mov cmp sbb dec mov inc aas iret lock mov or dec test je xchg inc (bad) (bad) pop ret xchg dec mov adc xor inc pop out loop add dec xor push sbb into icebp jg pop pop sbb int out stos or pop cmp cmp pop jle lods mov inc inc in cmp jmp jmp cmp ja cmp insl (bad) jne jmp fimul jmp (bad) adc xchg cld mov mov mov jmp shrl loop xchg add pop cmp shr (bad) addr16 addr16 arpl sbb and aaa xchg dec enter mov popf jae jecxz ja dec xor or dec ficompl inc mov pop adc mov sbb je add repz xlat addr16 inc mov and or sbb js ficomp or je test je (bad) loope movsb adc jmp xor or ljmp fidivr test inc mov dec mov gs into lock jmp orl (bad) data16 pop sti sub clc or pop or add rol jmp ljmp loop (bad) jne dec jmp and mov sbb push jmp mov inc mov test divl mov (bad) sbb inc push add sbb test jge dec cmp rcl lock push addb jo das jl dec cmp je dec push inc fwait xor jle inc cs stos ret rorl cmpsb pop sbb push xor mov test jne pop fs imul add jne (bad) or add pop xor jns jae jne dec mov int3 push mov je sbb sbb fisubl dec jecxz cmovae pop lea dec cmp xchg (bad) sahf push int mov dec inc add xchg lock or xor xchg je cmpl jne jnp loope arpl or push sbb adc or (bad) das rorb inc dec mov push stos inc mov inc sbb cmp cmpsb push enter dec mov push aaa or jb lret hlt outsb aaa dec or cmpsl xor sub push adc dec sbb xorl aad cs mov or lret push rorl bound fcoms jmp fcoms dec dec or rolb adc outsl push jmp ret jg arpl das ljmp mov push sbb sbb cmp sti dec cmp je dec (bad) jg sbb out maxps nop aad jmp pop jg sbb repz or cmovns cmp xor sbb adc mov adc ja lahf (bad) xchg jne jb jmp scas pop js mov mov mov and jne sub push mov ret ret or sbb fisttp (bad) std addl jmp iret popf orl repz aas sbb scas jg incl lret dec mov dec mov dec lea aad dec lret dec cmp adc mov stos lcall adc dec mov jge ret mov testl ja xchg ljmp scas (bad) sub pop sbb mov jbe loope decl xor dec lea call rorl movb sbb jge pop gs and pop xor jns ss adc dec mov call xor push ja ret stc mov dec cmp je call les imul push and nop mov dec or aam or inc movsbl cs test outsb pop inc xor je lds adc xorl xor jg lea pop xchg call dec std pushl (bad) xor dec mov dec mov call add mov dec mov dec add call call pop fld1 push xchg and lahf repz cwtl add addb fldl2t sbb push ret add hlt (bad) sbb rorl lea loop pusha outsb into push adc orl call inc cmp pop (bad) mov pop jmp push lea pop xorl mov popl mov std cli xor mov pop fdivrs idiv call add push add sahf out mov in std ljmp or loop push enter mov mov pop jge push cmp fcomps jmp (bad) (bad) adc aas and rclb fst lea inc clc dec xor dec mov mov clc jmp xchg jne pop dec lea outsb insb fs jmp daa sbb or lock psubsw mov jmp das mov and lret mov (bad) fldl call dec test je and inc sub outsl call pop ficompl add shr (bad) sub sahf dec mov loop rorl fist ret jns add call add push add mov xor popa bound jp addr16 ljmp (bad) (bad) idivl dec and dec sub add repz stos xor and pop pop fisttp mov imulb mov cltd (bad) fnstcw shlb lea in (bad) sti and cmp js dec dec dec lea std mov lea or fisttpll test mov (bad) cwtl add lahf aas sbb dec add dec mov mov lea dec cmp jbe imul enter add inc mov enter ljmp lea inc cmovs mov fadds je dec mov cmp ficom jl call rcrb inc iret pop cmp out (bad) das sti out dec mov clc add call dec enter loopne jge jg push lcall fadds cs lock dec mov dec arpl jge push lock mov push xor cmpb shr xchg dec aad call testb dec lea hlt je dec mov add (bad) fidiv fsubr jle jbe and xor ljmp pop mov fld1 pop and incl pop outsb ret and ret call add dec inc adc xchg lea les subl adcb cmp push leave stos and arpl pop stc call les mov call (bad) je testb xchg mov pop push (bad) push add shr (bad) jg dec inc add dec lea inc mov jmp mov (bad) std (bad) call jmp pop das call outsb sbb cmpsb je dec and jmp (bad) jg ja mov test js sub je cmp je mov dec outsb sbb push mov inc aam ret jmp and pop mov sub sbb scas and (bad) in and jmp call ret data16 (bad) in mov or add jmp pop cld iret jmp and out mov sub cmp jb jmp jne in (bad) jmp ror mov sub aam cmpsb mov arpl mov movl dec mov inc call xchg fldl call mov sub inc inc push dec inc or fidivr add enter inc cmp jae lock add negl pop scas jge call sbb xor call out mov mov outsl jp scas jbe xchg lea fld1 inc pop fistl fld1 mov push pop inc int3 and loop iret icebp cs (bad) call out jb (bad) lods nop lock dec mov dec mov call inc push mov call movsb imul inc mov add iret faddp inc fld1 mov (bad) (bad) call aam or cmp xchg aas les call les movsb lahf hlt scas fwait cld or add push lret das sub xor out jle jp lods (bad) call adc (bad) idiv call movq out ss add or insb rorb ficomp fnstsw add sub sub out leave cmp mov and test dec data16 test jmp inc inc mov push call loope into ss mov dec ljmp (bad) cmc jmp adc pop push fsub push mov (bad) cmc decl ss xchg push dec in (bad) sbb call adc cmpl popf adcl add sub into cld or mov pusha add or mov cli mov (bad) out pop push call xor test jne call decl jnp jo xchg je in lahf dec imul fwait pop cld mov (bad) mov sti scas jg call add sub loop sub pop cld mov add pop leave std (bad) mov push sbb faddl stc mov jbe add dec mov push inc lea inc out push or fnstsw xchg sub pop inc xor add mov or fcoms rcll push inc and xor pop push pop mov out pop or call or dec adc mov push hlt sbb xchg hlt mov rorb mov call (bad) out or out sbb scas pop and orl inc sbbb and loope lods sub dec mov pop jmp (bad) push jae inc add lcall flds pop (bad) mov (bad) pop (bad) lds add add daa dec adc sub cmpsb nop aad adc jge in mov lock jo inc mov iret mov add pop and loopne pop sbb in fld scas pop push mov loopne dec das cwtl pop fsubs pop pusha pop mov add push int3 inc aam inc or mov mov or arpl add data16 pop scas pop add add cld and popf out or and mov sysret add sbb popa or outsl das (bad) outsl fadds and notb or sub sbb popa out xor mov cmp daa add sbb mul lds mov das rcrb in pusha pop inc pop (bad) mov sub rcrb or pop mov add sysret (bad) in test jge std add xor loope xchg test sbb lock pop js pusha or add mov or mov fldl jo iret adc cmpb and mov fildll add mov data16 adc jg sub insb add je insl add (bad) (bad) ljmp add imul jb outsl jb insb outsl add outsb outsb arpl (bad) (bad) (bad) ljmp je je insb add addr16 je jb popa fs push popa je out (bad) out add add jb gs bound outsb add js xor stos test pushl arpl je add cs xor jbe jb (bad) out outsl xor add es add outsl add addr16 addr16 (bad) out out xor outsl outsb push pop insb gs insb add pop arpl jb outsb je lahf or popa mov or addr16 pop leave nop gs adc fistpll jne jle int3 (bad) push add ror lcall (bad) lcall add popa jmp cmpsb imul rorl stos or mov push pxor pop (bad) pop xor add aas jnp xor call inc loope test (bad) jns push adc push mov inc and ret fsubl dec inc dec push push and arpl jbe fs jnp clc and imul sbb pop add dec dec push sbb pop xor cmp xor out mov gs or and sbb mov ja insl jb insl and jae add pop and sub mov (bad) xor sub inc je insb sub clc and mov and and insb idiv mov mov popa gs add push idivl xor insl or (bad) fnstcw out aaa or sub in jmp or add and and adc fdivs add and (bad) (bad) incl add imul sub push outsl outsb jb arpl cmp xor xor sub insl frstor outsl sbb insb (bad) adc (bad) popa jb insl jae cmp loopne jge add (bad) aas insb outsl bound je jb gs pop loopne pop and jmp jne insb imul into es pop add mov popa fs outsb outsw and push and scas jne jne adc test in sub outsb outsl outsb arpl sar popw into insb je aam outsb popa jne push xor jne and and and adc nop fidiv inc cmpsb gs and cs add cmp and mov es shrb arpl setnp fs push pushl jae jo test xorb adc or cwtl imul inc sbb dec push sbb rclb outsl int3 (bad) (bad) jmp xor outsl jb jae outsw jne and add decl lcall in (bad) or (bad) mov call pop (bad) lcall sub dec jmp add pop mov xchg or vmread xor dec add add jo jae add andl sar add outsb outsl ja std ret cmpsb ljmp add and jns je gs jo jns lahf mov inc sbb outsl je insl jne je lock pop push std bound insb insb outsl ja lcall fimul jns outsl (bad) jb jbe insb jne jae add or scas ja cmovnp jae outsb and outsb popa insl testl and push test gs std jg or daa arpl outsl outsb and je jb xchg mov xor insl add mov insl popa and and jge outsb das sbb pop fs popa jb popa jns gs gs sahf sti jg out xchg dec outsb arpl arpl gs imul incl pop jne gs popa jo and jae push cmpsl sbb das jae outsl addr16 dec js divb imul dec inc int3 sub daa dec arpl rcr (bad) popa arpl push sub mov out outsl dec jno xor xchg std adc insl popa jb gs pusha xchg gs jne fnsave jo jp and addr16 and jae (bad) popf loope outsl jb es jne insb gs data16 jo loope popf and outsb and lock sbb outsb and mov add push gs imul cmpsl fs dec mov lret call outsb jae arpl imul popa js xor push add psubsw jns push dec dec and std lahf movsb and (bad) add idiv loop idiv jb xor roll mov dec xlat xor daa xor and jae (bad) xor add sbb add int or mov mov addb (bad) sahf std push lcall inc or lock and and shr sbb xor cmpsb push sbb inc lahf xchg aaa dec rolb and ss xor or xlat fs or jae fs fs cltd fadd jae je call pushf dec inc push xchg and movzbl sti jg add mov insl and jne insl push pop (bad) neg daa (bad) or jne insl jae cmpsb lock mov and bound sbb jb xor jg xor arpl jo pop push fs das xchg xchg aas iret and ja ret pop adc or outsb imul jno outsl and and jo rorl or ja push (bad) popf xor xor jbe sbb push sbb push add push (bad) and shrl and add (bad) jmp gs jb arpl add das das add mov mov jo outsb imul and ficoml imul (bad) fcomps push jb and dec and sub jo cmpsl outsl xor insl jb insl test insl popa cld push cmpsb dec (bad) cs add outsl loopne or bound insb je cmp xor and xor aaa and imul adc and and popa (bad) (bad) ljmp js ss ss inc inc push sub or jne aam lds cld arpl jo outsl outsb fwait je or and add adc je sbb addb sbb incb popa (bad) mov inc cmpsb xlat sbb jb (bad) addr16 fdivrl and mov add (bad) idiv dec xor (bad) jne inc add cs (bad) xor rcrl add xor fs push and rclb insb insb add js dec or andl dec enter jo and (bad) daa and jae (bad) add and dec add mov loop inc mov cld pop lret mov xlat pop loop inc dec popf add jae sub outsb inc sub out add xchg syscall add test mov xchg pop xor repnz add call jb jb and ret sbbl test pop jo xor or test fsubs push imul pop push push in adc add push mov popa jbe bound imul cmpl jb fisubrl cwtl aas divb jo imul sarl insb lock sub sub add js arpl sub fdivl add outsb je xlat jb sbb dec in mov jb xor or (bad) popa data16 jae nop pop push gs fdivl cmp inc (bad) mov adc pop nop inc xchg push ret sub inc or adc shlb pop test jg pop xor roll or fdiv pop mov ds add ret in aas mov add aas scas pop aaa test jb add jnp ds pop or mov insb mov jg pop push sub inc push insb into pop fbstp and pop (bad) mov add outsb imul lock clc add sub and (bad) jmp jo sub out or sbb push lods aaa divb jecxz popa lahf inc (bad) incl adc arpl mov jg push push or sbb dec lahf in jae inc mov pusha dec and adcl aas fildll shrl jg xchg shrl arpl push pushf add cmp push (bad) aas je popa xchg aas test jmp mov aas popa cmp imul lods (bad) (bad) (bad) cmp cmp push cmp je push cmp jne dec cmp push insb cmp stos add ljmp push cmc mov pop dec push push dec dec dec push pop or push xor sub popa sub sub dec inc dec and inc cld mov fs jne je js movups sbb and sub test in cmp xor or outsl xchg and jb jb iret int dec femms cmp fdivrs push xor cmp inc in jp shll outsw jb fcos and cmp dec inc dec inc inc mulb mov dec imul (bad) jnp jo pop cmp push dec push inc xor adc je icebp dec test cmp neg sbb and gs and loope fsubr jbe popa jbe xor push rcr (bad) push jb (bad) xor popa jne outsl cmpsb insb arpl es mov outsb and pop aaa je fs jb outsb je jecxz ljmp sub cmp insb dec outsl jb adc fbstp jb xchg jnp sub cmp jns bound and imul sti movsl jne movsl (bad) adc and pop push pop arpl push out or inc mul ljmp gs sbb cli in mov (bad) fldl jae je jo outsl arpl jae sbb (bad) (bad) fbstp inc push push and jb sub sub insl popa jae and js push xor mov xor inc enter jmp out lds add xlat add and insb gs xor outsb test jnp ljmp (bad) pop adc mov adc and in fiadd test mov data16 xchg mov xor andl leave jo or mov aas dec inc ljmp xor std out shrl xor imul fimul pop add aas les pop arpl je insl and push xor lahf movsb push xchg ret jmp mov jne add stc xchg mov push arpl movsb lahf (bad) inc dec dec mov and mov and ljmp aad sbb inc sbb and (bad) insb lods ljmp pop insb and lods jle push lods popa xor out es adc jne and adc push sub mov mov lret and insl outsl fs lcall cmp or adc push push rorl popa jbe je test jb sub roll sub push jnp add sbb push sbb sub or fstpl xchg or (bad) fsubrl inc adc mov and inc and jb mov dec nop mov dec ret fisub ds jb push mov lds lret int3 and dec xor cmp int3 pusha push imul das sbb rorl stos cmp mov jb insl arpl fsubrl sbb js sub insb popa jns imul cmp cltd sub add and sbb sbb pop and inc or inc (bad) addr16 shrl cmp and sbb fdivl (bad) add jle hlt maxps insl and (bad) push inc push push mov daa movsl cmp mov (bad) clc das and and and das popf icebp insb pusha daa cmp insl push fs gs and insl dec scas adc fs aas xor jbe imul and sbb insl inc sub int3 mov and or insl push dec push inc inc inc push (bad) adc ss and daa lock and and insb popa into lock inc aas and int3 push fsubrs je fwait int and push dec push push andb call pop sbb arpl mull pop cmp dec pop nop add mov mov inc and inc inc fcmovb scas pop pop or jo arpl xchg pop and or enter ss rcrb (bad) (bad) sub and dec xor and push in dec inc das pop lods add pop subl and mov xor insb insb pop ss adc dec and jge cmp cmp sub enter xorb dec dec dec inc dec xor adc cmp xor adc flds xor and in (bad) pop mov (bad) popf add pop daa push daa jo pusha or loopne jmp add cmp push aas outsb das sbb mov jae jo (bad) push (bad) fisttp jae xor xor mul cmpsb xor cmp or sub ss dec das stc insl loopne cmp jbe data16 fwait mov cmp mov add sub (bad) ss test push dec adc movsb jb cmpsl add movsb mov lcall clc pop xor dec push add dec add arpl imul or add xlat jne add jb imul add or fiadd dec jne gs and ja (bad) jg xorl call jns outsl adc cvttps2pi (bad) (bad) bound jb jno imul fdivrs imul adc add insb inc gs xor or and push imul daa jne and and add cmp sbb xor xchg inc sarl and inc out mov sbb inc sbbb pop iret jno adc inc inc or cmp cwtl or add ljmp idivl dec ret ljmp lock mov fldl jl mov add outsl testb orb pop sbb jo or jae in add or fstpl jae push add jnp xor arpl add fsubs add outsl mov ja adcb scas or xchg add add (bad) (bad) (bad) incl add push (bad) xor movsl hlt xchg movsl xabort xchg test pop mov mov cltd (bad) (bad) (bad) (bad) out idivb lea pop or (bad) or mov ficom enter mov (bad) (bad) (bad) ficom cmp nop lock lock pop add add loopne,pn loopne test into push roll push out sub sub sbb mov cmpsb bound jl out lcall in pop mov mov lcall add mov pop mov inc rorb (bad) (bad) (bad) decl xchg out xchg out sarb adc mov es jg mov into inc leave inc pop leave (bad) (bad) (bad) decl sbb outsb das in das (bad) in inc mov test mov inc sbb sbb std (bad) (bad) (bad) lcall pusha and inc and fidivrl push push add add mov (bad) (bad) (bad) jmp fwait jbe pop in sub pop ret ret lds and sbb cmp jp (bad) (bad) (bad) (bad) cmp mov (bad) out pop out fcomps jle ret inc ret cld inc jle repz add icebp add (bad) (bad) push adcl rcrl in in pop push pop mov pop xor mov call stc loope or jmp scas xchg scas fist jae dec jae bound push (bad) (bad) (bad) jmp imul push aas sub sbb or adc xchg arpl push divb push xchg inc jmp gs (bad) (bad) incl jg pop loop pop popf xor sub sub aaa iret clc mov or adc adc (bad) (bad) (bad) decl das jmp mov pop mov push adc or and pop ss dec ss lods mov mov fwait (bad) (bad) (bad) lcall fistp cmp es es cmc mov dec jg dec int dec (bad) (bad) (bad) (bad) jg push mov ljmp sbb sbb cmp je mov (bad) (bad) (bad) lcall inc jb jb cs inc ja ja sub mov mov sub sub (bad) (bad) (bad) pushl mov pop movsb movsl add add movsb jbe xlat dec xlat in dec jbe adc popa mov (bad) pushl dec cli into jge fisttp push fstpl fstpl xchg jno mov lcall mov xchg mov mov cmc cmpsb mov imul add (bad) mov sub cltd sub inc loopne pusha mov (bad) (bad) (bad) inc and and pop jecxz cmp inc repnz sub sub in mov or mov (bad) incl inc lret lea jo jo fldenv scas fisttpll in jb in jns jns ficom jmp addr16 cwtl mov and and mov pop fimul adc mov insl imul mov sub dec jnp in sahf in in xlat cmp cmp push in xchg push lds xchg clc (bad) xlat bound xlat lcall push adc xchg adc bswap mov (bad) (bad) (bad) (bad) fnstenv adc leave adc add or or push add cbtw sbbl pop lock pushl js lock aad mov jecxz xchg jecxz mov pop repz incl sbb pop rcrb addb mov in jle aas and (bad) (bad) (bad) (bad) fistpll test dec fsub dec jo std or or add arpl jp jp fbld (bad) (bad) (bad) ljmp pop rcrl ja xor scas inc out arpl jo xor xor in (bad) (bad) dec sbb rcrl in out adc adc push std mov gs mov aam dec sbbl and adc xor es xor ret mov das jno das ret mov loopew xor enter push xor dec or mov gs cmp cmp xchg push push stc cmp (bad) (bad) lcall repnz popa popf (bad) popf jecxz cld jp leave inc leave hlt inc jp daa out lods out mov decl out xor sub sub out movsb xchg movsb xlat xchg out cmp mov sbb (bad) (bad) ljmp cwtl sbb daa rcrl sbbl data16 mov push (bad) (bad) (bad) call (bad) jle test push cmp out out stos cmp xchg sahf sbbl inc lret lret (bad) (bad) (bad) (bad) mov sub imul imul inc cmp push cmp cmpsl sub jns push jns mov cmpl sbb lods aaa lcall xchg dec cmp cmp fs (bad) (bad) lcall push fs rorb call and and push adc in (bad) fistl call push or sbb or cld mov mov insb dec mov imul lahf js pop out pop lahf mov lss popa outsb mov sub icebp cmpsb icebp xchg cmpsb les (bad) test jb cmp (bad) (bad) (bad) inc mull mov pop mov xchg aad push xor xor mov (bad) (bad) decl inc lds jmp jmp pop outsb ficompl ret scas mov add mov mov (bad) (bad) lcall fs icebp insl shrb rcrb xchg loopne fcomps (bad) mov stos mov lods (bad) (bad) (bad) (bad) mov cli lods repz or or pop repz mov and scas ljmp (bad) (bad) jge mov addr16 and sub sub sbb outsl or (bad) outsl lock (bad) (bad) pushl mov sti mov mov outsl dec pop lret xchg mov insb and jo cmp (bad) (bad) lcall icebp or push (bad) push out jae fs repz and and mov and jl call lret pushf call arpl xchg ljmp popa (bad) (bad) (bad) lcall jg jg fsubl pushf xchg xchg fwait xchg test stos nop stos fistl (bad) (bad) mov inc jl es les les sub stos in stos int3 nop jecxz fdivs fcoms decl syscall (bad) add add cmc add sbb adc cmp sbb cmp mov push (bad) (bad) decl pop push mov stc scas imul shrb mov xchg pop cltd (bad) (bad) (bad) pushl pop call push imul daa not mov fsts cmp jmp (bad) (bad) (bad) fidiv jmp in mov push mov and xor xor rolb mov test cmp test orb pop xor repnz repnz xor pop mov cmp (bad) (bad) lcall and and sub and and xchg fistl (bad) (bad) pushl ljmp mov mov push jp add popl pop (bad) (bad) (bad) decl clc adc fwait sbbb cmp cmp sbb jne jne fisubl (bad) (bad) (bad) incl xlat test push (bad) push adc test add mov (bad) fcompl pop pop ret (bad) sub (bad) (bad) jmp lret mov push mov pop ret cltd ja mov pop push sub adc jnp inc lret inc (bad) lret jnp sub (bad) pushl cld test or (bad) popa fcmovbe insl sub dec cmp cmp lahf and push and (bad) (bad) call or adc add cmp movsb (bad) xor or and inc icebp (bad) (bad) pushl sarb iret push mov mov lods rcr jl mov test pop or (bad) (bad) jmp pop or or or push femms or or or add (bad) (bad) ljmp push or or add push add pop add add or add (bad) (bad) incl push add or add femms add or or or add or (bad) (bad) jg add pop add add push or push add add or add (bad) (bad) incl or push add push femms or add or or add pop push xchg and ud2 or add ret add das (bad) (bad) (bad) jmp or scas addr16 cmp dec movsl jg push push mov fwait stos flds (bad) (bad) (bad) lcall sahf add ss fnsave cmp divl or call adc stc movsb dec cli das popa inc push insl lret (bad) (bad) (bad) (bad) fisub jnp adc push subl dec (bad) sub cwtl (bad) (bad) (bad) (bad) cmp pop inc cli pushf add rcrb data16 mov (bad) (bad) (bad) lcall lcall or add xchg sbb pop out fcoml mov adc fdivrl adc or cmp stos js aas sbb roll (bad) (bad) (bad) lcall (bad) int3 jle frstor pushf xchg rclb (bad) sub fbld arpl cld and ljmp loopne sbb add in test icebp add std xchg xchg mov addl (bad) incl das sub sub mov jae clc mov jb sarb (bad) (bad) (bad) call les outsl cmpsl (bad) adc mov in mov cwtl cmpsb mov (bad) (bad) decl adc aad stc mov pop loopne ss push inc sub into sub (bad) (bad) pushl cmp jae dec cmpsl (bad) cmc pop pop outsl dec addl cmpsl add push addr16 xor push or mov inc je movb outsl (bad) jle jnp push (bad) (bad) (bad) decl movsl dec clc movsb rclb icebp sahf xchg adcl pop inc repz (bad) cld lahf (bad) (bad) (bad) lcall in inc push and in add hlt leave test xchg cmc popf cli xchg fcoms jle and push movsl pop (bad) (bad) (bad) pushl mov cmc jg shld mov mov dec shrl inc jle test sub jo (bad) (bad) (bad) ljmp mov xor xchg icebp sbb sbb push mov inc call jge (bad) (bad) (bad) (bad) call repnz jp fwait xor rcrl sbb fisubl dec repnz (bad) mov (bad) (bad) mov decl clc mov xor sarl inc lahf ret shl mov (bad) incl sete adc icebp xor jno add inc in xchg jmp das cwtl dec mov (bad) (bad) lcall adc xchg (bad) jle dec icebp loop (bad) xor mov int3 outsb mov movsb aad (bad) (bad) jmp ficompl sbb xor call pop and (bad) (bad) decl xor push pop lcall and outsl test into lods jg roll (bad) (bad) lcall (bad) fstpl rcll sbb stos movsl mov lahf cmp imul push out jle mov (bad) (bad) (bad) jns test mov push out sbb push (bad) jbe inc ret jge add xor shrl in in and andl cmp test ret cmp subl inc (bad) (bad) (bad) (bad) cmp sbb inc repz inc lock sub dec insb shlb dec std mov push pop out lea or sub ficompl xlat dec push cmp test movsl jmp mov jmp push or pop sahf jne in pop xchg push mov mov push clc mov (bad) (bad) (bad) (bad) cmp jne hlt (bad) jb sbb fs lods sub xor insl insb xor push mov popa (bad) (bad) (bad) jmp repnz xor jne sbb mov mov add inc mov or (bad) (bad) lcall mov mov dec mov push pop xchg cmp jns jne mov scas aas ljmp idivl hlt jle dec and push mov cmp inc mov aad mov (bad) (bad) (bad) (bad) cmpsb scas repnz or imul clc jl jb pusha dec inc loop int3 or imulb cwtl (bad) (bad) (bad) pushl mov mov movsw out (bad) out push hlt mov mov out (bad) adc std sar (bad) decl hlt push leave imul rcll loopne push jle scas cmp ror (bad) (bad) (bad) push jecxz fwait rorb stos into xor sub repnz cwtl or into clc lcall sahf jnp icebp jns call outsb add push push out addr16 out repz or mov (bad) (bad) (bad) incl into cmp push test add lret mov inc adc (bad) and (bad) (bad) (bad) lcall dec pop gs jl cld xchg xor inc rorb lret inc or mov out cmp idivl xor jmp mov add clc outsl mov lahf fsubp mov fist cmp div adc inc mov stos daa mov push lea stos ds stos and into xchg mov testb jae stc rcrb pop dec sbb dec std and mov (bad) (bad) lcall jo push btc int fwait lcall jb jne mov outsl sar (bad) (bad) decl add add mov pop lea out or xor pop repnz popa mov mov push sub insl sbbb (bad) jne cmpsb test clc cmp add (bad) (bad) jmp add inc mov mov outsl out adc rol test cmp mov pop rcrl push in popf mov push cmpsl push mov mov jecxz cld (bad) test sti push pop inc js mov dec dec push (bad) (bad) (bad) (bad) cmp fcoms cmp dec fiadd push xor and (bad) addr16 scas (bad) (bad) (bad) dec dec nop (bad) mov xor inc dec ss push mov dec inc in (bad) and cmp push fwait (bad) (bad) (bad) (bad) jg daa fildl sahf cld mov push pop lahf ret stos or rorb mov (bad) (bad) incl cmp cmp fst jp test jne xchg xchg insb aas mov jmp (bad) (bad) (bad) jmp jmp int jnp mov rcrl xchg pusha aam cli add add sahf es mov dec aam xchg ja mov add jp lock (bad) das test mov xchg mov dec jne adc or jge bound jbe divl (bad) xchg xchg mov inc subb pop pop (bad) (bad) (bad) jmp sub push test push add shll and ljmp xlat imul lcall sbb xor movsb adcl mov pusha cmp leave data16 data16 (bad) (bad) decl outsl into sahf mov fcoml call outsb adc xchg test cli push rcrl (bad) (bad) (bad) lcall pop fmul inc mov mulb cltd (bad) xchg movsl lods ljmp leave push lcall ljmp in je xchg pushf in lock stos sub frstor adc (bad) (bad) (bad) (bad) fldt mov test xor dec popa mov fwait scas movsb addr16 sub (bad) fnsave push in push bound movsb out sarl cmp mov in xor mov (bad) (bad) (bad) ljmp lods aas xchg roll lret mov sbb jne sbb mov adc jno and ss (bad) (bad) (bad) pushl mov cmp push por fwait andl rcll mov pusha (bad) (bad) (bad) ljmp dec pop (bad) dec lcall xchg mov mov (bad) negb nop push cmovle mov aas (bad) (bad) (bad) (bad) sti out nop fwait inc or pop mov mov xor fadds in push or add add (bad) (bad) (bad) sti mov and sbb mov lea nop repz cmp into (bad) (bad) mov and xor addl and mov adc mov mov and inc adc inc (bad) xchg dec (bad) (bad) lar add add repz outsl js jl std (bad) (bad) mov in mov xchg cmp xor xchg xchg (bad) (bad) (bad) jg mov dec or jbe popf mov push aas xchg dec fldl rcrb cld fidiv lds sbbl pop arpl repnz (bad) (bad) (bad) incl addr16 xlat stos jbe (bad) leave jge pop inc lock aam scas pushf movsb jb mov xchg es (bad) int3 xor (bad) (bad) jmp xor sbb and daa mov or pop mov (bad) cmp mov jecxz test add and mov push mov iret shr stos sti inc dec xor (bad) stc add cmp test mov cmp mov push ror or in pop xchg inc pop (bad) (bad) (bad) (bad) jmp sbb orl inc out mov fneni(8087 xor or and ret (bad) call lods bound enter aad test gs or cmpsb mov call fnsave mov mov dec add push popa xor sbb adc mov push xchg into push sub mov inc push mov mov movsl clc jl test (bad) (bad) (bad) pushl cltd idivb (bad) push repnz fisubr mov vandpd xor add add (bad) (bad) (bad) jmp test out (bad) sbb stos stos out jbe lcall (bad) popf mov (bad) (bad) dec leave inc cli jge xchg cli cli adc mov leave sti lock lods in mov aam pop (bad) (bad) (bad) jmp scas ljmp movsb mul jb xchg fwait rol jne mov loope std sbb (bad) (bad) (bad) call es ss jle aas inc cmc div add xor pop push movsl movsl hlt sar (bad) (bad) jmp in stc icebp icebp or jno xchg stos fcomp jae xor push sub add xchg mov (bad) jmp and ret ret pop xor sbb aaa xchg xchg mov das lcall and adc sbb (bad) (bad) incl loop int jmp dec daa daa imul jne adc or sbb (bad) (bad) (bad) ljmp je sbb cs sub mov pop out pop mov push divb cmp cld (bad) (bad) call (bad) popa jge mov push sub jnp jecxz ds das das jno test mov incl shr sub and pusha jecxz cld pop jns mov mov pop in aam (bad) (bad) ljmp mov addr16 cmp dec dec ficomp pop pop call mov rcl imul out sub stos in sti sti push xchg lds xor push adc (bad) (bad) incl iret jmp add push (bad) jg andl lahf lahf mov mov push push repz mov inc rolb xchg lods and cmp cmc cmc add (bad) (bad) (bad) (bad) mov mov scas fcmovu jne and arpl adc xor (bad) lcall std repz mov (bad) (bad) (bad) dec int sbb adc adc xor mov xchg xchg mov cs pop cmp (bad) les cmpsl cmpsl repnz jle (bad) jp cmp lods mov sbb sub jae xchg sar (bad) jmp mov sahf dec dec shll and push sub jle nop nop stos or (bad) (bad) incl lret out sub mov cmp (bad) jns pop pop loop or sbb (bad) (bad) (bad) jmp loopne xor push je cmp or push xchg dec dec fisttpl push or and mov (bad) (bad) (bad) inc ret rcl outsb inc lods lods out les cmpsb cmp xchg movsb shl in bnd mov (bad) (bad) (bad) jmp out mov enter aaa pop fisubrl mov lea fs dec dec rorb test (bad) ljmp lods push push cli repz hlt pop iret ljmp hlt jp mov scas jmp outsl (bad) (bad) (bad) (bad) mov js dec and jb,pn sbb and cmpsb cmpsb icebp jae mov xchg mov lret (bad) (bad) (bad) (bad) call fnstsw je ds pop and mov mov loopne (bad) (bad) pushl nop jl ds jno mov int3 data16 nop dec dec fadds add add sbb push adc (bad) (bad) (bad) jmp mov scas push push stc imul rcrl sbb mov jmp loope jmp clc adc cwtl cwtl mov adc xor imul pop mov cmpsl sub fwait fwait mov push push and jmp into dec stos push push call sub (bad) jp (bad) (bad) (bad) decl clc or or fcmovbe out xor push (bad) incl ret sub sub adc mov test push cld insl mov push cmp add dec (bad) xor push push add jge (bad) out dec (bad) xor inc popf inc xchg xor or addr16 dec (bad) xor ljmp pop ret (bad) xor scas push inc (bad) xor roll dec pop hlt xor (bad) xor or xor (bad) xor gs sub lgs ss dec (bad) xor cmp sbb xor aaa sahf sbb sub dec out sti (bad) dec popa into xor (bad) xor jno,pt cmc cmpsb jmp shrl sub pusha lcall mov cmpsb imul imul imul cmpsb imul repz mov mov jne lcall insl cmpsb imul imul cmpsb imul imul imul cmpsb imul imul imul out cmpsb imul cmpsb stc xor out inc pop mov cmpsb imul imul cmpsb imul (bad) push and lcall fstp xchg cmpsb inc les imul cmpsb imul adc cmpsb imul cmpsb imul imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul xchg scas cmp imull cmpsb imul cmpsb imul imul cmpsb imul jmp mov or sub sbb imul imul cmp add cld dec (bad) xor mov push mov xor dec pop iret rcl xor shr stos sti inc dec dec (bad) xor xor xor (bad) xor cmp test (bad) xor shll dec (bad) xor cmp mov dec (bad) xor push ror int dec rorl in pop loope pop xchg inc xor (bad) xor les dec shll jae dec (bad) xor orl dec (bad) xor inc out mov rcr pop or loopne (bad) xor xor or and dec (bad) xor ret (bad) xchg xchg in out (bad) xor enter aad xor (bad) xor insb push hlt ljmp scas or js cs mov dec (bad) xor call xor rorl mov dec ds dec add xor (bad) xor popa xor dec roll dec (bad) xor clc cwtl adc mov push xchg (bad) xor ror push sub mov xor mov inc xor (bad) xor inc cltd sub (bad) mov mov imul jmp ficom imul jb popl cmpsb imul pop fwait mov scas add and lcall cmp dec insb jle adc imul lcall xchg cmpsb imul imul cmpsb imul imul sub pop push add jbe jge lcall cmpsb lcall inc imul imul imul cmpsb imul add mov imul cmpsb imul cmpsb imul imul cmpsb imul cld jp mov fwait out addl xlat cmpsb imul imul imul cmpsb imul imul imul cmpsb imul cmpsb imul imul cmpsb imul lcall lcall loopne jno lret int3 nop add (bad) mull ret imul jmp lcall pop cmpsb imul imul cmpsb imul cmpsb imul sub jnp add insl sub mov xor popa jo imul add add outsb je outsb je push jns add add (bad) cmp jb insb sub or imul push pop dec mov jae inc jne push (bad) jg cmp popa fs add popa jb daa add add push push and insl outsl outsb inc and and je and (bad) lcall jns arpl arpl arpl data16 gs loopne out or insb insb add outsb fs xchg mov jo (bad) adc add add mov gs clc (bad) (bad) ljmp je jo je insl gs je jns jne jo jae outsb popa insb add xchg add arpl pop and and jo add add add add out clc (bad) cmp clc dec in clc lcall or imul enter lcall addl pop dec out jae inc or jns je insl fldenv and idiv pop add inc dec inc add inc inc inc push push inc inc push dec dec push push loop pushl push inc push inc dec dec or push push mov or inc dec dec push dec pop inc das inc inc out lahf insb (bad) dec dec dec pop push sbb inc inc dec inc inc push fdivr in dec pop or dec dec push inc inc dec inc inc dec inc inc xor pop in flds dec pop inc dec inc dec dec push dec cltd mov inc inc push inc sub fsubr pop sti (bad) inc push inc dec dec push or push dec push dec inc dec mov dec pop push inc push push dec inc mov push pop push or out ja push dec push xchg inc inc push push or ja xchg inc push push jp inc dec dec dec inc inc dec push push data16 lock test (bad) and inc push push cmc push inc push add pop dec push push add inc push dec imul (bad) lock dec dec dec push push push dec jno dec add out jne pop push add dec or pop into adc fldl dec dec dec push add add outsl clc lahf sti push inc push dec pop mov push dec dec dec dec dec cltd dec inc push inc addr16 cmp dec push outsb or xor mov push inc push daa inc push add dec inc dec xchg sahf jnp dec inc or (bad) decb push push inc push pop xor int3 mov lea inc dec push push sbb inc addr16 push testb jo inc notl push dec add or push jno divb inc (bad) push dec pushf push dec push rcll std vmptrst push push sbb inc inc dec push scas push pop push inc xchg inc les dec dec out dec stos adc inc dec pop xor dec dec dec add or and inc and aaa std insb imul outsl outsb add decl push jae fs imul scas add insb dec out fmulp jns imul sub mov pcmpgtd imul jnp dec sub jb jae jne arpl popa add hlt mov jb cmc mov ret pop jns jne add sub out fsubrs data16 popa addr16 jbe add lcall jbe cld push jno or negl loop popa outsb arpl jne popa out xor jge dec popa dec jp pop pusha lahf outsl jne test jb add aam pop arpl jge fs decb jae jb imul data16 decl jb insb outsl ja loop jbe fs mov outsl arpl iret inc xchg mov add andl je xchg adc fmuls sub mov or lods and mov addr16 sub aaa inc call arpl jo outsl jb inc (bad) notl jb jne jns insb or mov add adc cs add outsb imul add data16 mov add sub fildl add push out add and rcrb clc push sbb and loopne je inc int3 push cld lds jnp mov popa mov mov jo test (bad) mov add int3 sbb icebp push fwait add fldt and mov leave bound jne je shlb int clc sub imul ret ret xchg lock add imul sbb es dec xor imul sbb fcomi add xchg insl popa outsb cmpsb (bad) (bad) (bad) jns jae insl bound imul jae jnp fs mov jb and cli dec jne insb gs insl jge addr16 and fdivl outsb gs popf outsl ja add push push je xchg mov mov jae popa nop (bad) cld int3 lds jae arpl call in pop inc outsl jb loope outsb outsl mov addr16 popa arpl gs sbb dec cmp int3 cmc xchg icebp adc sub insb data16 adc popa js jne cmc add and imul inc nop push fisttpl and jnp mov orb test jb stos dec addr16 add add dec rorb push jg sub cmp dec sbb out mov add inc and jb lock dec mulb cmpsb push xor mov das mov in or adc sbb scas and sub jb and daa mov cmpsb cmp clc je popa outsb jae je fs add and clc and jne cs jae imul cmp xchg sbb je push das ljmp xor dec jae arpl jae sub (bad) mov or pushl add (bad) andl and sub add jb je and dec push jne neg test clc jmp add add adc lcall add (bad) jb das jne sub add add cmp pushf sub (bad) inc pop inc xchg jbe enter jge and fsubs xorb or js iret jne jb rolb pusha add adc out popa pop inc add pusha xchg aas sub mov lahf test das (bad) xor xor xor xor add ja outsb das dec push movsb xlat and sub sub adc and pop dec inc dec inc dec inc pop inc dec dec push inc inc mov jle incb and sub sub pop xchg sub inc sub dec mov push mov gs cs roll div push je je daa jle mov daa mov out push mov dec inc adc sti mov lahf push inc dec inc push push aad inc gs ret or inc js adc adc outsl outsl jo cmp loope and pop sub sarl cli lahf or push inc push inc pop add xor inc sub es addl hlt pop xchg jbe jmp gs cmp and add jne pop pop push pop mov jae xchg ret imul insb cs xor sbb sub mov inc pop inc pop mov insb or and stc (bad) in xor jg sbb stc lcall out pop sbb les stc jmp cmpsb imul pushf xor cltd cmpsb sti mov add out jl insb add pop pop pop dec pop mov add mov (bad) js mov jmp pop pop and jo or inc xor sub xchg add pop insl jne arpl jae add add sbb add clc pop loope mov pop jo je pop mov mov and ja and dec and (bad) gs mov pop inc push inc xor mov aad xchg fistp pop imul push sbb add and add mull or lcall decl jbe dec push inc dec dec inc popl xchg rcr push inc add pop call out aas adc packsswb pop pop data16 fmuls shl sub int or sbb mov jb je je insb outsb add pop pop jecxz sbb (bad) incl testb add add arpl add data16 (bad) (bad) jmp push add insb add outsb add jo jno jb je (bad) (bad) (bad) pushl jbe ja js jns jp inc add inc add add inc add dec add mov add add dec add push add push add add push outsl pop add (bad) jmp xor xor xor xor add add aad pop mov movsb popa dec pop and inc (bad) imul inc decb data16 nop and add dec stc pushl popf jecxz pop inc jecxz push dec inc stc lcall stc neg xor dec or sbb stc lcall stc decl add cmp cmp (bad) clc cmp lcall addps lcall std pop jp scas mov or or push mov sub sahf ret jnp xor mov mov jp sub jae (bad) jecxz sbb outsb gs daa mov and jge fbld shlb pop add inc sbbl push add inc pop cltd out lret xchg (bad) add jb add mov rclb arpl loopne gs and add out push xor mov je loopne (bad) cmp add jb jo jb sub popf cli sbb je jne and lds and sarb sub push sub jo fs les and xchg insb pop mov dec sbb and or inc and outsl das cwtl sbb sub out loopne dec call movsl and (bad) je pusha jno mov xor daa pop xor cmpsb jmp mov fdivr sbb sahf sub push ret (bad) mov ret inc and inc or pop dec push push inc push inc push inc (bad) dec loopne mov inc dec inc inc dec fs dec cmp mov mov add push add lret pushf mov daa dec dec dec inc inc xchg dec and jle add jne shrw into cmp adc and and push aad dec push push inc dec lods mov add adcl and ret sub ret daa inc clc xorb daa je pusha xor push mov jg insl mov jb,pn popa fs add testl aas insb pop out mov dec inc fcoms int inc adc inc ja je inc and orb push dec push inc jo jb je pop fs cmp aaa data16 and xchg roll ds add jl pop fwait push and gs jecxz and outsl jne add push jae jb outsl jb dec je insl outsl test xor cmp cli inc push xchg pop xorl push xchg dec inc push push inc pop sub hlt int3 jge aas sub mov sub mov test push scas test sub je pop sar pop pop aas pop mov jne pop and test sbb loopne pop dec or sbb nop mov mov (bad) int3 add das iret sub pusha ret je,pn cs jo add and mov jnp pop xchg pop or popa xchg daa fistpl xor or jp ret xor les psllw repz (bad) (bad) ds outsl data16 arpl jb insl gs mov jns jbe mov jecxz,pn sbb pusha fisubr (bad) dec push inc pop push inc push lcall das xlat inc push and push inc push pop mov adc int3 inc sub cmpsl sub movsl ret mov js movl pusha and or call sbbl popa ja popa je pop pop dec xor lds iret cmp (bad) jnp sbb scas push cs sbb cmp aaa fwait dec loopne int3 gs insl dec inc xor fldl pop hlt push inc xchg sub repnz sub mov push or jmp (bad) adc mov sar sub pop pop lock aaa bnd fs sahf and insb mov insb addps xor pusha roll enter sub data16 loope adc arpl inc xchg xor adc (bad) push popa (bad) (bad) fnstenv xchg mov add sbb xchg pop add subl or push pop and psubsb sub jle movsb aas jo scas inc inc dec inc adc or dec add fisubr sub (bad) xor sbb shrb add and ret or pop nop sbb arpl or outsl push or push xor pop xorb test inc (bad) mov (bad) aaa add out add es push je adc xor sub dec mov xor (bad) (bad) decl mov stos iret adc mov stc aam rclb mov incl stos add fs cwtl jb inc mov sbb and andb xchg dec and pop add add ret cmp imul inc incl dec push inc add pop sub je arpl dec sbb push xor pop mov bound push add je outsb cwtd sub ret sbb mov outsl add add add sti ja or adc xchg add popa pop gs bound fidivr jb cmp bound outsb jbe movsb jo jb (bad) fldl dec fs outsl jo add je outsb jbe jb outsb insl outsb cmp popa jb in push xor xor or adc or test sub ja daa xchg xchg add jb imul bound je js (bad) insb or push add sub jg jge or out and mov lea cmp jne call dec inc inc push push pop inc inc push inc mov or push inc push inc dec adc mov aas push dec dec inc dec push push pop dec dec inc dec inc mov push inc push inc inc lret push inc push dec out fwait clc inc dec push push sub push add push add cmp (bad) pop add inc jae push mov and outsl xor inc inc outsl jb imul insb imul adc add dec add dec add inc aaa xor std add dec add add fnstenv fstpl and dec add push push outsl sbbl push add push sub out enter imul ret xchg mov sub xor or xlat das inc repz aas dec orl cmp adc mov pop sub and push push dec add dec aad scas sti push mov xor dec cmc jae pusha mov or jbe mov push outsb add xchg pop or insb mov adc test mov fsubs add (bad) pop or test sarl or (bad) sbb inc xchg pop prefetchnta das jnp or pop or add push inc jbe sub pusha jl fsubs push mov cmpsl lret push or loop ja wrmsr enter and adc and cli dec add out shlb inc push mov dec push lods test push dec inc dec inc push psllw lcall lea js xchg jne mov pop imul shlb shr or cs and xchg xchg xor aaa xchg add add mov add push scas jl loop pushf add arpl inc adc pop in inc xor mov ds nop or sub adc fnop loop aas sbb inc addl push dec mov sub aaa fwait jne or loope pop adc xchg shll lods push cs mov ds gs mov push push les pusha mov jmp cmp fs push cli pop shrb add test shll xchg cli pop adc mov (bad) enter dec gs mov imul shrb stos and add pop or jb adc push pop les mov popa outsb (bad) add es imul xlat fwait push adc jnp (bad) jp (bad) je add aam sub add push in test inc jg popa fnstcw sub and jp inc insb mov push and dec push pop enter dec inc dec inc inc push pop xor push fsts push loope gs popa jo outsl jb mov sbb add addb enter into pusha mov test test pop push rol sbb rcrl xlat add push and push insl mov flds lods inc mov push add inc scas je scas xchg sub adc cmp sub ss (bad) aas xor pop iretw or cmc or and mov sbb mov iret cmpsl jb and imul inc cld das mov outsl adc jg arpl outsl jne and and sti (bad) jg add xchg ljmp cmp mov fs (bad) mov setge cli incl push xchg jg ret jae cmp sbb decb jbe pop fdivrl (bad) mov lea inc and mov in inc fdivs xor sbb ret add push out sbb sahf xchg xchg out xor add inc inc inc (bad) pop xor xor sti sbb cmp xor xor pop ja in sbb or cmp xor pop lahf iret outsl in cmp or xor cmp cmp mov aaa pop aaa fistpl xor xchg xor push cmp pop inc push sbbl pop inc push xorb ja sbb inc push jg inc or lods cmp xor mov cmp sbb es sbb xor mov cmp cmp jbe cmp leave (bad) inc mov xor daa addr16 fstpt xor cmp sbb jge ss cmp cmp xor insb jb ss xor lock out insb xor xor fwait into jne and pop test ljmp push pop or push insb pop inc inc mov fdivrs xor or add xchg cli (bad) sti scas jmp add pcmpgtd dec ja scas and outsl xchg pop inc inc fmul add (bad) pop xlat sbb jl push lcall les xlat jne lods fisttp pslld jle lret pop idivl sub xor mov out iret pop pop add dec xlat and add lock cli incl pusha call ret or sub sbb fildll dec fs push adc pusha negb jmp mov popf mov pop adc int3 iret adc sbb addr16 add dec inc sub push or test and popa ja ja xchg sbb xchg test cltd sbb or adc jne mov add add push addb and pusha sbb (bad) cmp inc and gs mov sub push inc push jg lret jae outsb fs inc push add xor mov and emms and mov and gs arpl ss mov sbb dec sbb nop iret cld xchg or xchg jne jae pop or add add and cli push add inc enter sbb add adc pop je je pop jae insb je mov jae jo or dec add mov push add pop inc add add inc adc dec add push add dec add push add fild hlt out add inc add pop jb popa add xorb add and or scas jb and push ljmp inc push push inc pop pop fucomip mov gs in sub jle dec mov mov dec dec popa fldl scas insl insl push add outsb add inc mov daa mov clc (bad) aas cmp add pop pop inc dec push pop push inc push pop dec inc dec inc push sbbl les add pop mov add fs insb add dec outsl fs gs add mov je push outsl inc outsl jae add pop shlb fsqrt add sub add inc xor push xor mov dec or jns push incl push jne jb push outsl insb jne sbb insl xor mov addl add jb gs xor iret cmp mov jae add pushf mov dec outsl je and add aaa pop gs dec push out add lahf out dec imul dec outsl inc push ja decl imul stc or push popa cmpsl in lahf mov push insb gs inc push sbb push add imul insb xor sarb pop adc arpl cld decl aaa mov dec outsl lcall popa je dec popa insl gs jns push add ja and cmp hlt ja add push outsl ja jb push jne test push inc push stc or add inc add jne add cs mov cmp addr16 outsl jo add outsl jae or mov shll push add (bad) (bad) (bad) mov frstor mov jbe mov icebp jge mov lret iret adc mov lds sub stos (bad) arpl arpl ds outsb je mov xor push and cmpb outsl insb insb pop sbb jnp fldl lods mov pop dec push mov iret fsubr xor lds pushl xor xor inc inc inc inc inc enter lret xchg popa bound gs insb ss mov and add idivl inc les adc dec push or repnz jp jno sbb push and push cmp lea and dec add loope xchg cmp negl imul pop inc or push add and xor cwtl adc shlb add xor or dec andps inc inc cmc cmp adc cwtl test dec inc inc pop inc pop push lock adc or add xor fwait push add outsb add addr16 incb rorb xor dec xor add adc (bad) pushl add pop add and inc popa je adc decl or and add in cmp xor xor xor jne (bad) dec xchg add inc dec push cmp (bad) ja data16 inc loop imul loop pop dec pop mov cld outsb addr16 add push imul jne aam outsb jmp pushf lods and iret cltd or sub das inc imul jecxz insl push imul imul jo sub xor arpl aad arpl adc dec pushf push inc push andb data16 sbb insl inc mov and xlat mov and imul inc outsb arpl lret add sbb sub jb ljmp packuswb outsb or lock or ffreep je outsb jne or add xor and imul xor add mov adc ss pusha and xorl (bad) enter ret incl fsubs adc mov daa push pop mov in aaa cmp sub lsl or cld jno sti lcall or cmpsb imul pusha xor mov iret call jg fs incl xor imul dec inc pop inc dec dec dec push pop jo dec call inc push inc inc inc and push add js inc testl inc jbe fs inc ja push jne pop fs das mov jo outsb jae inc dec popl cmp add (bad) cmp je arpl icebp insl insb ds ds insb gs gs pop (bad) cmpsb pop jae dec cmp sbb xchg outsl fs pop outsl jne and cli mov ret inc jns je rclb std mov and das xor je jae outsb xor and dec sub mov jo fildl sub mov add cli test jb inc or hlt xor jbe gs outsl jb outsl outsb pop popa imul add je imul adc or popa (bad) jmp shlb rclb daa and (bad) sti lcall cmp xor push nop fs dec cmp jp sub jae insl or outsb arpl lret push popa and sub push rorb es insb popa arpl lret outsl rorl jne sub mov es jmp or aaa mov push adc mov inc xchg mov push cmp sub add sbb pop cwtl inc cmp xor xor bound lahf pop mov and sbb sub mov outsl rorb pop fsubrs cli xchg jbe outsl insb (bad) push jae ret push inc push pop mov or xchg arpl pop and push insb lret inc loopne popa outsb fs xchg cmp insl popa jns andb pop xor xorb mov cmp adc mov movsl add jbe data16 add pusha pusha xor push xor and int3 stos nop nopl mov arpl and fldl call test xor insl insl jne imul mov add cwtl xchg add std mov and push insb gs push loopne sbb mov fs insb notb out bound inc in js inc popa cltd fild mov dec or push (bad) push and push lods popa bound xor popa arpl inc xchg ret adc dec add sbb int3 cmp inc xlat push fs (bad) jg adc das sti jmp xor incl ss call sti push xor lock xor pushl and pop loopne push lahf in ja jae or decl add sti fsubl push aas ds incl je add cmp addr16 add or sysret adc add testl pushf loope and aad lret sbb add sub mov mov hlt inc sub sub dec ljmp add add add imul aaa add orl daa adc xor and and orl add bound dec popa jb inc jo jns dec js (bad) fistpll jne add add jo dec arpl add mov sar or nop inc push sbb test sbb nop push sbb cwtl pushf mov movsb lahf add pop mov or in test add pop add inc cmpxchg pop or dec push jb pusha dec xor dec dec mov adc mov gs cmp add je dec cwtl or inc popa and ja jns jb sub or sbbl fs js or push and push mov add outsb je jg jmp inc insb jae and outsl je pop jae dec outsb jae data16 (bad) ja and outsl jb add jo inc gs (bad) jg popa test ja fs and imul fs call js test lock shll popa cmp sub test in lcall pop nop inc push sbb shl mov sbb aaa sub inc push sbb gs mov je add or test push popa jns pop jnp pop and inc outsl jb imul inc outsl jne fs out sbb inc inc adc add sub mov add outsl js and pop (bad) dec and jns fsubl imul inc outsl outsb gs adcl sbb stos and add or outsl outsl and mov push dec and adc and fs cmpsb fdivrs push popa outsb addr16 imul lods add js and rcrl jae std inc lods sub inc xor insb loope inc into dec sbb xor outsb add icebp frstor sub jb inc outsl insb sbb add pop out test xchg call daa call sbb or dec mov inc imul fs std dec outsl push repz sbb push or add inc mov jns push xor mov pop mov and jb insb jae fsubs jb jle out lret shll pop push in add popa out mov inc lahf inc push sbb or sbb push sbb ds pusha sbb jle xchg fs inc push pushf lods rclb (bad) enter or xchg pop pop inc push sbb pop pop xor dec add popa jbe fsubs aas xchg popf pop pop mov and mov pop pop insb or sub fsubl pop add sbb pop or je orl outsl imul mov dec js jns dec pop cld dec lret and jb rcll dec mov adcb inc jb ret add arpl or sbb insl jo pop push push dec mov je push xorb jbe (bad) loopne,pn xchg icebp pop add or adc or enter dec and orl fs adc aas inc test sub pop outsl jb je jbe and rcpps fsub or xor push std or popa (bad) negb add jae inc aam iret inc xchg and sbb orl stos pop mov xor and xor movups or or and or negb jecxz pop cmpl add out add insb and xor fdivs sbb mov jne gs and sub mov add jb cmp sub adc pop gs sub push xchg test pusha push or pop (bad) xchg stos or outsl mov and rolb sbb subl xor pop mov inc inc dec lds sbb (bad) out call rcr or aas inc xor push push inc pop dec dec push push dec xor dec inc inc and xor fnstenv inc outsl mov pop negb cwtl inc push pop push data16 adc xor outsl or xor inc lea pop push and push fs push div mov xor test sub push cmp inc inc dec push dec inc pop inc (bad) push jmp cmp enter arpl ja cld push popa jbe outsl jb or add and test push push dec inc push pop inc pop cmp sti dec dec inc dec push insb mov pop ret and jae dec mov test sahf sbb push sbb pop pusha push and mov and dec ljmp mov inc and sub and jne push rol and push je adc mov cli dec out push addl inc aas sub push sti lcall sti (bad) cmp sub xor xor clc dec sti (bad) call ja add sbb (bad) xor cli dec sti (bad) fcmovne lods sub pop or mulps dec add dec outsl icebp imul negl mov pop add or mov das cmpxchg sahf sti and cmova pop fistp neg adc pop sub hlt mov pop data16 and gs call insb jns popa jae and xchg inc xchg sbb dec mov scas push cmpsl xor push scas ja add jp xor (bad) or and and mov and push imul jecxz jge add pop jae outsl jo js ja jo sub lret push or cmp mov ja or pusha push adc lods shlb push mov add and cmp test gs sbb pop imul test dec arpl addr16 add gs data16 (bad) insl mov gs jo pop sbb add int3 and (bad) and movsb fs sub sub je and push inc sbb and ret mov dec cmpsb iret daa and add fs xchg adc arpl and insb stos int3 and dec xchg adc pop and outsb fildl jo or (bad) sub cmp movb outsb stos add sahf adc gs and add inc mov and lock imul lahf and pop cmp hlt and and push push push sbbb in or sub (bad) jb ret push outsb insl jno xlat jno outsb bound or scas out lret insb insb and shl xchg sbb test mov outsl cmpsb adc and imul xchg mov mov and arpl shlb insb jns jae inc mov sbb lods ret mov lret or adc insb dec test mov je xor mov push outsb mov or pop sub outsb lods rclb mov xchg aad xchg andl imul mov xchg or icebp inc inc test adc pop fs xor je scas (bad) and and or pusha aaa pop mov or sbb jecxz sub pushf sub and out pop pushl cmp push push mov inc push push dec inc and add rorl packuswb sti or jae insb and mov cmp and jne pusha or add aas cmp jo jno,pt fdivl pop and insb inc cwtl shll adc ret out add lret out pushf and dec insb fbld jmp insl lea add xchg loopne std inc outsl jne fs je outsl bound fs cmp jae add pop mov inc mov scas data16 jnp es daa push or sub jecxz pop and data16 xchg jmp sub outsb pop data16 insl cmp iret mov cmp mov cmp cld and imul mov fisubr cwtl mov sub dec push inc or jno notl or shrb mov inc bound or idiv aas push dec movsb sub cmpsl mov jns jb leave ljmp add pop and push mov hlt mov adc and xchg roll movsb push popa xchg and and inc add cmp sbbb cmp scas imul shrb jg xchg jno jecxz mov or jmp push cmp push cmpsb mov mov inc test shrl orb or inc (bad) xlat add out outsb sbb dec sub pop ret in popf inc jl xchg subl jae outsb arpl jecxz out jne gs test push lahf pop out lret jle outsl insb xor jbe jb subl dec cmpsl mov inc pop setnp addr16 sbb ss outsl jo test ja mov outsl jb and lretw xchg (bad) pop push pusha ss and es jae daa movsl and pop outsb cld aas xor xchg fwait aas xchg xchg pop out test adc sub insl dec outsl mov int3 (bad) lcall pop pop adc jnp daa fnstenv ds adc clc cmpsl arpl outsb jne sbb sbb sahf popf es pusha lahf mov mov popf cmpsl sub les outsb push cmp loope ljmp test pop push and xor cmp sbb pop adc ficomp neg add pop or fidiv adc add dec (bad) cmpsb ljmp mov mov push mov xchg sub clc outsl call popf add dec sub ja (bad) xlat insl outsl jb and jae call push inc add fidiv adc jo inc or pop popa and sbb fstps sbb mov fldl xor xchg add push fldl (bad) jo xchg add out insb jb,pn xchg ljmp add add sub pop fidivl inc jg mov cmp pusha ret mov bound jne insl push mov xchg sub int3 jae loope xor cmpl jo enter bound ja and add or shrl push mov ds inc xor (bad) jl je inc gs bound pop rolb and xor inc xchg dec mov push sub loop out and inc mov dec add xor xor cwtl mov or outsl sbb pop adc or mov sub or jae add adc push inc nop dec dec xor sub pushf inc add enter cmp addr16 add push popa push and stos xchg xor push aam imulb bndstx pop add pcmpgtb sar shlb sbb orb cmp mov inc fwait es bound jae xchg dec inc or popa adc mov loopne jge arpl lds cli and pop jno cwtl jp add add jb data16 or dec add test (bad) add pop pop pop insl xor shlb xchg add sbb add or aam push outsl and (bad) or and sbb mov std gs mov (bad) gs push jae xor push or aam in pop or imul leave xchg popa insb gs fcom add mov iret mov (bad) cmp xor andl inc loopne and fisttp jecxz aaa out out mov add arpl data16 and fstpt call sahf insl scas inc jb arpl and sbb dec jne je push rcrl (bad) leave mov cmp jo add fs shlb add xorl sbb scas imul (bad) and xor ds pop in mov sbb nop mov and and ret mov dec outsl data16 add pop add adc fs inc mov popa movsl enter scas jno bound jge movsl add xchg jbe cmp cmp push pop xor into jae (bad) adc andb jb arpl aaa mov add fs clc bound sub lahf es push addr16 mov inc sarl push outsl push adc jb push roll sbb mov nop sbb or mov inc sub inc imul pusha lock fs dec xchg cmp sbb arpl adc (bad) fist fidiv jns gs xor bound push pop flds sahf or pop (bad) dec or cmpsl bound or sub inc lret and push xor sub data16 mov loop push es sbb insb roll imul inc mov xor repz cmp xor sbb add insb shlb insb push sub add dec add outsl outsb imul sbb dec cli or inc sbb and pusha ret and mov pop inc je sub sub or or pop sub jae and sub push jae popa jo and arpl sub cltd push or jb jo push lock push lods mov adc gs movsb pusha inc xchg clc sub xchg scas and push and inc iret cmpl insl dec push jp,pn movsb shlb and andb mov adc (bad) jle jecxz,pn xor xor and push popa sarb je pop adc cmp test rcrl add adc add pop aaa ret push inc or push add ret pop sbb pop inc scas cmpsl jbe xlat push mov xchg jmp pop sub ret push pop sbb pop dec xlat jne fistp pop xor sbb or cmpsl xor xor mov jae pop add adc fidivr pop add add jnp add add js jnp add xor js mov add ja add sahf add jp fisttp repnz fdiv fcoml dec or adc (bad) adc xchg test iret adc mov (bad) or add or outsb gs and ss (bad) fidivr je arpl inc sub inc jns imul dec outsb mull stos dec jnp aam gs inc jb andb adc div scas jne push dec js xor notl inc and (bad) out loope daa add popa jne dec popa jne jae popa jg adc push imul mov sbb push and adc inc and jge outsl fs jnp cmpb cmp pop cmp hlt jo out and inc pop outsl faddl rolb mov and or pusha mov sbb jae cmp sti jecxz adc push mov sub lret push pop stos pop pop lret pop pop out faddl pop pop push inc mov push jnp adc jnp sbb fadds hlt push iret icebp scas mov adc adc ret inc cmp and ret jge dec dec xlat push pop or (bad) inc dec push add xor shrl sbb das cmp (bad) mov cmp dec push push inc push dec dec pop cmp xor push dec add dec dec push xor inc push cs xchg sbb pop inc or or jae fcomps fimull call dec push push jmp nop je jnp test orl mov mov (bad) xorps add lahf (bad) xor (bad) (bad) lcall inc outsl jb sub and insl pop pop xor xor inc dec fldl pop aaa or ret fcomip push push add imul (bad) pusha cs inc jne insb and rolb adc sub and pop or jg fcomps dec and xor pop and and xchg in pop sbb pop dec inc pop pop xor adc fsubl add add inc pop jle or pusha daa xlat jnp and mov das insb nop and ret in nop inc push sbb pavgw inc push sbb out cld (bad) (bad) outsl (bad) pop outsl outsb add dec push add outsl insl mov mov dec outsl bound inc (bad) jb add add add rorb lds or bswap leave cmovno or orl cmovo dec push mov jnp push lock dec outsl bound push cwtl mov addl loopne sub xchg push mov inc jp stos push ja aas daa mull pop imul popa xchg lock adc jg jg mov and jge pop negl and dec and pop out lret pop pop sub and mov pop cwtl sti jb lahf sub mulps add ret pop mov out mov (bad) (bad) jg ret scas adc dec push dec push dec add push dec dec add push dec dec mov add sarl inc push inc add pop dec add push pop pushl mov dec push inc pop push dec dec dec add dec inc dec dec inc pop adc inc push sbb push dec dec inc inc inc dec inc add inc dec cmp pop dec add inc inc cmp dec or push idiv sti xchg push or insl push dec inc dec pop sub mov inc add dec push inc push push dec dec push dec inc add dec dec dec inc mov (bad) out push dec dec addr16 dec dec inc push dec inc push add inc inc push or mov aaa pop pop mov jno rcll nop rorl xchg fs inc push mov cltd fsubs adc mov inc or lods jg sbb ret push sbb fcmovu fistpl fs inc in fdiv cmp adc sti cmp fsubs ficomp add fisttp fs inc push or sbb pop push adc aas es fsubs dec cmp pop jbe rorl (bad) push orps comiss testb jo pop fiadd ret jb jno aas and push add data16 add and pop xchg stos out push jae cmp bound daa xor fs popa insb insb outsl loopne arpl ljmp shrl pop pop outsb jne mov js cmp pop pop arpl arpl outsb arpl cmp sbbb daa inc adc jne sub lret pop int3 xor adc add std jmp sti addr16 inc std incl add nop loopne sahf jmp lock cmp pop xor ret xchg (bad) jne jae insb jns pop pop std sbb outsl ja popa orl je (bad) jbe daa add into add xor and adc nop mov or and ja popa je sub and mov and pop pop sub std pop lock and ds out add mov sub sbb add bound imul cmp inc xor in outsb and fsubs inc arpl and adc popa jb mov pop push pop adc sub nop test popa jae dec pop jb jo popa fstps mov xor js imul lds popa sbb jo or loope adc xor fild ljmp insb insb enter and inc enter sbb hlt pushl or das fs jne popa outsb outsl insl jle insb testb cmp imul les je sti shll imul ljmp add add xor cmp movsl inc add push pop popl lds jne je cs xor fstpl jb add or es xor ret out aas push insb add sub addb popa xchg pop cmp enter testl xor cmpl adc fisub pop add insb nop mov mov imul mov out das adc pop adc sub enter and sbb mov aaa add ret xchg adc fidivr cmp or fcmovne add or add or pop or xor outsl faddl ss add cmp ret pop pop daa cmpsl mov ficomp cmp dec pop add sbb pop sbb sub outsb outsl outsb jns outsl jne and jp fist addr16 sar (bad) cmp push ds dec pop add clts popa outsl adc ret shrb adc inc cmpsl dec add fdivrs adc pop or lcall cmc add add add jo add adc hlt test insb pop sub add push pusha (bad) jnp arpl or sti incl mov out (bad) cld inc mov in call or (bad) in or mov dec jmp push sbb mov or mov pusha out jl add daa push sbb inc adc sbb std add out or or out nop pop test pop xor in scas mov pop cmp add add jge ja repz cmp out cmp xor xchg pop insb imul lcall add idiv lcall pop addb xlat (bad) xor in add sti call add clc sti jmp or mov sti call aas sub xor dec pop js pop ja ss cwtl outsl inc (bad) lret mov add or pop mov jmp mov add add inc add jne and pop add or mov jae shrb adc mov add mov bound loop fs and jge cmp dec inc aad mov pop add add push lock push mov je (bad) jp cmpl sub data16 or mov (bad) cmp outsb imul (bad) scas lods add arpl jl add jb je jb sub push stos (bad) push jbe and stos addr16 sub out cs inc lock dec push aaa and test jb (bad) jb inc inc add sti and jns and mov out push jmp popa insb imul jnp outsl xor arpl gs fcompl (bad) jg pop push popa je add arpl insl add jb add sahf add sub (bad) outsl jb loop outsl loopne add pop add add sub imul push (bad) cmpsb (bad) jne add insb add insb clc add and jne add (bad) loopne add jecxz and add cs sbb insl and insb outsl bound mov iret outsl jb and jns mov pcmpgtb jnp popa insl bound add and jne fnsave pop (bad) (bad) pusha incl inc (bad) sti inc add add decl into ja dec testl arpl cld jmp cld inc pop cmp int (bad) call or jmp push cld jmp mov fnsave adc jmp adc (bad) fsubrs (bad) paddb dec add adc xor cli or outsl neg popa out cld lcall jmp cltd adc ljmp ret push cld (bad) std pop cld lcall cld incl pop adc je jne jmp pop out cmp pop adc fdivrp fwait std ficomp cld call mov pop or or push fnstsw add pop addr16 pushl cld dec add cld call mov sbb (bad) mov jmp decl mov fwait cltd or incl add xor cmp ljmp jp psubd insb add mov and jecxz aas push insb gs add pushw mov add outsb outsl (bad) xor add es adc add outsb popa jb add jns or add pop pop jbe push out sub cmp call inc add push xlat sbb adc cld decl nop (bad) add mov cld pushl cld pushl pop sarb mov adc mov push add jnp ja push inc mov add pop mov std out add add dec dec inc inc dec pop dec cmp adc std in je or fadds (bad) or lds adc outsb iret or pop cmp push or ss pop stc imul into sahf and imul adc xchg mov mov inc pop inc pop jbe xor outsl push cmpsl or fdivs imul cmp add add add insb inc inc mov pop or mov cmp fisub dec pop or mov add sti stos pusha pop cwtl pcmpgtw (bad) sbb mov jbe or push add push mov aaa imul (bad) daa dec fmuls stos data16 aaa xor add mov mov maxps pop mov xchg xchg push in pop getsec mov fcoms js adc stos getsec (bad) (bad) out jmp add cmp add add add add add cmc push fiadd outsb outsl data16 add lahf outsb sti cmp add or sub arpl sub push cmp mov push add cmp inc ja fild pop and arpl fs imul cmp (bad) (bad) fldl sub add das add add outsl loop incl outsl add gs cmp add add jb cmp (bad) incl ds add cmp cmp jo out (bad) shll mov insb jae add cmp insl dec add jg insl dec add add insl insb add add cwtl std dec mov add cmp add add lcall call add add outsl outsl add push jl jo add cmp mov add sub jo add or add jb add mov add add sahf jb add jae mov bnd add je aaa fisubr outsl data16 jae dec popa je rclb pop jae add sarb jb ja je adc dec mov dec pop roll dec lsl push pop sbb pop push bswap test adc (bad) orl pop addl mov mov pop inc push in xor movhps sub and cmp rcl js adc (bad) or jle pop pop fisttp fadds add js jge pusha orl pop out cwtl jge pusha orl pop aas das test mov pop sub lods setg (bad) pop mov btc inc add idivb pop sub rorb ret (bad) or xadd sub lret prefetch mov pop das rorb (bad) xor testl pop (bad) iret das add pop ret xor inc fist jnp push sbb in sub mull in mov addl fsubr daa jmp adc mov or pusha das repnz in daa mov add pop hlt packuswb adc hlt jg cli mov andl pop push sti pop mov pop sub or nop jnp pop sub adc adc insb mov add sbb mov mov mov rorb pop inc and aas das fsubs das and andb xor ucomiss (bad) or xor aaa pop or add emms testl add or fadds inc pop pop add das fsubs dec pop pop add mov pop adc push psubusb (bad) or pop punpcklbw or pop pop adc pusha clts cmp arpl das punpckhbw in jnp pop mov insb movq pop mov add inc roll sbb xlat pop jne add add pop js insb mov sub (bad) pop sub sarl sub roll pop xchg mov add pop fwait setle pop insb mov pop pop mov push mov mov pop jg mov sbb call mov stc push roll pop iret inc lret jbe roll pop jg (bad) nop and pop lret push jnp adc rorl (bad) fidiv add pop daa ret sbb xor add or bound insb add std inc inc jmp bound bound add add and data16 outsl sbb sti arpl xor cmp jne dec or sbb xor or sbb sti pop push add and jg in daa jae outsl jb cs jbe imul sahf pop je and mov adc imul fistpll mov ss push inc xor dec or xor adc lods pop and xchg xchg mov dec pop (bad) jge and or sbb pop pop out adc arpl aas add xchg push and rolb push mov nopl dec add pop (bad) sbb psadbw mov adc ds ja pop jg js mov notl or push mov scas das pop or or pop lahf sarl pop (bad) sbb bswap pop testb pop rdpmc add (bad) sbb movsb (bad) sbb cmpsl cmp inc ss aas sbb cmp sub (bad) jnp sti stos negl mov (bad) loope pusha inc lcall sub jg xor mov xchg push sbb xor btr outsl pusha cmpsl pop nopl fsts es inc mov or xor mov (bad) pop incl adc and mov or or rsqrtps aas mov add add mov sahf pop push loopne insl add cld (bad) clc add addr16 outsl inc sbbb sub inc dec dec sub sbb jne popa jb je and pushf test inc inc aaa pusha mov jb add dec ds test push adc mov inc ret push dec dec push push add lock outsl je insb ss push add dec jb inc and mov push pop xor bound pop shr fstpl inc stos loopne dec inc das sub std mov and push hlt mov push repz (bad) pushl sub sub and jb je popa insb cmp fnop cmp cld decl add or sbb std jg add sub jb outsb sbbl enter cmp push je sub and ja outsb outsl and addr16 and sbb and push cmp pop inc add xchg jl add and jae sbb cmp in and sub push jb ficoml mov out arpl adc and sti lock pshufw fs insb outsl arpl mov add mov and jb and ljmp bound adc das sbb (bad) pop xor jo,pn mov add add push dec pop pop rcrb dec pop sbb inc push bound icebp lds add sbb and push push es push jl mov push xor pop arpl (bad) jg pusha add outsl gs daa je je imul xchg or (bad) push sub popa insl bound jne cmp (bad) lea push push add mov and pop pop xor sub pop aas int3 std arpl dec cmp outsb add and fldl outsl add ds lahf mov add je imul data16 sbb pop add add add outsb and pop addr16 cmp and xchg add jae inc sub sub xlat fnsave dec adc and mov inc out js jo jmp xor mov dec inc inc add push sahf jmp xor imul mov add in push dec dec idiv (bad) call inc pop push dec dec inc dec push pop inc dec inc dec push push add dec add data16 fistp add int3 mov (bad) cld nop add (bad) pop mov into pop sbb pop pop mov stc iret jne mov cld ljmp cmp jnp pop pop add jmp ja pop xchg add pusha fbstp push cmp pop add add das lsl rolb rclb or mov mov or pushf add or mov or sub cmpsl into iret jge jmp mov faddl inc fidivr jge pop xor pop lsl js or jge std (bad) (bad) aaa jns xor add xchg cld pushl mov addr16 xlat or aas popa inc outsl arpl aam aas mov pusha mov mov aas sti scas add jge stos test popf push sub inc push mov mov enter inc or sbb xchg inc xor push pop add sbbb add lds daa call addl pop inc (bad) pop mov pop push add inc adc movhps xlat xchg aaa sbb and add call jbe aaa pop mov in xor (bad) (bad) (bad) pushl xor cmc imul and jns inc inc add jbe add dec insl (bad) (bad) (bad) inc stos inc add loope inc mov inc push out loop in dec inc xchg aad push iret (bad) lcall lock mov rcrb (bad) (bad) call and dec cmp shld popf xchg mov or lods sub enter xchg xorb jg outsb add inc cmc stc aas jmp xor (bad) pop cmp jae fisttpll add cmp insl fnsave arpl je or sbb gs loopne add pop stos mov or dec add outsl jne adc xchg insl sub insb and ss aas das es fadds mov xor mov aas and and and (bad) arpl cmp inc out jne and imul (bad) adc gs loop add outsl outsb arpl std test or push xchg idiv xchg insl mov cmp dec cmp aas xor das insl inc or adc das sub gs ja loope rcr outsb jo jae jb or subb sub push pop fdivr pop je sub sub sub sar sbb inc pop push push dec dec inc dec pop add jo insb or shlb pop mov mov mov and and pop imul insb imul cmp fs or jmp cmp insb and mov add dec cld or xchg sub or inc sub xor and inc pshufw inc jbe subl sbb and leave nop or inc pusha push pop test xor mov (bad) mov and xor fs and popa (bad) xor push ss and test out adc in ds inc lock pop mov fcom inc pop rolb inc or and loopne jbe inc or mov lfs (bad) leave nop sbb enter and dec xchg loopne jbe xchg mov inc pshufw and loopne mov inc xchg dec cmovs add add or test add or leave nop jne cmp push insb nop or nop mov jmp rorl jo or nop pusha push mov mov add prefetcht2 mov xor pop jo cmp shll jmp push adc inc jbe pusha xchg mov pop mov fs nop (bad) fsts pop xor or sbbb or nop fbstp sbb jo sbb and xchg cwtl lock xchg and mov xchg and sbb sarb cmp dec pop jno aas xchg and mov cmovl pop fcoms sub stc and (bad) (bad) fildll add adc mov or and into test movsb mov and mov insb nop rorl adc aaa popa rorl das adcb sbb cmp rorb test mov verw xor inc leave nop mov push or sbbb enter lock push ljmp push xor push mov jo nop stos (bad) sbb fsubs test in xor rcrb mov sbbl xor pop sahf mov push jmp imul arpl pop jne fadds cs fs add aaa sub and outsl or imul aas cmp imul arpl imul imulb stos jae pop arpl pop push xorl xchg mov addl sub cltd inc push je xor dec add rdtsc insb inc outsl push cmc outsl imul in lcall and push das xor mov outsl jne pop outsl pop push or or jg (bad) jle aam sub pop xor inc shlb outsb cmpb or pop shlb icebp xor and inc pop pop ss pop popa js fsubrs sahf and fildll adc push je pshufw jbe (bad) pop push (bad) add je sbb cmc add pusha pop inc test xchg xor (bad) popf add pop adc sbbl call xor or shlb pop adc xor in int outsl lock add lock aaa loopne add ror and aaa xor rcrb addr16 sbb pusha pop lock add fsubs jo adc dec cmp and fcoms pop loopne lock mov insb pop mov dec pop cmp mov into push inc les into push jbe nop sub xor shl in leave inc xor mov roll scas pusha orl lock add pop nop xor loopne insb mov (bad) cmpsb push andb sbb scas lock add pop push sbb adc xor insb mov shrb pop loopne fcoms mov push and pop add lock pop dec push insb adc test mov ss sbb nopl sub push jg or test iretw push ss pop jo outsl lock push jbe enter iret push pop lock in leave inc into seto and and push and rcrb sahf sbb and xor pop mov pop mov pop rorb test out jne inc push lock test pop (bad) jne and call pop and xor outsl pop lock ret xlat orb pop xchg popa sbbl pop in pusha pop fdivrs and (bad) out popa rcrl inc pop push pushl pop inc das mov addb roll das pusha cmp xchg mov es push pop out or das inc or mov rcl pusha das xor fs rorl das or shrb bound and cmpsl pop push (bad) sbb and mov push and nop das push mov inc pop sbb addr16 pusha and and and adc das andb adc and (bad) sbb shrb sbb and lock xor popa ret or pop loopne xor and xor jbe test daa or or roll add mov cmp pop pusha aas jo mov roll pop inc and adc pusha xchg and add mov out add shrb or or popa cs jmp mov add dec xchg sbb nop pop and add add or rolb data16 push add jno repz and int cmp lahf pop test and (bad) (bad) (bad) pushl xor xor xor xor xor xor xor xor xor xor xor xor (bad) (bad) pushl xor xor xor xor xor xor xor xor xor xor xor xor xor xor (bad) (bad) pushl xor xor xor xor xor xor xor xor xor xor xor xor xor xor (bad) (bad) (bad) cmp xor xor xor xor xor xor xor xor (bad) (bad) (bad) pushl cmp cmp xor xor xor xor xor xor aaa cmp cmp xor jne (bad) pushl cmp cmp cmp xor cmp cmp cmp adc cmp cmp outsl cmp (bad) (bad) (bad) call jb mov cmpsl sti sar sti idiv adc sub inc cld popa cld jnp xchg cld mov lret cld out (bad) (bad) (bad) incl std sbb xor std test mov std out std or and (bad) je (bad) (bad) (bad) (bad) (bad) ljmp (bad) stc (bad) adc decl arpl jle cltd pushl incl add add add (bad) (bad) call insl add add add add add add add add (bad) (bad) (bad) cld add add add add add add add add add add jo mov push add jmp add add add test (bad) (bad) incl mov sbb mov mov scas mov and push mov (bad) (bad) (bad) pushl inc iret sub mov lcall sbb lret (bad) pop (bad) jo dec (bad) (bad) (bad) (bad) fdivrl or imul push mov lods pop rorb sub mov (bad) (bad) dec cmpsb lods (bad) lods jno lret mov and pushf ljmp int3 scas push into mov jns cmp aaa (bad) (bad) (bad) call dec ss adc dec cwtl dec cmp xchg nop (bad) cmp xlat hlt xchg mov mov ljmp out mov cmp (bad) enter rcrl daa inc ffree xchg (bad) (bad) (bad) dec and xchg test lods fcomi ficompl pop stos mov xchg clc loop mov cmp test mov mov insb add xor xor (bad) mov xchg mov (bad) (bad) (bad) jle jo ja fisttp mov je iret pop test (bad) xchg jo mov call or push and jnp (bad) loop cltd push cmp sub adc (bad) (bad) (bad) call and push lret repnz std jmp adc int3 mov or mov adc gs pop pop mov insl (bad) (bad) (bad) fldl add adc bound or mov pop leave (bad) (bad) (bad) (bad) jnp xchg (bad) jo ljmp sub movsb cmp aad and lahf daa sti (bad) aam (bad) (bad) pushl mov enter fidiv mov movl pop out cmpsb (bad) (bad) (bad) ljmp dec xchg ljmp fimull out lcall jge jnp or ja fnstsw (bad) (bad) jmp lds xchg push xor cli pop mov xchg jecxz mov (bad) mov mov (bad) fwait movsl pop lahf cwtl mov into mov fdivl (bad) (bad) (bad) call repz mov into and fist jnp pop push cwtl cmp pop xchg fdivl jecxz (bad) (bad) (bad) call fldcw fnstcw adc dec dec jbe sbb mov push cmpsb (bad) (bad) (bad) call out pop shrb xor fwait popf or mov sub cmp and lods test cmpsl jp (bad) (bad) lcall inc subb and das pushf mov mov sbb mov lock call ja mov imul fwait cmp xchg push mov idiv (bad) (bad) decl movl popf fnstcw js inc xchg add sub mov inc xor lods push inc add (bad) (bad) incl inc adcl rolb out loopne hlt inc ljmp inc and roll mov mov lea xlat pushf leave inc and cmpsb enter (bad) incl jl ljmp (bad) jb inc xor and stc adc sbb inc mov (bad) (bad) pushl into rolb dec pushf hlt xchg ret icebp sub dec out sbb cli pop jb (bad) (bad) (bad) jmp loopne js cmpsb dec jns sbb (bad) mov dec dec jge pop (bad) out adc pop inc lock inc dec (bad) (bad) (bad) inc xor push jl pop mov mov jae mov dec (bad) cmp or sbb (bad) (bad) lcall sbb sar jbe popa test jge adc mov (bad) lock (bad) (bad) (bad) dec leave adc xchg and inc cld sbb sbb test push nop dec adc pop ds (bad) (bad) call popf icebp dec jge dec insl mov das dec inc repz jmp repz and lcall pushf jo jne iret dec xchg popa xchg add (bad) (bad) (bad) pushl (bad) jecxz bound inc sti cmp mov jp shrl mov cmp lods or dec fs in enter cmp ja,pn or xchg mov lods dec cmpsl inc (bad) sbbl dec xchg xchg aam mov mov dec dec adc in (bad) scas orl sbb dec pop call sarb mov and das daa (bad) sti lock out cld mov (bad) (bad) call popf ss adc inc add lcall mov pop sub push ret adc js (bad) (bad) (bad) call sub sbb shrl rcrl push add icebp cs (bad) (bad) call scas mov push (bad) pop sub packssdw gs dec sub (bad) (bad) call popa repnz mov push in pop sub lods call arpl (bad) (bad) (bad) call jo pop or cmp cs xchg jge xchg and (bad) (bad) call stc outsb sbb out jae mov push call fistl mov push xchg (bad) (bad) call push js stos out push aas adc fs jo push push fdivs push adc int3 cmp (bad) call adc lahf or inc xor push cmp pushf cli push data16 mov (bad) (bad) call in pop es fs loopne popf out paddw cmc sub rclb pop xor dec add (bad) (bad) lcall xor cmp inc add imul mov (bad) fcmove fdivr (bad) (bad) lcall inc dec js sti push pop shrl jmp pop inc pop icebp jb movsl and (bad) jbe das inc scas (bad) (bad) (bad) lcall sbb pop aas mov pop pop dec enter mov (bad) (bad) jg (bad) jle jl sbb pop add (bad) cld pop inc jge (bad) (bad) (bad) jmp pop mov mov mov cmp xchg out push dec pushf rcrl mov pop add (bad) (bad) push pop dec test and sub into xchg mov fildl dec jg pop pop push adc sbb (bad) (bad) (bad) dec pop jns dec (bad) jo add push fiadd dec (bad) xor insl in dec loopne push les (bad) (bad) (bad) jmp cmp aam adc push insl mov dec and add pop (bad) (bad) push add je int3 adc pop jg out push dec fistp xchg push cs mov (bad) (bad) (bad) decl jb pop sbb mov out in mov icebp pop or fucom pop in mov inc push aad cmpsb (bad) lcall mov push pusha mov xchg lods dec xchg mov (bad) (bad) lcall jbe repnz ret cld outsl and hlt sti lret mov popa js aas mov (bad) pop (bad) (bad) (bad) decl popa or mov ror sti popa xchg sarb pop xor add aam (bad) (bad) (bad) jmp lcall and pop push cmc shlb call add inc push jg arpl test (bad) (bad) ljmp arpl addr16 inc js movsb arpl inc inc pop push loopne arpl sub fs (bad) (bad) push je aaa inc fs xor inc jns push loopne pop xchg scas fs loopne mov (bad) (bad) (bad) incl jne sbb jae dec rcr dec gs (bad) hlt adc xor popa js (bad) (bad) (bad) jle mov or data16 mov int3 mov popl lea mov (bad) (bad) (bad) mov data16 mulb inc add addr16 and mov in pop mov xchg addr16 cmpsl icebp push push int3 adc push rorl lret jmp push (bad) (bad) std aaa lret push sahf pop mov sti test push rorl scas dec (bad) (bad) (bad) ljmp pop (bad) xlat xlat sbb je icebp cmp or (bad) inc mov imul enter adc (bad) imul test jae pop dec and jg or push (bad) (bad) (bad) (bad) incl push lock xchg and sub cwtl ja imul mov push (bad) (bad) (bad) (bad) jg fisubr imul outsl pop lret add imul daa insb (bad) or ret pop mov insb rol (bad) (bad) (bad) (bad) cmp (bad) stc movb (bad) insb aaa mov std insb and cmp xor dec (bad) (bad) (bad) incl stos test xchg mov jo cmp or mov mov push outsb (bad) jb (bad) (bad) ljmp outsb cltd addr16 fist jno jg sti xchg out movsl outsb fbld jge add outsb sub (bad) (bad) (bad) (bad) mov outsl jbe imul sbb xchg addl or outsl cmp jge outsl int3 push (bad) (bad) (bad) ljmp xchg pushf in jg enter sbb cmp push sbb inc mov push stos (bad) (bad) (bad) inc adc jmp jae jo fldl shll inc xor xchg pop jno pop (bad) (bad) (bad) call jno xlat jp xor ret jno lea push ret jno icebp lahf fwait jb sub (bad) (bad) incl pop mov xchg mov outsb xchg jb xor jmp dec int or jae dec add jbe (bad) (bad) lcall xor ss push jb mov je and push jns jecxz (bad) jae cmpsb (bad) (bad) (bad) call sbb or neg jno inc je jp push into (bad) jne sahf cwtl shr addl addl mov loope mov aam dec jne (bad) (bad) (bad) ljmp or xorb ja dec mov icebp lret std add jne decb inc and (bad) (bad) (bad) (bad) mov jbe dec enter mov popa jp ffreep mov mov pop (bad) (bad) (bad) lcall ja cmp push add xor ja jle ret cltd cmp ja (bad) (bad) (bad) lcall (bad) ja ret enter mov test stos mov xchg popf js (bad) (bad) (bad) lcall jo jl js negb sbb jns xor loop jns mov jb cmp enter nop cmpsb jns jp or xor jns lods mov mov sub jp (bad) (bad) (bad) ljmp jnp gs and mov jg sub add in pop pop mull inc out jnp (bad) (bad) (bad) call push jnp cmp test lea sbb mov mov imul pop (bad) (bad) (bad) incl jp into test testb jl push iret imul ret (bad) stos or jl (bad) (bad) (bad) push jae push or nop data16 push das jge xchg sbb imul mov ja jge (bad) (bad) (bad) decl jge negl jle jne mov aaa jle xchg add loop (bad) (bad) lcall dec dec stos mov sbb push xlat jle popl sbb or outsb push cmp sub (bad) call jbe xor pop jnp jg enter int3 loope adc mov dec mov add xchg add mov aam add pop push sar pusha add inc cmp sub jbe sub inc or jg push bound dec push pop push xor and xchg sbb and cs es cltd cmpsl ds xor xor das mov and xor ss mov adcb test scas das and sub pop sbb inc mov out arpl jl ret add add push or adc jne ja push adc add pusha pop test pop negl pop (bad) adc add loopne add pop xlat jne adc xor dec or push add pop xlat jne pusha pop add jo test jne xlat add mov out orb pop jne xlat jge push add mov push pop xchg add xlat pop out pushf or pop es add mov xor and or lock add or (bad) jae pop adc add or inc and add or popf imul or xlat pop mov negl aas add and rolb pop add cmp mov movsb mov add push or imul pop sbb out mov or pop scas jae add je xlat jne add loopne pop cmc add or jne add jne xlat add or or pop scas imul add push or add add add rolb scas sti scas sti and add or pop lods jge add or mov loopne push jle add (bad) mov or fidivrl add jne pop addl pop xchg add fnsave (bad) addl rorb pop lahf add or jne mov or pop cmp arpl or cli test push cmpsl xchg add add sbb adc lock leave xchg or pop jne xlat jge mov add adc mov xor rcr pop xlat pop ljmp mov add sbb ja stos mov add mov adc or jnp test add pop xor lret or ficoml jne jne loopne jne add enter mov sti fdivl int3 or pop adc pop xor cmpsb fadds bound fmull jo adc and xor xlat mov or xchg outsl mov xor jne mov push or addb movsl add sbb push scas jmp fildl inc cmpsb daa or enter negl lock pop and mov pop lods sti or scas add scas jmp mov movb or pop adc xor or pop hlt add into mov mov loopne cmp jmp inc pop out mov lock int shr mov pop xchg int3 add fmuls mov mov nop pop and jne hlt push or xor aas add or jno pop xlat jne or addb add or negl fadds cmp fisttp inc pop mov or pop negl pop mov or pop jo add push or mov or loopne push push add pusha push or pusha out mov or (bad) adc add mov adc add nop pop call or scas jmp out pop push pop add nop or jmp mov push and add add push pop mov test nop pop inc and add or or add mov add or pop in rorb lock sub scas jmp out add aam xor in add or pop out mov add call add or and out mov or rolb add or addb mov add sbb rolb fildl sub loopne mov sub add or pop xchg add or pop call pop icebp add mov sub add add pop sbb pusha jmp scas jmp and sub or pop cmp scas jmp scas push add pop mov add pop aam js loopne mov add mov scas jmp mov sub mov adc stos add mov mov adc add cwtl or pop adc xlat mov add xlat jne xlat add fmuls nop pop pop xlat jne mov pop roll or fnsave ja es in xor jae add lock pop fwait add pop or mov add inc xlat jne ja inc xor add or mov and pop xlat jne rolb add or pop jmp sub fdivs lock xchg or mov add cmp pop cmp add pop mov scas jmp out add pop or pop lret add scas jmp fild lods or pop jmp mov lock sti scas jmp stc add or mov mov mov add jne test or pop inc (bad) xlat jne rorl nop in int3 or pop incl xlat jne pop aam add jae fmuls adc pop xlat jne sbb fmull and ja loopne xorb add in or sub or jmp into mov pop add or mov jmp out mov jne add sbb addb add or scas sub lock sbb pop or pop jmp mov or cmp add jmp scas addb add pop or into mov add pop mov add add testl pop mov add mov fnsave inc inc add rorb pop lods add or ljmp lock ds add fmuls inc pop into add or pop dec inc sti or movsl add mov mov xchg push add hlt or add pop adc mov or pop into imul or pop int add dec or xlat jne imul mov xor movb or mov ja or pop ss add pop or xlat jne add add mov pop xlat jne or pop lds and rolb or pop idivl add adc clc jg or addb xlat jne add pop dec add push jne xlat jne pop add pop insb add xlat jge or stos (bad) add insb or add jge or pop mov add pushf or pop jg rcrl jne or or pop cmpsl xlat jne (bad) mov add or or pop fidivl imul mov add pop in sahf popa out pop mov aaa or repnz scas jae jae or xchg add and pop out mov add sub addb add add jmp add cmp adc adc jmp scas jmp pop add pusha pop xchg add mov pop mov push or pop and mov pop cmp or mov sbb or pop mov xlat jne pop or adc sbb xchg or or xlat jne push add pop mov mov cmp (bad) jmp mov add xchg or mov add pop or lock cmc add or movsb mov add pop cmp cmp xlat pop je sub addb test xlat or or pop add out or pop push add pusha pop out jne cmpsb add mov aad jnp negl pop loopne dec lods add or xlat mov add xlat mov mov mov fdivs mov std sarb add add or pop mov cmp nop lock jbe inc in dec or add jmp jae fistp pop fdivr add and loopne xlat jge mov cmp pop sbb add push fbstp pop add pop pop pop add jo pop xlat jge mov test pop les add jge jge adc add add mov repz and add or and add sub add adc jge lcall xor add or add pop or loopne cmp fiadd sub pop fild add pop (bad) dec add push (bad) jne rolb mov add insb or pop lock add test add add out cmp mov mov pop jb add cmp out mov mov add adc incl ffree jmp scas jae or pop call pop mov lds add adc sbb dec or jae scas jmp xor push or xchg (bad) fwait or scas sti scas mov add addb int fbstp cmp add orb pop xchg roll add or add add in popf mov pop pop fldl add popa and dec xlat mov add or jae (bad) or jge jmp loopne dec in add mov push pop xlat jge jge add movsb or fldcw add or pop xlat jge jle scas add and out pop dec mov add pop xlat jge jge mov add pop outsb fildl add fistpll fldl add or fiadd add jecxz add adc inc xlat jne ja add or push pop addl or pop xchg add mov or xlat jne ja cmpsl out add mov mov pop negl pop aaa out add inc pop fldl cmp xlat jge or pop test add dec or add jne xlat or pop jmp pop cs add xlat jne xor insl add xlat jne xlat add add jbe cli add add jne pop add add pusha pop jnp mov addb add jne mov mov or xlat jne mov hlt add rorb pop jae xlat jge cld add les nop pop loopne enter mov dec or pop pop incb add or pop daa add or pop add jmp scas jmp jo cmpsb add or scas sti scas lock incl add clc or cmpsl scas jmp out add fs mov lret add or pop jmp jmp out or lock movsb add adc mov scas jmp scas mov pop int and negl lock or adc add sub mov sbb xor pop sub xor mov pop xor pop add or jge inc or mov nop pop incb dec or add add pop or add out mov add loopne daa add add sti scas jmp xor insb add add scas jmp scas xor mov xchg or scas jmp mov add scas jmp out add test xor xchg add mov add mov and cmpsl add jmp dec or enter xchg add or pop lahf or fmull pop loop add hlt or negl or or mov add or jne inc pop push add or ljmp pop xlat or pop testb or adc push add xlat jne adc push add and push xlat jne xlat add pop mov push or jge pop add push or testl add xlat jne add add rolb icebp add pop negl add aas add add jg sbb pop and pushf and js add mov sbb popa and or incb mov or and outsl daa add (bad) jo xchg aam fdivs nop pop sbb pop lods mov hlt or add popw jne jne pop or add or adc sbb add adc and jne pop and add sub xor or add cmp adc ja xlat pop and dec or pop das cmp push or scas jmp stos add pop lea xor nop pop push cmp pusha pop mov mov or pop lds jecxz rolb and out mov or pop mov or pop dec dec mov add or outsb pusha add call popa into in or mov fs mov fisttp addb addr16 xor out mov imull add imul pop (bad) scas sti scas loopne ljmp pop jp mov xor cmp addb je or cmp (bad) or ljmp into in pop pop orb (bad) sti into pop or adc ljmp or pop pop mov dec or pop ljmp or pop lret or pop out scas sti scas jae or pop push add cwtl or xor cmp xchg cmpsl xchg jmp mov pop out (bad) or pop lea jmp jmp nop pop xlat sahf add cld or pop ljmp imul or lcall cmpsb add inc inc pop cmp neg pop mov nop pop ret scas (bad) jne popa xlat or pop xchg (bad) xlat jne xlat add lods or pop pop xlat jne or jae enter aas xlat jne nop add or (bad) mov add or pop fiaddl loopne loopne out in into mov or pop outsb mov or cmpsl cmp scas jmp lock or pop xor jae inc pop bound scas jmp scas or jo cmpsl add mov mov mov das mov xor mov add or or scas sti scas rolb mov jo aas mov cmp inc pop addl or scas jmp pop or pop sbb out and mov add pop lock pop negl add add xchg or jne push pop stos add xlat cld fdivl or pusha enter or sbb xlat mov and fadds or pop fnsave popa test jmp nop pop inc lret add lock pop xlat jne mov cld or pop lahf int3 add add jne imul xlat or pop jbe mov add or or cltd jbe xlat pop popf add or fbstp xlat or or pop or add push or pop xor jl inc pop add jne pop out or pop arpl xor jo pop out pop push jecxz or pop aaa add inc pop mov pop stc jmp iret or ljmp and jne xlat pop cmp loopne inc pop mov in mov pop nop pop jb add in or out fidivl adc daa out pop insb sysret cmp popa mov pop xchg lock xlat or or pop dec icebp (bad) out or testb or repnz ja test pop scas stc add insb or pop das sti (bad) or pop mov fidivl rolb (bad) cmpsl or incl mov add add or xlat jne mov lock push add pop jne jne cmp mov add jmp jae pop add mov or pop jmp jmp dec or pop (bad) add pop out cmp mov add iret pop fmull mov inc or push pop jns sub mov pop movb or pop add add std out pop notl add add add mov xchg add pop inc adc add mov mov or pop pop pop add mov or add pop repnz add add or pop adc mov ljmp pop int add scas jmp rolb loopne or ja scas sti scas sti or or pop xor pop jmp out mov add inc or pop jmp jmp call or pop daa das add pop scas jmp scas popl insb or or mov inc xor pop mov nop or pop negl add cmp jne pop mov cwtl ds mov xlat jne mov mov mov pop mov or idivl add aas inc fisttp inc pop jmp into mov inc fisttp push pop mov fmull jmp adc add or cmpsl or out cmp scas mov push adc jo pop inc add mov fiaddl add pop pop mov inc (bad) or stos inc add jmp scas jmp mov pop enter out cmp scas rolb push inc inc or pop jp add mov dec add pop out add sbb scas dec or pop pop push ud2 adc aaa fucom mov push jl push add add mov jne pop mov sbb or pop sub ja ja test xor xchg pop add pop or sbb add or pop les or pop popf popa xlat jge pop add pop cmp or pop xlat jne mov cld or arpl jne jo add fs or jbe ja or mov add or mov jecxz pusha pop jne daa or pop mov jo add jecxz xor addl sub daa ja xlat jne xor xchg add add add jbe or pop popf imul add jp or xlat cmp add or pop fiadd in fidivl loopne add pop adc or jno add pop or or pop mov add jo mov sbb shr scas jmp int and rolb loope sub mov pop testl add jmp scas jmp adc sub cmp xor aaa add or xchg add pop jmp jmp ret or pop sub add pop jae mov or pop adcb scas jmp scas xor popa add jo mov sti scas jmp orb pop hlt add add scas jmp scas nop or insb add scas jmp xchg add add xor pop add mov mov adc and xchg sti scas jmp rorb nop pop testb or test jmp scas call add or pop mov test push pop jp add or cmpb xchg inc pop add jmp scas jmp jo xchg add or sarl xor pop jmp cmp pop inc xlat jne testl dec or pop in add pop outsb mov jecxz scas pop jo hlt lea add jne or pop jge je addb jbe xlat jne orb pop hlt add xlat sbb xchg or or fidivl adc mov pop or jae lcall or mov incl int3 or pushf add or cmp scas rolb popf jg adc mov scas in or pop aas lahf jae inc pop scas jmp mov mov adc ret add jmp out mov add pop xchg add scas jmp scas mov or mov loopne je add pop sub jmp scas xor xor inc aam or jae mov or pop dec (bad) add out cmp scas push pop aam sub loopne dec fiaddl mov fcomp mov faddl mov xor xlat fldl (bad) cmp cmp icebp fiadd add add add jmp scas imul sub and xor cmp scas jmp scas sub inc pop inc add push pop popf sti cmp and or aam xlat or jge sbb dec in or scas out add jne xlat or or pop dec call ud2 push pop pop add pop xlat pop out add jecxz fdivs pop jo stos ljmp xlat mov xor loop out or pop cmp out or or out or or ja pop pop repz add mov mov or pop pop cmc xlat or pop cmpsl cmp scas jmp sub mov inc idivb scas jmp xlat add loopne dec imul or pop outsl add jo cltd cli sti scas xor cmp mov or pop jmp into lds ud2 push pop jle mov jge shrb or test mov add repz mov or add add add pusha pop js mov or or scas fild loopne loopne push add add or mov add or jbe add jge mov push add pop loope adc pop negl pop or add adc pop add pop xlat jge or pushf push push add or xlat jne jne lock (bad) or add pop in ja ja fs pop imul jo xlat clts jge jne add loopne icebp add add pop negl add push add out mov test pop xchg adc mov out mov or lock push add or xchg sbb jbe jne add or ja add negl jecxz push pop or add or pop jl jge jne and addb sbb pop scas sti scas sti scas pop push add pop and push add xor mov add pusha pop mov pusha or pop test jecxz mov das es add scas jae xor adc pop xor or pop in push add add or sub add das push add scas jmp jmp rolb sahf xor add scas xor mov pop xor or into mov mov addb xor or pop and pop movb jmp mov or pop mov adc add pop jmp scas sbb lock addr16 jo ja jmp mov or or pop scas jmp scas into add pop fiaddl pusha or pop dec cmp stos add mov mov in push add pop push scas jmp mov jo mov cwtl or pop xchg inc jmp jmp jmp mov add mov push add or add or pop scas jmp scas popl loopne nop pop in add or mov jl push add or jns cmp dec xlat or pop repz or dec push add add or pop and je jmp xor pop cmp popf arpl jge dec push add lock (bad) pop ud2 rolb push pop out or pop stc pop negl cld ja add push push add nop xlat jne jne lock outsl popa push add add sbb mov loopne push (bad) fisttp and jne jne mov rorb pop inc insl push add or pop out pop outsb out xor pop add cld ja xlat or clc add or outsl push add jo add cld scas sti iret pop sbb add or pop setae add jp xor sbb pop mov pop or pop mov xchg fisttp pusha pop mov or scas jmp out pop das cltd push add xor jno pop or mov out push add pop setge add (bad) scas jmp adc cmpsl add pop add out scas jmp or pop sbb mov and inc scas sti scas jmp nop or xlat mov loopne mov add mov add push add pop int out jmp jmp rolb jecxz push add or pop mov out jmp in cmp rolb lods jecxz or inc pop imul adc jo cmpsl add mov fdivrs xlat test mov rorl mov or pop sbb pop lock jle rorl pop pop ret (bad) or popf (bad) xchg add lds cltd jbe or pop movb pop fdivs rolb jno rorl addb popf arpl mov pop sti int or clc pop out into push add pop (bad) push add jl xlat jge stos pop mov push add nop pop mov jbe or pop inc fisubl jbe imul pop pushf ljmp mov or pop out jne xlat add xchg or clc xlat jne addr16 add add xor rolb mov add or stc push add pop outsb add jne les jo stc add or cli push add cmp std push add or jne negl add jge add or pop repz add push add xlat jne jbe jns ja addb add jne sub mov or xlat jne xor loopne out cmp lock jne pop arpl pop add jo add pop add pop xlat jne pop inc add add pop movl ja ja push add add pusha pop and add xor pop xlat jne mov pop xchg add jne negl pop es pop add pop test jl xlat jge or add pop add or pop mov pop add add rolb add pop pop xlat jne add les pusha pop pop pop negl adc and dec push pop add or js negl pop pop add or add or test jne jbe or pop cld add or pop xlat jge sbb add and addb sbb add popa xlat jne inc pop ja inc or jne ja or cmp add pop cmc pop xlat jge add sbb js rolb scas sti out mov lods pop pop add sti scas sti pop and add pop add pop mull pop add or add or pop pop iret jne jne loopne mov add or xor addr16 rorb pop jnp cltd out (bad) cld pop fimul add add iret std out adc pop add pop jb pop add or xor or pop lea xor pop xchg add pop rorl out aas sarl out inc pop or pop (bad) or adc or pop or mov icebp jae pop lahf cmp sbb out pop add pop dec or negl das aas pop add mov inc pop add out mov add or add or pop mov pop fildl add jmp out pop sub push inc pop add or scas add or or inc pop add sti scas jmp sbb jo iret dec pop add rolb scas sti scas sti cs pop add xor gs pop add or cmp inc or pop xor inc sarl jmp jo push or mov out aas pop push dec pop add and jmp fs cmp scas lock jno das or add mov pusha pop cmp add pop pop add or pop add or and jge je int3 xor test or popa adc or pop mov or fdivrs jno xchg addr16 mov out or pop sub sub xor cwtl xlat jge jne xor mov add push pop popf (bad) test or or popa xlat sbb fstpt push mov pushf or (bad) (bad) decl loopne into in cmp lret or pop sahf int or pop cmp lret or jmp mov loop pop add or inc aad add fistp pop xchg fidivrl pop add jbe xlat jne inc pop add or fnsave xlat sbb xor dec add xlat jne xlat pop test test nop pop testb or xlat jge fiadd add add add xor xor mov fild add and sbb mov pop dec jmp scas jmp les push pop ret add or pop jae mov or pop and mov mov mov add or sub jae mov pop xor add mov or push add or jbe mov pop add or sbb scas aas addr16 xlat or pop shr or lods jmp (bad) or or pop or mov add or or or jne sub add pop xor inc add mov mov or pop movsb jmp scas jmp test mov out add scas jmp pop lock add add or pop xor pop add or out rorb jmp scas sti xor pop add pop lods add or pop int3 add or pop aam mov or pop in hlt or pop sti scas jmp jmp clc or repz add pop jmp out mov or and das add xor scas jmp scas push add or arpl adc ret scas jmp jo jns adc addb cmc jae scas jmp or or pop lahf imulb or or scas jmp rolb add pop add or scas sti scas adc xbegin rolb psubw add jmp scas adc inc add push pop ss scas jmp into mov inc pop push nop or jmp scas sti sub pop add movsb or mov mov and aam or enter mov pop or loopne adc xor call testl cmp or clc or scas stc out pop sub cltd or xor and sbbb add add or xor add inc scas jmp out pop adc or pop popa add scas jmp jo roll or pop sub or je mov pop xor pop daa invd add xor add or xchg xlat jne jne mov add add ja mov rolb adc add or pop adc or push pop or fmull adc fucomip fsubrl loopne mov pop scas sti out out sbb add or lock sbb add mov sti inc push or sub push pop sahf and add mov faddl (bad) das or pusha or jmp jae rolb or inc xor add out mov or or or nop or fidivr in pop lock lret or jecxz or les mov xor add or add add or out mov add or push dec or in or pop xlat jne ret add or pop jns or add pop xlat xor mov rorl add or pop negl pop pop dec or sub pusha pop pop push or cmp sti scas jmp pop sahf add mov add scas sti scas adc adc or pop cmp insb or pop arpl js jo out push or jl jmp jmp lock pop push or mov pusha pop pop push or cwtl xlat jne (bad) or mov pop call pop mov pop mov fdivs mov enter stos pop pop or (bad) jne mov roll call mov jmp scas rolb add or pop xlat add or pop jmp pop xor in mov or jge add pop pop scas jmp scas xchg or nop pop xchg add or mov adc add and mov jmp scas rolb add or pop inc pop scas jmp into inc or out add or pop jmp out mov add add inc or xor mov or pop aas popa pop or cmp scas inc pop insb bound or fsubl add or pop xchg fs or ret and dec or pop insb add jo lods add add rolb add add pop mov pop or or pop scas jmp scas add mov mov mov add jmp scas jmp mov or jmp scas enter fadds int3 or pop out scas sti xchg or rorb mov or xlat jge std and or in xor mov or pop fidivl imul pop out add jne imul sbb and fcompl pop xlat add or pop sahf insl or and mov pop imull add or pop outsw ret or jbe xlat pop mov pop leave jo ja arpl or pop fbstp or pop mov jne add mov mov mov xlat jne divl add mov addb icebp jae rolb mov stos or scas jae push pop outsl ja or pop jns jmp into push or pop in hlt or pop cmp jp sahf or pusha pop push jnp or jne xlat pop imul test sub pop xlat jne nop pop scas add or xlat jne jne loopne add or inc or pop add jne dec or pop cmp push or dec out jge jne push or inc jge add pop mov add pop mov scas jmp in pop push jle or pop jb jmp in mov push jg or pop mov add orb pushf or shrl cmpl jmp or or scas jmp enter lock or xlat jne loope xorl and cmp aam pop xlat jne inc pop dec add or jbe fdivl xlat jne addb add or pop xlat add or or pop pop xlat jne lret or pop xlat add or jne xlat jne ljmp add pop xlat jne or test add cld or xlat sbb lahf or add jo cmp arpl arpl addb mov (bad) jne or mov add add mov add add jmp scas adc sbb pop or pop pop mov add arpl or and pop adc jl nop pop mov test rolb fdivs out mov lock or xlat or pop sub cwtl or pop push add jne pushf or jns mov scas sti iret jne movsb or cwtl (bad) add cmp or mov enter jmp rolb add or pop jnp out sbb into pop or or xchg or jmp jmp mov call xchg or hlt or pop mov xchg dec or mov or mov mov pop loop adc lock imul or mov add jo roll or cmp scas rolb sets or pop and scas jmp scas dec or pop scas add mov xor pop or pop push cltd xor jmp ret scas pusha pop cmp xchg add add pop add dec testl pop mov xlat jne jbe aaa popf ud2 inc pop flds jbe ja rorb pop mov nop pop xor adc pop cmp dec mov xlat mov fiaddl adc mov pop testb or mov mov or pop add or dec jmp scas jmp and push pop push add or scas jmp scas jl sub addb add or scas jmp mov or jmp into imul pop sahf add mov sti movsb or push or pop inc add push pop scas jmp scas add pop xchg push mov insb or mov rolb pop movsl adc pusha pop xchg ret scas jmp test nop pop int dec or ret scas jae pop daa cmpsl lahf or pop cli test cmp add mov nop pop and or or pop push lods orl into shrb or (bad) out sbb or mov add or add or push pop daa mov scas jmp aas or pop cmp sub inc mov dec add or or xchg pushf pop or nop out mov add fcoms add sbb mov js push pop icebp add or mov add pop in cmp scas jmp jl lock fnsave lahf jae pop pusha mov or ret or jg rolb adc or push mov jmp pusha pop gs push or jo jno mov or das rolb jmp scas jmp insb or pop fiaddl push out mov or pop sbb scas jmp into popl das add pop cmp mov and inc add pop jns jmp in add jg pop popl int3 or ficoml xor rorb (bad) xlat and pop xor addr16 ret out pop xlat pop push pop mov out pop xlat jne pop rolb ret mov add jne popa push push inc pop in enter neg ja icebp add or les add add pop xlat jne popa add pop jne cld or pop addl xchg add jne add or mov inc pop inc (bad) cmpsl or mov add add scas jmp test pop mov scas sti scas rolb enter cmp std leave scas jmp rorl das add sbb pusha pop push fcoms scas pop jp je inc pop mov scas jmp scas aam nop pop lcall into rol in or pop xor out cmp inc pop lcall pop mov mov pop xchg pop push and add pusha mov xor or xchg pop inc pop push inc or add mov jne pop out or mov push daa icebp pop negl add or movsb fbstp xlat (bad) pop fldl shlb loopne xchg add ja pop enter mov sbb jne divl add pop dec add push pop jne jne test pop sub add xor jne xlat pop aas add inc pop popl cld jne sti out aas pop mov add or icebp add xlat jne fisttp add add pop sbb xlat (bad) jne aam and and pop xlat jne pop xor pop inc add mov pop add add jo xchg pop sbb or mov mov jecxz pop cmp sub pop fadds push mov or add pop xlat jne add push or pop inc add push negl jne (bad) add or add mov pop add and sub cmp mov pop xor les imul xlat jne sbb jo mov pop and jne testl xor cmp cwtl or pop xlat jne jnp test addb add rcl fnsave xor add pop dec add xlat jne push pop xchg add nop jne xlat jne rolb fadds pop or pop out pop out add mov stc add add fldl or pop sbb insb or jne xlat jne mov mov add fbstp xlat or or pop stos push or enter jne mov mov pop add or jne add or pop sbb or pop sub xlat jne js xor xor pop or jne xlat pop inc add je pop xlat jne pusha pop insb add add or out rolb or pop xlat jne add pop inc pop dec add pop push pop test xlat jne sbb nop pop cwtl add and pop movsb add mov mov xlat jne rolb add rolb or or jl pop xlat jne xchg pop adc add and sub xlat jne adc xor xchg add pop mov pop icebp add cmpsb add or pop xor or rolb mov aas pop nop or add or sahf or pop xlat jne mov or pop loop and pop xlat jne lock clc add or pop xlat jne orb pop adc or and daa dec pop xlat jne mov xor cmp sub inc pop xlat aad pop inc add mov jne xlat mov clc pop jo out jle fadds in sbb or or cmp pop pop sbb clc scas and push add xchg popf sbbl hlt xchg iret pop in xlat jge jne add lock daa (bad) add xor pop xlat jne xor pop jb in sbbb add or adc loopne pop xlat jne adc sbb lock pop and jne xlat add xor pop add pusha pop pop xlat jne add or mov scas jnp ja and or pop add scas jmp inc pop jnp pop or scas jmp jmp rolb adc add or dec add or xchg add or or add add fadds in mov pop in add pop clc add scas jmp out pop add or push pop je jbe xlat jne addb add jne xlat cmp mov or pop repnz add add push adc xlat jne adc pop and (bad) jne xlat pop xor xor jo inc pop dec add jne add push pop pop add pop fs scas jnp or mov pop mov push or lods or pop cmp mov scas jmp ja int3 or imul xchg add mov sub in pop mov daa pop or int3 xlat xor inc xlat sbb jmp mov pop negl pop add or pusha or pop mov jge or pop inc sbb add insb xlat jne jne loopne lahf sbb add mov xlat jne add pop fadds and loopne out popf arpl jne xor lock push sbb adc xlat jne sbb adc and daa add dec pop xlat or pop cmp sbb pop dec add mov pop pop add jne mov add mov xlat jne xlat or or aam pop sbb rolb out add lock test add dec sbb add cld xlat scas jmp scas adc aas add inc pop xchg add cli into lds sbb pop jne jne mov movsb or add adc jne xlat pop sbb dec pop and cmp cmp pop xlat jne inc pop pop add or jnp inc jne xlat jne addb add mov pop xlat add imul pop pop andl pop xlat pop ret pop rolb fadds aam jne negl pop push and add je jne xlat or push add and jne pop xlat jne fmuls addb add or xlat jne sbb mov or pop mov pop enter std iret jne rolb loopne sbb pop or or test jmp scas jae pop jl in addb add sti scas and add or xor mov pop pop xlat jne rorl pop pusha pop lea test nop pop lcall pop pop rorl sarb add out adc push add or lods add jge jge dec or clc or add add jne pop xlat add or pop push arpl jo xlat jne pop xor or sub inc pop dec add push mov jne outsl add pop or mov or pop and mov xor pop out xlat jne cmp pusha pop sub aas or jne xor popl mov add ja xlat jne loopne out add lock push sub pop xlat jne add cmpsl and das add pop insl jne xlat jne in pop jo xchg add mov pop rolb jo loopne pop sub add jne xlat jne insb add pop mov jge or pop add add inc adc inc add xlat jne push pop pop add jne xlat add pop fildl sub loopne jne jne out add lock add adc jne xlat pop sub xor xor inc add jne xlat pop push pop xchg add mov xlat jne and rolb add or pop repz jne jne or add or adc and and pop xlat jne xor xor inc pop imul pop xlat jne mov add nop pop iret add xlat jne xor xor add or mov pop xlat jne in or or pop cmp jne mov aas mov pop scas add inc imul out add xor lret and outsb xor das jo xlat jne pop movl cmc add das jne xlat jge xor add inc fwait push pop jbe mov imul mov cmp mov lock ss pop xlat jne xchg add pop testl jne divl or add xor dec add push pop jo mov dec jmp scas jmp mov das rolb repnz pop add or and pop jae mov and and scas int movsb and pop push cmp scas jmp scas and add pop movl insb or pop daa cmp add scas jmp scas push push pusha pop jg xchg inc addb fucom mov pop ret das rcrb pop xlat pop repnz add or and xchg pop xor (bad) jne dec add pop imul jne xlat jne jo addl mov add pop lds enter sbb jae lock pop pop sbb or fsubrl jmp dec add push pop js push das scas jmp scas addb add nop pop lahf add scas jmp inc or or cmp add add cmp pop aas add inc scas imul cmp mov or mov jmp pop or inc or pop pusha add ja pop xlat jge jle in pop addb add jne xlat inc mov int enter hlt add negl or or lsl pop xor add das inc pop push add xlat jne add add jne lahf add mov or pop testb or aas or push add and jb enter (bad) jne xlat jne movsb or or pop leave add add pop loopne hlt add adc pop xlat or pop mov pop (bad) add cltd jbe mov loopne add cmp pop pop xlat jne sub pop push add pusha jne xlat jne outsl add jo xchg add pop xlat das mov pop rolb add jne sub lock incl or add add xlat jne xlat add pop dec add jne je xor addb add or pop lcall add cmp push or mov pop jne ja incl js add inc add xlat jne xlat pop insb add inc jo test xlat jne mov lret or pop and jmp out or or cmp mov add jo lea shlb nop jmp scas jmp mov pop or pop iret add mov pop icebp add add scas jmp and inc add push pop pop add or addl mov add and loopne mov add or pop sbb jmp scas or and inc add pop loopne inc mov rclb pop xchg add fistpll or mov pop (bad) dec stos fistp pop out or pushf push pop lcall sti cmp dec fisttp aam out das push or xor cmp or inc push jbe xlat pop push add pusha pop loopne outsl fbstp stos nop imul add add add add jg pop adc mov aaa and and mov xor xor pop xlat jne mov add in xlat jne or loopne pop push or xlat jne pusha pop faddl add loopne jl jne jne rorl addb push or sub and jne xlat pop mov nop ja pop lds call pop rolb faddl hlt or pop sti add fnsave add add add and cmp pop xlat jne push or pop add pusha pop mov add pop xchg push or enter pop xlat pop movsb add mov mov xlat jne rolb add lock clc add xlat jne ja add add pop sbb dec sbb lock and das pop mov xlat jne xor fcoms inc pop dec add jne xlat das push pop jp lods or cmpsb jbe mov pop stos or jne xlat pop inc add push pop cwtl add pop xlat jne mov or pop faddl and fdivs loopne and or pop addr16 xlat jne pop or xchg add inc mov pop cmp inc pop jno pusha pop xlat jne jmp pop pushf add mov xlat jne mov rolb pop or inc pop adc mov add pop push or and jne testl nop pop ret add jne negl pop adc or cld or pop jbe test jne xlat or or pop add add or jne add addb add sarb cld pop pop into or inc rolb jae jne fadds call pusha or loopne pop jmp mov and fmull xor dec add scas jmp scas push pop imul or movb mov rolb es or mov add pop mov pop add or jmp scas jmp add or mov scas sti scas rolb arpl add or pop jns int3 out mov pop cltd add or add or pop dec add pop lcall or add xor into mov mov addb and jne xlat jge rorb test les jne pop add add sbb addb push sbb or pop mov sbb scas loopne mov enter rolb mov add push add jl jo mov add or mov scas imul inc pop addl mov mov les pushf and pop in cmp scas jmp cmp lock or inc or jmp scas jmp push add pop lods add mov cld add mov or pop xor xchg push inc pop pop idivl or pop or pusha jne xlat jne outsl add or jg fbstp xlat or das loopne inc outsb or mov pop xlat jne push pop xchg add jne xlat add cwtl and pop jne jbe cld add pop add add jne xlat or pop bound je jo mov pop test rolb jo or pop pop xlat jne sub pop inc add xlat jne pusha add adc scas jmp scas jo jg les addb add or das mov lds xlat scas jmp mov jno or xor je repz movb scas jmp rclb pop clc add add mov hlt (bad) xor aaa add cmp add nop pop pushf add or or pop rol sti dec jae add push pop fidivl ljmp cli add orb jne add sub mov pop mov sub rolb add or pop out add or pop scas jmp cli sbb add mov sbb mov pop pop add or outsl add mov jp pop add mov nop pop lcall scas jmp mov pop les je sub jecxz pop or add pop into aam sti fistpll add loopne test repz pop mov pop into add scas jmp rolb fildl mov loopne out add or pop clc add or mov or pop inc add mov or or pop movsl add mov mov inc scas xor or les movsb or add jmp into jmp mov pop or jnp or adc and pop and pop push add and mov pop scas jmp (bad) or add cmp scas jmp pusha pop stos add mov or xlat cmp mov push pop fwait xlat jne xlat add pop jmp xchg or pop xlat jne imul pop mov in negl pop nop pop and xor je or pusha pop je negl pop imul fs xlat xor add lock xchg nop or xlat lds shlb pop cld add add ja notl in nop pop push xchg or int3 pop push pop xlat pop and mov sbb jne adcl scas jmp lret pop and int3 or pop data16 jmp ljmp add mov add inc pop mov xor pop lds lods jg pop mov add add out mov add add mov mov fadds sub mov or int inc scas jmp ret scas rolb add sub adc testb into aam clc and xchg popl insb pop inc xlat jne jmp popa add push pop hlt add pop xlat jge cwtl or and pop pop add jne xlat or add jo jl pop xlat jne or or xor lock adc xlat pop and outsl add add jbe pushf or pop or jne xlat pop sbb mov add jbe xlat jne mov or pop or (bad) insb lahf pop sub int3 jo negl addr16 addl nop pop xchg add jl add or pop xor xlat jne inc pop mov pop lret pop xlat sbb xor mov fiaddl cmp add or popa add inc add (bad) mov inc add pop bound or lgdtl add xor pusha push jo sti out cmp add add or inc aas pop add in add cld add pop test pop adc (bad) cmp sub pop pop add add std pop repnz add add add add push inc add add push ss jg pop or mov (bad) aas pop xor push add xor xor push add add add pushl and add add jo or xor pusha add push femms call add xchg or or jo push push rolb loopne and add js add lock ljmp adc sbb or or jo push or push rolb add add or in jae jae adc xchg sbb lea adc add cmp (bad) negl fadds fisttp add or pop add add add pop repnz add add jne pop in repnz push out push adc incb adc mov test aas lret add add dec pop repnz jmp (bad) in or (bad) dec cmp nop das and bound and cmp insb pusha or xchg pop pop jnp xchg xor fbstp loope jecxz out jnp fiadd dec or or add add add dec mov (bad) jnp cmp ret sbb or adc mov xor cmpsl das enter jg dec and and pop (bad) sti adc sarb aaa adc neg or lsl xor (bad) sbb jnp popa add or arpl dec sbb das mov lock lret pop jae sbb sbb (bad) dec loop lock pop add aas neg mov add add xchg lock add mov (bad) adc add add or adc sbb adc pop rcrb and stos inc and mov pop idiv pop jecxz xchg dec sub add cwtl pop add mov pop or add sub add lahf dec loope rcrb out das (bad) jg add and add cwtl add add out xor incb add push push add push cmpsl jae mov jg xor mov cmp cmpsl ss pusha mov push (bad) or sub inc dec cmpsl jp sbb mov faddp jp pop or daa ret rolb xor add and (bad) popa outsl and sub insb nop mov jnp and aaa pop lret inc ss pop arpl shlb mov mov mov in or das add mov cmpl sub ret fwait imull fsubs or pop insb pusha mov psubusw xchg popa add orl cmp sbb mov mov out mov add xchg pop fiadd aaa mov (bad) incl adc push add xor or fild mov adc sbb mov sbb xlat and lock das push or cmc and add mov fildll or clc loop sbb dec xchg mov data16 or add sub sub push add sbb dec fistl out sub xor add shrb add jnp cmpsl add roll sarb inc pusha inc and sbb sbb mov and aaa adc pop adc mov out lsl cmovp inc xchg rcrl mov sahf scas sbb dec push insb pusha ret fiadd cmovnp aaa shr pop cmpsl pop popf push add fmuls jnp jae pop add mov dec (bad) aas sub pop dec ss fadds xor add lds xchg (bad) pop push adcl xor pop and and (bad) bound push sub jg cs call adc ds add mov idivl inc xor cmp xor add xor repz cmp or adc add daa (bad) jg sub pop js add push mov mov sbb popa orb mov pop sub aas sbb (bad) xor sbb and mov add mov xchg mov mov mov sbb sub jbe leave and add adc loopne iret pop or pop rcll or incl pop dec push add or inc call or xor jmp add mov cmp or add add mov ret cmp loopne lock popa add (bad) ret mov (bad) lcall imul imul add xor pop fdivs add das add jnp,pn lcall sub xor sub xor xor (bad) xor xor cs sub imul pop arpl dec xor inc fldt dec (bad) xor sub daa es and pop outsl or xlat sub jecxz popa pusha (bad) mov mov (bad) xor and sbb pop test pop jb or mov mov fstps fcomps arpl add faddp inc aas cmp insb pusha add addl mov faddl inc ss xor pop outsl pusha and or notl pop adc and mov or xchg daa daa ficom fdivp jnp jmp incl pop sbb add add add xor pusha pshufw or mov jmp repz adc test mov aaa mov mov lsl fadds mov sbb jg (bad) fadds sbb mov push outsl ja dec ret pusha lds dec push xchg xchg or mov jg (bad) inc call add or pop sti add sub sbb mov pop fs fmuls xchg arpl xor sub xchg sbb fistl lret sub loop adc xlat mov lahf push pop and or ret popa pop inc rep test xchg push popa and decl xorl push fcomps aas scas daa xchg hlt sbb btc popa test rolb or inc testb mov add das and pop test xchg mov and add iret add mov pop outsl pusha inc cmp sbb or sbb ja pop lock or or daa push ss jae mov daa jg sbb (bad) jnp push outsl jnp pop push jae leave dec or lock addr16 jnp xchg or repz arpl fbld (bad) popa ret divl js or mov add sti sub and sbb fistpl mov mov pop sbb pop adc daa pop sbb mov subl aaa mov xchg dec sbb sbb imul loop arpl pop enter imul mov rcrb xor inc js push aas sub xor (bad) jge (bad) mov pop inc mov cmp mov xchg sbb aaa xor xchg sub arpl ret push sub push std add or pop shlb add add push xlat add mov rclb mov lahf fistpl add out sub leave push or xor ss xor jecxz xlat lea sbb mov xchg dec pop push cmp jg lret or dec add xor xchg jae xlat (bad) sbb sbb mov roll mov or pop outsl sbb inc jnp sarb jecxz stos or fwait pop test pop fwait mov test mov ret fidiv pop xchg jecxz lahf mov adc xchg aaa jg rolb cmc ficom xor aaa mov pop imul fidivr sub sub xor imulb mov pusha outsl and cmovae xchg pop shrl or pop and fnstenv fcoms push jnp arpl add or call jae lea cmp pop daa faddp xchg and or or sbb or mov popa out or repnz adc xor xor js pop push scas ljmp (bad) and ret xchg push pop and pop add mov (bad) and pusha sbb lret or mov nop faddp fisub xor loope nop ficomp sub mov fcoms fisub jg pop outsl pusha out xor push setb pop mov rcr das lret or xchg out enter imul fcomps rcrb pop rolb inc push btr outsl leave pop mov loop mov orl cmp add push xlat pop mov push xor mov mov or adc add add xor push lds testl mov rolb xor out xorl add pop insb leave fsubrs mov rol xchg (bad) add push add shll sbb and enter lea dec inc cld lcall adc add add and xor pusha or movsb xchg dec jmp and mov xor pop es xchg adc das inc mov mov cmp hlt xor (bad) add xchg mov or jae xor push add stos jmp jmp pop adc aaa mov and pop ss fisub jg ja and scas jmp mov mov out bt sbb mov mov mov and insb daa push adc push out mov das fmuls fcoms fcmovne xchg sbb fstpt fmulp inc ret cmp enter xchg sub mov inc das adc in lea and jnp mov outsl imul push inc cmp mov xor push cmp pop add rep xchg add and pop fwait add incb (bad) add add or das orl mov je adc mov pop sbb adc xor xlat (bad) or ret ja push sbb jg and xorl sbb fs xchg xor cmpsl or stos aaa sbb lahf movl adc push jecxz add pop pop mov mov jecxz pop add pop add mov xor and sub aaa pop (bad) seta add and adc (bad) js jnp arpl roll add mov or das jnp mov push scas pop adc jecxz jmp xchg popa xchg fiadd out aas das pop fcomps sbb dec cmp or ret and inc loopne mov addr16 data16 (bad) jecxz or adc fmul cmp daa mov idivl addr16 ret push and mov popa addr16 xlat or pusha ret add fimul cmpsl xor push xchg stos pop sti pop loope sbb imul sbb jmp inc icebp aaa ret cmpsl inc xor jo mov push xchg das add xor sbb jnp pop pop sbb js sti pop fadd fimul aas add pusha add pop or mov xor dec inc (bad) mov mov add fcomps pop add iret das nopl or pop inc or sti add sbb add or add pop sti or or add jge js incl gs add adc push add dec push (bad) leave mov xor add rorb and push pop fimul jnp adc pop scas negl jnp push iret mov lea das aaa add xchg xchg rcll add sbb sbb jae adc mov jnp add mov adc incl faddl jg add insl mov testb inc xor repz ja les sbb jo lahf inc adc sub or cmpl inc dec mov cmp sbb cmp pop dec les mov pop or add or add or int mov cmp sub add add addl cmpsb add or push xchg mov fwait jae (bad) lcall add pop or add add popa das ss mov pop dec dec neg push pop add sbb adc or sbb (bad) lcall sbb add mov add add add add mov add add add (bad) sbb push mov ret fildl outsl fcomps aas pop inc or jg or incl or add (bad) nop mov cmp inc sbb fbstp and sbb ja or add or andl and cmpl or pop and daa idiv mov aaa pop or add add add fidiv or sbb xor xchg ss sti mov inc call adcl mov insb fs and and push xchg lea add and pop (bad) mov sub push or inc outsl pop add aaa pop inc sbb mov or imul sbb pop sub pop or pop pop test cmp daa mull (bad) out adc push xchg adc pop mov mov das inc arpl ret fdivs shl add add ficom aaa push pop or jmp cmpsl popa out mov pop add pop jnp fmuls daa pop push add outsl pusha add pop and xor add sub rcrl shrl xchg cmp scas and fcomps fdivs sbb ficomp and push add dec sbb cmpl add imul mov push sbb sbb loopne addl pop add bound imul cmp decl sub and sti stos push fnstcw lret xchg pop sbb mov xor cmp inc add scas adc rol std aaa cltd movsb add add mov pop rorl les or adc outsl aaa in mov cmp and pop push fidivr sub cmp arpl sbb adc pop push and testl inc xchg in sarl mov sbb dec das addl jae js ret jae insb pusha ret xchg pop sbb add sbb jo inc ja ret push fstps rep sub popa lret jecxz cmp and pop inc lahf sub add mov and imul pop xchg lret popa or (bad) jecxz lahf xor sbb and lret js fidiv xchg xchg loope out dec lret rol icebp and pop jnp mov decl rolb push and sbb aas nop sbb popa aaa pop and pop mov testl pop jnp and cmp aas ss and cmp dec jb inc adc jnp add repz sti or dec mov add roll and sub push (bad) and xchg mov outsl lsl and aaa jno push or inc xor xchg xor pop push out lea push testb push outsl xor decl fmul push cmovae (bad) mov jmp sbb movsb xchg or aaa add xlat push popf sbb out dec add or daa getsec add or pop subl jp jmp lret popa inc jp and out or push repz shlb and push dec jae (bad) xlat add test inc push xchg aaa xchg fisttpl push std (bad) sbb test add add aam xor cmp dec xchg fbld sbb jecxz jnp and pop das (bad) loope insb fmuls pop adc xor or sbb xlat add fimul push (bad) mov hlt push jmp or push mov add js add push add push loop fbld add ficom fidivr jae mov push sub mov and scas jecxz jp jecxz aas and insb add daa pop add or mov jnp jecxz or push add jnp push das sbb pop and ret xchg cmp rcll cmp arpl add inc addr16 xor and aaa inc and sbb pop lahf mov push pop xchg outsl fs lea pop das aaa adc dec out jnp sbb mov or lods xchg nop ljmp in or mov fwait cmpsl aaa xchg dec ret add jmp ficom daa cmp dec hlt (bad) push aaa add or inc adc test lea rolb push add das or sub or les pusha xor sbb mov add xlat fs jo xchg cmp lahf or adc dec das addb ja movsb aaa insb or imul xorl add fiadd sbb pop and xchg xor rclb xor daa lock inc mov sbb addr16 add cmp loopne jecxz cmp cmp xor aaa in hlt xchg inc xlat pop xchg and lea mov inc pop daa mov adc ret xor sbb orl imul add add daa ss or faddp push jnp mov sahf mov aaa adc sbb mov push ret push xor sbb ret cmp or add or pop add pop in jae add je add pop push (bad) mov shll sbb jmp sbb jno dec rcrb inc add fs xchg mov jae testl and xor push imul fmulp xchg pop sub add fcomps pop xor jecxz and fwait inc shrb cmova lahf mov popa outsl (bad) out mov mov xor movq sti pop pop outsl fs xchg pop aaa ja ss sbb inc pop inc sar or mov popa stos adc push neg jecxz cmp and imul outsl and orl hlt sbb lahf daa ret push (bad) sbb add aas xor pop popf xchg mov inc sbb movl xchg pop popa orb ret and inc or stos aaa inc loop pop fninit mov pop adcb popa mov rol bound cmp fistpll popa adc cmpsl add adc sbb repz and add inc pop push hlt push sub mov cwtl mov incl loopne add add add inc addb add add pop add sbb jo sbb push add cmp mov rclb adc jnp add aaa or add sbb add pop add mov add adc cmp add pop add add aas add loopne push add mov or das addb and inc xlat out or adc jae jne add ret add xor sarl or and sarl or dec (bad) xor push insb orb xor call add dec (bad) xor xor jne xchg aaa dec (bad) xor rcr push in and xor add sub push sar (bad) mov add add add add add add add or add (bad) (bad) (bad) incl adc adc adc adc adc add add add add add sbb add add add add add and add adc cs xor sub mov fcoms jb jg push test je jb pop sub pop call rolb jb xor pop xlat pop inc inc inc sub (bad) or push xor es xor adc add and adc bnd push fsubrs pop cmp ss fiadd aad pop popa in jae je subl insb test add add jns push ret or pop cwtl or dec (bad) adc push jae pop pop lods orb jo push lock jb popa jae outsb pop jo jb jae xchg test ror sub add jnp imul pop jmp add punpckhbw pop jne gs int3 inc push sub inc cld mov jo jg pop stc gs insb outsl outsl imul add jecxz jno sub pop cmp mov bound sbbl bound inc adc jne pop sbb int3 adc adc cs add sub cltd sbb clc fbstp outsb imul pop sub inc mov mov popa jb int3 or fidivr je jo xchg sub dec mov cmp and push outsl sti fs adc mov or mov sbb add adc sbb or cmp insl jle push and daa or jnp,pn sbb push stc adc add nop fs test nop cmpsb sbb aam mov cmpsb test push add enter in add cmp pop sub push sbb jo push fs jle jp or enter fadds hlt fs addl ja pop and inc push inc push sbb addb fs lcall inc call and inc push and cwtl orl mov call and or pop xor push push fs inc push sbb sbb decb fcomp adc pop sub dec push xor and and ror xor or push push pop push sbb push bound fs inc xchg movsb mov nop inc push (bad) (bad) lock pop sbb orl inc push fs xor and and cmp jl pop push sbb inc dec pop sbb jo xchg fs inc push movsb ret inc push sbb (bad) sbb fsubrs pop inc push fs enter cmpsb xor and mov or push push pop and inc push sbb pusha push sbb mov shr add enter push sbb xor orl bound or enter int3 push xor and cli or fs ror and ss nop inc push sbb addb fs cmpsb mov sbb lret xor flds adc pop xor and and mov mov in in and adc pop sub sbb jp inc addps fs roll jo fs inc push mov sbb sbb push adc pusha pop and xor and and and cmpsb orl scas mov enter mulb addl cmpsl or push nop inc push sbb sub push sbb push push sbb insb jbe sbb mov movsb scas mov inc push sbb enter sbb ljmp or and enter ds push and jo or enter xchg or enter mov enter (bad) int3 enter (bad) loopne ror xor add (bad) or push sbb push sub sbb cmp push fs inc push pop data16 inc push sbb mov mov push sub lcall les shrb sbb loopne cld or enter (bad) sbb sub orl pop push jb mov test les enter fsubp shll orl or fs adc fs inc push ds push nop inc push sbb jo push sbb xchg push adc pop inc cmc push and inc jge (bad) fild jbe insb gs mov test mov arpl stos test cmp js add jg inc add ret outsb push popa or xor xor andb sub pop add je dec outsb adc (bad) mov imul and add mov cwtl add push add ljmp push add inc fs arpl imul adc fsubl add outsb push adc clc add out (bad) decb imul add add addr16 dec gs bound and inc js add (bad) lds je add mov fs jo outsb fdiv out gs jg gs or (bad) fs mov gs and jb jno xor scas or add or outsb push jge and sbb add jg push in gs dec outsl add push add add sub fdivl or jo jp jo inc adcl test and out mov popa inc cmp js push cli lea add or add fs fwait fs rcll outsl lret add popf sbb fs pusha fnop mov mov mov adc or mov inc cmc sarl outsl insb adc decl xor push outsb popa jo push fiaddl inc xchg jb je inc mov jb jmp adc ret outsb sub add popa je cld sbb lea sti add sarb (bad) add daa pop and ss push outsl in or mov pop dec jae insb gs orb je jb bound mov aaa sbb popa arpl sar cmpsl cli mov push add insb add jb (bad) icebp insl popa je cmp outsb add gs cli sbbl or jne jae jb jnp jle add mov jnp adc fwait jne push arpl fs (bad) sbb push imul adc push imul dec push dec rclb sti xchg sbb adc add adc int add (bad) fisubr adc add adc popf icebp sbb je ret int3 fisubrl cld adc (bad) dec jae (bad) adc inc xchg mov jmp xor mov out adc adc inc add pop dec popa jae fiadd add (bad) adc movq repnz ja jmp adc insb gs ljmp push shrl idivl adc mov sub das pop test dec sbb bound dec data16 outsb jo lods ret jnp je jae pop pop add push add pop adc outsb imul popa jae add adc xor nop jmp leave jae jb rorl add push (bad) fsubs adc je jo push mov cmp add push add inc inc mov fild add xchg mov test ss sbb popa jae and lcall mov (bad) or je js adc pusha pop mov (bad) adc test fnop arpl imul add pushl xor add add outsl bound dec and incl js add add sbb sbb pushl push jo outsb outsb adc dec jae inc inc push dec gs fs jns gs loopne jge adc bound addr16 inc outsb je jbe pop incl dec inc dec popa jo push outsb addr16 dec add jbe addb dec outsl popa lods fdivl push sarb pop packsswb xor arpl add clc inc mov dec add dec outsl jbe mov das test (bad) push outsl push imul add mov popf fiaddl popa cmpsb add imul cmpsl add and scas add inc imul mov dec mov add jb push gs outsb arpl jno mov cwtl gs ret jno gs jle push mov sbb xchg xchg int3 add imul jbe jmp roll push and pop ret rcrb add adc emms rcll into push add adc pop xorb imul out inc add pop repnz gs jae mov insl outsl inc mov cltd push imul test add add gs icebp add pop dec jg cld or or je std inc adc push mov outsl push and or test leave cmp or adc mov loopne jns add sbb push and push js pop or and adc add add gs hlt xchg jno xor jb lds xor pusha pop xorl cmp (bad) jg (bad) addl or push inc add push addl loopne sbb add dec js (bad) into outsl pop pcmpeqd push jle push outsl imul lock lock mov pusha inc add jno adc push out fs add xor dec jp sbb inc add mov jge xchg push push int xor add jbe mov sbb ss nop invd sub pop out cltd adc jle pop outsl add gs leave nop or aam mov push add inc lods imul subl add or roll fdivrs cmc sldt movb jae (bad) or gs or fiadd leave or push jb xchg push fsubs imul aad movsb add and in add adc add gs mov push popa push mov adc imul xor insb insb fsubs icebp xadd or jmp test pop ret adc xor aad jo pop push jne bound (bad) sbb add scas fs adc add add and jne into test aaa int3 sahf push add movnti cmp jae gs incl sbb jb add pop pop pop insb arpl add mov pop push mov popa jb jbe add fs insb outsl outsb scas (bad) mov push jae jb outsb jge sub gs sub decb ja add fs jbe push or fstp out sahf dec add insb arpl jbe pop add pop (bad) mov pop arpl pop insl popa cmp xlat pop popa addr16 (bad) jo jl add jne out cmp imull add jne pop popa arpl insb outsb add fdivrs addr16 xchg add outsb jnp inc adc pop arpl lahf in scas cmp add gs fs or or sbb pop lock mov decb fwait add and adc and add and adc add sub add in jmp sbb mov pop jo add imul fnstenv push or outsb pop outsl pop (bad) add jbe lock xchg add jo mov outsb ja std subl fs pcmpeqd fadds in or arpl add and jne jne je popa add sub insl icebp or fist add add pop jbe outsb dec idivb jg add arpl add push xchg out jle sub (bad) or jbe (bad) or imul fidivrl sub lahf cmp or out rclb outsl imul add add jns add add cs (bad) ljmp cmp outsl sti add add nop loope mov je add add or rcrl pop pop dec add pop aas sbb fmull xchg xchg pop mov imul loop pop inc nop add jne jo jg in xor mov mov add outsb addr16 mov add addl insl gs arpl orl add jo test mov xchg rcr or mov jae std loop cld xchg add add add cwtl addb arpl mov outsl andl jae stos add jb es add pop insb in jae jb mov jns or sti jns or insb aaa jnp jbe add or ja (bad) pop mov push add lds and mov je ja or add add je (bad) add add arpl jmp inc add or (bad) (bad) repnz or jbe xlat push (bad) or jb add outsl decl add call (bad) fist notl es (bad) daa adc pop push add pop add jp gs push aad outsl js pusha inc push mov jo ficomp inc ret dec addl add test jmp add sub (bad) mov cmp sbb sub and xor push add andl (bad) idivl or insb insb add push arpl inc fcomi std inc inc jb insl add push dec add or add push outsl and les push push sbb je scas inc sbbb and add ja inc inc dec jae add xchg add add xchg add add xchg add (bad) cmc xchg add pushf add (bad) pop add popa insl add add or nop mov movsb outsl jo add movsl add outsl outsb insb add pop jae stos add sub add out jg outsb add scas add add add add pop je cmpb dec mov jae dec inc add add mov inc push dec ja sub adc dec push dec rcr fisttpll cs dec dec adc sub add inc push dec inc dec xchg cmp or sbb add jbe or je add push lahf push jle mov lsl inc push arpl adc js cmovne cmp add xor loopne fsubrs add addr16 nop sub pop inc and xor in xor sbb adc add pusha and pop cmp push add popl loope mov add pop push adc subb pop adc rolb sbb add add add pop pop add pop aas mov push add add add add adc inc push push add in nop test rclb nop cmpl pusha and pop adc in add das pop das mov mov in sub inc or cmpl and (bad) movnti out clc ja add push add or divl push add jmp jg add add and inc add ds adc pusha ss adc aaa add testl (bad) incl add cld decl push pop pop push push push push andl scas sti repz push push mov adc insl xchg (bad) lret insl pop ret ret ret add mov arpl lahf xchg fisttpll std add mov xor iret mov gs pop test mov pop pop pop pop pop iret stos roll push push lds pop push mov out adc pop inc mov adc (bad) pusha pusha pusha aaa dec loope pusha subl jb por and add dec and push push push mov flds in jge or cmp sub add inc pop push leave sbb lahf pop push fbstp das cmp dec jmp dec jb mov dec dec dec jecxz fildll and pop push pop aaa mov mov bound and sbb in sub pop imull outsb adc fildl test int jl shrl pop (bad) stos jg push add add ljmp outsl sub push scas add mov mov lods js js ret testb inc sbb arpl mov sbb jg add push pusha jnp ja add mov push add ret mov mov jno ret xchg mov jbe pop adc fdivr jne es xor sbb ja sub rorl in pop pop mov xchg fdivr mov decl dec xchg decb add push add incl and pop adc mov mov rolb ret mov std lcall pusha xchg adc imul add add in lsl mov adc ret scas fmuls jnp and sub mov mov push fadd mov pop ret jmp movsl mov sub mov testb mov in std decl cmpsl add mov and jne in scas add adcl pop push mov imul fstps pop mov lahf adc std add sti mov mov jg pusha das and ss pop pop pop pop popa pop pop pop stos adc or add and nop mov push sbb nop nop nop or (bad) js jnp ja add push lret dec addl pop add inc fsubrs fisttp add add or pop add jne std add ret push fadds jmp pop cmp adc aas lret insb dec or lret outsl out cmpl dec add xchg and push mov add popa out imul push add mov insb add mov xchg or pop mov mov clc add sti xchg adc imul pop add or and adc mov (bad) adc (bad) (bad) dec add mov cmpl fucomp xchg incl mull mov add mov fsubrs (bad) rorl aas mull mov pop enter mov insb add (bad) jmp in pop fnstenv decb push pop push aas inc mov or and sarb xchg aas adc xchg sub rol mov mov jne incl mov or fsubrs pop popa mov xor call add jmp pop mov mov or inc (bad) decl jae pop aaa mov stos imul ret xor xor imul pop push mov incb incl xor sbb fmuls jae stos (bad) jg or and push lret aaa loope mov imulb pop sbb inc bndstx add stc mov add mov std push sbb xor xchg mov lcall divl pop add stc pop jae dec scas out add aas dec rorb repz mov pop sbb inc push lret add jbe and pop orb jmp xchg push ret addr16 cmp pop js xorl pop decb in jb pop test inc add inc add push ljmp mov movq ja mov fsubs test cmp inc inc mov or mov push aas iret add ljmp pushl call fwait sub jne (bad) adc jg stos out sbb add mov add (bad) or sub loope cmpsl or je inc dec xchg imul test adc dec xor gs lcall lcall push push push jne push push movsl dec dec dec lds sarl ret pop mov scas scas scas scas sti adc data16 add xor dec inc and pop aaa sub xor imul and lahf xchg xchg xchg add push addr16 daa or inc and adc jnp arpl dec mov push push and pop push push push stos gs add gs pop sbb push xlat xchg int pop pop jmp lea bound jnp out mov or inc negb pop packssdw xchg pusha and push xchg sarb dec dec sti jg add inc xor dec adc fxch sbb adc loope sub popa subl ret mov add test cli rolb mov mov lret mov push out pop cmpl push testb jo inc xor cmc add in sbb imul pusha dec jp addr16 cmpl adc sti cmpsl arpl add dec std pop je aaa aas mov testl pop outsl xchg in pop xor mov pop test fs (bad) mov (bad) in inc add ljmp inc fmul or jg inc or jnp arpl mov mov push out push lods xchg daa jg popa out or inc sbb mov addr16 mov ja mov jg iret push imul enter push push test insb aaa std subl ficom call push xchg sarb fistpll mull popl or mov test xor enter das incl or fidiv jae push push ret xor add jg roll lea dec cmpl pusha out and and xchg movl jg mov je aas cmp inc fnstenv or decb push pusha ret into jnp pop pop cmpxchg adc and ss or incb decl add add popa and incb mov add out (bad) sub mov jge push xchg cmp jns subb subl pop or or test add jbe pusha outsl sbb pop add stos jg sub test cmpsl cmp adc lar icebp and mov insb and daa ds push std add or add pop div add add sbb jo mov add out mov add jne pop cmpsl in pusha add addr16 mov adc jae sbb ja xchg or aas pop jae sub incl popa add adc or inc xor sbb arpl divl add (bad) xor xor push or insb xorl dec xchg out incl mov daa and scas xchg dec mov ret mov js je clc adc xchg or xor mov adc xor jae movq dec cmp xorl push cmpsl or stos cmpsl inc or xchg inc xchg sbb push push push and out fsubl pop lds in adc adc daa pop arpl add test stc stos pop andb lret add pop or bound dec dec dec mov lods sbb xchg sub rsqrtps jne scas icebp inc loopne xlat lea out add in jne inc add decl cmpb dec mov xor out jmp lods test out arpl scas cmp aas xchg call cmp (bad) repz lds (bad) ja aas cmp add (bad) mov inc aas mov imul leave add aas push push push gs add jnp pavgb adc cmp push jmp inc xor jmp popa (bad) incb mov push add incl mov mov jnp pop repz (bad) lret and imul test cmpsl and pushf movsl int3 or mov aas lahf mov jne jmp sub jge sbb leave xchg or pushl jne scas test daa popl add push inc stos (bad) (bad) sti mov cmp xlat or pop mov sbb mov xchg nop jb movl daa ret std ja cmp (bad) and sub sbb xchg (bad) addr16 or mov sbb daa pop cli adc add mov add xor test and fidivrl addb test xor xor mov or push push scas or push or mov dec add push std jle and out (bad) push add fcompl pop aas cmp add add add adc std scas add add imul or or (bad) mov xor add bound push fnstsw add push add add insl add popa das jns mov xor jmp sti mov sti add insl pop add sub adc cmpsb test cwtl imul mov std fstp fnstsw pop add push cltd add imul cmpsb test psrlw sub test push jb jae pop mov inc cmp xor scas mov add sub lods jmp lods insb dec outsl mov jne add mov adc add adc out mov add add adc sbb add addr16 push push out xor pop jmp jnp rclb or pop rorw sub jecxz add je xchg nop adc add fsubrs add mov inc cld adc in add test sarl sbb test mov add std add js insb jns and decl cli xor and cmp sub cmp and popa outsb fs loop and jae aas ds (bad) out decl cmp jae gs bound aas outsb jae and outsb cmp push sub insl lea data16 arpl cmp insl int clc ljmp jbe and insl popa outsb imul push std lahf insb or and jb jae out fisub mov xor cmp arpl adc je push adc bound push push or rolb (bad) out out (bad) inc dec gs insb and and dec outsb jbe dec popa psubq jb das xor das push cmp out dec test cmp les cmp mov out jo je bound sahf (bad) cs jne nop sub aaa dec add sub gs inc and insb outsl ja imul xor (bad) sub lock adc and leave popa inc and dec hlt (bad) (bad) (bad) decl and cmp xor xor xor sub sub xor clc sub jb xor jge daa mov mov aaa xchg xor xor cmp popa sub bound xor xor xor xor cmp popa cmp (bad) (bad) aas xor xor cmp sub sub sub sub xor and popa xor ss xor xor aaa arpl ss sub sub sub pushl xor xor and add in adc mov xor popa xor sub sub sub cmp mov (bad) xor popa cmp xchg xor js das in fsubrs or adc call lods add decl icebp add mov pop mov jmp js andb mov push mov enter fsubs jmp or jo andb mov loopne lock std aas sti mov addr16 js mov scas je or add pusha pop mov mov inc (bad) out mov aas add inc mov mov mov add movsb add pusha movsl andb movsl add pusha cmpsb (bad) (bad) (bad) incl cmpsb loopne add pusha cmpsl andb cmpsl add or es push popf movsl jnp or add loopne call test jns mov inc ja fisttp mov enter ffreep jg call mov or or inc movsb dec movsb push neg ja movsb pop movsb pusha movsb push movsb shlb movsb clc test or dec movsl pop movsl push movsl cwtl movsl mov cmpsb mov mull call cmpsb inc test pop test jo js or (bad) ljmp cwtl test mov mov test mov (bad) (bad) ljmp sbb xor dec stos push stos pop stos pusha stos push stos cmp (bad) ljmp cwtl stos mov stos mov stos shrb push stos cmp (bad) ljmp cwtl stos mov lods push lods pop lods pusha lods push lods subb jecxz ljmp lods mov lods shrb adc inc lods dec lods push lods add add enter cld (bad) ljmp or cmp dec scas pop scas push inc clc mov scas test mov add dec (bad) (bad) (bad) cmp mov mov mov or cmp (bad) lcall push mov mov mov or loopne sbb out push enter add cmp pop xor sub lock incl call lods adc lods jmp out mov jecxz (bad) (bad) fmuls add cmp pusha lods push jnp out ljmp test mov shrb adc lcall inc scas push scas pop scas push scas mov mov mov scas loopne rcll (bad) (bad) call scas adc xor or inc hlt mov scas shrb lock add btc fild mov xchg mov popf dec xchg mov int fdiv or sub push mov jo and mov cwtl mov mov push rcr popa adc nop push mov rclb sbb adc leave pusha lds movsb nop imul push xor imul lock and xor jae jne xor ror lock jge aaa xor xorl mov sub mov add cli xor jo mov shrb add movsl movsl leave mov jo nop sbb jmp cmpsb adc mov cmp sarb lock adc test test test shufps test test test test test test test test test mov test dec movsl pop mov mov lahf xor cltd xchg loopne call stos or ljmp xor push stos lods stos mov stos test mov shrb lock jl (bad) js scas or jne push jno (bad) arpl scas mov jns scas enter mov arpl jg or dec add mull movl mov (bad) mov clc mov ljmp jno jae push arpl jae jne pop push adc dec mov push cmp mov sub sub push orl mov cmp outsb std push mov test mov (bad) scas scas scas rolb add add adc mov jg js pusha or test mov test sub cmp pop xor push mov inc pop jmp lock clc inc sbb je dec cmpsb push cmpsb pop fistpll cmpsb nop mov clc inc and sbb sub push cmc cmp add mov aas inc push mov adc adc (bad) sub incl mov add nop add (bad) icebp mov out or call push pop mov int mov mov mov outsl addr16 insl and add stos add jne fiaddl in and outsl mov gs push inc add and loopne lock leave add sbb mov sldt iret jne xlat test adc popf or cltd cmp add int pop add sbb fcomps xlat add and mov sbb push adc add or hlt out add pop jo add cmp notb out add verr jnp or pusha setle int3 mov verr xchg add push add iret nop mov inc imul das pusha add jbe sarb sti repz xor add pusha shrb je notl add loopne and (bad) lock int3 and daa inc cs mov popf imul adc cmp daa in and mov idivl inc add inc bound or mov pop add and add and or imul xchg add push ds out inc (bad) add inc add out loop mov lahf fstpl inc push jae daa in jae arpl and fninit out loopne mov (bad) gs repz mov cwtl jae cmp movl pop repz lea add call sbb shlb fisttp movl and movl clc sbb lock add je movl mov sahf pop or or add push stos or mov mov dec add sub mov call cmpl mov insl xor add xchg cmp mov mov nop mov lahf cmp jg jne movzwl cmp je push add test (bad) mov test jbe clc xor test (bad) fisttp ljmp popf inc mov test frstor cmpl sub call jnp adc sub mov and add jne dec jbe or add add sbb mov sbb and call add ret xchg push xor mov fist in push lea push mov sub rep mov mov add (bad) in fstp decl loopne movl add int3 movl in adc ret inc clc out and mov scas test (bad) jg mov js mov jmp cmp je rcrl call in add fdiv cmpxchg or fisub cmp je out (bad) jne or add fisttp pop test je mov dec add sbb xlat add add addr16 mov rolb jno pushl dec add adc insb pop add add inc std mov pop or call and call pop add add push mov (bad) (bad) (bad) std and je mov movzbl cmp jle mov xor cmp cmove jmp sub test jne jmp pcmpeqd (bad) jg ss mov fldl adc (bad) inc rolb mov add insb fdivrs sbb lods clc loope decl push or test mov add mov (bad) lcall stos mov lea mov mov add mov mov jg out (bad) decl add mov call lea inc dec mov out ja cld mov mov sbb dec and call xchg jne mov loope jle add movl mov or mov std mov adc push inc and mov jbe add stos dec call mov sti xchg test je leave test jne call fldt sbb pop pop ret lea inc aam adc jmp mov imul in (bad) inc jecxz jbe fucomp mov adc testl testl js and (bad) jne ja out jle jmp mov call add inc mov sub sbb outsb xlat outsl or call and jmp out (bad) (bad) (bad) call mov jbe movl jmp jbe (bad) (bad) fistp sub sahf pop loopne lods sbb add push arpl jno adc stos mov es adc mov ds mov xor or cmp fisttp add test je jbe xor xchg dec enter call or adc add mov ret (bad) (bad) fbstp add mov jmp jmp cmpsl add out mov scas sub mov dec push ror fst mov and adc mov nop ficompl and jge xor stos and ret push lcall ret mov call jae sbb sbb negl sti xchg aas aas mov test je mov call jae bnd enter sbb das mov cli std lcall testl and or mov adc outsb add add or sbb pushl test xor jmp leave jmp pop mov arpl inc jl push xchg pop sbb call push add push push pop jmp fs nop or scas dec outsl pop int3 sbb test and jno dec popf out scas seto mov mov daa ljmp jbe (bad) je mov call push mov push aam mov lcall nop ds (bad) outsb ret sti xor nop mov jl les add add (bad) or call sbb sbb (bad) adc add lea sub ja jnp pop mov ret add adc sbb xchg jg fildl inc jo add lahf mov mov jo xor test decl push fstpl movups movsd cwtl pinsrw add nop nop jg js inc cld push mov push sub add inc jae es xchg xor lea movl (bad) xchg rol inc adc pop push pop fist call (bad) dec jl js and mov test jle sti jg stc xor xor and je decb stc add stc add stc add dec cmp je cmp je mov mov test mov mov mov test jne cmpw je leave xchg jge add cli adc lds fisub jae dec sbb mov data16 (bad) imul or mov dec dec jl,pt or mov sbb cmpsb jecxz mov dec mov add test lea fcoms es sti mov testl sbb out jne cltd and jl or jne pusha lea cmpsl in cltd mov add lea cld xchg mov jl es (bad) in jmp icebp or insl jne xchg xchg repnz aam or add lahf mov mov aaa or inc or mov decl inc add pop movzwl lea mov movb mov mov outsb (bad) cmp sbb sub or cmp xchg mov push popa mov mov call and movsl adc sarb shll xchg jmp jnp sbb jl (bad) jbe jmp test inc rcrb push xor ja lahf test or add mov std hlt fbld decl push mov and cmp add dec call mov cmp jnp call out add cmp mov cmovl ret mov sbb (bad) sti stos mov movl out movl (bad) (bad) mov and lea shr and cmp jae test je ds (bad) je cmp bswap or fisttpll test add add dec sub mov add or fwait cmpsb imul shlb call aam push jge adc add out jle rol inc jl add stc sub mov inc mov rol jne jl in or cmp dec stos xchg fdivp sbb fldcw jmp add add scas (bad) loop call mov mov leave xor pop scas push push xor or int in insb cmpb cmp jb or dec incb sahf mov mov (bad) jp out cli mov mov jg cli nop fistpll cmpb jne mov sub mov xor xor aas mov adc jle data16 out adc rorb jmp adc cmp pop je mov lea cmp jg mov dec pop mov cmp jae sbb rorb (bad) dec mov (bad) out loop mov pop (bad) cmp aam xchg je push mov mov es pop mov sarb push mov ss dec popa cli dec sbb je mov mov sbb mov mov mov mov cmp add mov leave push mov sub imulb pop push pop jnp (bad) (bad) dec and mov mov mov sbb cwtl movl mov mov xor movl jg data16 mov sar sar and mov adc fildll push add dec push jnp sbb minps fcomip mov and push dec bound into add adc cld mov movl (bad) xor pop pop jle (bad) out mov daa pop mov call sti dec xor fisub sti sbb je loopne mov jb fisubr and dec fs pop mov sti test movl dec pop insl rcll mov dec pop push movl or jge mov pusha (bad) (bad) seta inc or movl jne (bad) std pop mov movl xor pop lds lock xchg (bad) xchg add pop cld mov mov and or or xchg dec fnsave loope inc rcll mov pop and ret std mov mov inc xchg cltd adc pop xor jne dec lock in fidivr jnp add cmpl jnp or xchg or sub rcll adc cmp jb inc mov in sub or jmp add jbe loopne loope test je pop cmp (bad) mov in and mov je scas jecxz adc sub or dec and add cmp cmp (bad) int test sub stc cmp jb sbb sub add je aaa in mov lea outsb or and out pop xor (bad) out jbe addb movl cmp (bad) pop mov mov sub std mov cmp inc adc out mov dec add inc adc mov addl add pop pop pop sarl pop sub add cld dec outsl xor repz cmp lea jbe inc jg mov mov cmp lcall test mov insb gs xchg jg jmp cli mov cmp cmovae inc jne cli mov add jne push add iret sub push pop in xchg mov sub add cmp ja (bad) gs sbb lds lds sub xor jmp push dec aas test mov fdivrs ret inc xor pop xchg jmp or je loope idivb push push add mov cmp push jmp and rcrb mov jb pop add pop and ljmp sub leave mov or (bad) jle shrl pusha add mov fcomps not mov and mov mov and aam out addl jne clc push ja sbb call and jmp mov add lods sbb (bad) fcos mov mov mov jmp lret or dec mov je and rorb and call out add lods and dec and ds mov out sbb mov cli je,pt cs inc sbb cli repnz jae pop stc cwtl jmp pop and pop sbb outsb sbb xchg and adc jmp xor call cli loopne pop std pushl fildl inc or movd sti cmp mov lods adc mov test xor adc sub adc test scas mov adc mov jo push adc rorb or lret or adc adc and scas pop mov stc pop xor std out adc andps comisd movsb cli or cwtl (bad) xchg mulsd sti mov lock and addps adc std enter adc subps push cmc pop cmp jne (bad) cmpnlesd or xor sbb sub cmp fidivr mov cli movsb ret movsb jbe out (bad) mov xchg add jne in jg mulb xchg inc je adc add mov mov mov push js dec jge fild push sub add mov cmp push inc je (bad) int3 std jmp mov add cmp jbe stos (bad) or or sar je in jo and imul mov jle idivb adc mov fimul push adc loopne mov fwait (bad) lock cmp sahf mov pushf mov cwtl jb aaa ret sbb pusha out mov andl jnp outsb push add nop inc sub mov mov push add dec push add mov mov add push fmuls fmull iret les out ss pushf out xor or and out sbb adc pop xlat out sarb ret out cmp (bad) push call dec lds test lahf pushf hlt mov nop ret popa and lock lea out add ret mov jg jge mov out andl jp adc call adc or imul popf lock xor add or or pop aaa inc xlat shr and aam xor push shr adc pop fnstsw fadd xor pop cmp (bad) jl push push xor inc mov (bad) leave test inc mov out dec hlt or movl pop inc xchg es cmp fcomi pop testb ficoml push stc cmpsb mov call pop or mov sub add aad (bad) cmp fcoms push rcll repnz (bad) fstps fldcw mov pop add cwtl mov test leave and out popa mov and das ja pop cmp mov adc mov ret sarl js pop xor xchg out cmp cmp je jae icebp cs and aas inc sbb ret and sbb movsb iret jne das inc mov sbb icebp fldl je and add pop divl xchg add sbb jbe clc mov arpl mov aaa js jl inc mov aas lea shl add fisttpll es add test popf fildl in xchg jmp pop or movl mov mov lcall add cmp push add loop (bad) (bad) mov mov and dec inc sbb (bad) popa mov shlb orb lds aas dec lds aad inc aas pop test lea mov pushl mov aaa cmpsb push jg mov lahf mov inc add popf cli jge pushf xchg sub pop iret lcall ud2 loopne inc (bad) pop test mov dec pop lcall insl hlt mov js sub call hlt loopnew mov mov mov mov stos stos sub rcll mov hlt js add movsl test jg ret addr16 and clc fwait movl inc inc mov or stos movl add adc pusha cmpsb test scas sbb ret xchg mov pop fisttpll inc sbb mov dec dec dec xor gs leave popf hlt or cmp xlat xor pop les lock test shlb ds fimull inc xlat xor mov les fdivp ljmp lods cli jne xor pop mov das dec cmp rclb inc cmp and or leave sub icebp xor (bad) pusha inc xor test lcallw and in fadd cmp aas add das lea inc push cmp enter inc dec fidivr sub jae mov lods mov mov jnp mov push popa push fwait or mov mov mov cmp jb cs jg lret or mov add mov dec jl add loop addb ret mov mov int jae idivl sar mov adc push or push xlat pop pusha pop push sub add adc jg aaa cmc jecxz sahf inc inc add jecxz jb mov sbb repnz xchg jae adc xchg fbld nop pop mov mov cmp clc (bad) xchg xchg mov inc push addr16 inc or dec add inc or jne xchg and or xchg jmp jo loope add mov dec insb inc std inc andb inc leave pop sbb jge addl aam js cmc ret out shr xor sbb prefetch cmp stc fsubs nop (bad) decl sti add call xchg mov lods xchg push js loop sub call popf nop push movsl cmp push or mov (bad) xor inc sar jmp mov cmc pop add (bad) shl test je mov jb dec mov (bad) jmp mov xor popf shl push jle imul (bad) push repz shll cli jmp orl xlat data16 dec push (bad) (bad) jmp lea jns jbe popa sarb push add dec aad lea leave lea pop push test arpl inc out adc (bad) jmp and cmp xchg inc jo mov pop jmp addl cmp loopne pop aam inc add out repz jne inc js movq cmp add jmp jg jmp stos std inc je (bad) jmp ljmp inc lret inc xchg hlt std inc and inc int3 jmp out adc xchg mov and or mov sti cmp lock lahf and test mov call stc add mov sarl (bad) mov pop xor cmp and add mov or jmp ret ljmp sub faddp sbb mov bound out mov adc xor pop mov cmp cmp loope jmp repnz push sbb pop pop cltd jge dec mov cmp mov adc push out popa test lea cmpl mov pop fistp pop adc add bound sbb jmp xchg ret lock call rorl pop push dec in xchg push cmp sub jne idivl xchg sbb addb sbb aas (bad) ss add xchg idiv (bad) jmp or inc or call pusha or test adc aaa or test rep and or std lahf adc mov mov mov mov insl ret (bad) cmp andb add mov je and push adc fsubrp mov lea jnp pop daa movsb mov jg out or imul dec scas pop or mov push xor sbb inc scas jb hlt rclb push loopne xor inc mov cmp or jmp inc or insb xchg inc lock je and push hlt dec js je or sbb mov fsubr or and (bad) jo sahf jnp shll xor test jecxz daa aam mov rorl out fwait outsb xor cmc loope push jmp and jecxz (bad) adc or ljmp pop mov lea add cmp ja lea mov and pop xor arpl movsl push fimul pusha cmp fdivrs add out scas adc test mov mov push dec cld adc call lea ret das or pusha enter dec sbb je inc xchg mov lea sbb push jne mov jge loope test mov in test out mov (bad) xor call test cmp daa pusha sbb sbb inc mov xor and cmp int3 pop push mov mov cmp incl lea and mov mov pop js enter rolb pop fldl jecxz ret sub shr jnp xchg cli mov and js pusha jae inc xchg add jg pushl cli add cli add je cmp je cmp je mov xchg mov mov std or add jg sahf cmp jmp push push add push add outsb pop pop push or or les xchg jmp mov adc adc push push scas fistpl setbe outsb loopne jae dec jb jmp enter loope xchg fisttp (bad) push mov jbe jmp mov jo jle test or pop sbb push loop pop popf jecxz push jmp ret sbb (bad) js les mov xchg xor adc cmp mov mov test jmp cld out cmpl call and fdivl push pushw inc and nop (bad) das jmp std ffreep cltd mov ret add test (bad) data16 ret std mov jmp and ret xor jle call incb adc je dec jo mov stc mov xor xor dec xor bnd jp xchg mov ret rorb arpl xor add jae scas jle push mov gs xlat (bad) jne jp mov jle pop cmp lret pop dec dec adc int (bad) xchg cmp push jle inc inc xor into adc in add jnp mov dec lret lcall jmp adc dec and enter cmp das mov mov sbb xor adc (bad) mov jl mov in inc or inc adc xchg loope xchg xor mov xchg lret loopne movsb jmp cmp push dec rcl addr16 outsb xor das scas mov pusha adc inc call mov inc or js orb push and dec or mov push call pusha ret add cmp aaa cmp or and xor mov jmp sbb xor jg test loope and insb rorl loope loopne loop lcall mov sahf popa jbe je es adc or sbb jbe xlat in int and and movsb pop adc jmp mov cmp push and push sbb ret pop mov jmp fdivl dec push or nop xchg add ja pop sub cmpb mov out loop ret jno cmp jae xor (bad) cmp jne sub mov xor test push push pusha cli jl dec mov fwait scas sti add aaa cmp or jg inc jb lahf push (bad) lea jmp ret xor push outsl stc pop add jecxz cmp mov fdivs sbb fnstsw pusha mov mov mov mov adc add sbb mov sub add cmp je stos (bad) xlat push jg and add cmp inc mov in cmp sub test or xchg mov imulb xchg and rorl cmpsb push dec lea sahf loopne add in mov mov jmp sub (bad) (bad) fucomip inc add push mov mov mov mov mov lea pop jge decl cmpb je mov roll pop jmp xor xchg clc cmp mov jo lods inc and bts and push out (bad) mov pop push jno std or shl jle and sti inc mov jae mov jne push sbb shl dec and sti jg fnstsw mov pop sub and roll and cmp je ja lock sub fnstcw dec and ja inc mov add mov push adc aaa adc test out push mov mov mov jecxz (bad) dec add movl or fs xlat lock mov dec or push std adc decl add mov cmp push adc dec (bad) stos outsl repnz lahf inc xchg xor add adc push add cmp jbe je push add inc and lret (bad) test cli ja ja in cli aad xor jmp sub lar cltd jmp lret adc push imul pop sub ret xchg cmp mov stc into push addr16 je xor fsubs or inc dec inc add enter (bad) test inc and mov mov sahf cmp jl add mov mov mov daa or adc test xor dec fst sbb in add call inc aam sbb scas insb and pop cmc mov push loope add pop std rolb adc lds xor stos je js das sbb lcall call push ret sub xchg xchg (bad) dec or and and (bad) pop jmp xor in adc add loope xor jno mov (bad) mov sbb nop pop jmp hlt jo add or mov and add jge jb iret cmp add and int xchg jo add mov inc push pop and add inc or mov out call cwtl inc cwtl jle and test mov or mov jge mov mov jmp pusha xor and and (bad) (bad) xor and sub pop and call aaa je push movsb dec and out fsubr cmpsb cmp cmpb jle mov arpl sbb adc push (bad) incb ds cmp ja out lret rol add add jo pop mov fisttp sbb mov rcrb add or and cmp ja outsl rcrl or iret test pop xor and push sbb mov daa sbb sub jmp add push jmp inc xor outsb je jae ljmp ljmp xlat cmc and divb js adc push xchg sbb or rcrl pop mov das adc ret sub cmp aam loop sbb inc insb dec or scas leave roll xor xor inc mov jmp and fwait es frstor outsb and test hlt icebp popa xor xor jmp sub call pop cmp push je jecxz dec mull std mov mov adc cmp mov and icebp jno das jae das mov out and call sub sbb pop (bad) ja rdtsc rcrb cmpb mov stos add xor push stc inc hlt mov iret adc add enter add (bad) out mov sub add divb in push push cmpsl sarb js outsb and or movsl loopne mov pop insb je pusha inc pop lcall frstpm(287 pop mov (bad) sbb jg pushl test lea lahf sbb add push ret mov out mov add cmp add inc push mov sar jne pop pop mov sbb add and movsb adc je mov and and sbb dec cmp xor add mov enter fstpl mov outsb xor sarb or outsb add sub mov sti push push loop out mov and mov xor shr sub jg (bad) pop mov and and or add movl fsubr push dec outsb dec andl mov push dec add and (bad) and fs inc popf dec cmp inc sub sbb inc outsl inc push movl mov out xchg or and (bad) insb movl clc mov enter movl (bad) cltd mov andw (bad) testb sub (bad) in ds lahf movl xor inc idivl and movl inc jo outsb je inc js sbb mov ja mov mov xor orl fisubl std mov add dec push pop mov test cmp dec pop jne cld push and jae jle mov stos and pop popf or xor lret jecxz dec sub cmp xorl test jns mov sub cli cmp fcompl inc xor clc push je jmp adc mov push ja pop dec and rcll insb and inc or cli and cmp shl lds dec xchg sbb adc mov dec pop push cmp adc add or and mov clc out lahf inc adc leave movl sbb sub pop bound xchg insb lea cmp mov jb push add pop inc out add inc inc mov mov add adc inc in test or inc adc lcall mov lcall xor aas sbb (bad) push xor cmp inc jns or cmp adc and sub mov cmpb ficompl popa popl psubsb cld adc jge xor xor imul pop inc js cltd pop jle sbb jp and dec (bad) or (bad) fild lea mov shr add shl mov shl jno adc pop cmpsb cmp outsl cs sub jb sbb rcl sbb sub sbb ffreep fisttpll cmp xor enter ret decl imul clc cmp rcpps cmp xchg test inc je je push subl js lret jg jecxz push int3 inc and add movl sbbb dec (bad) pusha xor dec and inc or pop adc pusha sub mov add jbe mov mov dec ficompl adc jp (bad) insb mov mov clc xchg dec lea cmp mov add movsb pushl cs add lea lret fidivrl fstpt pop and (bad) xor or xchg out faddl test or jae or icebp inc sub mov scas out addl dec mov cwtl lock sub in jne mov mov add mov jg lahf push les call sbbl cmp add call cltd mov dec add popl add cmpb (bad) xor mov xor mov or xchg insb push outsl mov lock xchg (bad) loopne test iret push mov jmp rol test das push add imul lods sub sub mov in or and mov cmp xor and lds test mov lods cmp xchg lods and faddl lods cwtl js int fcompl or fstpt sbb inc je push xor push push orb or enter add cmp pop add iret jne mov out pop andl cmp cli inc add iret pop mov dec dec (bad) pushl fs and lea add cmp mov jb sbb dec clc jmp jo xchg push push xchg ret push mov sbb pop and test std and ret xor sub (bad) (bad) xor mov je sbb mov lds pop jo add push jmp inc and xchg add movl ja xchg dec dec add outsb mov mov lahf loopne xchg pusha test add adc adc mov mov leave sub mov or mov mov mov push dec sar pop cld daa xchg sar lea insb jno jo and (bad) jb push test jnp enter faddl inc and sbb cmpsb mov scas sbb mov mov pop cmp ret xor insb and cmp das mov ret je sub add cmp jbe fcompl jb add cmp mov out and test jne mov or orl insb and sarl pop inc push xchg dec ljmp dec insb and add rolb dec add call sbb push arpl sbb inc sti add add or sbb inc cltd mov dec push or cli dec and cli push loopne rorb xchg stos pushl xor jmp mov jmp popa enter bswap add aaa jo clc out inc pop out not out das enter push or fwait stc pop inc and xchg popa mov push sbb inc push jbe idivl push lock push push inc addr16 or adc stos push pop cmp pop or pop outsl (bad) aad movl xchg inc pop in jo push add fisubrl xor mov mov insb and lea ljmp lea ret std or add lret mov daa rol inc add js lea loopne ja in xor scas mov ret pop std and xchg adc xor fldl push rclb add outsb nop loop pop mov mov add fdivrl das hlt or in jne inc loopne ja lcall das push adc rcrb inc xor jmp push je cli test add call mov jne loopne imul pop js xchg or loope std or mov xchg sbb mov push dec add icebp or test fadd mov or jmp out xor sbb ja jnp push call xor adc mov popf mov sbb push or hlt sub ljmp in or rcrl imul pushf sub std add sub jmp lea rcrl (bad) sub rcrl inc or jo and inc xor divl (bad) adc ds add pop xor sbb cmp cmp mov nop jg and lret movsl aas (bad) repnz (bad) in sbb aas mov aas xor out cltd aaa aas dec ja fiadd aas int3 adc data16 lret aaa (bad) xchg jo pop add jmp pop shrb dec out xchg (bad) iret xor jmp xchg xchg (bad) xor mov test test call xor xchg dec mov (bad) push cltd sub mov xor jb mov or inc scas mov xor call jae dec popf mov xor push iret adcl shlb sbb data16 out jb jbe push pop or into mov push push mov mov (bad) mov mov inc add clc mov in push push je aas and or fbld cmp sub je add rcr lds inc mov jne loope add bsr pop inc (bad) jmp cmp int gs add (bad) call test push sbb push mov add adc push jl in pushf sub sub enter jle ret xor push add rorb and cwtl imul nop or dec ljmp jb faddp pop inc add cmp adc sbb dec pushf arpl sub fadds fbstp sub sarl push aad jno pop cmp pop sbb xor mov xchg sub inc jg and and sub ficoml aad push jmp hlt sbb sub sub insl adc rclb ja test and cmpl push jnp pop call mov (bad) mov mov mov orb jmp push jnp int3 xor fs bnd ja or xor into nop faddl loope xor jmp negb add insb push xchg xor xor movsl mov add sbb jb jne sub mov mov mov jmp fadds test shrb cmp mov xchg (bad) xor int shlb sbb pop and fld1 xor cmpl psubusw mov call mov in pop frstor call inc mov test sub add out inc test push sub mov popa (bad) push and call leave adc mov jmp mov sub mov and xchg es out aam add and pop jbe and sbb and push hlt sbb cmpsl sub mov push aas sub sub xchg sub adcb cmp aad call mov ljmp add jg jl sub cmp aaa inc adc cltd add fisubl dec and and jp jle mov cmp sub stc in xor xor mov mov jnp cmp xor je jmp pop ret sbb sbb sbb dec or xor into mov dec and arpl call shl xor insl inc jnp sub xchg push addr16 dec or add bound sub nop cmp jmpw (bad) into cmpb push (bad) jmp push mov (bad) pusha test test call or in jbe sbbl dec test pop jmp inc and sbb pop mov inc test int3 mov ficomp jne call xor mov adc cmp and fistp pop dec (bad) into push repnz xchg sub mov mov fldenv or xor fs and inc xchg add (bad) out and cmc push jmp (bad) sbb jmp test xchg cmp addr16 adc ds add add inc cmpsb mov jp jae faddp jecxz jmp lret pushf pop test (bad) je aaa fnsave dec inc add or dec push dec mov mov jne test push mov push loope cmp push add sbb (bad) jne pop jb fmuls out jnp rclb fldenv xchg (bad) daa dec js and fsubr xchg jb push xchg jmp sub cwtl push out and pusha add xchg pop xchg or adc jmp jmp xor sub in or lret lret add insb and aas loopne jmp mov iret jle adc loopne in sub cmpsb es cwtl inc icebp inc and adc leave inc cmp pop mov jecxz ficom pop jmp and push movzbl fs je or sbb adc xor jae,pt (bad) and and pop xchg movsb sbb leave dec cmp adc mov addl aam add cmp es (bad) sbb call cmp ret push and dec adc sbb jmp dec out cmp popa lret cli or jmp sbb and test sbb inc adc mov imul push dec data16 xchg sub sbb rol sub lahf in sub cltd cld sbbb addb cmp jle sub insl sub xorb fisub add adc sbbb push and test pop sub jg add sub (bad) testb (bad) mov add dec mov xchg xor sub mov in add int faddp sti pop or and pop loope jecxz or icebp stos jg lock add jb js cmpsb sbb or stos fsubl ret rclb add mov cwtl je js sub mov cmp mov (bad) jle adc rcl or cwtl insb mov pop icebp iret pop sub mov sti or jne xor movl jb inc or or inc fdivrl mov rclb ja and adc and add add inc sar inc rol mov mov sar movl inc or pop lret and lea out inc (bad) mov and faddp (bad) jb cmove dec push and (bad) (bad) jle pop and mov mov mov jbe mov divb inc inc mov adc incl xrelease mov mov outsb in incl je je clc pop mov and lea (bad) jle decl cmove and sbb adc lock (bad) dec jl push dec mov cld and adc mov pop and cwtl cmpb and xor or aaa sbb ss sub and inc inc and pop (bad) mov inc faddp inc push insb mov mov (bad) mov add mov mov and mov inc and je pop jmp pusha cli inc and es mov in pop mov jecxz movl out lea add movl cmove mov movl or or cmove pop orb jl out dec in jbe push xor or test and dec xchg test or mov pusha add out (bad) loopne dec jl xchg ffree jg ffree push mov sar sbb orb in cmovne mov mov and xchg andb sbb xchg sub test sbb xchg inc and in cmp xchg sub mov mov mov pop xor cmp pop cmpl or sub add cmp test inc jl inc xor stc mov adcl mov je rorl jne inc rcrb mov fwait add pop mov pop cwtl fcompl mov je jl xchg (bad) pop mov sub fwait mov stc scas add je iret push mov sbb loope or mov movzwl out jo loope loope or (bad) je ret add sbb (bad) jle adc js push or imul addr16 wrmsr push sbb jmp push ret pop cmpsl mov fst jno pop cmp (bad) mov cmp mov pop jl loop mov outsb and mov and sbb (bad) data16 jle test push movl movsb and push in adc test or push or and daa mov push sub inc insb or or push int mov pop test jo push cwtl test pushf or and repz insb mov outsl cli fist mov mov cmp jb je jb mov add or push mov popa notl fucomip fwait sub xlat test fcoml sbb sub and stc add cmp je xchg jns add fldcw and cwtl sti jne and roll cwtl pcmpeqd (bad) cmp (bad) mov xchg xchg jo push sbb lret fisub mov and add movl icebp add inc or mov in sbb jnp mov mov inc sbb loopne add mov ds xor adc inc in sbb mov loopne (bad) sub or mov std pop nop lea shr add cmp es cmpl loopne mov out subl je repnz jb aas and and push and sub add (bad) jge iret ja je and xor cmp lods decl mov hlt cmp lea or xchg das sub or push outsl clc adc xchg xchg je fldl mov imul (bad) (bad) pop ret popf (bad) cmp jae pop test (bad) jns aas fdivrs movzbl mov je dec aaa incb xor icebp or (bad) jmp jbe in loope fistpll and pop mov repz sbb or mov popa adc mov sbb dec dec adc mov mov lea mov mov std out cld mov ds iret mov mov sub add xor jmp call rep jmp mov into mov and lea loope jo or test ret and outsl mov shr popf add cmp fs dec jo and adc sbb jmp xor jnp jmp test loope ret mov and rcrb (bad) pop cmpsb dec and in (bad) or adc fimull dec or add (bad) mov push mov or mov int inc test add ror or in (bad) out je xor call test and in inc frstor mov addl add stos daa dec mov loop sbb sbb or call push mov lea cli adcl jle xor call cld xor (bad) xor aam ret sbb xchg shrb scas sbb lret out inc dec add push mov sbb (bad) mov ss (bad) (bad) aas jl and daa adc (bad) jmp aas movsb jle and call fcoml (bad) lods mov mov pushf je mov adc (bad) out test adc jo mov mov cmp cmovae andl dec rcr mov jmp xchg mov push sbb mov outsl adc xor mov mov mov jmp roll cmp (bad) sti or inc push pop out inc mov jmp int3 sub inc pop cmp rcrl jmp outsb and and and mov daa push sbb jecxz xlat xor dec sub daa fstp xchg or xchg mov and xchg lods or andl jb inc jb ret (bad) jno aas mov cmpl (bad) (bad) aas inc (bad) ja xor lea mov mov ja pop cld cmp jbe lea (bad) cmp fcomip std (bad) out (bad) fild mov mov cmp lea mov (bad) fstl sbb cmp lea insl call dec add test add xlat mov push lea hlt jge out movzbl add (bad) push mov pop inc mov add incl push aas jbe rorb sbb cmp pop sti pop in lea dec push je cmp push sbb pop lea mov lea mov dec pop cmp lea lea lcall orl lea mov ja pusha (bad) lea out cmpsl or rorl (bad) mov jg movzbl cmp lea mov lea arpl sbb or test or mov mov addr16 aaa or decl push lea push fdivl or (bad) push (bad) mov inc mov je hlt ja push lea movl sti inc (bad) lea mov mov mov lcall (bad) jne add lea push add add movups cmp jle sti out adc movups pop adc pcmpgtd movups mov outsb xor adc jbe movups jle movups jne out push pusha movups inc jo jo mov movups movups std sarl cli movups sti mov scas push push mov movups push push mov push test push je fucomi add xchg (bad) jg in movups sub push addps fldl mov jle inc pop xchg mov je pop clc jg cmp pop add mov fdivrl ljmp pop add jae pop mov je or pop out aas dec mov je or dec or xchg cvtps2pi or aaa jmp inc or sub std mov je aas mov mov je or mov mov pop movzbl mov mov lea mov adc out in mov rep mov inc lds ret mov cmp cmp mov mov ja adc mov and fisttp add mov mov out out sbbb mov jo add add (bad) movzbl jbe mov rorl out adc call mov in in add cmpl mov sub jmp add pop ret xor movzbl mov bswap sarl dec xor mov or add add add int push pop pop add cmp sbb rcr xchg or test mov adc test clc movups jmp inc pop sbb push jmp xchg cmp (bad) jmp mov cli pop mov mov mov cld setp std (bad) xchg out mov jp inc inc push push jmp xchg outsl negb pop xchg jne mov negl cmp repnz ja and aas faddl or (bad) lock idiv jne add jmp push rorb nop jmp jmp or push int3 lea sub mov pop inc aaa xor add movl dec ljmp inc test inc int3 movl push out and pop imul movb movb movl jae cmpsb push call call push mov dec mov cmp ja mov dec cld loop repz subl out cmc outsb pop aad mov and mov xchg call inc mov in lea (bad) jg ljmp mov pop pop pop popa and (bad) (bad) jg (bad) je sub lea shr add mov sub lea cmp cmovb test je mov cmpsl mov mov adc mov add mov int stos ljmp sbb jmp mov test je mov jmp pop call fidiv push mov sbb jmp sub lea popf pop inc daa mov popf rcrb je rolb pop and cs cmpsb mov sbb dec outsb inc and and movsb das cmp ja pusha daa popf cmove pop xchg daa add or jmp call mov or pop adc jae and mov sub lods ror inc adc (bad) push mov insl clc or sti (bad) (bad) (bad) mov out int3 and in or lods test sbb add daa cmpsb cmp movl leave je cmp jne mov sti (bad) lock icebp push or addr16 pop jg cmp mov xchg bnd xor out cmp lock pop ret add (bad) fildll pop or mov jne jmp pop and push push lea (bad) xor push push rep lea (bad) cwtl sbb (bad) dec or sbb inc or mov mov (bad) inc or or or add (bad) cmp movl subb and mov hlt out aad (bad) dec movaps lea rep std fadd ljmp dec jne xor ret (bad) aas add aas push pop call mov rolb std pop add sub (bad) out xchg xor jecxz outsl or sbb gs fcomps pop ret xor fucomip rorb je pop repz push sbb je add popf (bad) stc insl xchg mov rolb nop adc sar div fistpll clc in mov pop sahf fisubr add fistpll push push or movb out (bad) xchg mov push mov sub or xchg dec mov addl add cmpl adcl mov in xor dec or sub or pop pop pop ret cltd cli loope test mov js cmp jne mov mov ret cmp je arpl (bad) fcomip aaa push add cmp call decb cmp je cmp imul and je sar mov adc bsr sub fdivrp push or icebp pop xor lret clc call fnstsw testl sbb call and lea call popl xor cmp jne push dec mov inc dec cs add call sub cmp jb pop lahf test je mov aad mov xor clc add insb and add loopne out (bad) fist hlt sub mov mov mov aad mov push jno jne and and adc inc adc xchg jle lret lret clc sub push jb popf sti cmp jb ja jae idiv outsl mov and js mov mov mov mov inc neg adc xchg mov mov ljmp inc sub ja and enter cli lea sar dec or mov cmp jbe cld mov cmp je mov mov mov mov fbstp clc mov pop adc mov sub jmp sub mov pop and ja add jge cwtl jl inc mov mov sti (bad) dec clc mov mov mov (bad) (bad) pushl ja mov inc inc xchg lea mov add mov out (bad) (bad) dec lock ja jb cmp ja cmp jns xchg fbstp lock insl xor inc and lods cmp pop mov out mov (bad) push dec jnp mov mov frstor xor fdivs mov sbb pop pop (bad) adc (bad) fnstsw cmp clc add lea mov sar mov lock (bad) stc mov not and lea je add jbe jnp xor add out add add mov cmp push push push (bad) pop push stos sbb (bad) cmp out lcall je mov inc and mulb inc inc dec pop or arpl arpl pop mov in add inc xor test sarb xor mov cmp test inc mov mov lea and mov add sbb adc add or leave xor and add fcomip cs or jmp mov lea daa negl jnp mov inc and lock xchg inc and iret lock frstor clc mov lea test movl fcmovne cmp call push add mov xor and sbb pop call sbb adc lea mov (bad) fstpl sub mov std mov xchg pop sub mov shr mov iret out sub arpl pop stc loope dec in mov stc add sbb or sar (bad) pop loope jle out rcll rolb rorb mov sub and add jae imul mov and mov mov sub popa pop cmp shlb or lds std add pop adc das lcall add mov mov mov mov sbb clc mov sub loope scas jnp jb cmpsl inc cmp ret sub outsl dec out jmp or call (bad) jno call nop into dec fidivr or dec lahf std push mov inc push and add push incb std mov and and cmpxchg inc pop mov mov dec out (bad) cli cld mov sub aas fsts lea idivl inc and mov mov arpl out mov daa arpl pop out dec outsb inc or adc jns mov mov sub xor stc std push cmpsb inc dec xchg add mov add negl ret or jb nop xchg sahf jge loopne decb cld dec icebp sub xor jnp xchg fnop into stc xchg and sti add or movsl push add scas mov jg adc mov cmp jb loope orb pop inc cmp sbb faddl cwtl inc das sub loopne mov mov mov mov arpl pop es icebp out je dec and (bad) fist sti jae int or aaa cmp inc jb pop dec cmp scas add dec clc andl or jmp push (bad) xor addr16 dec in call mov ror js inc cld (bad) decl (bad) outsb inc dec dec sti fs je addl add dec xchg sbb jns outsl pusha addl add xchg inc idivl mov mov add mov cmp aad xchg push mov jb fwait push cmp xchg lea movsb lea cs push dec sbb fwait add sub mov inc fnstsw clc xchg bsr lcall sti cmp xor sub lea idiv ljmp out add faddl mov mov lea mov aad jns push sub inc pusha div lcall jne lea mov cmp sub jg xchg inc test jle ja fwait cmp fldenv sbb lcall mov cmpl sub jno inc sub sbb and outsb enter mov test cmp inc sbb lock cmp (bad) decl call ds mov mov mov mov mov cmp jb mov (bad) fidiv cmp jbe push nop and aaa rorl mov jb ja cmp jb jmp mov mov pusha mov sbb push pop fiaddl and subl mov jbe (bad) je mov add mov cmp and sbb jmp xchg cmp fmuls (bad) call mov mov cmp ja jb cmp jae lea (bad) cmp cld mov push jb mov jmp test cmp adc mov stos loope add and ja scas std out lea jo push xchg pop and not and add adc pushf or cld loope push outsl and inc mov in idivl xchg push popf mov and and xor sarl cltd and fcomi jb imul and pop outsl fs js fucomip movsl push add movl call mov out test test xor or push test incl outsb xor das adc xchg jae loopne das or clc add aaa add adc pop mov add and cmp je cmp (bad) (bad) out add pop mov lock add inc jg push (bad) call call dec jmp xchg stos add inc mov push sbb or test ljmp push add jmp mov lahf (bad) int pop or call or and arpl rcrl inc out enter cmp je dec jg cmp je cmp je cmp jne mov dec dec cs call inc hlt mov call call out fmul push fldcw dec add add ret cmp je cmp je cmp psadbw jne ret add fdivrs mov add roll pop ja mov call in into add cmpsb cmpb decl add mov mov add jns add in cmpsb aas dec dec or cmove icebp or pop dec sbb pop dec lahf xchg imul push push xor pop sbb jnp pop jo sbb pop add mov add add test fcomps xor call jae out pop xor dec add mov mov neg hlt or sbb add jbe add imul mov xchg and aas fdivp push pop or mov xchg data16 xchg in (bad) (bad) ljmp mov mov or pop gs and mov rcrl xchg icebp sub mov call lret inc adc inc mov ja mov or (bad) cmpsb pop add mov nop adc pop inc vzeroupper mov xchg call leave je push jne add xor jns icebp call int or call sub sbb call loope loope mov dec adc cmp cmpsl inc into mov or or xchg ds inc scas lods sti lea in jg mov and sahf add jle arpl sbb mov out push push icebp and (bad) sub mov mov test lea (bad) inc cwtl or or les adc inc addr16 add test mov je in imul add je jo sbb or repnz mov xchg xor xchg (bad) call cld fwait or xor cmp je xor mov push add dec sbb add mov adc jle jecxz xchg aam or pop popa shll cltd cmpsl mov mov clc pop call xchg add ss sub movzbl inc fsubrs int pop out sahf (bad) pop inc jae lds mov scas mov data16 sbb mov cmp jg in add jnp push jne loope add xor lret mov and inc daa add fidivr mov cmp jne pushf dec (bad) movb add push xchg fcmovnbe rcl ficom xlat jmp cs pop jge and xor loop sbb jmp das fiadd xchg sbb or fsts cwtl inc cmc add orb pop dec inc push mov test js int3 or mov or adc mov or sbb jb push adc mov lea sbb and and cwtl fmul adc repz pop aas test ss cwtl add pusha je add adc repz add push das pusha mov add sub jo push mov icebp dec xchg fbld mov in or popf imul adc sbb mov add ljmp call add je cmpl jbe pusha mov add or scas mov inc inc mov sub mov outsl dec inc dec add pop je and inc dec pop nop imul outsl or add and in or push lds jbe add and clc xorl lea dec out cmp and js mov or jo mov call (bad) out mov jne add (bad) or pushl mov jmp push rorb or notb sub mov shrl cmp adc (bad) and out pop dec push into adc add xor inc push je cmp jne fnstsw mov xchg xchg sbb add fwait jb (bad) pop (bad) xchg sub mov mov mov sub or mull cmpb xor push pop sub stos dec and push and sbb cmp xor mov inc jp or mov or nop pushl xor call inc (bad) rolb decl test and cld shll nop push push lea clc mov add int loope movl xchg dec imul fisubrl add mov ss sbb addr16 das (bad) imull push add mov rcrl stc call inc sub je lea pop divl inc and test jne add pop pop cmp (bad) add movb or out sbb subl xchg sbb addb aas dec or mov mov fistl addb mov jge jo sbb add out (bad) xor clc push sete push sete xor add or scas mov jno lea sbb std jae fadds mov push inc and call add (bad) pop xor clc xchg mov (bad) outsb js push fwait mov shlb (bad) cmp shr (bad) adc xor xor out inc pop mov push fs add cmpb add jo hlt push sub and adc lcall lods pop pop mov and jmp inc cmp pushl mov cmp out fild mov cmp sarb les fsubl lea mov call inc scas in cld jb fisubr and call sbb (bad) dec mov (bad) push jecxz (bad) dec scas sbb or dec (bad) xor pop and fdivrp enter push add addr16 add rcll or sub push test mov mov lea inc push mov mov or add (bad) fidivr add add or call inc fwait or and sub fst mov mov mov cmp ret mov mov jb call fiadd sbb nop inc popf dec cmc cmp cmc dec xchg cmp inc adc push dec call ret jb (bad) lcall (bad) jnp and cmp dec clc call sub pusha fisttp xorl or or pop fnsave clc fild jae and push iret popf enter ljmp ja and pop and mov push xor lock or pop clc sbb dec jo cmp and sbb nop dec ja pop mov (bad) and fstl inc je ret jno and lea or lcall jno clc loope pop cmp cmp sub cmc (bad) in out cmp call jbe mov mov call into or pop rcll mov sbb into mov sbb or in cmc movl jmp fwait pop jge sbb jbe mov dec adc pop or xor fs dec or enter inc add sahf insl jp or add add in in cmp pusha inc sub lret inc xor loop jg cld out call and loop mov call xchg sub std or jp fildll ret and fldcw push ja or nop ljmp mov push pushl cmp je jl dec mov sub lea orl shr and jp scas loope inc and test mov push in and addr16 jecxz or sbb or inc add mov mov sbb lds sbb jmp outsb pop repz jnp mov dec hlt ljmp sbb or sbb xor dec out xor adcl cli call pop inc fldl mov cmp je pop mov dec lea sub sbb cmp sbb add add ja call loopne adc pop push or and sub add bound jbe jl pop push or or pop pop addr16 adc or in and in out clc ljmp mov mov cmp je mov sub (bad) decl call add and cmovo or ss cmp je cmp shrl pushl clc add inc dec add add add pop add or xlat aaa jae sahf or or mov sub repz push js add imul (bad) bound dec or or bound popf lds and or adc ljmp jbe and or lea cmp jne mov xchg or add pop inc bound pop ret sbb sbb dec std cmp add inc adc jg (bad) out mov je lea je imul adc mov test ljmp fisttp jecxz add mov adc push pop mov mov shl test lea je imul mov arpl inc adc push rcll scas and mov mov les imul add pop add mov call sbb mov nop push xor mov jg mov shl cmpb nop rolb add lret or pop add adc jb push or add push bound nop inc cmp shll es mov sub adc test xor mov mov cmp or mov subb je add in inc and add xchg clc or push sbb add movl movl jne mov mov mov and orl je in rolb mov mov mov add cmp inc call jbe or cmp mov sbb sub (bad) (bad) ds sar add adc mov je add ret pop out nop lea decl add sbb mov jo xor sub (bad) xor add loopne loop pop or cltd or roll lea xchg sti add lea mov loop cmpl adc out add stc call and je sub push cmp call and push and sti (bad) jo out mov cltd xchg js call cmp add adc addl add adcl mov sti out je mov push sbb sti pop push in int pusha cltd inc add and repnz jmp scas push add lods ret sub test jbe pop mov mov and sbb add cmpsb mov ja fist lea jne in or sti add fstl sub mov mov pop lea shl lea cmp je adc mov mov sub sub shr xor loopne aas or and inc movups test add ja movsbl mov cmp je and inc (bad) fdivrl dec or aaa rcrb test mov pop test (bad) flds test mov inc inc mov out adc mov ret cmp pop push add movups scas movsbl addr16 mov data16 icebp and fisttpll adc cli adc int3 popf popa ds jl lea mov mov jne inc rorl add mov adc add pusha push movl xor mov lds stos jne mov push pop mov popf adc hlt test cmc sti daa adc jne jb jo cmpsl je (bad) jl and call cld xor jg testb lea je jae xor mov rep inc out mov push clc aas ja std jecxz lock call sbb lods sbb push mov mov mov add ja mov or mov adc shr jbe xchg je test or sbb add test or mov sbb test sub in gs je cltd push cmp push call mov test mov jle mov jne add scas pop movsb (bad) cmp jne or jle je and push adc sarl je test (bad) jecxz (bad) (bad) cmp jne inc pop mov cmp inc int3 lret mov std out sbb jnp jne inc out addr16 mov sbb cmp pushf add pusha add (bad) mov jne lds ljmp fnstenv push test out cmpl jmp jmp sbb imul pop (bad) push lea push dec xchg push pop iret scas jne cli loope,pt ja test test pop jo fwait cltd push jge call nop mov and pop movsb xchg loope cmp je xchg dec jge add xchg ds je icebp jle inc mov je cltd sti popa add je pop int3 xor rcll mov je push jbe (bad) jne and xor ret push cmp (bad) enter test xor insb rolb dec cmp adc test cmp jmp sti adc lea xor (bad) fiadd cmc mov cmp mov arpl dec cmp je jle ja test inc push inc cmp (bad) xor mov jne cmp mov pop or or mov in add rorb fwait and mov adc jmp test lods int3 jge jmp rorb test clc mov pop fs sbb xchg (bad) xor xchg cmp test stc movsb dec popl add ret loope ss push std das ret mov cmp jo insb mov cmp dec mov jmp stc lock pusha aas xchg je lods outsb aaa sbb jo arpl jmp jbe (bad) pop out nop adc pop sub iret push pushf dec test jmp in (bad) (bad) ss dec ret mov lahf rol aas lock jg adc lcall mov je ds cmp mov loopne fild inc cmp je inc je in ds push paddd adc cmpsl xor mov sub cmp push js inc fdivp arpl xchg mov sbb push je cmp sbb (bad) mov mov cs hlt ret sub rorb pop jae ret pop out test (bad) sub cmp push push (bad) mov in or andl repnz sar jne out mov dec ja call fcoms add (bad) out cmp adc clc and maskmovq (bad) popl ret test sarl popf xadd icebp or outsl cmc sbb out test test mov cmp loop adc and jg andl and call arpl js and cmp out wbinvd fisttp inc jmp in jae sbb inc push push data16 cmp or call int sbb jmp outsb mov xor or xchg mov push call fcomi jbe ss data16 xchg mov test inc jmp xor test es dec stc inc push or jmp shr test fwait (bad) xchg mov hlt lea nop sbb js mov jg je and aam stos divl mov xchg mov mov mov mov fwait pop add cmp jle call xchg aam scas (bad) je je mov push (bad) ljmp (bad) jmp stc je xor jmp mov (bad) ljmp mov jmp sbb daa fisttp adc lahf out mov sbb pop or pop test sub (bad) fisttp xor aam call xor pop dec popa xor inc outsb jmp mov movswl fucomip and push mov lea sti ret ret xchg xchg dec adcl and mov sub mov lea cmp lock shr rep jmp or sti pop or in mov jle pop in movsb pusha jle je xor dec rcll ja mov push repnz adc pop out lods mov jmp push pop add incl nop hlt (bad) incl movl and push hlt dec mov movl add mov mov lcall mov cmp call add mov pop adc repz or mov fs lods movl insb adc shr inc or cmp sti call add and push aas pop popf push movl or and mov sub movl add inc pop and cld add mov and cmp jae xor test je dec cmp cli add sbb cmp jne (bad) cmp cmpl or daa mov add or adc add cmp jb lea movl inc lcall fdivl add mov bound call ds add fadds cmc je dec and sarb or mov xor fistpll jmp and mov je movl aas and stos add clc pushl (bad) cs mov mov iret jb call mov push jo or cs inc xchg rorb jg fistp push cmpb je cli ret cmc decl mov out sbb movzwl cltd je or cmp push or lcall adc add (bad) (bad) aas pop sub inc imul mov test je mov out or js add test and mov jo das or and mov or lock and sub ret add call adc or lock or sbb mov pop or pop and or mul ret lea cmp cmpsb loopne sub jmp mov adcl add adc idivb mov push inc ljmp sbb stos pop push sbb sub jecxz or ret push ret data16 add loopne push add cmpsl ficom pop jne (bad) push out imull adc xchg (bad) mov sbb je lret xlat or je cmp jno pusha (bad) jbe push (bad) jg sbb jge fdivs mov je mov push lret add or out xor pop inc lock xor sub xor fcompl je or call out xor ja sbb ss roll pxor out in push xchg lcall jae int mov sbbl inc jo pop or call push push lea jg mov call and loop sbb fsubp jmp lret xor sub mov std ds adc dec push lock add add (bad) test jne and cmp (bad) mov jnp adc add xor je (bad) xchg (bad) jbe or sbb sete jmp cmp sub das rorl sub add add xor adc addr16 add ss sub aaa adc dec sub inc mov xor adc ja xchg lods mov or sub shl lea sbb mov pop ja adc sbb add sbb test (bad) sub xor (bad) ja mov mov daa cmpsb pop cmp cmp dec or adc add and and dec icebp push orl push out rclb lock mov inc xor mov aad test and test int3 loopne add mov or adc std rcrb mov push ret sbb repz outsb mov add (bad) stos sti mov adc rol addb ret mov jne,pn popa addb jne inc mov mov leave mov ja sti sbb mov mov sahf pop mov sbb add subb popf out mov add xchg pop icebp enter inc pop adc in ds repz xchg (bad) mov or sbb aad sub pusha lds rorl or sbb sti loope stc add test cmp test sub mov sub cmp sbb lea andl test call cmpl lea jne cmp icebp inc push jmp hlt daa add call or lds and pushf jmp test jg jg call test cmp mov cltd loop jne sub test mov adc aaa sbb pushf inc cmp cmp xchg mov test adc mov adc or sub fld1 push dec test ljmp pop sbb test cmp std (bad) inc pop adc and out sbb fldcw sbb mov test lea add sub lock aas cmp jne inc insb ret xchg setle sahf std (bad) fistl mov test test leave mov mov out sbb test mov cmc je sub xchg or movsb mov test add dec outsb test lds es mov sub in push ret push xor inc jo cmp mov fadds pusha cmp roll jmp ret popf push jl stos shrb scas mov add ja pop cmp mov popf mov inc sbb cwtl fcomi jmp icebp jmp sub ljmp loope jo push je fstpt call sub icebp pop mov push push cmpl mov lcall pop je out pushf dec sbb add lcall xor fwait xchg ret lahf push inc out sub aas (bad) insl inc or je jbe mul add call rclb jb daa pop and jae cmpsb aaa pop inc outsl sub test push aas aaa fsubrs xchg adc insl aas xor push cmpsb outsb jmp jae es lahf sub test scas inc or fwait adc call int3 jge jmp inc or mov pop lea pop xchg pop dec sub cmp jne fisttpll mov jmp and lret cmp inc mov mov jmp mull fisttp les loope ljmp sti testl inc or dec push lock mov pop add scas lods ss scas cmpsl in sub cmp and scas cwtl pop stos mov cmp pushf mov (bad) xor addl or je pop movsl nop aad rolb sub call (bad) mov inc and int3 (bad) mov inc mov adc test subl scas imul adc inc outsl mov add roll inc adc mov and cmp jp sbb sti out iret add call dec call xor fmuls add add mov pop jo adc roll roll add pop enter jl cmp add je mov fadds jns jbe lds pusha je jns fcomi stos pop das in aam sub sbb loope push or pop pop idivl mov mov aam inc and add scas and xorl jg je ret add mov mov lea call and inc add dec sti or inc popa mov push call sub mov call clc shufps sbb pop (bad) call fldl adc add sub xchg add pop arpl call dec push add adc cmp mov pop aam pop xchg mov int shrl jp xor cmpl and and addr16 repz jne loope inc fs jp movhlps push je add jns add and dec cmp (bad) fisttp xor and sub mov mov jg pushf cli shl add cmp stc mov or xor ss je mov jp pusha add jo inc xor and jl gs pop mov jmp mov add fmull mov inc jmp inc jmp outsl mov lea inc fwait mov call or inc mov insl mov add sub call jmp pop adc mov pop faddl adc and mov push push or pop (bad) push out or call mov addr16 or jl inc sti xor dec test rclb lock adc sub jbe lret insb and and gs (bad) out test outsb and inc movups and fs sbb add lea je inc ds sub lods mov mov add lea xchg sbb mov mov jg or stos mov mov daa pop and jo push push addl lcall adc clts cmp bound cmp lfs mov cmp push jle je je cmp jne cli mov push movsl call adc aad sub fsubrl mov jle mov cmp or je std pop or call nop loope (bad) jb pop and mov aam mov add test jmp fadds push or xchg cmp jle lcall je bound adc bound js xorl mov push (bad) imul jmp push jg and fisttp (bad) mov sub cmc add lahf xor cwtl es lsl xchg call push mov test movsbl lds test shr cmp popa ret std jle stos int test add xor sub mov mov sarb (bad) or inc adc sbbl (bad) mov jne jo push xor inc add test into (bad) call sub mov jae cmp push mov and call or pop add mov or xor push dec cmp add sbb fst jmp xchg cmp adc or or mov outsl pop xchg or sub add inc adc shrl add xor xor mov mov and jne adc push aaa mov mov sbb sub (bad) and add cmp test push and jmp and call test data16 hlt mov loop mov addps mov ret je outsb mov jbe jbe jmp cmpsb jp mov and test pusha shll xor pusha inc das mov jae nop mov pop sub xchg mov das inc outsb out sub das jmp cltd test pmaxub not sarb adc scas popa fcoms jmp call pusha packuswb and jle int push je pop jb aaa adc jp es or (bad) jmp xor test aas repnz fdivrl sbb mov sub test xor add xor push nop outsl sub mov push aam rolb aad test pop mov into sub out jl jo pop das sbb xor enter js je cmpw call les add mov add push and push lock ja rorb or cmp jb mov mov pop or pop dec cld (bad) call test jne cmp je cmp jg jge clc (bad) lcall mov call mov call add (bad) aam push adc in inc aas push mov xor in fisubr jmp aas jecxz or subl fimul xchg cmpb jne mov out cmp cs loope xchg sarl je mov imul cmovbe add dec scas add push imul mov push je ja movsbl mov aas imul jne cmp je or data16 int movb call test jmp aaa jae lea adc or mov mov mov call sub fldcw jle push fiaddl testl test daa mov (bad) fldl xchg jecxz cmp fxch pushf adc mov icebp ss test mov es (bad) sub lock add jmp sbb jg cmp jne mov shrb inc dec repnz ja add cmp je mov mov ljmp (bad) sub rorl test into sub movhps pop push add dec and jmp adc je cmp add cmp inc popa mov push lea cmp lock push mov lahf nop jle ret lods sub mov dec mov sbb push adc lahf sbb iret mov lahf out and cmp dec or leave std mov mov ljmp lea mov xor lret jns inc and sub and xor stos roll xchg cmp into loop out dec sub rcl adcb pop or int3 xor aad test xchg add cs and ret mov xchg inc (bad) mov mov adc test outsb jmp mov mov pop stc mov mov je push clc icebp rcrl call test adc xlat fisttpll jp xchg fisubr test add out add inc jae mov ja clc cmp jne jmp inc mov mov out jge lea and cmpsl (bad) mov mov es fwait or mov cmp (bad) outsb mov test jo pop pop cmp jmp pop jg,pn enter cmp in cmp push sub imul (bad) sub decb inc and cmp jbe or sub pop and jg loopne jnp and das add cmpb dec and cmp sbb and mov mov adc test mov sub rorb dec orl inc inc frstor aaa sub dec je xchg aad inc or test jo sti pop and (bad) and and stos arpl sub xor cmp fs dec rcll sub xchg add xor add sub test dec and test fwait dec xor pop mov pop sub inc rorb sub add xor enter push nop or mov adc clc xor push and mov popa ret or adc fs fiadd mov jmp add mov adc xchg xor stc jl mov pop pop cmp pusha dec mov cltd and or mov or mov mov jmp lret fmull mov jmp adc cmp xchg lea pusha movl push call lret sub mov add jo into call stos idiv enter jmp cmp test inc mov push dec sbb and out sub dec out (bad) aam sbb call fnstsw call jne pop mov sub fs cs aaa adc lock inc jne push cli or mov jmp xlat out fsts inc or je mov pushf mov cmpl mov jmp sti enter out outsl inc mov and lds insb bound fsubr xorb es cmp icebp orl pop jae cmp inc jo test int3 pusha add je inc jle or jbe imul or cmp test and test or lock fidivr jne les shr aaa pop loop cmp lock xor xorl call ljmp inc aaa and mov ss jne nop mov jmp jmp into add jne rorl pop imul add rorl xchg xor jo sqrtps clc out stos mov add lea mov lret in or loopne inc mov xor fucom add popa add push inc push pop dec push je dec icebp add lds jo loopne add mov addl mov pushl rcrb call cmp adc xor jge nop mov (bad) je movsb call call jnp or scas cmpl sub push rorb ljmp jecxz sbb mov bound jne imul jmp and sub pop inc mov bound add add call jmp push and add fcomps mov cmp je mov (bad) cmp mov jl (bad) xorl hlt out xor jne repz scas add jno stos pop mov xchg pop mov sub inc add mov push add adc jp cmpl into cmc mov fildll lea jge jg lods sahf adc scas pop dec mov mov push add cli add or sub sar call mov jne add lea sbb fildl add mov sub add ja out mov sbb mov xor test ja adc xor dec mov push mov sbb jb decl (bad) incl xor jge add cmp je add mov sbb push iret outsb xchg jl cmp jne (bad) js cmpsb pop pop mov or fwait cmp xor lea shrl sar div mov arpl adc sbb or int3 add daa add incl add add xor inc shrl iret add and xor and jecxz add ss jb insl loop out push orb insl push gs cmp inc mov outsl mov test out jb inc mov call je prefetchwt1 int3 pop and or jb xor movzwl and je xchg (bad) jbe jg push and call cli insb js push jge test pop mov outsl mov out and (bad) je add fsub cmp andl int mov int std sbb out jmp out cmp popa cli call lret cmpsb hlt ljmp cmp pop fnstcw (bad) or outsb ror xchg sarl lret jo cld mov je add out mov mov fstps or xlat add incl mov xchg mov shr scas ret lea add add test xchg sbb ficompl xor clc cmp adc pusha pusha sbb or add ret mov adc or (bad) lea call popa bound inc aas jmp and stc (bad) push add sbb in mov loopne inc cld or call lea push hlt (bad) push daa add xchg adc or or push cld or sub (bad) loopne sub or xor or pop test adc xor or test adc and sub inc xchg dec pop adc pop or pop loopne add leave mov push (bad) xor mov inc and lahf mov xchg xor shr add sbb pop mov xchg push mov pop xor or out nop roll and pusha inc mov sti add inc and das pop dec inc scas aas insb call rorb call (bad) es mov lea lods add mov scas xchg sub cltd mov mov mov push add mov lret pushf push ret push push js,pn sti mov (bad) xor addr16 loopne push testb aas add mov dec or mov mov enter dec adc hlt push and push fiadd movl shrl mov xor mov sbb fmull divb adc inc and repz and mov into jb jp cmp loopne adc loop inc ljmp add and jae mov jecxz out sub and ret and mov sbb ret and enter aas call push or ret out and (bad) mov lea cmp ja cmp or adc add add je fsubr and test jne aad or cmpl out push and pop inc jg ds add out mov dec adc pop cli mov dec gs sbb push adc aaa shll push inc mov or add and mov (bad) lock lock (bad) dec mov push xor mov ret xchg push mov pop inc and js push inc sbb lods xor adc ja negl (bad) mov pop xor arpl jmp ljmp lods or mov mov incl mov mov mov imul and lea je xchg data16 push and lea outsb and xchg fcomip jecxz add push add lock cmp div adc sbb sahf mov sbb imul and sub push add imul pop sbb push pop movsl fstp inc sbb jnp push pop fiadd shr dec add adc mov add fwait lahf fadds pushl pop xor cmpb mov je mov dec add (bad) mov jg mov mov xor mov and inc inc test adc push je mov fiadd or xchg mov addl inc push test lea je jne pop jmp lret cmpb int lahf add pop insb and mov push xchg jnp loope mov cmp jmp add xor les jle ja fist adc fcompl test test in xor cld cmp jmp jne je adc mov lea ret mov xchg cmp imul out pop lea jbe pop xor lds leave bound dec dec test or test lock fstpl call test or mov mov mov std and add and nop (bad) aad push xchg mov dec inc xor or dec inc push je cmp or pop loop mov pop dec mov mov inc aam mov mov cmp and push xor and je mov cwtl mov and sbb (bad) les je adc mov jp fsubrl and push movl inc jno mov push aad fldcw jne ljmp mov dec mov lock pop push mov aaa push mov mov add outsl mov mov sahf rolb mov sahf xchg pop push cmpsb xlat cmp ds inc icebp add xor sahf call and je dec test xor mov popf add out mov cmp inc mov cmpsl mov int3 popf pusha pop mov fild push incb int (bad) sti pop dec mov adc xchg and (bad) hlt mov jo mov mov mov test cmp (bad) psrld add push xchg sbb add inc add inc push add and pop pmuludq fisubl mov add iret (bad) push les ret push mov pop sbb icebp into (bad) jmp adc and in je out rclb cld mov call inc push scas lods pop mov fs ss mov xchg shlb add rorb inc adc adc cmp xlat cmp (bad) repz add inc sub ficom (bad) fiaddl dec pop insb mov je jg inc lea mov jecxz loope adc lret test pop les inc add inc xchg loope inc or lea jbe in adc bswap pop push mov pop ret test ja pusha or inc xchg adc jo bound fwait je into xchg in and movb add (bad) repnz (bad) push lock mov sub cmp or pop insb mov call aaa xor and dec (bad) or push imul je dec xor pop fdiv test lods inc lea sub pop and cmp jne jmp xchg adc fmuls test test add mov jne mov addr16 stos jne pop ja push cmp sub mov sbb push xchg or inc aas popa xchg adc (bad) ljmp mov ret es cmp ja out fist add lea cld scas cmp and insb and pop add stos rolb mov add test pop or jae icebp dec mov push cmpl xchg clc or and add imul mov push mov xor aaa cld jge cli inc xor call adc (bad) es cmp add shlb inc out int3 insb push mov or mov jno xchg fdivp pop pop mov call adc rolb adc rcrl (bad) je mov rorl outsl xor mov aad das jmp add (bad) popf lock bnd mov xchg movl add jmp add sti pop cmpsb ja add jmp and xor cs jecxz es imull jmp sbb adc shr xor add push xor ja or mov cmp sbb sbb in call xchg xor mov mov test or int lds or bound cmp mov cmovae mov jmp adc mov sbb xchg pop insl sbb add (bad) xchg dec and test mov mov aad test add fldcw call hlt (bad) (bad) cmp mov mov cmovae test inc loopne mov mov mov dec sti add fdivrp (bad) decl add icebp test xchg int3 mov sbb idiv jmp bswap cmc xor or mov push cmc sbb shll jg insb and add (bad) bnd cli cltd rdtsc shr cmp je inc jo dec (bad) repnz in jge cwtl xchg pop add adc jmp jg popa addb or call pop adc mov adc mov dec sub inc into xchg or mov inc xchg dec and jb and mov jmp popf cli dec and dec decl mov loope sbb mov lcall or jmp sbb xchg lcall and idivb fmuls icebp pushf hlt push add notl jmp and mov xor push test dec and adc mov adc mov jne mov mov jmp or xchg jle call pop (bad) or les call sbb call and mov (bad) mov (bad) out fs lea shr add mov lea cmp cmovae mov js add call inc push lea push inc inc (bad) iret jo sub fidivl inc shr add and pop je push dec fistpl add dec adc jecxz shr xor mov mov jp push pop adc jp cmp xor sbb add aaa scas dec and call sbb xchg loope inc test daa je stos inc rolb scas icebp sbb ret sbb sbb sbb ror sbb cli mov je mov in xchg inc jns test inc fs sbb mov rcrb xchg incl cmp pusha cmpsl pop mov xchg addl je adc sub out xlat pushl push jae lcall xor push int inc imul aaa rorl cmc lret sbb sub jmp xchg rorl mov sbb xchg call jb shrb fisttp xor (bad) into mov inc btc pop jmp call out je pop data16 mov popf or (bad) jmp dec mov int3 rcrb fcomps sub cmp out mov and or sub outsb push outsb stos mov or mov mov or mov jmp enter push and aad add mov push add scas mov push ret xor daa sbb je cmp or or stc nop test push std outsb jp test inc and mov das popl cmpsb add jmp fcomp pop (bad) dec jns scas insb and mov push outsb aad sub jge push or ja cli push sub jmp nop push in pop dec pop adc xor xor js mov mov push mov pop enter add sbb jle add pusha cmovno add sahf mov cmpl cs add add jecxz pop jmp adc enter mov arpl dec and mov inc and mov adc push cltd mull push inc add push or dec stos dec cmp jnp and and je gs pop mov cmp mov jne inc xor (bad) dec hlt cltd mov mov mov add adc mov push push mov lea rcrb and (bad) pop (bad) lea push add mov lea aad cld cmp or lea add add mov rclb cmp fsubs stos mov pop cmp lea popf inc sbb jnp mov daa pushf and std sarb and mov push and xchg push fist call mov repz out mov (bad) cmp xor sbb lea pop add (bad) add sbb adc pop inc mov ss lea jo popl call sahf sub sbb cmp inc je (bad) sti jmp nop jg cmp ret sub in test adc jmp je iret cmp jle jnp aas lock mov mov pop mov pop cmp and jl jnp mov mov push outsl jp insb mov sbb jnp (bad) je push cmp mov sub test push sahf jnp sbb mov sarb testl inc ljmp not xor push sti insb and mov mov mov in jno mov xchg add ljmp xor push adcl xchg sub clc jg fcmovb add mov adc mov mov aaa cmp lock mov xchg fist call scas leave pop cmp sub mov arpl movl sub mov mov cmp inc adc inc adc inc hlt inc adc adc inc test pushf loop (bad) inc dec flds call or xlat je and mov push push adc test sbb shll dec shrb push jl and adc orl ja (bad) xchg sbb cmp movsb enter cmp aas sti sub mov pop dec and mov cmp jl jle daa mov pop xor jmp inc je mov mov xchg add imul daa push add push cmpsb and mov sbb lock (bad) jne cmpsl sbb xchg out scas add pop sbb cmp lock (bad) mov mov rol aaa icebp add test incl mov mov push add inc cs pop std xchg movl push fld inc sbb add add xlat cmp cmp push xor shlb push into adc push jbe push xchg imul call insl mov (bad) dec push enter lcall (bad) call movzbl mov mov mov movl movl add mov inc loopne jb lock movl sahf cmp movl pop js xchg int lock mov jne leave mov lea mov movzbl cmp jne call and test mov cli sub add cmpb jne out mov push cmp lea mov je jl mov jb (bad) (bad) call add and cmp je movzbl sub cmp ja bt jae jg push hlt mov sub rolb test jb movzbl std iret idivl lea inc cmp cmp je je arpl out dec movzbl cmc and adc cmp jp out lea push jbe push inc mov mov cli fucom jbe test sbb mov lea dec fnstsw std std dec nop cmp jns or daa cmpl loope xchg jne pop mov sub cmp jbe dec xchg por ret dec int inc add sub ret ret lcall jb cmp add jp das idivb inc add (bad) mov fdivrs pop loope jns jo add bnd xor jmp ja bt jae mov sub not and mov add mov cmp inc ss jbe stc lods or add cmp inc sbb adc xchg es shlb lret fnop aas in mov xchg rolb push cwtl mov (bad) (bad) inc int jle mov mov mov mov xor mov mov mov or mov mov ss mov mov lods stos jg imul sti js add jle add fistpl push xchg mov call sahf test js fidivrl popf les pop pushl cmp push pop mov cmp in (bad) outsl clc jne jmp add pop or push mov aad inc addb fsubp in jle pop fld or pop mov adc mov adc add call outsb mov stos sub jae sbb inc add fmul push cmp xchg ja ret pushl mov sub not and dec stos ss jecxz inc add jecxz xchg test ljmp jae fidiv sbb rcll lea cmp ja pop (bad) mov pop push ja jne mov inc jmp xchg mov adc aam shll inc sbb int3 dec sbb add xor int push popf add clc xor xchg xchg test mov movdqa pop and (bad) jne or hlt sbb pcmpeqb xlat sbb jne sti add stc add dec jl por and clc xor jne nop add fucom or lock add xlat in dec xlat sub add inc jmp pop ret cli leave pop iret add je movzwl pop mov mov add jg add ret jae or addb aaa ret jnp and jae add faddl jne xchg pop push and fmuls jge rcr daa lds ja mov mov sbb mov or pop (bad) xor aaa out sbb mov add out mov data16 or inc add out xchg jmp xchg insl inc or xor cmp (bad) les mov jmp or decl cmpl jne aas mov mov cld andl hlt cli mov dec pop je sub dec sub mov mull shr mov loop jae jnp add push cmp ja sub ret scas add push bound add rorl test push jecxz movsb loop pop adc test pop xor test sub adc add adc adc enter jo mov out mov mov or inc mov pop inc (bad) testb mov je sbb jmp popf mov fisttp fimul test xor out dec ret shl and pop lods cli incb lods loop cmp test jecxz add sbb addr16 mov rolb rolb cmc repnz mov subl popf popf fcomi push rorl fmull mov mov loop out testb push mov push icebp dec inc mov sbb stos popf js push add js mov mov inc jne test inc lret loopne adc xor pop push adc pusha lahf push adc sbb mov add movl lcall adcl mov lds arpl sub jns sub cmp sahf cmp dec and inc dec (bad) (bad) js push push enter inc pop add (bad) pop sub inc or ja cs es pop cmp clc or mov adc push call leave lea sti dec adc sti je push ja (bad) jne sarb and lea push test xchg mov xchg pop mov popa adc jno push adc or jg and dec and loop adc mov mov hlt decl and call sub jmp fldl clc adc in or xor xchg cmp or dec fist stos jg ret subl jmp sub mov orl sub xor rolb and pusha shlb decb push cmp adc xor jne mov ret ss ja dec (bad) xor int dec test orl dec aas dec dec into mov stc cmove add sub cmc (bad) mov or lret sbb or inc cs add call jmp add and es mov jmp mov mov pop ja ret loopne movzbl lea or hlt (bad) lcall dec in pusha aaa lock js mov (bad) ja and pushl lea cmp mov je sbb into pop mov pusha aas hlt outsl icebp mov mov mov jmp sbb jne xchg pop push outsl int3 adc or js mov sbb ja adc add jb sbb jbe sub xchg jmp mov push rcrb decl in nop es lea add push cld and add pop mov fwait nop or and es ret mov test push dec stos push mov push xor fiadd xor pop repz cmp sub adc and xor test fwait cli scas add push xor push mov (bad) jg dec and push mov mov mov jmp or and jl sbb cmp push jge mov (bad) icebp pop jg call test mov ret dec xor iret mov jmp add ljmp (bad) or sti adc movsb add add das test in into mov cmp je adc mov cmp hlt xorl xlat hlt xchg mov (bad) (bad) aas dec inc xlat cmove add jmp cmp jne mov mov jmp adc fs loop insb leave insl stos es inc and cmp push mov and (bad) and addb in adc inc pusha or sub xchg sub jnp or shrb out ret mov test call dec xchg xchg ret mov aam mov and xor pop insb (bad) mov dec cmp test mov pop push fadds or jg xor je loope add inc popa jp mov cmp nop sbb pop dec inc fldt cmp cmp and bound mov mov aad mov cmp and cmp je (bad) sbb push aam clc pop and or pusha je xchg inc pop rorl xchg xor les scas mov add (bad) dec ret cmp je or add ja lret mov add mov pop mov xor add je mov xchg xchg into jo add add xchg xchg jb xchg popa or mov add mov pop hlt jbe mov loope jbe jbe push cwtl mov or cmc jle sbb test add clc mov jle inc add adc popa xor dec jle push fwait or push adc xor dec call sub rcrb cmc adc ret rorb sbb mov pop (bad) loope cmp or add insb testl lret je sub dec nop mov jbe add stos push or jo sbb js test andb sbb add cs rcrb inc and call mov xlat add je or sbb incl divl aas out mov add iret add xchg addr16 out jmp cmp out push lea jl adc sbb shlb hlt jl push ffreep xchg cmp mov jmp inc sar inc xor fildll outsw inc sbbl fwait out jmp mov jmp outsl sub rolb nop mov pop fstpl mov enter adc inc enter pop xchg xor sub sbb cmp sbb nop sub push sub pop jmp (bad) cmove add jmp test mov pop sbb cmp jle stos mov jb pop mov flds (bad) xor xor xchg lea and call sti xchg or mov mov pusha test xchg test fsubrl loopne cli push inc scas test in mov call sbb jb (bad) mov xlat xor lahf jae sub xchg inc test mov dec inc or out pop jl (bad) lea mov mov xchg pop std gs cmp inc je lret adc push adcb pusha inc (bad) es mov icebp sub into imul lcall nop repnz inc jne dec mov dec adc add pop mov cmp sub xchg popa fcomp das dec mov mov jne nop cmp pop (bad) std mov sbb xor enter cmp jne or int3 ret jne int3 lds mov mov adc std arpl jecxz jae aas pop jne ret jge je xchg mov sub sub aas jb test in mov je lea push cmpb add xor out cmp ljmp les mov add fdivrs test xor pop insb insl push lret popf inc add mov sbb out cmp outsl adc cld bound out imul mov jle pushf addl push ds cmp inc mov jl xchg lods push adc mulb je mov sub and add mov mov jae mov fildl pop jmp bound aas push test into incb out mov jmp xchg int3 in sub scas and ja jne adc jnp in out sbbl test fcomps fldz jmp sbb xor xlat in jbe jmp cmp lcall addl mov adc cmp jne and inc les lcall jne mov out cmpsl xor test or mov in call outsb negl jne add ret pusha jecxz push adc test xchg mov cmp jo xchg mov adc pop clc hlt mov call mov test sbbl insl cmp jne pop test jp mov (bad) mov mov pop adc dec pop and test cmpsb add add jmp mov sbb (bad) test sbb call cld and sbb scas or test cmc iret std lock and jae mov jb out adc call arpl aaa in jne decl orl loopne sbb sbb mov popa mov pop (bad) sbb dec fsubrp jno lcall sub sub clc add add or push mov mov out lcall mov jmp jg repz and mov (bad) sub or jge call outsw fdivs or pop in sub test xchg pop mov pop add pop add popa js mov (bad) mov jb jmp push or sbbl jbe addl ret in ss fidiv xchg add push cli jmp jmp incb shr outsl cli jmp sbb jo xchg mov xor mov andl jne dec sub xchg and mov cs or cmp inc pop sbb out jg test call sub sti das jne inc add cmp in js or cmpb jne jmp enter aad clc ret inc cld enter in outsb loope add (bad) push fimul out sahf and jne mov jmp pop add jmp movsb bnd jg or mov bnd std icebp fwait or fsubr cmp push mov inc test in test in or mov jmp jb xor nop add sub sbb cld fstp ret push test ja jmp cs or cwtl (bad) sbb jne sbb xor shrb fistpl jmp test pop clc inc cli jecxz mov sahf je popa mov es or pop push mov out add in inc jmp jmp cwtl clc cmp jne popw sbb je pop xor outsb xor inc ss test icebp int mov mov icebp pushf adc cmp out jne icebp jle enter jmp pop jne imul call test sub jge fsubr cmpsl and ret loopne icebp jmp adc push scas or out mov mov mov jmp jg shr or clc cli jmp inc fs pop test and jo (bad) in ret xor mov xchg jle mov lock xor mov add add pop add sub cmp jb jg insb and add mov mov jmp or lahf lods out lea mov mov mov sub out or sub cmpsl fldl mov sub mov pop movl adc mov jne pop (bad) sti mov and mov cmp je sub mov ret call inc mov add (bad) fistpll add je jbe inc mov mov cmp and movzwl mov or mov add xor xor jl inc or jo mov dec test je jo push mov sub call push (bad) dec add mov push psadbw pushf jmp push xorl ds imull dec fisttpl push push mov out adc cld fistp inc mov or rol pop mov cmp sar out (bad) pushf or pusha sub sbb js pop movl je add (bad) sahf mov movl sub (bad) sarb stos insb and clc and jmp lret call mov and jne shr lea mov push std pop outsb cmp jbe xor xor and rolb lcall jmp adc ret popl rorb inc add add scas subb cmp ja fwait jle mov shl mov mov and lea pop adc icebp mov cmpl cmp into lds jbe test outsb ret movzbl sub add aas jbe lea cmp jbe (bad) fmuls or and ja xchg jnp or add inc inc or jmp cmp lock lcall sub mov or shr cmpb mov je jmp fild loopne sbb divl mov or shr mov push std fild jbe mov movzbl out ljmp mov shl mov cmp add pushl mov add mov add mov pop push ja movzbl xor mov sbb mov ja rcl mov cmc push push lea ja mov test je movsb movzbl imul inc push add in inc lock jl lahf cmp ja das inc add xchg push ret lahf cmp jo pop mov popa js addl add incl pop add decl jb cmp sbb lea xchg push enter xor je,pt jge pushl add mov or fwait or shr xchg je mov ja nop lea pop fildl jne dec xchg leave nop (bad) dec jo sbb jmp ret xchg ljmp push shr testl pusha ret enter xchg sub and xchg pusha jg cmp or or ret mov push cmp mov ja or fldl je iret dec ret sub xchg into sbb sbbb movzbl mov movb fmull adc scas movntq xor shlb mov mov jmp mov shr mov jmp mov or xchg jnp add mov xchg and jmp jo out cmp rcll nop lahf sub std cli sbb test je mov jne add cld ja or cmp jbe dec inc lock sub and adc xchg inc popa pop dec call add inc sarb iret (bad) mov leave mov movzbl lea jbe lea jmp add mov inc leave or test mov outsl mov jne and lea mov xchg addr16 aaa addr16 jbe lea stc inc cmp lea inc xlat nop into jl dec xor das sbb mov enter or addr16 faddl mov shl aaa push addr16 add (bad) cmp popf mov cs xchg sub sub jne,pn lahf xor jbe rcrl movsl pusha loope stos ja push and push aad mov andl mov xchg mov aas sbb add or push adc daa fwait lea sarb leave xor das (bad) test cmpsb mov jae xor xor jbe rol movzbl lea popf rcrb jbe lea mov (bad) cmc xchg dec leave or test mov mov push push lea xchg xor push (bad) movzbl lea mov sbb fisttp lea int3 or lea sbb pop ss fadds mov test push xor jecxz sbb mov orl xchg icebp jecxz jg ret jnp jne cmp sub pushl pop mov addr16 fdivrs call mov xor push and mov fdivrl call mov xchg dec insb or (bad) cltd mov cwtl cs out lds sbb xchg sbb pop mov lock mov nop and rol inc ret loope es dec es push jl ret ret dec jl lcall ret jg jl jne xorb sbb leave and ret mov leave adc or aaa loope outsb je xor jnp out cmpsl dec outsb xchg push test fiadd xor dec idivb lds (bad) cmp (bad) xor addr16 add jne fmul ss mov xchg mov dec fisubr and add fiadd push mov sbb inc outsl cmp stos and nop in fs jmp mov inc dec lret inc js mov jne pop outsl cmp (bad) jp cmpsb mov cmp mov (bad) fbld (bad) rcrl test out xchg cmp xchg cltd cli test jmp xor gs push test jnp push inc test lea mov popw test hlt inc call mov push hlt or jne or daa aam iret popf or (bad) jmp popa popa aas mov pop inc test test sahf sti (bad) jmp adc sbb xchg (bad) jmp push lea jmp gs jmp cmp and aad jae daa lea jmp jmp inc dec into jge ljmp mov (bad) mov dec sub xor out sbb mov je add ljmp cmp aam (bad) xor (bad) and push or jmp push scas outsl lods dec das aad add xor xor mov inc cmc xchg sysexit sbbl pop sbb and cmpsb xorb aas loope sbb jno cmp (bad) cld push test cmp das push std mov lds rcr sub mov xchg add out in add jmp push pop shr lret dec js sbb les hlt stos dec adc add dec jge aad xor sub shr and cmc decl and sbb mov shl mov movzbl lea jle pusha push je mov or and sbb test je pxor adc mov push and xchg sub mov inc xlat ret test jmp push mov das adc mov and (bad) out mov ret sbb add rorb popa (bad) movzbl or mov add push (bad) xor (bad) lret (bad) ljmp (bad) in mov iret or cmpsb and xor lret enter pop push add jnp mov or add addr16 push sub and and rorl push les cli push cmp pop scas js (bad) add xchg pushf fdivrl ljmp aas imul orl push xor jo es ss (bad) jne and sti decl (bad) fstpl pushf and mov test je fisttpl add pusha ret mov adc cmova daa mov mov lea xor mov cmp mov or add pop mov mov je push xor jmp cmp add xor lret add xchg loopne in dec jmp adc or jmp scas lea mov ret mov cwtl mov cs adc jmp add stos jg insl ja or lret add mov mov cli mov je mov add jecxz outsl xchg scas ficomp mov daa add stos push fildll sbb sbb jmp xchg outsl mov and mov call cmc mov cld adc out jmp pushf out ljmp loopne fcoml mov jns adc dec mov sbb ja jmp js aaa (bad) out sub int3 std jg shr xor mov jmp mov xchg outsl fmuls add mov popf sub call cmp mov jl jle gs arpl data16 sub or lock mov mov mov (bad) fistpll and adc setae add cmp (bad) out out (bad) xchg ret je or jbe out (bad) movdqu (bad) (bad) mov lea lea or punpcklbw punpckhbw movdqa sarl (bad) jmp psrlw fcmovnb adc outsl jbe cmc lea adc packuswb mov mov ja leave cmp sbb mov add je cld int3 paddb pand fbstp jne prefetch or mov psubusb test scas hlt add sbb outsl cli mov aas push adc movups jae outsb mov jl cmc (bad) fidiv mov and out cmp imul dec jno (bad) sub clc xchg iret sbb cmpb insl scas sbb jle inc or les add add add mov loopne out std adc adc xchg cmc mov xchg lock (bad) (bad) pushl (bad) test jecxz cmp je lea sbb adc ret add call jbe call inc call lea cmp cmovae mov adc ja add pusha push hlt shrb rorb (bad) xor movzbl shr lea lea cmp (bad) jg inc lret mov adc cli or add mov add cmp or iret jmp add adc push jg dec push push lea ss (bad) movl inc pusha mov (bad) idiv add repz or xor test jne sbb es loopne je adc fstps jmp xchg roll cmpsb nop mov fild cmpl je mov (bad) jg les bound push or (bad) je mov mov mov jmp mov mov mov dec faddl push sar push sbb and mov add fnstcw outsl inc add xchg sbb inc cmc pop push jmp or jecxz adc add shlb decl and pop push mov pushl mov mov sbb or mov bound (bad) (bad) js mov in or pop or mov add cmp add lea adc add inc lock stos cli xchg or imul ret or cmp dec jb add (bad) inc cwtl inc sub lahf xor in ds mov call pop gs inc sbb call inc lock sub adc xor mov nop mov aas out fnstsw mov and mov and add jge add inc or and pop or cmove dec or push push sub jne or (bad) imul jle xchg (bad) decl or mov mov (bad) fildl mov jne adc add and mov mov xchg sbb inc inc adc out mov cmovne pusha pop adc and add jp pop and and sti push adc call add lahf ret icebp loope sqrtps test mov cmp je adc xchg and or test iret or idiv mov lea call movb movl mfence mov mov mov cmpl rol push repz lock bound scas jecxz mov repnz xchg loopne jg and xor push adc dec dec int3 add es (bad) (bad) sbb stc movl xor outsl mov loopne pop cld and sti outsb movsb jo inc mov call push cmp call lock sub dec pop loope mov leave je mov call popl inc cli jae outsl mov (bad) sahf cltd ljmp scas cltd test aaa aad mov add jae sub add add or imul fimul jg data16 sub pop or inc int3 (bad) nop sbb enter jmp (bad) pusha cmp jo dec das pushf sar mov das xor addb inc inc mov mov pop add mov adc das (bad) and push push sub xor add (bad) mov add cmp loopnew sbb add push sbb dec loopne sbb xor andb cwtl sbb hlt mov xor jmp andl cmp out or xor inc out adc addr16 addb add scas adc out fsubs cli jg mov add in cmp inc call ljmp inc stos add jno call call or call dec mov mov fwait (bad) sub dec xchg adc add and (bad) or lods scas mov imul fdivrs cmp shr or add mov addr16 mov test jle mov pop add inc jmp sti mov rorl xor xor in cli mov add pop jne es ret cmp fidivl ret mov add cmp add out ds jecxz jge mov mov lods sub test ret sub je rcll sub push inc hlt mov nop ret mov inc sub es pusha adc iret or lcall mov mov add pop jmp popl add into icebp outsb or pop decl inc cmpb mov xor mov xor ja adc ss and ds jno xor mov inc (bad) sbb inc jns adc cmpsb scas or jmp das lret push push rolb shr je in pushf movsb dec dec outsb pusha cmp out adc js inc std nop nop nop ret (bad) mov insb or sub das unpcklps jmp addb in jmp lea jg push aaa add adc loopne mov das enter out js push nop and add xor xchg dec add xadd (bad) mov lods jne sbb js aas in flds add adc fistpll or cli pop push or mov outsb sbb inc or mov mov cmp loopne sbbl jmp imul decl insb pusha mov mov adc sub faddp xor aam fimul (bad) push jp mov and cmp jne fcmovnb sub out xchg std pop jmp jg call loopne push (bad) cmpsl add and push mov daa int3 inc lods in mov push ja icebp xchg in dec and sar or lds sti cmpsl cmp sub mov roll add mov pop jmp scas pop inc cld sbb or add rorb push jl mov pusha dec ret push ret mov movb outsl xchg or pop out nop movsl push ficom dec mov in les adc mov lods and cmp inc add or fwait decb add and ljmp xor mov imul inc pushl mov lea adc ds or pop pop add pop add inc pop mov mov mov sbb xlat sbb adc mov add pop cmp nop jnp es or pop mov sbb sbb (bad) call and or sbb (bad) cmove call out (bad) hlt xor stc mov lds je xor or test es pop push in in mov jo call and xor push xor push loop pushl rclb int3 (bad) call mov mov mov push inc push jle addb outsl pop std paddb jmp movb mov ja mov imul pop pop mov call subb push mov jg negb sahf leave add ljmp sti cmpsb cmp cmp add mov and cltd and aad add or scas add inc pop inc hlt adc fwait or push or or clc pop sbb frstor or or sbb (bad) sub nop daa (bad) and sub inc es xor cmp and and pusha mov or nop jmp (bad) push or incl dec out jne std adc push adc push sbb out lcall fisttpl add push popf push adc inc sbb rol clc add ret jb mov cmp adc inc out or je and push add jl cmp inc icebp pop cmp adc pop adc imul inc lock in add (bad) push and clc mov pop xchg clc add jle fwait sbb clc add cmp cmp jne cmp jl or enterw call pop jb sbb dec xor pop enter daa jae icebp les and dec loopne in jbe push lcall push mov adc call xchg xchg and call aaa jns push clc call lcall push mov mov ds call pop and jmp add nop (bad) loope scas and push or inc xor and adc ljmp std (bad) out jae mov lret je mov std mov push or jl cmp je (bad) (bad) aas add mov mov sub sar sub cmp jbe add lock xchg jb cwtl icebp or jns movl in sbb daa jmp pop fistp cmp mov mov in jne mov shrb roll ja (bad) jg add jmp and test dec sbb outsl mov mov out sar cmp jbe cmp mov jne pushl lock adc jb test js cmp je adc aam out mov mov mov inc pop xor sti inc or jmp add mov roll enter lods mov mov aas enter not shr test jne popf je adc cmp pop mov mov imul nop xchg pop mov pop xchg sbb fadd push xor and pop sar pop adc add mov lea call out xchg pop jp nop rcrb fild icebp leave jp pop jne or or add test jne add mov or in jo jnp sub mov scas sbb push jmp lahf lds mov adc inc sarl mov hlt xchg (bad) cmpsb push call cmp xchg loopne ja sub outsb add sub xor and pop pushl mov lea mov add adc andl repz push and out xor popa loop enter mov sub inc ss fwait and mov push and mov lea aaa mov lock (bad) mov rcll xor out push jno call sub les outsb scas sbb inc xor sbb xchg je test je mov dec jnp addr16 dec adc adc inc test call pop pop dec popf add or jmp lds sub movl push loopne jge arpl push and mov and and je inc jno call aad adc movl inc add jns cli scas jbe lea sub call leave inc mov fsubrs test and jno pop sahf jns cmp fs mov cs push cld mov outsl rclb aas stos or cmc cmp push jno ja sbb pushf cmp jle ds or cmp mov mov cmpsb mov mov jmp mov call xor add lea cmp sbb cli and cmp add test cli aaa cmp mov or sub and mov js dec and adc ret add in cwtl call jmp cmp jbe out mov mov mov mov cmpsb mov mov rorb sbb dec push lea add inc orl fwait sub jg mov mov ficomp into xchg jle or mov call lcall sub outsl (bad) pushl aam mov cmp push mov aas cmp mov jae mov sbb push xor jge call or or call push and icebp push xchg rolb and popa mov pop mov ficom mov inc add or or pop jmp les es movb add inc pusha cwtl pop pop sbbl sti je mov mov fst cmpsb push (bad) jle orl aas sbb cwtl xor outsl dec rorb das movb inc push mov out sub or or scas lahf push push lea popa adc inc cld push les inc mov sub pusha enter xchg leave add xchg leave lds mov adc sarl movl push push and mov or cmc jne cmp adc addb (bad) mov test cmp sbb call mov (bad) arpl push jbe xchg jae or mov ret dec pop adc xchg lcall inc insb test push cs (bad) decl adc movsl add mov (bad) pop and ret mov sbb mov (bad) cmpsl jbe sub or ltr push fistpll lcall dec push xchg sbb cmp std pop movb movb jmp push push aas adc test test xor sub addb jbe dec xor lahf pop jge int3 jg push sub add fcmovnu in pop and push or sub shlb (bad) out mov dec pop jne movzbl test je cmp je sbb jae xor aas mov je mov add sub lea mov push ret sbbl mov mov sbb aas push fwait sbb add in or dec dec mov out dec call popaw ja add xor mov dec adc aas out adc push jecxz mov fisubrl mov pop add adc xor inc add jmp mov mov call mov cmp lea adc cltd ret push mov pop sbb push xor lahf xor lock or das push or inc mov test jae push and mov and xchg adc push std push (bad) pop adc test sete and sbb xchg rorl mov jne daa jbe lcall jmp je mov add sub lea ds push imul notl jbe mov lret mov enter add pop nop add fnsave ja add call inc adc sbb fmull push into push pop mov lock mov call sub iret pop arpl add cmp decb and jl je mov mov inc vpmadcsswd mov cmpsb std or push or les jbe inc jmp mov call xor sbb mov push rcrb inc or add add cmp adc jno test je cmpw je fsubp fadd add ficomp lret call aam add movb movb add sbb sub imul add add xchg xor dec xchg push push mov lahf sub call popa mov nop sbb (bad) and jnp addr16 or add call dec lds pop std mov pop and movzbl movzbl add mov adc mov jmp mov mov loope lret cwtl mov mov sahf sub or inc or ss push mov fisttp adc adcb inc sbb dec add pop mov sbb out jo,pt mov inc add push push out inc mov decb sub je mov or jg jge test cmp out or (bad) add xchg adc insb mov jno in inc inc (bad) jmp cmp je out jmp je cmp jne xorl pop or jno aaa (bad) fldl sub je cmp jne sbb cmp xchg push cs fcoms (bad) pop pop add and jg jg jmp incb xor loope lock adc sbb cmp mov sbb jmp cmp ja mov sbb push jne and call jmp cmp (bad) cmc jg add dec add orl mov sar int mov cmp cmp (bad) std ret xor jmp mov or bnd mov inc jmp inc sbb aas ja inc lock bound xchg xchg and jmp cmp mov aas mov and ret pop (bad) dec cmp xchg cmp and mov es mov stos je jle cmp out cmp jle cmp pop xor scas push jne loop sub popl cmp je cmp jne xor test mov jne outsl add cs and add je cs mov test adc (bad) jne mov adc push lods push jmp inc das push loopne pusha ret pop mov pop push adc pop mov insl cmp cli jne mov add add es pop jg (bad) je cmpw sbb incb call and inc jno xor call pop ffreep mov push test jne call call leave addl sub outsb mov and call loope push clc pop or inc cmp mov cmp jle push add insl add popa or add mov sbb adc add dec adc xchg sbbb push push mov push adc push je inc pusha jb in jg inc mov xchg push adc cpuid adc sbb mov in pop call mov add rorb jbe jmp or adc inc mov add leave dec jns add loopne lea je cmp jbe mov (bad) std add pop rolb sbb cmpb je testb add cmp setle test cmovne lock mov add in xchg lcall call subb gs push push mov fdivrp incl push push call sub mov mov cmp scas add rorb and or dec mov rolb lea (bad) aaa add add add add fidiv les add inc and fiaddl mov call lea jl xchg or pushf add pusha rolb je and push and xchg inc mov and iret add ljmp and add fistpl outsl mov cmp dec lea jg add dec mov jae movb addl call dec xor mov test jmp pop (bad) ja in inc add mov adc push icebp add sub shrb scas insb dec jns xchg add cltd test das xor jne xchg cmp ja cmpsl cmpps sti test pop add or les hlt (bad) fucomp dec sub sbb movzbl mov cmp je je mov test jmp ja cmp inc mov xchg and add sub icebp mov fwait test push movsl or out (bad) push ret sbb jbe adc insb fsubrp jne icebp pop push pusha out bt jae xor mov cmp inc and mov and or or sti xchg push xor inc jge (bad) sub sbb out or lret enter sarb (bad) decl decl test je and lea xor and in je sahf mov sbbl add sub sbb (bad) ret jo cltd ja ret clc jae bnd lds pop pop or mov ficom lret (bad) and pop add lret (bad) push push adc mov jo inc cmpsl xchg lahf dec and add dec or xor push ret lret dec add rorb and das lea cmp jne ljmp sbb xchg in pop dec mov xchg into sub test std cmp ja es insl sbb imul lea inc orl sub push icebp int3 std push and jb in or mov das inc and add and in out inc or xor sbb mov push (bad) sbb xchg cmp dec cwtl pop aas sub adc std cmp xlat (bad) jmp nop add pop sahf xchg adc or pop sbb test push sbb xor pop pop sbb mov xchg test mov fdivp xchg ljmp lea loopne lcall mov xor jnp mov mov mov mov mov decb in sarb push or mov mov mov popf sbb add dec cmp jne lods dec adc and mov jmp fsubs call ja or cli out sbb pop ljmp sub test je cmp mov add ja mov scas mov clc mov paddusw inc add or jns or add inc sti ret ffreep adc xchg shlb (bad) loopne pop or and subl mov sti push add pop add int3 or lret ret cmp xchg or jge es cmpl test jo xchg std inc sub movsb sets hlt in sbb loopne (bad) jbe push sahf in movsb comiss add test push lcall mov (bad) out sub xchg cmp xor cltd fadd fcmovu call mov sbb or pop test cmpl pusha push gs movsb push punpckhwd dec mov mov jmp or pop pmuludq mov rorl and out add dec testb repnz std orb push sub inc in xorl add rcll je jnp jmp loop cmp jae push rcrl add add sub jg fst inc add jle mov (bad) push and and xor shrl mov pop jmp and mov test cmp jae inc and mov ret adc jnp fwait mov and mov push inc jge testl je dec xor test pusha into (bad) mov imul out add aad pusha jg movzbl jmp cmp xlat jne adc js pop xor sub mov bound enter adc out and jne sbb inc hlt xchg loopne jp setne xor pop and and pushf adc outsb sbb adc ds jmp in loopne cs and gs push and cmp and lods into int into jge std push ss sub jo add ss lret mov sbb aas test xlat sub rcrl mov adc and jmp test jbe and mov pop sbb jge std ja mov dec add sbb (bad) incl jle inc jo xchg mov sarb mov mov dec cmc lret fildll jb sub mov add lcall sub and add pop push cmpsl pop nop (bad) out xchg inc test or inc xchg jae das or push pop add or add aam cltd mov (bad) sbb mov sbb sbb mov push sbb js out cld sbb inc or test jae add dec add add aaa sbb jl add xchg sldt lea test add or inc mov sub dec mov mov insl adc daa sbb pop adc testb ja adc pop mov xor inc dec jle popf pusha cmp inc icebp jne or mov add nop add daa ss or fisttpll test sarl and roll sub inc (bad) add call mov sub push rclb je add out cmp leave test and fcomps xchg adc dec shrl out test jbe test js lods xor cmp cmp adc sbb test jmp lock jne in je mov sbb add cmp je cmp sbb mov dec ja pop je pop adc mov ja push inc dec pop inc and je in test test inc push test sbbl cmp jne add jg mov jns add into mov pushf push pop sub mov cmp mov add or jns je inc in lcall cmp test mov aaa lret je jnp scas test aaa adc and push test out adc (bad) imul mov push addr16 dec inc outsl add (bad) stos mov incb pop scas je je,pt call (bad) ds call cmpl jne ret mov mov shl add cmp fstps je pop sarb jmp add cmp je cltd push lock jge jg jb add icebp add call jne sbb addl mov pop sti test push xor jo dec int int mov into mov jmp mov in test xchg ret and jne mov push xchg pop in xor mov or or shr inc jp iret je sbb int3 adc push (bad) je adc test pop and adc or je les aas xor pop inc and sbb xor in test je mov test je cmp sub jo jne jmp mov fcomp frstor add nop or inc push mov stos cmp jno push or mov imul stos and inc pop (bad) pop mov fcomip aas ret cmp jne or adc daa pop js call fimul popa rorb (bad) es insl add outsl adc test shrb cltd sub sbb xor jo jns in addb imul push sbb pop inc les mov mov test in pop mov into push cmp loopne inc jge test mov jp cmp jne inc mov loope push sbb outsl mov jae jne (bad) (bad) dec jnp popa sbb mov adc pop pusha stos sub pop cmc xchg sbb cli les test mov xor call sub push or add aas (bad) jo rorb div mov je (bad) ss lea cmp mov inc mov enter cmp cwtl sbb ljmp cmpsb iret xchg je add ja pop cwtl or cmp jne jmp nop xlat mov cmp je mov lcall and add in mov jne jmp adc sbb sub sub push mov outsl jmp jmp sti adc mov das mov dec fcoms inc das fldl2t hlt pop stc pusha mov push lahf das cli mov stc jmp xor cli mov mov (bad) push mov or outsl add test add jae mov jmp jmp je mov cmp in enter add inc rcrl call popa loopne sub fistl xchg aaa les push pop pop lds aaa jmp loop jo out push hlt sbb inc cmp (bad) pop jg or (bad) in cmp je or cmp je (bad) sbb cmp je insb aas jp idivl pop cmp je ja mov adc lds call sub or add iret cmp cmovo std adc jle push sbb cmp jne xor xchg inc iret repz je and fnsave adc cmpsb imul inc out cmp stos decl mov cmp (bad) (bad) (bad) jg lods cmp mov out jl sub mov out mulb sbb jge push test test ja addb add dec mov lahf (bad) push add dec call decl cmp je jle sti je test cmp jne lock adc (bad) (bad) cli xor pop dec add out cmp cmp sti mov lahf xchg pushf cwtl std sbb xor or mov inc cs mov cmpsb sti inc mov mov test jge inc adc mov mov xor int test add data16 xor add mov sti in cmp pop dec cmp pop jge cmp je cmp cmp add pop jmp cmp test mov cltd fmull adc sbb add jp call or pop iret add cmp sbb xrelease out adc mov loope lods pop pop test dec and inc stos jmp jmp push cmpsl stos pop dec mov loope repz cmp adc xor adc mov push pop leave or xchg aad add jmp out mov inc repz mov outsb and jl and nop int3 jl and dec and loopne loop dec mov sub cmp ja test scas jg jg mov decl outsb cld xor mov fstl push in add cmpl setne jmp repz mov fs add mov ljmp jae add pusha mov jmp scas fistp call (bad) and inc mov insb shr fisubl inc fwait popa sbb adc lods mov (bad) fild adc test aaa jne xor es pop jo inc das sbb call pop cltd or outsl call movsb fisubr or push push sbb lahf mov cmp call jmp or fnstcw cmp pushf je xor fisubl and lods cmp (bad) scas add ret cmc fxch js jmp cmp jne push add ja add jl jae and fucomip aaa hlt or cmp je lds mov fadd js add mov ds (bad) lcall jne jb pop add mov movb xchg inc add adc sbb add inc adc outsb mov rol inc add inc add repnz fisttpl test cmp dec dec aas cwtl test sbbl jbe or lds cs or push imul mov aas xchg lret mov mov movzbl sarb shl sbb test out dec pusha fdivrs sub cmp imul sub sub ljmp ljmp add inc cmp je testb mov rcrl movsbl inc in sbb (bad) cmp mov mov cmp and test shrl cmp je sbb mov bound fadd lea pushf jmp mov mov (bad) adc icebp fmull loope (bad) and mov push cs mov inc or (bad) je add testl push jge pop sub sbb mov push mov test mov or outsl or cmp sete cmp mov and mov data16 jecxz lods stos fcomip call cmp jne and mov add addb dec add pop xchg cmp and je sbb mov or je add ljmp jge (bad) test rorb jae lock push mov lea mov je and and enter and and orl out mov lock jne fadd mov sbb add pop pop push dec and bound out and add test mov sub sub shr inc out imul loope test cmpl push add test cmpsl je jo rorl test cmp mov cmp (bad) cmp push bound call hlt decb jmp call cwtl sti ja mov cmp je and xorl mov test pop adc xchg add fistpll pop add mov cmp popl mov push adc cwtl jp test les add aas (bad) or call adcl or test xchg js aaa test mov inc and adc and (bad) mov iret pop pusha cmp je xor adc or cmp sbb test dec lea cs inc xchg sarl cmp lods out es bound cwtl std push addr16 cli pop je test and test adc pop and imul cmp xor mov adc lea or fsubl xchg pop out test stos push sbb add in and jb cwtl cmp (bad) xor add fild and pop aaa xor lock jmp pusha addl mov xor xchg lret jae in lret inc push jb lds call jo call les and jne test mov cmovno pop cmp jne nop xor sub fucomi jbe cmp sub out jne mov test ss addr16 cs push push ja pop orl popa loopne (bad) xor test int jnp lcall adc mov push push mov cs xchg in lea and lock test or or mov jo jg dec or lcall ds jg xchg sbb mov xchg fs jae xor fdivr out jae push lock test je pusha or insl push add jne lahf sub or clc sbb (bad) jge sub cmp je pop sbb jne sar xor jmp movzbl or mov jmp lcall std xchg sub dec incl add add mov mov mov in int dec add push sbb add mov mov in add or insb dec push sub jmp call pxor lea decl dec hlt dec mov mov btr (bad) outsl or movb adc jg push rol inc add movups repz inc add dec sbb clc ja movups outsb add inc push add inc cmp push gs imul inc adc sub inc rolb pop and mov mov mov add decl (bad) call dec cmp mov je in mov add mov mov mov hlt inc stos or mov xor test pusha cmc dec pop xlat jg inc sbb mov js cmpl jne adc sbb arpl test push insb or jle jbe outsl lods sbb (bad) in negl sti clc imul loope cmp je push loop mov inc push loop mov jle popa js decl ucomiss fmull test cwtl rorl jmp mov or lods aam addr16 mov jmp (bad) enter ret mov test sbb insl fsubl cld add roll stos add in xor pop das cmp add xor push pop test inc sbb push nop mov jo clc push cmpsb seta setb sub movsbl jno pushf test sti sub adcl sarb movl inc imul and je je mov nop jp pop clc and sbb repnz or outsl or jbe jnp and push mov push enter push aas ret inc or (bad) mov imul incb cmp jl dec mov mov int3 xor inc mov test mov insl (bad) je jo aaa or sub mov loope cmp xlat push sarb inc sbb dec cmp dec and cli ja cmpb jne dec cmp je lea inc cmpsb stos add sub cmp je add add add sub clc push mov or aam movl add call xchg mov mov pushf (bad) fimul mov divl and jp in out or jb call (bad) in inc push lock clc call jns call mov inc add sbb jl (bad) aas jns and inc testb mov mov call adc pop loopne fistp and call enter lcall mov add mov pop cmp test inc cmp (bad) (bad) push cmpsb jle popa neg cmc insb jge icebp push dec adc inc add cmpsb gs and stc add adc lock and out into add in call nop mov jecxz arpl jno aaa shrl jnp inc push jns test push insb sub dec add rcll clc inc pop hlt cmp jne cmp dec mov into (bad) lcall test daa lds mov icebp cmp fs mov push dec clc add (bad) jle clc jbe jns je cmp adc loopne js fld1 (bad) dec add shll and sahf dec mov stos adc (bad) or add mov dec cmpsb inc pop xchg or jge push pop pop add inc repz inc cwtl xor jbe xchg or jmp cld incl cmp ja mov rolb jg loope jne mov ss pop dec dec cld mov mov test je pop cli pop pusha fcoms addb out push scas out js and add mov (bad) lret jno in jp add fcomi outsl jp icebp call mov dec or cmp pop jle adc je or imul ja jle jmp rorb and sbb or xor mov lret je or mov (bad) or jmp cmp jne cs movb dec add and push push mov idiv mov nop movb jmp sbbb inc in sub rorl ljmp jmp cmp jmp scas nop icebp aas test and dec fld1 scas int test or nop adc out inc pop fwait pop add cli rolb adc ja or incl add push cmp setle mov lea mov mov test aaa pusha loop cmovne imul jne jbe movb jmp inc or pop cs dec add dec decl mov push and testb mov jmp and mov jmp movb jmp or (bad) adc dec cld ds mov cmc in xchg cmp jnp mov movzbl pushf sti outsb inc ret call cmp add mov jge dec fcomip outsl adc call mov in or dec clc (bad) es adc das ja adc scas aas call and into mov and pop in sub loope push jns stos faddp xchg ret xchg mov frstor or sub inc mov aaa or fdivrl cs sub mov dec (bad) sbb popa rclb call icebp decl int3 cld gs dec cmpl jno,pn orb adc call (bad) jg je movl movl movl sub add pop or out add cmp add mov adcl ret pop lea cltd or popf scas scas js cli xor pop or pop or inc shr add call xor mov add (bad) add inc dec cmpb add arpl dec ljmp addr16 cmovne mov incl inc lods hlt add xor test loop add or inc out mov fimul push leave or inc ret mov push xchg call inc cmc add andl sar mov and cmpb adc fisubr mov mov mov mov inc or jge outsl cmp inc repnz push push cmovne mov and jno or ss cmpsl sbb call std jg or mov movsd cvtsi2sdl pop xchg add mulsd push sub ljmp and add out (bad) aas push mov jns mov and cmp jne adc movb mov sbb and sub inc mov mov add ja sbb sar sti cmp dec cmp cmp je sub xchg and sbb cmp xor add mov adc mov push add into sbb (bad) aas sbb dec cmp je mov xor jmp arpl xchg and add pop in (bad) jg inc dec mov sub sar cmp jae int3 add add arpl movzwl mov push push sub dec aaa repz dec xor push dec loope add push dec pop ljmp pop outsb and in pusha mov test mov add inc sti push or scas rclb clc sbbl rorb test into jl outsl addr16 cs mov aad xlat scas and mov sub clc pusha cmp add test mov icebp add mov arpl mov jbe lods loop sarb in repz push adc (bad) xor ret push icebp mov push dec mulb test mov int3 fcoms cld or add push xor inc out xchg cmp pushf jmp xor or adc or or pusha mov add dec (bad) bound mov jl push pusha es leave pop sbb pop pminsw and sub jno movl test cmp mov dec pop aaa push sbb jae adc ljmp les fstps jmp pop (bad) and xchg or fsubs adc xchg add idivl push pop pop pop outsl mov xor loopne cmc jbe dec and add out loop cmpsb ljmp rorl aaa in jne mov call out adc movl jbe add stos fstpl adc sarl xchg sub lahf ret sbb push xor push adc pop pushl les mov pop pop out rcll jg mov mov test js mov or pushl shlb cmp enter hlt jne mov mov sub fadds (bad) dec aas mov or mov lea cmp subl add movd cltd movq mov clc (bad) xchg mov mov mov (bad) bound shr rcr cld jg add cmpl mov mov je sbb je mov jp insl and mov inc add cli mov mov shl sub mov ljmp mov roll mov inc jmp xchg sub lea and pop jae mov clc incl add mov add rorb mov sahf imul mov loope clc mov mov mov mov lea add mov pushl (bad) div imul mov sbb lock xor aas pop inc sub test cmp rorb mov jae pop or jge (bad) cld lea out test push inc add jp shl test inc jl ljmp jmp inc jmp fcomps sti leave fsubr mov aas test js aas mov (bad) pop mov rep stos jmp aas mov popa mov adc dec add add and adc jo mov or xor in ljmp in mov pop push ljmp insb and lea and mov ficom lock add and stos sbb pushf dec std mov in test jnp push push dec mov pop mov mov lock shr and mov push pop out xor xor xor and (bad) nop dec cmp mov mov jb cmp jae mov lret mov out fwait ja cmp push insb fidivr jo mov dec mov push mov jne sub mov test mov pop mov mov pusha mov cmpl and mov enter test inc or orb aas push rorb dec xor cmp je push xor loop push inc sub cmp lods adc and outsb test cmp push mov push inc mov push or dec adc int3 inc adc or outsl xchg or push call outsl push cmpps mov insb ja adc push andb (bad) mov and imul jbe orl clc loopne and loopne adc mov sub pop (bad) ljmp popa clc inc repz and and push fstl xor sbb aas cli pushl push sub (bad) jne mov mov cmp test jle aas arpl call jmp ljmp add or and jmp jmp dec call cmpl jne clc xchg mov jl sbb call je movsb adc push stos je sbb je adc jmp jo das add in mov rol sbb jp je inc es mov icebp mov and movsl sbb add mov push push or push and mov cld aaa adc or push adc inc adc adc push sarl in sbb roll xchg aad mov adc out dec pop push or or out mov sbb push push mov aas je inc sub mov mov xor add xor xor (bad) lock das or or lcall inc and or test mov mov xor test mov cmp call mov arpl rorb dec adc mov mov lods or pop and jae loopne add mov mov sbb sti pop push or sbb std add test adc adc (bad) iret js add shrl call xor (bad) pop sub ds cmp jae add push fsubrs call adc cwtl jg out mov lea lret (bad) jae cmp in xor cs jp add inc sub iret sub out test adc mov xchg adc add cmp loope adc mov cmc jne adcl idivb lea call push cmc mov fild mov es jg rorb mov aad (bad) cmp mov or sti adcb push out pop or inc in xor rorl imul mov pop pusha mov decb push pusha mov in mov or insb and aas call popf add and dec push fistpll call and mov xchg jnp test add adc mov and iret jne mov cmp cmpsb add mov loopne add mov sti cmp mov out loopne mov lea lea and or inc cli lcall dec and fucomp pop pop (bad) add or cltd sub test fdivr out and dec mov (bad) jne mov sub adc dec dec pop mov fild adc xor mov fs dec mov and sub sbb je adc add inc pop mov mov pop (bad) mov xor xor or je test pushl jno fildll test jns fadds jl or cmp pop fcoms xchg jne mov push and pop and scas lret movups daa sub ljmp subsd sub stos jmp inc xor pop and push std mov jmp dec inc inc and mulsd into jg daa pop inc sub sub bswap mov out push adc das adc or jb incl or addps addl lock pop xor xor ljmp clc pop xchg cmp ja addl pop inc cld inc mov mov sub repnz push aad xor xchg add (bad) call or rol movaps cli or je fs mov or jne mov loope jo mov mov loope insl cmp and mov push inc mov ja jo bnd pushf pushf mov sti xor sahf adc loope pushf je xor cwtl mov push dec lea and jg inc sub test xchg cmp sbb (bad) cltd sbb and iret sbb xchg inc repnz cmp enter and add outsl or cmp lret cmp int3 sbb ss cmp scas dec inc xchg lock js,pn mov xchg mov mov int3 rcll repz lea leave dec and xchg div inc xchg out adc or xchg xor mov push inc aaa out mov clc pop mov test gs das inc adc in sbb into lea insb jb push pop mov xchg lds popl popa negl cmp mov add lods lret es clc mov call sub cmp scas mov test mov and jmp notb sub and shrl in add add jno pop and or push sub mov cmpsb mov mov dec cmpsb cmpsb les push push add sbb sub jbe mov roll hlt fstpl popf mov in push mov rcrl sub imul es mov sbb xor in xor sub mov int jg mov (bad) fstpl sub jne (bad) jne xorl or cmp inc jae mov int adc lcall adcl push sbb jge mov orb cmp (bad) cmove sbb sbb and jle push lock outsl out pop loope lea ret xchg lea jle or inc add mov jg or mov jmp lea and push fstpl dec mov inc mov dec jne sub pop pop jle daa mov jmp das dec sub adc movsl (bad) cmp add cmpsb das fild roll bswap subps call mov sbb ss add aaa pop add divl add lret dec adc sub adc sub xlat std inc in mov sbb adc or jmp popa out cmpsb or dec or rclb dec mov lods fwait mov and add call je mov and inc shrl adc jb push mov mov or xor xor mov pop adc cmp adc incl sbb mov mov xor xor or je add test movsb inc loopne xchg adc mov push nop jmp mov and test cwtl adc insl push mov xor int3 inc test xor je,pt adc mov sub add hlt ja sbb mov int3 and pop nop jo add adc divps cmc sbb xor add and ja data16 mov loopne push fidiv int3 mov add sub xor mov add in add mov ficom add xchg pusha xor jae jae pop rorl jno add sbb xchg mov sarb push cwtl rcrl cwtl les mov lea inc (bad) popa sarb cmp lock lock sub or addl xor push and sbb push sub or (bad) pop in xchg lea cmp jb pusha test insb and fs je jno test test hlt sbb adc popl pushaw mov (bad) rorl add cmpsl and adc adc jno aaa std mov dec adc adc mov mov dec mov icebp jg (bad) mov mov insl and xor add cmpsb mov popf ret lods rolb dec cmp adc or xor push xor mov xor dec rclb outsl cld loopne cmp ja jbe push rolb and sub orl add add push fdivrl (bad) cld inc and push icebp repz push push sbb mov jns movsl std rorb mov xor pop test call xor imul pushl dec fnstsw and push shr daa jmp jl daa mov pop out orl cwtl mov das cmpl xchg shlb adc es mov push pop adc mov inc into loopne jne inc sub jae lock xor sub pop popa inc ljmp pop xchg lcall daa andb pop xor leave pop push rol and andps rclb rolb push rcrb pop or rolb pushf test pop add and inc and or loop inc and sbbl inc pop orl jl stos adc fucom push test jae aam jne pop pop and pop jecxz and mov mov sets jbe adc push adc cmp es mov add in pop lock inc add pop dec xchg repz lea sahf push push sub adc sub inc mov mov (bad) and (bad) mov cmp or cmp dec push mov idivl push dec add or nop shll bound xchg sbb xor lcall leave inc mov push xchg cmp aam cmpb js add adc test lds (bad) lcall call adc movsl mov add push rorl cmp pop sub mov mov test les (bad) mov jmp rorl mov outsb nop push push mov lea addl add call lea and add push sahf push out jo add (bad) call jb inc mov shrl dec fadds daa sbb inc mov adc call or les cmp test add mov ret or xchg stos (bad) stos aas ficoml push push xor iret cmpl iret inc add stos mov nopl iret pop mov fmull icebp sub es (bad) pusha mov int jne lea call loope and or push sbb mov xor into add push mov mov dec mov std mov fist mov mov mov add mov ficoml mov or rorl and and push mov pop mov sbb push mov mov mov xchg popf mov faddl mov mov jbe xchg add mov inc add and or mov dec add mov mov xchg mov mov xchg mov roll pusha dec mov lock lea or jno in add add dec sub push mov mov aaa (bad) or orb decl and test js test (bad) hlt divl lea and jg ljmp mov loop sub jnp or es cli lea subb nop add nop mov xchg add icebp enter mov enter mull lock xchg add mov add (bad) stos push push cld nop test jns daa jle dec fsubl inc add cmp pop sub adc scas test sbb mov pop and sub and and inc mov or mov (bad) adc and subl clc sbb mov mov mov je cmp xor mov daa cld push ljmp scas movb dec mov test pop ret jo mov (bad) sbb mov cmpsl sbb jne mov jmp (bad) jne jmp out jae xor div push sub xchg pop mov mov dec nop movq or adc outsl add sbb add dec addr16 inc push dec lea lea jmp pop xor adc rolb adc mov mov mov and add sub pop and adc add push shrl mov and adc lcall push roll mov fld1 enter jmp add sub add or fwait lahf sub push lds lea inc cmp (bad) loope inc xchg lret xchg or add ds into adc dec and sti (bad) incl jg push xchg push xor inc adcl js mov mov cli rorl lea mov xchg and sub mov sub mov and out nopl ljmp adc mov test and mov cmp or and inc lea mov movl pushf xor inc or mov mov xchg and cmp je adc mov icebp arpl ret adc add (bad) decl adc nop mov loopne xor push sub scas cmp add sub push mov add fadds inc and inc xor mov push and enter addb dec sbb mov cmp add and sbb mov adc adcl mov je test test cmp rorb cmp and movl fsubr adc sbb inc test add std lds (bad) jmp sarl in or enter sub std aas iret mov jmp fldt les mov mov cmp mov je add call mov add call push sbb mov fmuls jle and add test loopne (bad) pop popa sbb shrl and inc mov fnstcw and stos clc inc cmpsb insb jbe and jmp imul cmp data16 cmp jge dec cmp jo sbb rorb xchg in inc add daa notl insb fsubrs fmul xchg fldt data16 popf popf cmp cmp popf dec push nop push push stos push xchg adc jae jge and mov int3 or pop cmp cld push bound inc push test push out (bad) xlat scas mov mov stos inc jns cltd or jnp shr ss ds addr16 call jmp mov add (bad) decl ret (bad) add push test mov xchg mov daa cli xor jmp pop pop vpcomud fwait or mov jle call cmp les mov sub xor push inc xor jg adc sbb divb cmp or add fcomip mov add or mov or movsl mov out cmpsb pusha ja insl out or sbb sub fdivr add mov call cltd or imull jne push xchg iret jbe and aas fistl (bad) cmp je lea data16 arpl repz andl jb adc call out sbb inc addr16 jne push sbb pop inc cld cmp je mov pop bound fimul les xchg ret jne (bad) push mov xlat cmp call mov pop mov rep adc mov mov and xor and and faddl add cmpsb je cmpb (bad) or movzbl mov add add iret push push mov fcoms mov ja lods (bad) adc dec add sub push adc daa rol sub pop or cwtl or lahf sub jae pop sub lock add loopne adc jmp push pusha inc jg add xchg in mov hlt adc mov inc and jo loop pop sbb xor push cld imul call scas mov add shr add adc sub adc mov xchg loope loope inc cwtl pop pop mov xchg push loope sbb mov mov jg test call int (bad) in mov add add (bad) sti cmp int3 iret pop add jmp clc out pop pushf loope aas sub mov incl pop andl out or rorl dec sbb out sub lea cmp pushf jb outsb xor stos loope pushf adc sub mov (bad) add pop or xchg fstl lds push dec ret fnstcw test dec add call cmpsb pop ja adc mov sub (bad) pusha adcl (bad) fcmovnu cmp movsl dec add ss test jle (bad) js in cmp shlb or fildll mov fldt push mov repnz sub gs mov cmp push rclb push mov mov ret ja sbb rolb mov push ljmp cmp call mov repz daa mov test (bad) jo pushl adc cmp (bad) jae inc cmp imul jb jae scas pop or adc lods cmpsl insb mov lods jnp out out cmp jmp inc mov jno adc jnp cmp ret adc xor cmp repz add ror or adc sti push and call or jecxz cmp test lea mov (bad) mov sbb xor fldl and call andl lahf cmp out mov and call sub pop inc jg shll pop adc inc adc dec inc mov mov divl inc cmp or loope (bad) call in mov jne add cmpsb or call ja sbb jl adc mov or adc jnp cmp inc xchg push cmp or or (bad) mov cmpl mov je call pop xchg inc rorb scas call pusha and daa iret insb mov andps lock sub add mov sbb (bad) aaa push fnsave xor test cmovne je jecxz mov leave je and mov lea mov cmp mov sub push add adc xlat lea gs add and push rorl addb pop xchg and add add incl add sub test mov jp adc or insb push inc cmp push dec pop ret out cmp xor and adc idivl lock insl clc push add dec dec or dec or adc es test ret jb lcall cmp int adc sub adc arpl add call xchg sahf test jne outsl dec inc mov cs add jmp orl addb jae sbb cmpsl adc hlt or sbb sub shlb ss test jne sub test mov xor lahf mov xor or inc sbb add aaa loope fwait call sbb shrl lods pop add orb sbb xchg push mov or pusha inc add mov mov lock mov xor xor mov xor je jb jb lea decl jle xchg test mov insl push add cmp je ljmp pop xchg sub add rolb call dec sub add (bad) sub mov cmc cmpsb mov lock push inc mov mov sbb int3 call sbb in mov add mov or shl mov inc inc and push xchg mov flds call push dec dec out mov push dec test sbb sub or or add jno stos xor stos sbbl stos imul push mov jae test xchg jne (bad) jne notl dec call ljmp push push xor push mov jecxz in mov mov and cmp fst mov movsb aaa js cmp insb adc pop test sbb sbbl negb inc (bad) loopne cmp cltd out sub pop adc adc pop or pusha js iret pop or mov call incl fmuls add lahf or add sub loopne mov xor sub aas and in and cld sub add loop mov je jae decl or pop push iret adc in scas dec sub push inc mov xor and adc pop add xor call lret sbb pop mov xor sbb add adc xor ret or cmp std jg cmp je sub mov jbe arpl rclb pop mov imul sbb sarb aas icebp sub push sarl enter aas jb nop nop push mov (bad) mov and stc cmp mov fwait test sbbb cmpl push decl add rorb and fcomi lea ret or pop and xor idiv pxor cmp outsl mov cmovle (bad) cvtsi2ss add inc adc pxor mulss enter in leave movsd adc dec add cvtps2pd cvtsi2sdl adc and out pop int3 movapd andpd comisd ja cvttsd2si test and pop adc cmovg lea sbb pop ret cmpb int3 add jmp jne jns add sar jmp fnstcw (bad) repz jmp cli pop adc cmpps js push mov subsd into jmp jmp add in add mov and lea rep mov push mov add dec push jp call sahf sbb aaa cmp cwtl sub push mov ja add mov add jle jmp mov fldl movsl mov jbe out (bad) ja jge (bad) imul test mov imul pxor fmuls mov pop fdivrp lcall push xor test jle imul cs mov add mov sub lahf inc add aaa icebp sahf int3 loope add (bad) fcmove ret nop (bad) mov pop mov outsl or xchg scas pop lea add (bad) sti add mov movb add sar insl (bad) mov push xchg out mov sub bound or pop adc jle mov mov test mov clc sbb call cld mov mov mov mov sbb mov mov cmp cmp mov mov mov leave cmp cli (bad) popf or inc mov mov mov mov mov push cmpsb call jle add test or pop add fwait ja mov jle mov inc sub subl insb mov cmp mov mov mov cmp mov mov xor add adc sbb loop and lahf push and and cmpsl mov mov inc mov pushf stos ds mov add xchg and mov pop xor rclb loopne rorl xchg jae mov and test addb mov inc push mov dec mov (bad) jle cli mov xchg xor inc inc mov sbbl push insl push loopne push xchg pop ds mov fisttpl fnsave jg inc popa mov dec cmc push mov push inc sbb pop mov arpl or adc out dec sbb mov and xor xor xor pop mov cmp or inc xor xor push lcall mov xchg and repz jge add dec mov sbb xchg fcompl sbb xor or bound pop jnp cmp cmp cmpl sbb jo jo mov mov sub xor js,pn sbb stos xchg insl imul (bad) pop xchg xchg js,pt and and or ja addr16 and and pop popf fadd inc pop push stos dec punpcklwd ret and mov jo mov lds je lock and insb and pop push pop mov mov xchg inc mov lods inc mov shld sbb (bad) decl movsb fiaddl xor xor xor scas mov pop cld jo adc xchg xor movsb js mov cmp out arpl push fbstp flds loope test or xor and pusha and cli mov xor stos mov shll int jmp mov in sbb adc xor xor cs inc mov shld frstor lret jbe std pop and mov daa jl xlat xor (bad) cmp add int3 insl mov lret xor and jo js or xor iret (bad) xor int3 aas out add jg das decb lods rclb lods lret imul and or xchg roll addr16 sub fidivrl je ud1 (bad) fbstp push mov lret movsb rcll rcrb out jbe mov (bad) arpl xor repnz cmp push xchg arpl cmp mov push mov ja iret xor fidivl mov xchg sub mov test out sbb add (bad) js out lods lret lods rcrl jp add and loopne inc jb push mov sub sahf jae int3 jno xchg mov aaa push xchg movsb sarb mov adc and pop sbbl mull xor and sbb jae or or (bad) or sub adc insb insl pop aaa xchg jae and mov imul jnp jbe (bad) lods rclb xchg imul and sbb dec inc mov xor xchg mov sub or out or cmpb mov xor and jne or xor cmp fdivr jp and dec or jo pop xlat adc addr16 dec dec xor fmul sbb out rolb or test or aaa inc sub jnp test dec mov mov mov push xchg xor mov push (bad) lods rclb adc xor or dec and push and xor inc mov xor outsl out jae cmp or mov ret sbb jne mov fs push xor xchg or lock mov sbbb add push xchg and jge or movsb ret push rclb add pop and sahf (bad) adc mov add xchg and scas loope push lret add lret loopne push dec fcompl add inc push enter iret cmp insb or push or push or cmp dec and xor stos aas cltd add jb sub loope or ss int outsl in (bad) cmc push popf pushf outsl sub mov adc aam xor cmp pushf and adc jae stos and or setne mov das sbb xlat popf push mov sbb sbb jl stc xor xchg mov adc push sti or sbb pop inc push mov add xchg jnp jnp pop ja ret and out jmp jno iret jne lods mov jne add enter lret arpl ja lds pop faddp out cmp sbb pusha pop and clc dec cmp pop aas mov shld dec mov fbstp and test push dec xor jl adc cmpsl lods dec add and push jno cmp push repz mov addr16 push bound lods and jbe mov and xor mov mov push je jb xor nop imul or xchg mov test cmp jle movsb clc push xor xor add pop out arpl cmp inc and xor adc add add jb dec cmp (bad) shld shld add mov loopne ja mov movsb (bad) lahf out mov sahf fwait adc lock (bad) jl sbb (bad) not mov and and mov mov call iret sbb xor addl push xchg adc jg not not and or in call push fdivl aaa sbb pop push cmp mov imul mov xchg and not xor ja ret xor or jns xor mov jno,pt shll dec and and sub mov fld (bad) cmp xor or mov stc mov rorl (bad) not cmp jne and not and or xor jb pop pop adc test mov fbstp repnz and not and not xor push dec inc jge pop or out sahf jnp mov and loope push test ret mov rcrl push scas and ja cld xor xchg rorb shlb aad not lret jne cmc and loope xor lods sub test fisubrl rorb rorb popa clc clc xor xor add inc xlat push add int insb mov pushf pop adc outsb cmp fisttpll xlat not mov rolb loope call xor not xor jp outsb loopne xchg add cli xor call lcall and daa mull cs and subl and inc adc (bad) adc xchg sti in mov mov lock and jp dec adc popa pop and mov int jmp adc out adc pop cwtl lods or cli adc ret mov xor mov pop out or mov push jnp addr16 (bad) jbe addr16 sbb test mov and push pop adc clc (bad) popf or (bad) xor mov mov outsl inc xlat ds and xorl sbb cmp xor lret (bad) lock mov sub not not and xor aad repnz pop or mov mov mull sbb xor int xor iret sbb jnp push dec aad mov clc cmc ljmp mov jecxz jb push fsubl jo mov mov lea aaa not and pop (bad) xor push cmp push xor fnsave mov jo jne mull dec in dec xchg pusha xor or or add sbb jnp out (bad) idivb pop cmp call mov pop or lods stc jmp (bad) mov sub and mov imul and xchg pop mov (bad) push xchg inc pop aad je sbb call xor push or jg cmp pop js mov and aad jnp add jae divl sbb aaa fldl mov jmp jecxz cmp jne enter (bad) loope in pushf repnz push mov je mov adc jae mov (bad) notb mov jo pop decl sub lret jno jo ja or mov mov push or mov cmpsl mov and test pop or jne pop std mov mov mov or inc push jl mov subb and cmc mov dec (bad) inc cli in clc mov xchg or jge adc cmp xchg movsb add pop test pusha mov cmp pusha mov (bad) jecxz adc (bad) jb xchg mov mov mov mov mov jmp enter or decl jge mov cld sbb shrl mov mov push clc mov xor mov xchg fcoml cmp pop and jne std xlat mov pop sbb sti mov ret mov mov mov xor aas inc dec mov mov test add pop test add test shrl in cmp xor xchg clc fwait sbb lcall sti adc sti mov movdqu pxor push and cmp sub and int fwait daa outsb push movsb and jbe lods pop shl leave and jle mov pop icebp mov adc (bad) mov add int pusha movaps mov data16 xchg or mov and pushf and push pop movsb and or sub sub stos lods add sub std push pop movaps aas xorl pushf cmp xchg gs jne (bad) or loopne fsubl mov jl add iret mov cli js xchg and add sub idivl scas pushf sub pushf sub subl pushf sub add xchg dec sub sub sub pop ja sub and push add pop push and inc enter mov mov ds cmp mov push popa jns mov push jl lods mov mov out xchg or test mov jmp adc push cmp pop mov xor xor ret adc mov out jb addl sub inc clc in push jo and inc mov inc push inc les inc loop xchg cmp into aam or and mov sbb add jmp rclb aam test arpl sbb push jo fisub sbb push add jns loopne jb,pt mov mov out icebp inc mov inc test movsb out scas jnp mov aaa mov push pushf inc icebp xchg jae xchg xor shll mov mov jne cmp enter add add add mov and js out arpl pushf and (bad) jo (bad) xor mov push xchg rorl cmovae outsl xor int xor mov pop jo sub and pop cmp (bad) call add jae xchg mov mov xor pop (bad) loopne mov ds or cli or adc clc jle dec push xchg and cmpsl pop ja repz test sub stos xor mov mov (bad) fistpl cli xor mov xor jle (bad) or ja pop aaa div insl test jno mov xor xor fcomi cmp out sub and sub pusha mov push pop bound ficom or or (bad) or cmpsl (bad) lea sub mov (bad) pop lahf and xor dec test pusha pusha cwtl adc jle mov mov sub in sti mov inc mov lret loop sbb or adc or mov (bad) xor cmp push adc outsb push scas jmp cli add out xor cmp test mov xchg stos sbb rcrb xchg test add or bound cmc xor fs out incl (bad) mov mov pop push xchg (bad) mov pusha jbe xchg adc leave mov lock loope xorb dec cltd pop (bad) mov rcrl pop sarb test jo lret push out psraw shld test add repz xor jne dec pop (bad) clc ds and addr16 mov pop fsubrs xchg stc mov lds scas xor push xlat cmp xchg xor into adc rcrl or (bad) arpl adc lods cli adc stos pushf or mov aas or fstps push inc push arpl push xchg xchg aad icebp aas jbe sbb adc movsb clc insb scas cmp sub pop fdivl (bad) mov iret inc enter and inc sub stc out mov mov add add call and push stc mov pop xchg push neg mov push fwait and or sbb adc xchg xchg ret loope inc inc movsb cmp sbb aaa enter adc inc test cmc xor xchg shld rcrb (bad) test push and jb (bad) leave xchg loopne ljmp inc repnz cmp fdivl xor add cltd ret cltd jp add test jbe (bad) cmp mov bswap xor push adc mov adc enter leave sub mov xor xor es (bad) out out cmp jb push dec movsb rcrb lock push mov test loopne xchg clc call scas dec loopne (bad) divl in xor pop xor ss and pusha push xchg xchg sbb cmp mov pop in sarl or inc dec push dec lods rorb ljmp jno jecxz xor sbb xchg push sbb push data16 mov inc pop mov mov and (bad) or xchg js jb (bad) loopne inc mov push or rcrb loopne pop out jb push push sub pushf adc push sbb lea arpl mov xchg jle fbstp pop push inc dec repz (bad) fcompl pop cld sysret xchg jle outsb cmpsb inc lret addr16 sbb pop cmp rcrb xchg test sarb lret aam (bad) jbe and mov or or popf jb out push and dec sbb lret xchg and ret mov out out jae mov and xor push push pushf and pop sbb add lock push adc or in clc push in push lods pop stos xor xor inc jnp sahf jnp push push pop (bad) sub push mov fisttp lods ret sbb lods clc sbb (bad) cmp icebp cmp xchg or sub or rorl cmp aaa dec repnz jl icebp jp sbb sbb inc (bad) ss mov or push fwait sbb ret gs jo mov cmp int imul jb je roll mov iret shld and scas loope and jno mov jno jmp mov mov ds ss xchg jnp push icebp mov jo das imul xlat paddsb inc mov repz adc add jg sbb (bad) or inc ja lret arpl push cmpl sbb mov xor pop pop mov xchg jo sbb ds mov addl daa ljmp int3 cltd stos daa xchg inc out push xchg xchg push inc sub rclb ret and in adc shrl and faddp xor mov icebp icebp iret mov sbb cmp movl mov and not and inc sbb divl (bad) sbb jl out sub out xor movsb jnp mov mov inc in xor mov mov pop adc pop mov and stos out out cmp jg pop fwait loope xor mov not adc mov add inc test jp fstpl jp testl sbb jge ljmp adc ret sub pushf iret popf faddl leave addr16 addr16 jae popf jb daa xor pusha (bad) or xchg jl jge mov sarl out jae or sbb jnp dec add daa loopne not and mov and push (bad) and cmp mov not push aas add inc and not and jle lahf ret loopne mov xor lret mov xchg push cmp lds inc not xor sahf and aaa push sbb mov cmp mov lret push mov add xchg and divl cmp and popf fdivrl inc fstps inc jmp fisttpll shlb xchg jbe adc mov and out inc ljmp cltd fwait mov xor sbb ljmp divl and out xor or fdivl add cld mov and js jo cltd test loope cltd pop xor (bad) jb sbb or pop mov inc gs fnstsw inc and mov sub add xor fsubrs jno and dec adc pop xor xchg stos hlt cmpsl sub jae fsub ljmp das sbb jno lock cmp fisub and xor cmpl push sbb (bad) test cmp cmp and or mov fmull dec negb push mov sbb daa or mov mov pop sahf add xchg xor sbb pop add lds ret jae mov pop mov cmp idivl pop fnstcw jne lds adc pushf sub mov pop jmp test xor jb add mov mov aas lock mov mov fldl inc repz mov addl push out not mov and xor cmp jecxz (bad) jne std out (bad) push movd add fmuls and movlhps jg mov sbb add inc sub and dec mov imul pushf icebp add jne xor movsb push or movhps jo aas jmp jmp xchg push mov adc push ja mov lods test mov add and movsb fwait loop sub mov jns sub xor mov subl out mov and cmp cmp jo lods mull mov cmp add fistpll clc outsl or (bad) decl pop cs test mov cmp jb push add jg xor testb je movzwl ss (bad) fimul adc je movzbl mov cwtl and es pop push lea movb adc sti aaa push call movsb sbb mov sub adc movq pxor add xor lea outsl mov mov lods and fidiv pushf and cmp and mov in or and je mov into cltd jo ret cmp mov test xchg jne ret int3 loopne adc adc or dec pusha or or adc orl mov push inc call sub cmpsb lahf mov pop jle fwait add mov decb icebp lea daa push rorb test test adc and fstl in lock jle pop cwtl (bad) decl or pop adc sbb mov inc sbb sbb std jb pop add mov jnp mov mov mov xor mov enter xor mov xor dec les fcompl xor or cmp outsb test inc inc daa les mov mov adc pop mov mov mov mov mov adc dec pop cmp adc dec loopne mov mov xchg orl push and int3 adcb or or sub inc cmp outsb jl xor mov mov mov pushf and mov aas mov rcrb arpl xchg sbb sbb mov sahf mov mov orb mov loopne,pt cmp xchg loopne,pt sbb pop jl mov mov push mov mov mov pop in mov add mov xor sahf xor les fmull insb and insb pop or dec mov mov lea cmp or daa (bad) jbe cmpsb pop jns mov mov ja add xorb xor xor mov mov xor add scas jo push (bad) dec sbb js divl mov jl pop xor dec inc add cli mov adc incl ja nopl push jb negl xor sub es pusha int3 jge ljmp cld or jge incb dec or out ret cmc xchg xchg sbb jo icebp jo sbb js xor xchg movsl das ja (bad) pusha add xchg sahf xor out nop orl rolb insb pushl inc adc and xor arpl divl (bad) in or push inc inc pop push ljmp aas push ljmp add sbb cli hlt lock data16 pop push sub (bad) xor xor in adc mov add test push and adc ret jne lods aas mov push jl lea mov add mov mov test dec ret mov in cld jae push mov mov sub (bad) mov mov shld ret add enter adc inc lahf cmp xor aad push pop aaa sbb es loope xor lahf jae and imul int3 ret push jl mov inc and loopne sub add inc and pop or xor pop jl ss sub mov and and push and sbb faddl daa xor add sahf xor mov mov mov push jg shrd push out mov outsb les rcrl ljmp sbb and adc mov fstps or icebp mov and mov aas mov jbe or mov lock cmp mov and int3 push and out adc mov xchg movsl je js pop out mov inc js push and jnp (bad) (bad) lock and dec divb cmp cmp sahf cmp aas push test loope push aas pop lret and add dec loopne lcall add and lahf push mov and call pop mov jmp lds mov push sub negl sub dec lret jmp push xor push add xorb cmp pop sbb sbb call xchg pop shrd push cmp aas lret xor cmp dec cmp ljmp cmp mov sub mov and scas inc lret adc jne andb inc aam pop inc inc dec add and stos pushf mov cmpsb xchg push mov popa dec repz pop and dec cmpsb add call testl mov pushf call xlat std mov shld dec add inc and add jb cmp push out xchg cmp inc lcall mov shrd shrd or push fmuls inc pop and loopne cmp pop stc test cmp xchg mov mov cs fwait outsl or sbb shrd or mov roll sbb push xor push (bad) (bad) out push mov jg ds lods fadds xlat adc dec pop sub add sub xor sub sbb lock test xor mov xor (bad) xor mov add shld shld add gs or sarb mov xor jno popf xchg cmp inc and mov shld mov aad push fimull jmp push sahf mov test mov in sbb add loopne inc sbb mov adc loopne and mov pop cmp jmp shrl test movsb out or adc and (bad) jne fmull roll mov push xor or paddsb dec xor sahf mov cli daa inc xchg lahf nop ljmp pusha adc jb mov inc loopne push inc pmaxsw fild jl or (bad) not and mov mov xchg pop and js int or jle inc xor iret cmpsb xchg std and inc pushl divl (bad) and xor rolb push jo pop cmpl inc dec divl sub mov lret or cmpb addb loop into je aam aas fidivr fimul fstl out mov xor icebp inc das (bad) jb mov idiv aas or rorl not and mov mov mov xor aas jb xchg xlat xor shrb aam and not xor mov and jle push adc mov and mov outsb sub pop adc shlb rclb incl (bad) mov not xor decl and xchg js jg rorl adc jge adc scas (bad) pop (bad) not pushf push and mov mov icebp fisttp push and xor mov mov inc xor rcrb xor mov add or and and idivl mov jns cmp pop xor pusha xor jp mov mov pop cld inc and add aad ficoml loope push out sub not xor divl je pusha and les mov pop (bad) cmpsb fs sub cmp push cs lahf cmp into mov pop mov inc clc mov xchg inc xor lahf jle insl sbb or insl dec out sbb test movsb ret out push cld mov mov xor testl inc test loopne ljmp call cmp push jb,pn xor std adc dec mov sub mov aad clc and lret sbb (bad) xor push cwtl mov xchg pop mov fwait test fisub outsl add and xor sbb or push pusha mov lods sbb pop not not sub xchg dec sti xor xchg and sbb mov xor not push pop rorl mov and cmp andb inc and mov mov and inc mov adc xlat sbb adc mov adc ret pop pop divl roll mov inc cmp inc pop mov push (bad) jo and or push (bad) dec arpl aad sub lds jecxz or js fisubrl mov sbb push popa bound sub sti shr cmp std mov mov and rolb and push cmovne popa cmp cmp inc ret cmpsb ja int (bad) xor and and sbb cmp push scas and xor cltd push jmp inc fnstsw popl sub xchg xor push jp or loop lods mov push xlat fstl inc mov inc dec dec inc arpl hlt jmp adc and xor clc push xor xchg and xlat add fs sbb pop add push mov aad decl gs add ret es mov xor xor cmp fcompl mov jne inc dec daa (bad) or rcr add repnz inc sbb jle mov scas and add mov mov sti adc inc outsb push push push mov cmp cmp jle mov add andl xchg jge pop push or inc xor jo decb mov mov (bad) je xor push mov lods adc and mov in xor loope out push cmp int (bad) sti (bad) xchg pop adc outsb cmp xchg mov mov mov cmp xor and mov pushf shll mov std ljmp sbb dec inc mov push xchg ret push mov test xchg sti push add push pop mov insb mov add mov or mov cmp or push and inc dec lahf sbb sub add inc jb dec inc sbb jle mov mov je scas imul xchg jo sub push jg inc adc jg decl sbb add adc rorb pop test lea sbb dec enter shll pushf popa cwtl push mov cmp jg mov stos jg or (bad) lea in test loopne or dec add or mov (bad) and cmp xlat ror in shr test adc iret add adc cli push popl or or or or or mov xchg or or or mov leave or pusha cmpsl dec or or mov add jp mov xor or inc rorl or push mov in test dec add or push rorl or or or or cmp add jnp jnp mov xor add add or mov loopne or add or add or or or pop add or loop adc (bad) lcall and add add je fild adc movq movdqu cmp pxor test mov xchg jbe sbb mov das push or sbb fisttpll stos mov sti add bound pop lods cltd addl cltd in test mov cmp jne enter xor cmp xor dec sub dec xor sub test popa je push adc aas sub int mov sub sti pop push bound lods and das popa into lcall data16 scas cmp sub sub out sbb stos inc ja in mov test cmp sub pushf sub out fwait push sti or xchg adc sub aad xchg adc sti or mov inc mov lods out lods out inc (bad) dec adc mov es cwtl jae mov adc cmp and adc cmp je jl inc icebp ret shufps (bad) cli xor add xchg push sbb jno loopne sar mov jne ret test je add ret inc lahf aaa sbb clc push add and roll cltd daa push xchg cmp ja daa inc fadds inc sub push loope test mov jnp dec in mov pop out inc cmp and pop enter (bad) push inc ja adc xchg jb push daa mov fiadd jbe aaa test outsl fs popa jb mov push fmul sbb nop xor cmpsl mov aaa or adc test mov divl out jbe jbe inc pushf stos jo mov jnp adcb sti in stos clc push mov (bad) out cmc mov imul or push cmp dec and cmpb xchg inc outsb cmp push mov aaa cli push mov pushf and sbbb jae or movsb sti xor add ret pop mov ja scas xchg sbb sbb cmp add rcrb jbe jbe rcl faddl push in mov scas cmpsl jp add (bad) popa xchg xor dec popa inc push inc jl xor loopne mov cltd cmp sub jae sarb outsl add cmpb adc adc call out mov xor add pushf push mov dec les popf sbb (bad) cmp aad cmp sbb xchg xor sbb xor jnp inc mov xorl (bad) je add jp mov inc xor roll push mov fmull push (bad) mov xor gs ja adc xchg aam ss mov xor xor push inc enter push ja gs push rorb ret pop mov xchg lahf or negl xor push inc jp dec and lock test loope,pt pop mov pop dec xor (bad) or jno pop mov xor add (bad) setnp adc ret adc push sbb ds js dec les lret push loopne add xchg xor jmp rcrb les in xor push mov or pop jmp push cmp lret aas inc aas push xor and pushf sbb and je xchg and push sbb lock adc enter adc pop icebp (bad) mov add sbb shld mov addr16 jg dec inc adc call adc sbb js mov mov loopne inc (bad) jo or iret xor decb sub pop dec pop xor aas sbb cmp arpl inc frstor add jno mov pop arpl orl fild aaa lds push jmp xchg xor pop xchg pusha pusha add mov inc fdivrl mov shrd shrd sub sbb sbb pop xchg inc xchg add lock and les add mov pcmpeqb fbstp add (bad) rclb mov cmpl (bad) jae loop pop (bad) mull fildl mov mov mov add (bad) clc xchg popf or mov sti or and jl xchg or hlt or xchg jnp and jbe mov arpl dec xor iret roll adc xchg mov jo stos xchg movsl sbb mov mov cmp dec loope adc hlt aam (bad) jne push mov nop rolb add test clc loopne test call or or call push add mov add and pop mov das mov push or ficoml jnp and sbbl mov xchg icebp fadd sbb xchg inc or movsl fwait dec push dec loope out fstp rolb aam cld loope cmp mov fdivr dec xor jl iret cmp push or or xor lcall pop inc cmp cltd (bad) fchs cmp pop add out loope into xchg dec mov (bad) xor std adcl mov pop data16 mov adc ss or jb push sbb or aaa inc cmpsl fsts shrd push pop cmp push sbb icebp pushf ret cmp mov xchg inc sub add push negl out cltd mov movsb ret sbb mov shrb loopne dec push sub jnp cmp push dec shlb inc lds jnp dec out sub stc dec insb sub add mov add inc push cmp mov in add fnstenv cmp add movsb movb push cmp inc hlt push cmp or (bad) adc sbb ret es sahf xor push push jmp out out push lods repz lods (bad) or cmp push roll add test xor xor and add sbb push (bad) int3 sbb push push xor cmpsb enter adc ret mov push mov jns into add fmul xchg mov mov popa es pushf daa fadd add cs sbb mov into out sti dec push mov and js pop and mov mov xor test loope test dec pop sahf jae out cmp dec inc mov jo jo repz repz cmp out add add cmp add sbb lock fdivr aaa dec je push decb shld call adc in ja das fdivrl jl inc push mov cmp clc pusha dec fs dec cwtl data16 fs or outsl mov push int das push into push mov pop add fwait mov and pop dec adc fucom (bad) mov inc push push in mov inc cmpsb dec loopne faddl xor scas enter inc and push cmpl lcall shld adc movsb (bad) xchg out cld push (bad) mov push ja es add xor icebp sbb mov shld jecxz ss jge jnp arpl mov adc cli or sbb ja and not and xor mov push mov addr16 mov cmp sub addl iret cmc lret pop dec js mov and and sbb rcrb mov push (bad) and mov mov xor aad icebp fsubs fwait shll mov mov arpl jmp or xor out nop jecxz and imul sub inc cmp adc ficom and sbb adc dec sarl lods sahf leave popf cmp dec xchg push cmp hlt neg sbb xor testl inc int call outsb lret fstpl or pop sub sub sbb dec xchg shll imul mov ret cmp rorl outsl push icebp mov gs dec and sbb and adc lock out aas testl jg dec xlat pushf jns shlb fild mov mov inc lods loope cmp imul out movsb iret aad mov inc or sbb add jno scas dec and imull fadd inc fsub add ret cmp jecxz test inc mov cmp jmp arpl or movsb xor lcall xor repnz cmpsb andb push rcrl and iret lds mov jo (bad) aam js inc sbbl popf and cwtl or ss sbb inc cmp loope (bad) mov adc mov mov dec icebp fmull negl inc dec inc dec mov insb ret sti adc not inc addr16 call sbb mov xchg mov fild and insl sub dec dec mull xor and xchg pop imul ljmp push loop mov loope xchg int3 sbb xor jo mov (bad) iret sbb cwtl mov notl stos xchg cmp fiaddl testl fdivs movsl xor inc push ret scas jle and cld dec lret inc in nop mov inc xchg (bad) lock push loopne popf jo inc bound pop push pop test add test jno mull mov (bad) fsubrs mov icebp (bad) cltd fimul testl gs pop call lods mov js cmp push js add iret je insb icebp test popf lods jb xor jp test mov pop outsl mov subb jg orb push or shll clc mov sub add add lret push inc adc sub sbb test loopne mov out dec mov xchg and lret sbb xor sub push adcb lea cmc mov sub push or add das add inc fstl mov xor mov mov and mov jae dec push xor pop jge out icebp push mov add js push add push cwtl ret (bad) hlt add add add mov dec mov out jmp sub add cmp pop jne add and orl xor inc cwtl xor add mov or push daa or (bad) (bad) (bad) cmpsb mov call mov sbb jo movb add sub mov ljmp sub call orb mov adc movdqa adc lock add popf test cmp inc add or sbb mov test cmp dec add or jl adc test jae stc add mov inc push sbb xor test or out loopne stc add pusha test add mov cmp and inc mov loop inc cmp and sbb push sub adc mov mov pushf and cmp mov ja stc or fiaddl movsb loope movsb and mov mov stc or lods ret mov sbbl wrmsr test (bad) cmp push mov out pop int3 push sub je sbb xchg mov lock adc loopne cmp je mov mov mov mov mov lods call jle push sbb mov es add hlt xchg (bad) xor push xchg jecxz jmp inc and es and add add adc dec out mov (bad) ljmp cmpsb add pop xor mov dec inc scas icebp cmc add mov das sub xor (bad) (bad) jg mov xor xor pop and push adc or pop adc push (bad) (bad) mov push and repnz add xor adc jo repnz std (bad) decl dec add push xor mov loop and or movzbl mov in test sbb out movzbl mov sbb mov add or mov adc mov mov fwait add sbb out add shr xor out jg cmp out adc je adc (bad) or xorl call xor (bad) pop adc or jmp shl (bad) or sti (bad) fld in adc out xor sub aaa push sbb out shr add mov or xor mov fistpll jmp shr or cltd or xor xor mov mov mul (bad) jmp jmp imul fldenv rorl mov aas add lahf sti ja mov mov mov sarb mov (bad) decl shl or mov or xor xor mov mov pop adc sti xorl or fstpt mov loope mov and (bad) jne hlt jecxz pusha push jns sub xlat sbb cmp add das or roll add adc ret xchg xchg insb and and mov out dec or cmp shr or xlat (bad) mov jne add je loopne pop add std lret in or cmp ljmp lock and ds movd mov mov jno daa outsl pop into mov fdivl out icebp jno mov imul jne jae mov (bad) lock dec or and sarb leave sub or or sub xor jb adc push outsb adc add push (bad) jb adc mov lret and xor xchg test cmp lret jb sbb push inc in cmpsb and add in jns (bad) xor jle mov xor jl and dec sub js (bad) and in mov xor jno mov cli aam lods lret hlt xor sbb ret jge jbe push cmp in inc and aas test in mov shl xchg pop pop scas scas in mov das and and ret inc sbb dec push sub jbe add mov jns test lods pop cmp pushf and or popa push imul ds lock jmp and pop or jb push lods and in inc fildl pop inc or (bad) xor cld jle mov xlat xor sub lret xor add pop add or outsb fisubl mov or pop or jo insb and xor sbb adc or add aaa cmp adc lds sbb inc or ss cmp (bad) cmp and jo dec and and jo fadd dec pop in cmp cs mov aas lret daa repz ret leave push sub dec sub or xor fildll (bad) popa sub add (bad) xchg test fsub es scas das adc mov mov xchg lods stos adc adc and or insl js cmp cmp leave sbb jecxz das loope sbb cmp sarl xchg adc movsb jo dec xor xchg je add jb inc bound rol inc and jl fistpll imul mov cmp add iret mov mov into pop push and add push add or mov cmp fsts (bad) xor std jge fucomp cmpsl jno (bad) mov or xor add mov mov jg call clc jmp or add or xor xor dec inc lcall popf xor xchg mov mov shr or shl mov into xor sub les fild (bad) inc xlat stos loopne sbb out or fisttpll xor xor mov xor jnp (bad) jne out push shll notl div (bad) jmp lret xor mov xor xor or xor iret xor mov xor sub icebp ss pushl adc notl notl notl xor inc ljmp add notl cs adc add xor mov adc clc pop or inc sbb out adc adc push and pop loopne xchg jecxz xor aaa cmp int cmpsb or xchg and pop cs scas and xor cwtl fs push fsubs sub inc repz pop and scas gs adc fs pop add xchg mov fs mov jmp subl jle mov adc push mov sahf insl and pusha cmp inc mov inc pop push push jo or pop add adc jle outsl dec add sbb lods adc (bad) adcl jb sub dec sbb sbb mov adc fdivrl add xchg roll sahf and jb jmp in imulb in push or mov mov xor cwtl adc mov dec inc insb cmp cmp aaa pusha negl test and ss push inc outsb (bad) jo popa xor rcrl xor sbb add mov enter ds test test sbb mov push mov lods or inc test jns inc cmp pop mov mov mov pop pop sub xchg in pusha int3 jo mul jp popa rorl test dec ret jecxz push insl xor in enter pushl mov das gs or test sbb fsubp call loopne mov add jo add dec push daa inc pusha add shr dec adc adc gs adc adc mov adc xchg xchg mov push add sbb pop nop adc pusha xor (bad) pop popa in repz adcl and ror jno test inc nop pop pop mov cwtl dec shl or and and js lods popa xchg mov or (bad) adc orl or cltd lcall pusha dec divb adc or xchg or inc std decl cmp jle push sub and les cli aas js ret mov lea (bad) mov add idivl mov add sub push cmc decl adc inc and mov and sbb push sbb inc and mov mov or cs mov mov sbb and or or jnp mov mov mov imul mov movd xor pop jl xor dec and inc and punpckldq movdqu pop (bad) pop aaa mov (bad) rcrl and push data16 out ret sbb rclb push push ret repz movaps pop jne fstp and sub add int3 inc outsb jae mov insl (bad) add scas lret outsb inc and pop int add idiv in cmp test adc test push (bad) (bad) sub (bad) loop adc popf cmp xchg and xlat je adc fs outsb insb add insb movsl daa jbe,pn mov mov shll out (bad) cmp cld movaps call jg jno push mov call pop adc in mov call mov add add pop mull sahf push pop add jmp fcompl add jae repnz pop push call iret mov call out es or mov cmp jno lea xor call ljmp mov jp add dec ss push jnp pop add aaa das pusha mov push loope call mov jae pop pop das push pop fwait jl imul in pop pop xlat das ret jle add pop mov sub imul cmpl mov scas pop sarb and xor xor icebp dec xor mov ss adc cmp je inc or dec or push sbb gs push xor xchg (bad) stos lods xor push loope aam dec or aas imul and dec test mov xor arpl mov addr16 aaa adc xor xor add push pop mov mul dec test xchg add push out dec and mov cmp push or jne aas insb popf jo ljmp pop xor xor xor add jmp xor sbb cld scas andl mov and push mov mov push and dec cmc xor xor ljmp cmp inc inc add cmp add sbb cmc incl add and jne add psubb addl movups mov xlat iret std mull adc or test push mov add xor (bad) xor iret dec or stos mov xlat xor out fild add out add add fmull dec or inc shrl ret sbb pushf cli cmp inc push aas test cmp psrlw roll jle mov addl lea pop lods sbb mov andps lea sub fcomip ja cwtl mov and je or roll mov mov insb or rcr xchg repnz inc loop cmpsb sub sub shl and add fdivr sub shl xor cmp aas adc pop dec add pop xchg aam test jo incb addl add lret adc jle mov sbb jmp adc push mov test sbb adc (bad) and shr mov (bad) jne sbb jne aaa add mov or pusha or sbb jo pop ret ret cwtl mov xor rcrb pushf mov adc jmp pusha mov xor and ret jge and jle pop scas ljmp pushf sub pop and orl inc outsl xor js sbb adc dec test ja into add inc push inc jge inc inc orl add pop xor adc cmp pop call (bad) mov xor jbe mov xor in out xchg incl call sub out adc add (bad) or and popl adc or and call xor jecxz pop sbb push sbb ret adc outsl dec mov ret mov adc push sbb or pop ss jo movd movsl xor push add roll xor cmp push jg sub mov mov lea xchg and es push loopne test jne add out cwtl hlt orb mov sbb clc aas pavgb inc (bad) (bad) cmpsb aas mov daa sub inc inc add cli xor and je addl adc xor cli add cli add sbb test inc lcall movb add push cmp jae iret repz movb add add push pop push or clc jb (bad) inc movsb mov xchg jle aam loopne dec inc or dec neg cld add (bad) mov lea pop add cmp cmovle add mov fisttpll and adc jge push (bad) (bad) adc inc lret adc ret sarl rorl xchg ficom cwtl test je lea aas mov add test (bad) incb lea movb add jmp fadds add dec add fldcw bound incb xchg std cs lea daa push push incb lea daa call cmp or xchg jae jb pushl cmp lea and decb or decb inc adc push or jg cmp lea test dec push ret and stos or sbb icebp lea lea mov add les push jbe (bad) jg adc je cmp movaps je mov xor add je mov mov neg outsl je repz adc dec outsl cmp jo jo sbb push push pusha pop dec xchg jp adc cs test (bad) aaa push cs jae or (bad) jne add sub pop mov adc sub sub push lea incl jne jmp mov jmp push out sahf push jne movb xlat cld adc mov add or jmp inc bound mov loopne sbb or mov rcll loopne jo add icebp mov or and data16 scas ljmp fcomi or aam cmp push neg in mov (bad) sbb or frstpm(287 or or aad mov mov pop mov push jge cld mov loope adc divl sarl frstor sbb adc fnop or xlat xchg jmp addr16 sbb inc fsubs fnsave aad out mov punpckhbw jmp scas mov (bad) sub clflush sbb punpcklbw leave jne dec (bad) out leave inc in and mov xor fisubl popa das popa fbstp xor punpckhwd sbb divl mov pslld dec sub sbb lret sbbl jne (bad) lahf sbb mov xor int cmpsl fstpt dec (bad) (bad) or lret movsb pop jnp add pop mov loopne repnz xchg popa pop imul adc cmp jb (bad) ja fcomps lods and push dec outsl fldl aam cmp (bad) dec cmp rcll gs ss gs icebp sbb in test cld outsb js cmc mov add aas push into mov nop inc sbb inc adc xchg mov out add fild xor out es clc daa push mov mov stos ret in bound dec popa faddl (bad) jg adc and cmp shr push inc sub les pop sbb push into inc adc add imulb mov adc pop iret add mov mov data16 mov movsl sub (bad) (bad) lcall pop mov mov mov mov xor cmp and or xor xor mov pop sbb mov fwait (bad) mov mov shrb out jmp repnz dec mov lahf pushf adc ljmp mov mov pop mov xchg rorl mov mov xchg xchg insb or jle sbb and inc subps sarb mov jne pusha mov lods sahf fnsave std fstl leave xor push sbb inc mov jo je jnp pop je pop js pop sbb les sbb or ljmp sub lcall add popf notl call pop inc icebp pop dec push out mov mov and pop cmp sub push xor fnstcw sbb pop push mov gs mov mov movzbl (bad) mov icebp mov pusha push sbb adc adc push (bad) mov pushf push sbb or inc cmc (bad) movzbl sub mov sti fdivr mov cs pop neg pop jl hlt mov pop and xor mull je dec and xor pop and pop and (bad) jne je decb and and cmc pop and and sub pusha and xchg sub sub dec pop and push sub mov sub mov mov dec lea xchg test lea xor test jae sub pushl rol adc lret mov mov cltd mov std repnz add (bad) fiaddl cmp xchg jmp stc std mov out les std ror add repnz ret (bad) xor rol lret cmp xchg nop test sti call (bad) xor rol add xor orl mov xorl je jl pop xchg enter inc cltd push cwtl lods aad fsubrp lahf fistpl xor sahf ja jl xor mov jnp flds movb dec call js icebp xor rol cli xchg add enter bound (bad) xor stc cmp in outsb (bad) inc out lret in xchg pushf jno mov jl test pop inc lahf jmp js mov mov mov or jo test (bad) xorb sub and icebp data16 dec jnp (bad) lock xor jbe xchg push iret addr16 outsb js push insb xor sbb fildl add insb idivl add mov jnp addps lea xor mov neg addr16 aam subl test or mov mov pop sub repnz clc add daa pusha jbe mov xor cli add fmull xor ds fist ja adc pop sub mov popa mov mov add ret xor adc mov pop mov mov pushf jno clc lea lock lock ror add dec loope xchg pop xor fistp xchg clc xor pop pop mov push and xor pop rorl push mov lds adc gs out clc or (bad) xor inc lea cmp cmpsl imul push data16 sbb or std cmp jne mov (bad) sti iret adc (bad) movd into jae movsb or and or sub stos jb pusha or notl fimul ljmp xlat add adc or mov rorl inc pop mov out js imul inc mov movd pop jle jg sbb aaa cmp das mov mov xor outsl sub add lds inc das sbb out dec insb (bad) xor jns loopne mov in inc xor jle test jne xor dec sbb inc or pop adc test (bad) pop push mov sbb adc adc push jo add xor xor sbb jg adc xor popf xor xor cmp dec push mov or (bad) pop cld xor xor xor inc push or jo fwait loop ja or pop add js adc js add fs xor sub mov movsb dec imul pushf bound scas add je mov add inc lea add movl lds bound fstpl adc dec adc adc pop add pop push mov cmp rolb add or call cmp add out mov mov test fwait loopne mov test mov je shrd mov sbbb out jb fs lea adc add aaa push dec sub add sbb call mov mov repz add cli add insb stos loopne adc or sub sbb hlt out stos push sbb cmp or xchg inc push (bad) loopne cld xor mov aam adcl jnp sar mov and pop (bad) sub and lds (bad) repnz jmp decb (bad) cmp decl lret cmc push sbb jns (bad) (bad) and mov repz lds and mov lcall push add mov or jne movl (bad) dec into sbb sub lods lock mov sub clc add (bad) push add add mov mov lcall add cld lea fdivr fistp in sub add sub and xor sub lcall dec lcall shr and mov mov mov test je cmp je cmp je (bad) (bad) incl stc add stc add sub cmp je mov mov decl add rolb add cmpl lock aas mov cmp add dec add add cwtl cmpsb jmp unpcklps ret (bad) out ss sbb sbb shlb lock jmp test je or add mov mov jne push (bad) outsb or lea mov dec adc add mov fiaddl pop scas pushf daa fwait stos in xchg lock scas inc (bad) jg adc pop fmuls cmp std out (bad) call xor mov mov add setb mov pop das cmp sbb mov adc ljmp or xor mov cmp and or mov pop sub adc add sub add cmp sti mov add test je mov mov inc inc and and add enter mov popa inc jp stc add cmpl cld mov dec and call xor cmp std pop or mov sar xchg es adc ljmp iret add cmp jbe mov out incl adc add lea jmp nop push (bad) (bad) fadds jns cld mov lea scas or incl add sub and cmp push cmp cli lea mov shr mov and mov inc rclb je cmp je push (bad) (bad) incl cmp je cmp je cmp je cmp adc ffreep fdivs insl mov pop mov add mov (bad) fldcw insb jae xor je lcall or adc cmpsb imul (bad) push cmpsb sbb add inc jb mov mov shr mov mov (bad) (bad) (bad) inc ljmp mov mov mov movzbl mov movzwl mov mov (bad) (bad) incl insl push mov mov movzbl mov movzwl mov mov mov mov (bad) (bad) decl mov movzbl mov movzwl mov mov mov mov mov jne outsl fimul mov adc adc jno aaa lock fimul mov push mov mov mov jmp fldl dec sbb push sbb sbb out sbb mov push mov mov mov mov mov add movl add lds js push sub ja ret loope push jl or incb decl or idiv incl cmp inc pop in sbb sbb add scas sub aas (bad) ja int3 es push std lods jbe lea and push and or mov das mov adc pushf add cmpb adc leave sub add fstl sbb mov adc fistp or jne out jmp mov mov jae pop dec push imul adc call and sbb mov adc xorl push mov mov mov test mov (bad) out loopne test int mov pop cld jl (bad) jmp jp pushl rolb add inc and addl and sbb push jb out dec or push sub enter push and jno cmc cs pop (bad) loope and mov pop push testl sub mov push jo dec adc cltd and sbb add mov sbb jmp dec (bad) jb add pop scas push out and pusha push and arpl jb popa cmp dec sbb enter sbb sbb pop and es movsb sub cmp adc xchg dec sbb and inc adc sub adcl add out lahf nop inc pop outsb lahf es sbb les and adc cli and ficoml jnp dec xchg or adc dec adc adc mov or (bad) negb shld or cmp add xor icebp pop jo sub jp sbb and sub and roll ja cmp les add je and in and mov mov sub lock add fcompl sub fsub sbb jnp pop adc add and inc adc call call or je addl aaa adc jg adc lcall cmp dec and testb add and cmp add dec jne mov or jne cmpl inc je or pop push mov fidiv add push and mov mov mov sar stos cmp fs mov mov scas sti xchg mov shr in and mov and ficomp and and add lret cmp sbb test add add sub and and jae out mov loope add push shr inc scas add fnstcw cld aas popf and sbb jo sub sub repz rcl adc (bad) imul dec cld xchg mov mov sub jg out sub scas add push mov sbb incl mov mov mov sbb pop xor push or (bad) bnd or dec adc incl mov mov pop decl jnp adc push adc push sbb sbb pusha jg in sbb pop mov mov inc shll push loopne cwtl add lea mov push adc pusha je jp add (bad) lea movsb shrd cmp jae mov leave jae adc lock mov test adc lock xlat cmp mov add setb movzbl add jmp mov jecxz lods adc call cmp js loopne adc jmp movsl (bad) cmp subl inc call push cmp mov mov subl lea mov inc out add jae test (bad) (bad) mov je cmp je cmp je cmp je cmp je andl je mov (bad) stos jbe adc add aas sub out jge mov fnstcw in pop mov jae bound or mov and or and lret jb test adc inc mov sbb adc sbb orl mov cld adc lea add inc jg (bad) decl mov or (bad) (bad) jmp movzwl icebp mov mov je pop cmp dec and mov rol icebp mov adc imul and add inc xchg dec lods inc loopne (bad) lahf scas mov jae ret jg mov out adc dec and sub add mov add jo push fucom aas daa mov stos xor mov xor sarb or jecxz mov inc sbb pop or dec mov adc cmpl fstpl int ja or ja (bad) addl jb xchg add push adc stos mov push jmp pop jle,pn xor mov dec mov out and (bad) (bad) push std sbb notl or sbb jg fstpl cmp adc daa and iret and xlat je aas loope lcall pop pop les clc and movaps or add cli mov cmc xchg or mov adc xor sub and xchg pop push push or push fild and lods aam out or test add je or sbbl cmp jmp nop (bad) fisttpl (bad) lret and ljmp jecxz rsqrtps aam pop push (bad) ja jo jne xor loopne,pn add rol xchg loope jmp or les insb aad push push lret jge pop (bad) or (bad) jbe add pop or push out lcall faddl xchg or pop scas or xchg or adc test or adc movups sbb out adc mov inc mov pop or jae (bad) or in adc loop std or in adc adc sbb push mov jg or pop add adc cmp sub incl ja cmp jbe dec and (bad) daa gs movdqu shrd clc clc (bad) cmp mov mov xor or mov (bad) and incl js rolb or lock outsb cmp jmp mov ret test adc xor mov add ret lods push sub (bad) setne in movaps adc jne push dec mov cmp sub std inc cmp pop aam and and mov xor xor or je (bad) pushl aad push icebp lea movzbl mov xor add mov adc cmp push dec and xor std call ja cmp ja (bad) adc and mov or sbb call out fsubr jge lds or (bad) fwait lods sub dec iret push pop loope push add push and and orl mov push mov lret test jne pop cmp mov mov adc icebp divl jl movups sub sahf jnp sbb fsubs fmuls arpl arpl xor arpl arpl arpl (bad) mov lods or fmuls ret or test add mov test cli arpl loope sbb xsaveopt sbb lahf xchg mov es xchg shr mov mov mov dec les gs cmp jg int3 je xor or cmp in inc notl adc aaa sbb cmc movaps push je sbb popa or arpl mov jle pop iret movaps call pushf push xor fisubrl fxch sbb (bad) roll test rcr inc or cmp ja jecxz or gs popf inc and pop std mov mov mov add popf add push add adc fld mov cmp xchg pushf add (bad) add jbe (bad) or sbb mov add ss jbe aad je fcomi mov add sbb jmp push mov adc pop mov and mov call ja xchg pop jbe notb popa adc sbb xchg push cwtl mov xor or pop cmpsb xor xchg xchg cmp jae adc stc cmp cmp or push lock leave jae ss test repz xor loope popa cmp xchg cwtl jb jbe or xchg jmp arpl rorl roll cmp jb aaa adc sbb cmp jbe push mov or wrmsr push xor pop cmp ljmp rcr (bad) decl lds and (bad) decl sub jb jbe push or adc add jae les xchg adc adc ss mov adc js dec ss popa es push scas das xchg insb sbbl cwtl or stos orb sbbb cmp addl or clc fistpll or xor rorb or add inc jbe out adc sub and jmp (bad) pop addr16 nop nop inc adc rolb andb adc and add iret mov movsb sbb (bad) es shrl adc (bad) mov push mov pop jmp stos jb xchg push icebp iret push inc jp sar (bad) jmp fcmovu cmp hlt sub jge push jmp mov das std (bad) call xor pusha (bad) and mov das pop sbb xchg nop xor xor jmp or bswap imulb inc ja dec notb jmp mov shrd (bad) loop and xor cmp mov jae sti xor test jne xchg out add sti pop mov shrl or mov sbbb enter jbe pop mov movsb and fisub and inc das idivb movzbl mov jmp outsl push lock (bad) movzwl mov pop xchg jge dec pop lcall das sub fistpll ret loopne fcos and decl and cmp jae lock push and incb pusha (bad) xor (bad) incb out orl add fwait sub add mov mov mov or mov test cmp jae arpl or jnp jmp pop addr16 adc jmp inc movups cmp pop adc adc adc xor inc and (bad) jb lea cmp add jmp ds enter bound xor mov dec cmpl loop inc cmc ja inc lea mov lret in push xchg dec or push add pop and cmpsb (bad) jo pop je nop sbbl mov js gs adc jl jge adc aam pop adc out mov sub in push mov pop or dec add or push mov pop or lret sarl adc aas add cli dec and and jo inc rorl push inc add rcl pop dec ljmp cmp or std insb in and inc add xchg mov in daa pusha and movsb jbe mov sub push ret (bad) dec add es pop and add push cltd cmp es jae adc movsb dec inc and es or mov and fcom sbb cmp movsb dec mov jg inc pusha cmp test add mov call aas shlb mov sbb push jo xor sbb je and sub je mov inc inc and cmp adc out push xor or adc jp adc sahf pop or or push shll or rcrl or push or jnp dec or mov or test xchg call mov jge xchg jo adc ret sahf and rorb inc and jne cmp sbb ret and jb xchg xor adc jb lcall out jl loopne (bad) xor dec arpl push dec aam fsubs adc or loopne dec pushf das xor je out enter dec shld add add cmp addr16 jb pop xchg and add sbb add ss inc addb fs ss ss fisttp adc ss add inc shll pop enter add sbb jb inc addb fadds cmp inc addb add cmp cmp orb jo jb jb orb sbb cmpl or sbb ret add lea nop test cwtl xor fs negb and jb xor cmpsb mov pop dec jb insl loop dec inc loop xor jo adc add or jb add jp lret fnstenv add and cmp ja xor xlat pop xchg adc inc fs shlb sbb or inc and sahf rorb dec (bad) aas sub xchg push dec dec cmp test cmp inc jne xchg ss pop inc sbb addb xchg lahf cmp pusha (bad) sbb inc adcb lahf cltd sub pusha cmp add and cmp lahf xor ss mov add popa out fisttpll jns push jae ss xor inc adcb cmp cmp pusha cmp xor xchg jl mov dec cmp mov cmp and fcomps sbb or insl lret ficomp jbe dec sbb push jb cmovo or lahf fstl je lods pxor inc sub mov insl xor or jg stos inc mov rorl pop inc pop outsb jo push hlt dec nop lahf xor or pop jbe mov cmp sbb dec (bad) mov dec mov cmpl and sbb mov fisub (bad) cmpsb xchg xor and inc test inc shrd (bad) outsb inc test movsb (bad) jecxz (bad) ja jo or inc lea ljmp int3 (bad) decl mov es add jmp cmp xchg (bad) sti push and in push and jmp pop jne fsin lret lock icebp inc lds (bad) aas cmp cmc (bad) (bad) jmp test test push xor pmullw cwtl dec nopl cmc push xchg das aas add sbb mov movsl das lahf out mov mov adc mov mov dec es mov cmp jbe lods jmp sub mov outsl sub add sbbl int3 push adc scas (bad) lods xor insl xor adc das fnstsw cmp push pop jmp loopne ljmp test ret add mov testb jmp push or pcmpeqw add sbb comiss add out jnp mov xor adc out lods mov cmp cltd and out adc pusha adc out sbb adc pusha out sbb or leave out pop out in and out push and (bad) ljmp or push push mov stos in (bad) jmp xchg mov or fwait adc push fs scas pop jb adc mov mov gs ss xchg push lcall rclb jb stos dec or cmp ds (bad) cmp cmp dec push (bad) cmp mov or rcll cmc (bad) cmpsb add dec and sbb sub out push add rcrl lea inc mov (bad) mov add lea sub call ljmp in mov mov shr in pusha decl mov sbb inc mov mov inc dec dec mov aaa xorl dec dec dec mov nop xchg adc or dec repnz mov push push push jbe dec ficom inc sbb test pop mov sub inc sbb push fstpl mov pop add inc and xor pop mov sub aas pushf mov mov dec je mov push sub add cmp jbe and mov cmp xor mov jmp sub jmp sbb jbe xlat inc and pop sbb mov mov mov cmp call lea and mov push iret sub add sub adc rorl sbb dec push cltd inc and lea mov inc aaa cmc (bad) push jae rorb cmpl lcall xor daa sbb add or mov pusha mov inc pop adc mov adc xorb aas mov lcall add or or cmpsb imul pusha lcall stos ret jb push aas shll mov push xor xor mov ja das sti sti ret cli add mov mov inc cmpsl xchg (bad) cmp cmp lock pop mov mov mov out out lahf dec and jno add ret lret dec mov outsl cmp or sbb movl dec mov sub orb popa pop je icebp scas (bad) scas out or call scas xchg js (bad) mov and pop and inc aam sub and jecxz (bad) fildll sub mov xor inc test or ja rcr and inc mov add mov movzwl mov dec call mov mov movzbl (bad) mov movzwl test dec add jne mov mov mov movzwl mov and or dec or stos mov jno aad add mov pop inc out fmuls jno out stos add inc adc mov mov cld add mov mov ja inc adc addr16 adc aas mov das mov mov mov mov mov dec pop jno or push mov jno out mov sbb sbb or push sbb mov jno fstl orl or jne mov lgs aam and sub push or das rcll test adc clc adc and stos and loope je popf pop cltd jge add btc call ret sub mov je inc mov iret pop es cs xchg sahf out call mov add es lds out icebp clc jmp add cmpsb and loopne xchg (bad) jmp mov pop sub sbb fs fildl or jo rol jne orl add xor mov jmp xchg add orl add scas dec jbe xchg ret leave sub push movhps cmp testl jmp jg adc xor rolb scas xlat sbb xor cmp jae sti idiv idiv (bad) decl mov test mov je add mov jmp inc bound ffreep lock fild mov sbb loope popf dec mov xor and cmp add dec mov pop adc adc les dec inc mov dec mov dec les jnp xchg fist push faddl xor push adc mov inc adc mov test add fistpll es cmp jmp and or sbbl hlt mov xor xor mov ss push mov and dec (bad) adc mov (bad) ja rorb and (bad) cmp mov ja js add xchg ja jl or lea pxor (bad) sub add cmp leave or adc xchg mov add mov pop ret adc lret mov push add sbb or sbb mov daa out (bad) cmp cmp fsubs std or or mov jnp out pusha or or mov jnp mov or data16 or cwtl orl jg fimul je (bad) mov loope sbb scas bound hlt sbb ret incl std jbe pop and mov and test sbb fstpl fimull into xor or mov repnz xor fisttp mov or fs or pushf sub sub hlt mov bound out mov xor sub cmp sub rorl iret adc push clc sbb push shlb jg movl sub fs mov mov xor xor mov test je pop push enter sti into xor dec or push jl inc cli mov adc xchg jb cmp add insl ljmp aaa inc and scas test fs cmp jne stos xor xor clc pop push add out ss add jbe pop jae popa out mov and push add insl cmp jnp fsubl inc push ss insl or adc cwtl mov add sbb add loope lds push and mov xor rclb (bad) test in test jns dec jns pop mov and push xor cmp jge ret sub cmp xor or adc notl cmp xor subl cwtl or jno adcl mov ja add jae,pt fwait mov pop jb cmp jae jbe sbb lcall add movzbl xor or dec sbb and test and cmp test insb and sbb rcll lock jg or sar pop add adc and adc sub add sahf push or icebp mov or pop cltd sbb or and jno adc adc inc or popa or mov push cmp std sbb or fadds push or pop (bad) sbb and andl or or pusha pop (bad) mov ja fadds jne loopne jbe and bound into push cli cmpsb and xor mov pusha and into mov push lret adc xchg ret cs mov cmp imul inc cli gs in lds test sub lds sub mov pop sub jo pushf mov pop adc (bad) or je call and loop (bad) and les loop pop nop sub inc xor es scas sbb cmp mov mov sub cs roll mov mov leave cmpsb xor clc and mov movb icebp ljmp repnz setb mov insl mov push cld lahf (bad) sbb mov mov daa inc jg shr mov ret mov shr shr ljmp push rclb and adc adc add adc fstpt add inc fcompl sub push sub test jno ss fcoml inc and inc cld movsl mov imul int3 je pop lea (bad) loope jle (bad) jo scas xor xor call sti and loopne and pop sub add cmp xor mov pop or lea add mov mov enter std mov mov in sahf test in or xor shr mov and js pushf adc mov cmpsb addb dec stos js,pt in cmp push mov push shr and test adc ret push mov xor push pop mov inc add mov and mov faddl sbb mov xchg dec into (bad) ss (bad) in ss mov mov mov into add add xor add mov mov das or test lret cmp test fldenv sbb out xchg addl push inc or or out icebp popf and ret add jb lock daa push dec cmp mov loop aam push inc int3 call clc loope add mov je sub jl add js mov mov clc dec sti add aam xchg (bad) iret lock rorl and xchg and adc inc pop or sbb add xor push lds test stos inc adc push pop or call jge popa sbb sbb std test sbb mov sub gs dec lea (bad) lret inc scas and add loopne rorl and aaa rclb fimull mov (bad) lock jg jg mov mov mov add and xorl jecxz sub push add mov mov mov cld inc jg and mov mov mov mov sarb cwtl sub or idiv ljmp pop or adc loope addr16 push or sti jg pop adc push mov aas out (bad) dec pop pop push adc mov push cmovae sbb sbb cld cmp ja pop sbb addr16 and sbb pop sbb popa adc adc dec mov (bad) incl mov sti xchg cmc (bad) fdivrs mov and inc sbb imul test push pmaxsw cmpl or pushf mov adc sub pop xorl sti lahf inc ret xchg stc (bad) decl sbbl mov insl xchg cmp insl mov mov roll pop cltd sbb leave xor adc loope inc into or cmp push or andl sub or ds ret sar (bad) incl jns dec ja inc iret xchg xor xorl sub xchg ret mov ret pop sbb xchg adc sets insl out testl and ljmp ja fcompl or mov add hlt push xor jmp pop shlb add cmp call adc inc test shrb fs xorl lea rorl or adcb xor pop xor add adc add les shrl mov add push (bad) aas es mov mov add xor and ss xor rolb andb or and add and (bad) and jge add add inc and lahf lock push rorb das mov mov and sub inc icebp scas fs mov lahf pusha decb inc inc jnp lahf rorb enter je jo adc orb jmp add sarb and jl dec mov xor sub sbb pop sbb inc and add adc add sub pop out adc push or stos inc or scas out test mov or (bad) popf or or sub mov lods or or or stos pusha scas add add mov or stos pusha scas (bad) or or push pop lock inc and dec xor mov das pop jmp (bad) test cli dec sbb sub sub jl or add out int jb sbb loop pop sub jb es aad and lods mov sbb jmp or pop rolb mov pop int3 dec and in push xchg call or pop inc lea jp loopne fimul mov cld sub inc cwtl es jl xlat test out cmp cmpsl icebp (bad) (bad) jmp rep nop (bad) repz nop and push lods (bad) and cmpsl push or inc adc arpl (bad) call mov pusha jae leave ja mov xchg xchg andl aaa das sti mov jmp nop dec push das cltd sub mov es lea stos out (bad) mov push and ja pop xor jo dec xor jmp dec and in or inc dec adc test in lcall ljmp jae mov push jg pop mov xor or pushf adc sarb dec ror lcall pop sbb pop pop or pop outsl xor cmp pop movsb sbb lods aam mov pop or leave cmp push adc add in push or xor jb arpl and or or or jbe or or jbe or or jbe or fs ja or mov cmc mov mov cmp mov jae push xor test jne pop push inc ror pusha fisttpl mov arpl sbb jmp iret cltd sbb mov jae in jmp or data16 outsl mov loop mov adc movzwl mov inc inc test aaa jmp scas jecxz pop fdivp div daa push nop mov jmp cld mov and adc inc out add pop mov (bad) mov jp sub push in push or inc add jnp add lods adc mov and xor mov jge pop jge or daa cmp push mov mov mov adc sti mov adc mov scas jae sub adc cmp and cmp mov incb or mov cmp add pop push das push cmpl adc add (bad) out mov das push inc ja or push or and sub jb,pn das lock inc pop push xchg das adc in adc stos ljmp cs lds loopne push into pop push sbb loopne adc sub lret and (bad) or adc mov lods or adc lods or in movsl or in xchg or in xchg or in xchg or inc inc jg and gs gs pop gs pop pop ds push push and sub dec or adc xchg sbb sbb lods flds mov xor push xchg and inc cld pop pop and movdqu hlt cltd daa add sub and fmull stc (bad) sub and pop stc and sbb sbb and push xchg push in sub inc mov push movsl mov adc cltd call push js sub push (bad) and or and mov fwait jae xchg jl and ss sub pop add add popa outsl ret ss fwait sbb pushf ss fwait or mov addb sub fwait jae dec ss cmp cmp rolb mov and pop cmc and fwait jns callw mov or cmp and add rcrl and leave ss lock fdivs fsts pusha test mov xchg sub adc imul and aad jb push dec lds les xchg cmp popf pushf adc and xorl vpaddsw dec lcall cld mov or and cmp or cmp mov out fmull into push addb add or ret loop orl sbb je add push add or in inc mov pop or push add pop or in inc mov pop or push add adc pop (bad) mov or xchg in dec and pusha sbb or xchg inc sub mov sub loop adc jbe loopne or xor or sub (bad) out daa mov loop cmc and xor mov jmp fisub ret inc jecxz mov push xor call cs mov xchg xor (bad) mov add adc call add in rcrb sbb xor das mov cltd mov xchg das mov and addl outsb sub das je and std and mov sub pop cmc lcall fs mov shr mov mov pop and mov sbb jb pop or pop and je sbb packuswb dec pop mov jbe nop sub pop in inc loope out mov and lea add out sub lcall inc xor mov or and bound divps cmpl mov pop push mov pop adc and push xor push mov xchg outsl mov rcll (bad) scas loop mov and mov cld sub mov xchg and inc sarl hlt pop xchg rcll pop inc loopne adc mov je es shrl and xorb test stos pop lds sub enter push push mov mov inc push (bad) xchg and pop mov test pop add push mov sar ja push hlt pushf and adc es mov sub pop pop pop inc cmpsb mov scas and mov call inc lds inc into mov (bad) (bad) lret movb insl add push mov cmpsb inc adc dec cmp cmp lahf ret rcrl dec (bad) fist adc iret addl mov pop and or mov xor call sub sub inc in xor inc push test push jecxz mov mov cld addl (bad) lcall adc xchg decl and cmp cwtl sahf xchg decl pop movsl jns and pop adc ljmp dec (bad) call cmp in mov push jnp hlt adc loopne and xchg addl arpl out mov jne mov adc out out pop (bad) jae add (bad) fild nop jae (bad) add mov jae rcll lods jl and jmp arpl or and cmp in add jae mov cmp xor jns ja push arpl xor jo roll jmp xor and xor push arpl test into fadds push arpl addr16 jg rol insl call repz outsb call and mov in mov rcll cltd push inc and cmp lea jns insl subb mov lea or xchg dec ds inc dec mov pop out or test jne fadds cmpsb cmp jl mov mov lea jb push cmc xor loop adc push and mov inc add xchg and out lea add dec out ds call out loopne stos pop add adc nop inc sbb nop test mov xchg sbb loope sbb jo sub inc adc push pop push lea cmpl xor es or or sub adc adc xor aam das or insl cmp and sbb sbb fimull (bad) or fmuls ret cmpsl (bad) popf test (bad) or fsubrs popl jecxz fsubrs (bad) popf or or or mov inc pop jp,pn inc jg lock jmp fildll mov roll push rclb and or xor and ss mov test dec and arpl mov mov shrl push out imul dec je lea out loope adc jne cmp mov xchg out popf fimull xor sbb sbb int3 jmp pop out out ljmp and and or mov and daa aas xchg inc push loopne das fsts into aas pop (bad) mov pop punpckhdq das loop dec mov add dec hlt pop jl lea fwait out out push dec je pusha out push jnp enter jmp rorb insb mov inc mov xor cmovb pop sbb out dec out xchg xchg call inc adc scas add and jg xor call lea dec aam mov jnp js xchg or outsl fs dec (bad) adc arpl sbb sub dec hlt dec out adc popa or xchg jnp (bad) into adc or and or sub jb xor (bad) sbb cmp or cmp imul imul cmp cmp imul xor jmp adc cmp call mull (bad) ds xor in sbb jmp icebp ss fucomip out mov xchg jl out sub push xchg inc add enter sub mov sbb jmp inc jmp jb icebp (bad) xor sub and add (bad) inc ret (bad) icebp psllw (bad) inc ret psllw xchg and gs icebp xor and mov jge icebp xor icebp xchg mov xor fwait lcall xchg enter sbb pop pop icebp nop add stos sbb push push sub fcoms clc mov nop loope loopne ja mov (bad) call xchg and inc pusha mov mov mov decb mov mov and ja mov cmp andb inc mov cmp sub add pop or push loope push sub dec push mov mov out hlt imul xchg pop inc inc hlt fild mov mov mov sbb lods sbb (bad) push and outsl insb push inc iret test cltd lret xor test std jno cmp bound xchg mov xor cmp dec js pop jl ja mov xor popf add inc aas stos push adc imull ret mov mov jp dec ljmp sbb sub inc popf test not fistl lock mov shrb push pop jbe jae xchg xchg push loope pop cmpl inc add and mov (bad) aas jno mov into fisubl lock add xor sub add push and imul mov inc dec adc jmp call xor mov mov pushf pop add adc fsubrl add mov lods xor push mov aas ja packsswb mov xor sub pop xlat xchg test mov fmull mull into and sub sub aas push mov hlt jae sub xor and xor lds test xor ss or lods inc rorb lds ret inc arpl ficompl push int3 adc test push mov add daa cli xchg dec push mov push out loopne or outsb sub js rorb shlb inc femms (bad) scas xchg testl nop int iret push (bad) xor enter pop mov fdivl jmp fs xchg mov cmpl pop jb cmp jle out mov pop shlb jmp adc loopne cmp mov (bad) cs lods out sbb push and sbb ret fwait std mov mov or cmp lods xchg cmp pop jb pop in push lcall cmp pushf lea pushf cmp inc lcall xor xor aam push ljmp iret mov jmp ret ret jae loope lcall cltd push mov ucomiss (bad) gs and mov pusha js dec and insl movb js out je stos and out hlt outsl jae insb inc xchg mov cmp adc (bad) mov nop mulb notb out cltd sub out imul and pop and jnp std xorl xor pushf and and into fsubl mov je and ja iret std xor ffree adc faddl nop dec cmp sti cmp fimull xor mov out std addl pop mov mov fldl orl push sbb push pusha push xor out ret jle pop fbstp xor cmp subl sub (bad) push inc out sbb faddl pop sbbl popf xor push mov mov push push sub rcrl xor inc and mov (bad) sbb (bad) mov outsl pusha mov daa adc lock bound mov add sti or and mov jno shld ror fbld xor and mov cmp and movb call add mov and and or add adc mov mov ja or and push idiv dec add movsb lock (bad) mov mov and or cmp rol jmp lret outsb repnz jle and dec push push or std pusha cmp inc jae rorb pop ret addr16 outsl push shld add mov and loopne (bad) pusha cli andl pusha daa mov (bad) aad ret add jne sbb jno pop je insb loope jo ja int3 inc push adcl call enter jmp sub dec mov mov mov in push pop or enter pushf fdivr mov or ret scas xchg lods xchg orl cmpsl mov lcall (bad) and clc mov xchg dec fs or scas (bad) adc mov not mov not mov das cmpsb and mov mov mov cmp or mov mov xchg daa add cmp (bad) ljmp cwtl dec mov insb lea mov cmp and sbb mov mov and jp lods loopne lret mov jae lret and and xor cmpsl fmul cmp outsb jae je xor mov xor loopne pop rcll xor mov sub adc loopne (bad) push xor mov inc push jno mov xchg cmp shr jmp dec mov je dec xor xor push add sbb jp jp cld loopne (bad) not and divl out popf clc fdivrl mov int sysret pop mov and and jae je inc mov js int push adc ficomp adc lods jne sub or fisubl neg jae fcoml xor neg (bad) aaa outsl adc adc or or adc rcl jb icebp xor in es ret jne xchg lahf pop gs add inc int3 and xor dec lds sbb mov dec jnp and (bad) lock pop and sbb cmp inc dec or mov das dec ss mov mov ret mov lock adc out icebp sahf (bad) (bad) dec pop mov out mov dec cmp loope fildl and mov fiadd mov stos out jae mov inc (bad) cmp cmp push outsb push and int int3 cmp cmp mov pushl bound xchg popf sub or mov jo ret iret sbb xor js xchg or and pop xor adcl jle sub xchg (bad) pushf pop sub js out push cmp lea or xor and pop cmp xor out insl out adc dec (bad) aaa mov and and jecxz outsl add sbb lret or jnp cli outsl xlat inc adc mov inc stos add sahf xor xor xchg cltd pop pop neg fscale loope jnp pop das dec dec mov iret cmp xor push pop inc mov mov push xchg loopne sbb pop fnsave (bad) xor add sub lock aas jg ja inc sub mov test loop mov mov out push shrd push orl and inc xchg (bad) loopne mov outsl shrb inc outsb add or ja or jnp or icebp pop dec clc mov or cmp (bad) roll and push push pop and mov ret or dec sahf loope sbb es mov out pop out push insl ret pop bsr lcall lret imul jg icebp mov pop mov or or xor jecxz add lods call sub pop jl faddp outsl add add shld int mov shr mov dec lds cmpsl lods xor or ret and mov into pop inc jge mov js cld cmpsl or or pop not je and (bad) loopne mov pop jl mov mov adc cmp fwait mov jae mov and les xchg pop stos add sbb push and xor pushf (bad) add in pop mov (bad) sbb out mov dec adc adcl mov or push mov lods loope ret mov je push cmp and cmp mov xchg lret lcall jp fwait jp mov shlb fstpl inc pop rcll push pop int3 je and xor mov js loopne xchg insl mov add call in and dec adc cmp and mov iret sbb repnz repnz xor aam shl (bad) jae xchg movsl and sbb cmp dec and aas sbb mov pushf lods pop out pusha js jg push jnp cmp sarb or and or xor sub sub sub add jae lods cltd push and test jo pop jne enter sbb and mov lret and out lahf orl faddp addl into sub cwtl cli je icebp push adc das or xor jae cmp push scas addr16 (bad) addr16 xor pusha pusha sbb mov or out cmp adcb std fsubrl punpckhdq inc pmuludq mov sbb mov lods mov jns or insl jge xor adc rorl jp andl pop pop push cmp loope xor sub sbb ss lds and xor jle fsubs (bad) icebp xor cmp pop das or stc loope sub jo xor push pusha mov adc xor pop mov lds sbb sarl mov out lds cli inc pop jmp inc rorl sbb mov pop sbb ret inc xchg mov sahf and call jnp xchg push negb dec inc cld fdivrl stc dec xor xor xor in pop jnp adc cli (bad) aad sub xlat rcr xchg mov xor xor pop add shl mov mov dec pop mov loop dec outsb testl add pop xchg into sbb add cmp ret add leave adc jnp add lock jg movb testl inc add ds jl push jle jae xor add loopne add icebp push sub and mov es call ds call pop or xlat or mov sbb push out pusha test pop sbb clc mov or mov mov mov xchg mov (bad) mov shld mov int lods flds dec rol jmp mov and fadds pop or (bad) nop and mov and fstl mov add push in pop add rorb (bad) xchg daa xchg push push cmpsl pushf and enter outsb inc not not cmpsb or xor pop mov subl call sub shlb out inc and and aad xchg shrl cmp iret xor pushf lods repnz bound lock push int3 mov paddsb shll pop cmpsb inc cmpsb movsb aaa pop stos push cmp out and cmp pop push dec or jnp xchg or push xlat fwait out (bad) and mov sbb nop in fmul rol push aas mulb fnsave xor lods cmpsb mov push cltd lods cmp insb ljmp xchg jnp push add out sbb push cmpsl imul (bad) (bad) dec xchg aaa outsl mov lea sub xor sub mov mov test ret mov das mov inc into or jae enter (bad) fldl mov xchg movsl (bad) sahf cwtl sub mov add aaa stos jge push or pusha loop nop arpl or sarb add xor les xor or imull and iret cmp sbb jo or mov cs stos inc mov out jmp cmpsl aaa arpl sub sahf mov sahf orl (bad) cmpl mov inc cmp mov adc iret out push sub lret adc je push push xor dec push jb mov pusha or add mov xor pushf fidivl rcrb jg subb sahf in xor dec xor ss pop out sbb out push mov xor push xchg test lock lock test mov mov xor sahf jnp dec sub es sahf jnp orl out es inc adc cmp andl sbb add inc jo out or push mov fsubs loopne or xchg jle (bad) loope je je xor loope jecxz mulb sbb xchg loopne push xor xor xor iret loopne clc adcl jae push inc push mov sti jnp out mov sbb aam sub rol (bad) pop push and stos sub dec cmp lods mov rcll or dec inc adc adc or iret cmp (bad) (bad) lock sub cmp and adc pop out arpl adc push dec inc (bad) push push cmp push xor inc out aad fidivr cld and outsl insb mov sbb push aad mov push ja (bad) xor cmp sub mov add (bad) pop mov xor (bad) arpl mov lret icebp lret sub add int or orl dec sbb sub lods (bad) or movsb ja loop pop sti add lret and roll out addr16 or sub sbb ja mov test push aas (bad) xor sbb dec loope idivb jno leave daa mov pop fld (bad) int add jg mov mov pop arpl mov inc jg js pop int dec cld cmovge mov shld sbb aad push pop and aas cmp mov ss in or not and inc pop xor push lods mov or (bad) cli ret lret push pushf jo pop adc movsl sub add (bad) not outsl rorb or cwtl inc ds js and dec push and mov or sub iret mov sbb je mov jae and dec out mov inc xor add adc gs fsubrl sub xchg not mov mov jno hlt aas jns sub lods add xor into bound test pop push repz sahf jnp inc push pop push jns scas push mov (bad) xor jb inc or mov mov and decb fldenv and fsubrs out insb (bad) dec insb gs pop clc mov loope lock fldenv mov mov cmp icebp xchg mov mov out cmpsb vmread jmp push inc xchg jae inc aad push sbb fsubr popf xor xor lahf rcrl subl js inc adc addr16 js imul and sub loope aam or cmp xor int3 adc mov sarl adc add and cwtl push xor enter push and xor cmp call cld jae xor repnz sahf jmp and mov push mov ljmp icebp insl push mov inc test lock adc lods (bad) or ret mov imul mov xor push push add or jae jnp mov fdivl pop xchg sub int3 push lea xor adc or xor push sbb jmp sbb adc fwait ret mov (bad) or pop pop rcr xor push icebp mov rcr push out push and inc pop mov inc xor mov xor aam add lods dec pop and push adc dec and push and out ljmp or adc clc loopne in pop xor or out adc push addr16 aas pop loope pop or jo jo push push pushf aaa push mov daa pop cmp add xchg lock cmp xor mov xor push inc xor rorl ja dec (bad) cmp mov pop lret (bad) xor icebp cmp fnstenv ret pusha shld cmp sbb sbb xor and push (bad) xor xchg mov push pop psrlq mov jecxz movsl (bad) decl jecxz lock add call notb lock verw (bad) jne inc cmc fiadd lret or lret lock mov ja push add inc decl and add pop sbb insb sti pop and add lds mov xor push add or or cmp or out mov cltd addl pop push adcb fadd push dec mov push inc inc (bad) cmpsb outsb roll dec je adc mov pop pushf mov fdiv cmp loopne in jl jbe mov shr pop jnp mov and jecxz out cmc or test sbb test test outsl mov or or gs xchg add cmpsb or push popfw or xor push sub adc sbbl cwtl shrl flds popa inc mov xchg or jb inc lock lret mov testl pop ret adc daa mov je xor ret imul mov js cmpb fwait not xchg sub xchg and test inc cmpsb pusha cs and pop cmpsb push adc fsub inc cmp pop dec and jmp mov vmovups or cmp lret sbb loopne sbb iret rorb sub dec xchg pop or (bad) lds lahf inc cmpsb out (bad) jmp inc popf ljmp sub aad sete es addl (bad) loope or jns aas xlat sub jg xor es mov into negl bound cmp cmpsb xor cltd cmp mov test sbb fcompl pop neg (bad) lock xlat adc scas jno jae cmp mov imul sub jo sub movsl xor or imul int jo testl cmp ds lock lret inc outsl cltd add neg xor push fwait xor shl push outsl inc push adc stos adc in lret sahf and rolb push sbb sahf mov cmp cmpsl test push out mov lods push out sbb and add test mov mov add sbb ljmp loopne jnp mov ja lea arpl ljmp xor jae inc adc movsl pop cmp fwait sbb orb xor iret inc jmp aas or lock sahf xor loope (bad) (bad) fsub add ret pop iret lds xor push emms xor add cld leave lock adc xor xor mov rcrb adc sahf loope lret icebp sub mov repz shll dec add sub faddp and jns into mov popf jl (bad) xor cmp jg push pushf insl bound sbb mov push clc sbb mov in mov xor add into pop mov imul cmpsb ret sub decl inc sbb lds (bad) pusha mov push xor xchg xchg push insb push aaa enter (bad) sub les shld shr push in js icebp xchg xor shrd shr mov adcb call js fisttpll add (bad) icebp or or and cmp rcl loope and js add lahf jl push int repnz push xor lcall int loope jo cmpsb mov jb mov jo and mov xchg scas rorb and aad flds and push xchg cmpsb outsb bound sbb jmp lcall shld mov lods int mov shr mov mov adc add test pop enter loope cmp xchg arpl mov cli xchg inc not sub cmovo mov rcrl int cmp push inc mov adc add ljmp mov mov clc and jl pop jae nop mov push cmp je add and pop and sub sahf or cmp mov mov sahf xor sub mov jnp mov and mov fnstenv loop lods push idivb jne add add sub lock loop push es and call jb xchg ss outsb add pop pop (bad) xor lcall and rcrb imul and xor sbb js inc loop loopne jmp pushf cmp neg xor xor add jb icebp mulb mov cmp loop or nop sbb jbe xlat jae js je cmpsl das sbb jo aas push pop negl aas adc ret inc or dec and fbstp mov xor cmp mov or dec stos or add andl mov iret add xchg mov (bad) push adc loopne out xchg push jecxz xor shrl mov cwtl sbbl lret sbb iret (bad) mov and scas push or adc popl sbb mov jae mov cs (bad) fdivl outsb and or test (bad) and dec inc dec fdivl inc mov lods das jge aaa and lock inc dec xchg push cmp or js add test mov sbb inc iret mov addr16 cmp (bad) xor fwait and jnp call and mov push mov adc mov push xor xor xor mov adc or ficompl mov imul sbb sbb push pop outsb or (bad) (bad) jb pop (bad) aad and jne lock xor (bad) inc push push (bad) xor daa mov lock add sub push je sti (bad) jmp jmp or lcall jo dec inc xor inc cmp pop inc jge mov or mov outsl pusha xchg or or loopne (bad) hlt inc daa ja mov adc adc pop mov mov incl test inc adc call dec movsb (bad) push and mov cmp or rorb or rol loope out out pushl in pop xor lret mov xor mov popa pop pop dec add sbb out or ss incl or mov std mov mov mov pop out adc pop cmp fwait jge mov mov push lods or or cli pusha (bad) pop push mov mov insl shrl mov sub loopne mov xchg or mov and ljmp mov or and xor mov or cmpsl daa push out mov cmp adc not test ja adc mov clc roll jne xchg in adc pop inc test stos push mov ffree push sub mov pop xchg aas xchg and popf add jb aas xor mov (bad) inc loop push adc nop enter and mov aaa mov mov inc xor and mov mov leave jno stos pop mov aas mov ja sub lds jecxz js xchg pop clts pop mov push xchg cmp adc push push pop xchg sub shrb jge cmp and mov sbb (bad) aas (bad) jp or not push dec data16 stos adc (bad) jp adc ljmp cmpsb nop sub and xor mov sahf js sub idivl sbb adc and push mov addr16 test sub rol jno xor inc jo cmp add jne and ret jae pop jne dec scas jno fdivl stos jecxz inc cmp fdivl cmp mov fldl sbb cmc into rcrb push shrb testb fdivl pop cmp pusha jecxz sahf and movsl leave test xchg push into sbb cmp xchg xor cwtl jnp lret test xchg lods sahf loope push movsl inc (bad) xor addr16 shll dec jne and in cmpsl inc cmp fmull int cmp xchg jnp jae mov icebp faddl daa dec sbb add xchg call (bad) push sbb dec xor push out inc lds xor fcomps jb and add cmp or add icebp dec mov and out mov or rclb jb push pushf sbb (bad) or loopne js pop or hlt shrl push cmp adc les cwtl xor sarl jo jb pop sub das jbe xor sub cmp rorl fildl pop and mov add or jbe je xchg js out pop dec dec and push nop add pusha rcll sbb add sbb push rorb mov and push pusha repz scas sahf jecxz out push and inc mov xor mov add out into jp mov push out fist jae ja mov xor xor lods leave mov fstpl loopne jecxz in pop jo xchg mov popf fmull ficom icebp mov lock sbb (bad) shrl cwtl ror push mov test sbb int add sub addb xorb and test cwtl popa pop inc fs adc lahf pusha pop icebp (bad) aaa push inc and and adcl dec and pop push xor or ret xor add or dec pop add ds mov or pusha mov out jb mov js out pop js enter or movsb call and bound mov (bad) enter test in push stc adc dec cmp pop or pop push pop cmp jp je icebp dec mov and sarl or xchg insb divl andb sub les xor sahf mov fwait xor out dec jo (bad) mov push popf ljmp cmp dec sub cmp call xor sub in adc mov mov push adc popa cmp int3 aam mov aad lret push std enter xlat outsl and data16 sahf fucomip jo mov push and and mov adc mov loopne jnp sub out push push cli and mov test aas das in adc (bad) ljmp inc stc fnsave iret inc jl fimull sbb fdivl scas pusha repz cmc sbb sbb lcall mov sbb xlat gs xchg divl xor divl xor xchg and add dec xchg lock (bad) mov mov ret dec in scas mov outsl xchg xor out and lret mov int3 sbb scas xor ret or mov insl sbb test cmp lock sahf push and sbb mov inc and notb test jo push jl xor sbbb add jmp push adc inc or scas and lock lock adcb aas add cmpsb cli mov dec jns sahf addl aad loopne sahf loope push das mov sahf jnp xchg rcll js jnp mov mov lods mov cmp jae mov lds jb adc adc cmp out ljmp roll gs xchg adc js xor into (bad) jae adc int adc sub js je sbb push xchg or inc pop and rcrb subl subl cmp or add or (bad) loope (bad) insb pop cmp mov in mov mov push dec and push add mov cmp add add out adc add or sarl ja xor sbb mov out idiv cmp adc hlt popl (bad) std mov out cmp stos ja ja xor out (bad) dec and adc mov sbb add jb xor dec adc add push clc inc sub xor shrd subl mov mov push lock xchg pushl fisttpll mov and or mov js gs xor shr mov out mov mov add lahf jae js shrd shr sub inc std je adc mov xchg or test cld cmp jo push inc mov fdivs pop push shld outsl push movsl jb,pt fdiv push cmpsb pop movzwl mov or subb push push sbb scas aas rorb (bad) or sti and movsb enter xor psubb jg mov jmp not movzwl movzwl mov and ss pop mov cli scas test adc adcb xchg pop cmp ds mov sbb add mov mov dec out dec rorb or mov sub xchg and (bad) repz movsb mov cwtl and xchg js rcl mov rorb pop clc jle fsubrl or jl in not mov xchg sbb push pop adc adc adc mov add fmull imull sbb dec adc adc add popf divb pop loopne sarl sbb pop imul rcll xchg fnsave (bad) adc sub daa ret (bad) lock in mov or test xor pop pop nop sub adc xchg adc loop add pop (bad) mov pop (bad) jp lock cld pushf push lods and dec scas adc rol xchg push pop jae adc ret and xchg ret loope xchg push pop out iret lock js fsts pshufw jae out dec mov ja inc xor xchg add dec in scas inc into rcr xor cmp imul sahf jnp bound mov sahf int3 cli add popa and pop ja inc mov add mov popf aad add loopne jbe int jmp inc insb lods sbb fadd jne and loopne sbb lock cmp inc lock sarl sub (bad) mov push dec mov iret (bad) hlt sub sbb sarb mov add and xor xor fsubrl stos xor sarl jecxz mov jae (bad) (bad) xor mov pop dec aam xor aaa dec and sahf mov xchg cmp mov mov dec cs cmp add push mov test sbb ds pop jno inc xor sbb push sbb xchg inc loopne dec xchg push xor enter push lahf test jl xor lret adc mov add and inc xor ja sub aam cltd jle xchg and xor adc cmp pop dec xlat pushf and sbb sete inc jne push dec (bad) jne subl mov ja xor xor mov adc int js neg pop ss cmp xchg add adc fimul lods aad sbb xor push mov mov inc scas (bad) scas enter inc inc shrb data16 jg pop stc cmp or shld shl ljmp adc mov mov mov mov inc and push mov ja or data16 mov and dec (bad) jo sub fisttpll shrl push adc and dec inc ret andb fmull movsb into adc loope cwtl icebp dec pop sbb mov fcmovb or loope mov xchg insb add test movsl mov inc (bad) emms push fnop pop dec shld nop stos pushl cld ficom shr sbb rorb lret movzwl xor add add jmp sub pop idivb xor ret pop jne and and stos andb sub pop jno dec xor mov rorb adc jae inc mul add push mov lock or inc and aad fwait loope ds dec and cmpsb ja out lret or pop divl xor idivb inc cld inc stos addr16 sysenter cmpsl or cld inc sahf adc shlb or cmp js lods pop sub inc mov mov jo out mov inc dec mov cmp cmp movsb or into xor mov xor pop mov divl mov cltd sub (bad) jbe scas pop push mov lea (bad) fldenv sub jns lods mov sahf jecxz test jge push adc out xor xor ret cmp jmp push or cs pushf pop jae push (bad) (bad) lods push and push loopne and xor loopne jecxz mov cmp pop imul int3 icebp or mov adc pushf sub add jb jo or les loopne mov adc sbb outsb sbb jo mov jbe push iret (bad) mov jnp xchg push inc dec pop mov sbb add and add test sub cmp push pop mov out lods imul jae les cmpsl ds or je jmp aas or inc js mov dec sub jnp js adc cli sub add mov je jae mov push sub mov dec jo cmp jp pop push and and xor mov and xchg orl or out lock xor and out add xchg mov cmp mov jmp push pop mov fs adc dec loope inc mov xor lock mov inc pop cmova pop sub add arpl inc xor xor scas pusha and (bad) enter mov push or data16 cli cmp mov inc scas divb mov xor mov sbb mov lds cmp out mov mov sbb ja mov gs mov iret inc or fimull add mov xor sbb in xchg dec push mov mov lret jg clc loopne push push scas and rorl sub pusha xor sub and lock push mov or ja js mov push bound (bad) mov pop push add call cld test and inc ret add inc mov bound and cld stos lret invd pop les test mov icebp and rcrl scas jo or (bad) or pop mov ror xchg ret mov adc pop adc sbb mov or lcall and add ret jg add inc and (bad) jne dec cmp ret cli addb rcrb cmp fmul cmp aad ficoml hlt and push sub push mov test push int3 subl mov es sahf jnp ret into xor dec cmpsb out inc xor mov sbb (bad) or stos test stc add sbb loopne sbb neg and daa aam cmp add inc mov rolb call push jecxz jnp out mov fstps subb test fdivl (bad) cmp pop ja repz inc loope cmp and mov ret dec xor sar xor sbb lcall jo and (bad) fdivl loopne test das out and xchg pop cmpsl adc (bad) jae lock sbb cmc xor into jp mov dec push ja shl xchg and jo xor (bad) xor push js sahf loope mov or popf gs sbb and push pop iret inc adc neg jae popa jg,pn xor mov ss and popl mov (bad) aas sbb push xchg ja push fisttpll loop out add std cmp es or sarl pop call lds enter adc jp cmp and aas ja scas pusha dec dec test xor (bad) jae or arpl out loope cmp hlt mov sub xor js loopne sbbb pop aam fnstsw sbb popa adc sub dec arpl cmp pop pop add and mov aas pop add dec mov fsub je arpl decl push pop insb mov fidivl lds lret clc jo outsb mov fisttpl sbb ljmp push mov xlat jae xor adcb and mov mov xchg fs push add sub outsl jns dec into addb xor addb adc push and rcr pop or ret jg (bad) roll mov dec js ja fcoms les cmp sarl mov or cmp shll adc repz cli aam mov mov in xor dec lock mov or sbb aad mov xor js cmp xor jecxz orl es mov and icebp push jmp xchg and jecxz mov sahf dec cmp or mov push xchg ljmp lea mov cmp or (bad) rorb repz jo movsb jns sbb inc mov addr16 test int3 push cmp loopne push mov sbb ja pop insb loopne lock push and movsb or sub lock enter sbbb jmp arpl add out xorl mov and es add sbb repnz loope sub mov jae xchg or mov mov jns out inc mov inc pop (bad) loope adcl jge pop add add or sbb dec pop or orl out xchg stos out rcrb xchg mov and push pop dec lahf je out sbb push mov out rorb out mov jno cmp rorl mov in pop in push mov jnp cmp inc enter cmp sub mov adc dec pop adc push mov and test mov ja js std mov mov dec out scas out in mov adc clc inc mov rcl push rclb testl jae std dec push xor mov and mov fdivl std out and scas sub lods cmpsb jg pushf cmovge rorl pop jne dec jo dec dec xor cwtl jnp addr16 xchg xor inc in stc inc inc mov cmp insl inc push pop adc mov sbb mov std iret lock out or mov jmp adc adc adc jg push adc loope pusha ljmp inc test pop add fsubl mov ja not xor xor xchg jno fsubr test pop pop testb lahf subl fnsave not mov mov imul jp pop cmp adc jle (bad) rcl jnp stos mov test mov push inc add mov ljmp add sub mov mov add mov and ret and mov pop pop add sbb xor hlt and and (bad) or pop jne mov outsb (bad) mov push inc xor xor and cmc leave adc int add ss cmpsb inc mov mov mov push push xor lcall je adc int xchg inc mov cmp data16 test cwtl pop sub call push mov xchg cmpsl sub pop andl out add inc cmpsb and add (bad) xchg xor loopne mov inc cs mov and mov or pop insl xchg test dec push in push jae stos test outsb add test adc bound fmull (bad) ja jae xor dec push xchg iret xchg pop add sarb cmp mov mov mov cmpsl sub (bad) xor nop icebp pop mov fwait sbb sarb or mov (bad) or push (bad) xor jmp cltd push push adc clc aaa (bad) push mov mov jp and sbb dec mov out jno lahf adc and jno inc lock popa lahf xchg dec icebp jae add sbb out mov xor mov addr16 jp out mov mov mov rolb lds xchg xor (bad) mov cmpl lds dec and cmc cmp jle xor and push push xchg xchg mov sbb sbb pop sbb pop icebp mov xor pop jmp lds (bad) mov js sbb lahf aas and pushf sub lock add add pop cwtl or jecxz jae enter or pusha mov xchg pop ja adc sub push inc loopne enter (bad) jae xor mov cmp sbb and cmc std movsb sub mov ja ret roll sub mov push lahf loope mov dec lret jo inc aas in inc loop push mov xor ja das inc aad add loopne xchg test add sub mov clc arpl mov mov repnz loope insl mov jl sbb addl incl (bad) mov or pop mov outsl je fdivl enter loopne cmp mov mov cli adc fimul mov push (bad) jl jne subl call mov stos or out mov ja cld mov loop mov cmp cld stos div or add or mov or inc xchg push mov inc shll cli lea mov push and add inc fldl and mov les out (bad) adc xor adc ja in shrd shr orl (bad) push mov dec add adc inc inc adc add fildll enter mov iret cmp cmp mov fsubl cli sbb mov inc mov sub mov mov repnz loope sub mov xor ja es lock cmp mov sbb mov xor ljmp mov dec (bad) ret jg sbbb sub inc (bad) xor mov inc les push mov pop mov pop mov fwait aaa outsl fisub inc aam mov push mov mov jo inc in mov (bad) sbb jl jl mov xor xor sub stos jg mov (bad) (bad) cmp mov (bad) loopne (bad) pop sbb inc add (bad) movsb xchg mov adc cmc cmp or inc enter ja cmp or sbb cmpb push adc jns popa mov aad sbb push jl inc add pop jp inc mov nop mov stos clc push loope ret jnp pop add movsb fiadd shl inc push or fsubrl fdivrl imulb (bad) push lea je mov and lods stc add add and mov test jne pop aas repz clc jae test lahf inc cmc and leave cmp add add xchg pop and pop xchg add cli daa and test add imul clc jg and testb popf and test add pop and ds rcrl pop sub lea (bad) push (bad) in sbb dec add scas call ljmp enter loop push jge push mov xlat lea ljmp add shr and sbb jae test je cmp je test sbb pop je stos (bad) fwait push test gs fnstcw sbb add mov dec sarl add or adc stos add sbb cmp jb decl cmpsl mov and and pushf pop adc shl or mov jb nop push pushf push lock cltd mov xor and xor leave cmp imul cmp adc cmp leave push dec jo ret lret jne pop cmp sub push mov xchg sub pushf mov out push dec js add adc movsb sbb push sbbl mov add dec (bad) or dec addr16 add stc leave fsubrl stos xor test push pushf add adc or ds jmp jae push or xchg fmul popf fsubrl aam cltd pop mov xor mov inc out in push add mov cmc xchg pop mov inc pop (bad) dec xchg mov xlat adc mov dec popf cmpsb mov repz add icebp mov and (bad) sbb mov fsts shrd mov inc mov push mov sbb mov or mov push xlat jae pop jg and ja lahf mov sbb cs aam lea dec enter addr16 inc adc jae mov stos pop mov xchg bound rcll rcll push aaa sbb ret push jno inc and pop lcall xor int3 loopne pop push in rcll pushf push jns add call inc inc adc je jle jne jno test ds or or decl ja (bad) test push fmull lret or mov int3 or mov or jno in push add jns mov jg int3 pop frstor pop sbb jno maskmovq divl sub mov mov (bad) (bad) fadd jne dec ret sub jno mov mov add in mov cmpsl sbb ret dec or lea scas test cs adc adc mov test xor add push aam outsl nop ret push ret or sbb mov jmp inc cwtl inc pushl inc outsb cwtl sub mov test add adc scas dec jo (bad) testl (bad) mov jmp out cmpsb sub clc decl rep mov mov mov shrd mov sbbb lods fcomps mov cmp add pop movb notl sbb push and xlat daa arpl cmp xchg xlat ja pop push xor and enter push pusha loop aam xchg in push xchg out in icebp dec push push or mov mov xor sarl js sub fadds mov jmp push jo lds adc sbb fisubl xchg add xchg or jno pop add stos pop aas (bad) incl mov aaa jle les movsb xor xchg add mov out rclb adcl mov and mov cmp mov je vmread jmp dec inc outsl sahf hlt cmc (bad) (bad) mov xchg test adc fist insb stc out and inc lcall (bad) out jae adc xor lea cmp push add fsts mov adcl and xor inc decl jecxz lea mov push adc cmpsl jnp rcr xcrypt-ecb cmpsl int3 arpl ljmp and dec insb jp daa negb or pop push inc hlt xorl fisttpll aaa cmpsb adc mov push push add or xor xrelease or adc dec (bad) xor adc sbb sbb call jb lea add jmp fimull clc mov jge aam je sbb adc dec lret dec inc les mov mov aam sub mov mov addr16 push std (bad) ljmp gs inc and loop push mov loopne cwtl push scas pop xchg test jge je stc mov add lahf jecxz fimul add xchg nop in cmp lcall xorl adc inc xor mov dec sbb cmp loopne push and jnp movsl add popl outsl mov popf cwtl dec cmp or mov stos push popl lea js in inc mov mov mov sbb adc and das sbb adc push inc jo sbb js flds fisttpl add (bad) push adc add mov and pop or pop adc and sub push sbb push adc mov mov mov (bad) cmp fimull stc jo ja mov mov pop mov sarb inc or fwait ljmp sub add jae add dec inc xor loop popa dec push cmpsb and or jae mov mov aaa add push inc mov sbb mov mov and mov div (bad) xchg and shl pusha sbb cmp jmp inc push inc inc mov jae and and lods and add add and stos es adc dec add and sbb add sbb adc mov (bad) mov xor mov mull sbb lcall xor mov sbb iret push push adc out or xlat (bad) ljmp out mov and divl dec and xor push mov fadds dec into pop or jle ja and pop mov mov mov jl ret add pop mov mov mov leave mov fmuls movsl jge cmp jmp ds (bad) adc in adc pop divl inc loopne pop ja icebp xlat adc or add and or data16 push mov mov mov sbb out jns sub cld or mov add cmp push sar adc outsb lods and jb gs push (bad) push test imul mov adc xchg xor (bad) mov xor cmp adc adc push lahf cmpsb adc and inc add aas xchg add mov mov mov mov adc cmp ret jne insb pushf scas insl adc ja mov mov add mov loope xchg (bad) xor adc (bad) test mov into aaa iret mov ljmp fmull cmp jne scas sub je out mov inc int dec and mov dec adc and addl add mov adc hlt dec sbb shrd xor dec add imul in or mov lock pushf and cld iret adc push jne testb mov mov (bad) ds adc lods rorl lods ret lock pop pop loope shrd mov xor push les push pop aaa mov xchg mov push (bad) mov dec push push fmull movsb rclb shld inc insb mov lds in lods into jmp inc xchg add add outsl scas ret outsl idivl xchg rcrb shrd cmp or xor loop negl (bad) or push add adc mov shrd ficomp mov nop pusha mov fs xor or mov out shrb inc dec push (bad) clc (bad) std add mov inc push shld (bad) mov push jae sbb ret xchg pop and adc dec xchg and sub adc (bad) movsb rorb inc push mov mov cmp inc pusha xor jmp and test push notb ror (bad) sbb push push xor test inc inc and mov cmp cmp (bad) xor roll rclb and sbb out sbb push nop adc rcrl negl xchg (bad) cmp lods rorb xchg psrlq add test inc adc xchg aas jo in adc arpl add mov movsb fsubs lds rcrl add jo xorl subb xchg sbb xchg inc adc cmp sub rorl popa sbb aam xor dec out sbb add adc pop push cmp dec xor cmp adc inc roll xor adcl push pusha loopne or xor jb out mov xchg inc cmpsb xchg scas sar lds and iret or push mov ret jecxz fisubr test cmp xor inc xchg and push push push negb mov pop fimul jmp or cmp xor adc or add mov push add imul insb and mov mov adc shrd pop adc sbb insb mov xor insb sti push addl out add or aas xchg add lock add jle sbb out lods and mov and insb and (bad) popf test dec mov sbb mov xchg and xor je or push dec je push pop mov scas mov cmpsb xor (bad) mov xchg jnp fisttpl xor xchg cwtl sub aas in lods sub jb xor add (bad) pop pop je jne and mov insl shrb xchg dec adc jl jb cmpsb mov jb inc adc or mov popf mov add mov mov add mov xchg push daa inc mov mov jae int pop add popa clc and sbb and addr16 (bad) iret lock sbb lock fistl sbb notl sti dec jo enter fimull movsb fstps shld mov xor xor sbb dec in and or cmp xor pop popa stc inc xchg and push (bad) jg xor shrd push mov inc or mov ss sbb notb cmp pop sbb call inc shld shld xor jle scas xor xchg add cli xor mov (bad) or jns xor pop adc cmc xor cld inc lret push add and testl jb pushf mov add mov push shrd les insl pusha mov adc dec fs or pop push pop jb push xchg rcll out cwtl gs cmpsl sahf or movsb ljmp pusha fs imull xor test push xor idivl cwtl mov sub and jno mov lods mov aad or jns add insl loop imul jp pop inc loope punpcklwd xor add lock pop popl dec pop mov lods cli xorl out sbb mov adc xor jae push xchg clc cmp fistp mov cli inc int3 inc add ret fbld jae xorl cmp test jg lds jae and adc and mov dec add ja mov dec and or mov add mov das test pop cs inc or push popf mov or aaa and add push mov sbb sub lods rcrb cmp sbb roll and jo mov sahf ds (bad) sbb mov mov test hlt cmp movsl fnop inc pop cmc xor rorl ret dec pop ret (bad) mov rolb fisubl mov push xchg xchg das add xchg cmpsl movsb rclb lods cmpsl movsb repnz cmpsb push mov mov add ja mov cmp add add test or sbb sbb mull test mov lea andl aam xlat jae jb push hlt test add xor cltd les rclb daa sub xor aam cmp mov les pushf mov lods and add ficompl add xlat sti and adc jne test add mov insb and xchg sti adc std push repz mov popf add sbb xor pusha adc mov roll out mov jb adc mov jnp (bad) dec fcompl inc mov ret iret lock lock xor ret xor or jmp lock add add rcrl mov adc dec inc ficom jmp jmp js mov jge jo scas clc pusha sbb negl cld adc push sbb fnstenv adc push inc test je call punpcklbw rolb (bad) out sbb cmp mov jns sbb xchg jbe xchg jo insl sub adc addr16 popa pusha mov shrd sub mov pop push fbld dec xor out xlat add and add mov adc shll pusha xchg mov mov mov add lods and cmp xor ss xchg push jl bound xlat loope mov or adc xor ret leave negl adc push mov bound pop aaa loopne (bad) jge add add lret fmuls pop out push sub hlt push mov fsubrs dec test jge loope mov test mov or jae dec dec push or outsb mov fistpll push enter pushf push inc mov xor fistp and mov fs and loopne and insb test inc push push sarl or mov adc mov sub out sbb pop ja (bad) xlat add inc mov mov mov das xlat icebp dec mov mov aaa iret mov rcll mov pushf (bad) jp shrd loopne add jae sahf jmp and das add notl js setl mov ret movsl insb and xor or cmp mov and jb std sbb mov adc iret sbb fwait dec clc or je movl xor xor les fs clc cwtl lock lahf mov or push mov cmc xor xor std push sbb push aas adc jmp out pop loop cmp subb push cmp jbe push xchg sbb pop inc sbb sbb stos cmp cmp lret inc sbb les lock stos jo jo ss sub adc and and daa jl vpsllq pushf add sar dec adc xor dec cmpsb fsubrs mov pop xor pop and add (bad) xor pop popa mov ret add insb lcall or iret cmp mov pop pop and pop sub call push add push xchg lods and or add jo inc xchg xor adc jne jo fs icebp adc and pop pushf xchg cli mov add mov mov mov adc dec subb jo cmp iret mov xor pop pop imul jb and (bad) or add mov adc aas fdivp popa push jg pop cli shrd (bad) push push ret aaa push adc out pop scas jae cmp leave js inc jl ffree cmp push lock add aam sti xor bound push inc mov repnz add mov decl fildl (bad) mov adc shld ljmp lds cli mov push scas ss add inc push pop sbb or gs popl scas add sbb outsb push psubw xor dec out or repnz xor (bad) (bad) ljmp int lds jge ss xchg inc repnz lods loopne in das test out dec push into push xor cmp lds ljmp lret push mov (bad) xor xor push fs dec lds pushf push scas bound xor fiaddl inc stos test push popa ljmp inc dec nop xor sahf jae sbb data16 leave loope ljmp push fidivrl inc lods fdivl pushf and loope xchg call adc roll rol dec out cmp out inc int3 adcl pop mov jae or cld ljmp fnsave movsb push in rcrl (bad) xor jo lods insb dec or or jmp inc lods push cwtl jnp loopne je inc push push inc das fldenv pushf roll sbb mov negl (bad) (bad) mov or test faddl sbb jle into mov adc inc fnstcw test mov xor movl sbb (bad) xor cli inc pop sbb cmp xchg mov mov mov push icebp sbb test outsl mov and push mov xor or dec sbb adc (bad) xor les pushf orl add inc and je inc push push push pop (bad) mov bound mov imul xor push xor loop (bad) (bad) jne cmp inc js adc (bad) jae inc stc loope fcomps add xor in push addr16 mov (bad) mov add xor pop inc inc stos mov xchg mov hlt adc add push jl jle mov ja add (bad) lock push test adc mov fnstsw popf adc xchg jp scas jae add push mov ret ret fisttpll mov sbb adc (bad) icebp mov xchg inc fstps fwait js flds add and stos mov mov add mov adc mov out sbb icebp adc add addl add adc mov jmp into or xor inc inc shld int mov mov xor and xor mov addr16 mov xchg mov out mov out mov jp dec mov add ljmp rolb (bad) sbb jg xchg xor sub insb mov popf sub sbb sti or jg lahf xchg fmull dec jp pushf rcll xor push ljmp push xchg (bad) ds loopne sbb xchg popf mov and jl or lock xor cmp lods (bad) xor push cmp mov lods and mov add loope jg push cmp ss pop inc loopne dec sbb sbb popa loope sub call adc inc data16 jnp and ljmp mov negl adc loopne cmpsb loope inc int3 mov insl (bad) faddl mov sbb clc cmp jo scas cmp cld movq repz loopne test in daa (bad) int3 jne add sub add mov pop data16 xor inc adc push imul mov push or xor ficom sti jge sbb es mov push pop ss cmp int3 insl ret jg adc cmc xchg jmp xchg (bad) shrd jnp ss or pop call jnp xor adc out push xlat mov add mov cli mov mov rolb jne pusha mov test fs sbb loope lock and xor pop movsb jno fcoml or adc jo and jae test push xor mov or jbe loopne add inc and jae and xor jp dec das inc popf dec loopne and jle fs add adc sbbl out dec insl out cmp dec push cmp inc ja push push xchg mov into (bad) jb and cmp pop push cwtl pop out xor pop adc adc jnp pop sbb mov cmp dec scas jmp and cwtl mov add fcoml xorl or pop lahf in xchg lret jp mov cmp xor popa sub into adc mov scas fldt adc movsb repz xor movsl fs sarl arpl pushf and add mov or mov adc cmpb out and pushf and push cmc (bad) pusha push add adc and fdivrl lret cwtl (bad) pusha xor mov sbb (bad) cmp xor movsb sahf (bad) lods rorb negl push sbb mov mov and nop pcmpeqb push cli sub inc icebp dec inc and in xchg sbb jae mov sub cmp movsb sarb lods out mov mov and lods and andl loope sbb into pop inc push jae adc lock aam cwtl sbb comiss test loope sub fwait je dec data16 call test push add out std loope xchg out mov xor sbb notb nop out adc push adcl ds mov ret jae sub shll sarl dec cltd cmp cmp pop ja (bad) jae xchg push adc dec push orl push fs inc pop push dec popa loopne dec sub mov sub insb push arpl cmp or lock mov js mov adc inc push adc mov pshufw xchg jb maxps out cmp push vmread push sbb fwait push ljmp (bad) int xlat jne or and js lods and jno inc inc cli and dec lret mov in jae das ret jle add cs jnp cmp and std iret cmp and add mov adc loopne mov roll cmp scas out cmpsl scas (bad) cmp pop fwait mov cmpsb add mov dec cwtl inc outsb cmpsl adc enter dec jb dec loop or sub lret mov mov jae inc sbb int ret jmp push push lea and or cmp into jne adc in sbb int3 cmp cmp cmpxchg add inc pop or jae push ljmp jno cmp add or fisubr shrd xor mov repz or loopne sub jecxz repnz test and orl and fldl je jne movsb (bad) stc lahf js test xor or xlat (bad) xor sub push imul sahf (bad) xchg pop addr16 inc adc pusha dec es jne push add or sub jne test add aaa mov cwtl lret rclb add inc sub bound insb sub aaa mov add icebp bound mov movsb and aam jne mov sub int3 xor inc and xchg jg addr16 inc jg dec sbb cmp sbb mov mov inc or xchg vmread push test test push sbb mov pop in bound jnp fsubs roll xlat mov in inc mov in cmp xchg jnp sbb adc out mov add in push xor (bad) sub xchg and jne testb xchg and out inc int3 adcl pop xchg lcall cmpsb xlat (bad) lds sar mov pop mov jo jno push add mov mov jmp lods call pop inc loope sub mov xor cmp and xor cmp test dec paddusb lds les (bad) mov mov je mov (bad) xchg rclb push add (bad) (bad) xlat mov or or (bad) xchg fnsave cli sbb (bad) jne int3 push insl pop fiadd mov iret cmp cmp icebp dec dec loope or adc and jae xor dec inc mov repnz jo test push xchg jmp adcl rcrl movsl xchg gs sbb cmp mov push add addr16 xchg and (bad) loope jp inc aad in xor imul xorl and insb and negl cwtl inc pop and pusha inc lock scas jnp and cltd sbb inc mov inc (bad) and imul insb jo jne cmp scas and adc add mov mov inc lods lock lds dec sub mov loopne mov lea mov jb or or lods add (bad) jg xor add mov adc mov mov shrd pusha lahf pusha sub mov xor fadd sbb enter cmp fs adc mov mov mov mov add test movsb ficomp shld fcompl lods push cmc mov scas repz adc and pop add negl lock xchg add mov mov ljmp shrl mov in mov rcrb shr icebp or cs cmp inc xchg add mov push imul lock sub xchg fsubrs orl imull cmp adc xchg mov fadds sbb xor cmp mov adcb sbb adc arpl mov mov (bad) dec xchg and out cs inc xor and adc lock mov lock test push lret mov and sub ja xor cmp cld seto pushf xchg data16 in fisttpll mov fidivl loope in cmp add call xor inc insl loop lds dec push or mov insb or popa (bad) xchg or mov mov ret push adc int out add adc jb ja sub jns sub loope std cmp popf jmp push lcall dec sub lods shlb sbb push cmp and inc pushf sbb xor (bad) sub push sbb dec ret or out mull jnp and and adc pop je (bad) sbb lock or inc push icebp mov jo,pn ret push shld mov inc fsubs insl and lock and test jecxz inc inc dec xor jmp cmp and test push xor push push sbb cmp xchg and sub das (bad) or or dec incl mov out add jp jl std add movsb adc dec and jo aad fs xchg jle add andl into test pop jb and add sbb inc cs cmc jl and add inc jle addl mov (bad) xchg cmp movsl loop xor sub mov xchg (bad) faddl ja cmp jl mov add cmc std mov mov notl lods ret and push inc (bad) lds push adcl mov mov xchg or cmp adc mov shrd xor jg pop roll shlb xor jne je (bad) int3 cmp cltd nop inc ds mov pusha shld popa js cmpsl add sbb jmp xchg aam pop test push xorl inc mov jo (bad) and sbb push pop mov ret inc jo xchg sar mov inc lret mov push mov mov or sbb test lret dec sbb mov mov xor push cwtl mov inc jge mov lods push mov add add mov and test (bad) xor test cmp mov lods and or add xchg or fwait into pop xchg pop add (bad) test mov movsb pop das pop mov outsl out addl dec xchg and add psraw or sbb xchg loope adc daa dec lods and das cmp (bad) insb adc or pop xor xor test mov jne cwtl xchg insb xchg je and repz cmp adc jne fnstenv cmp push mov cmp mov lods rolb push nop dec mov inc (bad) leave and adc push push push into sbb push lock enter dec sub bound mov (bad) jae loop pop mov pop or mov addl adc add cs pop xlat push add or out (bad) xchg push (bad) adc subl (bad) shlb jae pop mov xor inc cwtl xor and mov test pop xchg shr mov add iret sbb mov inc and add (bad) cmpsb xchg mov pop push inc enter xor or mov mov stos addr16 pop (bad) repz cmp sahf pop lret sbb adc xchg scas pop xchg sbb mov lock movsl and xchg jbe fildl add and test xchg add loopne out xchg xorl or xchg mov imul or scas jo jl dec orl cmp neg xor mov dec pusha sub test and xchg adc js (bad) jne mov push out pop aaa adcl cmc add mov xchg outsb fstpl sub xorl shrl jecxz dec std adc and decb add shrd mov mov adc push neg mov mov jo mov add addl (bad) or insb test mov cmp fildl or lods addl push inc and add jmp cmpsl push daa lret int3 or mov sbb sahf rorl (bad) xchg nop mov xor adc jmp test or mov lds xchg inc push mov add ja stos mov sub push out scas xor test mov (bad) xor xchg ljmp xchg sbb mov sarb test in and inc loopne out in inc lock mov xchg pusha leave (bad) out lahf jl in xor dec in jne cwtl cmp adcl xchg xchg ljmp mov int imul sub es js int call pop xor jo xor fsubrs movsl faddl push int3 cmp push shr pop (bad) xchg and mov das int sub (bad) xor push (bad) in adc or int lret hlt (bad) or sub fisttpll xor push push xor xor push leave out adc push call fwait inc mov icebp sub daa pop add and jl lahf scas add and push sbb insb push mov xlat loope xchg lods and (bad) or iret xor adc scas iret fwait push int3 lock cs push cmp xlat nop push scas add push or inc fs jnp inc sbb xor ror cwtl (bad) xor jo sbb lock cmpb iret adc scas adc fwait mov adc das dec sbb adc and add mov dec inc jne xor add sbb inc lea add lret add iret cltd sarb (bad) sbb jo lret or call pop xchg stos out pop xchg or mov jo add stc jg adc (bad) xor cmp test ja push mov fbstp and adc xor inc mov pushf xor add push shlb (bad) push call mov adc mov mov in shld shld mov int3 lds cmp jmp les mov jmp jmp mov add inc pushf (bad) mov cs lock sbb jae cs sub cs fsubl test jbe push cmpsb daa cmp bound xchg mov xchg mov or (bad) jne or ljmp outsl je mov mov push dec push inc divl mov mov jnp mov add sbb mov inc add jnp sbb inc dec and loope mov adc test push movsb pop and and xor fdivs jnp inc sbb mov inc sub lds mov das jnp,pn fdivl std call mov sbb (bad) xor sahf nopl sbb xchg insb or out ds ds mov ljmp out ret xchg xor xchg and xor gs rolw dec testl out cmp push xor lcall cmp movsb dec xor into jne inc xor inc push mov out sahf lret adc fild fnstenv loopne ja cmpsb shrd dec push cmp xor dec push cmp jl lods and inc xchg and test xchg and xor jl add or lock pop xchg jecxz or sbb cmp add and push pop rcll cmc push and xor jg jle mov rcrb in add roll inc mov cld inc add add (bad) jne lret add or les cmp mov in lds pusha add addl rol out mov out ja sbb hlt (bad) mov mov cwtl cmpsl cmp xchg sbb jp lret nop mov and ss popa inc hlt mov xchg cmp out mov or cmp or sub jae cmp hlt hlt cmp in shlb add mov ret fcoms inc lret xlat mov sbb das xlat insb loope dec loopne pushf push loope out xor call outsl stos aaa arpl mov adc mov xchg and pop lsl mov xor inc push out xchg add mov test stos js int3 lock fld sub (bad) sbb lods xor pop repz jae out push pushf and push lahf and ret ja dec xor xchg pop add lahf xchg mov js jo push xchg stos or xchg cmp inc test cmp add and fadds or add xor push lds mov adc hlt aam cmp adc lods scas and cmp cmp cmp mov sahf sub pop sbb inc lods mov jp cmp add mov loope adc adcl test cmp and jnp ljmp das out js,pn in inc dec jl and jb cmp sub pop popf in movsl outsb imulb in out test out and dec mov dec sub xchg stos jo mov mov (bad) xchg and and js mov inc pop dec add rol cmp lods and add add sahf ret (bad) cmp mov xor scas out inc mov lds out push jne push xor mov movsb xor sti sub mov sbb flds sbb sbbl inc cmp leave jne lods push xor push iret adc out mov mov shld (bad) fisttpl js out mov call repnz adc dec out sbb sbbb stc xlat jae jnp push pusha add cmp add jmp or sbb xchg addl xchg mov out jnp jne fs (bad) orb mov jge sbb jnp pushf and cmp sbb dec call cli push pop mov shll shrl jo dec mov cmpl das xchg popf pop push bound jae sbb adc mov stos inc adc mov dec cmp pushf aad lods (bad) adc lods lds mov out add push int3 cmp mov adc add mov imul mov xor mov sbb lcall sub adc and pushf (bad) adc repnz movsb jae fisub mov push pop inc and cwtl call sbb sub lea mov inc pop xchg mov or int3 loop pop push loopne adc xor xor cmp out (bad) jae push aad sbb mov test aaa xchg mov or es mov lcall sub stos or cmp or xchg cmpsb inc fwait dec sbb fiadd and jb pusha xor mov cmp subl adc mov cmp xor int pop and ficom stos sub jae,pt jnp loope dec fmull (bad) data16 fsub sub dec idivb loopne loope into cmp loope adc xchg push xchg sub jnp push xor add ret push loope ja mov ds invd and loopne mov (bad) jmp aaa test jne push iretw lock sub pop enter js enter or iret je xchg mov jmp mov push push push cld push loop negl jp dec inc nop and mov mov add push nop lret call pop fwait (bad) xchg and int add pop adc and jns jae in stc (bad) or dec lret push xchg and adc ret or adc and push in mov xorb and jecxz xchg sub sbb rcrl (bad) dec scas xchg xchg and pop mov lods shrb adc push mov lock and les jp xchg loope sbb mov mov js pop inc in push sahf in shrl test int loope sbb add in xor push adc lret sti jae jo inc jmp inc add jb and sahf cmp pusha jp ljmp rcl cmc stos mov (bad) sub add sti inc push xor sbb mov lcall scas insb mov shrd mov xor push jl insb push push pop outsb jnp push jne nop mov cwtl mov inc mov sub jne xchg pop out cltd lods (bad) sbb stos sub sub fisubr test dec push cmp xor ja je pusha shrd shrd push or rolb sbb xor adc pop push and (bad) xchg movsb sbb add mov aaa lods and mov loopne jnp xchg sbb lock inc xor xor add lret sub mov cmp pop or je xchg and sbb scas push add add insb and cs add std sbb pop sub and insb and xchg xchg and dec in adc (bad) fisttp add and push test push sbb dec mov add rcrb cmp and setno cltd and add mov aam inc sub push loope or cwtl shr or sbb pop and xor frstor out dec inc jg jg adc xorl jb notl popa repz repz sub enter and ja or inc in mull sti sub pop subps les in dec pop int add dec daa xchg leave cmp xor mov xor ds xlat lock pusha inc jle push negb mov mov add ja jge fs (bad) hlt dec (bad) ja add add mov jp push lods xor ret pusha mov push decl mov bound rorl into mov out mov shld mov loop or popa ficom push mov lahf test jl sbb dec cs xor mov je mov cmp or arpl and mov lahf sbb jmp xchg and xlat or mov adc iret mov pop pop adc mov (bad) pop add and lods fistpll xchg and iret adc sub sbb xchg pop pop or push iret pushf and jae mov xchg adc fcmovnbe xor adcb lock xchg mov and mov loopne (bad) jb in adc (bad) lock adc (bad) jne jle push add (bad) add (bad) lock push push je cli insb xor and ret xorl aad js dec push (bad) xor mov mov sbb into jle or jmp test add push out (bad) and sbb and adc jg adc shlb add mov push mov cmp cmpb ja or xor cltd pushf and adc repnz mov sbb ret jo push mov mov pop cmp (bad) xor jle cmpsb cwtl or ret add push jbe sub stos mov push outsb mov and rorb sbb push sub jg outsl push sbb push xor jl adc adc xchg test jb out push sub xchg out rorb add outsl iret outsl jne test call inc hlt push test outsl jo or pop fs lds out and cwtl cmp inc dec push mov pop pushf setno pop push mov add push fcmovnb inc add pop cmp cwtl or cmpl shlb fldt outsl jg jg jl jb fcmovu add xchg sbb sub xlat mov or adc sarb xor scas ret divb or insl dec (bad) xor adc mov (bad) jae mov cmp iret fdivs fsubr leave test lds mov rcll mov (bad) jne push cmc sbb dec mov rorl cmp xor and sbb ret pop and dec mov jnp or les sbb push clc call inc cs and enter fldenv xchg and adc push pushf xchg adc xor int3 cmp adc add mov cmovno sub xchg adc or shl dec push (bad) (bad) ss push sbb addr16 (bad) js js and jb cli xor fmul lds insl cmp repnz dec add and mov xor aam jo loope push bound rclb scas sbb aad lret insb add mov fisubl (bad) testb add sbb ja mov mov bound mov add and mov fnstsw out outsl fcomps faddl aas mov xor xor xor and dec (bad) adc fs push mov jb lds inc fnstsw add xchg test inc andb adc insl or push pop ret mov mov mov pop jmp sub jns rol push loope push push in adc lds int3 mov jb mov sbb lcall sbb lret bound mov push iret push adc push (bad) dec das add jnp push push xor lock jne out fildl hlt pand and aam add (bad) leave fistl cmp jbe pop in xchg add icebp sub test mov sbb adc xchg mov sarl jg (bad) mov or scas out insl mov lods and ja dec or fcompl fisttpll inc cltd popf xchg or add or push pop ror adc adc lcall mov loope into rorb cmp into push lock add add sbb fnstsw cmp cmp add push lock pushw mov push les (bad) jge pusha xor mov push cmp mov xor mov and jmp iret jne jmp sahf and inc push jmp adc add and mov xchg xchg jmp xor addr16 xchg push mov pop adc sbb insb jo dec add in pusha ljmp adc adc pop pop and test lcall xor jns rcrl das add jg and push pop inc insb loope jae (bad) out cmp jno bound mull into sbb les push sbb pusha js jmp add adc cmp cli jmp rorl jmp iret inc xor shrd and sahf test jl nopl adc mov rclb sub fnop add repnz add (bad) xor clc adc outsb mov mov iret andb xchg lret nop inc mov fadds dec stos call add push negl popa insl and and testb adc daa mov mov cmp (bad) mov mov pop push xor sti cmp movsb lds lds and mov mov jg sub xor mov pop sbb push xor test push pop jg,pt mov les push jae jg popa fmull add aaa inc or cwtl lcall subl push loope hlt pop pop int3 sbb iret dec (bad) cmp jle and jo and int adc cmp add jmp sbb push out inc int3 outsl jg jg movq or iretw mov fwait sbb mov idivb xchg and scas add jno nop addl add test push mov mov (bad) test (bad) pusha inc dec mov push mov mov (bad) jae mov or in cmpsl dec in (bad) rol push mov ja insb push or jo push out xlat loope mov movsb cmp (bad) into jne das jp push jp loopne addr16 push add ret lret xchg ljmp adc xor jl fisubr cmp mov mov push std rolb inc and aam out adc mov cmp push and inc rclb pushl dec dec and adc add sub scas jp and outsl pop rol (bad) sti xor sbb inc test (bad) fdivr (bad) lock test xchg and dec call jl jl pop out gs dec cwtl jp and test mov and icebp xchg jnp mov add sbb push add mov fadds mov push scas push pop add mov insb ret jo ret mov inc daa inc inc xor adc cmpb pop fdivl test scas fnstenv aaa xor lock cli mov shld mov mov sbb push dec mov or and roll shll sbb sbb sbb inc push sahf and aam mov popf loopne (bad) or sbb mov mov int add (bad) enter enter cmp adc push add pop jae add xchg inc xchg or fcoml xchg and lret jo mov (bad) adc sahf addl lret lds call sub mov cmp push hlt inc movsb cwtl push dec pop out lcall push xchg xchg pop (bad) xor loope add repz (bad) xor fmul rcll aam ds orb or fsubrs add xorb pop xor or push xchg lods push in mov dec movsl mov movsb das sbb push and adc in std daa cmc jb xchg out jb out or push es mov mov aad mov test sahf lods sub fildll or insb movsb cmp jnp mov bound inc mov xchg and push xor sub xchg data16 scas jmp int3 pop mov mov pushf xor lret scas lcall outsl mov (bad) ss (bad) hlt jo fucompp xchg es cs out adc cltd sub mov sarl enter push int3 or xor pop add jl pop rclb adc jne cmpsb das adc push sarb and (bad) sub insb ret mov loopne mov sub jo jb sub xor (bad) jl cs nop outsb out mov test sti add mov mov xor (bad) out scas mov mov pop and into add jmp sbb jle mov (bad) lea mov sahf stos mov call inc inc mov ret mov rcl je test aaa or enter or inc xor pop ja out and mov cmp cltd (bad) pop adc call push les mov xor or adc sbb sbb sub dec cmp mov loope dec test sub mov push add fimull mov addb and mov (bad) pop and dec sbb mov sbb xchg push and or psrad insb xor mov push add (bad) sbb imul or cld xchg xor into and lock call mov cmp and push scas and test push jg add adc imul dec mov mov xor mov xor xor aaa and and sub or push mov cmp xor and xchg shr fnstsw and and add cmpb adc cmp add dec jne roll jno and incl and or pop iret mov dec or sti pop inc fldl mov dec mov mov xchg mov adc (bad) mulb das pop push lods xchg outsl pop outsl adc rol mov movaps jge mov sub je js push push inc add xor add lret add insb push cmp test lea rcrb je test or stos lea mov outsl add movaps inc sbb sub sub ficomp cmp data16 mov sub add movb mov scas pushf cmp or or test incl cli add add mov shl mov lock neg and or cmp mov test jle roll pusha (bad) loop pusha loop adc and loope mov pop mov lds mov adc or adc call (bad) mov add jp imul fist xor add cmpb add adc clc and xchg in pop jmp and cli call and mov xor sub stos add push inc test dec push je fwait test loopne push sbb mov xorb je cmp mov out test add xor pop xlat push inc dec in dec stos fadds popa mov repz into xor in sbb jo je daa stos xchg mov and inc in push pop dec adc pop orl and cmp out push mov movd adc xor xchg mov out subps movhps out out out push fist dec and imul sub inc and inc movhps sub cmc movhps xor jbe add and jp sub add or stos adc dec push das add fldl sbb pop mov sub add orl cmova sub add test je movzbl test push je les jl (bad) incl adcl movaps stos pop add movsb mov cwtl push ja push fisttpll repz inc add or (bad) notl adc call pop or neg std mov mov or ret add cmp out adc decb add or adc mov out ds mov je cmp (bad) pop pushf aas decl add test add fldl cmp sub lea push ljmp cmp out shr call loope cli ljmp repz cld psrld dec add mov rcrb push mov add jge inc lock and or or cld adc mov inc and mov sub mov out jle and sub lret (bad) dec (bad) xor lea shr mov mov adc and cmp jae je (bad) xor and je xor jno cmp jns mov decl xor or std (bad) fadd std test mov pop or xor or adc adc dec (bad) xor sbb sbb add add cld and (bad) jb jmp mov lea jl and dec xchg insb stc and sti call add incl pop and sub adc lret push inc xchg (bad) mov add xchg add icebp fistp bound jmp incl decl jg xchg fs sub test movb je xor mov lahf imul aas or mov pop add incl xchg jne cmp and sub add mov out cmp jb lea mov (bad) and push xchg add loop add mov leave je movsl aas sar cmpsb adc add push adc mov cmp sub xchg sbb (bad) lock cmp add rcl rcl lea mov test addl jge dec (bad) jb jmp aas subb mov ja mov jmp fimull test lea nop add mov incl push and call jmp xor jmp or add push push xor or or add clc mov call add push (bad) jg jbe mov dec and lea cmpsb fnstsw push lea out cmp pop call into aas stos aad add scas lea jg fmuls xor inc pop mov call cmp mov das sub or adc pop mov iret add hlt and loope icebp out call jne add clc (bad) decl es adc pop pop or lea jmp pop or jg or adc adc sbb pop js or shlb je and inc inc es adc fnstsw add js mov mov pop cwtl int test pop cs fwait dec loopne aam dec adc mov push push es push push add lock xor mov and mov aad pop stos out or lea mov fsubl cmp iret mov out mov adc arpl jmp orl xchg out mov sbb or pushf or je push orl orb lock jbe adc jae sub fisubl add decl call imul outsl lcall push push clc enter jp test pop xlat and es into lds push ss cs sarb out pusha or sub cmp mul fiadd mov jo dec mov jg inc pmaxsw or push pop push mov jl inc cmp sbb and inc cs scas imul and sub sub add mov loope mov adc push mov sbb mov jo movl or inc mov inc shl lds ja lcall loop jo fbstp sub movzbl loopew out push (bad) jne add cmp inc cmp inc pop push sahf js mov cli loope sbb ja xchg jb ret jmp mov lea mov push pop cld sub (bad) loopne sahf mov stc sahf jb mov sbb pushl sti jo or sbb adc sarl inc (bad) mov xor lea mov (bad) sti lea mov sub pop push jge fild movl cmp jb jge mov adc lea push std pop inc adc jae test je scas sub dec (bad) aas cmp je inc (bad) fild incb push je mov mov add add cmp jae lcall cmp or adc mov (bad) and xlat jb push jmp xor pop fldl test add jle testl dec rdtsc shlb pop (bad) adc cmp seto mov add mov jmp pop arpl out loopne push jmp add or xchg out in inc push int3 mov push fcoms pop mov jnp inc cmc and ret jg in sbb add test pushl mulb lds add or mov call sbb data16 jo pop imul mov outsl cwtl sbb pusha roll lock xchg dec push pshufd fsubrs cltd movd adc call roll fisttpl lock movzbl sub mov movzbl shr sbb and xor xor dec add fcmovb ljmp out cli mov sbb dec add ljmp mov shr (bad) out out popf test aaa movzbl loope lret mov inc and inc dec rolb scas stos ja add mov fwait add jae std aaa cmp mov mov xor inc jl ss or movzbl (bad) imul and adc adc scas mov movzbl xor mov out adc lock fs add punpckldq add pop pop punpcklqdq pop pop add xorb iret ffree pop ss push aas sar in enter dec or movzbl movzbl (bad) outsl js push sbb add fmuls mov movzbl sbb mov push pop mov ljmp movzbl shl or sub idivl shl int mov sbb arpl pusha or jecxz or movzbl (bad) (bad) jecxz ror rcrb dec fimull xor ror out aad pop cld or out cs icebp loop push aad add repz fdivs dec test rcpps fcmovu scas fildl (bad) std outsl and into and mov sub push ret sub (bad) adc dec or add inc mov lret leave sbb mov shr pslldq inc dec or sbb xor inc daa test add jl or or pop out lock repz or and (bad) or ljmp jae in lret mov or jo hlt out int3 jp adc (bad) out lods outsl rcrl stos sbb jo stos sub fnsave popf sub outsl (bad) movaps or xor and out fnsave je insl out icebp fs push (bad) push movaps pop fdivrp sbb jne jle jle shr rorl mov movzbl add mov push jo std push shufps enter pop shl dec sbb or and dec fldenv xor or adc push inc cwtl popa and add add cmp enter adc dec lcall (bad) stc clc faddl jmp lcall sti xchg lock out push out cli adc inc loope loopnew call mov dec add xchg adc std inc int sub or adc jmp out jmp mov push fnsave test repz repnz add cmp push push incb js xor push test and test orl scas sbb push pop bound out je or (bad) push outsl adc xchg mov jae outsl cmpsb popf cmpsl clc xchg out movsl jge (bad) call jne loopne mov jo mov lock lock loop dec outsl faddl mov push push jo popa inc aaa or arpl jle push push inc xlat or adc push xor lret lret dec or push div push xor mov cmp leave xchg (bad) pmaxsw pusha jb (bad) icebp or fadds into push cli push sbb mov cmpsb scas out adc inc adc (bad) divl ficom (bad) call mov (bad) imul push and inc aam sub add mov or out aam push or out xlat push ljmp push add call aam fiadd add jge cs mov outsl xor mov ret cmp into add fsubs ret jne jo repz mov jnp sbb fucomip arpl cmp call cmpsb mov cwtl addr16 aam mov inc jae aad jp iret cmp pop out gs dec add cmc sub movaps inc add xorl repz xlat push out or xor jge sbb ss fld (bad) sahf mov adc outsl mov testb sbb mov jne push shl adc dec sbb fldt jo in dec lods sti jb xor arpl mov out loope shl int3 in in outsl negl ds sub fnsave push mov shrb or cmp mov sti jmp cmpsb jo shrb inc lds fwait ret je (bad) jmp xchg jo xchg cmp addl nop adc (bad) outsl bound fsubrl icebp rorl sbb out call insb call fsubl outsl mov jmp imul loopne int3 jb inc inc mov pop add nop add mov push test mov test dec lock cmp test dec mulb cmp xor xchg in inc sub (bad) movsb adc das push int xchg mov pop sbb xchg push mov mov or mov or inc sub pop movsb loop mov jbe into cmp je insb fs jle pusha ljmp cmp push inc add cmp cmp fcomp pop xchg xor cmp and sbb add or daa daa addr16 cmp jl je fs daa daa daa pop push dec inc cmp jnp and aaa push je insb push cmp cmp fs push dec fnop xor and xlat push insb or fs pop push dec (bad) sahf arpl inc jns push je daa daa daa and push adc dec inc jl fdivs aaa push jbe insb adc leave leave fldenv push dec (bad) xor inc cs arpl insb adc push pop outsl call and jne inc inc mov decl sub movaps movaps movaps movaps out movaps leave ret mov jmp outsl push push mov push sub movl add lea and add cld sbb add call icebp fistp lock lea mov lahf adc push addr16 jns inc (bad) sti ja movsl mov adc mov or std cld mov call cld mov call lock add out xor jp add and add cmp mov idivb inc stc inc mov call rolb loop pop pop pop xor jmp jnp shr pop prefetcht0 cwtl sbb (bad) test jns cmp pop pop pushaw sub dec pusha outsl mov out clc nop test pop pop lret pop out pusha sbb sarl clc pusha lods push addl cmc jo incb mov lea dec loopne and xor sub sub pop add mull jp int3 or inc sbb xor adcl and iret push or xor pop xchg daa add adc sahf arpl push mov sbb outsl push iret (bad) mov push addl iret testb dec roll movaps movaps push jle decl sub movaps in lock jne bound je fucomip mov in sub cmp jo jne mov mov mov movl cs mov je,pt adc sub (bad) decl call mov push xor mov xor mov mov xor pop add mov xor and pop std mov xor push insb mov xor xor mov mov xor adc out lcall movd mov xchg add test scas cmp xor or out sub mov pop add clc stos xor cwtl xor fnop (bad) fcomp push out out lret and or jne push or lret pop add add ret mov mov mov adc insb jle mull add push push andps jle lds adc mov mov add loopne add dec and adc inc mov xor mov pop out cmp push and push cs push out outsb jle pop cmp out mov stos ljmp enter jp adc push cmp adc (bad) loope pop jl sub jle xchg out push pushl adc jno,pt mov and rcr fild xor sub ja jb push cmp mov ja dec ja xor xor add adc adc fiaddl push ja adc aaa add xor mov sub clc or enter mov lcall (bad) xor and xor subl rolb inc aam (bad) mov pop and insl loop dec and xor and add std or sub decl mov push push je sbb jno repz lea jmp xor or or jg mov dec mov cs rclb pop xor scas dec adc inc jl mov (bad) call lea add adc mov and call fsubs mov mov mov inc call fwait sbb bnd xor das loopne mov xor xor mov xchg sets jp mov shrl test jne xchg mov loopne cld mov dec incl je js dec sub lahf cmp adc lahf sbb push sub cmp xor xor je inc sbb inc cmp pushf inc movsb push adc (bad) sbb push cmp pop and and insb sub mov mov jb fidivrl sbb xchg in and push xor xlat cltd mov xor cmp push jg adc int sub and es pop sbb inc cli js loop cli arpl outsl or daa or inc and mov mov loopne adc and movaps movaps adc outsl sbb add rcll cltd movb aam jae push sbb push aam sub popf and pmaxub or addps inc cwtl dec ljmp aam adcl cltd (bad) fcoms dec dec mov mov add adc mov xor jb push add inc push cmp ja loope xchg test push inc roll dec dec lahf and and pop dec pop xchg lcall push add pusha dec lahf jl push sbbb popf xor mov adcl cmpsl aam ret into shlb and daa xor adc jo out mov mov xor pushf sub or inc pop sbb fs xor ss or (bad) imul pcmpgtb loope shrl pop inc add and cmp pop mov xor mov cmc pop pop ret loope mov bound pop inc push (bad) or sub sub clc aad or pop loope add outsl inc dec pop push inc enter loope inc orl add push adc popa xchg rolb pop xchg cmp lds xor mov jo xchg add inc add ds xor xor out lret jne je and aaa mov call mov and inc mov push mov push mov cmpsl and fisttpll cmp or (bad) movzbl and inc and es pop and and call push or movzbl mov (bad) out incb loope mov sbb xchg mov scas mov lahf adc adc push or adc or inc cmp scas add inc xor inc scas mov in and hlt sbb sub inc mov sub les cmc push and (bad) adc or mov scas sbb test and mov aas scas sysenter test push and or sub or inc xor mov rolb inc inc mov cmp fwait dec mov mov lds xorb or add test add lea mov jbe mov mov mov and mov adc test dec and sub inc cmp dec sub and push pinsrw fsubr rcl mov and out mov add inc jg xor and data16 add ds adc adc adc pop add outsl inc pop lds xchg push dec push in mov stos push xor cmp inc pop sub add in adc les leave adc test adc jl sbb cmp sbb jmp iret add (bad) loopne fisubl adc add call inc cwtl jo lea pshufd mov cmc push movd jle dec or out test aam or and xchg and sarb fst jne cli movzbl or sbb cld es jle and pop mov jo loope lret xlat lds jp (bad) or push cmp or test or jge mov xlat inc mov sub repnz mov aam sbb je sbb dec add cwtl lea testb adc or loopne or push enter and mov lods cli fstl mov jo inc out sbb test fisubl push mov jne mov mov or xor js or jle xchg int3 orb mov jo mov mov movzbl sub int3 jns out xor iret shr mov notl mov movzbl fldenv movd lret cmp leave imul mov mov or mov dec mov sbb adc cmp je movzbl inc push loope push mov pop and shr sbb dec add sbb lea test sbb cli mov sbb mov xor add inc jl in (bad) xchg punpckldq add jno jp or mov jo imul repz scas jmp xchg sbb movzbl xor pop mov mov lret int rcrb mov rcrl push adc lea dec aas xchg mov (bad) hlt cltd roll out xchg and je fld jmp add xchg fs test jae lds divl mov push shr (bad) lock cmp mov shl jb jmp pushf sbb jg and movsb jo aaa leave push outsb jno cmp xor nop sahf fwait dec and jg movsb cmp mov cmc inc js xor (bad) call and push pop xor test dec pop dec push add insl lret shr daa mov and clc pop jb iret sbb xchg or imul sbb rsqrtps outsb (bad) loope add fcmovnb pop adc add mov ret mov push pop and push push js into loope mov jno jb (bad) dec and mov shlb mov push rorl push xchg outsl test and add or sbb mov inc dec sbb dec inc testl or sbb fxch mov jge add loope dec cmpsb dec add std add mov mov mov in or (bad) and or cmp jecxz push add fsubrl dec popa inc inc js dec stos dec mov fcmovb xchg sbb and jo pusha add dec aaa and addb or dec lock test pusha inc cwtl xor aas outsb in push cmp repnz add adc ret sub enter pop (bad) loope inc push aaa adc jl dec ret xchg xchg lahf in push lds pop inc in leave adcl jg dec movsb add rclb out sub jl movsl test add pusha dec inc les ret xor push push sbb divb and xor ret or pop add ret and xchg jnp andl lret jb in (bad) pusha xor dec out adc cmova mov ljmp fdiv mov push movzbl test cmp dec rorb mov idivl xchg popa pusha daa fidivrl pop ljmp mov inc imul or js jb mov add sub push rol dec dec ffree mov je mov xor mov or and xchg xlat xor jno xor mov inc pop add or into mov push add out dec mov ds aam adc pushf and push int3 inc outsb inc (bad) mov or push jo sub or jb test xchg jle jecxz lock jge jmp and mov movzbl ljmp xor aas mov es shr movzbl sbb pop sbb daa cmc call adc incl (bad) xor or jg sahf inc aas les sarl movzbl push or xlat cmpb push adc lods push outsl mov (bad) adc movzbl xchg adc pop push mov jnp xchg xor into cmp cltd cmp data16 mov jo push cltd inc fcmovbe sub mov test bound inc xor push sub add pop loop sbb fisttpl insb out dec repnz lret pop in sbb ja outsl insb and mov in cmp sbb pop repnz or sbb pop bound pop ljmp pusha andl xor leave mov inc ljmp and aas das pop add add and lcall sub xchg call or mov ljmp xchg jmp or pop (bad) xor xor insb (bad) xor sub scas add sbb push or fnsave stos mov popa inc mov xlat xchg jle pop addr16 jle sbb jae loopne insl jmp adc mov push aad fneni(8087 pop mov popa inc xor testl jmp ficoml cmp cmp insb inc sub inc mov adc sub (bad) pop mov subb or loopne push movzbl mov and xchg xlat rclb jl push int pushl sub jp arpl divl inc pop fsub or jb jo pop (bad) jle ret cmp or pop repz or add repnz test fist loop inc jo or xchg xor mov jo mov and and cwtl adc xor mov or aad inc bnd in (bad) rcll add mov push rcl ret mov inc add iret mov rcl lock mov das xor aam xchg arpl fadd jo pop xchg bound add das pop inc dec jns aaa loope inc dec inc insb (bad) fisubl adcl fdivs rclb dec add and andl mov int3 lcall call xor inc add fsubs lcall out ljmp jo adc pop mov jle xor or call dec xchg and shrb cmp loopne mov push das pushf (bad) xor call inc aas inc jnp sub adc inc add add icebp ret jle fsubrs ret adc cmp outsb and sbb push rcll fcoms push or pop mov cwtl jae or js xchg jo inc push sub lret dec jb psrld sbb push aaa stos mov and inc and pop sti dec dec push mov or cltd mov xchg nop ret rclb inc cwtl mov pop inc adc (bad) mov es outsb cmp mov xchg mov (bad) enter add mov mov mov inc clc jo cli xchg ret pop mov dec mov (bad) or inc daa inc jp dec sub or mov rcrl jecxz sub mov test cmp xchg push (bad) out cmp xor sbb test xor add bound pusha (bad) jecxz or push xor or call mov or sub stc in call mov push arpl dec cmp cmpsb sbb hlt clc int jo cmp dec sbb add jo popa sarb add ffree ret repz sbb (bad) mov (bad) jae or or neg cmc cmpb out pop cwtl jnp pop (bad) cmp or test jo add fwait andl dec xor xchg pusha lds jle jle test les mov fadd int lods movsb and mov pop and loopne fadd cmc (bad) mov cmp mov aaa (bad) dec lods or mov dec out add out jl or ret pop mov xchg inc push or rcrb test adc sbb sub loope sub inc mov inc dec sbb ss jne pushf and mov es (bad) sti stc movzbl adc adc inc adc adc jg sbbb adc popa sbb cmp push xchg sub mov aas out loope (bad) movzbl inc cwtl outsl popf ret mov and mov adc push mov stos pop iret lods sbb out sbb dec xchg fsubrl xchg or fidivl or add fldenv lret xchg adc out (bad) pusha mov fwait sbb mov pop movsb cwtl jecxz xchg dec jae xor fcoms sbb xchg fwait xor xchg shll xchg popa and pusha inc dec ret out adc insb es xor loopne test or xor pop dec xchg cmp data16 sub arpl pop adc mov idivb jbe pusha into int push dec dec xchg js out sbb add lods push ret add cltd int dec outsl fadd push mov ljmp movzbl push std outsb and xor (bad) insl adc push mov mov and or dec inc stos daa int3 mov dec popf int xchg jle test mov sub jle jns jne gs stos jno sahf xchg mov xlat ss xchg mov movsb dec mov dec fisttpll xor mov lods xor adc mov inc (bad) (bad) std mov js adc and dec mov push (bad) jo ljmp inc ret and pusha sub push jle and mov cltd mov inc mov dec inc cmp test test or fldt (bad) and enter adc fcompl sub push outsb das mov loope cli std aaa adc popa les mov pop and pushf pop ds pop (bad) dec inc push xchg push adc sbb push xchg out mov adc xchg popa xchg xor push xchg pusha mov je lods outsb push cmp add or push outsb fcoml fmul (bad) or popa xchg test dec movsl in or or orl xor dec pop xor pop lret jge push inc adc push and leave enter ucomiss ja cwtl hlt rol mov rcrb aam dec pusha sbb dec fsubrs (bad) mov (bad) lock popa mov adc jmp xor and test notb mov imul lock sub inc ss cmp or stos dec cmp sbb and xor or mov or mov or es je xor cmp pop dec xchg and es mov lret pop cmp lcall addr16 dec aas xchg jle mov test fstsw jnp imul and insb dec loop out xor arpl gs mov popa push outsl fs popa popa rcrl ficom pop cmp pop or fwait cmp pop mov cwtd nop cs push int3 push lods lods mov or rcl pop or xchg inc mov shlb xchg (bad) dec and hlt mov add mov outsw fs jnp gs cmp orb test ficom outsw cmp ss ret dec cmp or dec and ss mov es xor or mov push mov mov xchg mov ljmp push fldt lret adc arpl bswap popf xchg out inc les mov stos cmp xchg mov das cld push and ss or pushf cmp ret dec or mov mov in mov hlt and (bad) jge mov sbb or sub jae dec mov pusha outsl inc ror sbb push fstl and movzbl xchg popa into push dec inc adc lock rorl mov mov inc adc mov push xor jae loopne std or mov dec adc nop inc (bad) movzbl sbb lock sti lcall leave add or outsb push idiv rorl adc and in imul mov (bad) repnz inc and jmp inc out ret lret dec inc cmp shlb xchg pop cmp lds xchg enter (bad) and pushf movzbl test lods cmp out sbb mov adc (bad) push inc mov mov push rorb rorl ret incl movzbl mov mov or decl (bad) or addl (bad) mov outsb jge adc (bad) jne loop or xor subl and sbb arpl jno sahf test fmull mov sbb rorb inc ret adc (bad) add xor cmp mov pusha es jg test movl add dec inc xchg (bad) (bad) fsub mov cmp fidivl mov ret and insl loop in out mov dec add repnz adc mov xor negl mov sbb mov jo mov push test (bad) daa mov test mov sbb inc add xor push sbb mov je movzbl pop cmp lock sbb dec or (bad) pushf int3 enter addr16 or dec int add adc jle icebp or or mov sbb fcmovnu insb ret adc loope mov out ret or ret popa (bad) imul xchg or lods (bad) outsl das loop ret mov les jnp jne test test (bad) jne jne mov adc les aam jge inc adc dec jge das and push jge js xchg mov insb es es mov pushf cmp sbb stos sti mov adc sub insb cwtl out inc sbb (bad) jno add lock loopne inc sbb mov out xchg adc cmp xor add mov jns mov cli mov or lock ljmp pushw inc cmp out imul les cwtl xchg xchg dec jp sbb mov adc outsb push in cs xchg ret or adc lcall lods pushw cmp and pusha pop (bad) mov sahf sub sahf and mov and dec fs pusha cmp and inc test add mov inc ret cli push and sub inc outsb pushf scas outsb and outsb and pop popa outsb movsb push add adc loope,pn gs sbb leave jo les xchg fisttpll cs inc mov or sbbb mov test dec fwait in daa xchg mov imul ja stos sbb ret fmull and aas orb push sbb fsubrl (bad) mov outsb xor out jnp or mov add inc xchg mov shrl clc inc pushf xor mov movsb or mov sbb xor dec hlt add pushf cmp lock or push pop (bad) mov cmpsl fsubrl sbb jo je mov add (bad) mov (bad) enter adc rorb push or pop sub or mov insb pop cld xchg mov aaa push dec or mov inc inc lods sbb outsl push inc es (bad) jae xor mov adc mov inc cmp inc test ljmp push int3 pop dec js (bad) adc into adc test mov xor les adc adc call mov sub push add jne mov stc (bad) call sub add ret xor xor xchg lods ja pop jnp test adc adc push notl jmp and mov dec jl add and shl jnp adc cmp mov push inc out popa out push push inc loope ret dec js pushf mov test test jo mov xchg clc dec xor lods fwait sbb sbb stos test sbb mov in std or insb hlt (bad) pusha cmp call sub sub jbe and cmpsb push cmpsb loopne push jp sbb out mov and jbe inc xor sbb pop xor movsl negl pop sub xor push mov jg jg popa in aad mov add xchg lock test xchg pop add sahf and cmp and (bad) sbbl sbb mov cmp ljmp adc push dec jbe sub push arpl in clc jmp ja shrl jbe or push pop adc and addr16 sbb dec and push iret loopne sub inc adc adc test cmp push adc data16 cmp jbe dec loopne pop dec jne ret adc insl cltd pushf jecxz test inc popa cmpsb adc lret and cmp and xor inc vunpcklps push mov movsb mov jl in mov ret stc test mov fmull sub inc js push adc inc pusha js lock dec and or into imul rcr jne dec sub dec inc inc push test bound and mov jmp imul xor aaa xor and les and popf je push sbb mov mov mov jne cmp push bound add lock pushf js ret ret js js push (bad) adc out push cmp sub or sbb adc and movsl test jnp pusha out jne dec sub dec fsubrp sbb nop and xchg popa outsb das fs dec js mov test ficomp push test test addr16 xchg xor ss test dec lret das mov outsl shrb (bad) call and push nop (bad) loope fisub pop mov out push adc adc adc jae push inc adc ret out sub (bad) jnp inc test jb sub jb insb dec int push sub adc cwtl xchg xor or adc cmp mov aas push and xchg test xor sti or movzbl adc jae dec rorl xchg sbb cmp mov into imul dec adc pop call xchg icebp xor cmc ljmp add mov imul add mulb movzbl mov sub movzbl pop add mov loopne aas dec mov shr aas mov stos or mov movsl jmp sbb jbe mov push sub sub sub dec or pusha adc and cs sbb int iret enter pop call ret popa inc push push lret out sbb (bad) adc push dec call mov add icebp call daa mov outsl dec call enter cmp call ljmp push xchg push (bad) call push xor sarb adc test call das or call cmp fdivrs adc push fsubr cmpsb push adc push fsubr xchg adc das fsubr push (bad) testl jecxz dec sbb jae xor mov mov push push aaa mov add fsubr adc cmp and das mulb pop dec push fdivrs sbb call call enter fsubr cwtl push fldcw or mov call fcomps adc push push into inc loope popf adc (bad) mov lret orb jns popa nop movaps cs mov mov inc and out or lcall movaps movaps movaps movaps movaps or mov ja inc adc xchg xchg add push out mov add or xchg mov inc movsb or popa adc and mov xor mov pop test fadds add js loopne push jnp inc add (bad) inc mov andb sti push bound xor add adc bound and push fnsave jnp pusha mov or inc dec lcall lods bound imul in cmp and rcrb mov mov sub sbb nop or adc add (bad) adc mov loope sub xchg lcall in adc fistpl adc cmp test or sub pshufw add add add bound imul pop cmc sbb cwtl (bad) bound movd add push mov adc jo inc mov pop jecxz adc mov jmp jle psubd pop mov or xlat sbb shrl movsb cs cmpb push jb ja into add or mov add test push dec pop ljmp cmp mov push or movl orl (bad) call push xchg jo rorb push add outsb xchg test xchg inc pop adc mov daa rclb sbb add orb dec cmp xor lret movzbl into ja adc lds and or or rorl fmuls adc jge push nop fsubs cmp push xor movzbl orl imul and or push insb std mov mov jne xchg push ss sbb in arpl ja mov add sahf mov push adc push cmp or sub or push pcmpeqw dec andb xchg nop fisttpll mov dec inc inc outsb movsb shr cmc and push push cmp cmp bound lock and dec bound push (bad) call out pusha add add push out test enterw test sbb and pop sub outsb in data16 or and pop dec add push xor sbb jo jecxz pop bound mov push data16 rclb ljmp movsb shll adc xchg adc test sahf cmp sti cmp adc in add lret icebp xchg inc or xchg cmpsb push mov loopne xor cmp dec jecxz cli xor addl adc lds dec sbb lret mov loopne push add dec adc (bad) movl std push add (bad) push les adc into stos push add test cmp subl cmp aam or test jno lods aas (bad) cmc inc xor mov ret loopne and xchg xor add bound popa loopne push cmp and movsb outsl andl lods jo adc mov pop mov mov sub pusha aaa push mov out fcoms ud2 js in roll pop push cmp cltd xchg call xor roll and shr sbb pop add pushf test (bad) pop cwtl jo or and enter xchg mull xor pop push das pop inc mov js fdivl mov or test (bad) jo mov fsub stos mov enter mov ja int imul xor mov test dec nop xchg and cmp jge in mov sbb mov rcr add or and fmull das or lock pop dec sbb test or cmp and cmc repnz cmp and js adc iret ret sbb inc loopne (bad) or je inc arpl call push lods mov ret mov inc mov mov mov (bad) pusha and sbb les mov sub lret add test (bad) xchg mov pop cmp xchg les stos push cmp cli xlat or jae adc outsl fwait mov mov or fdivrl lock sub push push rol sbb or (bad) call dec push out roll mov add mov adc dec cmp js or push dec mov inc jo das or fsubp lods in pusha dec add or sub test or dec adc dec dec add push inc xchg mov aam inc push or das test cli xchg ret xor dec pop dec inc push xchg lods mov xor mov dec pusha dec pop les adc adc or xor dec jmp pusha js dec mov repz orl ljmp dec pop dec or dec sub push and outsl or dec adc and test push adc jae and or nop rol and bound sub mov (bad) or and mov adc or jo (bad) dec popa cmp addl dec (bad) test dec jecxz pusha mov (bad) test xchg loopne pop or fidiv add test daa nop adc loope xchg fwait test mov dec in je jo mov loope dec pop and inc test jecxz lahf xchg adc jo xchg pusha inc xor bound cmp jo xor sub and (bad) jo mov adcl adc mov mov gs enter and cmpsb in enter adc mov push add push cs or jecxz pop push jne mulb push ret xor movl test mov mov sbb or inc adc mov int cmp call mov and enter jmp and sbb fiaddl fcoms dec jle mov jmp les cmc adc lret (bad) mov sub sub and inc movsl cmp or or pop or inc push xchg mov enter mov mov ret out mov insb pusha mov push and xchg mov add add inc stc dec dec jne pop pop ss out cmc outsl add or add mov xor mov pop call clc stos xchg gs push imull push (bad) push arpl insb and mov xchg jae push lods jo sti push sbb add idivl sub mov in (bad) hlt xor cmp mov mov xor pmaxsw xchg jo dec cmp (bad) mov lret or cmp mov pop int3 jg jp and fdivrp or xchg or mov int3 add insb and ljmp outsb or mov (bad) lds inc cs jb add inc and push push out adc mov adc cld fildl push xchg bound fisub adc pop mov popa fs hlt pop cli inc icebp push add and cmp inc cmp and xchg andb or pop test cs adc repz cmp mov fisub dec orl xor xlat jecxz rol dec out repnz (bad) add fisttpll push mov mov movzbl sbb inc or jmp inc inc movzbl in popf cmpb cmp adc sarl decl add hlt cmp dec into nop jle cmp test scas cmp push idiv shr jp adc shr adc loope dec rorb push (bad) les adc sahf dec sbb pusha pop sub jnp lret mov add mov mov and xor adc adc pusha dec xchg xchg sub dec cmpsl xchg dec cmp inc mov inc mov rorl bound das and jns jns adc test pop xchg adc add xchg es loope inc sub xchg sub lock dec lcall or or lret popf push lcall inc and xor js movl rcll or xchg dec xchg xchg sub test dec sbb sub jae adcl lock test adc inc add mov mov dec and inc xchg sbb xor xchg mov pusha pop and xchg xor or cmp and icebp jne (bad) xor xor cmp mov xchg nop dec fiaddl xchg add iret (bad) mov sub adc sub leave pop rol daa cmp xor cmp das popf or movsb push fidivl adc jo push or and ficom cs or push loopne inc sbb cmp mov loope sbb add push sub testb sahf lds outsl pop call fwait sarl push cmpsb call jnp adc sbb cmp (bad) push mov sbb adc jle call adc and call and jbe call lds test push aad push sbb add cmc int3 lock negl pop aaa sub outsl movsb or xor cmp imul jo pop ficompl enter add adc and xchg push mov or inc frstor bound mov and push adc jbe aad mov mov lods pushf mov mov aaa pushaw ss jo pavgb pusha jo pushf mov mov gs cmp pop decl mov cmp rorb jo stos rcrl jge sub jle std sbb sar inc pusha pop mov dec (bad) je push adc sbbb jo stos sbb push jle cmp push xchg pop xor mov mull xchg inc mov rorl ja xchg test and push roll leave xchg test mov lret push sar gs rcr jns fildll and jmp repz inc rorb pop outsb movsb xor mov cwtl or mov test (bad) ljmp (bad) insl mov (bad) fisubrl inc int3 sbb pop movsb outsb adc jg push pop lods cmpsb (bad) cmc (bad) mov fcomp push mull insb out hlt mov mov pusha testl pop jle dec pop ror ret dec jmp fisttpll (bad) adc cmovge mov hlt pop cmp adc (bad) cmp pop loopne cmpl xlat imul add xchg or dec cmp je loop test orb adc outsb lea lret sti pop (bad) xor sbb add jo pop (bad) inc mull add mov (bad) loop jae or punpckhwd into mov xchg imul mov mov fsubl sbb jnp es dec push pop (bad) aas fs int3 jo cltd sarl jge or and outsl pushf and and out popf bound jo,pn je dec (bad) aam ret (bad) mov or add mov loope pusha repnz inc jo sbb push out shrb dec or int dec jae mov pop mov mov sbb or roll icebp les xor jae sti hlt (bad) push pop icebp and pop ds jg inc sbbb jno lcall stos mov leave mov jmp and fldl inc (bad) or cmpl adc shlb dec int3 cmp cltd leave xor mov mov out imul jne inc icebp shll aad in call bound std xchg add xchg out adc inc mov or in sbb aaa xchg cltd or lock out sbb nop mov mov daa inc leave inc int ret ret inc std inc aaa lret cmp mov add bound pushf lea lret pop push cmp adc pop test outsb inc adc mov add icebp cmp rclb loope bound (bad) add lds xor mov push add insb clc stos fwait ret pop popa cmc out sti lahf fs mov dec mov xchg iret lds movsb test aas sbb ret and adc or inc popf fnstcw inc adc push rorb mov mov pop sub inc jecxz (bad) call sub gs addl and notb cmp cmp mov fisub dec inc jmp mov (bad) mov mov leave lods fsubl cmp iret xor sbb fidiv stc int mov shr adc or jne inc sbbl insl pop call add push cmp push mov or push mov (bad) inc lods xchg loopne adc xor lock push push aas faddp xor mov arpl dec mov inc sub cwtl xchg or xor bound cmp dec mov pop adc inc scas daa fistp mov outsb push andl pop out addr16 and (bad) mov test or push shlb xchg dec fadd add cmp js sbb dec js push pusha push movsb fcompl push ror movzbl xor dec jns adc lock out push outsb shll xor stc pushf push inc in ret insb cmpsl adc jnp and push inc stos and loopne pop push enter xor in push push jo jo movsl rcll dec icebp pmullw mov jmp bound jo jle,pn sbb add call loop aam sete movsb into in movsb fsubrs pop xor or add adc adc jno pop add jle jmp js jp dec fnop scas or movzbl push ror and xchg inc mov clc and pop mov movzbl sbb sbb xor leave test sti push dec dec rorl push and pop imul mov push cs mov mov cld xor test adc fcoms cwtl mov out or inc je adc push adc jo jmp and loope jno dec inc int3 dec inc (bad) xor call in jle push nop loope pop (bad) (bad) lock add sub (bad) rorl xor xchg mov fdivl test paddb inc ret aam xor out jb jnp ret lds and dec pop aas lds add insl add adc and mov lds mov cld adc scas fiadd idiv jnp adc into add shrl (bad) xor push xchg rclb mov sbb (bad) mov inc mov adc adc cmp dec dec add (bad) movsl jle push jo add jo aad jb nop dec jecxz push fnstsw inc call cmp push dec adc xor popa mov push cmp adc das lods pop cmp or xchg cmpsb cwtl inc aaa test jb pushf leave mov and leave mov push and pop outsl cmc popf dec je test movsb dec pop sti imul inc inc pop or aaa xor pop out sbb aad sbb dec out aad dec imul adc sbb (bad) ficom (bad) shlb xchg jle test mov (bad) rcrl xor sbb jle fadds lods sbb inc jecxz sub mov inc (bad) (bad) xor jo dec gs arpl ret outsb hlt in jb ret cld test sbb xor push inc push mov pop imul pop bound outsl mov inc hlt adc rclb pop or out jo loopne dec mov into cwtl in push jle roll add js jb outsb cltd jb and es daa movsb and ljmp dec cmp lock add inc test xor pop pop xor test imul adc cltd or ds fldl jp hlt push cmp xchg lods scas shrl push or adc push jne into and pop jae and or xchg fsubrl xchg mov push jmp es or jo and outsb inc add rcll xor pop push out xor mov bound inc or imul xchg pusha dec or insb inc jae adc inc test ds inc sbb jne mov xor outsl lret loope or mov js or adc loope int push adc ljmp imul sub loope out adc shrl jecxz cltd mov add add mov icebp push dec jb cmpl adc lret sub (bad) xor jns test sub pusha cwtl adc lods or xor xchg sub sub lret pop fwait mov jo fwait lock push subl inc and add pushf push push xchg rolb (bad) jae mov dec loop (bad) and call dec ret pop dec sar sbb inc dec test cs jo scas jp cmp pop testl push nop adc shlb and divl cmp lock sarl bound mov and sub in sbb es bound out cmp ljmp imul mov push pushf outsl mov jl jae loope or out adcl xor popf mov jp xlat add or insb dec xor test inc push adc mov add xor popa push mov xchg rcl in xchg insb dec out test push sti add jle inc mov jnp mov clc add test and out sbb inc jb es test cwtl or lret cwtl and mov (bad) pop add (bad) xor out orb pop nop lea xor andl dec dec xchg inc andl insl outsl decl cmp inc cmp sub movaps loope inc movaps movaps movaps (bad) inc cmpxchg8b sub cmp movsl test inc jo stos lds or or inc aaa push cmpsl stos and notl push lea add lea lret sbb sbb shll cmp fimul mov and push in inc mov and adc push pop and fcompl sbb (bad) loopne out dec call add or addl fimul xlat sub sahf jae stos push decl stos push mov inc dec clc mov scas and mov movsb adc adc push pop mov and push out sbb dec pusha sub xchg sub xchg mov mov lea push popf or pop mov pop jne cmpsb in adc popf pop xchg test mov cli nop andl cwtl xchg fwait adc cmpsl and in out add jle fdivs call push stos fdiv push (bad) (bad) arpl sbb dec dec jo xor pushf arpl jne out push pusha rorl or fstpt dec stc xor fmull xchg movsb scas icebp push cmp inc sub in shrd into in out add push je aaa xor sub dec idivl pop inc cs mov jo and and push iret std sar jb paddb pop lods andb sbb adc into push pusha or ss dec jle sub cli in adc aaa std cs and push (bad) icebp or repz fisttp pop fwait add lods orb pop mov add or cmp inc jo sbbl add je push movzbl mov mov mov les inc out sbb movsb and push cmp xor fdivl push adc rorb rol (bad) jno loopne leave adc addr16 das fmul popf dec xor mov jno adcb adc jb mov mov testb stc inc xor les (bad) rcll pop xchg pusha rcrb out stc stc mov inc adc inc xchg mulb xor ret lock jge inc push mov sub xlat hlt ljmp and je push cmp adc inc add and and xlat jbe js jne pop inc jle add inc sbb sub lret mov (bad) jae gs ud1 getsec leave movzbl sbb sbb mov negl jbe jbe mov mov cwtl sbb (bad) sbb dec xor pop xor iret push inc push inc das inc xchg dec jns jecxz mov leave sbb (bad) jnp and cmp lds shll xor sbb rcr push xor jno mov pop mov xor jo xor ret movzbl jo orl out sbb adc pop inc stos enter xor lock stos jne int push xchg mov es and dec into addb js testl adcl jo or es in sub (bad) popa ret ret in lea lcall lds int3 adc inc mov fwait ret in adc std push cmp mov and push (bad) jmp push insb rcll lds dec outsl ret lods (bad) mov lock into xchg mov loopne jo ljmp jne add pop xchg cmp fs sbb loopne stos les sbb or addr16 xor mov xchg xor out sub pop sbb loop ret addb pop mov aad inc jo or xchg mov inc nop inc push cltd fadd add inc xchg adc lds ret xor inc lcall mov push add or test jnp mov jbe (bad) in pushf jnp push cmp popf ret fidiv dec cmp fmulp pop xchg dec mov ss cmp or out and sahf cmp ss xor popa xor test adc xor and or ds mov lret inc movsl mov ret pusha mov cwtl jo pop rorl push (bad) mov jle lret (bad) xor or jle shll xchg or jnp subl adc enterw scas cltd loope sub push xchg cltd jnp imul jle xchg mov dec dec sub gs fcomps imul mov mov inc push xchg imul xchg push notl pusha xor test outsb and lods sub cwtl mov adc fmull and or mov fs push mov mov ror lea ret sub or fld nop sbb cmp popa das gs dec ss cmp pop fsubrs dec cmp mov test ret push inc push mov rclb push lds xor or add mov jo and mov add sub push sbb adc loopne nop ret jb adc cs arpl dec pop popa mov int3 fiadd sbb mov and cmp ret sahf leave subb js pop mov sbb pop xor popa das gs cmp out add inc sub das ret dec sub push out inc push (bad) jne sarb sbb les push in movsb js pop lods and gs mov mov movsb and (bad) dec push push or (bad) xor lods mov pop adc push pushf xlat in cmp cmp inc pop xchg clc movsl adc sbb sbb loopne (bad) push (bad) xor lds ljmp inc adc sub test add inc add pinsrw and pushf push pop rorl mov xchg and data16 fsubs push scas mov cmpb add test jbe jmp mov and mov outsb push xor pop cmp or push js mov jno jbe xchg shll shll xor xchg lret mov loopne push in test int out pop out ret jo insl rep push lret jecxz jno jnp rcpps adc sbb push jle sarl in out push out sbb adc clc jmp out testl outsl (bad) lret and addr16 adc sub mov repnz shr xchg sti popf sbbl mov jns js or adc xchg add popf inc mov inc mov sub add sub sub movzbl inc push jl mov ret std pop insb rcrl adcl stos daa and lcall pushf shrb in mov cld je inc out adc jbe movsb adc add scas mov inc inc sbb fwait add (bad) sub inc scas popf add cwtl fwait jl mov push loope add call sbb dec popf icebp ret adc cmp or inc jle jo sub dec nop movzbl jbe sbb add pop je mov dec jo dec ljmp sbb lds inc xchg mov jne outsb pusha shlb xor arpl mov jo and jo push mov mov movsb mov push sub mov push or mov cwtl sbb (bad) cmpsl sub (bad) sub sbb xor inc or inc mov sahf sub adc pop dec popa out add sbb js pop test mov (bad) cmp jo mov push push xor xor xor jns xlat fs cli bound cmp inc sbb loopne pusha cmp mov inc or outsb push inc stc sbb xor xchg mov lods or inc mov mov fiadd lea adc (bad) push inc fstp (bad) sub jnp xchg test jge inc dec or dec jge sub pop add xor jo jae add (bad) or leave dec mov dec jae mov xor or inc insb pop push inc and andl sub add (bad) mov das ja add sub mov scas int inc ds (bad) sahf and out sub pop mov inc xor add cmpsb and aas test jne or sub in movzbl add sbb imul sub outsb and sbb outsb mov sbb adc jp mov js cmp jl pop jo decl mov mov dec or pop roll or movsb lods sub loope and shrb inc jo sbb leave pop iret adc cmp sbbl loope loopnew (bad) test jns mov inc adc dec mov icebp or or and or add dec dec ret pop xor sub jo sub int inc loope add divl sbb lret int mov lock fdivs cltd and cld adc adc aaa mov inc pusha loopne movsl jne fdivl cmp and xor xchg je jo mov adc test sbb loopne pop xor jle mov adc jne movsb adc pop add mov je adc les shrb mov sbb add pop inc scas (bad) pusha loopne fsubs xor inc push mov mov lock adc int3 lock dec xor jmp orl sbb sub fsubrl lods and mov ja adc das sbb jo out push jnp pop mov or out fsts in jo jge xchg jno pop sbb (bad) lock dec pusha jo incl add pop clc stos mov pushf jnp inc jle outsl cmp mov (bad) imul out lds loope or lds sub push outsl jl and mov out cmpsb xchg (bad) lds push lds loop mov fwait push mov mov inc (bad) mov loopne iret (bad) mov je cmpb sbb test loope push test inc inc inc add ljmp repnz in mov pop fnsave lock je mov adc adc jbe cmp pop jo test mov movsb mov inc cmp push ret inc push dec jo in jl mov out xor push dec daa sbb dec pop fisttpll push dec test and mov dec pop jb or dec pop clc enter mov and push jb mov outsl sbb cmp out lds and or clc cmpsb dec cs out (bad) call pop sbb add mov sbb jbe jnp xchg lock jbe adc adc (bad) and pop testb xor push lret mov pop nop and jle push sarl pop xor sahf fnstenv in sub pop pop aam push dec loope test adcl jns pop (bad) xchg jnp subl dec int3 nop adc mov cmp (bad) hlt in ret mov cmp jbe loope add js in vmovups mov and adc dec and xor sub inc cmpl out mov inc adc dec fistl inc push mov nop and mov fdivs inc (bad) sbb or and or mov mov sbb mov es and cmc (bad) call xchg push fwait out lock push out pop lock and adc adc xchg (bad) lock js in mov jne dec xorl sub dec inc js push aad sub inc ret or js mov inc nop adc lret dec pop mov insl mov es cmp inc js mov sub sbb adc inc hlt or inc arpl and js mov loopne and xchg pop ret imul loope dec dec adc push ret jnp adc and js sbb (bad) (bad) scas fnsave pusha jo (bad) inc adc mov ds enter test pop mov inc adc and mov pusha xchg pop inc js test ljmp sub sub sahf jmp shrb mov iretw iret lds aaa mov clc imul jo sbb in lods xor sbb inc je inc or jmp mov mov xchg adc ljmp push xchg push add jae cmpl rcll jge sbb testb adc sarl out shlb xchg or xchg in imul inc dec ret pop popa or jle dec cmp dec and outsb add js cmp mov (bad) ljmp and mov movsb sub jmp xor (bad) (bad) push jne push sbb or pop push stos shrb sbb ret and movsl adc adc push dec push inc and mov inc cmp xor inc das fs sbb inc (bad) (bad) xor ljmp push and faddl push xor push dec cmpsl sub call sbb outsl clc push loope mov movsl call adc mov push lret call and in push dec call mov mov imulb jbe ret call testb inc call testb in call testl sbb outsl addl out in xchg mov sbb fsubr fistpl in dec out lea push xchg std xchg (bad) out fsubr popf push inc (bad) mov jle sbb das notb push adc push fsubr inc push adc push (bad) call push ss out or out mov (bad) lock das or push and fsubs cmpl push aam fsubs mov mov and call jnp sti fsubr push push xor (bad) call push or int3 ret or sbb iret andb dec fsubr std cs je hlt dec shrl pshufd shlb cmpl inc mov mov or fldenv cmp push xchg movsb and pop nop mov outsl jp sbb outsb (bad) jo rclb stos test jo jmp insb push jo por fldcw cmp sub jle cmp out sbbb adc test cs popa sub or fsubs icebp call jecxz lds jbe jge loope inc cmp in mov call test pop cmpsl xchg mov cld add add or add xchg (bad) test inc or scas aad rorb sbb pop cmpl pop push push inc pop shlb adc mov and dec test mov sbb add out test call mov add dec jp fs ljmp cwtl pop push lret push repz inc cmp inc lods cmp js lcall adc loopne ficoml mov movsb inc shr (bad) cmp pop sbb sbb add mov stc and mov mov test xor pop outsb cmpsb data16 icebp cmp xor dec mov xor (bad) cmp jb add sbb enter xchg xorl push sub cmp sbb sbb pop imul inc cwtl fisttpll adc das inc push sub test (bad) push push or mov ret adc dec mov push or (bad) xchg repnz push xor xchg mov add sub jne lret dec cs adc movzbl pop push cmpsl mull cmp lcall dec push pushf rcrb rcll in mov inc call push pushf xchg dec xorb push push adc hlt stos fs pop adc mov push adc or xchg mov fisttp cmovns sbb bound shrb cli cmp sbb aam or mov or xor mov dec jo addr16 or mov xor mov les sub mov xchg lock jg aas flds and mov call fstpl adc sbb clc inc adc jo pop fidivr xor jl rcl fistl pop jle fwait or out inc out ljmp test adc fimull popl adc inc stc mov scas dec inc lock sbb xor test cmp sub add xor ds (bad) add aad mov push mov push dec mov inc or jmp pop (bad) movzbl push or (bad) pop adc pop fwait mov mov or push dec out cli or jo adc xlat insb lds insb fmull xlat jne out divb pop das or loope icebp cmovnp xchg test subl movzbl mov and adc xor push addl inc loope mov sbb jo push add jo jne hlt mov mov pop bound stos flds in jo lahf xor bound and daa lock and call inc (bad) negb lods ljmp push add bnd addr16 lahf rcr out inc or ja or (bad) push icebp into lret push loopne sbbb push pop pop loopnew sbb xor inc (bad) and sbb and jbe lock pusha rorl lcall outsb mov (bad) jb or add lods inc jne shlb jno and and xor popa mov mov or fstps mov sbb rcrb insb fdivrs aam les scas xor mov add cs sahf jnp scas aad mov mov pop sbb cltd lcall add and xor data16 adc ds rclb mov dec jo imul inc imul xchg xchg adc push jecxz jnp sbb or adc rolb or ss cmp push test jb movsb (bad) add pop xchg jnp faddl jle rclb js sbb bound jbe stos scas xor dec insl lcall adcb xor pop or pop mov orl sbb cmp push dec pop xor xchg pusha dec and arpl nop mov pop cltd loope cwtl jnp test outsl xorl pop or ret rcll inc adc fs out cmp mov inc inc nop imul aad cmp jo ret pop inc jl inc aad sbb lock jae cli dec loop test add mov test or cltd test xor mov adc or (bad) inc std movntq or mov xor lds push mov pusha call ljmp ljmp sbb outsb add leave jmp xchg mov shll and push dec sbb sbb xor jmp or xor pop add lret inc add stc fs inc nop dec ss (bad) mov loopne and adc sbb cmpl lret daa decb leave roll in ret jbe inc sbb call mov xor add rclb mov loope lds (bad) mov lods or push push push pusha cmp inc (bad) jo xor and adc test ds add sub idivl in push sbb push iret inc push test (bad) shr (bad) dec arpl xchg and arpl rcll test xor or mov ds add andl adc test loopne inc push jl jecxz inc in lcall adc movaps movaps movaps movaps movaps push movaps mov xchg movaps inc inc ret das inc je push and leave add push sahf dec addb sub add mov push dec and mov sarl inc and orb sub sub addb sti jle push (bad) jo decl mov mov shll or mov pop scas arpl or add mov jecxz add pushf pop push jge adc sbbb mov testb and dec cs or push outsb inc and shr jp jo pop js inc movzbl aaa mulb in aaa inc std or dec mov cmp pop aad xor dec add xlat jne pop scas clc inc hlt cld pop xor xor xchg (bad) mov movzbl arpl imul and pop ds aaa in mov data16 (bad) repz adc push fwait pop xlat gs (bad) repnz outsl enter inc add add pop imul add mov inc scas or or cmp pop jmp (bad) idiv fiaddl xchg and or adc jmp add mov inc adc and dec jmp test or out and inc je or xor mov jae and or nop subl inc and mov mov push inc and jne sarl icebp sub (bad) rol (bad) jmp mov mov mov std sahf add mov pop rcll aam and and (bad) lcall daa leave fildll add mov incl add add jl adc mov std ret adc out (bad) faddl add call sbb inc lcall inc sub mov out add addl add inc adc jnp add mov dec mov xor fwait or out xchg adc inc fiaddl es icebp xchg shr jg dec or mov xor mov fwait mov xor jg push xor icebp jo mov and fnstenv xor cwtl inc xchg or fs rcrl shrl xchg inc mov mov and adc inc movhps xor add insb mov inc in cmpsb pop icebp mov and sbb (bad) push les add popa addl (bad) and mov sbb mov push pusha fildl sub pusha xor adc enter pop scas pusha iret push push push jl mov dec mov adc enter movzbl push out call loope mov jne insb and add push int3 outsb je add and xor xor sarb inc or mov fcoms loop jo add (bad) fcompl aaa loopne xchg jl (bad) inc and jl pop pop or movaps push sbb (bad) enter pusha add mov andl jo dec hlt loopne mov fsubs jecxz pop sbb movaps psllq cwtl dec cmp imul and and adc daa dec push fs jbe dec loope outsl jle xor adc jb mov dec jp dec inc mov and add adc cmp and xchg sub or add xchg mov sub push daa add inc push add pop dec bound dec inc or loop fcoms popf or cmp mov add mov dec dec test jne mov add or mov call decl mov call sbb sti pop push push std decl pop inc (bad) movzbl pop adc dec xor and pusha or mov mov dec jge inc inc add mov clc xor or sub mov add inc nop or pop je stc jle inc and stc push and adc rolb add hlt (bad) mov mov and outsl mov adc pushf and inc es out push adc stos mov inc push aas mov cmp std xor loopne fwait dec adc dec sarb dec adc addr16 mov stos mov pop mov and les adc fnstcw jmp add push xchg adc call rcrb data16 sub mov popf add into add stc ss outsb outsb inc add add or cwtl or subb das sub les add pop mov push push out jo jle mov ror xor sbb aaa push add push xchg jle push xchg or xor sbbb dec shlb out jno push aad lds cmp inc jo bound or ja xor cs sub cmp sbb push sub push mov test orl imul xor (bad) jle add and jle pop sbb pop add lods cs rol js out mov out add jo (bad) adc add add les test test jnp or ret cmp ss push mov adc jno (bad) ja inc jo mov (bad) repnz and pop movsb aaa jne add mov mull call jo dec mov fsqrt pop enter jo scas repnz and cmp int mov aad jle dec push sbbl jge js and test aad xchg push dec insl movzbl hlt dec push aam lea ret shr and mov xor inc fwait sbb add xchg test ret mov jl inc and inc push mov adc mov xor mov pop lods or cmpsl mov mov ret into mov out (bad) call mov outsl or loop jecxz and pushf adcl notl decl and cmp or push mov lret in pop mov mov subb or stos (bad) jbe mov xor adc adc movlps jb or add es loope nop adc cmp mov or inc jecxz push mov push test (bad) call dec bound mov push xor sahf nop adc adc sub or mov bound and lds loope push pusha push dec bound cmp or dec inc sub jo cs mov cwtl outsb and pop sub sbb add cmpsb adc mov rorb adc adc sti test or dec cmpsl dec add inc addl jno sarl xor xchg cli or mov inc ret loopne pusha dec (bad) push pop stos xor movzbl ja or movzbl and cmp cmpl or test xor sti mov xor sbb xor inc imul or dec fcoml inc cmp dec pop mov or sbb inc test add inc xor and (bad) mov adc sahf fiaddl cmp popa push xchg bsf fidivl lock pusha les mov or or xor or or and or ja cmp aam je push xor push and adc add inc in mov xor rcrl mov inc inc insb or push adc jmp add or mov outsb leave dec test pusha ret mov and push sbb dec pop inc push test mov and jg dec dec inc mov push add add test push lods mov pusha mov outsl sbb adc sub add (bad) mov test mov inc lds add (bad) mov mov mov mov or in sub dec mov inc jl addl pop mov mov dec and fidivrl mov sbbl das push push rcrb inc enter sbb pop xadd and mov iret cmp (bad) adc mov lds or push inc or xlat push jb jecxz mov xorl shll std shr pop rorl pop movzbl xor and test (bad) mov sbb sbb lret push xchg inc daa sbbl push das add add clc xor call pop les push push mov pop (bad) fimul push cli push xchg call (bad) push arpl andb insl call test flds xchg cmp and mov std call pusha fcomp push (bad) call iret std data16 fsubr and push mov shr pushf cmp push push or (bad) lock fsubr out or sarb push enter out fsubr test ficom push (bad) in pop jnp push fsubr imul xor out adc sbb jnp sbb mull addl (bad) or push pop call in icebp pop pop cmp std xchg xor call xchg push sub call in lea fsubr jl (bad) mov aaa xor (bad) call shlb out inc sbb orb push push clc xorb mov mov inc mov (bad) out sbb jb (bad) mov stc jle or mov test jle movd inc inc mov jg fs loopne dec in adc js fs lods push or call add or pop lods xchg loopne jl insb mov sub push mov outsl arpl mov or add xchg jo mov xchg das orb inc loope pop mov adc or cmpsl inc cmp cmp call call mov (bad) call or add adc call and push jmp sbb cmp mov inc pop (bad) inc sbbl stos inc aad and test add inc jle dec pusha inc insl mov add inc add loopne stos mov sub pop (bad) test (bad) mov jl or xor into inc push rorl push sahf sbbl push mov and popa mov clc popa ljmp mov (bad) mov jg dec cwtl jp xchg cmp enter jg popa jno loopne (bad) mov sub dec cmp inc sub jge xchg mov xor ja adc int3 pusha aas inc enter add fisubr and sbb inc ss adc cmp pusha js cmp (bad) mov push pop ret or or sbb add or dec mov popl pushl inc repnz movhps loop or or or and mov xchg or jo sub pop xchg xchg mov and mov or cmp test mov in popa js add sub out mov jg xchg xchg mov cwtl and mov andb inc aaa xchg lock pop stc dec inc nop movzbl sbb mov mov mov cmp xchg icebp and or (bad) mov mov loopne pusha inc add xor inc das dec sahf enter fwait ss test int or or mov xor addb sbb push jo push lar sbb inc cmp push lods sbb push sbb inc movsb dec jo inc rcrl enter dec ljmp fwait movsl dec xor mov enter ret cmp mov dec into mov js in pop je mov call sbb out push mov cmp lds testb call sar pop push call fs fmull push flds std call popf sbb push (bad) call cmpb sahf out push mov sahf mov call daa inc mulb cmpsl adc call jle out fsubr sub adc cmp adc pop fsubr out (bad) or jnp push fsubr iret push int3 or (bad) call mov call mov or jnp and out pop push and lds ja fsubr cmp push mov fsubr push push or pop jnp push fsubr push out jnp pop in or loopne sbb xorl (bad) call orl test mov subl add pop cmp pusha xchg pop out add outsl movsb out stos ja push cld jne sub iret movaps (bad) aas mov sub movaps movaps movaps push movaps sub adc inc or fstpl jg in pop ret test push popa adc stos and les mov jg lock rcl sbb lcall push pop push pop inc sub loop cltd push pop lret jle adc mov push je mov ja in mov sbb (bad) mov and repnz enter inc push shlb iret and inc add or out mov popa mov mov xchg inc mov xor add mov verr xor mov ja xchg adc pop add sbb add or (bad) mov or cmp inc add xchg dec cmp popf push aad movlps add inc stos sub inc lods int inc cmp and fstps int push int ret mov jns int add or xor jmp nop orps in cs lods and lods add lea inc sub mov or loopne (bad) mov mov lcall add push fs jbe xor add pop pop inc adc jbe push (bad) (bad) (bad) in jae adc mov mov lea cmp ja add add adc clc add inc and rorb test mov je jmp rol rorb cld add and in out mov push test je jmp sub ret mov push mov pop adc mov je dec repz je cmp mov mov (bad) out dec loop xchg ret setb sub movsbl test je xor add mov pop pop pop pop test or sbb jb mov call loopne push call jge test je or mov call xorl (bad) clc pop mov jbe mov sub call je out mov xchg pop mov pop std mov movl in fidiv jnp (bad) sbb cmp sbb movhps pop push call rcll pop dec xchg int xchg mov jle (bad) je cmp mov insb jbe jnp mov out cmp or (bad) pop mov pop mov out repnz add ja push sarl call fisttpl xchg lock add gs jb test outsl mov jmp jle or jne add or add and sbb sbb lea jne mov jmp dec and mov test mov je outsb mov repnz add mov mov inc addr16 or insb and je or scas pop add xor call adc dec js and cmp xorb rclb pop pop ret xlat add mov imul jbe add cmp add lahf adc jo popa aam inc jb jmp inc mov fmuls inc xor ret std lahf lods add mov xor test jne repz lret call mov mov sub adc lock loopne aas adc mov pop imul adc (bad) mov call mov dec sbb (bad) aas test je add pop ret mov or in adc ret pushl shr test nop sub out push push push mov mov sbb (bad) xor idiv je cmp cmp jmp wbinvd mov sbb fist cmp je add repz xchg dec pusha leave (bad) out je adc clc icebp mov loopne jne pop shlb add fildl (bad) mov push sub jecxz test add sbb or cmp call arpl add mov xor lahf pop xor cmp call (bad) call add or (bad) stos mov pop ret test sahf out or push cmpl inc addl or fcomip and (bad) sub sub mov mov test add test jo sub ret je loope aas mov lea mov and test je imull jnp lea (bad) mov out cmp ja mov mov mov jl adc ljmp add fldl scas mov push and xor jbe call test sete shr xor movsbl or into and aad mov push mov jne cmp add in or mov jne idivl ja add jne movl jmp ud2 out out out xchg or addb push xor jbe cmp sbb test pop and cmp xchg sub mov xchg call lea add adc call (bad) je push out push lret enter add mov fldl lea loopne add test call xchg pop mov jo mov cmp imul mov or fmuls inc fmuls mov xor add cltd mov jmp dec dec out sbb call mov mov icebp out pop add adc mov jl push int3 jge das jmp mov inc push inc mov xchg pop adc (bad) ss lds daa dec and pop mov jg sbb adc pop sub clc arpl lcall addr16 xchg dec add push (bad) mov fwait push add xchg (bad) repz pop push in mov or mov mov aas push nop stos iret das sahf add jle adc sub in mov cmp (bad) inc cmpsb cmp push mov mov mov in (bad) adc (bad) dec add add ja cld jl mov outsl (bad) or mov jne repz cmp das or arpl pop add jg cmp mov mov adc outsl loop (bad) pop in outsb in cs cli push adc push mov insb movups adc je mov and loopne jmp cli and add (bad) bound test mov push aad xchg sbbl and cli and cmpsb add stos sarl cli and fild into pop jne arpl jne mov push ja inc cmp fmuls ja jg add scas cmp cli inc or clc sub test inc mov test inc lahf aas adc mov ss adc cmp mov inc mov (bad) aad (bad) testl mov jbe mov iret cmp jl ja mov pop je mov int3 lahf rorl pop push cs xorb test jle rolb dec les mov cmp push push push cmp lea dec cmp jno jle sbb (bad) fmull mov les adc sbb adc pushf loope mov cmp movb dec inc adc or (bad) mov dec cmp cmp add arpl pop and adc pop cmp pushf stc shlb cmp sub test ss mov faddl (bad) jbe mov je test data16 xchg xor insb insb xlat fs or fmuls je xor adc or mov outsb mov xor adc test insb xor cmp fisttpll cmp pop xor pop inc fs das mov out sub (bad) es inc ss gs outsl pop insl xchg rorb scas sete xchg aas stos pop fs (bad) add jno ret and jg add repz inc jne shrb adc test sbb jle mov into mov test push rep xchg test (bad) push or movzbl jmp or (bad) push int3 or movsb pop enterw movlps mov insb test out pop jbe inc scas sub fs insb dec xchg daa lahf xchg sbbb mov xchg (bad) das mov insb enter iret mov jae xchg pop (bad) xor xchg outsl std pop insb dec xchg movsl bnd das rorl xchg push aas hlt das test add popa mov add iret imul dec sub (bad) es sbb mov jl iret push jo jb iret (bad) xor bound adc xchg iret adc and loop and dec iret int jl les dec or loop mov and mov (bad) decl xor xor or iret cmp dec xchg jl or and iret lret iret orl xor test popl iret repz mov std scas iret loope fcomps xchg iret lds imul mov cmp out gs or sbb inc iret daa adc jg jmp iret sbb test and mov cs iret out push or jle sbb jl inc iret mov test xchg sub jne fstl jle loop in outsb pop jl iret je cmp lret inc cmovb rcll mov cli sarl jbe rorl push sub inc mov rolb push inc xchg fsubr cmp fsubs (bad) jo jne (bad) cld cmp sbb sti lahf rcr mov inc and sbb inc shrb xor rolb add jne mov dec and mov sarb rclb xor mov in and aaa sbb mov nop lret mov pushf adc mov sbb (bad) mov ja wrmsr sub ja xchg jnp outsl mov push int3 jno das inc psubb outsb enter pop jmp inc ss (bad) clts aas mov in rorb lahf mov mov mov and mov mov popf mov test mov test mov cmp test push mov sbb mov or iret popa enter das (bad) pand sbb mov sub out clc mov mov mov cld fild sbb xor adc in and adc psadbw enter pop or jecxz xchg mov (bad) nop xchg repz cwtl dec insb dec xchg push in and adc mov sbb cmp sbb outsl push dec insb das ret and das mov push xor fstl add out and mov mov dec jg inc mov movl pop xlat movl add push cld and pop cli push sub inc incb fisubl inc adc or jg jmp mov sub ja push push xor jae sub mov push mov pusha lea lea popa and (bad) ljmp rolb cld mov add cmp jb mov add fs mov inc and and std mov call cmp sub cmp (bad) (bad) jmp cmova cmp jae test je movzbl test mov jne add movb lock and push call mov add and pop movl dec add dec adc mov (bad) decl cmc mov mov iret xor and mov mov ja mov add cmp jb jmp das movzwl xor jmp sar add sub mov addr16 andl adc mov dec jp cltd loop dec das xchg inc and popa out mov out das mov lock sub sub mov js or movzwl and add add sbb mov push loopne mov cltd fucomp or mov add pop ret inc dec clc add jmp (bad) pop and in jmp iret pop (bad) cmpb sub arpl cmp enter push add dec in in les fldenv sub int3 xchg in sub iret mov cmp out outsl inc pcmpeqw andl sbb push and sub inc nop adc popa push outsb ja pop or jnp fidivr call or in mov mov xor dec sahf or dec and out mov xor add or outsb sub cmp push pop out into outsl negb mov cvtdq2ps or jnp fnsave and test outsl testl das and (bad) das daa push iret inc add jmp ret aaa std (bad) (bad) jl inc mov mov lea cmp je mov lea and (bad) sbb mov sbb mov jg pop ds cmp push add or inc sbb mov mov (bad) (bad) mov mov mov mov mov mov jne sub mov rcrl pop call sbb fsub mov jne add cwtl arpl popa decl fsubr in dec add shr jno (bad) call mov jmp pop inc fcomps sub and pop mov or test mov jne test je mov addl leave and sar das push xor je fildll outsl mov sub loopne ret data16 fstl flds push std xchg jg mov mov jg (bad) sti cs test je lea ret add add cmp jne shll ja je add rorb dec test adc lcall call sbb and loopne es mov mov cmc (bad) (bad) out cs inc sub je mov mov call cmp mov jbe sbb xchg lret cmp call xor roll (bad) test roll cmpb xsavec inc (bad) mov jmp push mov pop and mov mov jmp decl je sub mov cmp jbe lahf cwtl sbb hlt movsl fdivs paddusb dec es aas and inc add xchg movl add fwait outsl jo and mov js mov test je mov (bad) test jne cmp je mov xchg cmpl lea (bad) out xor add and nop fstpt lahf fadd adc inc mov call jbe dec arpl scas jg inc and inc insl (bad) jmp wrmsr in in pop btc aad jg xor jmp lar pop loopnew fwait (bad) rcrb mov pop fdivrl jb jmp xchg dec popa xor in outsb fsubr push pop jle push (bad) lcall mov lret clc sbb pop lea mov add in or sbb sbb pop add mov pop ret in ljmp pop aaa jmp pop xor pop in inc imul xchg add ds jg sbb xor call jmp dec push inc (bad) decl inc adc inc adc mov lea cmp call or and add clc je jo hlt mov jecxz fcomip outsl ret into call lea add ret clts movl mov (bad) iret sahf or stc add rep xor cmp les fnstenv rcrb iret mov xor call ja test jne cmp je cmp sub inc js fdivr lcall arpl clc movl mov sbb cmc lcall push call jmp nop nop mov pop cmc bts mov ret mov mov int3 add pop (bad) (bad) lcall je movzbl test jne test jne mov mov mov mov inc adc inc add rorb dec cmc mov add sbb loopne cmp mov and pop add or scas jae xchg sbb call sti xchg imul lea (bad) lock pushl dec adc adc mov sbb fstl push sbb movb movl pushf push add inc cld mov movl mov xchg xor mov std fmuls test je test jne mov and cmp into icebp pushl leave push add inc add and or mov inc cmp (bad) pop and cs idiv sub push sub push sub (bad) loope,pt ret jg ds data16 pandn cmpl mov jne testb jne rorl lahf (bad) inc jo (bad) je xor ret add sti jbe add pop pop push jecxz jecxz fs inc sbb call sub push mov call mov call jb xchg (bad) inc jp out mov aam jp leave dec (bad) jmp pop fcomip xor ret je add or outsl sahf add adc pop pusha sahf add and fiadd movb push pop test jne inc push or push je inc sub pop pop xlat icebp sbb insb dec in jecxz loope push out dec cltd add mov add cld out (bad) mov hlt dec add addl sub mov add call mov sbb push xor fwait sub outsl adc ljmp lock mov mov add adc xor lret sub cmp je insb and movnti aaa inc jo mov sarb outsb add inc and mov adc sbb cmp test je lret dec cltd out clc fisttpll cmp je js aaa icebp ja jae and or dec jmp clc inc or loopne movb push sub jl fist jp mov mov mov mov push mov pop mov add (bad) (bad) jb push int3 jbe xchg decl aad fcos xor fcoms xchg pushl add incl add mov or adc or jb inc sub adc nop pop daa loope dec adc pop cwtl sbb or jp scas (bad) sahf adc or mov jae jge mov cmp pushl loop mov add insb inc pop ret add jg inc shl add jmp aas imul jno mov add add sbb mov mov lea movl test jne mov and fidivrl or push add jg (bad) sbb jle add jle xor mov lahf jmp lods cmp je xchg dec sbb add lods pop mov xlat (bad) sti mov sbb loopne mov test jne jnp jge mov push xor push outsb or je adc ret mov xchg popa sbb inc clc fucomip femms (bad) mov mov sub mov jnp sbb pop add jecxz pop call rorb les inc nop add inc pop inc dec lea (bad) add inc push aas iret movl (bad) jg mov mov lea movl insb loop sbb inc or movl movl and adc inc add push pop inc dec sub inc inc sbb inc in inc daa pop data16 movl pop inc cwtl je fs fs psubsw jl add (bad) je mov and aad movl adcl sbb imul and add lret in fiadd add fs dec (bad) jne sub fist test je mov lcall out xchg adc test rorl adc je mov add jbe adc or mov mov xchg mov repz imul mov call add cmpl inc sbb jmp int3 bound mov out out and fisttp js jmp arpl aas (bad) or or xlat add rorl rcr je mov (bad) mov sbb add scas std or (bad) ret (bad) jne mov aaa cmp ret cmp nop mov jmp andl roll js iret cmc mov mov jp mov shlb add mov mov and sbb test jle adc lea (bad) je cmp jne dec call icebp dec movzbl test dec lcall ret std (bad) test jne fwait pop aad or scas mov xchg jne ret mov or divl or dec add cmp mov or xchg push mov call xor mov lea cmp jbe sbb movb incb jne lea jl jns cmp dec cmp inc push and iret and je ss mov pop enter mov xor push clc call adc adc ret xchg psubsw sub call sbb je (bad) lea sub mov mov (bad) popl je mov jle cmp mov jge test cmpsb add xchg jecxz push push je xor imul push comiss movl fisubrl in push jmp push xor or xchg inc in add and cmp in loopne and xor add std popa movaps std (bad) decl movsb pop sarl or nop loopne scas in mov test jne mov aaa or in call push sub xor ret mov or call push cmp out add xchg dec mov aas out add mov adc iret cmp adc xchg ficoml setne xor push (bad) push push mov inc cld outsl cmp test mov cmove push inc push sbb cmp mov jbe mov test jne rcrb call call add mov test je cmp incl mov mov mov inc call sbb loop ja jmp or sub push sub ss (bad) fs pop test mov jne sbb mov mov mov inc outsb leave add add sarb and call or xchg xor jbe aas cmp std decl sub cmpl ja or and js shr cli mov sub std iret add incb inc add test mov or call and ret mov test (bad) and dec ret (bad) pop out rorl add jmp jecxz adc rcrb pop ret rorl lcall xchg imul pop pushl (bad) pcmpeqb add jmp xor add out pop lods cmp loop and adc stos jg add pop xor repnz (bad) jmp mov mov pop int3 shrl push aam mov decl jne dec sbb push mov cmp jl mov aaa cmp je pop je dec pop push pop add cmpsb mov fild call mov xor pop in adc fs aad imul loope and les call sbb pop mov (bad) jo mov (bad) or enter (bad) in out sbb pop outsl dec or cs add jl popa movnti push pop outsl push inc lock int3 rcl lock xor mov stos push pop lock pusha in mov test outsb cltd pop je and mov in ja loopne pop sub icebp sbb sar jg inc jg xchg inc int3 insl jg or pop adc jo lock push jmp sbb lock loop add or dec dec adc hlt out inc cmp iret hlt or roll sbb stc pop test adc pop (bad) in cli pop sub das aam fwait dec mov adc shrb pushf push pop xor jmp jg fdivrs mov test jne or sub mov test out nop xor xchg and rcrb sti ret rcl lock faddl adc add fcoms sbb popa push popf xor sbb adc and sarl adc push int3 sarb sbb adc scas int3 jne cmp pop out das rcl bswap xor pop adc or inc mov pushf adc cmpsb fnsave xor test xchg jmp andl call inc and fs ja lds and or movsl (bad) pushl cmp mov mov xchg sbb mov jmp das lahf test sbb out pop xor (bad) hlt aas mov rcr mov jmp inc pop fstl dec inc (bad) dec cli out ret icebp add xchg lds mov cmp add cmp jne inc xchg jecxz mov rclb add inc inc dec push aas jle jmp adc sbb pop outsl mov or adc add sub jb mov add mov lea movsb cmp add adc and dec imul adc jae inc rcr push les rol mov pusha jmp fistp adc jmp lods add stos in orb cmovae ret call fsubrs adc mov jp inc pushl in sub push and push in inc out lret add add mov sbb add shlb dec mov pop repz jle push call pop sub lea mov je xor loopne pusha pop int3 inc and adc xchg test and pop jo jecxz add call or mov or (bad) lea cmp aaa int or cmp xchg push add and jl add je (bad) push cli aaa dec call push (bad) ja add or fmuls pop or (bad) xor ja push sub outsl cmp stc je cmp add ja or cmp jg pop cmp inc mov (bad) sub xchg (bad) jg adc push sub jmp adc mov test jle push test std mov cmp je add cmp adc push xor daa adc pop mov sub test inc mov sub cmp arpl out testl test mov adc testl cmp jle lcall pop or ret cmp je jmp cli push je lds mov sub jmp jg or test cmp je roll xchg fucomp sub jg jg sti pop sti cli and lea aaa pop je cmp jne fs ficompl stos sbb inc je mov dec push adc mov mov leave adc cmp fdiv test cmpsl mov pop jbe mov jg cmp js mov out mov adc cli mov mov jne cmp ljmp mov out je into loopne aam cli xchg mov jae fucomp cmp or mov (bad) jg xchg xchg sti xor or jo ja adc je addr16 push loop out je jo test push jg arpl push iret cmp jg ja cmp cli jnp,pt sbb or jmp cli inc adc or (bad) out pop sub inc adc cli inc cmp sar or mov mov jg (bad) jg inc je cmp jne call mov (bad) out out ja sub cmp aas or bound fild mov cmp jge add in (bad) jne aaa mov jg adc (bad) loop pusha incl xchg mov ret inc fisttpll add cmp pop xorl push je icebp mov or stc sub xchg xchg cmp addr16 test mov je out cli jnp test movsb popl icebp out je adc je jecxz aas cmp inc jl rorb adc leave pop push inc and inc (bad) cmp je insl out jne js aas cmp inc mov cmp mov add cmp inc cmp lret or in mov je push ja adc mov arpl fstp (bad) cmp mov mov adc cli inc pop mov adc push repz sbb (bad) mov loope cmp out mov pop jno test cmp inc fldl ret mov out cltd out and fwait stos push jne cmpsb bound aas mov je push setnp jmp mov leave jle in adc ljmp inc mull fmull cmpsb call mov adc mov lods mov or mov mov push push lock in mov jne (bad) call lea mov movzwl cmp je add cmp jmp sub adc je pop je test jne test pop (bad) aam xor or call test mov lods jno add adc inc adc leave sub fidivr jbe add mov inc mov je dec inc lea dec jbe and inc sbb adc pop inc jl lea sbb push and call sti sbb lahf sbb fistl dec cld lret lea repnz ror xchg loop icebp push pop je daa push lea lea adc and pop mov xor jbe fstl (bad) add cmp dec jns jmp mov scas js or pop xor std jg push mov sub mov dec adc call cmp inc jo sub sbbl test and mov test mov jne mov test je xor xor out pop je mov sbb bound sbb sbb add cwtl jnp call pop sbb cmp enter adc lcall jmp data16 loope in jge adc push call mov (bad) push xchg (bad) outsl rclb movl in jbe inc sbb movl movl jg loope adcb neg sbb or movl mov push xchg inc insb das sub and push sub das stos mov sub test decb or add call sti adc inc xor test and test rcrl inc je adc fild adc dec or inc jb sbb dec jge jmp or aad add mov pop cmc lahf insb adc (bad) je iret push pop test xchg test add fucompp mov test add je lock loopne mov jne sub or mov in call rorb lock sbb call (bad) (bad) (bad) fstl push ret decl bound lret test lods cs add jmp jb aas push xchg cmc inc cmp je das sbb lea cmp dec xchg and inc mov pmuludq nop insb cmp out cmc dec adc ja in call inc jo and (bad) je mov or add bound sub mov push add push dec push and push xchg push mov cmc pop hlt mov mov push push sub sub test and push cmp and jg and push sbb add cmp add stos call push out sub jne push mov pop mov sbb add call dec out (bad) jne lea call and push je mov push mov das call popa inc mov adc mov sbb sbb cmp sarb je jp (bad) jecxz cmp adc inc je test jne push (bad) aas push xchg ljmp pop dec sbb mov jo (bad) adc jmp popa dec fsubs sbb mov push add jmp sbb adc mov jmp mov jl jmp cmp call jne into pop addl add subl clc add iret and push mov aas xchg mov mov jle or pop adc mov push fwait ds andb jnp adc jo add decl inc jne test je test jne adc and mov inc sbb jecxz aad int3 decl or mov cmp mov mov call lahf jo mov in cwtl call or mov test jne cmpl je shrb inc je test or dec outsb pop pop pop sbb aas je and bound or call pop fadds xlat test jo sub jo or or jns in ds faddl and xchg sub pop ret mov adc bound push push and pop mov pop or sbb call adc xor mov jmp inc jo xor sarb (bad) movzwl or fwait mov orb xor inc ffreep pop inc pop mov outsl arpl adc lock insb mov pusha mov jmp fbld adc dec repz mov jecxz jmp (bad) sub jne ret pushf pop iret int3 sub mov out arpl jmp push int3 clc adc leave jmp mov xchg cmp loop ret test out test ret pop add repz and popa call orl pop loope ja mov jnp leave je testb rorb test cmp leave out mov rcrl mov sbb mov aas cld fldl mov lea and jne mov mov xor shr lea pop mov pushl (bad) mov add mov cmp jbe adc inc decl pushl push or ljmp or sub xor and mov mov jbe sbb jne jl adc shr and pushf (bad) sbb mov (bad) out sbb adc and fsubr cmp push (bad) mov pop and movsb sub xor test and add test push je xchg test pushf arpl or push and xor call mov jl and or fstl mov cmp imul (bad) pop mov insb ret cmpw xlat sar je sub lea add push sub pop sub inc and fyl2x mov and and pop inc movaps inc push jmp insl call decb push out ret jmp add sbb stos fwait out push jl jne inc sti test adc rorl and stc push addr16 jns or and adc pop pop mov and jnp pop pop pop std into mov lcall outsl and je rorl mov and test out das loope adc lahf dec sbb lahf pop jne add movsl mov push and mov outsl push xor call sbb or jmp call push jl pop pop fldcw dec sbb dec xor inc mov pop adc (bad) (bad) mov add je leave jne (bad) xor cwtl jp or sti shll add xor pop mov push or pusha or clc aaa std cmp inc pop add jmp mov call sbb lods jmp aas popl je mov les test jne out add sahf movsl aam adc inc push pop les sti push and loopne fbstp add xchg or lahf push lock xor push add jmp nop nop out push faddl pop and and cmpl xor and negl xorl jbe or cmp sti mov sbb mov loop subb (bad) jmp mov aad out mov or add das aas jmp or jne cltd pop mov pop cwtl xor outsl xlat fildll add test push jmp adc daa add mov sarl adc (bad) push push mov xorl mov and int mov rcl or adc push push and popf pop adcl cmp test pushf sub or mov in (bad) xchg outsb and sub inc adc sbb add sub js sbb or adc pop pop xchg sub or pop fist (bad) jo sub cmp jne movb sbb pop cmp jmp or je scas or xchg and adc je mov in adc jb movb fist sub add ja incl call sub mov mov je mov and divl (bad) xor and lahf (bad) ja js add add dec push and xorb adc adc jge jb frstor xor push add mov test (bad) mov mov and data16 incl add movzwl jbe pop (bad) cld fldl js aas jne cmp fs push and inc cmc ljmp movzwl and sub cmp ja cmp or jne or sbb jg rorb ljmp icebp call in pop pop ret movzwl in and jmp mov jbe mov jne dec add jne push add jne push jnp (bad) out pop jne jns jbe movzwl and sub sti sbb sbb (bad) fnstsw jbe cmpsb or jne popf jmp or jne jae lds inc jne mov sbb inc or add or inc adc fcoms fdivs fcmovne cmp jmp in or into or imul clc or sub lret js ja lock out mov mov sub wrmsr and sbb fbld in orb add loopne adc xchg sbb add adc lret iret adc push sbb mov mov (bad) lsl lea lea cmp out jl cmp adc mov xor sbb sub cmp jns dec icebp mov sub shr inc lds popf test lea stos cmp mov or mov cld push daa adc gs out sbb addl ret loop loop xchg dec movl inc and js inc dec test aad fistp cs jne mov mov jge jbe sub mov lods mov pop xor and je pop or inc push mov pop in frstor xchg cwtl mov icebp incl sub (bad) push lret call mov and adcl jmp pop sub imul mov mov inc dec enter adc inc insb cmc inc push add push dec out inc pop jnp je add mov pop and or je sub and and pusha mov addb or fsubrp jge scas mov mov (bad) pusha (bad) cmp cli or sub stos das xchg aam mov sub adcl movl sbbl in cwtl stos cmp aad sub push movl lods adc jbe (bad) dec xchg add or mov (bad) fwait rcll mov xchg add push push pop incl dec or jb popf xor jecxz sbb dec aaa mov icebp (bad) jg sub pusha jne mov int3 mov mov test ret cmc jo adc (bad) shld movsl das inc add mov (bad) popf mov mov xor jmp call mov or lock fldl mov add mov push mov (bad) jmp xlat cmp out jne call mov and mov cwtl sbb push lock in call jmp pop mov push sbbb pop xor ret sti int3 pop or std cmpsb imul (bad) call loopne (bad) out aaa in in test clc add test test je movl cmp xchg cli add (bad) jg lret mov mov and or not adc inc or inc rorb mov dec adc inc jg inc in mov or movsb mov and jne jmp rclb iret cmp mov sbb mov push cmp jge cmp jp movl cld fnsave adc xlat and (bad) (bad) clc sete movzbl sub test je or add idiv fistpll test cmovne mov and cmp je jle cmp je test rep pop push mov add pop popa mov rorb add add xchg sbb xorb ret dec in mov adc loope mov dec inc addl pop (bad) mov test sub cmp bswap faddl mov push xchg (bad) add icebp push in jne jae add repz lods or dec notb or jmp xlat push nop cmp jne and paddusw fcomps xchg pop inc pushf (bad) mov mov jmp icebp frstor add jle (bad) adc sbb call clc sub mov aas sbb cli call cmp xor rorl add inc enter mov mov pop decb sbb push call sbb mov xchg decl and fadd and inc je into jg ja test call push sti clc pushl rorl lock sbb sbb cmp std (bad) or inc mov xor dec nop incl loopne mov xor loope jl clc les xchg test cltd aas mov jp clc in call cmovo mov xor lret not not mov or jne mov and add (bad) xor xor movsl sub or sahf mov jbe arpl clc add ret inc and adc ja mov xchg mov lea mov adc ret and jo test inc add repz adc push add jl dec test mov jne mov mov test jge (bad) es je mov jne inc js mov ficom movsb jmp pop cmp jne stc lds pop push rorb jnp cmp (bad) loopne mov pop xor inc mov fwait jge enter pushf movsl xchg sarl sti fnstsw ret rcr sti pop pop sub aam cmp clc xor popf loope jne mov push pop push xchg or cs iret xor fildll cs mov jb pop or jecxz xchg mov jecxz mov sti sti (bad) xor inc push in xor dec xchg loope xor dec add adc cmp fmuls insb fistpl mov (bad) jmp push out dec call mov clc decl movsb decl mov movsl inc xchg pop rolb arpl jg in dec cmp std in pushf and clc add adc mov mov or lods faddl add add add (bad) test mov mov add ljmp cld outsl ljmp adc out psubusb leave mov or mov and mov mov lea sbb fiadd (bad) lret cmp pop fildll pop jo inc xor scas adc mov icebp fwait xchg pop inc mov jmp adc pop lock cmp inc loopne cmpl or in jl,pn (bad) clc xchg mov and rep dec je jmp pusha adc stos lcall pop or sbb add add aad test cmpb jmp sbb push (bad) jg sti mov jmp push dec jge xor adc push lahf scas in mov ret mov mov dec and xchg add jbe adc mov (bad) and mov jg scas push add cmp ja movl push (bad) mov xor sbb or loop loopne add xchg lea leave (bad) icebp out push (bad) dec test jne pop xor xchg pop mov pop add push and movl out add mov add or (bad) push push cwtl or lcall xor call xchg sub push test popa inc es push jge ret jle add or inc lcall add mov add shll pop out add push out pushl mov mov jne loop push and clc push mov mov repz icebp popa loope ret adc test subl jne and mov (bad) test mov sub lock add add add (bad) outsl mov call dec jmp adc pusha mov imul mov add jb xchg cmc xchg add cltd js test adc or cmp (bad) and pop daa sti xchg xchg lea aaa fmull les pop add sbb cmpl and jmp xor sub pop xor mov decl mov mov push push call mov orb or call jl add add shll dec je adc addl bound add shrl cmp daa pop pop sbb sbb sub loopne je add ja dec (bad) mov or loopne es cmp inc in in cmp mov and in xor mov sbb cmp in jmp jmp call jg std mov mov shr mov sub jl add jmp jg lds jne (bad) test nop jmp ja notl and daa rcrb scas inc and dec lods dec in push out (bad) lret test push adc test aad cmp pusha clc faddl loop lcall jecxz mov dec add pop inc mov aad (bad) xor cmpl mov and xchg movsb mov jne jl inc ret inc jb (bad) lock lahf mov cmp mov test sbb jne cmpl je fwait sub xchg mov sarb inc testb jmp out aas enter (bad) je mov cmp ja sbb dec shl bound arpl add fwait roll test cmp inc mov cmp fsubr mov cltd into push clc inc lea push or sbb or lea mov outsb xchg mov mov or jge decl inc movb mov test je mov add lret (bad) fldl2t roll shrl test je arpl fucomp jle test jmp mov xchg pop jmp push notl dec and jmp adc add lea nop test je int3 adc dec cmp push iret jmp pop xor lods sbb cld (bad) (bad) jmp cmp incl cltd call cmpb gs sbb mov inc cmp test das sbb and inc cmpsl or inc adc ja mov fwait or lods add cmp inc insb sbb movl lcall or inc jmp or mov sbb or and sub jg mov jp sub jne add dec xchg dec xor add lods and or dec add mov add jne inc mov push or cmp cmp movl or stos inc push es add jmp jl imul push in cmp xchg lods cmpl push xor outsb movswl aas cwtl push fcomip cli add cmpl jmp add mov test lea fsubrp mov sbb je add adc or add pop mov arpl or dec rcrl mov cmpb pushl mov mov lea lea cld cltd loopne call and (bad) call sbb cmp je dec sti mov mov add (bad) jg inc sbb je mov push or dec push in mov vminps mov add add ror or or jo (bad) jae faddp sbb add inc jp jbe add adc out mov repz scas das cmc das test pop ds adc jo loop mov sbb and and xchg sub push call push xor adc jmp cmp xchg mov int3 mov addb push xor push dec daa lea pop and pop (bad) das push jae xor adc jne adc stos pop sbb mov lret maskmovdqu divl fs int rorl pop adc addr16 adc adc and out adc call in out adc mov mov dec sbb sbb dec (bad) or shlb je movsb lea mov inc mov outsl mov and lock mov and les clc arpl xorl (bad) mov and int3 jmp and int mov pop andl push jne aas mov push sbb pusha adc sub je pop adc (bad) or inc sbb iret fs lods pop push call mov das and hlt adc negl inc sub add and add (bad) jg leave fucomi jae fstp fnstcw movzwl mov push and push mov and fistpll pop pop ljmp push fmuls cmpb adc dec push lods mov je fisttpll xor xor inc mov cmp and or test orb add jnp adc mov push add xor jmp or pop and loopne movsb (bad) mov sbb inc jo dec outsl sbb mov sub dec inc inc and sbb mov dec or jmp and (bad) (bad) cmp mov push popa mov orl aam or jo sbb adc (bad) dec into inc fadd fs push adc sbb and pop imul jle xlat mov xor adc or ljmp call aam xchg mov xor or scas stos fwait xorb add ljmp add sub pushf xorl addl push add stc cmp dec test adc pop mov inc xor push jecxz fdivl add ret cld mov mov pop cwtl orb movl add add in cmp dec sbb incl add inc rolb cmp lcall add das xor push mov mov mov adc (bad) xchg mov sbbb (bad) imul jmp jne dec hlt inc cltd stos int3 enter inc add push xor cwtl sub xchg or adc in testl enter xchg sub clc imul mov cmpb push mov or add in mov adc jne faddp outsl or enter push int3 mov cmp movl dec icebp aam mov cmp sbb pop cmpl push aaa push ljmp push sti movl or add das jmp xor scas jmp dec call or xorl outsl pop sbb mov sub mov inc cmp lea movzwl pop add test je ret sub cmp lret lods pop mov xchg test loopne add and popf inc leave pop xchg xor and inc jmp adc xor fs and ds push or push mov insb andb inc dec ret xchg dec inc dec ret xchg xchg in ret dec inc js inc dec dec jp clc notl pop push int3 (bad) xor cmp xchg push mov mov mov pavgb rorb sub sti fsubp sbb push loopne pop add cmovbe adc cmp lret xchg ret jp je je shlb add mov daa (bad) outsl enter and mov add call and test sarb pusha and cmp xor inc jmp ljmp imul dec je sub outsb push xor xor call mov lcall add test je cmp mov pop cmovbe cs fmull test adc out dec xorb and ljmp adc push loopne adc dec cwtl fcmovbe call push aas sub and or lock inc ljmp add xlat fnsave xchg push call adc jns and lahf sbb sbb (bad) test inc (bad) xor int3 push (bad) or add aaa mov sub xchg xor fiadd sub test out add xchg inc out inc and bound in sub jnp adc jmp or (bad) popa inc and insl out add outsb cmp stos in add es ret adc pop jb stos jnp stos ja or enter adc cmp fwait es out and inc cmpsb mov mov inc cmpsb sbb xor mov fcomps xor test dec bound repz hlt movsb pop test sahf out call pusha or sub sbb ret loopne call test add push or jo mov mov out test and je clc cmp pusha rorb add pop int3 inc cmp test dec je and fistpll mov mov push icebp adc (bad) push or (bad) je jmp or push cltd pop sub repz dec je loopne add jmp mov aam cmp daa aas or jnp hlt movl sbb push pop adc rclb jp push jg aaa incl jmp loope fidivrl ret pop push and movsl push lea jmp jo inc and fsubp dec jp pop add cmpsb dec sub xor fidiv xor push jmp mov push imul ljmp lods mov fstp std push (bad) add jb or mov jmp cmp pop int or xor lods (bad) adc and mov push inc lret mov jne aad push mov (bad) fsubl sub aaa gs push mov mov aas adc sbb pop add mov dec add test das aaa lock cmp cmp jle movzwl and sub mov adc cmpl je ret inc js mov fstl fdivl adc call jmp adc (bad) jmp nop push jp add stc pop ret dec and lea mov out orb xor xor ss push (bad) sbb cld adc cmp mov pusha and sahf es js neg cmp sub arpl outsb (bad) lret push es inc mov ss add mov in in mov adc cmp mov incb and negl pop xor cmove mov cmp aad test ljmp cmp jae cmp call je psraw add push loope add es pop cmp call mov dec je cmpsb outsl ljmp adc iret xor add jg test add movzwl cmc outsl add test je mov lds inc mov pop or cmovb rolb or mov (bad) pushl adc movw mov lea lea and fcom movl cwtl or je fnstsw add add mov (bad) imul (bad) push lea cmp xor inc xor shr incb mov je pop das je lea inc mov loop sbb popa add inc jne faddl mov cmp data16 insb and mov xchg lock add mov lret add pop lds or inc jge mov ds or xor shlb or push aaa pop xor mov cmp mov pushfw test xor sub jns (bad) cmp add inc test inc lea mov and cmp mov lea sbb xor cltd add nop xor (bad) cmp mov sarl ret jnp cmp je lea add pop dec xor pop idiv pop xor stc das je lea mov lea adc add or test jne mov and lock jmp sti pop in out add jmp sub std cmp jne (bad) jg and inc and add movw lea sub mov adc sbb es push ret (bad) cmc (bad) mov xor pop sub lea lea clc mov xchg push xor xchg xchg inc hlt (bad) dec sbb stos outsl xchg add lcall in pusha dec xor (bad) pushf (bad) jmp lret aam pop mov add or imull cmp push cld jmp mov push inc in push mov sub imull aam cmpsl push sbb dec inc add mov leave add xor sbb and (bad) movsb adcb sbb movsb xor test cwtl ds xchg movsb orl mov sbb xchg add cld jg sub call call jmp xchg cmp leave cmp shlb movsl sub sarb or add call xchg jnp cmp xor and imul js or cmp je push or (bad) enter jg rclb test in pusha pop or xchg push mov adcl push jge insl add push add sub add popf mov pop add sub sbb ret mov mov add ficoml mov sub add incb psubsb mov dec pop inc add push push mov inc add mov push pop test add testl xchg jbe arpl enter dec cli hlt cld fcompl sub (bad) xchg or rcl and dec cmpsl cmp arpl adc test jecxz fisub je enter adc jne lds (bad) ja js insl enter cli jbe test mov or pop or push jne xor xchg and or stos out dec in jmp cli hlt cmp cmc mov ret xchg mov cli dec je add xor cmc push aad mov add pop stos pop sub jge das jne (bad) into rolb leave xor and adc inc mov add inc jmp mov mov add add inc xor inc xchg out sub xor jmp mov sbb mov call clc cmpsb add mov adc push jo iret ret push jmp add dec and push and push mov mov call call add or xchg arpl les mov mov cmp mov pop sub adc test je (bad) lcall mov push test je cmpl mov dec jne test je cmp xchg test xchg mov cli jbe xchg and adc pop mov bound cmpl jno mov fs in (bad) (bad) jmp lea call push addr16 jmp pop inc aas lahf add and mov sbb push test jo in jns or pop and test loope (bad) call push lds loopne lea pop cmp add inc inc add jnp and mov movl clc pop loop inc jns roll jmp jb out sbb mov test movl je popa xor cmovns jmp or leave pusha add icebp fisttpll sub test pop dec and mov cmp je push pop call mov lahf fdivrl xor movl enter (bad) je in xchg jmp adc mov scas rcl adc mov ljmp sub test mov add inc icebp ret out out add rorb orl push lds (bad) xor add inc mov sub ljmp test rorb aas lea dec adc or dec adc dec or adc sbb add or or jmp mov or jp popa fadds sbb xor add sub push jb xorl jmp jmp call add add test cltd andb clc scas addr16 imul mov popa sub daa xor xlat sub inc push jmp sbb out mov push stos cld jne cmp inc pop mov add pop sub add cmp or xor inc hlt hlt outsb call nop mov xor xor add inc (bad) nopl ret daa sub dec (bad) mov lods call cmpsb loop dec inc push cmc xor movl or mov (bad) push enter sub jmp inc or push adc je inc stc cmp cmc lea add incl adc push add sbb fadd ds into sbb sbb sbb fsubrp enter add iret std sbb dec inc add jmp decl scas mov mov and add test inc jo sbb test cmovp mov add or rorb imul and xor jecxz mov dec and inc fidivl test je das je cmp mov inc cs mov jb das testl add and mov jae sbb call mov adc test je lea push pop inc dec incb sub call scas arpl add imul mov cmp les cs pop xchg call dec dec cwtl ds mov popf ljmp push inc mov repnz (bad) fisttp sbbb jns fcoms dec dec adc dec addl mov pop and ret ss adc and fcomps imul cmp dec and pop add or pop push and addr16 xor loopne ret lods inc in jmp dec pop push and cmp adc pop outsl test lcall and push pop push and bound test dec ret (bad) sbb cmp out cmp push movsl loopne movsb mov dec or je add call ret sub or test pop and enter roll (bad) or in and push and call nop js jmp repz or repnz jmp leave int3 fdivl fidivr punpckhbw insb shll (bad) es repnz mov ds or inc jb in cmp js arpl lock and ret testl js divl jae sub cmp test sbb jne push loope mov xchg jmp xchg scas inc cmp jp add and popf fidivrl pop xchg ficompl push xchg ret sub je or idivb sub push adc repnz (bad) push inc xchg fmull dec and jmp test and sub dec loopne popa mov pop and je je mov inc jge inc fwait addr16 xchg jnp add or repz inc scas push adc mov push adc test inc hlt push cmp dec or mov insb xchg test push cmp and xor test dec addr16 and lea sbbl cmp test insb fcoml and je popf mov sub daa adc shr jne push clc cmp mov push out pop add mov in ljmp xchg mov mov sub xor xor mov add int3 repz add imul mov jmp movsb dec sub add or mov mov imul rorb cmp dec cmovge sarl push add add pop aaa fidivr add xlat inc and jmp (bad) lahf add add scas jmp (bad) lahf or push rorb dec lahf add cwtl pusha mov pop add cmpsb xchg scas sbb adc and scas pop sub mov in mov outsl jecxz test sub xchg (bad) pusha stos mov jmp cmp (bad) and mov pop mov mov lret into sbb cmpsl sbb xlat sub dec add (bad) scas nop push scas or notl add (bad) icebp sub (bad) int (bad) (bad) jecxz adc mov repz loop sbb dec je mov dec daa or lret xor lret jbe repnz das mov (bad) int xchg jno or adc clc cwtl clc xchg (bad) pushf vaddsd sub fistpll jge daa jecxz mov jl add clc fild and test rorb push sub iret add enter movsb lods ds xor pop cmpsb add lahf stc ret cmp cmpsb lahf aaa icebp pushl rep test setne test adc mov ret jg rorb xchg rorl mov je mov mov jno sbb xor ret mov pop sbb test shrb test add loop and add mov sbb push sub jo dec imul adc mov mov sub and aaa and lea je pop dec aaa aad dec mov imull call jo je mov rorb push push and cmp test pop or js cmp xor push ret dec adc adc cmp (bad) lea fildll or dec xor and sub or out push or mov and (bad) je subl fmull pop adc or cmp call sub xchg lock lret jp sub mov jne lret xchg outsl sar pop hlt je lea lea add pushf je dec push cmp pusha and xor call je jb test je ret xchg sbb ret outsl jle aaa jecxz mov push fcomps or lmsw shlb aam lret xor out or inc into jae and (bad) mov add roll xor and push xchg jo and dec mov clc xor and popf sub or push aaa xor jmp nop scas call test loopne notl mov inc pusha stos das jnp ds cmp je mov sub (bad) or out (bad) cmp jne mov jmp or mov and (bad) sbb sbb outsl das jmp push jbe shrb sub lret jmp cltd xor aas pop adc (bad) je mov addb ja jg and mov inc je xor (bad) out jmp xchg (bad) je mov and insl sub je scas insl and add (bad) pushf xor rolb or push shlb mov mov je test sub sbbl or insl cmp lret push push and inc jge test dec call lods gs dec iret jo lock je pusha out int int pusha out incl shrb adc movsb ja fs dec aas inc call pop xchg imul add test sub divl orb popf jge insl cmp gs fisubr leave leave subl lret repz ret test adc daa cmpps pop and adc and xor jo les jmp xchg lcall cmp setl inc and cmp jo cmp lea lahf ja push jmp imul mov xchg sub cltd pop fs or pushl ret cmpl dec ljmp stos pop inc inc jg mov pop xchg or out popf mov xchg add ret xor jg mov mov pop daa jmp daa jg fucomip mov dec dec out imul push xor inc push (bad) mov add sbbb mov je ret (bad) dec lret pop inc test jg sbb or nop mov aas (bad) xchg cmpsb add mov enter mov or xlat mov addr16 mov fwait mov push cmpsl iret lret pop pop and sub inc aas sub call mov sub adc mov jne ljmp push test adc arpl inc adc or addl inc and popa rorl addr16 mov mov clc or test jne fiadd ret inc add push dec int3 sub xchg aas int adc mov call inc adc call cmp and loop xchg cli cmp mov gs and data16 mov cwtl pop aad xchg adc stc cmp xor pop cmp lds jne push pushf bsr mov test jne sub (bad) leave (bad) das call and aaa mov rolb pop and push add sbb out add cmc popf mov mov xlat push and jne mov mov mov js cmp xor cld mov xor dec jg movsb pushf orl gs hlt sbb mov mov add ja lret mov add xor jg fild push das xchg adc push jg sbb sub in call aad add and std dec fild cmp and rol aaa pop jns fild add add rol adc xlat int3 ljmp rcl push lahf and cmp ljmp add or cs fucomip mov inc rcrb ret sub aad adc xchg add lcall rcrb xlat xor pop shll xor cmp sbb inc cmp mov arpl in aaa mov arpl mov scas inc test adc mov sbb call xchg inc xor jmp fisttp mov jmp cmp mov inc test sbb inc mov test fild and inc add xor repz rolb jg lret hlt (bad) test test inc xchg fisttp and add or jecxz rsm and mov outsl ss add test incl pop outsl push inc sbb addr16 out mov dec (bad) mov out jl repnz push (bad) pop incb or decb inc or (bad) pusha in scas rep out into addl addl sbb std push add sbb mov inc loop scas jbe add push test adc adcl xchg and mov mov sub cmc jg orl sub and adc push fidivr scas bound inc lods push test push pusha xlat adc shrl mov test dec jg xor mov (bad) mov pop or aam adc mov test jne cmpsb adc jg lods pusha aaa test pop push jg push add pop test jg pushf loope out jmp (bad) jnp push out jg cmpsl xor (bad) jg nop inc sub outsl xlat add pusha jnp andnps add icebp add pop fs add movups stos (bad) pop orb outsb adc add call nop pop mov push push adc jbe push mov or mov call or insl unpckhps (bad) and sbb jge inc daa inc sub loopne aas pop inc mov bound push mov pop cmp ss pop fcomps aas aad aad loop mov fwait andb inc and mov inc and mov or add sbb sub wrmsr and ljmp stc (bad) ffree inc or jnp inc inc lahf or adc sbb xor add mov incb add (bad) sub gs es add add add push lods inc ja divb push mov mov jl sbb mov loop lahf repz cmp mov cld sbb adc popf ds outsb dec loop add cmpsl pop and dec gs inc mov lret pop mov outsb push and push lock inc and loopne stos mov and and fiadd loop jp ror push rcrb mov push mov sub push jl inc or divb ljmp sbb inc mov lods add xor dec loop xchg ret scas pushf pusha nop cmp jo jmp nop push out scas pop (bad) decl xchg add aad pop cmp shlb pushf data16 ss fistp inc dec mov mov jmp inc push idivb jg dec jmp inc loopne fsubrp test xchg rcl mov add mov mov mov (bad) mov xor jmp shrb leave add inc or sub loope (bad) movb jmp push sbb push les sbb je pop scas jne mov push pusha add scas aas scas or sbb dec fisttpl pusha push sbb rcrb loope cmp inc push test jl xchg inc loopne stc fistpll fistpll out das cmp adcl (bad) pop test mov pop fs jo adc xchg add inc out cmp inc das rorl xor pop test xchg jecxz dec jmp xchg decb ret mov and addl adc xor in fwait and and aas and and sub (bad) add xor jno movb fs or mov aam imul xchg inc enter inc inc cmp push and cmp ljmp lahf cld cwtl ds adc out add sub icebp push aad sbb sub sub aam mov jge rclb add cmp cmp push push rol inc cmp push push es int3 pop loope mov loope lcall leave fistp ror adc inc fisttpll mov jo inc push pop and test cmc scas sub cmp je call adc or and ja cmp and jecxz or lds add cmp xchg mov and movsb out inc aad jmp pushl call je jo lahf push and shlb adcb jp xchg add dec sub cmp imul aas andb inc sbb push inc mov jae adc sbb test je cmp rol fldl popf scas je adc jecxz insl mov shll push cmpsl sbb out inc dec xchg adc cmp ljmp out das mov sub sub std push aaa mov or cmp rorb inc daa add inc lahf cmp inc test adc push jmp aad dec mov call and push out fdivrs mov push adc outsb add sub stos mov ret sub and sbb test adc test and sbb gs loop lods seto icebp or xorb or mov sbb fstpl fwait sbb or in mov mov in out pop mov mov js pop sbb fcoms or lea and inc and cmp incl out jp mov inc add je sub dec lds pop push cwtl mov mov mov add and lea mov test je popf xchg dec xor bound xlat cmpsb cmpb dec je addr16 add mov test jne rorl sub jns jns std ljmp clc in je pop and add lea cmp ja imul inc add dec adc (bad) fild inc or mov mov mov mov movl inc out movl add add cmp jb push or dec and add dec jecxz push mov lahf or sbb cld add stc cmp and in inc dec or xchg push jns push xchg ret bswap mov jnp or cmp jb mov xor ret sbb loope andl push add loope pop adc add and mov mov mov inc xchg add jbe std fldl lods cmp call jmp shlb nop add sub out mov in je mov clc sub stos pusha push adc jmp adc mov mov mov or jecxz mov mov mov mov pop mov movb mov mov (bad) push nop test inc stos jnp rorl mov hlt (bad) lcall add or adc aas pop add mov dec add xchg nop add jmp ffreep xchg sbb sahf mov (bad) jo jb pop adc cmp test (bad) (bad) push ret pushf mov fs jg mov call sub leave push mov rcr shrb adc and or pop push ret (bad) push push dec adc lahf ficompl clc inc sub lods jnp inc outsb rcrb mov arpl jmp dec aas daa or xchg inc and das jo loopne mov mov aaa sbb add cmp stos add or adc dec adc jmp cs add outsl mov cli cli sub add aam mov jne repz inc add je jle mov je dec decl ss cmp add mov inc adc je ret aas mov add xor jge add mov ret nop inc in add jne or arpl sarl inc cmp das mov fdivrs mov rorb mov or add mov lock push push hlt mov mov jecxz rolb mov push outsl jmp es dec mov outsl mov loope push mov mov fcmove neg aam test lock jne test je cli push mov inc jmp stos sahf inc inc movl cmc sub sti movl je loopne pop hlt inc and push mov adc add push mov test idivl pop dec sbb dec jmp dec cmp test lds enter inc inc adc mov ret xor jnp out mov decl jbe mov nop mov xchg (bad) call mov adc jbe xchg cmp push and out mov pop xor sbb cmp inc pusha outsb aaa add mov or pusha pushf push xor fstpt (bad) mov out or dec lcall inc test ss dec inc or inc outsl inc jle mov lds fbstp add sub jae lea mov mov lea mov mov loopne push aam inc cmp out lea aad mov and sub jl cltd lea add and ret dec sub sub pshufw xchg sbb mov (bad) cmp mov call arpl je cmp fucomi das ret test cmp jne add jmp adc mov inc add inc mov into jmp (bad) das (bad) jae test pop inc cmp xlat test daa inc insb xor jo cmpsl jmp mov jl (bad) mov push leave in lock mov mov mov pop push ja call clc add adc scas loopne add cli add mov add inc ret jmp cmp lea sbb mov push jne call clc add shlb or and push pop mov add aas mov add inc sub loopne adcl jnp popa or sub loop mov add cmpl mov mov push fsubs fbld inc or and or dec add pop or sbb cltd (bad) pop add js loope mov call push xor add jmp pop pop int3 push adc dec xor sbb call out add and test or test add add ret push cwtl mov ret pop (bad) cwtl (bad) jge es into jno mov mov popa ret pop scas jnp mov shrb lahf in mov inc sub sbbl stos ret xchg test xor push aad insb xor add test and sahf mov xor repz xor mov in int xchg jmp mov popf cmp insb pop and mov adc nop out inc mov sarl gs cmpsb inc push insl mov pop pop fcomps test xchg outsl dec cmp (bad) aad incb or mov ffree out jno or sbbb call adc inc sub jb cmp nop jmp dec sub incl sbb add mov mov or mov mov cwtl and adc add xor sbb mov adcl jne push sti clc pop lahf push ret sub je pop jmp xchg inc lds fisttp sbb stos pusha outsl add cmp incl mov jge pop repz or mov mov lcall stc or in xchg divb push xor (bad) aas push add push xor add mov adc mov jne pop daa outsb mov inc add lar adc iret nop jne inc pusha or test jmp movsb jmp scas push xchg mov ljmp (bad) incl sub ret cmp pop xor inc xor jb pop inc je mov test je mov aaa mov mov test scas rolb and add cmp aaa sub xor scas aam sbb mov xor jne je inc inc test sbb jmp mov aas es jg and inc je mov mov in add cmp jne xchg xor out cwtl xchg inc or outsl xor cltd adc add inc sarb aam std test inc es inc jo out cmp test jo nop insb xchg push int in inc stos xor mov cmp inc out inc insl inc int3 jo scas in sbb and in inc mov inc pusha push inc js and and jp adc jae or and push aas movsb (bad) push out push inc cmp bound out cmp inc js inc fisttp xor fs scas hlt subl dec mov dec inc inc sahf cmpl xchg adc dec sbb cli dec nop nop pmaxub shrb jne or mov (bad) jmp jo pop jmp xchg or and inc testb ljmp jne cmpl decl test stc mov add sbb mov and or popa or into test adc mov xchg inc sbb dec lret or xor push pop pop dec or mov loop and push mov xchg cmpsl cmpsl testb je sub (bad) add inc and push mov fist les pop pop bound adc fisttpll test fsubr mov pop push aaa xor outsb aaa dec jne dec adc jmp inc fadd call je cmp jne das ss jbe mov in and sub inc jmp pop add lock (bad) jmp ud1 push and adcb mov sbb mov test xchg xor sbb or (bad) push es or jmp inc ret jnp lock push inc sub pop inc stos out ljmp push add call or or lcall xor add jmp sbb mov xor pop mov cmp je add outsl push test sub adc dec roll add inc jno pop ja cwtl sahf jmp jae mov pop jmp sbb hlt jle inc push mov mov mov lock adc jmp nop fild push (bad) jge cld fwait subl sub cwtl inc and mov fwait mov sub repz clc and add pushf mov push loopne xchg test andb xor or and test pop add cmp adc add jg lock stos mov mov dec stos cld mov mov call jp jo adc jae inc and push ja shll aaa and inc cltd inc in mov cli sar rorl in je jae inc pop and sbb add dec sbb aad in je or mov data16 popa jmp mov add cwtl jecxz movl sarb lds add inc sub cwtl push repz push cmp cmp sbb jp inc popf sub ret js and add enter cmpl mov call jmp cmp cs or inc (bad) loopne adc jmp iret xor mov adc or sbb inc in outsl push xchg mov push adc lea (bad) ja mulb js push and in push cld or mov call adc adc movsl jbe push xchg jle jl cmp pusha (bad) aas cmp inc mov test mov test jo je inc into inc adc rol jno ja push adc mov mov adc testb sub mov mov and popf (bad) xor in hlt sub add sbb sub (bad) xchg loope test outsb and test mov mov std sbb ret pusha mov loop je js aaa sbb dec and mov call pop int3 imull aaa and test push test (bad) fucomp mov or mov or or outsb pop xorb or xchg int3 adc rol push cwtl test andb movsl orl test cmp mov clc pop pop pop ret cmp adc mov test nop fidivr mov xlat add call call xor dec and or sub and les sbb inc xor mov sub jne jl sbb popa popa inc inc sub repz test fdivr dec mov out add int sbb adc xor repnz sbb jle xchg test pop gs rdpmc (bad) mov shll sub addl mov pop ret push pop pop xor or cmp dec (bad) addr16 pop add test pop adc push into fistp rorl sub adc add mov mov xchg clc scas and sar mov mov sub mov inc (bad) or add jne into fnstsw test mov lea test (bad) fidiv stos mov xchg inc sbb sbb rcr icebp es call add decb xchg rolb fs hlt mov adc xor cmp cmp inc add call xor int adc xor inc and mov cli mov and testb je jo xchg pop and roll mov adc push adc in out dec pop adc loop and js lea add sbb pop lock ret dec loopne (bad) jle repz push pop loope andl mov and mov aas mov (bad) or cmp mov inc ja add std and inc sub ss mov inc (bad) out mov jbe xor push es add rorl test cmp push mov pop inc out call test in sahf add mov mov sub inc iret pop mov mov push call in mov (bad) pop and sbb outsb jo push call fist mov testl in sub mov mov add jmp sbb in cmp lds and outsb or cmp mov lods addr16 mov jne or rorl push cmp mov mov lret mov or xor pushf xor cmp jp lret inc add adc je add adc adc (bad) fldz add inc xor jmp jl add aas dec add fs push packssdw (bad) cld call jmp and cmp sub mov inc dec sbb mov xchg call outsl test mov mov movl adc add (bad) xchg mov jne ljmp ljmp testb jne test adc mov loope mov add pop or (bad) sbb and cli iret xchg je lods das or jg cmp (bad) jae test je rorl cmpb jne add xor cmpsl push (bad) push xchg lods pop adc jno xor les jne mov mov or ss mov jne sbb lahf rorl and popa adc (bad) jle test dec subb push daa xor and and pop or or and add mov std sbb pop mov test jne lea inc mov mov mov jl cmp pop pop pop ret shrb jae xor xchg imul iret jae mov sbb iret test push in aas add scas popa (bad) iret flds fiadd rorl ss aam lock je mov mov or pusha loop rcrb out or add repz movl insb jbe add adc insb jns push cmc (bad) ja xlat push push mov scas sbb cmp mov push push jbe call out rclb icebp ja insl je movl or adc cmovno push call mov adc cli add addb inc mov es imul xorl inc je into (bad) dec or xor loop mov pop jbe push mov sub mov fdivs inc mov mov push (bad) pop rcrb cmp jne call movsl add jne std adc fs cmp adc jle mov mov inc andl or inc inc stos mov je xchg mov sbb shrl add ficoml out ret movl jmp mov lods or call and or or xor and outsl jo pop cwtl loope sub mov mov or or lret jo aam jmp and nop push leave inc jg add push (bad) ja andl call stos pop add mov mov add out call cmp es sub pop inc and mov pop inc xchg add inc iret mov pop mov (bad) lret add jnp das add test dec das movsb adc sarb jae nop mov (bad) call cld inc dec add or dec jmp xor cmp pop std insb push push mov push and mov pop sbb outsb movsl sbb add call pop outsl sbb jle adc out call in rcll outsl (bad) xor stos fdivrs xor jecxz repz aas xor or in int3 xchg jge jno cmpl and add cmp adc test add or jnp mov add inc inc xchg (bad) std mov movl inc inc push add inc cld jne addr16 add inc mov dec push inc das add test nop imul je mov leave jne fcoms mov call mov jne dec mov out cmp mov or testb aaa jl arpl push and in add fist aam test mov jne mov or xor imul mov test mov adc inc mov adc cmp jp adc jo ret sub test roll jg rclb daa and push cmp aas (bad) and add add sbb mov xor inc fild mov nop sbb sub sarb scas mov lea clc ret fist rorb fwait inc dec sub shll push inc push mov test sbb lods cmp mov mov mov mov mov or and adc movsb test ret add inc ljmp or push mov paddd inc add inc dec mov mov js (bad) mov mov adc pop cmp and test int3 std xchg mov add out jne fild nop sti mov test pop test jne ja push adc inc orb std mov ret test sub ret test dec and add nop decl add sbb les stos mov mov cmc pop out xor add test call clc inc xor test roll sub (bad) mov orb pop or mul adc mov inc mov pusha mov loopne in or out nop or (bad) repz scas mov and push jg,pt fisttpll or push mov rorb inc inc clc add pop mov jmp xor scas inc sar int3 out and add test (bad) lcall adc (bad) mov push jmp loopne mov testb push cmp mov push (bad) push add and in outsl sbb mov pop pop xor sbb lea push rclb inc ror nop mov jmp sbb (bad) stos jmp jne push xadd add or js pushf ret mov jo mov lret inc and mov mov or nop (bad) jp cmp adc pop and (bad) sbb or in fs in sub xor mov inc adc scas push add inc cmpsl les test and inc movl movl xchg cwtl setg (bad) add es iret out mov stc (bad) push (bad) xor call (bad) pusha jo or (bad) aam test sub xchg (bad) das add and mov out icebp push push fcmovu int3 inc add and test (bad) out aas sub and push cmp (bad) call mov push out sbb sub or imull sarb fs or mov sbb jl sbb int3 je sbb mov mov xchg xor stos sub mov call jmp or mov jae or popf mov and out aas xchg push inc je mov jmp add outsb test add leave stos in enter jmp (bad) cltd mov inc jmp mov lahf push call call lds test add push sbb or cmp jmp or cmp test loope dec and add jo xor iret cmpsb pusha fmuls ljmp test das imul mov pop in call mov fistl sbb call pop xchg mov and xchg push (bad) subl gs and sbb sahf sbb repz jbe inc and pusha rorb mov pop add jbe cli add adc inc jne xor stos push cs (bad) mov idivl mov pop jmp or in xor enter jne xor add in call ljmp push mov in pop call sbb jne sub push or ret sub sbb mov lods sub sbb je adc inc das add push jo ja cmp (bad) pop adc in (bad) shlb cmp adc add xor or std (bad) jne pop mov adc cmp cmpsl call mov call imulb ds lcall mov dec mov push mov fsubr imul aas in cwtl lea nop pop jb,pn and or pop je es mov mov jnp je add jl mov mov lea sbb jl imul fisttpll mov jmp imul cwtl push add mov xchg xor fnstsw cs sub sub mov add mov loop inc jo cmpsb fnsave jmp bound mov ret aaa mov decl movl or pop movl mov sbb and call fwait adc inc push addr16 ja inc or push and sahf mov xor out loop mov jae movb jmp mov pop (bad) movlps sbb or inc or call cs adc test inc mov out sbb adc xor addr16 roll lds bound or sbb or orl hlt pusha insb out jmp xor jg loop mov (bad) (bad) and aad lea and je stos (bad) xchg mov movl jno test andb xor mov andb pop shll cmpb lock mov mov movl inc or movl pop ret fild or cmp pop nop mull push andl jmp dec cmp push je cmp jne add adc cmp sub xor call jns xchg getsec aad pop sub aaa pop ret pop or in adc pushf mov in pop push and sub push adc adc or rcll jmp sub jo lods call cmp and xor mov jmp dec and insl cmp push and sub cmc pop subl sub pop pop mov pop add popf jae das or rcrb andb pushf and inc or or inc fdivr and and xor je and mov xor inc xchg jne dec rcll jne leave add jno xor loopne lret pop jmp jg imul test scas ss jne scas je jbe test push mov push add mov call push adc push adc fist je mov mov mov pop jge adc dec add jle ljmp test je jecxz scas sub test and outsb ljmp inc jecxz push sub loop aaa loopne scas inc cmp daa test je test jne add dec loope cmp lret push sub rorb dec mov add insb sahf aas test loope push hlt je mov call pop xor test lea add add orl fildll and repnz pusha adc in inc sub sbb mov jnp add les out or mov cmovno mov fxtract adc lods mov inc xor outsb jp call and cmp mov add xchg cmp lock (bad) decl test jne out cmp andl test jle adc push sar adc (bad) pop (bad) jp mov inc xor pusha lock sub mov and sub lcall es or add and loop mov out aam push inc sub roll sbb leave cmp and loop jmp cmp (bad) cmp jne in inc xor icebp pop inc and test push cmp sbb and out pop jns int3 mov test sub dec mov loopne inc and jmp push mov sbb xor and or cmp inc ljmp test jne test je mov and mov or nop (bad) xchg adc jmp adc cmp jns fisttpll pop aaa dec adc xor leave je inc jle std clc xchg je jbe push test cld lcall mov dec xlat pushf call jmp int push and adc push mov sub or fisttpl cwtl mov xor inc inc xor dec fwait (bad) call mov or or pop jge gs mov rorb xlat sub mov sub push inc jo (bad) rolb gs lock test mov jbe (bad) pop sub icebp adc mov inc arpl xchg adc adc cmp inc and and jmp sbb das fs mov cli pop mov add bound inc arpl sahf fsin inc pop push pusha mov mov adc or mov mov mov sbb cmp fist pop add (bad) jecxz test and fs jmp add stos adc cmpb call ljmp and je pop test jle imul add movl cmpsb incl mov inc inc push pop dec sbb fiaddl jo cs movb xchg xchg and stos (bad) call mov lea sub cmpsb std test out das orl in jg xchg rcrl and mov subb lret movl add push pop or daa inc mov add jle jo adc clc in mov add cs mov cmp je mov mov ja insb (bad) pop call xor add add adc rol outsl aas fadds imul push jmp sbb lret jg stos clc adc mov jae,pt or cmp add jl js add test lods push jo popa push dec pop icebp aaa adc mov je cmp ret ss hlt jg jne mov jmp mov iret std (bad) psubsw xlat (bad) adc or sub sbb mov pop test icebp add inc add add add adc push adc adc add out stos stos mov call sbb mov (bad) xlat ffree ret out clc push sub icebp dec push cmp rol add or pop loope scas imul push or ss adc mov mov test pop subb ret dec lds adc mov mov roll sbb adc stc push insb or nop or inc add lds push sbb pushf xchg lea fsubr adc xlat cmp cmc inc push inc and mov mov jne add clc call or jnp test int3 rorb jbe mov mov mov jne scas sbb pusha (bad) scas test and inc ret lea sbb sbb into mov lods lock and add (bad) lcall cmp mov hlt push fucomi jne enter int3 hlt xor sub pop and in arpl insl stos dec jmp push lcall adc xor pop ud2 scas pavgb stos pusha outsl popa popa call mov jmp pusha imul xchg or push stc mov jns cmp sub cmpl rolb inc jmp pop movsb outsl mov pop out test pop mov cmpsl das test and test movsl jne test jne sbb dec inc cmp jmp sub inc dec js xchg jg (bad) fs jne (bad) add ljmp or in es arpl in sub jmp into les or pop or jp jnp pop inc jne pop xor push mov cltd mov inc cmp out sub xchg testb jne repz sub into cmc jmp (bad) pop std cmpsl inc mov push jmp data16 aad decl cmpsb adc mov in stos add jne xor call add push add pop iret cmp pop and pop jmp call lds int3 outsl lock outsl mov cmp adc jg lret je add pop dec adc mov in sbb decl aad clc out pop (bad) push (bad) push pop incl inc cmp xchg jg flds (bad) notl sbb les mov inc incl (bad) fidiv adc sub je loope addb inc gs xor inc dec inc xchg je mov add hlt roll sub sbb xchg fwait popa inc scas xchg cmc ja push and mov mov popa (bad) (bad) lahf jg les je mov and inc push call push pop adc idiv decl (bad) out test and sbb cmp adc adc test test je mov and and test push in jne,pt push addr16 and mov ficom push or rorb cmp jno ret sbb ret clc unpcklps add imul xor out jns aad mov jae sub ds popf mov mov sbb pusha xor pop xor lahf popa xorl enter inc pop mov bound cwtl (bad) sbb popf inc fsubr xor das outsl out inc aas push aad fild test je pop inc adcb xchg inc mov pop cmp je cmp mov subl add or lahf sbbb call je add fcompl or jbe mov pop cltd jl push lcall inc cmp dec sub scas lret and xchg and inc mov add (bad) (bad) gs pushl xchg sti fnstsw mov mov mov call gs sub lock xchg mov in (bad) or cmp incl sti jg sub jnp test je pusha dec mov add add mov mov test fcmovb jne jmp mov dec inc add mov lea test mov in pop xor mov and callw pop js stc lock inc sub xor test jle out hlt cs rorl fiaddl icebp sub sub lret into (bad) (bad) cmp mov ret subb jne and jne rcrb push xor and cmp push or outsl push (bad) clc jno in orl mov pop enter push and cmpsl test dec inc cmp popa xchg and test in push (bad) sbb movsb and fs out xor aas std jg imul lea or test (bad) dec inc jne fucomp daa mov jbe into jne into icebp test jle xlat jo inc xorl (bad) out sub jne mov mov call mov sbb xchg outsl dec into rclb mov or insb decl add lods aas pop or movb pop jno push lahf data16 or rcrb inc ja mov out pop jl sbb dec push mov dec and aas (bad) decl and pop pop ret mov and sti loope enter mov jmp xchg adc cmp cmpsb sbb adc mov (bad) (bad) (bad) pushl incb je test jne test je cmpl jne testl jne pop js lds nop pop fisttpll jg call fild insb and ret sbb mov shr pop stc pop pop jmp jmp add call inc lock je mov lea mov add (bad) cmc out mov push sub sub add mov std add mov bound jge test push movl cmp cmp push sub xor jbe dec adc pushf addr16 push das (bad) add jbe push fisttpll (bad) sbb (bad) std jmp bound test pop rclb sub xchg call je add mov test unpcklps push inc mov sbb xchg out inc iret movsb icebp or adc cmpsl js mov adc test jl xchg sub pop xchg xchg sub xor mov xlat or popf addl jbe call sub add sub mov sbb jl (bad) sub rclw aaa adc test push xchg in mov mov inc and in (bad) xchg (bad) ja test je cmpsb sub cmp mov cmp xor callw pop ja dec inc add sbb sti jne sub push adc call or mov dec push or ror insb and call adc andl cld inc and call xor sti or fwait dec push lahf dec mov cmpsl lea inc adc mov aaa or mov push mov outsb sub sub (bad) jmp cli add cmp jb sub sbb sbbb inc mov xchg jb in pop fmulp in mov xor inc jmp cmpsb add or xor dec call fsubrs ds jg lcall into jmp scas cmp cmovae sbbl push pop mov pop insb mov in pop fsubr push inc sar sub sub add add inc or pushf mov xor adc rorb bound push xchg push pop rol jbe ss test pop sub and clc mov and lock xchg dec loopne adc mov jno jae pop decl push fsubs inc and add adc push idivb jmp aad adc inc lahf inc or out jmp jo jo mov push sub pop mov push call push pop cmp pop mov mov jb push testb mov movsb faddl add inc or orb mov add sbb pusha out ja sbb (bad) (bad) jmp and dec dec cmp jmp pop pop xchg inc pop xor xor cmp xchg mov sbb mov push xor shrb xor test lds adc inc mov push push (bad) xchg testb inc inc std mov xor cmp je js dec cmp inc scas aad je pop mov push sbb movl mov cmp mov je ljmp mov mov test idivl mov test je cmp or xchg push mov push fs mov or inc dec or xlat or (bad) in rolb mov sub out fwait xor inc clc add or add daa jmp aad mov lret push mov mov pop call pushf and aad jae aas and (bad) or test or mov mov (bad) lret in or dec mov jo test cmp or adc aas dec jb fcomps popf imul nop adc sbbb je push mov sar xchg movsb das pop test imul jge add fsubl pop jmp shll adc cmp out add inc and lret jmp (bad) pop fmul inc leave icebp inc add push or decl cmp dec test ret (bad) sub mov popa inc or or (bad) adc adc jge incb push and je sbb pop mov shl mov jecxz fbstp in xor sbb inc jg stos es (bad) jne mov mov sub xor xor mov lahf jecxz inc test stc sbb loopne mov in xchg mov iret ja,pt add inc sbb sub aam pop aad aas mov sub cmp adc jbe inc xchg pop inc (bad) js jl movq add test dec mov sub sub or mov (bad) jo scas add jb ss call add roll aad push iret jge mov pop frstor jns in out pop jb test and and (bad) pushf ret mov jmp and or shr dec dec dec add sbb sti xchg mov movsb mov lock leave leave (bad) pushl rolb and add jmp push into adc in adc and loope add mov xor or mov or mov xlat daa test adc mov cs adc inc xor sahf lret push add or cmp rclb in repnz cs pusha add sub inc int dec sbb mov (bad) incl fdivrs pop add test xchg icebp andl loop cmpxchg adc push popa nop das mov (bad) jns xor or mov jb cmp mov add push repnz nop call enter adc decl std dec push negb mov sbb jmp stc cs inc or daa sub jae cmp mov scas popf lock push aaa push or pop and pop das add and cmpl and xchg je aam call cmp jle adc pop adc insb xchg jo or fsubp cmp cli xchg mov bnd (bad) jne mov lcall cld cmc and (bad) jne xor test setne shl mov clc dec in loop int insb inc roll je fmull gs mov mov cs cmp ret add mov push pop jne call pop sub mov fwait mov ret add add jmp sbb jmp inc fdivs dec movsb cmp add mov btr lods test xchg (bad) push je add cli pop insb decl cltd jo fistp pusha ret xor inc or and or daa or jne test adc push das mov mov fildl (bad) mov (bad) je mov loope outsl push push jg and out pop sub movl (bad) pop and je (bad) mov jle ret cmpl pop ret pop jmp out pop mov psadbw or testb jne sub dec inc mov fild cmp rorb mov mov rolb inc inc lds add movzbl fwait (bad) lcall mov add sti fisttp lea loopne mov (bad) or or inc inc stos jg inc add add sahf push jne enter push cltd push hlt pop int3 inc push and je orl jp (bad) lea aas mov fs or je inc mov or xchg mov addl xor xor mov je sub mov sub push sub sub aad je lods outsb stos pop add cmpb pop (bad) lea movb adc popf pushf jecxz add roll sub sbbl adc aaa jmp inc mov mov cltd pop or or pop mov jne movzbl popa jp jno test lock hlt mov loope adc xorl mov addr16 mov in fucomip cmpsb aas mov test jle call add add mov imul (bad) mov sahf add pop add inc add ja subl out add sub xlat and inc fist loop cmp push mov cmpl sub xor push sub xchg jnp and jnp jmp repz jo mov dec les rorl push mov cs and test or inc push push sbb or mov adc push mov adc push cmp sti pop add and push add orb cs rolb mov decb test xor push dec push and (bad) fdivl outsl inc sbb mov and mov cltd andl add mov xor sub test fild dec mov or movzbl test and dec call je cs (bad) ret or icebp mov pop mov and jmp scas jae mov js ja in jmp negl int3 scas xor test and pushl add add into add jmp xchg es push mov addl mov loopne scas cli shr sub fldcw (bad) inc aam mov je iret (bad) subb je dec jmp sbb mov and repz std cwtl and jmp scas orl sub lock pop and test cs call jmp rclb xor sub rorl dec push cmp xchg adc js pushf sub mov xchg pop ja test test lock (bad) icebp mov add pop sbb in test je test jne cmp cmpl cmc jmp or test or hlt clc jne add adc mov in pop jb or je pop das jmp xor mov stc or outsb xor pop es xchg sbb xchg jmp popl or sbb or xor inc sbb xor jbe or roll and push push and push loopne jmp adc fmull jge inc sub (bad) jg xor jg jg,pt (bad) adc cld jg,pt inc xor (bad) cmp inc xor icebp and and loopne or fs add sbb movlps in and sbb cmp add repnz std sti aas je or movl or mov mov sbb jge or mov inc (bad) adc xor (bad) and es data16 and (bad) or rorl cltd mov daa fidivrl nop daa add add les test or and std ja xorl cmp ja or add inc jg push faddl lea jle add mov mov aas push adc add punpckhbw jnp mov lcall and jb cmpb sbb test jecxz adc pop pop mov jne push cmp decl loopne dec add loop mov pusha lahf add sbb cmp jne cli cmp jmp lea mov sbb test push cmp push or negw sbb push mov movl or mov cwtl mov push testl (bad) mov or cld inc jo jne adc dec and cmove mov jmp sar xor stos aas jae dec mov pop mov arpl adc (bad) pop fnsave hlt add jl inc fwait and pop rcrl std cmp inc leave mov dec inc (bad) incb add xchg xor mov mov cmp inc pop mov loop sbb test fwait add cwtl out ret adc xchg push in jb popa je ja ja (bad) jnp inc cmc sub cmp adc movsb mov aaa inc dec cmp test out pop adc lret and or and push add lahf add (bad) stc adc and cwtl mov cmp (bad) sbb jmp sub inc inc xchg mov jge inc rorl xchg outsb mov out call je push mov xor cmp push add and ljmp and inc out adc xor fs je mov sarb push adc pop jmp nop push adc sub out jb jg testb mov jne call mov mov jecxz pop imul cmp mov je lods adc inc cmp pop sub xor lret adc inc das add or in jae,pt sub adc call test incl (bad) decl iret scas mov and mov cmp sbb or cmp je and (bad) lret (bad) cli stos jg insb add mov movzbl inc test js and ljmp push loope shlb xlat and je mov (bad) les (bad) sbb jne fist push cmpw cmp movsb mov mov scas fwait mov xor (bad) lahf xchg pusha mov arpl mov mov add (bad) (bad) (bad) incl xor test je mov and cmp sbb and add mov not or test mov pushf and test je adc inc scas je fisub mov dec pop add dec aas mov adc enter mov xor test or test xor sub fnop jmp adc lds aad jne xor inc incl mov inc out mov sub add pop pop ret movsl out movsl mov hlt incb rorb cltd or add xor rorb push mov das lret xchg sub das lret jo jb inc cmp dec das lret stos lcall jnp mov xchg lock jmp iret dec out aad imul add xor sub jne incl inc add test std (bad) call insb push lods call test xchg jae rclb repnz and sub or mov call add or or je add out das cwtl mov inc sbb push loop xor ror sbb pusha adcl inc cli adc or les add ja jns sub cmp push fnstenv jge ljmp sbb scas mov add out pop and in cmc sub xor pop std mov (bad) jne sub and xchg jg xor incl add call loopne das push int3 mov or dec incl movsl xchg and jge add test and sysret stos push adc xor icebp sysret jb ds ret dec xchg call sub jne sbb xor xor lock pop (bad) cmc das mov pop push test jne cmpb aaa cmpb push jno pop shll pop and enter sub loopne jge push stc pop push mov je add push shll push mov rorl inc shlb or pop (bad) sub sbb pop fsubr add je sub outsl jmp add cmpsl mov out aad movl mov ret (bad) pop pop sahf inc subl mov (bad) in mov mov test nop or stc cmp inc push rorb cmp cmpsl or (bad) sub or cmp and xor call mov push and mov cmp add cli ret xchg or and xchg iret pop rorb std (bad) sub cmp sbb xchg inc lds inc pop mov das je popf or aaa jo incb jbe cmpw enter xlat cli mov lea add add mov fcmovne loop inc inc in push sbb cmp les or call cmc cmp test lea psrlw sbb cmpsb lea scas push push mov test jne inc adc lds call and pop pop jg leave lea je imul or rcll add push (bad) cmp add call cmp add xor loop jg adc test dec sub test push adc and loop ja xchg mov inc add jne,pt add inc push test pcmpgtd call sbb or cmp ja jmp stos inc subb push sub pop rcrl add lock call add push fwait mov adc movzwl iret adc mov outsb korw es add add xor sbb lds cmc mov sti sbb and jmp add mov insb fsubrp mov add push das je inc inc ret aas add jl jbe sub add dec ds mov push in sar push sub add sub lea jmp adc xor call dec mov push mov fistpll and add and mov imul mov mov push add test mov adcl or iret dec into inc sarb call fdivl mov mov test je add or negb fist xchg scas pop push call (bad) lcall jo nop je scas inc idiv jmp push push xor es adc sub scas (bad) ljmp ret and out (bad) adc xor cmp mov ljmp mov or je and and sarl fimul mov out clc mov add test push mov xor out push add (bad) adc sub scas lcall adc mov push aaa adc mov mov push adc jl rclb (bad) aam jbe fsubr lods sti dec or jo ss jl xor push pop add cmp or add mov jnp jne xor test pop ljmp sub lret je jg test jne adc lea imul sbb cmp call je subl sub pushf (bad) sub popa loope fild sbb pcmpeqb add insb or xchg jae lret dec sbb idiv adc or aam pop mov sbb cmp ljmp sbb push das rclb xchg add popf je jbe mov cltd test jmp scas loopne (bad) xchg xor jl sub ja dec out loope add call movl inc xor mov sbb std xchg dec cmp mov call xchg ja mov lea call pop test data16 hlt mov mov int3 paddd incl xor sub je movzwl test mov jmp pop (bad) or cmp and mov sbb mov xor push (bad) inc push fdivrl lea push ljmp rol mov cld pop add lcall outsl add lea testb sub call jg pop add or mov push push xor push push xor sub dec push cmp pop add sbb test mov xchg xor xchg pop jmp (bad) jmp adc add cmp cmovb add mov pop xchg les push sbb mov adcl and jecxz mov mov mov adc rolb das lea sti mov adc test mov add in and mov (bad) je add inc int3 mov and add mov add xchg ret push push mov sub mov orl clc adc loopne lds aad and push ffreep xchg pop jg outsb push dec add inc outsb aam (bad) (bad) incb and stos sub xchg in adc out xor jbe mov ret leave cmp call xor orl popf mov inc sbb cmp orl add cmp or push aas ret jmp aad mov inc out loop xchg dec mov dec dec decl mov je fistpl inc icebp add mov fldt (bad) test adc sub mov mov lea (bad) decl add decb push mov shr shl call sub cmp jle and mov lcall or jg inc or and mov jbe lock adc or dec aam or sub mov cmp cli cmp inc fdivr rorb push sarb (bad) je jne jne gs sub push mov call xchg push aam inc fdivl sbb decb adc pop pop push cmp ja or adc out call pop cmp outsb lcall call cs inc inc loopne adc jmp ja or je add test cld aaa icebp movzwl in (bad) cmp jae lea mov cmp addr16 add lcall bound clc xchg loope js and gs jne sub ret out fs push pop or xchg or out sbb inc loopne test jmp cmp enter (bad) in cmpsb pavgb or jg mov and data16 cmp mov call mov push mov stos inc jge call mov std jg ja test cwtl je mov movl decb adc rcrl loopne in dec mov je in sbb ret add mov pop add push mov test jne mov mov mov ja jp scas pop adc mov inc sub push in cld (bad) cmp or daa and mov mov mov mov fs add xor mov mov cmpsb mov das mov sub sar cmc (bad) je mov jp and (bad) or das pop add inc sub push pop mov mov mov lea jg jbe lea mov sub push jne cmp add dec fmuls test lret xor or std inc lods xchg sub fistpll call jmp or lea in dec dec add dec or stos or xchg test js sub (bad) clc add or jne xor test inc add jmp mov jl mov sub inc cltd (bad) mov or or enter sbb decl jne adc lock int3 je ret ffreep popf sti mov jmp dec jmp push mov or inc in xchg push enter and call sti sbb mov ss enter out inc push push xor and fstpt dec mov pop arpl pop pusha lds mov mov hlt cwtl add jmp out addr16 push ret out faddp or mov lea fwait mov lea scas mov add icebp ljmp fmuls inc mov sub mov les addl or or loope jnp dec ret add cmpsb into lea cmp je popf js pop inc jp or jo in add xlat adc (bad) clc cmp jne incl aam into pop jg scas mov mov mov xor dec jbe data16 inc or mov call jmp idivl faddl out jge ret insb mov mov test fdivl rol pop pop mov push movsb arpl jl xor fadd inc fdivrs jmp xor out jae sub imul ljmp mov mov movnti (bad) push sub addl loop cwtl xor push iret mov cmp je cli jmp pop (bad) (bad) jle sub movl icebp test lds (bad) push mov orl dec enter or ret mov decl das test je sbb push xor inc js enter add aaa mov ja or rclb jg or jmp subb mov fbld cmp xorl or in cmp mov fbstp sbb mov sar jmp mov pop mov mov adc jne outsb xchg mov jecxz inc jno aaa idivb (bad) incb (bad) fdivr adc cmp je and pushf test or nop fs mov test jl pop mov push adc call sbb inc jmp insb fdivrs push add add add test xchg ret rorb sub mov cltd mov cmp mov or in mov and nop add test inc adc mov cmp hlt es sbb pcmpeqd sahf or mov clc subl mov test add pushf dec pop pop inc pop sbb xlat lea sub imul aad sub and aad add mov xchg in mov mov push aad or loop lds call inc adc xchg or push (bad) (bad) aas pop cmp adc ret test add mov lods out incb or adc ja ffreep test insb call (bad) je out mov push mov dec push insb jecxz mov mov sahf xchg cmp push or add je idivb sar ljmp pop pop and add out call add pop orl ljmp add inc loopne add flds lcall and mov lcall or adc rcrl push jnp push and call xor jmp test jne jmp test push test scas clc ficom bound add push clc frstor mov inc add xchg aas add xor and mov sbb cmp cmp add icebp std ret scas jle cmp inc ja jno mov je and cmp push xor mov (bad) jge ss inc inc je and mov cmp pusha cmp xchg lea mov mov xor sub loopne or push and mov add insb mov push cmp dec call and mov mov call sti cmp fldl xchg clc jg fldl (bad) cmp inc lea cmp jae mov stc pop setne push das ds out decb xchg rolb cmp jmp clc mov and jae fisttpll cmp roll test jne into adc movsl into fiadd call cmpw add xchg jns jne pop push sbb repnz je into stos lret push mov sub and sbb sar or mov add inc sub in mov mov push loope and inc je xchg pusha test adc test (bad) and test pusha push and or decl inc fnstsw sbb add mov mov add adc call mov adc add in daa (bad) xor jae or ljmp sub cmp leave add bswap sub xchg aad sbb and and mov mov shll xor jl shlb stos stc and or test jo test inc loopne stos insl jo push js adc dec mov sbb adc inc sbb inc add aam lock inc adc inc cli pop add sub test cli fwait and push sbb lcall out sbb mov lea jmp (bad) fcomip (bad) lahf add cmp je add push add jp pop aaa icebp push icebp jne mov jg mov icebp jmp in ret cmp out xchg sbb aam ret jae push fiadd jmp addl mov xchg xor (bad) cmp jne or mov jmp popf or fucom cmp jno push lock sti out pusha xor cmp ja imul sbb outsb (bad) jmp adc dec je iret pushf mov imul int3 std mov sbb fild sbb scas cli (bad) (bad) ljmp mov add fmull pop jno nop cmp lock xor adc or lcall testl test push dec test fs xchg ficoml push or notl repz cld orl jne inc test das fcompl pand add (bad) stc dec jbe pop leave inc cmpw jne mov loope scas call addr16 xor pop cmp jne int pop jo orl cmp push mov (bad) test or dec mov dec pop mov jmp sub (bad) (bad) (bad) out out add subl jge btc add mov cmp or mov or clc je xchg jmp cmc pop add out (bad) jg and std je movzwl mov sub sar mov (bad) scas arpl mov push sar and or ja je (bad) mov decb ret je or and jmp cld pop add add mov (bad) jp or fwait jne push mov ret sbb cmp sbb or add fimul jno sbb push add test mov xorb xor rorl add daa mov (bad) jmp nop cmc inc mov inc cmc dec add sbb inc and cli add dec inc aaa mov adc inc fwait push je mov jmp or dec xor inc mov cmp xlat jl cmp je jnp les sbb sbb dec call sbb adc add mov addr16 or rcl sbb jne mov rolb cmp jp cmp out das aas xlat inc aas mov movl popf iret or adc clc ljmp and (bad) incl mov add add enter negl push je ds pop push loopne pop daa lods mov push jmp sub dec and push add mov fcomp popf enter and inc add adc incb sbb call add or add movsb stos iret add dec xor cltd dec outsb mov push mov je and decl xor cmp jl sarl and ret jp ret jae jp ret xor cmp mov mov cli xchg add rolb les mov pushl int3 add je mov jmp mov mov into fdivr cmp jnp je aad or add std xchg push aad cmpl inc cmp lahf enter fisttpl test loop jmp pop mov test je cmp jne jmp leave std pushl dec inc mov test je mov cmp je mov gs inc (bad) aaa cmp inc cmp mov and jne inc dec out ret cmp je enter and fimul adc sub xor mov add ret clc mov dec je out xchg je add xorb push jb cmp je stc sbb add insl mov ja fiadd call jg pop ret adc adc lock xchg jmp das out mov scas call sub pop call push adc iret mov and scas test xchg incb movl add inc dec xor pusha adc lahf call in outsl inc mov test jne and add (bad) lods dec in cwtl into outsb mov flds incl jo out mov mov mov fild or pop cmp test mov dec cmp idivb (bad) and adc aas pop movsl test jne je push push ret daa subl ja xor xchg aas ret xlat aad aaa jne mov mov mov test jg jg push inc insb mov pop cmp cli into inc sbbb cmp mov (bad) (bad) cmp jnp mov mov mov mov mov scas fdivrl or inc cmpb xor or push cmp add (bad) fwait or mov mov stos outsb jne xlat test xor xorl cmpl or mov lcall mov inc test jne cmp in adc jne ret adc inc fwait add inc push xor call lock je lret mov pusha adc sbb test ljmp and pop rcrl je mov dec inc mov mov movl scas loope sbb push cmp add xchg ret inc jecxz sti sbb jne or mov mov mov fcomi xor leave movl or lcall leave addr16 inc inc mov test mov pop outsb imull je or inc pop stos mov mov mov ret add jmp aas lds out xor inc insl mov mov cmp adc sbb ljmp in pop xor sahf scas repz xor pop aas pop add sti cwtl lods push (bad) mov call jne mov xor es push add movsb adc mov daa (bad) int3 sbb adc unpckhps mov push mov or cwtl mov mov aaa stos decl (bad) add cmp sbb in sub (bad) insb and jmp addr16 pop dec outsb inc lcall add mov cmp cmp cltd inc decl ja out movl rorb push cmpsl add ret add rorb jecxz int3 pop mov (bad) outsl test imul int fdivr inc inc add dec fs inc mov or inc (bad) (bad) out push fisttp movl and push inc mov mov cmp xchg mov data16 loop mov mov leave test decb mov cmpsb jnp push xchg sub out cmp adc mov push inc mov sbb (bad) mov (bad) aaa fs cmp lcall iret hlt mov cmp jb inc lcall in xchg ljmp mov add out test push jmp mov das or mov jle xchg push cmp xor or mov jle jmp pusha cmpsl or adc (bad) mov or push inc cltd adc pop (bad) (bad) incl pushl mov lea cmp seta cmp setne and dec inc mov jne cmp je or push test mov mov adc mov andl mov test std (bad) lcall inc cmp jl jg mov cmp jb ja cmp jb ja lcall addb and pop out cmp jno pop loop stos pop sbb push xchg push movsb fbld ja adc adc sbb (bad) mov mov cmp mov (bad) mov add inc addb pop mov mov jmp dec add cmpl mov roll cmp jno push add mov fdivrp add arpl lcall fidivr inc out inc lds test shrb cmpl movsbl jns jmp jns jg test jnp ffreep cmp pop and out je or mov leave push inc adc jns les or xor jmp sbb dec arpl jmp pusha or add push fs xchg incl jl sbb lcall ljmp mov fsubl pop dec inc add cmp push aas add sti loope jle mov add sarl dec sti dec mov jnp cmp test xlat fist jno mov mov mov mov mov push sbb inc and add les and adc push roll cvtdq2ps jmp addl mov into fcompl ljmp push lcall mov jmp pusha or bound jo xor ja js je mov in (bad) jnp mov cmp inc mov xor in enter mov jmp pop je pop adc je xchg iret dec adc test mov fsubrl jno mov nop cmp inc sbb xor ss rcrl mov outsl call pop cmp ss dec popf jmp mov adc sbb xchg jae mov lahf out pushf jb (bad) push ljmp cmpsb sub add add call push add add enter outsl sub adc pop and iret and cwtl jmp inc add mov outsb inc and cmpl mov int3 push fs add mov xchg divb jae jne push pop shll call clc and push xor push rclb into mov mov (bad) (bad) cmp (bad) psrld pop fmuls out mov call ret jo (bad) out cmpsl daa out cmp addr16 test je jmp push fist addr16 movsb or dec test jne int3 mov call dec sub mov test cmp xchg cmp (bad) mov sti push inc sub xchg out ret or test jne sub enter mov mov fildl adc or les xor xchg fldl add sub jnp sti jmp mov cmp cmp mov mov mov mov or ret jns jae and hlt je pcmpgtw and adc fildl test jp jns or ja jae pop sub and add jp adcb inc and cmpsb mov lcall or (bad) cli pop je cmp je dec or push pop add push mov rorb push call cwtl ret push dec (bad) cmc jmp (bad) cmpsb sbb pop pop or out leave add add adc add cwtl pop pusha lods ljmp roll out jno iret push (bad) mov orl iret or xor cmp stc add sbb stos inc add pop repnz sbb xchg pop jg ds pop or stos jnp jmp test (bad) cvttps2pi movb and je inc and je cmp je mov test sbb pop sub jnp mov or xchg mov sbb jae (bad) rorb sbb sbb pop mov (bad) into sbb add jmp xor pop out mov push mov push je lds test ds dec jne in flds call push hlt inc inc jne out in and std inc je mov adcl loopne adc (bad) xor leave dec outsl jns adc jb lock lahf or xor add jmp pop js sbb addl cmpsb mov popf loopne (bad) jmp pop nop mov cmp enter lahf adc decb push testb mov jo scas or cmpsb aaa cmp icebp jbe je mov pop mov cmp cmpsb cmpsb testl xchg pop jmp addl (bad) (bad) or int3 fs pop stc std sub lds mov outsl adc and sbb aaa test fs aam push lahf les push iret adc or aas inc and mov push aam stos roll outsb cmpl sub aad je or xchg orb divb mov jmp sbb sbb cmp add push and push add call dec (bad) aaa cs mov aas iret push outsb dec push fldl xchg jne test mov je je cwtl das xchg jle xchg je cltd or push outsl inc jo popf or mov add pop jl and outsl les sub scas mov add mov fs xchg jg jmp (bad) jnp cmp pop and cmp insb jnp test loopne stos imul pop les inc add movl incl decl inc mov in hlt outsl or mov add fwait cli push sub test jle clc (bad) (bad) fbstp (bad) or mov mov xor test mov jne mov push pusha lcall (bad) icebp pop sub das test jne and jne cld xchg inc icebp mov or call or add or pop daa or sub loopne push (bad) nop cmp ret and out xchg test jne mov jmp dec mov mov lods pop leave ljmp jmp (bad) or mov sub call js (bad) movzwl or es loop inc or sub decl lock rol and or add (bad) incl mov roll sub call repz xchg or jmp push call in add push in loopne pop pop push and add rolb test adc test adc or dec cmpsl adc ss call mov sub rcrb jg fisubrl mov add lods adc (bad) adc xor aas test push and test hlt mov loope mov (bad) and pop and cmp inc inc out lcall push rolb push enter ret cmp adc (bad) aad sbb sbb cwtl mov loopne sub jg inc lods mov mov cmpl aad add add dec mov xor cmp cmp je sbb push notl mov push inc and mov inc loope push (bad) push mulb dec inc xchg movsb and in pop mov or add (bad) cmpb adc add jmp dec stos (bad) or jle inc inc cmp (bad) ss (bad) je fdivrs jne jb add push inc pop ret xchg and mov push xchg add xorl and dec aas sub (bad) lock jmp movsb mov imul cmp punpcklbw add jecxz sbb ds and jle push mov aas push mov or je insb rorb or sub jmp push (bad) dec iret jle (bad) xchg call jmp adc scas mov lock mov push sub test push loopne shrb fisttp in push xlat ja int3 or sbb add inc sbb cmc nop sbb push mov inc xbegin movl ret mov lock inc je inc and and orl inc mov dec sbb fcompl xor cwtl or roll fwait add xchg inc mov adc inc inc ret test je sub push cmpsb mov add scas pop add les cld mov je addl jmp out and movsb xorb je xor stos fisubl aas movl mov push test xor pop jl js mov dec pop (bad) ds pop iret pop ffreep xor jae (bad) mov sahf imul xor jae and or lahf jp (bad) dec xchg xchg mov cltd je setbe sbb fidivl add sub fcoml stos fs das jb add leave sub sub subb pop daa jle scas test mov sub mov add jmp jmp jg out clc xorb jmp nop lret movb les jne push dec sub sub lahf add add pop loopne sub sub add stc adc sbb shrl les popa outsb push ret pop ret inc cmp mov inc pop cmp cmp lret je xor mov add cmpl xor out stos add sbb loop test out mov pop cmp push repnz pop test je fnstenv mov mov fcoml xchg outsb cmp sbbb pop jnp aaa cld mov mov and pop mov adc sarl mov and je add jne scas or sbb adc aaa mov je rorb add leave popa dec add push rcrb in dec inc and adc andl nop xor mov lods pop aas mov call jo test aad inc adc add mov js loopne or push or jg xor scas mov jmp das lds xor jmp push sbb push inc pop das push inc add or in aam xchg arpl enter adc out adc inc and lahf cld or icebp mov jmp jo iret jmp lock out mov add jmp xchg fildl aas movsl jne xor push bound scas (bad) daa lret fisttp inc or adc adcw (bad) sar jg adc xor cmc and jle je lods ss add leave arpl and add mov pop mov (bad) jne sub and add movzwl lea test lea (bad) adc shr add inc add pop jnp popa insb add movzwl xchg cmpsb test decl (bad) and sbb add pop mov cltd push and lea outsl cwtl lds mov fs ljmp and or jnp sbb jne lret sarl mov in sub adc add pop das sbbb test je adc mov popa sbb call sub (bad) iret out sub sbb cs mov pop cmp sbb loopne sbb push dec pop xor or mov fwait (bad) jo hlt add lock decl and lea cmp ja mov in dec scas sbb fistl jecxz stos ret dec loope addl dec es sbb sbb (bad) cmp add push pop jnp sub call jnp repz test cmp mov fbld xor and and jmp pushl shll dec mov add and xor mov mov adc adc xchg sbb adc add je lahf imul jmp enter test movzbl je cmp jne pop aas decl test arpl adc test mov jbe cld lcall stos stc mov mov lea mov mov mov movl adc xor sbb xor pop (bad) cmp pop jge push add cmc jne add or int xchg pusha cwtl pop push out lahf push adc inc mov je addl dec fbstp or clc xor mov je or push (bad) and pusha loopne out jmp or or jle mov xor iret jo and ficompl adc and push sbbl push (bad) jno add pop add bound shll lahf xor aas inc ret fwait adc je test sldt add test or loope xlat rorl adc inc mov cmpsb bound inc inc fistl subl add push or jle je inc or or inc add test inc mov mov icebp mov jmp inc cmp adc mov xchg addb push cmp int idiv and ret sbb ret pop (bad) popa xor and mov and test je mov in fs inc and test loop movl jg mov xchg jne adc je mov mov mov sete aad nopl (bad) gs xchg sub nop push mov (bad) mov cmp rcrl incl lods dec call leave mov mov icebp sti or add pmulhuw adc mov jae mov xor sbb call ljmp add (bad) mov scas xchg lds subb fwait inc (bad) pop sub cmp repnz add lret jmp int3 pop xchg pop jl jmp and push cmpsb lcall cs or imul or lcall and ret and in dec cmp ljmp or add adc or ret jne jg or or jbe dec lock (bad) fild pmulhuw jp test repz sub dec loopne loop pop sub jl popa mov cmp or cmp insl sub mov (bad) push inc nop mov push mov xchg test mov into aad mov les rcl push and sbb test je loopne push sub add rcrb sahf jge inc mov push or mov fwait jle rorl dec inc jne and test inc cmpsb imul mov in or movsl add xor mov ret hlt pop add jnp adc inc nop mov sbb sbb loope inc (bad) sbb mov xor add add xor sbb cmc add jmp cmp or lods cli stos test sbb push sub push out add inc or stc sbb in push movl push call mov je jp and lock add call pop call scas add xchg testl adc into bound inc mov xlat mov movl outsb lret jo scas out sahf pop xchg adc mov int fsubrs sbb mov (bad) xchg imull pop ret push call xor ljmp mov call xor jne lret or in (bad) cmc xchg jmp rcll or sbb add add push add (bad) fstpl xor mov mov fist inc test cmp jne jmp inc xchg jg js add and (bad) jo sub add pushf cmp jno cmp call (bad) out aaa enter inc jmp add ds sbb and cli es sbb pushl sub je addl jo loop xchg cmp dec cmp or mov lea sbb and lea movsl dec aam push jle sbb sbb jnp mov add (bad) enter push or mov and add mov sub (bad) push dec inc pop pop arpl test jne addb lahf or je mov fidivrl or je imull test mov mov lds cwtl jge adc mov popl mov movl std sbb gs and lock xlat or sub ret insb xchg xor and aad add dec mov adc mov and pavgb mov ja,pt cli mov cmp call loopne inc sarb lahf push push mov mov mov mov lea or cli aaa inc mov inc jne idivl add and mov jne out test jle mov add jne push fisttp and imul xor pop (bad) aam cmpsb mov scas fcompl and or out inc pop and testl pop ret add mov out dec cmp push movsb sub (bad) push scas lods cmp scas pop mov stos xchg mov or out add sbb fild mov dec xor pop mov jb and or jne adc and inc xor pop jmp in in shr (bad) pop inc mov mov pop fwait or dec iret cmp jno and fist inc cmp push inc lock push cmp mov dec rorl and testb je pop add adc pop sub add mov lea jne inc and sbb jl push mov sub push pusha daa adc push fldl add test dec push push mov jo and jle add cmpsb leave mov or addl push insl add test adc test testb jne push mov xchg lea loop pop and inc adc pusha or lcall or mov mov add cwtl mov test mov sbb cwtl decl mov mov bound sub rorl hlt xchg mov adc mov mov stos incl shlb (bad) jne inc sahf cmpsb pop into mov push inc and jp pop pop ja adc cwtl jno icebp fsubrs lock cmpl iret inc je jne adc push rol or cmpsb (bad) decb cmp enter cmp jmp cs mov insb test repz fadds sbb pusha outsb (bad) (bad) dec dec insb cmp addl or movsb pop add ret ffree or mov lret or jne xchg jne (bad) jne mov addl mov pushf mov loop jle jle or pop mov add and in je orl inc add xor add lods jnp orb (bad) pop sti xchg jmp ret orl mov popa adc adc inc ss fdivr xor mov pop add icebp stos (bad) call or dec lds xchg lcall icebp pop adc ja nop shrb jne lea sub sub scas aad adc mov add inc mov cmpsl aam stos sbb dec cmp pop add pop add clc call jl ret jbe les mov inc or dec pop jp inc xchg or mov loop pop xor cmpsl add xor and (bad) std lcall inc sub mov mov or loope je aad test inc xor test push call and pop cmp dec rcrb xchg sbb push test fs aaa add lcall jb mulb adc and or movsl or xchg jnp and repnz and outsb and xor jo or and push and cmp daa ja push scas sub test in adc popa mov movb jle and dec and mov aam test mov cmp cmp jae jne jne repz mov call clc pop mov add sub xchg or sarl xor loopw in jp loop mov cmp rorb or ljmp mov je fidivr mov iret stc es dec sub inc test jp sti mov mov xchg rclb decl push mov enter mov sbb cmp jae outsl mov add and mov mov (bad) jmp js or test (bad) pushf add test push dec inc xor sti lahf fsubr mov ret test adc mov inc (bad) add sbb jne pop sub dec cmp out jmp cmp sbb cmpsb ret in jns repz dec jb pop cmp sbb ds aad test dec andl inc sub jge call das mov mov and push sbb mov mov cmp rcrl rcr inc sub daa mov or mov or xchg add fmull (bad) sti inc mov cmp negl adc fidivl inc aaa add inc je sbb sbb mov add cmp inc movsb add orl mov and es dec push sub js jne addl fcomip je mov cmpl out sub negl xchg push cmp cmpsb gs dec and fwait and (bad) jmp jns mov or sbb jg push inc nop mov push ret push sub sub add sbb orl adc lods jecxz xorb (bad) jb sbb sub mov cltd rcrl add xor loopne jne push mov adc test icebp pop jmp cmp leave je insl pop rorb push inc fldl movsl (bad) (bad) mov jle mov and inc and call mov mov jg sbb adc or test xor xchg cld jo pop rcrb sub arpl add cmp push addl jns sbb cmp cli sub push aam add adc mov ret movsl aam daa adc sbb cmpsl jp or leave cvtps2pi xor add jo mov jmp xor and arpl cs sub sub nop mov mov fisttp cmpsb cmp and xchg mov test sub add xor fcoms inc (bad) icebp into popf inc cli je add and jae add ljmp sbb in or test rorl add inc sub sbb adc pop pop mov (bad) sbb mov test add and in dec or xor rol or out and add test je (bad) and add je push pop mov mov push les fistpl js dec call cmp emms (bad) jmp adc add ss test int inc cmp or mov sub mov dec xchg xchg ret add loope add rorb cmp add or adc shr icebp sub outsl push mov mov call in jns mov or pop add ds jmp and pop fild mov and add or mov int3 add lcall xchg mov adc dec xorb dec jbe iret xchg (bad) popa cmpb pop or and sub add inc and inc pop inc mov lret cli pop inc sbb push sub inc pop add or mov add cmc icebp iret add sbb pusha push adc lods test dec lods (bad) push sbb fmul pop in push outsb lods nop daa sbb mov jo xor inc rcll add inc mov add iret pop mov mov pop xor and jl rolb xchg test decl icebp scas cmpsb (bad) rclb insb and sub inc mov jnp mov sar adc sbb mov sbb (bad) enter mov vaddsubps add push sub pop (bad) popa sarl iret ret test mov data16 and inc push (bad) adc (bad) add add dec rolb and xchg cmp and mov jle xchg or test arpl repnz and push pandn jbe lcallw imulb push scas std outsb mov add add lret mov add mov or sub mov js pop mov cwtl shlb xchg iret dec or (bad) jg cmpl pop inc xor adc ds stos push (bad) leave push xor js das mov adc out les je sbb push int sub add call add stos pop out adc add inc inc cwtl dec mov les je mov inc test jne cld jg,pn and clc mov mov setl jle outsb pop pop pop pop push je or sub (bad) adc fisttpl sbb mov sbb rol and (bad) in out repz nop bound sbb add adc or add mov scas ljmp and inc out loopne inc adcl test test pusha jne lock mov stc call cld inc sub test je push adc sub cld inc mov add add or or je nop fcompl ficom inc ja inc test test bswap shlb adc jl test xchg xor adc sbb jmp test jne xor or or push and mov add mov mov xor jp add sub lahf jne jg and call loop inc ds jmp andb test dec push inc and mov das repz push sub hlt xor sbb icebp jns mov or sub sub aas test add in add push rorb or xchg popa popf push cs pop (bad) pop aad cmp nop fiadd mov sbb (bad) mov je cmpl cmp fldpi lahf jge sarl jmp sub shrb adc adc pop mov or das addr16 cmp iret or ja std jmp (bad) dec inc iret iret sub into and or and jecxz xor pop or adc adc test outsl mov xor mov rorb sbb call lcall mov jne lea lea push test pop and mov std sti test and mov jecxz pop push (bad) sbb jne (bad) and rolb adc xor jbe adc aaa bound dec jne shrl xor dec sbb add sbbl jae (bad) (bad) or xor dec mov add movsl fcomp cmc aaa cld loopne push daa sbb inc and cwtl xchg sbb fadds mov cltd jbe test adc jne cmpl and insb adc or test in push pop dec (bad) xchg add ja test (bad) mov adc phaddwd aas jo movl inc push sub scas sbbb add inc rorb and inc dec xor add pop int mov and inc enter (bad) adc stos pop adc or mov add out inc sub dec aaa adc ss notl lcall lea je jno mov add test push (bad) sbb or and sub enter mov shll enter aam cmc fbstp lea mov mov test sub adc inc adc adc and push subl mov jmp jns call sub sar lcall jg into jo mov ja in push cmp and andb or sbbl movsb enter stos mov mov out mov mov js pop add call mov mov adc jae jmp add scas adc incb fbld add jmp push inc je pop out adc mov cld push dec (bad) lods pushf jmp xor pop aas and cmp rclb testl je stos add mov pop mov mov mov ds pop js pop sub test inc sub adc add inc popl sub loope sbb mov fs cwtl out movsl pop push adc (bad) mov xor lock cld ret jne pushl call adc inc test add push add cld dec lods push call push (bad) hlt add pop add movsl ss iret addb ljmp push sbb adc je add mov pop dec mov jmp xchg (bad) int sbb mov (bad) jae push pop add dec inc sbb cmp ficoml ret dec and jbe or mov sub xlat addl orl xlat xchg aad inc shrb enter xor inc mov add inc xor adc lcall pop call mov inc jno add adc dec lea mov push je add pushl dec jbe or clc add mov (bad) stos xchg jne mov xchg pop ret cmp jo pop and negl add or cmp push les (bad) call xor jmp (bad) mov jl xor jmp je addl sti les call pusha inc incl cmp je out jmp sar aas and and xchg call mov xor aam xor sub add fs add xor add dec adc ss inc push ret lods xor fcomi add int3 mov in call (bad) mov dec jle cmp je cmp jne inc test (bad) and iret or scas fisub xor mov xor sub in shll mov (bad) xor incl out mov je mov cmc orl xchg sub je insb test and jmp je add (bad) mov clc out inc add (bad) jmp loopne jg (bad) je call dec mov add adcl decl sbb jne adc cmp jo sub arpl fcmovb cwtl inc icebp fwait add pop jmp loop or lahf (bad) or inc mov mov sbb sub fbstp mov push sbb dec mov (bad) shrb sbb cltd es push pop sub aas pop or jecxz xchg lock xchg mov sbb and push retw jbe fadds dec dec jecxz adc jb jo mov adc mov inc and call movsb adc test add inc and sbb inc cmp outsl inc add dec jo mull push mov out mull stos and call rcrb add fadd popa or mov (bad) loopne pusha mov fldenv leave cmpsl and lds out jg out mov je je add add mov xor pushf test push jbe cmovg jg mov call mov mov out addl or mov setle dec cltd scas das sub push es inc sahf fdivl pusha dec or adc push test push pop pop ret push es inc mov or pop or dec jb outsb push inc in test sub push inc enter (bad) es icebp mov jne cmp ret dec xchg push adc ss dec jmp push jmp and mov cmp inc and push (bad) inc inc xchg and pop cwtl and or inc adc ja or jbe addr16 sub mov lahf scas or loop dec inc adc mov fadd or or outsl fild call dec or aaa pop test scas call sub pop outsl add nop sahf negl movsb or call das into aad rclb mov arpl adc cmc adc jnp add mov cmpl out sub xchg xchg es les enter sub jne and divps mov cmpsl mov (bad) adc insb pop xor ret jmp (bad) loopne pusha dec inc (bad) aas cmp addl aaa push sbb push add inc inc pop xlat and sbb and sbb ret call popf adc faddl inc sbb push push pusha mov das and and push inc ret jle pushl inc jmp movsb or add pop pop outsl or outsl cmp pop jae insb fcoms add pop push (bad) (bad) ja lock cli jp scas sbb xchg jle call call mov call jo sbb push and fbld jns fadds mov add and fnstcw out mov out loopne mov xor (bad) pushl mov fldcw fistpll pop shlb inc aaa lds je rolb adc adc iret pop push add or add mov hlt ljmp das pop jmp call data16 cmpsb sub inc xor and decl and mov jb add out call xor xor adc iret (bad) or xor enter mov test imul test (bad) aas insb mov das aas test (bad) mov sub cmp sti mov cli call adc cmp fdivrs (bad) loopne add mov jg cmp or and rorb push sub add mov out cmpsl sbb mov inc push pop outsl mov cli ljmp push and or sbb add es xor call out ss mov sbb out sub nop adc cmp fmuls mov (bad) call or (bad) loop add sub cmp bound sbb das gs inc cmp add or mov push sbb incb pop or mov jg pop xchg mov loop add call and das mov mov mov push inc insb in jbe mov outsb push in aaa outsl iret xor mov mov mov nop cli or xchg push (bad) incl cmp bound insl push shll mov xlat call loopnew pop ret (bad) pop inc add pushf push dec cld (bad) cmp and lcall jb jbe mov inc or add setae popa mov dec xchg sub cld sbb aas mov add sbb inc and inc and movhps adc das sbb fs das and rsm jle or call inc jmp js or std add add mov cmpsl repnz push mov imul das sub or jae test dec jne sub and push xor xor mov test xor inc cmp sbb (bad) add add pop xor test fimul and out inc mov (bad) or test push mov add adc mov pusha cmpsb adc sbb lahf sub mov inc xor push xor imul cmp insb and mov je insb mov xlat insl mov outsl mov cmp jmp imul inc rorl mov mov mov mov outsb add mov test je fwait mov dec and mov test rclb in je or mov orl jge jns add test mov or lahf and jne cmp cmpl mov cmp jne cmpsl mov mov mov push mov je mov pop test (bad) decl mov dec xor (bad) jne mov cmpl mov testl cmp test push in mov (bad) or pop jbe xor movsb sbb add inc adc test mov ret inc cmp xchg mov inc jo mov mov mov push loopne icebp aas mov xorl inc cmp mov dec inc push mov mov pushl push mov mov mov cmp mov jmp jnp iret and je fildll push jne lock imul loopne fucom je jmp push mov mov fdivrl mov push (bad) and outsb ljmp shlb (bad) push cmp loope sbb daa fwait mov cmp or dec xor push xor pop outsl inc incb dec xor loop and outsb add ret testb mov int3 adc int or cltd mov mov jmp pop jmp or and inc shr push xor xchg decb (bad) jnp push cmp push pusha into je lock cwtl arpl popa push lret mov mov inc xor push test and cmp stos popf pop jne (bad) aaa arpl cmp sbb ja inc push sbb mov pop lret jb jae cmp or or test mov std outsb ror aas pop test jmp xor xor cmp aas or xor xchg push cmp mov ljmp std popa test cmp mov xchg popf ret mov or leave sbb rorl sbb test loope push out add cld and fldl arpl xchg jmp aad cmpsl pushl add dec fnop xchg jnp dec xor nop lods mov lret add mov push push sbb decl push inc cmp and add dec lds aaa adc mov mov (bad) push xchg mov and lret aas cli mov mov add adc cmp jbe shlb xchg mov mov idiv scas or mov mov jne adc rol jne (bad) idiv addb addl mov mov sbb or fwait adc mov stos mov push push lds dec inc jg jg push jae mov cmp jb iret ja cmp jb out (bad) mov (bad) ja mov cmp js jb ja cmp inc pushl jb adc jb adc jbe jb cmc (bad) sbb dec mov pusha pop jae outsl mov sub addl sahf push shrl pop movl je jmp popl js or andl inc xor dec cmpsb or test imull push add add cmp arpl pop or daa adc loopne daa push xor add ss testl cmp cmp jne mov jnp sar scas js mov cmp pavgw jle test cmpl add push cmp inc jns (bad) add or jo mov mov jb jmp jb xchg jbe out add andl ret sbb push test push xchg arpl (bad) decl jae mov (bad) enter jns or push mov cmp fdivrp pushl popf mov mov mov mov mov mov jmp inc xor pushf add adc inc sub (bad) into inc inc xor lret push hlt in mov jmp xor mov inc adc fs jae test mov in inc add push fldcw in dec cmp mov fstpl mov jmp xor xor or into add inc aaa (bad) lcall cmpsb outsl lret call mov inc inc andl cs jno pop xor inc sarl mov xchg pop or sub int3 cmc cmp jmp cmp or inc jg cmc mov ret sub xchg and adc push dec mov test push ss cmp lahf jmp orl mov pop inc std fildll xor or jne scas movsb (bad) lds shr pushf jnp (bad) roll iret cmpl test daa test push sbb add mov mov (bad) push dec and cltd mov inc mov data16 inc (bad) movsl insl (bad) call test mov push jns fs jne jmp (bad) decl fisttpll inc inc sub mov sbb mov mov outsl add clc cmp jle xchg lcall add jl orl mov ja (bad) push sub out (bad) (bad) je pop xor fs mov pop mov mov cmp inc inc ja jb cmp inc lahf cmp ja jo repz add mov dec or jne push call mov push ss jmp outsl dec jb jbe sbbl add sub mov rcrb movswl movswl movswl mov mov fbstp mov mov add (bad) (bad) decl aad out jle movswl lea cmp jle sub mov mov sub movl cmp je subb add bnd ljmp dec lcall outsl lea mov test push cmp mov jmp fild add fstl adc lea clts js subb decl call inc and mov mov iret add icebp mov sub adc rolb push ret xor test je or lcall inc and push sub and mov sbb mov pop adc fild pop push jmp pop push sbb mov enter adc jne enter sbb ficoml inc rolb sub adc pop lea adc pop inc mov negl pusha sub call sbb mov add and aam push push sbb sbb add sub pop hlt jbe xchg (bad) cmp sub mov fdivrs add jae scas and shrl sarl sbb add xchg lea and dec mulps ret add pop or aam cmpb xor sub cmp add arpl orb (bad) fidivrl mov dec add or add stos sbb in push jae popf pop and inc popf frstor mov out adc (bad) repz fmuls sbb sub aaa mov mov mov mov pushf fnstcw dec mov add or mov js add adc test cmp loop sbb call jmp aas mov and mov bound ret jl mov inc lock jl lock fild or dec or mov and add and adc sub cmp mov in outsl (bad) or and pop sub jmp xchg cs cld adc push push mov add (bad) xchg dec xor sbb jne dec mov xlat adc adc test punpckldq sbb test mov lcall add ja or ljmp loop ljmp incl and test lea push movsb pop dec test mov mov loop sahf adc push and call cmp dec lret adc xlat aaa and pop pop cld ljmp jb jmp adc cvttps2pi popf fsubrl lock scas enter test call aad decl inc and in and add test push rorb or enter lock test orl or icebp outsl jle nop mov mov xorb pop add test mov xchg int jl xchg lods pusha mov out jmp bound std mov ljmp sbb jno inc addl iret cwtl xor or int inc inc jmp jae jae mov and inc rcrl (bad) jmp (bad) mov pusha mov lock hlt mov aas into inc je nop pop adc pop insb or adc and paddusb adc shr call cld out pop icebp add test xchg aaa loope lock or ljmp enter xchg ret shrb rorb mov mov shl or add adc std pop shl in add scas dec cli nop fcmovne sub gs jno or cld inc incl (bad) jne mov add mov jle mov adc or add icebp fisub sub andl lock add aaa cld fnstsw add jmp out inc and cmp add out out lds nop and das cmp nop jmp std and xor je add dec mov sub pop adc pusha daa (bad) mov pop leave ljmp push pushl hlt jl push push mov or and sbb (bad) incl sbb push mov ret jl add (bad) lea cmp mov cmovge mov es movswl add xor sbb pop cld test js mov cmp cmovl iret add push inc decl ret rcrl jbe push jmp jl and ret jmp xchg jg jecxz es insb mov sub add test sbb pop aam mov mov test xchg inc les inc lock xor pop cmp dec pop add mov mov fildll icebp out loopne xor (bad) mov sub lock outsl or mov ss inc cwtl adc add movswl mov cwtl sar das or mov das sbbb roll rorb roll mov rcrb test (bad) loopne inc arpl sarb and not push or pop push mov adc nopl test sbb push push or mov pcmpgtb mov pop orl cli adc inc cwtl or mov std je leave jbe cmp jmp inc mov cmp mov xchg adc sbb cltd aas mov movzbl sub aaa xor movzbl lea (bad) sbb icebp sbb cmp mov scas cmpsb dec es fdivs lods lods ret xor inc inc pop add pop test jne call pop inc popa pop adc movsb and pop jne add and mov jmp pop sub adc jp (bad) out push fsubrl pop cmp xor sar push inc das add iret mov mov jne mov xor test cmc mov jne add repnz ret nop movswl sub leave push sbb movswl sub and movsb inc jl icebp test je (bad) adc adc call les and or mov or imul div mov jmp out cmc das (bad) cmp add call iret mov push xlat inc push mov mov mov movzbl push orb sbb js movzbl call inc and lea std lcall (bad) (bad) incl adc add loopne popf xor dec dec push mov xor ja cld mov mov sub push loopne dec or ljmp and andnps mov pusha sub adc jg in push fmul and test movzbl sub push lds test rorb icebp sbb rorb test insb cmp mov add clc cmp incb add ret test mov and jne mov clc or xchg ret cmp outsl dec xor ret out lds clc jne jbe jae lret add cmp ja outsb loop cmp inc sub pop and dec inc and aam inc cwtl mov dec jne jb mov cld in mov inc and jmp sbb loope cmp mov in push cmp mov je (bad) mov test in or mov test (bad) jae inc add bound lcall and test mov xor or cmp dec add call fisttp jg iret add mov not movzbl bsr xor sub cmp je sbb or addb sar and mov mov mov or mov sbb inc sysret jg pop fcomip lock mov mov fcmovnb mov or dec add push and or sub outsl fdivrs sbb std loopne loope cmp xor mov sbb movb adc imull add jmp pop je push jne mov mov out and cmp (bad) push mov or pop cmp ja adc sub add rcrb inc enter je or (bad) aas cvtps2pi ja,pt bound mov fwait test jne cmp (bad) fcomip pop je mov adc and enter and test je fnstsw dec test cmovb jmp adc inc push outsl or clc pop sub (bad) out andl (bad) or or lea xor cmp adc xlat seta push ja push adc mov xchg sbb popa popa push in push int add mov je and test xchg loope mov ja sbb pop mov mov mov xor sbb outsl (bad) (bad) jnp mov add repz cmp ja jns popf and and adc cmp ja nop push movzbl xor pushf jne je incb jl xor cmc scas mov mov xchg (bad) gs ret test (bad) pop rcll in xchg rolb mov neg lret ret aas (bad) mov sti add incl incl jmp and lea movzwl pop lea add cmp sti and imul mov jmp cmp sub add inc xchg out fnstsw add leave mov mov mov movsl cmp and jg push pop int3 std dec fild or sub pop fxch and and inc jmp cwtl jnp jmp or fnstsw test adc xor idivb pop ret sub mov stos inc js jge (bad) jne (bad) call xor adc jge sbb sub xchg cli jns add call or mov imul inc int3 jge adc call pop pop xor sub adc adc or into popa adc cli mov inc cmp dec ja loopne sub pushf push dec test push outsl cld xor shll sbb fcomps mov jnp incb outsl or mov lea aad lods out ficomp movsb hlt sar ja mov adc jne rcll nop and call imul jmp sub and (bad) jge rcrl mov rep lahf or ret ljmp jno ss push mov fwait es idivl dec add inc jle add jb rolb cmpb cmp jne push inc pushl push decl cmp jnp xchg or inc and rclb cmp inc pushl push aam sub push lds or (bad) out xchg cld je inc and test je mov mov shr cltd (bad) incl loop xor and shl or or and push add incl and and je insl out in mov bound or (bad) repz aaa push adc test add outsl (bad) or cmp sbb and adc push mov or dec mov mov aas aaa adcb add test inc aam and and js xor push pusha (bad) jo test inc sub maskmovq imull xor cmp jne cmpl sbb test sub and xchg add cld jbe test aas jmp sub cmp push adc rolb inc jb cld or icebp (bad) incl stc out (bad) insl push mov shr arpl add lret nop mov mov xor and mov or outsb add inc add and jno jp lods ret pcmpeqb movzwl out js (bad) sub test fcoms pusha adc insb add sti std jno sbb lock xchg xor mov jle lods push xorb call mov movzwl test add leave push test rcrl adc subl mov lds add out push and push rclb inc mov push mov je movzwl (bad) lock mov mov shl call mov (bad) mov (bad) pop pop pop jae leave call cmp lods bts mov cmovbe stos pusha scas stos lcall in es int3 add xchg sbb xchg test push cmpb add sub inc pop rclb adc jg cli add (bad) cmp inc mov mov dec add sbb mov (bad) mov mov fldl mov add movb (bad) aas loopne incb lcall gs cmpsb jmp xchg mov pop outsl (bad) cli popf fisubr xor aad leave mov and je or loope je jnp add sahf sbb int aad hlt push fcmovnu je rorl jl pop loop mov test xor mov sahf jmp cmp pop popf inc rclb inc xor adc pushf push dec push aaa call add jmp dec lods or scas outsb push insl je pop loop or dec push jbe shll notb push mov outsl dec addb xor inc call js pop inc xor push aas or inc pushf sub mov push push jo iret jno inc add pop sub dec sbb push dec test cmp jle mov je and mov cmc out scas out mov pop push mov jmp sub and push and mov std daa adc mov inc inc inc pop or out mov cmp jo mov adc cmc mov mov cld lods es movq and jecxz push fisttpll aaa ffree jmp mov jp or inc stos jno test outsl scas push call sub push push xchg jecxz (bad) push nop sub fucomi mov aam lret mov lahf dec dec cmpl incl scas rol lret dec or loopne decl jmp aas loope (bad) mov jmp sbb jnp and popf call sub cmp add xor in and (bad) jno xchg in push cmp xor sbb es stos adc js pop adc mov jl ljmp dec pop mov ds mov inc mov push cmpsb jnp sub or jnp mov adc adc stos push and lea adc cmp cmp add out or je call pop je out lea sbbw jno scas push sbb test mov jg dec loop pop ja push sub mov add cmp je or add xchg ret cmp and and fidivr sub lret jmp jno (bad) icebp mov mov cmp sbb xchg cmp pushl in jmp lds call or inc mov cli outsl movl incl stos or loopne mov les test nop dec add in into out sub and and fistpll loope je lea shr mov sub mov out or add cs jmp test in add repnz lea and call add add sbb add jbe icebp jnp dec pushf sub xchg js mov xor jl push adc pusha cmp mov lock aaa insl ret jecxz add sbbl cmp lcall rolb je test je and or pop arpl je arpl lock cwtl lea mov add leave mov loope or mov out mov xor xor mov into lock aad push or test jne jae hlt or je and jmp xchg bound and mov mov incb cmp mov repnz mov insb and and popf stos inc cmp xchg inc sbb ja (bad) jmp ja std sahf push fnstsw inc sub pop mov lret jl (bad) (bad) (bad) fdivl test nop jg xor popl mov js jo je cmp jmp xor test add add aas clc cmp jle jl rorb test outsl mov sbb mov movl fild dec or inc adc dec adc add mov aam (bad) cmp movl jbe subl xor (bad) sub mov movl pop sbb inc push ja pop ljmp test add mov jae push add (bad) popa mov mov inc int (bad) shlb jnp jl dec and cmp repnz add (bad) cli add mov push cmp jnp lret es and fisubr or xchg call movsb xor sbb and sbb nop addl ljmp cmpl stos or mov sbb push (bad) cmc dec insb mov add imul pop pusha and mov incl add sbb mov mov (bad) adc clc pop sbb and movb addr16 push push sub push inc repz ljmp sub or adc test dec or mov and and cmpw jnp pop or test je orb sbb sub push add test push insb mov or jae leave push sub push test jmp je lods or stos add add pop fimul js call les addl lret js or mov bnd dec sub xchg add incb aas and (bad) decl movl sbb xor or or or in pop sti or xchg or add inc adc in mov out arpl pop test popa sub rorb fs and xor jmp sahf ds jl scas add add add mov sbb fwait inc or les ja seto call ret and add jp aas sbb data16 mov or pusha aad mov adcb das lret mov lock aad jmp and pop sub xlat push push (bad) adc push and dec daa jae gs jl xchg push sub mov rol sub inc lea dec popa dec pusha adc ds (bad) decl into sti ret pop inc inc inc inc stos mov sub cmovs ja cmp rcrb call push dec push (bad) and add dec iret adc loopne and rcll pop adc aas dec jb push dec add mov add mov add mov mov cmpl and mov gs and mov test inc daa push mov enter (bad) push jg,pt jne mov mov jge ds sub mov sub ljmp push dec adc mov jl lds (bad) and mov push pop add cli gs call or insb push add clc xor jb call jo bound pop or fldl pop xor nop jns inc test inc xchg pop xchg (bad) outsb and xchg pop pop sub das mov sub clc push lods push sbb lods sub or or test sub imulb mov adcl shrl sub test roll mov mov cs jp mov xor ret mov out js icebp fistp lea movzbl cmp mov and mov fwait (bad) sub clc addl sti rolb mov adc sarb test mov push loopne adc ret or push jmp or imul (bad) cli add movzbl add insl push testb mov mov xchg (bad) addl ret fldcw mov or jne (bad) lea aas shr std add adc call inc mov movsl dec add sub mov push push test je add dec push adc add dec loope cmp inc fidivl out and call inc pushf mov (bad) movsl inc pusha cmp cmp xor or xchg sbb pop std mov sub in aaa aam mov or fisttpll js movzwl out fdivrl cli jl dec inc add test cmc or jne or mov mov test cmpw adc test or push les test ljmp sbb test xchg push lea jg mov jbe cmp adc (bad) je sti rorb jne ljmp (bad) (bad) iret mov lock pop fimull push push popa clc rcrl xor inc add mov xchg out pop xor popf and popa add shrl mov xchg scas frstor ret fstpl jne je jns mov xor pusha das add push sbb jbe scas sbb dec xchg into out dec (bad) decl inc and mov sti icebp pop jl fbld scas xchg add movb add jbe test je mov or xor iret add js and lock testl movb mov popf xor repnz into hlt (bad) out jae je movzbl and mov sub loopne xabort pop and mov (bad) pop add sti cmp in sub mov cmpsl sti adc or pop out jne add dec outsb inc sbb ja call dec test cmp and or xchg roll inc lcall xor xchg inc and sub dec xchg push movzwl jmp mull jmp lods or or adc and shlb lahf int3 or push dec add cwtl sti dec sbb call sbb out jmp rcr iret xor lock sahf mov mov and lds dec add xchg iret aad rcrb in fwait int3 mulb dec sbb jb add mov or lock pusha mov inc mov cmp and mov and dec sbbl inc popf and sbb push or jae mov arpl js or es and or arpl add in test outsb inc call fsubl outsb fcompl and or mov xchg mov and or jge mov icebp sub sbb sbb or iret gs mull roll or stos and jae mov or (bad) pusha and and fbld or xchg pusha and mov and or cwtl sbb loope mov cli adc ss out or add adc mov dec (bad) jae and add jnp xor popa sbb or mov mov pusha cs sbb divb push cmpsl and sbb in sahf sbb mov fsubl cld adc or outsl in and dec xchg pop and popf add and xor rol sub mov adc add sbb cltd cmpsl adc pop and (bad) iret or jecxz xor lock cli (bad) jmp into sbb or in sbb xchg jns leave and les (bad) dec add push (bad) pusha packsswb daa jg insb add xor pop push aaa rorb pop and mov popf aam add mov push es lahf popa loop popa mov je aam in sub (bad) inc and loopne ret inc sub cmp add movzwl sub dec addb or xchg sarb loop or divl sub xor xchg imul lret or or jbe jmp punpcklbw xchg je (bad) jmp ret pushl pop loopne and jne mov add push jmp or mov and ret sub test or jmp mov mov sbb jne adc je test mov jge mov ss test (bad) out mov mov pop push mov mov mov mov test (bad) decl push and sub sub add and fild dec or or jo call mov add cmp jb jmp jo xchg cmpsl jns add pop ds ja or outsb fldenv mov call inc ret fidivr ja pop and (bad) mov jmp pop loope and daa cld jne mov mov rorb cmp cli xchg cmp mov out mov leave and add test mov sub mov cmpsl push fmuls sbb fidivr sbb cwtl es push lods in jae dec mov es cmp aaa dec and iret add dec jne popa out in xchg mov jae imul sub sub rol push sub negb pop adc fsubl adc sub das sub addr16 sub test roll shrl sub pusha ja int3 or pop push sub cs pop cs sub sub sub out jno (bad) push sub sbb es imul push arpl add sti mov xchg mov jne xor fdivs push mov push push dec add icebp mov cld dec sub ret sub cltd mov adc and negl dec pop lods or gs push add fstpt inc out fcomi mov (bad) pushl jo incl jne inc ret sub sbb gs sub ds jae ds cmp push es rcl dec aam test xchg sub aas (bad) loop sub fisttpll sub pop inc mov sub sub ds fwait dec pop pop xchg or fldenv mov inc mov and xchg or inc sub or sub add jae mov test push or in repnz sbb lcall add xchg sub mov cmp jge jne sub mov ja mov es or jp and add add adc add jmp pop mov add ljmp fadds (bad) adc cmp mov inc sbb (bad) fwait jae mov sbb iret fadds test xor jb pusha sbb out cmp pop negb and sub jl mov mov cld loope xor add xchg xacquire insb sub mov sarb mov mov fdivs adc fdivl or jl fdivs adc push push ss insl pop adc inc adc rol xchg inc dec data16 pop add popa mov add cltd inc sub sahf inc add push mov insl add push adc outsb insb or test or add dec inc add cmpsb sbb enter mov pop add and lds push adc add lea and mov and rorb stos pop inc rorb fwait mov push mov pop mov push sub rorb inc sbb icebp mov jg mov mov mov decl mov mov inc sar pop imull add lock mov jmp test lds jne xor push cmpsb push mov jb pop call jmp in or dec ja fs and or inc inc mov ljmp sub and roll aas test je sbb mov and mov push ss aam and test fdivp and arpl inc and mov cmp sbb push rcll mov (bad) jmp sbb inc sbb and sbb outsl inc lret call jno inc das add enter inc (bad) ja jl test je aad sbb scas pop je cmovne jb lea lret push dec add in lret fistpll ret sub aaa adc mov inc inc mov lret add into fs lea clc sbb jae jne dec cmova and pop push adc sbbl inc add mov test jle mov ss repnz test add mov xor inc xor aas cmpb lock dec add lea movl mov loope mov sbb lock jno mov add xor and cmpl pop sbb cwtl cli bswap pop mov pop dec add adc stc test or jl jmp xchg fs jbe mov lret mov ret addr16 inc adc popa cld pusha mov jne pop inc adc push xchg test adc mov dec pop push xchg dec push adc sbb xor je pop add call sub aaa xor testb sbb add iret (bad) sbb xchg rorl pushf loope pop int3 test adc inc pushf jmp nop stos add aam loopne xchg jnp inc add xor ds mov pop add sub adc stos push loop cmp insl hlt mov xor cmc pop aaa mov jmp pusha sarb (bad) (bad) mov sbb push add push mov or mov std pop (bad) and add bound in test dec sbb test and inc xor push add cld xor add (bad) aas out mulb and std subb into sar cmp mov inc adc pop adc and adc es push xlat jg and adc ret mov das inc daa mov mov test xor jne or lock add in mov lea push dec mov adc jne xchg mov out add xchg inc sbb or xor mov test mov sbb shr and cmp je add sub lret outsl cmp lahf inc sbb cmp xlat add andl pop push addl xor inc xor ja,pn mov inc cmp ret test jne cld adc cmpsb incl add bound adc ret sub nop inc sub push lock jae std mov or inc ret mov pop push lock sub lock pop (bad) or (bad) jmp call test sub jmp push dec bnd pop jmp mov jle push cmp (bad) and inc (bad) mov dec sbb inc xchg inc and jmp push inc outsl in add or sub (bad) xor add mov movl inc cmp mov jo fild lea addl or jne mov mov clc sbb test jne mov push add sbb test mov inc push rorl rorb stos or sti inc shll or inc push cmp sub (bad) sbb movsl pop add mov call sub pusha push inc ret and add xlat cmp or xor aad fsubs jae and mov inc sarl dec ret mov stos rorl (bad) iret pop sub test add pop call or pop jno sbb rorb imul pop add adc or loopne ljmp xor lahf out inc push test mov repz rcrb mov adc ret jmp sub lock (bad) mov js cmp sbb popf jmp mov mov jl xor xor and lock fsubrl inc jne out cmp rcl add xchg and outsl pushf sub dec sbb das (bad) decl push xchg dec jb and sbb mov jle test mov push rorb add jg jns sbb mov ljmp pusha out rcrb daa mov push pop fbstp mov add lret aas xchg (bad) xor push mov cmp sub mov mov pusha iret add test fild dec aad (bad) dec adc mov stc pop adc pop cld or mov je cmp jle incl jl in into stos sbb orb not sbb push test (bad) pop add jne or push ljmp test add add mov fmull or jo xchg mov test sbbl or sbb xchg sub imulb cmp push sub sbb or mov nop das pop lcall sub leave cmp jg sbb mov aas roll add jne stos fiaddl test mov fwait (bad) fucomip xor fmuls adc inc push subb adc test add mov pop cmp test xchg leave inc aad add mov les jecxz sbb rcl sbb ret adc mov inc lds cmpsl and rolb fwait jmp int3 stc pop or mov gs rcrl add mov movups xchg fsubl mov or mov or sahf addb mov imul sbb test out aam mov dec sub cmp stos adc mov sub loop mov and loop mov push movsb subl jg inc inc mov (bad) mov pusha mov or and sub fisttp adc (bad) xor test ljmp mov mov sub pop pop stos out (bad) (bad) or lea dec mov rclb adc and dec lea xchg push rolb or mov repnz jmp pop stos xor rorl xchg pop pop xchg or or ss sbb add fiadd pop xor pop dec test push daa mov mov add push in fild cmc add and push sub inc cmp push mov mov rcr or dec fmul data16 pusha faddl adc call pushf out mov lods push aam xor jns int3 adc sbb adc int adc mov cmp int3 xor aaa push scas nop call rclb jbe ljmp xchg iret push push mov into lock mov jb rorl and add xor imul xor and pop and std (bad) push bound lcall add lcall mov shrb aam mov add add or nop and rorl in fdiv fild je cmpl jne sub je call pop addl xchg xor add xchg mov jle sti movlps cmpl sub inc adc add sub (bad) in pop adc movntq clc add xchg inc push jo mov or (bad) inc add pop jno pop shrl push push int and jmp xor clc cmpsl call jmp mov jo jp aad add mov addb sub pusha push lock je cmc cmpsb xchg or xor mov enter loop nop jle jmp out iret sub push pusha or add jnp insb and mov and jne mov popa pop fisttp push sar fdiv inc and add imul bound xor adc (bad) outsl xor in mov or xor adc aaa in push add cmp in xchg mov adc rorb lea xchg lds repz mov push adc repz loopw stos jbe jne jo add jge and ret push insl dec mov dec inc sub jmp inc iret dec outsb or jo test adc add mov or and add push (bad) je push inc add sub mov in lcall cmpsb lods adc lods pop push stos sbb adc cmp lret rcr sar mov cmp and inc add or test mov mov shrl sbb and and outsl stos rclb test iret push jbe sbb and dec lea adc xchg mov sub test iret or or mov add xor stos daa sub sub mov mov clc inc dec pop call adc push mov jne xchg or mov mov lods or adc das sub je or stc or stos aas insl (bad) lods cld sbb add addl mov cmp mov and nop mov or or push js ret inc xor scas jge xchg or adc pop push call shll dec outsl push out push loopne cld call orb inc dec std test aam dec test jne test or shll es and mov jo jno cmpsl call push in mov xor js mov adc pop cmp or stos inc inc xchg and push int jo mov jp lahf ret pushf and pop (bad) pop fisttp rcrl clc jg mov adc inc sbb inc notb test cwtl js lock bound mov jp test fsubr sbb add imul int push pop dec adc sbb in popf stos stos subl sbb iret inc pusha and outsb or addr16 sti xchg dec push cmp add sbb inc mov je add inc fucomip xchg cmp or sbb in icebp dec add jmp sbb jnp js inc jne enter (bad) xchg je add adc inc iret aas (bad) mov add pop add roll sub rcl subl subl jne imul and mov add imul xchg add jnp (bad) jns nop sbb fbld cmp pushf ret sub rorl push pop mov test cmpl and or or (bad) dec call test dec inc or sub ja add add inc dec cmp xor addl stos aaa mov xchg or pop addl push mov add xorb test adc or pop lcall or shll cltd mov inc les decl cmp xor loopne sbb iret es cmp pop cmp mov xor ljmp push push fsubrl adc mov add fildll (bad) std fist je mov and cmp lret (bad) popa andb test dec hlt push test ja push aam push add test cmovs call lea jl mov dec roll xchg pop add shll add loopne and adc int3 jb jnp aas cli adc adc sub sbbb sbb jmp cmpxchg8b (bad) lret xchg lds inc test or test push push int3 xchg scas jbe dec mov lret push xchg out add clc sti mov bound call loopnew decl sub test ja jno insb and xor mov dec xchg sbb (bad) out addr16 (bad) rep fs push (bad) pinsrw sahf aad adc and hlt and xchg inc arpl aas mov sub (bad) out mov inc push mov lret dec sbb add iret (bad) int shll push das test lahf dec (bad) push loopne jno add sti push rorb jmp dec jne adc out add pop jl mov push adc jle and cmp push add call adc in shlb lods sub and aas popa mov pop jg lea je aad sbb and dec clc push (bad) xor inc xor (bad) outsl inc xor pop add xor xchg imul add lahf or or sar test cli outsb inc test je mov pusha stos fadds add push faddl je sub movq loop (bad) add pop dec adc jns aas and (bad) int ret pop pop dec add push xchg loop bound je addr16 daa ja je push add dec fucomip jne mov in lret xchg mov leave test adc add aas dec adc or rolb mov es pop mov or dec jmp js enter push arpl test (bad) xor inc add mov sbb mov jmp (bad) cli push mov mov test test add xor add ret mov add mov call cmp test idivl movsb adc and mov sub fild or test je xchg push aas xor or in push (bad) xor xchg xor mov mov and inc aam sub lret sub test inc xchg je jl insb add (bad) dec xor and adc cmpsb pop inc sbb mov xchg or and jne jl daa sbb mov or mov fadds push mov ret data16 mov adc adc or mov xchg inc aas pop and (bad) hlt push mov push (bad) dec (bad) scas gs fstpl dec sti (bad) je lea rorb sbb jl or sahf sbb test inc jp sub and mov xor or sbb stos cwtl mov jg testb mov insb adc or daa or cltd dec inc shrb lds lock js and test pshufw inc xchg push decl inc and call mov push popa add loopne imul inc insl jl mov into adc rorb test pop dec or jne push mov or cmp push loope push jg xchg dec call lock xchg xor jmp mov push insl popl and or fnstsw mov xor enter aas mov or test negb cli adc inc sub mov data16 xchg orl mov hlt pop and loope or inc sbb mov rolb xor sti mov jle sbbl xlat lds rep xchg adc test add je mov and and sub xchg xchg xchg jno enter jae mov xor (bad) add das scas or dec jg (bad) push test test mov mov aaa pop jb xchg jmp push (bad) adc add mov push sbb mov and add out clc inc testb sub dec jecxz inc mov dec or lods inc decb add test mov push call push aad das jnp mov pushf adc add sbb mov sub cmp lahf loop mov cwtl bound sub jle add inc add (bad) aas incb inc mov call scas notb cli addr16 nop push (bad) (bad) mov sub cmp and insb pop add leave mov mov lcall jbe or and rclb and mov dec xor into and sub jmp sub add ret adc rcrl add sar and xchg xorl imul mov cmpsl push or add insb ret aas pushf mov (bad) pushf sub add xchg inc aaa inc sbb xchg pusha outsb int3 push cmp or out xchg dec sbb es scas lahf adc movsb and dec adc dec and loopne mov call add adc pop (bad) cmp add lods sbb testb jne cmp je mov rorb jo sub mov call mov push rclb add enter inc inc adc add (bad) mov inc add fwait test pop push inc and inc (bad) fs mov insb and (bad) in xor inc inc sub mov cmpsl jo sbb inc push inc and adc mov adc and mov movl pop inc xor pushl rcr cmp cmp lea mov mov jne push inc mulb lahf negb aaa lea mov mov lea mov adc adc push sub jg aas adc shlb mov mov sub sbb fsubs adc jne lcall cmp pop push mov add xchg mov fistp test mov mov jne and fwait push test jne test push inc cmpsl add mov xchg mov inc xor mov xchg mov leave adc push inc cmp fwait (bad) and pop into sbb cmp cmp sub decl js scas inc inc jmp scas add or pushf or loope das lahf cmp mov jno or mov lock int fs push shlb pop aad in jg in push call xor inc and jno (bad) (bad) inc mulb loope ds ds mov mov sub pushf mov sbbl jo mov pop mov jmp fadd mov mov add pinsrw lods sub xor sti test in call call or out lret mov adc popa xor stos shrb ljmp and sub or jo push loop out fnstsw mov pop and add out cmp add lea add (bad) fistp inc sbb mov sbb scas mov and jge call mov jl or inc and xlat push popa (bad) orb into xor mov lea test pusha nop in adc inc sar fist sbb rep mov cmp or pop adc test add push rclb push hlt call sub and push (bad) cmp sbb jnp int3 sbb sbb add mov or jbe into mov xor pop call les dec xor lahf mov pop mov dec add cld rorb dec pop inc mov add or out fstpl decl fildll fstpl fldl fdivrs sbb lahf outsl je inc hlt cmpsb sub jl test je mov out test cmp pop (bad) cmovbe lea mov mov or mov das or add fwait (bad) cli or sarb push inc dec hlt stos or mov mov lret jo push incl mov push mov movsl andl push sbb ljmp out pop orb add dec or jmp call lock std pop test (bad) sbb outsl push sbb fimull push mov dec push push es cltd sbb sbb sub xor add jle orl arpl lea and fwait leave push sub add sbb loopne bswap and mov adc mov adc push cmp jl adc push add push or and sbb rclb adc aad mov push and int3 and adc mov in or sti and nop cmp je add dec adc jno fdiv cmp jne jmp outsl int3 jg push adc jmp mov pop jmp push sub fcomps loopne sti pop inc and into fsubrl adc mov or nop lods insl jb and sbb xlat sub mulb test clc jp test mov arpl xchg mov mov inc jne sub mov mov (bad) adc rcll xor clc add jmp sbb add jne sbb or jp arpl pop cli mov incl lea sub or insl and jb mov in and mov out fdivrp nop test rcrl ficompl (bad) enter xor mov mov dec push cmp pushl mov (bad) jmp jns icebp or scas stc add mov adc push or sbb nop sub xchg xchg adc inc call xchg fistl adc stos stc ret cmp les decl (bad) (bad) sbb insl and jno adc lcall adc xchg lds add adc dec or ret lea call idivb jne jmp pop incb call cmp jne or mov xor lock shlb ss (bad) jmp mov ret dec mov push rolb test or call and xchg es xor loopne fidivrl call out pusha es xchg in fstps pop out or je add sbb and call jne rcll in mov lds je cmp stos jg mov sbb bound push fs xor sbb mov cli mov cmc fdivr lcall pop dec add andl push push and fsubrl dec call xorb shlb mov jmp jg ljmp das cmp push rolb mov adc jb mov push inc fdivrs jmp in dec call mov loope jmp push sarb add xchg movsb stos jle jne add outsl ja xchg ror cmp mov into xor xor test je push cmp or adc push (bad) mov leave fucomi jae fstpl push hlt aam es and lock xchg mov shll cmp adc jne lea test add sbb bound iret add popa dec cwtl push into sbb mov movsb fcomp fcom dec int3 xchg and nop add adc fcomp push adc leave shrl test test cmp in dec call xchg lea jp add inc jl call jbe mov je daa jp bound fsubl rorl dec in out pop xor clc nop hlt roll push push mov fwait pop push push call mov fist les cmp xchg pop fs push dec and rorb lods aam data16 add popa pop cmp int3 (bad) mull push test jecxz mov fildl repnz aad or fdivrp sbb call lds js mov mov add add sub or xchg lds sti cmp clc push mull jbe cmp fisttp mov cmp jne add add cmp (bad) mov sbb pop inc cmp jb lea cmpl jne add mov and call sub jmp ljmp jmp pop add add fimul sar adc sub jmp aam testl cmc (bad) js or mov lea cmp jb and inc push and lea add incl add mov mov sub sbb je push add and dec or xchg fbstp adc fildll fisubr or loope fstpl or aam push loope inc add mov icebp mov dec inc add nop xor adc mov and aas das and and mov jg lea mov shl add xchg mov add sarb cmp jne or mov and push push xor push push xor std adc in sub call adc inc and je push scas insb fwait or in jecxz cmp test stos lods push pop fcoml mov fcompl xchg test jl adc fwait test mov std incl pop add cmp dec push roll addl inc data16 in cli pop call (bad) cmp push sbbl push or loope loope cwtl mov xor outsb and mov ds add pop cmp mov xchg xor test jns push add mov dec sbb jo cmp jne aas inc test mov or cmp inc and mov (bad) push pop and pop or (bad) fild push mov pop addl mov mov xor or or jg and mov (bad) push or lds add ret mov mov test jne add push mov das sub in and daa int3 inc and je roll mov es lea cld jne rorb fisub mov test mov je adc into call mov jns fdivrs test adc pusha out addps inc and jle sbb sub (bad) jmp rorl mov (bad) lea lea adc rol push sbb or cld mov sub add shr rep mov mov push push sub js push je sbb jmp (bad) call movzbl mov mov mov mov mov mov mov add inc sbb test push and lds mov mov nop test or inc xor lds mov cmp xor outsb sub add cmp mov sub mov aam enter mov lea or pop mov je or pop and jge out dec mov cmp rcrb jg push and xchg sar ja cmp mov lea jne mov lea (bad) ljmp out sar test cmp jne xor out or mov adc add rcr aas push mov ret bnd cltd xor vmovsd shld adc mov decl (bad) jmp jmp push or sub mov cld sub mov movzbl and cmp cmovne lods and outsb (bad) test jl lret (bad) cmpsl je dec test pop pop inc xchg or ds mov ds jmp xor ss dec les inc mov repnz sub leave push hlt (bad) iret std mov sub leave rorb loope jge lahf jmp sub dec movsb push sbb xchg cmpsl shl dec mov (bad) jmp push push fwait or nop mov and incl (bad) fisttp and and inc sbb jmp mov mov popf (bad) lock clc dec jnp sti (bad) call mov and je mov call loopne inc sbb lahf mov mov inc add mov xor or lea loop add sub xchg xor jmp nop mov sbb dec sub call xor sbb xchg std std (bad) jmp jae or or int3 ja pop push into sub fmull push outsl mov mov dec inc sbb ja push mov jmp adc (bad) sub or je xor inc lea xchg mov sub mov add adc jo in (bad) je inc mov sbb in dec inc (bad) or test sbb mov in xor pop in scas and pop inc push test push adc add lret mov sbb and jnp daa lock sbb inc push inc push xlat cmpsb add js out and loopne enter and bound sarb rclb add push xlat fdiv fldenv mov sub call popa mov icebp sub cmp sub jnp mov or or mov xorl jo shr mov mov mov movl mov sbb mov mov xor jmp adc in ljmp inc sbb sbb outsl mov pushf and cmovno orb mov sbb sbb in es out pusha or pusha adc scas mov cmp cld sub das add pop je fiadd push cmp add pop jnp jb mov lahf adc or cmp mov fwait cmp mov adc lret dec call push or ficoml rolb bound add dec cmpsl xor std lcall xchg pop push andl fcoml popa mov adc pop pushf mov mov mov fucomi cmpsl fnstsw sbb or jmp mov mov push jle sub inc in push xor rorb cli enter cmovle mov push lock add ret lea add call add cmp mov mov test and jo jb and mov aas fdivs mov movb xor inc add add aad std inc inc aaa add sub std and mov out btc jmp xchg push mov call subb xchg or mov xor sbb jno push pop adc call shlb idivl add fadds icebp push cmpsl pop xchg fistp fadds mov mov jbe push call mov mov dec outsl call fs test je inc call ficom cmp jb (bad) fisttpll js adc cmp dec lret xor cmp in ja call je mov pushl mov or add add loopne data16 shlb add int3 comiss pop sub rcrb dec insl aam not sbb pop xchg scas sub arpl mov sub ljmp ljmp mov (bad) iret push dec add cmp cmp and push lea inc in push pop pop int rol sbb or imul push inc push dec or sub adc inc cmpsl jecxz adcl xor daa xor int3 mov cmp icebp dec aas mov xchg arpl mov sbb loopne jno add adc or je inc and lcall fstpl inc popl repz inc cmp lds sti sti ja jmp pop cmp mov or mov addl and popa je and inc cmpsl mov and sbb cmp jmp jnp and jmp xor jne scas xor jo rcll push test add pop data16 and out mov xchg xchg sub jle pop icebp rcr jne xchg inc mov out xor test or sbb push adc (bad) cwtl add push test pop js dec pusha or daa mov sub xor aaa sub int add or pop in or jbe cli sub loope jmp ja and call push sbb aaa add push call arpl and lock daa add mov sub cmp int3 adc and (bad) dec mov pop or push push jmp ljmp inc and pusha push addb and popf push dec andl xor or outsb dec add pop mov sbb stos jb in or fild mov jbe lret sbb mov sarb or add aaa dec or nop (bad) insl cmp jmp sbb (bad) ljmp fmull divl push sub jmp shll aas add or das mov jo xor sbb ret or outsb mov inc add cmp pop cmp rcrl sbbl inc or (bad) mov pusha add decl push mov cwtl repnz mov jo decb mov inc inc adc sbb xchg adc mov or adc mov add sub xor cmp cmpsl (bad) xor lods add and lock in push sahf xor jno call pop subb je cmc push out add pop xlat movsl pop add ss fs push mov lret lods xchg adc cmp cmp cmp movsl (bad) stc or mov pop jge jo or inc adc add outsb pop or call call test push jo sbb sub stos call (bad) and movl cmp or and mov xchg push xchg adc call and orb sbb add rolb sub rcrl andl and pushf and or test je add cmp add lret sub or sbb dec rcrb ds or out mov adc mov inc or mov cli ret psubw mov mov iret pop mov pop add mov sbb jne sbb (bad) mov popa inc hlt imull push and loopne lret int3 and adc mov or and lea fwait pop inc sbb jg push scas lods sbb mov call or add mov cmp fist sub push popf dec mov push cmp mov mov mov call jmp push adc js dec inc cwtl aas or mov sahf rcrb mov inc sbb mov mov or jp cmp nop jmp (bad) inc shlb cmp add jb mov rclb mov pop push test outsl call sete arpl jns xchg or scas pusha inc dec je jo xor jmp sti or pop ret je test jne xchg sahf jg pop sbb or mov aas bound jecxz adc and or arpl (bad) jg add imul pop je loope call lds jg iret or arpl or jno xchg call adc dec inc push sub pop sbb test jbe je mov cmp out pusha loopne jb lock aaa jecxz pop dec mov adc out cld xchg add (bad) cmpsb push cmp js je jns xor jl push jmp icebp cmp addl pushl add test mov ret jmp or es add pop add movsl sbb push dec and shlb xor push or xchg out std add and and orl push xchg rclb mov adc cltd mov xor jne (bad) adc pop movsb (bad) jnp std decl dec xor int mov mov add pop xor test je mov mov clc mov inc or jno mov ffree idivl in mov cmp inc ret addb pop test adc xchg and mov add or shl decl ljmp add fbstp push xchg fadds cmpsb sbb insb and xchg scas mov sbb call cmp add mov jbe pop add dec imul add (bad) mov out cs subl scas lea add rclb test xchg pop lret pop or mov add jne mov ja pop mov enter mov push hlt in jo loope pushf and in ljmp test mov mov shr je addr16 out test fcomp sbb test sbb je mov stos mov cltd addl add jne sub sub jmp cmpsl mov or repz in sbb adc lahf add inc mov and xchg sti aad repnz clc push dec or adc insb mov adc mov lock cmp hlt in adc inc sbb add mov adc adc inc pop notb out mov ds adc scas jae cld inc adc adc insl jo in je sub cli dec lcall sbb ljmp call sub adc mov add in pop mov mov xor add in fmull and or mov sub push add popf std ja je mov dec mov xchg mov fchs adc mov inc and pusha mov pop cmp adc add pop sub jg test push lahf mov int aaa test or mov xor pop xor je sub outsb inc incl sub test sub sub dec orl into pusha xchg dec adc and or enter stos mov and or cmpl mov inc outsl and cmp call (bad) adc mov or mov test add sub rclb adc pop insl mov xorb jae hlt inc (bad) mov adc and dec enter cmp das (bad) lock mov mov pop pop ret nop (bad) loope sbb cmp sbb jmp mov sti sbb call lea cmp jbe daa add cmp pop push je cmp xor movsl jnp call adc sub jg dec divb pop xchg aas ja mov sbb insl cwtl rolb cli and mov cltd inc xor or and adc cmp je add cmp jle cmp (bad) push dec jg aaa adc push mov outsl cmp pop adc (bad) out rcrl cmp mov dec add push jle cs jle test adc roll je in mov inc xor pop ret nop cmp mov lahf prefetchw or mov jns jle xchg je loopne push mov add mov popf jle add mov fldl mov mov or mov adc aad sbb mov inc cmove inc cld pop cmp or popa je cli push loope es orl xchg or insl add (bad) adc (bad) test push sub icebp ds dec mov cli cmp inc cmp popl ja push cmp out pop adc ret cmp and cmp call mov (bad) bnd mov add aas jg cmp call inc sbb test cmp mov inc push pop add call push adc mov mov fidivr mov test popf rcll jne mov pop mov ret cltd dec xor nop mov fild push ret pop add sbb jne lret adc push mov jg imul outsl cli (bad) cmp ja mov jne mov inc or je out (bad) idiv xor xchg jmp lea cmp bound cmp pop xor jge sahf (bad) je cmp test lock pop cmp in fcom jmp mov int3 inc dec inc and xchg sub (bad) adc mov mov loopne mov mov pusha sub mov daa push cmp insl add imul pop pop xor push test je or jl add testl sbb mov cmp dec sbb mov pop push test sbb push and cmove or mov inc and push int3 call clc sub lret dec add jbe mov mov add jle cmp inc (bad) mov cmc out cmpsb es cmp inc call cmp adc clc fwait mov neg pop pop ret cld leave sub dec and adc cs jl inc or data16 add test jne xor jnp push int add inc dec nop jmp cmpsw xor cmpl mov clc jno (bad) pop test adc pop inc mov or fstpt loope leave push das arpl aas pop jo cmp outsl nop add adc and cmp cltd push pop dec in add pop add cltd jl xor lock sti je js test mov mov pop mov test push in pop mov push and mov dec mov pop test inc or dec mov sbb mov test cmp xor mov movsb or xor icebp jae push adc xor sbb mov insb sub cmp icebp or test sub xor and add ret add add das mov in ret call and je and das lock or out jmp or or push push adcl aas pusha cmp insb sbb cmp adc add pop das jne adc jmp sbb mov inc dec lahf inc lahf adc inc cli add movl push lods add jl pop ret das bound and out inc mov pop adc ficom jmp hlt jnp ret je cmp call inc or test cwtl ret and xor jmp xchg iret lcall jmp inc scas xor pop xorb or or cmp jmp in sub pop push incl test mov dec sub mov roll and ret mov push pop inc std mov ret je mov dec cmpsb jmp inc lahf pop sbb lcall lods mov int3 add loopne fadds inc adc loopne (bad) enter nop nop nop cmpl push jge jmp call lock (bad) push orb sub jp or xor enter mov or imul add loopne dec loope or call sub inc sbb (bad) decl lcall inc cwtl mov xor sar sub sbb mov or add out fistp call sub push stc insl jnp mov xlat daa adc add adc call es xchg test mov popa iret lret test hlt add out cmpsb jns (bad) in jae inc xor lahf rorb out sub sub or inc and jmp cmpsb dec dec popa jo loopne (bad) adc call pop add orl mov inc jne mov pop cmp cmpl divl mov inc cmp (bad) pop add subl mov mov sbbl add maskmovq testl cmp lcall out clc sub cmp jne cmp dec in mov fisttp dec adc jne add mov rorl jne jo test jle cmp pop pop inc cltd mov in cmp cltd or mov mov mov dec add or pop jne test loop cmp arpl jne pop jne mov mov mov (bad) test rolb sub pop mov test adcl loopne clc inc xorl test outsl fstpl imul mov movl enter cmp sub fadds ret add scas adc movsb mov shlb (bad) (bad) call adc (bad) jo fistp add decl loopne jae test je cmp adc rcll int3 popa mov inc jbe push call add decl mov lock mov jo push or inc and (bad) lock mov pusha ljmp pop cmp repz jl adc insb push cmpsb push push xchg decl test je fildll je testb mov lds jne mov push test je mov cmp rsm inc lea dec add jg jl lock pop sub add push inc sub roll inc mov jmp jae or jo pop mov adc push sbb outsl and repz add test hlt push dec jg dec sbb fwait add inc das xor pop xor (bad) (bad) scas add dec testb je mov stos push fisttpl mov in push adcl std push add mov lea pusha clc xchg std mov (bad) jbe mov inc test mov aam decl add inc lock mov push lea cmp add add or or push rolb mov dec js (bad) decl inc dec test jne or mov fwait (bad) fidiv or cmp xor (bad) fnop fwait add inc mov mov test jne test push test add in push sub test mov out xchg stos test and fild incl dec jne sbb mov mov popf loope jmp push jecxz sbb and (bad) xor sbb or das and cmc sub pop inc and xchg lahf data16 lock or sub adc add sbb les sub push and mov je add frstor add push mov jbe mov dec mov pushf adc movb or xor (bad) push lock jo add jmp add add nop sbb jo lahf fstl mov add icebp test jg push sub jno inc (bad) push push aad sbbb scas and ljmp or push and incb jae negl sub add or xchg pop rol stc push js scas jmp test retw out add jg rdtsc (bad) mov sub pusha (bad) lret adc pop dec mov jecxz adc mov je lods std scas jg fwait enter add sti jae mov add adc rorl push je cmp test je xor ret add mov test jne cmpl jle xor ss sbb mov sbb icebp jg cmp inc and (bad) sbb xor add sub jg pop sub cmp mov sete test je push add push mov inc add xor test add mov mov mov sbb outsb adc hlt or enter sbb xor ja jb lock jns add jb push push pop cmp decl sub movzbl lea or lcall fsub adc mov push cmp or aam shr popf test jle cmp jae mov xor call movb loopne,pn adc push xchg (bad) mov (bad) jmp das lahf (bad) ljmp test mov push add xchg imul cmp cvtdq2ps (bad) xor mov cmp call add cmp jb movsl pushl in xor jmp mov sar (bad) (bad) (bad) clc mov movzbl mov mov and add sar sub shl or cmp mov popl incb jne xor pop xor cli push dec movsb pushl shr out add cmp jne mov aaa add and nop adcl mov je sbb jmp icebp jg cwtl jae rorb ds std cmp jne and sbb test or call or test cld cmc jg pop cmp js popf rorb fimull enter mov xor mov add mov or sbb out jg test je cmp (bad) and push jne (bad) incb movb jne cmp je addl (bad) (bad) fcomip pop or pop dec add add sub cmp mov lea pusha ret out pushl pop and cmp jne inc mov and add sbb cmp ja (bad) add mov and in dec add pusha push mov add mov mov mov mov call rcrb into sub jno sbb ficoml adc push (bad) cmp sub mov add lods rorb adc mov in es sbb pop je sbb call cmpl sub ljmp in (bad) pop mov sub lea lea call cmp or mov repnz mov divl shrb lea sbb aaa mov jnp add jo mov test scas insb loopne cwtl adc push add mov mov push icebp je ret stos mov add pop ja pop std call and xor mov imul cli fcoms adc xor mov xor (bad) jmp inc adc cs sub sub add mov loopne xor pop xor mov mov add cmp jb adc clc repz xchg lahf pop stos stos xchg dec mov mov xor cmc mov mov (bad) movzbl test mov pop mov inc adc add jb ds cld es add inc add add inc xchg cmp je jl dec and mov out mov pop int jmp shl sub iret push hlt ja or cmp jg mov movsbl mov cmp mov call repnz ret mov subb cmp jne fnsave sbb rolb icebp outsb out inc and test sbb (bad) hlt inc jo push and mov cmp jb mov mov xor jp xor mov je adc adc mov fcomip mov test loopne decl je xor adc inc add (bad) jb mov mov addl outsl add jg mov sub cmp je test jle adc fnstenv clc (bad) incl pop add mov movb sub cmp jne mov out loope aaa and fwait ljmp inc xchg mov xor jmp lods incl enter xchg call sbb or adc sub mov out mov adc and mov dec jmp add push mov in jmp xchg lahf call or scas ffreep add cmpsb jo ret mov add jo jmp bt jnp int3 push inc xor add add inc scas je pop rolb mov mov sub nop cmp not inc push mov pop add add push (bad) enter add and lea xchg mov fistp inc jne xchg cmp add iret mov cmp lahf mov mov loopne fild add pushf jmp int cli xor ret jmp sub inc push js push sub add jbe shr push bound inc add mov decl mov (bad) xor (bad) add adc (bad) int aaa (bad) mov pusha push add dec cmp push jg jnp and mov int mov (bad) jmp xor (bad) sbb insb mov inc add adc mov fucomip scas mov sbb adc xchg hlt xor push hlt mov add ficompl jbe call inc mov lea mov mov fstl mov add add mov cmp nop cltd in addr16 fimul movsb sub jbe or sub fild mov lea sti (bad) push inc push je mov mov mov inc rorb cs fs rorl fistpll push and arpl push hlt adc pop mov mov (bad) aas insb and stos xor mov jo inc icebp pushl cmp in call mov mov lea mov loop push xchg dec jmp rorl mov dec xor fwait aaa (bad) incl dec cld decl loopne ret mov lea clc sbb sbb dec in adc (bad) out mov je mov jnp (bad) mov mov mov dec add js pusha cwtl lea mov cmpsb ja cmp inc iret dec add push clc stc sbb fdivs testb add mov das add sub cs imul adc inc add adc ficom jg or or mov shr cmpb inc aam fwait cwtl adc mov inc push mov movl ja movl call jno (bad) inc cltd (bad) mov in test and jg cwtl adc jbe pop test xchg xchg adc jb mov or or or add int3 xor aas xor adc mov or jo adc push push adc out jo add mov sbbl add decb lea mov mov adc cmp lods mov cltd jb std jmp adc cwtl mov pop icebp or cmp mov and (bad) mov push mov add push test decl xor in cmp int nop pop ret call cmp adc pop push mov daa test je add cmpsl pop and pop adc pop mov call nop xor add outsl cmp loope ja pusha outsl js test or or sbb mov add mov jb add ss call mov inc mov mov lcall rcll (bad) mov add cmp daa jmp xchg dec push popf add lock pop mov jne das xor sub pop outsb jmp nop push push mov xorl outsb or ja clc add clc add lea out lret cmp sub sbb add lea add dec cld rcrl cmp movl cld pushl cmc pop pushl cmp jg cmp jle loop sti pop outsb cmp jl jl lcall lock test add sbb adc mov mov mov and and dec jb cmp je inc jne mov cmp inc and push je pop adc fstpt push test xor pop pop add fdiv test adcl sbb dec out add jns (bad) adc push mov pop mov push incl adc clc decb test add and call ret add je add add (bad) (bad) add pop movb mov in add out movl jl mov mov or movsl mov loope cs stos out add mov lds test cmp mov add xchg loop sbb not adcl xorb (bad) not push pop inc or cmp mov leave adc rolb or and xor inc push add or popf sub test test push pop push mov cmp xor add movsb cs inc or roll sub test dec and icebp setne inc out mov shl shl add and imul roll lea mov mov sbb insl arpl out cltd xchg pop pop insl test pop adc pop pop pop push inc inc lahf imul out and cmp inc pop xlat call push add in aad inc add lahf inc rolb aaa sbb mov test pop cmpl add dec push and bound push popa jmp pop cmpl decl test xor cmc pushf cmc lods mov mov and test jne push lods lea add mov inc or loope aas jl (bad) fild stos testb je xor add inc jle cmp je lea jg ja lds push sub push adc push mov (bad) cmp add add decl mov insl fsubs push out jne (bad) lahf aad test mov ljmp xor (bad) jo sub in stos cmp je mov add scas out iret add add mov add cwtl inc jo mov nop add jns and jmp push shlb or pop das pop cmp push cmp dec or jmp int inc lret outsl cld out add icebp je dec pop xor mov inc jb aam or or mov mov js imull mov mov or out cmp std pop add sarb fstl out adc sub xor movups cmpsb mov sub in sarb outsb or xchg or pop popf fsubp out jo ret sbb pop or and mov test cmp mov pushf sub cmovge ret mov sbb std add shlb cmpsb fist test add adc call or cmp sarl jl lahf xor (bad) cld popa or sahf cwtl in pop mov (bad) wrmsr sub (bad) xchg sbb fist jle cmp cmp pop mov out aaa cmp rclb or dec push push xor mov push pop std push dec mov sub inc cmp in add xchg lods cmc pop jbe adc mov xchg or adc ret aaa (bad) movzwl mov xor cld xchg fdivrp sbb ja lea or push lcall faddl dec cltd mov mov (bad) mov pushf scas cld push jae das aam fistp inc jbe sbb inc or and pop nop jg arpl cmp jbe add scas and shlb incl mov cmp setae repz add movsb ret jns mov lea lret inc addb pop or add add mov xchg add add xlat sub (bad) push jle pop jp dec ss pop jmp dec cmpsl dec cmpl je mov test je mov inc scas ljmp add jmp jno mov std call imul stos xchg add adc push cmp jne in pop (bad) xor ret mov ss pop movsb dec xchg testb je pop cmp call movaps inc (bad) enter or push sub into data16 test jne mov test jne push leave add dec inc push rol mov inc sbb dec popa jne dec push mov push popf or jl mov dec push dec xchg test inc adc (bad) jne sbb xchg test add (bad) cmp push push shrb lds inc (bad) shrl jo int3 add jmp (bad) outsl sub pop dec mov cmpb je sbb aam mov dec daa test test xchg outsb inc jne mov cmp sbb mov add and add jmp push pop inc shufps imul aad lea sub rorb inc (bad) out fwait mov or inc and (bad) out or add test cmpb mov jne jmp out je cmp jne test lret in pop fmuls aaa inc loop adc xlat mov mov inc in arpl inc mov inc mov xchg test or mov sti or test mov jbe rcl aad cli fild int3 or or outsl (bad) and nop test std inc sbb sbb popa xchg sbb rcr shll test jmp out sti shl (bad) aas test je cmp push add mov and std sbb test popf sbb sbb add mov loopne inc push call es les mov add test jne cmc inc mov mov stos lcall cmp or add sbb mov lahf cmpl pop add imul and cmp ja movl add js cmp inc pop out les enter and inc sbb scas xor xor adc (bad) or je cmp nop cmc jmp mov data16 cmp or push and or call fisttpll push adc mov pop out es mov mov push fs xor lods ret pop stos xchg jmp pop mov insb fildl and aaa cmc jne dec pop sbb inc pusha mov call clc movl add cmp adc mov test xor jb sbb test insb mov je fwait adc ret data16 push inc cmc out pop mov mov and xorl call cmp push cmp in je or decl xchg and in outsb mov inc sub test insl mov push pop pop je sbb jne jno push mov push lea pop pop je push test add addr16 jmp inc jmp ljmp cmp rolb push jb outsb movl movl movl outsl imul adc jne imul sbb or or jecxz mov dec and enter movl add out jg out arpl outsl outsb cmp dec gs inc adc in out adc gs xor test mov adc punpcklwd outsl jae mov movb in js or fbstp push xlat xchg push inc movsl cltd bound loope pusha es nop and xor add call sub clc loope inc inc je cmp popa inc and and sub pop hlt call stc hlt call xchg lcall and cmpl loopne test in mov mov or les sub or idiv lea not and and mov shr test fnop cmove lea mov cmove add sbb sub enter and (bad) mov mov adc xchg stos cmp popa int lods iret and and test or push add and loopne push adc out cmpsb clc in aad jb sbb decl cmp repnz je icebp and fs cltd pop mov bound push ja push or jne out adc sub stc jmp pop test inc out fiadd in insl jne out pop les adc call cli jmp daa addl cmpsb cmp xorb jmp fwait inc outsb call arpl test out push cmp js mov test loopne xchg cmp test mov cmp or push adc jo push or (bad) es pop inc mov add adc vmwrite add lea ret (bad) call add inc rorl inc adc (bad) aas xor subb add test push mov and sti jo mov mov add push lcall xor add fiadd out mov dec add shrb add push cltd mov mov dec adc pop pop subl mov mov stos test or adc or mov pop mov out dec push jmp xchg adc jne push sbb ja test test mov je add ret loope sbbl out fidivr jmp push add jmp jbe and cmp lahf (bad) psubsw add gs push or scas pop push notl adc pop and dec inc (bad) dec push cld sbb call loop dec xchg das pop lret call xor aad shrb xor inc mov adc mov in and and pop and jb cmp fmuls sbb pop mov psrad jo sbb add cmp movb test xorb inc and cld dec cmp pop or cld repz (bad) jmp pop nop out jg xchg scas mov sbb (bad) inc int3 lock cli dec cmp sti inc rclb rclb xor mov call jmp pop jbe push or dec idivl sub test mov add cs add pusha xor push mov cmc out add je (bad) dec push add mov cmovp xor or dec jmp pop out out hlt out dec ja call dec jne pop jo adc stos mov mov testl je or mov xor in and add mov dec aam hlt sti push push sub cmpb sahf stos pop icebp xchg aas push push mov xor add sub sub jge ret mov mov js movzbl movb sti ja add jmp add movzbl je cmp je xor ret or jle mov push sbb xchg mov cmpsl cmp call sub decl sarb ja add inc adc add iret cmp xchg jp push adc call adc xchg add xchg out ret movl adc testb (bad) inc mov xor sarl and js add std add push xor mov or sti call movb add shr dec or test pushl std pop push outsl sub jmp lahf adc jp pop dec mov xor insb loop je dec aas sub or (bad) ja ffreep je sub mov mov mov mov jns mov sar icebp xor xor es into je mov mov cmp or cmp xchg xor ja rorb adc cmp jae iret mov adc xchg add ja cmp jb cwtl scas jne add cmp sub sub call dec push cmp jae pop ljmp mov inc and js or mov xor rorb add mov xor (bad) decl mov mov mov jne add mov xchg dec cld xor add xchg ja cmp jb adc decl and jmp cmp jb pop mov xor out mov push and sbb cmp xor imul cmp sub xchg or movsb mov and sarl or add mov mov nop dec gs jae aaa cmp push xor add bound out adc jmp lahf es mov mov into jno fsub push addb add push push xor hlt pop add incl cmpb add mov mov mov mov add cmp ja cmp je sub ret cmp hlt or push cmp decb call fild popl orb ds icebp test je dec lsl insb lea mov cmp je ja cmp ja cmpb inc add mov test lea jno rol dec push xchg sbb push push add pusha xor (bad) lcall aas push in sbb mov mov inc je lock mov or adcl push (bad) aas loopne adc or mov mov movb and xor in cmp testb inc xlat inc cmp xlat or in sub repz push cmp adc cs xlat push cmp jo js push add (bad) jg clc mov pop sbb in xchg add test or add les lea push mov dec inc or in add test mov jg jmp or and push or inc adc mov fs mov insb inc sub fs movl lahf inc mov jnp adc adc sbb testb test je (bad) sbb call daa xchg adc xchg pop and mov cltd mov mov (bad) insl in stos cmpsb or nop pop inc inc cmp sbb sub je in sub sbb loope mov push into nop push out push test mov mov or sbb jo and push outsb aas and add dec mov ret rcll lock and sbb adc push in cld stos popa into sbb inc push inc out sbb push clc push fdivr pop (bad) (bad) decl inc lea or inc and mov shll das inc and aas mov je aad mov xor test je test cld out divb test je mov dec sbb dec push push call xchg jne dec mov mov ja cmp sbb test jne jmp mov mov out adc cmp push ds lret in or je cmpsb aam out (bad) sub add cmc aaa std or add je add sbb xchg mov sarb mov mov push mov xchg and or xor fild (bad) cld sub je mov cmp je adc mov adc mov (bad) jne cmc (bad) lret sbb pop jmp pop pop ret imul fild sub and add mov shrb jne (bad) ds nop xor dec push cmp test add push icebp xor mov jno xchg or sarb (bad) popa lret pop jp cltd loopne jmp pop lahf mov test push mov sbb data16 arpl test add push or ret pop ds in call pop lock fldl and lret xor xor inc inc insb imulb dec and push les add xchg adc push push inc lret and and or orl mov jae sub js out sbb inc repnz push adc jo lock daa pushf pop mov (bad) test call xor call push mov ret cld pop push push out jle lock mov in xchg aad cmpsb lahf fmuls jne inc fs mov dec pusha add lods inc add in or sbb pushf add sbb je add xor jno sub test (bad) jg lahf push jne sbb dec pusha mov mov xor cld add xor or packsswb movsb or xor mov dec jne in dec mov mov mov fcomip fistpll mov cmp ja cmp jae adc inc out loop lods pop aaa xor fsubr bound outsb loopne (bad) pushl test inc sub dec sub inc cmp ja or add movb and mov push add clc into inc adc push test js insb nop mov cmp push jl sbb inc mov clc (bad) fbld jns mov xor xor or jne fisttpl fisttpl pop rdmsr loopne and ja test pop xchg adcl inc sbb add inc jo call cmp out (bad) cmovne and adc sti push and xor cmp in push and pop sbb mov and push fist (bad) sub daa (bad) push xor (bad) mov xor cmp mov xlat or adc inc push xchg mov inc push cmpsb mov adc pop or test xor mov and add scas lret enter cli xchg pop and jb fcoms add faddl push lds sub jmp or mov popa pop (bad) adc pusha cs test add mov dec cmp push nop and call test call add xor (bad) or cmp mov (bad) fidiv pusha outsb xor adc mov loopne add push sti test clc (bad) decl jbe call inc sbb ret loope xor sub xchg add and add mov cmpsb cmp call mov je icebp out jmp or into push and sub inc dec sbb sbb dec pop das mov mov lret test xchg aam lret lcall arpl or adc enter das or xor or pop mov inc and jae sbb or cltd push jae ja test add loope ret pop mov mov clts add enter xor pop sbb mov inc ja (bad) in test or loop jne cld orl (bad) je adc das and xlat fmull rorb inc sbb jmp add (bad) push insl jo pop jmp pop add cmpb inc inc add xor dec inc lock int3 adc add rclb pop push ret decl or jmp (bad) call lea cmp jbe cmp jbe add xchg jb mov rorb adc adc pushf addl shrb movzbl mov ret popl push ret mov ret xor std out mov cmpb rclb stos ja je and xor fwait sbb sbb shrb dec nop xor or loope lahf jne cmpl push add ja lahf rcrb mov sbb sbb pop je cwtl add ja cmp mov je mov and sub mov test je adc xchg call add or inc push pop cltd or add test mov mov and xor dec and sub or clc inc xchg sbb lock fadds add and mov inc xor push dec inc popf sti das and out (bad) pop or adc test je sbbl adc iret cmp add adc or daa ja fisttpll jae adc xor sbbb je pop cmpl je out mov dec xlat xor call jmp js rorb pop jo push ljmp jg mov cli mov adc cmp in addl insb pusha setbe (bad) es mov xor lret or mov push add push cmpb add cmc or call adc cmp inc cmp mov lahf and orl inc ror hlt cltd lds mov mov jmp inc nop inc (bad) jbe es jne sub call (bad) aas push fistp and mov lea (bad) and and out push xor mov dec add cmpl std ljmp mov cmp dec add loopne adc pusha fsubrp addl mov je mov stos (bad) inc inc xor call pop fs insl and mov sbb push jp add sbb shll xchg add mov pop mov lea mov call mov je push (bad) mov adc lods test jne loop mov jle movzbl in jne mov sub stos pop xor ja jmp inc adc add call mov ret jl mov mov or rclb add test adc add pop loope or sub mov pop and aas mov mov lret sub push add add sbb out jle inc or jne or syscall or and push sbb jmp sbb pop cmpb push out push mov cld push (bad) jp mov and mov orb inc jmp jne aad pop add add cld loope inc or test xchg and add cmpl add movl inc mov push add test (bad) mov in (bad) jg (bad) sub mov mov (bad) cli (bad) test je sbb sbb test les push fstl jge mov push cmpl or xor loope (bad) (bad) andl (bad) (bad) aaa push mov test jg ret out stos lcall jp xchg xchg jge les jg sub ja gs outsb test fs les pop orl in sbb and or jne roll mov mov jmp leave xlat orl adc pop pop mov call jge inc cmp je aas sbb sub (bad) jmp pushf pop inc je addr16 jg xchg cli jbe add pop scas and mov and xorb dec arpl inc jl pop push inc sbb icebp xor adc cmpsb mov inc add mov repz or inc jge les add inc xchg mov rol add fidivrl test scas jmp into mov rorl std int mov dec jne (bad) jmp ja out pop out jg out inc add mov pop jne push sbb jnp jl movsl pop adc sbb mov popf cmp test mov add scas pop add inc inc mov mov insb lret bound pop (bad) or test test rolb mov mov xchg inc mov iret push push dec inc test dec je sti sldt call out mov and aas mov test dec inc sarl sub clc xchg and jl add inc leave xor mov xor jne inc pop pop add (bad) cwtl mov xor jmp mov pop xor icebp test mov fcomip incl mov mov or je cmp jne stos inc daa dec test sbb jo test inc test xor pop outsb ja push jmp pop adc xchg (bad) (bad) ljmp mov cmp je xor sti sub call enter rcrb lret lret mov (bad) mov pop mov xor or iret call or jecxz in push scas or pop mov je sbb dec adc push push int3 sbb inc das aas add fs out sti adc sub push sbb cmp or loop test std (bad) jmp aaa and shr icebp cld fwait sub xchg clc (bad) (bad) jmp mov cmp aas stos push dec sbb cmpsb or pusha aad jb inc cmp in inc popf jmp jle je loope loope sbb push cmp jbe mov aam frstor es lock mov loope std je std pop repnz and ss arpl sub jno cli pop jno jo loope push call pusha (bad) inc and aam push dec cld out mov jg jne cmp je call out shl divb (bad) lds mov push jle lock int inc and mov inc jl cli inc les push nop movl inc out dec popf jmp sub inc test test arpl test or inc mov inc js loopne cmp push add stc movl or (bad) int3 add or mov sub mov and jge movl movl mov jmp dec js jne xor xor or je dec pop mov rol push mov mov cmp aas add repnz ja jb fistpll enter pop sub mov sbb or rorb or add call mov cmp (bad) lock test test inc js push jl inc cmp icebp push pushf push ja aaa scas adc test loopne test nop xor mov outsl sbb adc push loopne shrb mov repnz xor out (bad) insl jne leave xchg rcll and jecxz push scas (bad) leave and push lods cmp fwait out adc cmp xchg cli pop cmp je add les call loope cmp test lahf xchg leave add (bad) je popa mul add rorl (bad) out push (bad) or pop adc add pop cmp je cmp jge (bad) decl test setne test jne jmp add adc sar jg sbb inc lds jnp and cmp jbe outsl ljmp (bad) ja sub movb and leave xor pushl movb mov je dec adc jno push jns je mov movl movl add jne sbb subb notb fadd out cmp add and jnp js add jmp sti dec mov (bad) jmp mov mov push ljmp nop test jne cmp jg pop test dec add loope cmp cmove add push test jne xor cmpb cmpsb and loopne imul jecxz mov add mov mov ret std jne or rolb notl pop aad jmp stos aam pop and pop jae add (bad) pop inc sub add aaa mov das rcll and aam pushf ror adc cli out adcb (bad) aas add popf mov loopne add jmp loopne test mov jmp (bad) xlat pop pop cmc incl clc add into flds xchg call (bad) dec je dec push je add jae inc mov stos ljmp ja add add fadds mov add sbb addr16 sub cmp add out sbb or nop mov push loopne test lahf mov push push mov push add mov (bad) pushf add (bad) sti add popf repz inc loop xor imul loopne pop adc (bad) mov pop cmp jne and sbb mov ret xlat and jmp sahf cmp lds addr16 aam ljmp inc cmpsb cmpsb fidivr clc stos add (bad) sti add jmp adc pop cld or icebp data16 mov xor inc std adc in mov xor loop or lret and ja add jmp sub punpckhdq sub ret (bad) add lods out (bad) incl cwtl out fstpl add test scas lcall stos in xor jg rorl test inc sbb js nop xor lea sbb int3 add jns rcrb rclb add (bad) jg mov mov test je mov and pop test (bad) lcall cli add adc cmp jb cmp ja jge sarb cli jb repz jp xor pop xchg in add xchg inc add jl sbb jl pop (bad) jle aam sub adc push pop mov test and mov push loop addl cmpsl test sbb inc ljmp daa outsb (bad) xchg addr16 adc push test pinsrw xlat sub mov aad xor add cld adc ret add cli and fdivl shrb (bad) sbb mov mov andl lea pop pop lock lahf mov repnz jmp jmp leave push xchg lcall xchg loope cltd cmpsl sbb jb xor insb clc in (bad) decl sub cs xor push cmp jmp dec out mov and es or pop ds push sbb sub in sbb je add cltd jge add ljmp fisubrl cli cmpb je jmp fucomip ljmp jne cmp ja cmp mov lock ljmp xor xchg shrl mov push sub test je (bad) imul jbe movzbl seta cmp je xor iret ficom pop lcall fstpl das cmp jbe das cmpb jne cmp jbe (bad) fisttp mov inc fidivl cmp (bad) mov out adc push dec test je popa or push mov insl call mov push sub pusha loop sub pop add pusha or push (bad) movsl fdivrp jg lcall outsb add xor test je pop popa stos mov add inc or cli fdivrp push push mov lcall imul (bad) ljmp cmpsb dec mov aad jne adc mov in mov out leave push jo mov jnp ds jmp (bad) and cmpb sub jmp mov pop mov push cmp inc sub shll shrb cwtl push inc pop ds mov call mov mov test jne ljmp out add pushf jecxz addr16 pop call push mov add pop movl in call addr16 jb and adc and adc push cmp imul test je or cmp add sbb jne dec mov xchg xor insl adc dec inc dec cmp mov call jae inc adc cwtl mov or (bad) jnp popf out mov insb push cmovbe jmp fimul add daa sbb pusha cmc outsl inc cltd add shrl sti jg ret push jg aam jmp jno jg aas mov sbb and add or je mov lea scas mov or mov idivl inc jmp xor mov mov xor pop cmpb dec and stos cmpsl out scas scas cmp mov test push incb das aam cmp je mov cmpsl ds sbbl enter push push adc test mov cld les iret add les add (bad) fldln2 jno jo jecxz (bad) mov mov inc inc sbb fdivrp pop or jb cmp jae incl ja cmp std (bad) cmp ja cs les add roll mov outsb xchg mov jge mov dec shlb and out xchg xchg pop loopne mov repz and sub or xor repz (bad) icebp sbb imul jne or mov inc sub or lahf in sbb jmp sub xchg jb sub (bad) ret dec inc outsb xchg (bad) jmp rorl insb loopne mov pop adc and or mov pop scas sub test cmp emms cmp addr16 mov dec or or sbb ficom cld out pop fs jmp insb dec add int3 pop cmp jmp loopne xchg je and push and xor push add ljmp and sbb ljmp or xor jp cmp jne dec inc jmp adc mov (bad) decl add neg mov sbb fdivrs xchg sbb or ret mov xchg data16 lock lret jns push loopne pop jp xchg cmp fidivr add mov xor xchg adc cmp jb jl enter lock inc sar xchg xchg sub sub xlat mov fmuls add (bad) sbb jno dec data16 add jmp loopne pushf mov nop add test insl es push jne inc mov or xorb jmp pop push dec mov (bad) clc lcall clc pushl imul lods jb pop pop mov mov or jne out mov or push je movl mov dec call les aam push adc sub mov mov mov xchg xor aas lea inc mov jmp jmp mov out aas je fmull pop hlt scas sub (bad) push adc add cmp mov cmp cmp hlt push aas or in aaa aad mov dec xchg rcll fisttp cmp test pop aaa jbe sub pop inc jl or mov sub add test movzbl mov inc add jle jmp out mov sti add test jnp add out ja,pt js adc sti add mov mov adc es sti add idivl dec insb es pop pop dec out cmp je or cltd orb jbe mov je aad std out jae es cmp je lahf mov adc sti or test test or mov sti es pop cmp lahf mov inc or and es jne ja cmp je mov add loope cmp je loopne or or mov pop cmp pop dec out or or iret push es push cmp je cwtl es mov cmc es cmp add test mov sub in call (bad) cmp mov cmpsl aaa cmp ja cmp movsb (bad) fsubrl cmp jne cmp jne mov dec or cmp or push jg jb and push jo add stos mov test and pavgb cmpsb idivl add movzbl cmp add nop out pop mov sub repz and test or inc loopne jb test icebp (bad) ljmp loop dec outsl faddl adc call (bad) fidiv and jmp mov jmp and inc add or fstpl mov adc xchg or and adc in mov or repz (bad) fdivrp inc or inc and out or jne jmp xor inc and nop call aas jp (bad) jne (bad) je icebp jae lock jne xchg testb popa xor adc cmp aam ja ret sub int3 add ds sarl adc popf les cmp mov jno jle sbb gs cmp fcom adc hlt lret (bad) xor out cmp dec das xor cmp push es push fsubrs mov sub es or test cmp jg rolb incl xchg add cmovg xorb mov fdivs or daa xlat xchg mov lcall pop mov movl mov lock inc jb sbb loop (bad) decl cltd add adc add mov jmp ds jmp inc sbb push cwtl push pop notb pop or and pop fxch ret or mov lock fwait push aaa xorl mov jmp ja jmp test jae mov jmp por ret and mov lret jmp movzbl push push (bad) fbstp or cmp jb mov orl and cmpsb call add call xchg cmpps jmp popa test es or cmpsb push adc gs mov loope add jmp (bad) push jmp mov push test into cmc adc ljmp jl jmp pop addr16 fildl aam jmp out pop mov leave jmp and adc lds adc mov inc mov push jmp adc inc jmp push jmp xchg push jmp jbe mov jmp fcmovbe test jbe mov or or xor add or push pop js lret loop sbb sub mov int3 inc add cmp pop add add js or adc push add sahf xorb xchg mov (bad) je add jmp xor mov push mov adc outsl (bad) mov cltd sub mov ljmp inc adc mov lret call or pushf pop sahf sbb addl cmp xchg add ljmp fldl repnz and add shrb mov mov repz roll sub cmpsl ljmp (bad) or loope xor test call mov and mov call adc jp add aas andl (bad) mov add inc and inc jae aaa mov loop arpl cmc mov sub sbb iret fisttp ja push inc mov xchg mov cmpsb dec inc or test je cmp mov cmpb gs xchg fucomp xor xchg cmp stos jb sbb adc inc add jmp pusha fildll mov sbb mov inc pusha xor pop add xor dec repz loope inc andl (bad) pop icebp (bad) nop daa loop out cs hlt fs jne mov sbb call rorb cmp xchg push call clc dec les (bad) fucomip jo add pop rcrl mov inc insb or shr addl inc adc dec jne sub orl inc rcl cmpsb addl cmp pushf out das and add shrl test push and in test das inc and mov aam mov pop call mov xor dec mov inc adc sub js xchg (bad) je mov mov sub pop adc adc test pusha mov push (bad) jg xor push add imul adc mov mov add cmp je cmp je mov lea cmp jne leave add mov adc cmp cmpb je inc test ret fucomip sbb inc push je mov inc and cmp andl (bad) mov sub mov cmpb je movb push fdivr add jo sub sub xor subl adc cmpb jne and xlat jmp mov sbb xor dec sbb (bad) xor mov daa push add pop pop jmp xchg sbb mov in rclb pop cmp cli aas in or push jl jle dec push push dec lock dec cmp loopne incl inc maxps inc movzbl xchg adc cmp je cmp jne in dec call addb or out and mov inc add mov test mov sbb (bad) (bad) push or aam movl inc call fcompl sbb pop pop ret inc mov mov jle xchg (bad) aaa inc sbb dec inc sbb js xchg dec or xor push sub decb mov cmpb jne push addr16 ds or push in loopne stos out call pusha outsb aaa pusha sahf sbb inc pop ds nop call jge hlt mov jne xor call and mov mov jmp push lcall mov lea cmp mov mov mov loop ljmp cmp mov sbb outsl ret les add add push push lea adc mov add sbb sbb jo mov sub cmpb fs outsl mov movb call pop decl mov je mov orl test mov pushl js add (bad) mov add adcb (bad) mov mov or or test pop xchg dec lds add test mov mov mov scas and add pop sbb xorl decl (bad) mov jne xor add and (bad) push and xor (bad) adc lahf sbb mov mov addb scas das ret pop dec xor push mov sbb and cmpsl (bad) fild mov or mov push orb pop loopne push push cltd xchg and and mov mov (bad) dec add cwtl mov mov sbb jae mov add stos and adc push (bad) dec adc sarb sub or jg pop sbb mov je out lock loopne ja add add pop or jb jecxz add icebp into pop adc jo or inc ja mov subl in je loopne cmp adc decl sub sbb (bad) andps jno inc out mov call xor je mov test sub mov cmovs pop cli and and inc dec sti lcall jne cltd es push sbb fisttp test je mov push adc pop loope dec push adc add adc sti in cmc xor in adc ds aad call jne sbb jmp das jne jge xchg scas cmp test and movsb cmp cmpsl dec lds pop and add adc orb sbbb call shrl popa loopne cmp movntq mov add test in adc out ja rcll lea call inc movsl (bad) jg je mov jg cmp invd pop (bad) xchg jmp arpl mov lea mov mov clc add xorps je sbb xor push outsb stc push jne add pop loope sbb (bad) mov add jmp cli mov add shr mov mov jge loopne orl cwtl jmp fildll neg or mov inc cmp mov inc jo nop push je mov pop mov pop hlt sbb ret das or orl push jne decl loopne mov push sbb jmp fisttp je add sbb movsb sbb into icebp adc push sub jle dec subb call lret ljmp mov jp (bad) call stc jo push adc es xchg pop dec adc cs in mov mov lea ljmp mov xor xor (bad) ljmp inc insb jo ficomp cmp cmp (bad) movsb (bad) or decb cmp ja js adc test je test ja sub add ja add push lock dec add (bad) sbb inc mov scas test rcll jnp jo syscall sub rcrb scas fimul dec jmp lods jmp adc (bad) jo rclb push cmp or inc test push add faddl mov xor push push out push push add jno fsubr aas cmp imul call inc and or xchg data16 ja pop dec sbb aas aaa or pop lea ficom imul and clc adc cmp testl fwait out inc and outsl into push or fsubrl mov call dec dec clc dec (bad) sbb jbe lock dec jmp lcall xor repz test and shll mov sbb sbb enter xor int sti push cmpsb push cld xor push cmpl (bad) loopne rcrb push xor nop jmp clc jo je pop inc add ret and out negb inc sbb or ret in push sbb xchg sub xor add mov lods and cli call jle and popa std outsb loope test jne jmp mov add sbbb and mov call mov mov fisttpl mov pop std fs add rcrl push and jmp mov sbb in push adc fadds jle sub pop xor pop and das test mov jne fidivrl xchg mov mov cmpb inc out dec push lahf mov ret icebp pop adc and inc fsubl xor jne xor jmp sub xchg ret cmp sbb pop adc (bad) xchg inc jb call cmp es adc lahf and push add pop bound cmc decl test jne mov inc loope dec in pop mov add cmp jb lock push lock cmovp mov fisub jnp pop mov sub dec or xor add or lea and out sub test pop or inc adc incb push push decb mov mov mov je adc sub sub push jno jnp pop scas outsb jecxz mov pop add jb push mov mov sub inc xor sbb mov adc mov jnp xor aas call cltd and or add mov mov mov pop mov or sbb pushf sti scas mov sbb ret push add push xor inc inc mov cmp mov dec mov movl dec call mov jbe mov subl add xchg and lea or push jl inc push in call aam cmpsb (bad) aas mov mov call mov je pop loop and sbb jne lret jb and or cmp (bad) in jb ljmp cmp call mov sbb test je mov (bad) je or mov mov fidiv mov jmp cmpsl dec insl inc sub getsec mov ret lcall or pop inc mov sub push and ds dec mov mov pusha jae pop mov and sbb sub sbb adc inc les roll sbb les call aam and sbb in add sub xchg jp and inc jne sbb cmp jae test jne imul pusha negl cwtl cmp sbb jle test sub xchg push pop cmp je adc pushf cmp sub rcrl mov add adc out mov pop or add lahf xor jb adc add mov or arpl cmpb push and jg and cmp inc jne (bad) rorb movb add cmp dec adc inc add test mov mov cmc (bad) xor mov jle testb add test test scas orb adc xchg inc adc mov test stos mov je (bad) and add ja push or out mov mov movl ss sub mov mov daa pextrw push mov or (bad) mov xchg dec add xchg scas pshufw sbb into jne adc xchg push mov les pop pop pop jmp sbb mov sar inc add mov xor inc add aam movb add mov fstl popf mov movzbl mov jmp pop jae daa test or sbb test inc in jle les or cmp outsl loopne mov call inc xor dec push and and fstpt mov push add mov ja test mov or jbe mov jmp or ret (bad) xor inc sub lahf adc inc or bswap or or add stos jns adc in jno out add and pop push pop dec and mov dec mov call and fsubr loop add pusha dec sub mov fdivrs gs inc and jmp add popf and rolb and xor and add (bad) xor add les push cmpsb loop fmuls mov mov je movzbl pushl rorb mov ljmp push cmove add sbb incl or pop inc pop das test sub mov leave imul adc clc sbb xor xchg (bad) int add repz sub jg test test jl repnz cli iret xchg test mov add hlt jg test mov add push sbb sbb fildll add pushl arpl mov push lret setle mov andl mov test je mov xor div imul cmpsb add mov je (bad) pushl lea lea jmp es xor add sub (bad) (bad) jle lea mov jb cmp jne inc jge ret mov jne sub adc sub les xor (bad) inc mov movzbl mov push adc scas pop mov or fisubrl sbb xchg mov jne jmp inc mov mov and mov (bad) in jne mov and and pop sbb add adc mov push xor fisubrl push nop movl aas aaa sarl xchg subl add call mov sub pop mov aas mov or inc pusha and dec je lds add mov call jns mov pusha mov push add popf mov loopne std push jbe jp add or mov sbb test pop mov aad rorb sub mov pop or inc and scas stos push pop dec mov (bad) decl pop adc sbb outsl ja lock test jne mov mov out mov (bad) xor sbb inc or sbb sbb das mov leave popa add aam inc sbb jle popa jnp mov call mov cmpsl inc orl roll add jle jmp fmull aas das xor add xor dec xor daa push xor call stos pusha test adc or mov dec adc ja add movsb bound lds fistpll push add je sbb inc pop jmp je dec test or popf imul repz (bad) decl mov mov mov mov mov in sub push mov adc cmp mov je lea inc popf pop out pop lods inc cld sbb mov stos test je sbb or ljmp inc adc push je cld sub sbb or push inc jmp test (bad) test call push test (bad) xor lahf mov lret rorl xchg lcall ja add inc test fimull test rorb and or cmp ss mov clc jl cmp fcompl add pusha add add mov xchg and bndldx subl test mov add or mov jno fwait jle in mov cmp sub pusha mov into add dec mov and dec cmp es cwtl or and pop (bad) rorl xchg icebp (bad) (bad) call mov jmp rcll mov cmp xor rcll scas (bad) call call movl mov push andb and cld int xor and fdivl and fdivrp (bad) sbb jo mov mov jmp jmp les jo icebp cmpl loope dec mov fwait cmp pop add inc mov xchg and mov adc aam daa in xorl add jmp push jg subb inc add push les lret std inc fmuls test sub mov test (bad) (bad) repnz or or xchg and mull dec and sbb outsb or test pop in xchg jge mov and xor jbe mov sbb pop decl cli xchg sub sub movb add add fwait out and or shll add mov jne (bad) popf mov and movzbl push in sbb sbb arpl xor jae xor les jo iret outsb bound ljmp loop adc and sbb inc and dec iret push test lcall inc adc inc pushf leave je cmp and cmp mov jge push mov cmpb ljmp mov jmp inc inc adc jne lock sub decl pop and ljmp sub push xchg sbb jmp (bad) push aaa jo out sub test cmpb add test cmovb insl or test stos jg push and cmp jne push dec jmp xchg movsb push jmp push sbb push add mov add bt and adc push jg pop and out jl adc fstl es dec (bad) adcl jbe jg xchg iret out cmp dec and lret mov call mov jmp push mov add mov mov test dec test shrl test push xor (bad) pop mov call clc sbb icebp mov dec sbb in movzbl loop jg add repz inc fucom mov call loop jnp insl in mov test jle pusha call cmp (bad) in jmp dec rclb in loop sqrtps or xchg or mov les adc loopne hlt xchg in sbb aam mov test test mov daa jp and insb loop decb fsubs loopne je cmp jge mov call push aaa add mov divl pusha or sbb (bad) ljmp fs jne cmp je cmp mov (bad) neg dec mov cmp jbe out inc mov (bad) and lret or mov test lock xchg adc adc ret sbb push aas sbb jle add stos pop push ret pop or imul int es xchg inc add subl clc cmpsb or call or push mov imull adc shrb les mov inc fild lahf sbb test jne mov aaa pushf mov or ret call inc and jne jne ret ds je das xor test jle mov jno push sub add cli in ja ret ja push push push cmp dec andb cmc and cmp test push arpl movl mov (bad) pop fsubl jne lods cmp lahf jbe add or and mov jne icebp mov je imul mov cld jmp mov sar imul sar sub das xor and popa dec add adc sbb cmp clc mov push aam test loopne loop or push xchg popa mulb add ret je jge test jg test test and in pop cltd in or jge (bad) mov xor xchg xor add push mov mov xchg iret sbb clc pusha cltd faddl push adc adc adc (bad) out dec aas add movb sbb mov sbb out add push iret inc sub (bad) jae xor add mov add and (bad) (bad) inc and shl or or and inc dec add mov pop xor test dec jo (bad) dec cli and fistp stc jae push jg add pop push cmp inc gs xor adc mov psrad clc es jmp les adc mov jg lods sti or scas jmp int3 mov sbb jg cwtl jnp mov and xchg sbb roll sarl sbb or pop shlb sbb popa inc test or aam pop insl movsb xchg testb mov xor or adc or fwait adc cmp lock (bad) adc adc adc jecxz add pop add je fwait cli je movzbl mov add jb call (bad) xor xchg jg lret bound mov or shrb dec push scas cmp sbb aad pop add inc jl (bad) fucom dec movsb lds sub je cmova and (bad) push sub and add jle push mov mov add jae push push shl popa ja dec jmp xchg jge fmuls cmp add cmp in adc inc and int xor xchg inc test iret dec adc test and push sbb out lea test pop das pushf jmp ja cmp jne je loopne mov xor push or sbb or mov std cmp jmp xchg test cltd inc jmp mov add add inc xor lods pop mov and sbb js clc add test mov mov mov push in mov cmp dec cmp and stos xchg lret and add enter shld popl add xchg (bad) lds push ret and pop or test and xchg adc in pop in push mov es add add outsl ret call jmp inc (bad) fist sub jo mov jo jbe inc pop dec scas or xchg cmp fmull inc jmp fwait sub dec jns or or dec pop ret mov push add mov and mov mov or cld xor inc decl das test je icebp addr16 or and aaa or stc mov xor fnstenv movb (bad) dec jmp sbb ret mov sub mov and inc xchg mov stos xor or pop je les inc or ds cmpsb jle ret or jne aad adc jne loop inc loopne push xor je sbb or or mov outsl pop push xchg pop shll and (bad) push jl scas je mov test add das mov add mov mov adc test mov dec sbb sbb pop les lods cmp jg (bad) mov je inc rorb test dec dec inc test push push rol or addr16 daa or (bad) outsl call inc push pop popa hlt or mov (bad) pop add xchg mov test mov ffreep pop push repz mov pop xchg add and ret xchg xchg adc (bad) sbb xchg dec test loop cli cmp sbb (bad) xor call fwait loopne es mov or and sub fsubs test pop cmp sbb adc push push cmp dec and test je in je pusha or or pop mov jmp std add xor mov jmp pop pop xchg xor in add daa or ss sub decl jp inc add or jmp mov nop leave pop aam xchg adc cwtl add aas or pop adc cmp add adc xchg sub xchg add int3 mov sub inc and add inc nop sub jmp in mov pop sub add fimull sub jg cli adc in add cwtl xor mull int3 insb dec mov lahf shll sbb clc lcall lods lcall inc addl push cltd and daa out rcrl inc aas mov leave stos cwtl (bad) mov stos mov nop push add orb out add pop and mov xchg out loope loop jg and movsl or lcall jb (bad) jne mov xor or xor jmp clc mov push sub push or into mov mov sbb or xor insb mov or sbb jnp xchg cmp jg inc jne mov mull pop and mov sub cmp jle xchg stos loop jmp mov ljmp pop fwait in push dec inc dec aas test (bad) ljmp call cmp jg sub mov mov mov pop imul mov mov xchg dec inc jne mov lret adc cmp outsl or aaa cmp aam call cmp push inc fistpll and pcmpeqw push std jg das (bad) mov call inc cmpsb pusha mov push push jp ret movzbl sub mov mov fist stos bound test add or and aaa mov jne mov leave dec clc ja mov push inc rorb test popa mov addb and jb inc inc mov mov outsl loop clc je cmpb push test je inc sar xor cmp jne jmp jb (bad) fsts cmp jne cmp je loope sub mov add push pop sbb call xor test mov adc pop test sbb and mov imul xchg loopne sar cli add dec les inc adc sbb mov mov add dec lea cwtl push push ss cvtpi2ps or jmp pop add mov add call shll add adcl js and rolb lds outsl int add xchg fisttpll nop js or jecxz sub les call or add and sub addb mov dec call add and push stos test jg add test je xor sbb adc sbbl cmp pusha ljmp out shrb inc xor dec imul mov nop or rcrb inc add push fdivr gs sbb push xchg or jne out adc adc cmp mov or out sbb out xor mov dec and inc or sub add or adc add test pop test sub mov stos xchg add fmuls clc xchg adc mov lock xor pop pop loope mov pop ret mov call test inc push mov out add test mov xchg mov pop call inc lock xor popa add mov inc xor imul je orb jmp mov push jbe and xor dec jmp xchg mov push add mov daa fcompl push daa cmp fdivl mov call and jmp jo iret xor cmp lea cmp jbe sub lea mov sub push icebp ja ja lea lea or xor push js ljmp cmp (bad) inc je mov rorl sbb jne adc scas cmp nop mov cmp aas add sub roll add mov shl push jmp or popf jmp pop add and dec jmp dec push vpcomub jmp out xlat (bad) call adc daa popf jne mov jne mov pop fucomi xlat das fsubr sbb lock ss or ret push mov call fsubl stos pushf and or mov xor flds mov (bad) cmp out sbb popf adc jne nop jne mov pusha and jb cwtl mov add jnp out es (bad) (bad) jmp fistpll add add sarb xchg mov add inc (bad) sahf xchg mov in or arpl scas add push rolb push mov add rorb (bad) lcall push std sub sub sbb (bad) mov add mov psubsb ret test andl test int3 mov int3 out aas add enter mov incl mov xchg add cmp (bad) (bad) frstor inc add sti cmp movb cmpl xchg xchg pop inc xor mov stc (bad) dec add test inc adc add xor lahf fwait xor cmp fdivl sbb fisubr and dec mov and push (bad) call mov cmp test out mov je das xchg sbb fbld mov xor sbbl pop aad rolb pop cwtl loopne or icebp ret push out fs xchg test mov dec and add sbb test adc mov loop push js push adc xor adc mov xchg ljmp xchg imul add ret pop add cmpl test xchg test icebp sbb call les mov (bad) sbb jg call cmpl mov sbb test pop addr16 mov push sbb xor test inc lret je adc and fwait divb sbb lcall jne mov jle scas add lea call mov (bad) into inc mov (bad) imul decl xchg addl out jmp ret scas and add lods jmp push mov je inc sub insl cmovo call cli pushl and aam aad rorl sub test sbb fnsave cmp call ja add call js jbe punpckhwd int adc js sub popa push je and and roll (bad) jge xor loopne iret (bad) out mov (bad) jmp lock mov (bad) inc jmp push iret add mov xor mov sub xorb shlb mov test mov sub mov loope xor jle sbb inc adc pop push popa dec add adc cmp shl cmp mov jmp movb and jmp cmpsb cli inc xor outsl sub pop inc fcomps loope jl lods and scas decl pop or test jne mov mov or std pop rolb in je sub (bad) cmp cmp adc and jno cli add and cmp pand fldl add add setae inc and lods gs add lock jle ljmp jno cld xchg mov mov mov (bad) ds lcall pop sbb mov pop mov fwait xchg inc insb inc push adc pop repz adc xlat lods add push mov inc add (bad) adc ret push inc sub pop stos daa pop (bad) rclb movl inc pop mov ja or enter xor and cmp lret mov lock push (bad) (bad) in or and and cmovne push jl inc mov xchg (bad) fldl fadd adcl cmc call cld aas push mov or je ss mov icebp cmp mov repnz mov mul shr cmp (bad) ret out mov stos pop lea push pop je test inc jp,pn cmp subl test ja xchg push test jne js jle dec mov (bad) lea pop mov out xchg jno push sbb jle call popa in add pop or addl punpcklbw pop bnd xor lds ffree addr16 cmp cwtl xor test insb (bad) call xor test inc iret adc add and into and xor ljmp lea and and add stos and inc in mov sbb mov add movsb (bad) call lret clc orl or sbb inc faddl and inc pop mov cmp fnstenv rorb xor adc adc loopne sbb mov push fnsave mov adc push scas jg je pop or jmp mov mov ret or xor and sti addl push nop or mov and cmp jbe sbb std pop call and sub (bad) sbb ret call test rcll mov loopne movsb sub test stos xlat pop xor div imul rclb cmpsl cld cmp xchg sub mov mov add dec ja mov (bad) pop add inc push sbb (bad) or inc lea mov stos mov icebp push pop (bad) (bad) xor cmp ret stos jle pop mov push jg jp add cmp xlat mov addl shlb mov inc out lcall imul fiadd lds aas (bad) incl jmp out mov add scas test mov mov (bad) or pusha add fs add add pop scas mov xchg dec mov pop lods testb push xor cmp add add sbbb mov test xor je and mov ret subb and jo cld mov test cmp add jmp mov push xor pop or mov nop or inc cmp fwait jo lea mov cmpsb adc fnstenv test jg test aas (bad) adc inc mov and jmp add in mov loope push das call outsb dec shlb adc mov inc pop adc sub pop in push jnp push dec orl sti add xchg (bad) jnp adc dec cmpsb dec add test pop aad loopne add sar roll es js xchg mov je lea and mov or mov mov je (bad) lret xor or in mov dec scas es ret jge pop bound in inc dec xor mov mov in (bad) into adc push addr16 or scas mov adc sub and xchg xor add adc je inc jo (bad) mov add fcomps and call scas lds shrl inc push (bad) fisttpll inc mov loopne sbb int push jecxz sbb and jo inc inc scas cs pushf imul lret in jo or je aaa call loop enter xlat clc lahf mov loopne and popf and xor loopne or dec jp mov int3 pop sbb call add lods xchg mov cmp les cmp test add dec negl push jo js popf cmp cld mov je es loope inc sub je mov mov sbb xor loope pop xor icebp inc sbbb sub push adc or jmp and mov xor sti mov movzwl data16 mov xor cmc add bnd mov aas jecxz and mov and mov test mov ljmp cmp inc inc add pusha or bound in fs and jbe sidtl jo add jb jp fs adc dec clc in add add pop loope (bad) or imul sub add pop jmp clc sub sbb adc mov lcall (bad) (bad) jmp in xor push rclb fistl or popl push cmpl leave push inc push jg mov cmp syscall mov add jg sahf pop jb push (bad) mov test jg push ret js or xchg ret pop adc jg or pop (bad) popf add jo cmpsl add add xor jg or and lret inc adcl jp jg mov sub push xor jg and pusha je xor les stos jg or and or sbb lcall pop jg inc test mov inc push test push jge push or push sub test and and cmpl or test or adc add out lods sbb xor cmp int dec and sbb cltd fnstsw xchg push sbb and loopne ljmp cwtl int jp nop mov das mov lods test pop or addl inc adc jg dec and nop push popa xchg jg and jg dec adc test xchg dec gs and gs (bad) cmp or ljmp test pusha (bad) jo push ja data16 push (bad) stos adc in or aad out adc push xor fwait lret adc mov lret and cmpsl xchg inc aam xchg push scas (bad) out push cmp call rol jbe or inc stos sbb mov mov bound test fwait mov add sub stos inc jmp push das das xchg add outsl addl xchg adc movl ljmp jle out or aad rclb push scas and cmp xchg mov jmp adc jge loope or jge mov adc mov xor mov sub sbb add out in stos pop jge jecxz lret push push xchg xchg push jge push sbb in iret xchg adc (bad) sbb lock cmp lea adc cmp add add cmove add pop aas fs (bad) or dec fs je mov js arpl cld test je imul adc xor lsl add xchg enter jne pop lea popa je add (bad) (bad) jmp lahf jg inc std xor jmp inc and mov adc or cwtl cwtl pop mov or pop push add push loop xchg and mov in cli mov mov movl add add and das inc push inc add daa and jne stos (bad) mov add add je shr cmp jne lock loopne call push ret mov jb xchg imul sbbl mov pop jmp mov aas add dec add out or (bad) adc rcrb pop inc and push arpl add inc mov lock add push pop adc add adc ret pop pop xchg aas mov sbb imulb pop add add aas daa xor out les (bad) aaa adc out stos inc and movzbl test je (bad) (bad) ljmp xchg inc lea lea mov nop cmp je add mov mov cvtpi2ps add jne mov sub movb call iret lea loope cmp cwtl (bad) jle adc je aas mov jmp cmp sbb fiaddl out xor lods jg (bad) pusha cmpsb decl mov and fwait (bad) push test xchg lds add cmpb lock fcompl and and (bad) inc cmp mov call pandn pop pop movb lea inc and je jg (bad) jae ffreep push dec pop jmp dec xlat (bad) and mov (bad) aas mov aam inc roll in mov or stos call dec lret and sbb and ja inc iret pop inc mov or and mov roll and push and in mov pop (bad) and add push jg mov cmpb mov mov (bad) pop add (bad) mov and fistp (bad) jnp mov add out lock add (bad) mov inc jno pop mov xchg test sub rcll pop or mov jge je out popa mov popa sbb and loope xor call jbe into pop sbb jb test into add add inc mov adc pop fsubs lea jb sbb add (bad) jb test fisttp addl jo mov sti or jge je and mov pop mov je cmp roll mov adc inc mov jae adc or stos lea push cmc pop or xor inc mov fimull sub mov sub or in adc dec jge jmp inc add popf xchg jmp cmp push (bad) iret scas das push add jg test je mov test je enter cltd bound popf or adc adc or (bad) and sbb mov push or outsl xor add and mov ret sbb xorb mov sub fist sbb or push pop and jne ljmp dec rorl jb cltd sti (bad) (bad) cmp ja cmpl je mov add pop pop ret xor add or add (bad) mov pop add pop data16 adc insl outsb cli dec lea (bad) (bad) out pop and (bad) jne mov cmp ja cmp jb mov and dec and ja mov mov sub lea cmp je cmp outsl loopne (bad) inc jbe mov fldl std jb cmp jb mov push cwtl jle add (bad) iret jne mov cmpsb sub pop std lea cmp jae adc decl iret inc mov sbb (bad) mov add jle sar or ret mov inc jae sub add (bad) mov movsb arpl mov sub call das rolb pop and (bad) mov test ret je test jne mov (bad) fwait mov xlat mov jb sbb sub rolb loopne mov pop hlt call jg or jae mov sub add cld or inc call fmuls test scas std arpl fucomp enter jmp jae jb add xor sbb add (bad) decl stos sti pop daa sbb add xchg add adc cmp pushf mov mov mov adc ja add mov ja call mov adc push repz neg iret sub jne sbb imul jbe sub jle xchg mov jle mov out sub jg outsl cmp add sub push std pop adc push in nop nop popw mov mov mov sbb pop aaa jno jl jmp cwtl scas es (bad) jg jp add mov mov cmp jbe mov cmp jne mov jmp jle add je movzbl cmp je lea mov add lahf std and lea ja lea jmp xor cmpb inc fild fimul xchg rcrb pop adc (bad) jmp jo int sbb divb mov movzbl test lcall lds lea add and xor lea lea (bad) out sti and cmp stc je mov movzbl xchg fnstenv mov xor cmp loop sbb dec xor sub jmp aas les mov push into testb movsl movzbl test pop pop data16 lock push xor xor and xor into sbb adc cwtl dec adc jmp sbb cmp sete cmp pop jne cmp je sarb and jmp icebp call mov lea cmp jbe mov cmp jne fbld add add sti mov je lea movzbl ficom jnp (bad) xor icebp xor rorb and clc lock imul (bad) jg jg mov mov cmp je cmp jne jbe (bad) sbb mov add (bad) push out test lock aam in (bad) jne mov (bad) ja cmp jne jmp ja out mov call cmp nop mov je je mov pop adc mov xor lea arpl jmp adc pop (bad) xor xor mov mov xor add (bad) (bad) mov add xor or in lret sar add adc out (bad) fnop movzbl cmp cmp jb or cmpl cmp aaa xchg aam mov mov mov inc adc add lock test pushl fsubr ret add ret test je movzbl xor lea cmp or arpl fnstenv (bad) jns or mov add (bad) dec decb mul add mov mov je sbb movzbl inc dec mov jmp test (bad) mov (bad) negb es sub sbb and call inc test je sbb dec std pop loope mov pop ss mov xor orl mov shl add lea jbe lea cmp ja lea and or test pcmpeqd sub cmp jbe repz hlt cmp jmp push test and mov push or outsl push lahf inc loopne ret pushl sub test jle mov push ret lea jmp mov lahf loop and sbb lret push (bad) jg inc jg divb jmp lea cmp (bad) pushl movzbl ja shl lods add cmp je movzbl lea cmp jbe lea (bad) dec mov rorb sbb or dec test ret or adc push push pop cmp test je mov pop mov rcrl mov add leave icebp xchg fisttp jmp movsb iret add out mov mov adc sub aas xor out add mov lea mov cmp jbe sti ja cld mov ja sub movzbl fcos pcmpeqd bound inc dec clc in sbb pmulhuw jmp mov push mov movzbl jmp (bad) lea push jbe aaa xor mov and or pop add les sub popf or cmp into inc and in cmp stos (bad) fwait xchg add test jl sub test push and xor incb pop lea mov clc mov sub add sbb rolb inc and je outsb add rorb outsl mov mov lea or test outsb test into rcrl jbe pop push sbb sub jbe xor inc jg inc sbb add sub add sub and loopne inc les inc sahf mov mov sbb call mov add movsl jg cmp push pop add cli push daa add scas arpl aad test jle sub inc add cli jnp pusha aam push mov cli (bad) (bad) fldl pusha je add cmp ja cld decb (bad) fildl adc aaa mov repz add cli push or jne jecxz in rorl cmp shrl popl cli test fldl test outsl mov cli in mov cli or jle int test sub data16 cmp mov decl pushf mov dec cmp inc mov add mov cli adc jb orb pop cmp rorl cli push push adc jbe mov jae mov or jbe std out aam jne repz cmp mov and mov cmp pusha (bad) cmp cmp jle or (bad) cmp mov xchg xchg repz sbb sti movsb cmp and dec cmp sbb outsb xor inc mov jg xchg mov push je test cmp jnp enter sub addr16 popl push insb or (bad) pop xorl dec (bad) (bad) cmc cmp (bad) ja xchg lea cmp (bad) sahf movsb test and sbb or jg pushf cmp out out xor mov std (bad) incl ljmp mov push test push fwait outsb xor (bad) mov insl or psubq (bad) mov dec inc add dec mov dec cmp push test (bad) (bad) decl sbb xor jbe mov repnz test cli jo les inc fs out ret sbb test push lock jae mov push adc ret test aas push sbb sbb sbb aas lahf arpl ss lret jno adc scas mov xor adc jg jecxz mov pushf sub cmp pop out mov in cmpsb (bad) or into jg fildll adc cld (bad) sti adc in ret (bad) les aas cmp mov sub mov pop mov cmp mov jle test in push addb adc adc mov cmp mov adc push sbb aaa ss jg aas or mov mov mov add fnop dec fist sbb lods je cmp repz mov es mov ret sbbl movd (bad) (bad) pcmpgtb mov jae movq sbbl cmp psubusw loope call or and push dec (bad) xchg mov pop fdivs push cs add xchg stc in or mov loop fstp (bad) std and je (bad) adc andl jl mov adc cmp mov iret dec cmp test mov rcll adc push mov cmp (bad) divl scas leave push testl adc ss test out jae adc push mov aaa loop test cmp mov xlat adc cld out xchg out test cmp jne repz insb adc insl adc (bad) sahf lods test outsl sbb xor je sbb adc push cmp adc je out (bad) pop test and adc sbb sub outsl push push cs sub fcomip cmp test mov adcb test xor popf (bad) icebp lock lcall sbb or dec test repz outsb test cmp xchg add lock mov pusha cmpsb pusha push out rorb jle bswap push int3 jno cmp xor sbb arpl or hlt lret mov mov aas aas aam pop data16 mov test imul pop hlt sbb pop sub mov sub push and jg pushl jmp mov mov test sbb xor cltd and ret add cltd mov xorps aam rorb call cmp je (bad) xor mov add add mov sbb add xor mov test cmc inc stc psubb mov out insl cmpsb adc fsubs mov in sub mov cmp adc (bad) jne mov mov inc and je and pop sub mov inc cmpl mov mov push je (bad) xchg xlat xchg loopne or cmp dec test rolb adc test les js (bad) (bad) hlt xor pop adc jge dec adc inc inc mov pop (bad) stos sarb add cmp and (bad) je (bad) pop push lods jp jne lock frstor jo cmp (bad) stc or and xor push in add sahf sbb pop xchg xor adc sub scas add scas lcall int3 push inc xor fwait std inc je mov repz sub cld mov idivb aam sub frstor push aas inc jne or dec rcrl mov jge popf pop adc adc push and jbe xchg rorb out ja adc rcrb ffreep or dec and mov mov mov (bad) loope loopne popl out int3 add loope stos xchg and sub (bad) (bad) (bad) decl (bad) pushl or dec and jae test je cmp je xor jmp cmp mov ja call je lea cmp jne add mov mov test je mov add sbb cmpsl add out add movsb rcrb aaa inc aam jae pop adc mov les add arpl or rorb jmp xor or mov fwait incl or ret into pop add push cmp jae stos cmp sbb cmpsb add and testb aaa mov sbb sbb mov ret in push jg cmpl xchg dec adc add mov fmuls inc and xorl add mov push sbb mov and add inc ljmp pop ret cmovl pop and mov add and mov inc jg mov pop dec adc (bad) cli ja mov sarl aam loopne jg in mov pop cmovns add inc add lret insb pxor adc lods int3 xor xor pop stc daa iret sbb je inc inc fdiv adc adc rolb jbe push jmp dec mov sub push decl sarb rolb mov outsl js adc outsl sub ret decl out jecxz ret xchg and push cmpb je cmpb aas adc sbb call cmc push cmp and or sub mov jmp xchg add cmp dec addr16 or in cmp mov addr16 cmp xor call popf je ret mov cmpsb or cwtl call (bad) std pop push mov mov adc or pop int inc mov mov (bad) and jmp mov push push mov call push cmpsb sub mov subl dec clc dec test bound je flds pop sub and test sbb pop fisttp popa ss pop lock jne and or dec and popa jbe mov adc in adc andl out jo ret sub xchg or or sbb mov xor inc xor jmp xorb pop push mov call cmp (bad) sub mov push cmpsb inc add lret orl push pop frstor in sub mov mov je mov mov xchg adc in mov xor rcrl push xor shr fildll sub jno and (bad) (bad) mov test jne jmp mov test je mov orl push mov jmp bound (bad) or sbb pop clc add xor jae xor or mov into adc and divb pusha lcall adc jmp (bad) outsb or pop push incl es add add lcall jmp nop scas je and sub cmp outsl loopne out push cmpb je bound inc push in pop cmp pop cmp hlt gs adc dec loope cmp cmp adc (bad) incl movsb loope (bad) aas cmp stos xchg jns push in sub add (bad) pop cmp jo mov je movl dec push paddd mov lea cmp incb jl sub push add add mov mov aaa inc and test and mov jnp fstpl std popa nop repz xor pop mov jmp imul leave add push pusha lea pop pop movsb xor jmp sub ffreep mov mov test jne repz fist push mov fisttp clc (bad) fiaddl mov xor mov add mov mov lods sbb fcmove sbb mov das cmpsb push dec push mov fistl in cltd jae and outsb lcall pop xchg je inc movl (bad) outsl jle in inc adc push adc mov mov mov mov mov cmpsl (bad) and out seto ljmp (bad) sti sbb inc test js sarl test pcmpeqb (bad) sti cld out add adc lock mov es jae jbe cmp jne lock sub call or movsb das lods stc and stos xor mov je inc push mov mov add inc lahf ds test xor movl clc pushl mov mov movl jl aaa mov jp lock in insb add jmp scas lahf fsubl sahf fcoml xchg cmp call mov sub popa es test stos pop orl inc outsb call fcoms pusha (bad) movsb and dec mov xor push mov (bad) jne test cwtl or lret rcll call xor (bad) cli inc rorl (bad) lea shlb push add inc add call aad cmp (bad) je jge pop add imul das cmp cmp adc sbb fsubr jg or inc adc push add inc rclb movsb pop cmp pusha adc inc fcompl (bad) xor shr rolb sbb in cwtl iret scas xor stos pop rcll dec out pop push push and rolb ret dec out mov js jo pcmpgtb outsl lret movsb add add mov pop push mov push pop mov add add push adc and aas js aaa cmp and lods xor mov inc adc cmp add (bad) (bad) (bad) and mov add rolb add lods lcall mov lcall xor scas pop sub jp xor lods mov jp popa sub mov sbb pop add cli loopne jae nopl lock dec add (bad) imul fistp sbb adc ret je mov cld add pop mov mov (bad) clc jae adc out test push inc sbb jl add sub inc mov inc jo dec inc rclb ror stc (bad) xchg mov jbe xchg lods call jmp ss (bad) ljmp scas xchg or push sbb jg xor push xchg mov das imul in cmp xor jae movl mov (bad) lods inc mov push mov push rcr scas loope je packsswb and mov outsb je adc call je mov movl mov mov jmp pop int3 cmp or idiv adc add imul jb sub andl or inc cmp inc adc xchg xor and shr daa aas mov mov mov ds push jg mov inc mov mov add pop mov fsubrs xchg xor pop mov pushf mov pop shl fsubl adc (bad) pop out lahf fldl lea add sti int3 inc mov inc pop xor inc pop push jne dec or ja test mov mov push das mov mov mov stc mov or call mov gs or rclb aas outsl sub in pop sbb nop scas pop and lea inc push and sahf iret incb jo adc nop jmp nop cmpsb jle in pop fsubrs aam push mov inc call cli fstpl pop sub lea test es add inc call leave pop pop jmp and or inc or xchg and jge mov movl jge inc mov cmp pop jmp cli xor sub pop or iret or cmc cmpsb fcom je (bad) (bad) cmc (bad) cmp or call adc lea dec fs cmp jne insb add call add jmp cli nop stos mov (bad) push xchg mov add call pushf mov inc cmp jne lea sbb loopne sub mov jae add push adc fistpll xor divb rorb cwtl jae movl ja out ret adc sbb cmp jne xor add stos stos mov sub ja outsl jno or divb lea and push and xchg (bad) add sarb mov rep (bad) mul subb movl push pusha movl sbb movl mov sbb leave or xlat fldcw and add or adc cmp mov xor mov dec inc add dec or inc or mov imul add dec add jnp mov lea cld mov push fiadd jg or decl jne or bound mov in outsb je jle std pushl push xor out add ljmp jns clc inc mov mov and inc stos mov sub (bad) inc call cmp movzbl je dec jne mov mov movsb shl mov movzbl add add xchg pusha mov lock add lea xchg lea test rorb pushl mov inc cmp jne add add cmp loopne int3 (bad) test cmpb jmp inc mov push add inc and inc pusha add loope inc jnp call movb jmp push mov movl jo jo mov pop adc cld or call or jle add pop push shr cmp lret call push jbe inc pop loopne jo je push clc cs jne test push inc dec and mov xorl out jbe (bad) xor push (bad) jae xor jle scas or xor call inc arpl jbe sub aaa sub cmp jnp add inc push push pop dec jne mov lods cmp jle cmp add ljmp sbb jl,pt push or mov dec push mov (bad) pusha mov push aad push mov or mov jne aaa mov and xchg or (bad) adc pop mov xor add push add add add add rorb mov xchg loopne outsl add loop lret (bad) (bad) cmp outsl cli in ret nop nop loop in adc add add pushf pop xor mov loopne loop push popf call setne insb push mov add (bad) call push mov mov mov mov cpuid mov mov mov mov pop pop out out loopne outsl pop adc xor hlt mov mov into ret add fcmovnbe dec mov adc mov mov adc cmpsb lock pushl loope push rorb leave xorps xorps xorps xorps xorps xorps jg adc addps addps addps addps invd sub lcall addps addps addps pop cmp test mov bound mov or cs pop mov pusha loopne cmp xchg jle adc rclb sbb xchg pop ljmp xchg and fs pusha pushw mov cmpsl cmp sub sbb sub sbb and or movb test and rolb orb sub cmp outsl ret lds sbb adc mov and add mov loope out cmp adc or pop cmp mov jbe mov das incb mov or cmp fcompl mov adc loopne out push mov je shl mov fdivs icebp mov out outsl loop clc je or pop movzbl jbe cmpsl (bad) fisttp push adc outsb add cmc mov jle adcl add clc mov std push adc adc (bad) adc sbb sub mov cli jmp (bad) jbe push les pop pop std push mov mov mov xor cmp (bad) rep mov test js mov stc shr dec incl out movb faddl incl je sarb movl jne roll cmpb and and rorb push in es fldenv push cmp and cld sbb test movl cmpb es test es outsb sbb cltd iret es es out (bad) cwtl es aad push jmp test ss cmp mov (bad) pop mov jns cmp data16 es adc es ret jno push leave sbb out es int3 adc (bad) je es ds xor xor add es xchg and dec out and fwait int3 inc (bad) es je int xor or ret add sbbl mov hlt bound xor or or add mov jae es je ds adc dec lock (bad) es and dec xchg cltd add xor cmp xor xor es fwait bound es push cmp xchg loope movsb push dec push ret data16 testl popf loope loope es ret es es or sub dec leave or mov pop es out pop xchg dec pop xchg in imul mov xchg xchg int3 adc and xchg sbb or rorb push nop dec jo (bad) push or leave pop inc shlb loop push insb jbe data16 cld dec lds mov je,pt in xor es nop or xchg es pop inc xor jae (bad) and or rolb sub inc je add add insb ret insb cltd stos or ret pusha addr16 push ret and dec sbb fwait cli lock je cmpl mov jl jne (bad) movsb popa xchg ds add mov fmul or pandn add mov mov jne movl or les mov sbb call lea sub mov xchg pop or je xor and cli add add xchg mov shl add rep jmp adc add movl inc out mov movl (bad) mov mov xchg cmovp mov mov adc aad add and (bad) adc push and leave xor xor xor mov mov mov mov mov cmpl (bad) call mov mov cmpl xchg jae ret inc pop lret hlt cmp enter cmp mov rcll push ret movsl mov call lods push cmpl add xchg inc out arpl (bad) add call addl sub out ja loop xor call arpl aas movl add pop imul and je and (bad) lcall stos jb rolb (bad) jne cmp jne test push sar movl incb sete jae ret fstpl rclb cmp and out add jne cmp jne je (bad) jmp or popf sti ja add (bad) adc mov shr lea fwait push out pop call orl push sarb inc imul mov bswap ja ljmp cltd idiv cmpl je ja pop add or adc rcr je add jmp mov add adc insl mov jl dec icebp jmp mov pushf mov jmp mov mov jo loopne test mov push insl mov mov std or adc test jmp mov or xchg cmc pusha aaa cmp pop ret (bad) decb xor xlat into pushl icebp cvtpi2ps popa ret mov fs inc adc mov pop les sbb jmp movzwl cli inc jne inc ja sbb cltd mov ljmp test cmove frstor in add or lret decl mov push jbe mov shr inc dec adc dec ss push mov sub aaa test cli addr16 ret jg movb sub das nop dec lea xor mov add xor mov aam inc int3 jg cmpsb test or call mov je out (bad) out out mov and rclb clc pusha jne das loopne rclb sbb pushl add push mov dec mov cmp je mov out fcomip xlat or inc cmp cmove jmp adc (bad) cmp jecxz mov cmp je cmp je cmp jne bound mov sbb sub jae mov or movsb xchg dec repz js mov mov outsl mov or mov adc subl aam rcll mov cmp or jmp mov sbb push daa fnop sbb rcrl sti jne mov in out mov mov out pop jmp sbb call loop sti sbb int3 jle add adc rclb push add adc sbb call inc inc les mov fstpt jne lods cli ja pop dec (bad) (bad) fistp rolb or inc jmp cmp jne or jl mov testl add out dec mov jmp cmpl out aas out jg jmp in adc lahf ret adc push std jge sti jmp cmp test and testl mov loop outsb clc push xor ret jmp mov mov inc je xorl test jg mov mov mov mov add and mov cmpb pop sbb aas adc xchg xchg push fiaddl test je add mov xchg add mov cmpl aad mov sti mov push mov test mov xchg clc mov fcompl xchg sbb mov push inc xchg and or jbe mov mov stc (bad) (bad) (bad) mov dec loopne or inc cmp jne sbbl jne pop adc sbb add nop test je mov (bad) decl pusha cmp je cmp jne movsbl sub cmp pop inc lcall cmp dec ret push cmp mov push add jle decl or test je pop je inc jmp stos (bad) lcall push and or add adc out es jbe jmp add push ret push incl dec push mov inc cmp jge in (bad) (bad) decl shl test je mov mov movb inc jmp xor dec mov mov in or out decl jne repnz mov not lea sbb xor repnz not add dec in cmp jge movsbl imul clc (bad) fild je mov xor cmp jge movsbl push mov add call je dec call (bad) jmp mov decl aad add push inc inc jmp xor addl add push add jle mov and and and aam cmc xchg mov mov repz or xor adc sbb ret pop (bad) out jle decb inc or push adc push adc enter pushl enter xchg rorl rol xchg cmp aad shrl and bsf enter jmp cli dec (bad) (bad) pushl mov ja jmp test je mov cmp jge mov cmp incl add pop add lds xchg adc mov pushl xor jg push (bad) sub mov cmp (bad) decl mov cmp je cmp mov je movsl pop ret mov xlat ja mov je or pop in jle mov jb fsubrs call jae xchg add mov call inc xor xlat lea pop push mov push mov push mov cmpl ja mov testl shlb test jne test (bad) jg invd jmp mov cmpl jne addl or mov cmp addl jmp pusha ret mov cmp mov leave je cmp (bad) jg cs sbb cmpb dec xchg cwtl loop adc sub mov push clc or xchg inc addl jo movb jmp aas cmp mov mov cli mov movzbl je cmp add xor (bad) or lahf lahf lea cmp jbe sar out call setbe cmp sete or movzbl rorl es cmp (bad) aas push add mov movsbl cmp je lea (bad) cmp aaa pop xor add xor xchg lea mov or idivb mov shlb jbe mov scas mov popl cwtl (bad) decl sub adc pop aad dec mov adc clc pop jmp out icebp (bad) jg sub push mov cmp jge mov add add clc xchg add inc rcll inc (bad) (bad) es inc or mov or ret aaa cld mov and je lea call add (bad) (bad) js mov cmpb jne pop mov pop ret xchg xor jmp mov pop (bad) mov push jne mov and mov call js addl push xchg adc dec pushf lret add aad mov add negl inc or add iret xor or and sbb ret out je add mov dec inc into mov mov std (bad) (bad) ljmp clc mov cmp jg mov add testb mov je cmpb je mov push les or and cmp dec dec je cmp jg pop inc rcrl outsl mov mov push jge cmpb add inc adc je out xor (bad) or mov std push loope (bad) jmp add cmp inc mov aas mov xchg jmp outsl cmpl jne movzbl fucomp clc or mov or jmp es and or jne adc test add xor js dec es jg inc xor mov dec xor mov pop adc mov mov pop or movl movl jo test add dec out pusha jg sar sub inc or cmp inc inc or ja outsl ljmp mov mov sti call mov (bad) mov je mov push adc dec sub lock mov mov cmp lea mov mov cmpb cmp add push add inc pop paddd std mov cmp in pop and xchg mov out mov addl cwtl push cli (bad) mov rorb and setne sbb and outsl pusha push push mov add mov inc lret mov or cmp je sbb add dec add cmp incl je mov cmp jne mov mov mov test je xor cmp (bad) call inc mov mov test jne int orl sarb jge xor inc adc adc loop adc addl pop or mov push adc inc rdpmc mov mov mov call enter push and push ret hlt and lea mov mov cmp fwait clc xor pop (bad) xor incl jmp cmp lea cmp ja sbb ja cmpb je lea dec adc pop (bad) (bad) out fmull aad pop mov lods lea leave jmp loope (bad) lret (bad) add jmp nop outsb sbb jmp outsl rol pop mov mov jmp pop sbb inc lock jno jle push pop add cmpsb mov mov mov inc mov and ss cmp xor dec pop pop je add jecxz outsl cli mov lea xchg cmpb je insl mov std mov sarb pop ret add adc call std cs sbb clc or mov scas or xlat mov mov or rcrb push psrlw or xchg sbb (bad) pushl (bad) or jne cmp je xor cmp jne movzbl pop lea cmp jne dec decl xchg roll or leave mov int3 jb rcr mov push (bad) hlt (bad) aaa mov cmpl jne cmp jg jmp or test je sbb ljmp ret jne mov push and mov mov sbb xchg out add (bad) aaa js jmp jg ret movl nop pop pop loope incl cmp push (bad) adc xor ret or cmp cmp jno add cld push fdivs add pop lahf hlt sbb call lods loop jo mov lahf arpl mov orl sbb cs and inc add jae imul ja outsb push and mov mov mov pop daa sbb (bad) jg push inc add mov add add movb add xor cli mov test jne nop or stos sti jbe add pop cli inc mov pop call loop (bad) je mov jmp pop addl loop movsb stos fisubr pusha clc and das sub cmp jne cmp adc loope ja adc cmp jne lea aaa dec clc je pushl mov pop jne add adc outsb inc mov jmp scas jnp sub adc pop loop jne and adc (bad) mov subb ret push movsb dec aam sbb lret and xlat aas (bad) jae jo mov cld lea jmp out fbstp cmp loop sbb or mov loope call cmp je mov (bad) lahf popa adc bound sbb mov dec and clc and mov pop xchg jle cmp les sub mov movl add and les push pop cmp je jae test faddp ja cmp jne (bad) jo test mov fildl sbb dec test loopne mov xor test setle clc xor test (bad) cmp push es je push add jmp xor sub ja stos mov sub cmpb je test aaa loopne mov add inc std aaa in xor jecxz and test mov je in rcrb and mov inc cmp jne push pop and fiadd add sti call sbb movzbl cmp je or test xor fldl pop in scas pop sarl jno repz or xor add (bad) and bndstx mov and divb fidivrl or or jae (bad) mov sub xor lea push cmp fistp mov rorb cli cmp jge sti clc pop gs xchg gs adc add repz inc or inc (bad) mov mov lea add fdivl movsl sub je dec roll xchg jle pop cmp je add ja call sub dec imul bound inc sbb sbb sub mov cmp je aas jae les test push inc add test cmc je cmp daa mov (bad) lock std adc inc movl je push mov imul insb jne addr16 jb dec mov mov icebp mov mov adc push cmc cmp and adc jmp out call mov inc pop push (bad) ja cmp je mov in mov and call fiadd rorl or call sub adc sarl pushf aad cmp fcomps and ss adc jmp lahf andl cmc or lret xchg lahf in sbb mov jne xor leave rol sub je jle push shl mov dec fnsave aas xor and orl mov jg test jns insb pop push loope push pop sub inc (bad) mov decb jmp das mov mov add push mov jp jecxz jge jmp cmp cmovo in pusha pop into xchg inc or jmp rolb leave lret rclb xchg dec movnti es mov pop sub js inc call cs mov das add pop sub je pop jmp inc stos xlat aad jge pop imul xor test jbe xchg es mov arpl test inc cld cmpb jne js sbb sub add adc das sbb push adc or cmpsl dec js mov (bad) mov push and cmp and aaa xchg out dec sbb sbb xchg jno jp ljmp lcall jbe sub cmp ja sahf jle or ljmp jmp dec (bad) jmp pop and sbb jbe repz cmp add xchg mov adc in cmp pop push scas pop add xchg cmp xor sub mov dec xchg leave inc mov sbb jo mov add into mov dec imul push jmp or mov pushf sub in cmp cmp cmp in imul xor je test cmc js pop jl inc je sub or cwtl data16 iret mov mov bound add mov mov ret xchg rorb test mov sbb lret dec dec jge cmp or ret je or test ds outsl dec cmpb jne lea loope scas mov mov mov mov cmp jge leave push mov push jae adc push icebp add mov or cli je pop pop pop aaa test cmp inc inc cmp inc loop or mov call (bad) inc lods sub or cmp iret cmpsb into hlt pop leave je divb jl pop lcall in or jmp pop jl or xchg ja in sub sbb je inc jns adc les xchg and out pop inc scas or pop (bad) cld add test addr16 sub pop pop xor sub loope lahf jmp or sbb (bad) rcrl mov mov lret mov lea add lcall rorb pop xchg rorl lock movsb popa mov daa or or xor sbb call and ja test add xchg addl lods cmp sbbl es mov inc xor add mov jnp fsubr stos mov inc xor add dec xorb arpl xor mov fwait cmc jo mov sub inc xor fsubr mov ret negl mov jmp jg mov (bad) jmp add cmp ss out es adc aaa jne lcall movb jmp jae or or nop (bad) popa mov (bad) leave aad stc push fist int cmp mov add sbb movl sub dec inc test gs jmp jae jmp out out push adc je in add inc in fucomp add iret xor call jmp mov mov call mov or mov and out push sbb jb pop dec fcmovnbe jo push cmp je movl jo mov sar fdivs call test cmc (bad) out fwait mov imul fucomp and shr mov jmp jg inc add or jne (bad) fisttpl jmp xchg int3 dec ret xor sub call push add sbb push mov pop xchg cmpb leave scas mov push cmp fs jmp mov dec sbb je leave mov adc popa addr16 fcomps bound (bad) mov inc pop mov or fsubr xor (bad) arpl call bts es repz and pop (bad) push and cmc or or (bad) jmp daa mov enter cmp mov pop jae or andb fdivr (bad) scas (bad) mov push inc clc jp mov jno (bad) adc add not cmp or inc push and and sbb jnp subl xchg sub jbe sbb fmull aas jae jmp adc sbb or push (bad) cmp je jns shrl or decl cmp test or (bad) popa ds xor jle mov fsubr int mov movb aad dec sub mov mov push mov xchg pop pushl clc add popl ja fild jns stos test je mov data16 lret mov imul add enter inc je cmp je jle cmp jne outsl mov imul or inc out (bad) popf sti jmp adc xor cmp sub mov jmp cmp andl fwait pop js add movswl and xorl jae aad into sbb sbb pop xor in ret adc je or negb (bad) jmp fbstp jecxz push movzbl sub insl ja cmp push inc (bad) outsl add test inc or adc push ds je (bad) std mov cmp cmova mov rcll xor push lahf hlt cmc adc test add jae sub das and cmp je outsl clc nop out pop (bad) je jp cmc lahf jo je cmp mov jbe call mov sahf cmp je in mov mov loop push adc std inc sets jb lock (bad) fmuls call mov dec push push mov jbe,pn dec adc test bound cmp out fisttpl sbb les inc xchg pop incl negl call mov movzbl mov xchg nop dec pop aas test je cmp inc (bad) mov dec jl sbb or shr and add decl sbb xchg and cmp jne jg lock je ret stc sbb ret fbstp mov cmp loop xor sarb lret test jne add aad outsl and out pop push push mov (bad) aas mov test je mov cmp jge mov mov or inc and and adc insl (bad) testb push cwtl pusha loopne add fist sbb jne mov test jne fcmovnb mov movb ja repz inc and (bad) cli out ja inc mov mov fwait inc and mov xorl push pop std push adc leave adc or jb jecxz fwait sbb xor cmpb in xchg add cmp ljmp in movl push lds jmp iret pop call ljmp (bad) je cmp je cmp je pop add jne inc js sti dec add inc es inc sub add data16 mov movsl cltd lock and or cmp jmp fsubr adc lock or mov adc call add dec adc dec and add jge inc or add inc or xor jmp aam or lods jmp scas loope les fcmovb js mov repnz (bad) je add je jnp mov jmp jmp mov mov mov push mov sub aam dec mov pop mov lods inc or inc mov and lret push cmp test or test je adc or outsb loopne inc or test pop mov or cmp mov iret jo sub xchg jne movsbl cltd dec ja adc mov jmp xor (bad) push xor cmp inc inc adc ja sub stos or add mov lcall push loope cli add mov mov mov movsb out loop cmp push adc cmpsb pop in gs and outsl cmp into call jmp mov add inc inc shr out mov mov fnop (bad) lcall inc and je je cmp je lea mov or inc and jo inc out xor dec mov dec sbb out fsubr mov push out add jne mov lods mov pop gs bound cmp xchg stos subl jnp (bad) pop movb jae call cmove fsubr push sub aas jns aas fidivr push push or les add test or cld jg mov add ja movsl mov fwait in dec add out add cmp sahf fild pop scas pop addr16 cmp roll das outsb in fsubl in das mov and mov xchg std lea lea loopne fs lea repnz add (bad) daa dec inc push add dec mov xor fwait scas fist cmp leave out or ja or or sbb pusha incl call mov loope ja hlt (bad) decl or mov inc pop push popf faddl mov and dec js fild mov lea xor push jbe adc mov outsb pop aaa fsubr data16 mov lea (bad) pop je sub rcrb ljmp mov flds sar xor push or pop idiv (bad) jmp lea mov jg fild add je xor pop jmp xchg (bad) push push and pop push stos (bad) mov inc adc stc cmp jge rorl add fdivrp xchg mov mov je or lods jmp (bad) (bad) out dec dec dec add and jbe call sub fsubl imul jo es mov pop sbb icebp push imul adc test (bad) icebp mov addr16 stc fdivl cmpb orb pop mov inc xchg mov test test es add xor xchg jge cmpsb jle ret inc mov inc inc or dec add or cmpsb xchg ret sbb outsl or and ss cwtl loope xor lds cmp aam ss jmp push lock sub or or inc xor or (bad) sti in and or jnp inc rcr fwait jge je sbbb cmp vmovntdq dec and add nop mov stos mov adc decl out add movl dec sub movl xchg xor ret push or or jecxz dec push rcr mov sbb dec inc lock mov jae inc pop hlt andl sub rolb xchg or in jg sete xlat mov jmp or das lods mov aas adc inc adc adc sarl mov mov mov or gs (bad) ljmp jecxz mov fsubr add clc ja add lods enter out add nop xor jmp repz sti nop pop je sbb test jmp loopne push adc icebp in dec lret xor cwtl fldenv sbb or call pop jmp lds out (bad) push js push jmp sub imul scas sbb adc sbb lahf mov cmpl je push into mov imul xor pusha mov sub fwait pushf (bad) icebp mov push xor stos fcoms out in jbe call (bad) lods sbb ret xor mov outsl adc mov inc mov xchg out incb movb outsl fsubr popf ljmp adc out add scas cvtpi2ps (bad) loop cmp inc or jp inc sub add movb mov adc and (bad) repz inc aaa std push sub stos add sarl rol jecxz lea mov dec sar pop jle mov cmp jne cmp das adc cmp jne mov fildll inc or sti inc mov xor js mov fldpi test (bad) je pop decb dec lea cmp mov mov and jne outsl mov lea ja daa les rorl jb js lea push jecxz movsl fadds add js jle push clc add iret dec inc (bad) add mov or ja es cmp jne and jbe test or aas icebp xor mov xchg rorb jg jbe dec cmp test mov jne mov jnp out call cmp mov test jmp dec jg stos es pop push add add and ret or jne cmp mov lea sete test mov sbb je jmp iret mov mov rolb je mov mov mov pushl jnp mov inc mov or jne push je cmp je cmp jne jl incb cmpb je (bad) mov mov xor and mov sub cmp jne mov cmpl ja decl jne mov sub repz jmp std lcall (bad) fisttp (bad) sub cmp add mov sbb mov jbe push scas push fidiv leave subl fstpt sbb adc xchg cmpsb call mov mov inc and test adc push das mov jecxz inc (bad) pop addb fidivl and fmuls sbb mov xor adc jne idivl std or jne fsubrs mov mov mov aam or pop lods js out xchg pop add dec pop ficoml (bad) jmp incl xor cld loope sbb pop sbb push mov je cmp jmp nop or add xchg int3 (bad) jbe add testb jne lds (bad) (bad) mov (bad) je mov mov cmp je cmp pcmpeqb fldl jne movl and fadd add jg mov sti nop aas pop ja push call and lahf mov mov adc sarb xor jne (bad) jb int3 and scas in push scas or push imul sbb leave out mov jmp jg movl dec les (bad) pop sub mov dec mov comiss jmp add or addr16 test mov shl mov inc shrb imul andl out les jmp scas orl xor cmpb jne push dec loopne scas roll jne add mov mov xlat in mov mov jnp inc jne add jne fild stos aas push xor dec mov add aas sbb js mov lea movd (bad) xchg cmp into inc addr16 cmp (bad) test or inc (bad) icebp jecxz push cmp je dec cmp lea js test cmp je ficom das stos mov cmp je scas cmp jne push ljmp cmpsl (bad) mov shrl js mov mov jge (bad) nop lcall or inc aaa xor push inc lea lea sub into movzbl jmp in (bad) xlat inc iret test movzbl ds cmc movl jmp mov dec xor inc pop cld mov push adc push push xor cmpsb jne push sub push gs push fs and mov ja xor ds fdivs ret jne aam pcmpgtd roll jo sbb jmp ret pushl mov mov test jne mov add lret cmp je cmp movd loopne test dec nop add sbb jl shr (bad) sbb jmp mov sub je xor pmaxub aaa idiv and cwtl shr add cmp lea cmpsb mov xchg jb cmpsl push nopl sbb jne adc add mov add or pop imul or pop stc jmp or push or adc insl pop pop into sbb cltd insl jmp addr16 ja xchg jg jo adc and rcll mov fild pop dec mov cmp jne dec (bad) enter js test pop pusha cmp mov mov jl xchg cmp lahf cmpsb xor scas sarl pop scas add or push mov mov ja add mov test mov in bound jmp mov xor ret aad add jg mov sqrtps cld fild cmp je cmp je and call mov je and mov mov je mov test mov rorb jne test fdivrs hlt rorl push jns cmp jne sti jg in dec or pop lahf mov mov call repnz add mov push adc push jecxz aas stos outsl js mov cmp jne sub lcall or je xor mov push aaa xor rorl mov rorb repnz call clc and xchg cmp (bad) mov clc add jne test je pop or cmp mov bound mov sub or shrb loopne add es pop xchg xor lea mov lock dec cmp jne dec xchg or leave xchg add (bad) or mov mov jmp cmp je jb sub fs scas cmp jne aaa jb lret out xor iret or jne movntq and dec push cli popa loopne push xor js add ljmp je out nop push into inc icebp pusha sbb inc cmpsl stos xchg xchg or je mov outsl daa adc int3 jnp jmp popf inc or aad pusha mov mov dec inc cs jb dec cld fwait mov jne xor movzbl js add test lahf cmpb add cvtps2pd push je loope test mov imul shll sbb scas fsubrl inc mov jg adc and aas adc ja jb in je jg pop loopne divl mov dec cmp sub and sub adc or dec loopne add out fsubl jo mov je inc movb and adc sub mov add or mov add mov and inc lahf fsubr push and sub push lcall dec mov xor rorl xchg cltd outsb push push lods mov pop sahf lea jp lret out (bad) out jp nop mov cltd bound mov or (bad) (bad) mov inc mov adc push adc addr16 jbe hlt adc loopne dec jo dec jo movsb sbb (bad) jmp rol sub aaa mov js (bad) jb dec xor cmpb or dec nop into cmc xchg pop add jmp cmp or leave or sub adc int push sub daa clc push and sbb in adc adc mov je xor push (bad) aas fldpi adc push cmp je test je mov cmp jl inc jl add xor jmp shrb mov mov outsb dec cwtl dec inc bound mov add testl jmp inc xor jmp xor es adc test mov push test push mov adc mov nop mov cmpb cmp loop jne add call cld movzbl inc lds and paddusw xlat and fsubr lret test mov fisttp xlat lcall movzbl cmp jne lea loopne mov add sub mov ljmp add leave je lea jmp scas (bad) mov add pusha call jne sub mov cmp arpl aaa rorb lahf mov add mov aam (bad) mov addr16 je movmskps (bad) test mov mov mov cwtl js pop fsubr aam jae or test sub shlb pop je adc cmp push mov call int3 cmp jne sbb sub xchg leave jmp lea xor into dec add jmp cmp xchg dec adc jmp pusha and jmp push xchg pop rol shll icebp xor test je roll mov cmp jle xchg mov js push subl (bad) fist aas mov adc mov lea mov mov shrl call mov outsl mov xor enter decl dec ja fldl aam stos dec mov mov xlat aam fbld inc and jne cmpl je std ljmp shlb je cmp je cmp je mov mov jbe mov bound pop test sar cmp addl cwtl adc dec jecxz aas sub jns inc and mov mov mov push push dec adc mov inc (bad) and push cmp cld std add ljmp add mov add jbe mov js inc and cmpsb jmp stc cmp cmc (bad) insb fyl2xp1 mov push in cmp test sbb add cmp aad cmpsb loope mov fsubr iret or rolb test addr16 ret mov test sti sbb loope mov pop test jne ja xor cmp stos cld sbb sbb and cs sbb push add mov negl je and lea sbb add mov mov daa insb jmp in push or hlt jns stos mov pop je pop movzbl out leave mov in mov cmp mov sbb jbe xchg call rorl js out jo fild repnz bound popa fldenv cwtl jle push jne ret daa pop test add ret rorb push pop dec ficoml and and fs je,pt sbb scas in mov pop jno mov jne jne sub fstpt mov jne jb jo fstl outsb and pushf jo ror fdivrl popf dec push mov adc sbb jmp jo leave push or fwait inc iret jle insl sub dec or popa sub jle insl xlat xchg outsb aaa sarl add ss aam jl cmp nop add mov notl call mov add inc dec inc ret cmove mov add mulb incl je test mov repnz ret jg add imul adc sbbl incl mov repnz faddp push data16 jmp and jg pop push cmp cli call mov shrl dec and jmp jo nop aaa ret movsb push add mov xor ss or testb push adc xchg or add sub xchg ljmp cwtl mov mull loop add test bound clc mov mov movb dec sub out mov add je or test ljmp or aas cltd test mov (bad) dec xor outsl mov or cmp je sbb std stos adc das iret test xchg pop sbb push lock je ret or dec add call data16 push inc jo ja xchg das jnp,pt fidivl loope push aam fsubr test lret sub push sbb xchg loopne or push adc sub jne adc jle inc or pop (bad) xor loop pop dec push pusha sbb shl aad mov mov mov sahf dec mov je aam adc rolb sbb pop hlt or icebp daa xor aad cmpl mov mov dec daa pop mov arpl cmpsb je or fsubrl jbe orb jne mov mov mov (bad) std or movb jbe stos pop push adcb sbb push fdivs sbb or add cmp pop dec sub cmp call push jmp cmpw jne loopne flds dec add and mov repnz push rcl sbb and pop xor test mov add push sub push scas fiaddl js push sbb out fcmove mov mov inc xlat push add addr16 xlat pop cmp push mov ss inc pop jg and test jne test call and cmp addb cmp inc cmp das add in dec mov mov jnp outsl mov inc test std inc and btc ffreep test mov mov sub cmp ja loope rclb (bad) decl dec jmp mov mov sub cmp ja mov pusha idiv or stc add xchg sub cmp lea mov mov mov add fist jo or jne mov loopne mov cmpsb movl add mov mov loop mov es cmp cld add incl lods jne cmp je shl lea lea mov xor mov aas sub call cmp jne mov pop lea xor mov dec push imulb push push add xchg movb test jmp daa outsb negb push (bad) out adc fsubr insb cmp inc stos inc rorb and add inc scas dec scas inc xor lock testb inc cmpb mov inc jae or and jo out jne dec cmpsb add jo sub mov (bad) add xchg por jo ret add fisttpl jo mov or adc jmp rcr (bad) jo xchg add out push enter jo mov cmp xchg push and add jmp lods out add loope sbb in adc dec push ljmp test mov test push pop mov lret adc fnstsw es mov mov mov sbb test and das je dec mov mov rorl ljmp sbb pusha adc jmp leave add mov xor inc add stos or pop icebp push mov cmpl jne cmpl je test ljmp je adc or cmp inc jle or je,pt mov ds test movb fcmovnb xor mov add je add aad or cmp mov add cmp test jo jg jne in push xchg pop dec jo gs ja popf or pop jmp jo push pusha outsb mov push add sub jo cmp mov add push sub jne sbb adc cmp inc mov rcll cmp test xchg or test insb and add aas adcl (bad) jmp pop mov cli je leave sub or dec add or sbb sbb enter sbb jg (bad) mov fisubrl dec jge mov test or and sbb jle aad cmp flds mov test add sbb nop and lods sbb pop dec add inc cwtl and icebp mov ljmp mov mov mov outsb adc jno xor push fcmovb and mov pop mov nop jnp sbb cmp test cld mov adc jne mov cwtl push push pushf and and loop mov movsb in and in decl test sar add mov cmpl je mov loopne mov xor jge jne insl ret test mov mov dec inc add andb fbld and mov push mov aas mov int mov js mov data16 push sbb inc data16 in push add shlb mov jne pop out orl (bad) loop leave fisub mov or nop or mov and nop or pop adc mov dec stc pop sbb mov sbb xchg test je mov cmp inc lea ljmpw or push inc rcrb inc rorl add cmpl xchg inc clc lcall mov movzbl sub cmp ja hlt mov clc pushl cmp adc and jmp jne sub (bad) mov repnz (bad) pop adc lret flds and xchg adc lods and enter dec enter js pop test orb mov xchg cmpl mov pop jmp cwtl bound dec xchg lret je add (bad) (bad) jle jp cmp aaa stos movsl xchg mov inc divb call cwtl loope sbb in setns fcomps mov call mov nop add mov fcoml ret add cltd nop add adc sub and pop inc pop xlat into add jo out (bad) cmpsl or mov mov (bad) xor stos into add adcl push ss inc or gs adc add shrb call mov or dec jb stos jae fs push adc pop rorl xchg jmp add and push mov pop paddusb cmp add cmp (bad) mov push sub xorb push dec nopl or push add mov lahf fsubr mov and les pop leave xchg jb sbb or rcrb mov pop mov mov inc ljmp cmp test lods cmp out xchg jbe outsb pop mov or repz roll mov adc je divl iret xchg jmp or xor mov gs lds call leave jmp and sub mov je xchg test add mov xchg mov les mov sbb adc or fstpl xor jmp or jo xor and mov inc dec xchg shr loope mov in mov add cmp jmp adc xchg sbb popa fisubr js cmp dec and mov cwtl xor in (bad) jmp add cmp jbe mov movzbl sub cmp jle (bad) (bad) (bad) incl cmpb jne cmpb jne lea xor jmp movsbl sub shl adc add lds add cmp pop mov (bad) (bad) es decl ja sub outsl add inc jmp mov ret inc jb (bad) mov cmp or inc adc and out jg push pop mov (bad) pushl testb fmull or add add cld rol add jmp test jmp and repnz test mov adc addr16 xor and pop mov mov nop and mov test (bad) decl or fsubr inc and sbb (bad) push mov cmp hlt and dec xchg cmp push mov sub adc mov test and mov jbe sub dec inc or loopne mov add adc mov jecxz add or shl cmp je or cmp test cmp (bad) aaa sbb outsb movl or in sub fcomps inc push sub sbb ja inc nop call test sub or fs ficompl popf cmp sbb sbb icebp pavgw adc icebp out ja push xor sti gs jne mov cmpl jne or jne jne out or add je cmp jne clc adc mov loopne sub pushf xlat (bad) pusha aam rcrl pop mov dec or std iret cmp test out loopne (bad) jb ljmp xchg test or cmp jne sbb dec or xor jecxz (bad) and mov or sbb add movsb dec ja and inc add and cmp movsb xor loopne test push (bad) lahf pushf mov incl pop mov test push cmp mov imul fild and add test sbb push push leave lods and dec jmp mov cmpb jne mov ret aas add rcr adc pop sbb mov aaa mov or dec or jb (bad) mov mov mov ss or cli add pop dec inc xchg or lea add gs inc xor xlat loopne aam stc cmpl pop sub add jmp jns or mov dec outsl mov dec add or cli enter imul call jo decb (bad) cmp je push xchg mov pushl inc jne jl jbe test clc xchg pop cmp call in loopne pop push add pop pop mov loopne push xchg sbb imul or inc pop out out pop int3 stos cmpl or and sbb push sahf and (bad) adc and and test cmp incl setp ja sbb or cmp sbb test jnp mulb std (bad) jg loop add mov jmp adc and inc lock mov loop cmc arpl ret stos push movsl mov inc std push fwait sbb lds movl xor fwait and out ffree mov popa outsl sbb add jge aas pop and ja cmpsb mov arpl call (bad) ja inc and cmpl inc and std push lahf inc inc je and push push xor mov and cmp adc jne fldl aas in inc add sbb and xchg lods inc or fsubr leave lcall fsubrs clc xchg jbe jmp jbe mov dec fdivrp (bad) call es cmp inc orl add push jae inc leave inc sbb dec std pop add mov xchg adc aam mov or adcl dec xor jne idivb hlt add or call pop sbb aam xorl xchg adc jbe inc inc fild cmp je push add jle pop mov and push push daa sbb mov mov sbb clc pop and test jp inc and or (bad) jne jecxz mov inc jno inc outsl sbb orl cwtl fsubp jge mov pop lea mov (bad) mov lea sbb mov and das mov ss inc mov sbb inc inc sarb sbb pushl inc mov adc fcoms push ja call adc xchg jg repnz add and roll fldz dec and jne ficoml popf mov imul sbb xor sbb jg mov add mov inc cmp ds jne mov (bad) fild gs cmpl jne in scas loop push scas xchg jne jmp cmpl jg ret psubq add cmp je add jmp mov cld in icebp xchg loop mov call (bad) xor push sbb mov add sbb jmp bound call loopne add push mov lret pusha xchg into in dec xor sub ljmp (bad) decl adc and push jmp jb mov enter xlat push add adc jp mov cmpsl push icebp mov aas jmp sti jg or fmuls mov bound or mov dec movsl cmpl or iret push pop push test jle cmove jmp inc ret leave icebp (bad) ljmp or imul das mov outsl cmp adc not cmp adc test sub daa rol mov jecxz inc xchg adc clc loope,pn into sbb (bad) mov or clc jmp cmp jne cmp jne jnp inc add or and jne jmp push arpl jmp inc aaa add sub add jmp jae push adc sbb arpl jmp int3 jne loope roll push divl mov inc and pop push xorl lcall dec or cmpb jne gs lea addl test adc mov enter fisttpll cmp jmp or fs add cmp adc push iret insl sub movsb cld ret clc sbb or cmp jne cmp mov fiaddl ret aad and ja add je jmp mov mov dec jnp pushf movsb frstor in adc into adc xchg and jle pop outsb test rcl pop sbb int3 fmul mov sub fisttp inc or cmp je addl hlt outsl xor or mov call jmp cmp adc (bad) adc sti movsl xor mov or adc push add fist cmp cli (bad) daa ja sbb or sub andb jge jne xor rol dec add rcrb and push push ss xchg ret lcall jb jnp,pn mov cmp sbb (bad) xor jb pop dec popa icebp push or mov add pushf aam sbb shrl push add cmp ret cmp es jl fdiv fsubl sub push or repnz test inc ret faddp jmp inc cmp cmp incl cmp ja mov mov jmp das stos or sub push and and mov movsb stos pop sti lds cmp test aad xor or add sti iret (bad) xor cmp loope (bad) call fistpl sbb mov ds mov add push mov push jae add int3 mov ret rcr mov outsl push push daa add int3 add sbb lahf fnstsw cs adc icebp call inc push cmpl movb dec mov add inc mov adc movb push test push nop pop pop test pop lret push movsb and or mov push (bad) fmuls std xor mov int cmpsb insb push insl sub adc jecxz jmp out fbld xchg jne (bad) jmp shll es outsl aas add in sbb mov popa adc je mov (bad) adcb (bad) cmpb and xor fcomps dec or call imul and fwait loopne push nop dec pop aad sbbb fisttpll test pop xor fistpl insl jg pop movq adc pop fstl clc and lds mov sbb psadbw ljmp je mov push rcll das push dec xchg aad mov pop pusha mov lret inc das sar fmull pop sub push data16 pop sbb xor lahf push nop or das sub cmpb mov and add mov fbld test iret leave sahf loopne cwtl ror cmp adc (bad) jb mov lods test and add fnstsw lea jmp bound push lods popa mov sbb sub xor jmp mov pushf push mov loop inc inc je aad add outsb or fmuls test (bad) lcall jne mov mov sub cmp ja mov shl test hlt sbb jne push jne cmp mov push nop or mov aaa shrb jns adc or loope jne push out sbb add ret cmp inc (bad) jmp add call cli call or and push out add cmp xor add sub cwtl and mov pop daa (bad) seto mov out sub decl cmp jne mov jne adcl sub (bad) gs pop call fsubl (bad) aaa jae add mov test rcrb sbb sub push (bad) jmp test cmp je inc lods xorl or adc xor ret cmp lret mov sbb mov sbb aas and xchg ljmp push pop inc fisttp test je mov lret test jecxz icebp (bad) je jmp nop mov push or xor mov test mov jne mov call pop aad inc loope stc sub inc jo pushl mov je cmp je cmp je (bad) mov decl jmp hlt (bad) decl fwait loopne cwtl adcl jbe pop push sbb dec add lea es bound and xor push jae call ljmp fist adc or mov mov mov inc mov jmp inc and and mov or push pop xchg enter xchg push xor xor cmp xor call add das (bad) xlat adc xchg aas movb movb mov mov stos inc jne jmp xchg scas mov adc aad xor enter lfs fwait mov and popa fist je add loopne rolb sarb and mov call add fistpll cmp add add (bad) pop jmp mov mov fildl mov and or mov dec inc add jl mov adc add mov mov add fdivs stos ljmp rorl and sub adc sti add dec rolb clc xor add mov movsl enter jmp lahf cltd mov lahf cmp mov test fmuls pop imul push push sbb je jb je adc popf je fstl lahf pop ret mov xor inc and test je mov psubsb adc jne mov bound add add xchg test adc sbb xchg das movb aam push or add add mov sub sub mov adc and xchg stos pushl mov inc add cmp icebp fsubs fidiv loop add in call sbb dec xor xchg mov add dec and add xor adc add test data16 mov jmp inc pop add add movsb push jb jp pop add mov lock icebp je dec mov je mov loope sub cmp cli sbb jne repnz rcll (bad) cmp xchg (bad) xor push pop pop repz xchg lahf les clc jae jmp xchg inc sti int or add dec jge ss mov add jbe add or mov sbb add sti xor push lock loop sbb ret fwait push inc clc adc add inc hlt mov and push mov nop and icebp sub sbb xchg push pop sub in cmpsl aaa adc (bad) mov push add ret xorb mov les inc add mov dec or je decl cwtl cltd pop pop and mov mov mov push push (bad) decl incl push mov addl ss movl and push rorl test add and jmp add add and inc fwait jle sarl mov or or call push aas adc ret adc movsb jo cmp mov fnsave jmp pop outsl shll mov out jmp js out (bad) jmp mov outsl pop sbb xchg out stc call sbb sbb xor cmpsb nop or mov rorb arpl sbb push les bnd add jg cmp jne mov mov mov sub sub inc cmpsb mov cmp inc stos movsb jmp pop inc or dec loop aas pusha (bad) mov jb push stos or add adc push mov pop pop stc jmp mov sub scas jecxz xchg push sbb mov mov loopne addl (bad) (bad) mov repz seta setb xor cmp jne movzbl cmp mov add xchg sarl iret push mov or jne add fstp cmpb or je imul cs fisttp xchg and mov cmc rorl movl (bad) dec push fwait push or test mov ljmp movl mov test enter movl nop adc add (bad) mulb addb push (bad) jnp or sbb add sub lea and shr shr shl lea stos out mov add (bad) mov cmp mov and movzbl jg push testl or pop xchg out mov or push or xor (bad) mov ss mov inc mov popf (bad) cmp lea jbe iret loop xchg add rol pop cmp mov loopne xchg ret call push mov jl add mov movzbl adc imul incl icebp cmpb jne add dec ret push sub cmp aas mov aas add orl (bad) adc (bad) mov aas mov mov add loopne jg (bad) pop je xor repz mov mov cmp add jne nop movzbl xorl arpl add out fstps add movzbl adc xor popf mov cmp push loope insl scas mov outsl shl add xchg add adc adc test cld lock sbb mov jg mov call pop insl aas mov out mov mov mov jmp add aas scas cmpb xor test subb lea shrb rol mov btc test add sbb jg jg push mov mov movl movsb add add inc cli scas test inc add inc mov inc test test pop add inc mov inc xor lret add mov add loopne inc out jb inc adc push test mov mov (bad) rol inc aam mov movl inc aam adc loopne ds movsl pushf imul dec icebp pop jg test sti mov cli loopne call (bad) (bad) ljmp je or add pop sbb rcl aam mov stc mov or movsb call mov jo sti push lods movb push in sar test push bt pop xchg mov mov cmpb jne fstpl mov movb cmpb jne sbb xor lods mov test jmp movl incb je stc sbb or adc out (bad) hlt add or jmp out add icebp nop xor jmp sarb lea lea aaa inc negb ja nop addl xor pop je jmp sub pop xor adc stos or sbb mov aad push inc mov cmp fdiv ja sbb movl add xor lea scas and adc adc and sbb js dec test je mov adc idivb push into jg xor call mov cmp jae xchg je add xor shl lcall or add bound mov and jg mov and jne daa xor es std add mov test xchg std out fwait jo stos dec mov jmp pop test jne jmp enter outsl aaa (bad) and xor daa xor jmp movsl and cmp test jne xor push sub and inc add fnop std test je loopne inc sbb adc (bad) mov sub add ret in sbb (bad) jmp nop add inc icebp aas push sub mov lahf add add mov jne je sarb movsb sub add mov std xor pop ret mov call jbe cltd sub mov mov adc in push ret push call sub inc and call mov sbb daa adc ret mov out cwtl (bad) fcomps jmp mov pop fwait loop xor jno and jmp les push jo jmp mov daa mov je sub call adc add inc add adc adc sub je add fsubrs fistp sbb add je call sti jmp jne movsl loopne dec add (bad) call nop jo fucomi add mov and sub mov clc dec add mov adc and sbb add or adc fadds rorl incl out mov mov inc push fwait cld sahf cmp subb adc jb push inc std adc pop and push mov call fistp mov call xchg std incl fdivs inc and xor xor xor pop fsubr lahf gs mov not mov mov arpl mov jmp iret outsl popa out lcall or rorb movl mov adc mov (bad) ds mov mov inc lock lcall int3 daa lds sarb (bad) fisubr or cmp or xorl nop das and clc add movsb movsb je and ret inc iret mov push cld ret inc test test test and daa js sbb adc cmp and ljmp divb add add clc add (bad) fucomip mov pop pop addr16 mov out clc fidiv add ret add fidiv sub push fs lds push roll push ret call aas sub mov sub mov fldl add rolb je fxch out inc fstpl add jbe cmp inc or adc aas push popa or aad fstp fstpt pop jg add inc scas popl push or xor jmp cmp int3 mov (bad) out pop inc mov sub cmp ja mov fldl fisttpll adc fldl push adc fsub inc (bad) aad cmp or cwtl cmc add jo push mov adc outsl mov jecxz or addr16 pop jg mov sub sbb js xor (bad) jle (bad) (bad) mov lea nop mov cmp ja mov add cmp jb adc adc repz xchg andl aaa mov out test mov cmpsb mov shl add mov cld sti aas inc mov add inc or adc or mov or sbb and call mov test and je sub and jne addl xor les stos (bad) add jg mov mov mov mov jnp xchg add adc xor pop adc and jo nop add sbb clc call cmpsb inc push aad xchg and or cltd (bad) fisubr adc mov rcll out mov pop cmp sbb dec dec out sbb add jg adc add lea sbb adc mov and and mov dec add incl cmp mov jne jb and stc add jae lea mov rorb repz lea mov js mov or mov mov add out inc inc add add (bad) call idivb pop aam adc mov and ret repnz rorl xchg clc lds push (bad) mov push jbe ret incl call sub cmp sbb sub pop sbb inc inc add test mov inc std ds jno cmp sub push mov std idiv jg push movzbl mov lea cmp lea or je cmp je adc loope push int3 lret add dec and ja push fwait mov mov mov jmp inc movzwl fmuls cmp inc push cmovs mov sub add call mov call (bad) mov out aas ret aam mov outsl movzbl mov or out incl roll enter bound push inc mov jmp mov sub add adc adc jns xor xchg orl cwtl lret inc call mov mov cmp cmp sbb pop rorb ja push add fidivl xchg or jae scas stos add and xor inc je sbb rolb jmp out sahf (bad) xchg dec je cmp xchg jne xchg inc rorb call add scas mov insb punpcklbw dec test adc mov mov and and jae daa jne push into movsb sbb mov dec cmp cwtl adcl insl pusha je je mov ret add push dec push push adcl (bad) ret xor stos ljmp outsl (bad) popf andb cmp jg or jmp test pop xchg das call leave sub shr push add sbb js fnstsw jo sub push xchg mov xor sub punpckldq iret shll enter aad mov call mov xlat or sarb jne dec jbe jo dec lahf jno es movsb das mov add scas push orl call add lret ret je push and cmp rorb pop scas mov xchg mov inc or push push mov pop pop (bad) lods pushfw cmpsl mov iret lahf or leave and and dec mov mov add ret jne (bad) std decl jmp mov cmp je mov mov aas icebp xor stos jo add mov dec xchg pop test add mov jmp xor jmp push (bad) xorb jbe test les lds xchg lock test mov (bad) loope push pop (bad) mov (bad) fbstp mov rorb fisub out jmp cmp mov frstor mov jne movl add data16 or mov ss push dec pop sub mov cld lahf mov call jmp stc jb inc cmp cmp add je ljmp cmpw mov out sbb (bad) add cmpl push inc cmp into sub push jg push adc or adc push cmp mov (bad) (bad) incl movzwl test lea je xor nop mov cmp ja add push or pop ret incl sub icebp jne rcrl out lahf mov cmp call ja fistpll lock dec pop jne mov jne loopne add cmp movzwl add lcall movzwl lea xor imul or sub incl sub out je mov subb (bad) or fs jne (bad) sbb or ret outsl les ja xchg push (bad) ja pusha mov subl popa inc jns or movzwl addl test je xor hlt shll leave xchg jb jb std fs loope aas xor jno add mov out fs addr16 sub sub das adc jmp sahf (bad) jg fnstenv shlb testb je test je sub pop push add fidivl add dec repnz mov les call loopne jbe test imul ret lcall rclb push push and xchg into ss dec xor inc or xor add inc fsubl cmp (bad) pop pop not shr scas scas data16 xchg xchg mov jg dec nop addb push or sub mov cmpsb dec adc (bad) jle or lea je xor pop (bad) mov cmp ljmp push adc sub (bad) jne clc fadds or mov inc jne jmp fdivrl rcll dec add leave jne mov pop aam fstpt mov pop pop sub jg adc push cmp or adc mov pop sbb sub mov in adc xor dec outsl mov rcrl sbb aad aad enter in push cmp jns aaa mov (bad) negl sub subl or std test mov jns neg idiv pop jg jne rolb neg mov insl (bad) mov jne cmp jbe std (bad) decl ljmp jmp cmp jbe xor xor mov mov push in mov sub neg xor es clc (bad) jg mov jne cmp jb xor cmp ja or (bad) jp jmp inc test jne sti xor div mov xor mov out cli into jne (bad) imul and mov mov (bad) (bad) ljmp lock mov shr mov or shl mov mov into or adc shr mov sar (bad) fnstsw mov je,pt or rorl (bad) jb mov inc cmpsb (bad) out push out (bad) jae cmp je mov nop adc ret push in (bad) lea lock enter nop aas xchg rolb jg mov mov jns imull mov adc lds mov das xlat jns (bad) mov test ja push inc and xchg mov jg jne nop repnz jbe mov in mov or shr or mov mov insb or jg add lzcnt xor mov sbb cmp jb inc jo cmp xchg mov stos or mov jne adc mov ret or popa sub jmp xchg das sbb insb jg ret fildll (bad) sbb call jg (bad) or mov mov and mov mov jo shl mov mov fcomip or mov fimull lock scas rcl out fs ja loope or jge (bad) jb sub jae sub sbb outsb mov sub sbb xor mov popf mov shr shr or mov push popl xor sub cwtl pusha test adc addr16 and inc lahf fistpll faddl push lret aas cmp ja repz mov lock mov mov pop cli lock xor jl mov (bad) adc inc scas mov or ret aaa (bad) add gs ljmp iret inc inc xorl stc xchg jae pop or ja mov fimul or gs jg (bad) jb sub cmp jae cmp jne lea xor mov or cmp (bad) dec or xchg and (bad) lock sub bnd xor cmp ja shr rorl fdivs (bad) jmp (bad) and mov into xchg mov test mov mov jne cmp jbe xchg pushf (bad) xor clc cmp ja bsr xor mov add test jge add ret push add lcall lds add out jl cld in in shr and add jne lock div or rcrl fcoms cmp ljmp jg or ficomp cli test mov shl pusha out shr or sub stc mov (bad) in (bad) mov xor mov jb pop xchg cli push push insb ss sbb cmc aas and in sbb push je sub icebp fcomip ret jo sub push popa clc fisttpl (bad) lcall push daa adc cmp cmove add test jns inc push ret fisttpll sbb lcall std mov das add xor lea std inc pusha pusha push fisttp jmp xor pusha add popf outsl bound rorl xor dec (bad) (bad) mov mov and shl add or test js cmp mov ja lds or cmp testb movhps push call out sti jmp (bad) cmp int3 or sarl mov jmp add andl iret cmp std sbb pushl loopne cmp je jbe cmp je inc adc jne mov inc and movq jne shrb (bad) (bad) mov ret mov ret sub call or sub cmp mov mov (bad) loopne aas xlat xchg (bad) push mov mov jb inc aam add cmp jae inc aas mov lea pop cmp je sbbb (bad) stc xorb (bad) je cmp ja sub lock mov jge and mov imul rorb add mov jne (bad) push adc inc or inc pusha roll fwait mov cmp movzbl ja sub or mov pop outsl loop xchg mov mov mov nop loope mov jmp fiaddl scas xlat mov imul (bad) jg or ja mov mov lea movl mov out inc test and mov fistpll cmp (bad) sbb push decl sarb mov mov ja xor in movsl mov ja out loop mov mov mov call aaa mov and ret cld (bad) call (bad) mov jno inc in jmp ror movzbl add xor leave adc or mov add ret in test add out scas inc cld jae cmp sti sub rcll (bad) ljmp or call ja adc inc ret neg jmp inc pusha mov sbb push inc adc and inc lock add into fnstcw fistpll loopne cmpl aas nop add jbe adc push inc inc pop mov add sbb sbb loopne jnp add mov sub popf add repnz jg jg jne test mov je fsubr jg push mov mov jne rep add xchg les inc or fdivr (bad) ss mov mov mov icebp fsubrp int dec mov lcall add (bad) (bad) mov add out sub cmpb xor pushaw and popa mov pop xor sub repnz jae,pt mov sti (bad) ljmp xor stos dec push mov ret lahf mov ret jo (bad) (bad) push sbb mov maxps mov imul xor xor pcmpgtb stc pop ja clc mov or loopne fmuls (bad) jmp fild add add ss je addr16 mov and imul inc in mov (bad) jmp or dec mov lahf cs mov dec dec dec xchg xchg push dec aaa push (bad) xor pushf lret adc add jmp subb adc ja pushf add neg add adc sub xchg pop xor inc ds jnp xchg add in adc push out or ficoml mov call rcr pop inc and and jmp xchg out movb movb daa daa fwait sahf lahf popf xchg aaa daa daa pushf mov xchg xchg xchg xchg movsl cmpsb cmpsl test adc mov jmp mov dec xor sub repz add stos movl (bad) jmp orb test popf add push xchg xlat cmpsb mov sbb add mov outsb xchg mov mov call mov sbb aas mov pop inc and lea sub mov pop or inc and mov dec and cwtl xchg add and cmp or inc add je fldl push or mov xor aad push add por sbb cmp add fimul (bad) ljmp xor ja loope jmp mov lea dec arpl and (bad) fbstp mov lds push and je mov (bad) call loop aad (bad) xor cmpb mov test les ljmp outsl mov mov jo and xchg lar ffreep aas jb and mov ljmp cmp je push cmp jne xor mov fadds push fisttp cmp jne pavgb orb pushl mov dec mov cmpb movzbl sti je test out or cmp jne cmpb (bad) loopne arpl jne cmpb jne adcb ss pop test push lock sbb lock call adc push mov call mov in cmp xchg add in mov je (bad) mov mov lea or mov call scas mov decl test mov loopne cmp cmp xchg decl add test outsl or add cmpb add popa movd jecxz adc xchg call dec mov out call gs lods and mov repz add and sbb push push test loopne mov cmove mov ret imul aas adc das xor mov test jne adc stos aaa mov cmpb icebp jecxz loop test or xchg jb inc add jmp inc decl mov lea mov mov cltd call dec pop mov inc mov jne pop (bad) call jne movzbl add jmp test daa mov repnz fidiv fistl xchg sub sub jae add lea inc mov and and mov repz mov jmp xor mov adc add jne push cmpb jne out insl clc jne mov mov (bad) movl cli inc movl lahf adc add mov movl psrld sub lea cmpsl mov movl cli cmpsb cli dec movl inc add sbb xchg mov lea xchg arpl rorl (bad) or jnp les (bad) fisttpl adc (bad) xor lea cmpsl add inc inc xor mov jmp adc push les icebp xchg (bad) icebp les test push add mov jmp dec mov add divb cmpb jne jne mov pop das xor test out rol std cmp pop (bad) xor call push mov add mov mov jmp jne out popf mov or (bad) clc xchg nop push fucomip or cmpsl push mov sub test pop push and mov jg (bad) inc and jae movl das movzbl lea lea mov cmp jae aaa icebp fbld movzbl jmp mov mov add cmpsb and xor cmp jg add jl aas push shrl adc pop and ja test (bad) (bad) push inc pop mov add pop in inc add jmp mov jmp movswl ret jle lahf adc jmp movzwl nop movsbl add xchg xchg mov adc jbe mov xor cmp mov jmp shl cli and test jno test add call push adc call sub sub or xlat std out addr16 add (bad) decl sbb sahf jmp orb adc mov loopne sti adc nop sbb inc arpl pop jl (bad) cmp je cmpb pop mov mov sbb repz out (bad) out fist add and jne jo clc adc (bad) (bad) mov sbb inc arpl add mov jne cmpb andb add mov mov sub out out cmp mov cmp aas jecxz push and repz lcall add (bad) cmp jge roll jl xor cli sub loopne (bad) je add pop adc inc add xchg repz movswl add jmp (bad) (bad) cmp jle incb test cli adc cmp push push mov sarb test pop jle xor mov inc mov jecxz out mov mov rol dec jae repz bound andl and std xor and out sbb xor inc jb mov pop cmp in and inc jl stos mov fs adc bound xchg or sbb pushf inc dec inc pop add orl xor es cmp jne push (bad) jp sub push sbb je sbb lea fdivr fwait out and xor movswl lea jmp aas sbb iret cmp jle out (bad) aas cld lea sub clc mov mov mov mov jo out pop test inc decl dec push mov add (bad) sub fldl xrelease in jmp nop jl xor (bad) xchg mov cli push je cmp jne add (bad) clc mov sar xor sub jmp inc push sub nop aas stos loop dec shl neg or outsb movzbl pop das jbe push add dec lock add or jne jmp ja cmp repz or sbb xor stos or add insl sub sub and xor fistp outsl stos cltd idiv mov jmp outsl sub (bad) xor mov div mov jmp pop ja scas stc das mov or scas or fcomi mov sbb fst add call push xor cmp sete addr16 gs pusha setge lahf sqrtps leave add psllq xor cmp jne out popa movzbl wbinvd mov sub mov add sub inc cmp sbb movsl outsb pusha mov inc je mov push lahf mov punpcklbw cld idiv mov inc je movb mov add inc rcrb leave cmp rcpps push adc (bad) mov cli call stos pop sub lea lea loope ljmp clc nop inc and cmpb pusha ret (bad) pushl fldl fldl and cld arpl sbb inc fldl xorb lret movb mov xor mov mov inc pusha jne cmc sub loopne fwait test jg inc pusha add (bad) pop fldl mov mov mov jo mov adc lds shr xchg add add inc pop lahf enter faddl pop dec sbb repz cli cmp call cmpb cs call cmpb enter push mov mov js dec push jl add jmp or nopl js sarb add fdivs dec mov sahf add cmpb xor jne sub cmp je movb rclb or inc movl fwait inc mov jne mov ja add ss popf xor lahf movsl mov rolb es sub add push std orl jno xor rcrl fisubrl (bad) adc mov jmp cmpb jmp or push dec out push lahf jle mov sbb mov xor mov in aam fildl rep fisubl movl mov sub mov xor add or test xchg fwait add aam fiadd add sub cmpb add jne or mov dec inc jo jo mov sbb test lret es out aam jno cld or jge sti pop incb mov mov call add add popa inc icebp xchg mov dec test aas cmp mov add xchg mov jg cmpl aad jg sbb sbb repnz jne add mov inc inc call add dec or add jge pop call pop add inc scas push imul sub mov test je mov mov adc je push daa or sbb xchg and or dec inc cmc incl roll cmp jne inc or pop xor std lcall push push pusha mov xor shr sub cmp sub shl leave mov mov les ret call pusha or decl in fstl inc or jnp sub jg jae dec nop lock adc jl cltd cmp or push mov sbb js ja add loopne adc xor inc insb je cmp push mov fisttp pop (bad) xor lock in jbe (bad) lcall add add lods sub ficomp push add and testl mov fstpt mov je xor jmp inc lds int3 lar jns test cmpb and mov mov jne std dec stos jne test setno jmp cli test je cmp je movzbl jae idiv lcall movsb mov mov test mov je movzwl mov jmp lahf clc add mov test sti andl dec dec jne or jp dec or inc call push lea (bad) fucomip mov mov mov mov lea ljmp into add shr or inc out arpl movsl jne icebp jg (bad) testb jne mov and leave and je cmpb out push jl or sub in decl cmpb jne mov ret (bad) scas sbb inc dec add xor ret andb sbb sub faddp ja adc dec and inc jg testb aas add add jg jne mov fdivrp xchg (bad) int3 push cmpb je or call loope jl mov ret mov xchg sub xor inc scas clc and sbb mov jne ja pxor mov push pop cmpb jg mov and call dec sbb int3 or rol sub call inc dec or push and mov out out gs cmovo inc and pop cmovne mov test xor sbb add xchg pop add sbb gs pop inc dec into xchg aas andps sbb adc and add add stos sbb insl push adc dec dec ja jmp insb jne (bad) lahf mov test push pop inc cmp xchg jg decl cmp je mov add (bad) std pop jne mov adc jne jae add cs inc or mov out mov or or fwait loopne inc and and mov push inc in add les push popf bound decl enter lea push lea std lea lea jl inc decl or mov sub movsl jmp test jmp test jne mov icebp ss cmc mov scas hlt push add test int3 xor dec dec (bad) xor xchg (bad) cli push je ret xchg or call adc cmp add hlt mov mov leave ret cmp jo jnp sub or lea decb iret jnp (bad) mov mov subl js fldt jne xor call loop mov rolb call fbld mov mov lea mov test and popf call xchg lea sub xchg addr16 mov lahf xchg or jne mov neg into (bad) mov adc or cmp sub ja xor out mov mov outsl sahf and lea out aas fsincos std mov mov mov mul fistp inc or or leave jne call sti lahf cwtl psubsb jl add call mov inc mov call mov ret sbb add or call mov or lahf push push or orl and cmp or movsl sbb stc pusha mov insb add xchg push and push test push dec push sub loop mov and ss call add ret nop sub addr16 lea sbb incl loopne add fmuls cmc (bad) (bad) jmp or jmp scas fwait hlt incb jp or dec cld jmp in mov je fidiv mov les pop pop sub nop add pop cmpl push or sbb push es or add and mov adc pop or cmp jl jmp fisttp mov jmp mov je mov sbb mov lea cmp mov jle lea lea push cld (bad) jl inc lea mov jge lea push lods dec jbe mov dec std and sbb push inc push ja mov (bad) jmp push out cltd push add fild das lahf (bad) lock sarl mov loop (bad) fild sub cmp je out mov dec les outsl imul add adc sti sub hlt outsl ljmp add test jecxz mov cs scas lahf mov shlb jne sbb jmp adc jb add pop add jge mov cltd push adc dec add inc push das adc dec inc sbb call ja xadd cwtl enter push addl call cmp mov add add jmp les or rcrb mov ret jp add imul mov lea cwtl mov cmpb js xchg je loope clc jmp sti (bad) lea or mov or cli push jne jmp push cmp rorl dec jne xor mov dec push nop sbb cli push jne lea movzbl xor add and call pushf and lea cltd inc hlt add cmpb mov push xor pop add scas loop add sbb out push (bad) call sub cmp je cmp jne mov mov test jne mov pop dec mov sbb and jbe cmp jne mov std mov xor jg inc add cmp je aaa std mov xor push xor sub adc movzwl loopne incl shr cmp movzbl je mov mov call ja int3 xor fimull test add sbb inc and or sbb cmp ficoml cmpb mov call aad cmp or dec shr lret cmpsb aaa hlt adc mov push xchg fstl add in or bound or (bad) mov push adc xor dec sbb push mov orl imul mov jg jmp mov dec push int3 push (bad) call push mov movzwl mov subw loop pop cmp push lds cmc pop cmp je orb aas sub sbb pop and cld (bad) incl es cli decl adc inc mov hlt cli daa ss lea and sub sub (bad) je cmc pop incl add pop add sbb fsubl push je ss ret stos adc das (bad) pop repnz and shl or xchg inc adc and mov xchg dec mov mov mov push jg mov movzwl shr mov (bad) popa xchg sub mov insl mov incl (bad) fisub inc adc arpl loopne sub or je adc je jbe mov outsb mov lods sbb fstpl cmp xor cmpsb (bad) loopne fcoml push fmuls dec ret add mov cwtl out jne push or testb mov je mov lea mov mov mov aas jne das cmpl jle sub push rol pop out dec sub mov xchg je pop dec xor pop sbb adc sub sbb (bad) adc je push gs call cmp pop mov or js bound les jmp aaa mov lods push xor sbb cltd ret and sbb pop jns rcl adc orl dec adc dec inc shlb add mov or shrl sub push xor sub cmp jb iret sub sbb shr xor imul jg int loopne aam lock sbb movsb jmp test insb mov clc sub mov add sub andl nopl shr in mov loopne test push js push pushl pop lock lds (bad) mov inc sub sub bound in sub popa sub pop xor out sbb jb xor mov jae mov jb push xchg adc pop dec pop pop mov (bad) jo (bad) call and sbb pusha and cmp (bad) es ss cmpsb or call fs mov xor push inc ret cwtl sbb sbb push into xchg xchg std fistpll lea sub add call pop add in call loopne loopne dec lcall punpckhwd out sub movzbl outsb clc (bad) in sbb add jge test shrl jg and test ljmp inc adc mulb add mov pop insb and std mov (bad) jae lea shr mov mov push jb jmp aas fldl shr mov jae pop mov cmp jb pop les jmp jne shr je,pn (bad) aaa inc shrb (bad) out cwtl inc lret adc sub add decl mov cmp jne movl incb add movl cmp ja movzbl adc call mov test jne test xor cmc mov mov mov jmp pop movb cltd outsb enter call adc cmpsl add and mov jg clc mov stc decb (bad) add call add cmp test aad sub jg mov jmp adc mov jmp dec add cmp ja cwtl rcrl ljmp cmp les je and je cmpsb sub out mov lea sub pushl inc add loop push mov lea movzbl je js dec (bad) xor cmc adc mov cmpsl lahf test and xchg call shl (bad) sub mov mov and adc and xchg or cmpsb mov jge mov jge sub test imul mov jmp mov gs sub sbb mov and adc sbb les insl add dec je sti mov sub dec je or mov push xchg sbb aas xor out psraw inc inc movsl dec outsl sub std sbb cmpsl call jne jno ljmp cmp jl sub js jne and add jo dec add data16 dec pop inc std (bad) mov mov cmovne mov jg lock dec cmp je xor dec add mov push cmp test add mov inc fistp mov lea mov pop add inc pop xor fwait or xor std sbb sti jb sti sub test mov jmp mov sub aas inc int add mov (bad) fsubl (bad) and pop push add xor mov sarb sub jmp push xchg imul loopne lods iret mov mov mov mov call loope ja ljmp (bad) outsl (bad) cmp pop and xor and ja test lds or and ja sub pop mov add out mov subl sub xchg je or pop mov push pop xor cmp ds and xchg call clc out jbe mov jmp sub lods std decl pop in fwait mov and sub rcll xor (bad) and aam jmp xchg mov jmp adc idiv incl mov jne mov add jmp jp xor xor cmp pushl xchg fimull jo mov add cmp test xlat push inc cli push xor hlt call xor inc cmp fwait je sbb and pushl out cmovb inc (bad) faddl inc call add mov test and das jmp jmp pop add sub fnsave and jae aam popf and pop sub (bad) rolb jg pop adc jne xor and test subl les jmp scas mov mov std and push add testl icebp add daa test clc dec inc adc mov arpl sti jmp je nop orl mov jmp jbe jmp xor cli daa dec lock (bad) jmp lock mov shl and inc adc add fcoml lea je sar mov dec mov stos mov lea push push je pop sub and cmpsb and jmp inc daa jae jg mov sbb jg mov and adc icebp pop push push int mov test negl shrb add (bad) jg and mov add pop jmp nop jb xor pusha orl pop add push pop pop adc fcoms or pop inc pusha cmp pop or les add push mov add ret xor sub sub push movq outsl mov loopne add jb push aad xchg call cld add mov mov xor pop jmp rorl inc lods (bad) xchg sub add mov or loopne adc push test add or (bad) outsb add aaa test js jmp lret sub (bad) mov out inc jb lret (bad) out jnp fnsave das movl and pop fadds int3 add dec aas add js or aaa pop xchg jo mov add xlat xor jnp flds (bad) fucomp addl xchg cmp jne jmp sbb nop cmp je mov mov test jne mov or dec mov cmp je lea mov (bad) (bad) (bad) mov adc mov jne cmp jne mov mov jmp add mov mov xchg mov mov rol xchg in adc fucomip mull add fildl dec adc std clc frstor sbb mov jae lods adcb (bad) aas cmp push xchg das cwtl inc das push adc pop sbb jmp ret aas sbb mov push call insb sbb lcall in je cmp jb jmp sti pop mov adc in jne mov rcl jbe sar inc adc fisubl mov mov and (bad) cmp adc jmp or cmp jb lea popf xorl sub aaa sbb dec (bad) mov xchg rcrl inc add pusha js lds (bad) mov mov rorb adc xlat mov push sbb sub xchg push sub call and mov rcrb lea out dec push jne je call scas in popf sahf shl hlt bound and bound pusha xor xor call cmp (bad) fist add and sbb fisttpl icebp loope jne mov stos mov cmp jne add cmpl loope mov adc xchg (bad) call cmp adc dec (bad) mov daa adc addr16 mov fild cli inc mov test je mov mov ret je mov cmp jb icebp lea iret (bad) cli clc or les xchg out js enter icebp sub xor sbb mov mov mull imul mov add add mov inc xor dec out adc cmpsb stos stos ljmp xchg test push add das push xor cmp cmp mov inc je push pop cld add add je adc inc fbld inc mov sub imul cmova lea sarl jge and inc push ja cs mov ljmp faddl jo mov and mov dec jmp fldl add das sbb push das or lea neg and mov jo inc cmpsl loop sub in (bad) enter das mov xor int3 test (bad) mov ja jmp sub sbb aas lahf jl cli pop add pushf or dec add lcall mov loope cmp je pop ret mov fisttp mov (bad) push push mov sub mov addl aad add push or std mov ljmpw jg je mov mov jmp pop rcrl test jne mov rcll sub or insl jle inc aaa inc dec add ret add mov mov mov jle mov xor and add mov rol decl adc (bad) (bad) cmp lea mov mov mov mov jne add jmp push jbe jne xor xchg xor inc pop mov out mov xchg mov add fwait call or nopl dec popa lods stc roll add pop pusha xor xlat out cwtl inc ret outsb out mov push outsl pop iret jo lock orl rorb cmp mov js cmp xor roll inc dec sbb pop inc sbb mov mov cs je cmp popf (bad) cltd sub pop sub das test enter adc stos xor nop pushl (bad) (bad) out mov add and jmp shl mov add shl sahf stos stos decl pop add test cmpl sub enter nop outsl mov fist std arpl and dec or lock cld jg cld cmp jne cmpb jne bound clc pushl into and mov fbstp mov lds lods (bad) or adc cmpb je lock dec imul call movl aas add frstor mov rorl and sbb jle or inc pop mov push mov (bad) mov jl and jne fs jne notb in push loopne mov xchg test call inc mov mov (bad) mov jne sub out jmp pop into or push and outsl or add jno fdivs (bad) les xchg aaa add add sub sar xlat jne je mov xor push pop mov mov add jo,pn jns sbb pop dec popa data16 mov mov sbb out cmp jne mov repz xor ret cld adc add mov jne mov cmp xor sub xlat aam cmpsl add rorb or bound add sub dec xor mov or mov or call add mov out mov jg rolb mov mov addl stos push xor ja icebp jg mov test je xchg xor je cmc or adc out (bad) fcomi aas cmp add mov add sub pushl andl cmp loop rol add jge or cwtl push dec movl pop pop pop and dec push add jb cmp (bad) fisubr push movl add cmp test add cmc outsb sbb test and cmp mov sbb cmpsb mov sti push xor jne pop and mov test je frstor je nop push cmp stos cmp orb out mov testb jne test fiaddl cmp dec cmpsb into inc xlat jl sub in cmp xchg mov je (bad) ja push movzbl cmp call jne enter (bad) or add cmp rcl cmp aam mov inc or imul outsb add add xor ja sbb mov imul cmc aad es jmp adc add add loop fadds mov loope sbb out clc or dec and add jg jo mov scas movsbl test cmpb jne adc mov cmpsl sbb aaa cmpl and adc mov sti mov mov addl mov pushl mov cmpsb lea fwait ret fistpll inc jp jnp add test dec jne cmp mov je adc fistp add xor xor and mov jns mov call rolb mulb fmuls adc and or aam repnz inc clc (bad) pushl sub (bad) in mov xor sbb mov jmp movsl outsl sbb sbb mov push cmpsb je mov nop dec cmp (bad) push add stos rol mov sbb and and jg pop das fidivl lock sub sub push mov cmp test pop xor cwtl inc mov addr16 mov and inc (bad) jnp cwtl aam flds add fwait xor mov mov int ds jbe dec mov test pop jmp add movl sub call outsl loop sbb mov mov loope aam mov roll lea je mov and jmp pop adc cmpb je cmp cmp test and (bad) pusha pop or rorb push out mov je mov mov mov mov mov mov or lea enter adc add ret jmp out (bad) lea mov xchg or add mov lea mov mov jecxz push or or mov mov clc call xchg sbb jmp leave add xchg aas jo test xchg cltd cltd ficom add cmpsl xor xor loope dec or imul or push add sti push xor pop jmp add pop adc cmp andl push nop mov pop push mov insl pop (bad) mov push mov cmp je cmp mov jbe call mov movsb out movl lock and xlat movsbl ret call add cmc jne mov push sub repz decl mov pop movsbl lock cmp je mov clc or xchg aaa pop push and call outsb loopne sbb and divb inc and xor mov out (bad) jge sbb lcall sar and push fcoms mov mov jmp nop ja or adc (bad) stc jnp fnstsw mov push adc (bad) pop cmc adc scas call push lock add adc ljmp or repnz jb ja cmp ja int outsl cli out loopne add das lea cmp jbe cld lea call outsb push hlt adc call lea jp fisubr cmp jae popa jae sub add lods jb scas push sbb negl or jbe (bad) pushl push lcall cmp jae loope outsl add lea call test dec movzbl stos sbb lods pop jne in dec push jg add jmp mov adc adc in loopne int3 and test dec mov sub cmp xlat add fnop pop add sbb call xor insl js push lock adc jmp adc fwait and cmp and cmpsl ss test or jno shr out jnp (bad) xchg and push sbb ss test call or adc add rorb sbb nop lahf in adc xor push cmp add mov jne jmp mov lea dec adc mov mov cmpsl add je mov jns mov lea inc les mov push mov lock stos mov cltd pop cmp push (bad) jb fldl call xor inc test decb push add xor fwait call mov dec push mov sbb xor cmp nop xor mov push jle ret push adc lods nop dec cmc pusha ljmp mov ja out xchg call enter lea add cmovs pusha mov add xor dec inc cmp add adc xor mov aaa cmp sub or loop sbb int3 sar inc xor jns lea mov pop push ss (bad) jl fwait push ret or je mov and pop mov icebp push push ret push adc mov adc call jl fistl cmp mov mov test (bad) mov cmpl mov jl adc js jnp push dec xor xchg mov mov (bad) je test aam mov cmp pop sbb jmp icebp xor out dec inc in nop je and push pop fldl or insb add out inc dec data16 adc ljmp adc cmp jne add cmp scas add shll push fwait insl cmpsl mov ds nop mov jmp ds push pop call call cmp fiadd add mov daa call leave add pop cli js adc icebp out cmpsb test sbb jno lea ret (bad) jge in or call ss xlat or sbb mov jp mov shlb inc pop movzbl jne movzbl lea sti jmp leave mov pop push push inc add push test jne add push lea xor mov sbb call pop fisttp inc sbb ja (bad) jmp leave mov push add scas nop mov jmp xchg add sbb lret xor das mov aad out cmp loope mov add mov ret or ja loope mov mov call and push int3 (bad) lahf icebp push sub ljmp movsl push sub js dec add lea pop adc ret inc lea and (bad) clc fldenv aaa scas inc and mov adc and cmp aaa lea mov dec add outsl leave or enter cmp cmovg movb lods es les mov popf sub cmp dec cwtl sbb lahf cs or nop jmp nop nop mov faddl dec loope addl scas pop fldt sub bound jmp fstsw fstp test je test and outsb cmp xor jmp sbb (bad) jne aad lret add push sbb shlb jne push and aad dec clc stos mov adc fs push mov test push mov es ja mov mov add dec pop ret test je ja xor push add or (bad) in mov xor jmp aas rcll cmc add scas incl add aaa int3 loop iret out mov test jne mov xchg (bad) (bad) cmp jle and mov jne mov mov adc xor and (bad) mov push jbe fwait push sbb and push and and push test outsl mov sub xlat aad and mov fdivs jo jle inc hlt mov call scas mov leave mov cmp jge (bad) jl or popa or sbb sar xchg push addl lea adc mov movzwl push pop add xchg into pop and lea mov iret dec les lock cmc jne subl inc les add mov pop mov inc shr lods ja push jmp aaa mov out sub testb mov or mov popa rcrl aas movsb rcrb sbb push mov push outsl das incb or lret cmp jge sti test js (bad) jl test repz adcb inc mov xor (bad) jne sub and ja pushw fwait sbb mov repz aas pusha cs dec jne test jne jmp mov pop add or imul mov push inc mov sub test jbe loopne mov inc push std jno xlat js nop jl dec mov adc sbbb lret ss xchg and les mov jo sbb loop inc jmp je (bad) (bad) jg inc or or and xor movzbl and or mov pop out decl jne lea sub call mov cmp pop xchg test outsl je cmp inc jmp fcomip lds add and jbe (bad) jmp lahf mov and (bad) jmp js std je movzwl test je mov mov cmpl loopne call (bad) lds roll push lea test call clc mov xor add inc decl ret mov cmp loop aam mov clc sbb or inc cld (bad) call or pop call addb push in lret mov push inc and lea call mov insl and mov loop mov testb popa es in gs jno call jmp movzwl jmp call dec aaa je aad jg test and loopne jle cli lcall xchg sub mov mov cmp jl out test ret mov test jne sub pusha jne cli sbb add inc xchg jle mov and mov cli loopne ja push je mov jle rolb scas imul push push icebp sub cmpps je (bad) (bad) (bad) fsubs jnp add lock mov sar sub lea cmp jne lea mov xor jmp stos arpl cmp sbb je add (bad) (bad) mov mul shr cmp jle test jle js enter jmp je cmp sub cmp jne aas sub outsb cmpl add movl push aad test xor add test test add mov scas and add out pop jg push test shr mov (bad) jmp enter xchg jo mov sbb or test add cmc mov and fsubr sub test je sub lock push in adc movb out sbb add subl les and jg popa nop sub test lret jle popf and in roll dec xchg adc pop rorl imull test lret add ds jle inc xor jmp cmp es out and cs or les jne and mov push rcrl or adc pop inc mov clc cs mov sub (bad) sbb scas pop cld aam outsl and xchg jmp mov xchg lea test mov stos or push aas sub add xchg aas out pusha cwtl (bad) cwtl jge lock sbb or xchg or or test xchg jae sbb or in inc add jmp sub mov inc jl arpl movl mov ret adc mov pop sbb fstpt adc sbb and ret in icebp mov int3 or call or inc mov cmp dec test jne inc call (bad) icebp lock (bad) mul or outsb push call inc sbb and call and and (bad) out and inc loopne inc or clc mov add int3 cmovns rolb loope (bad) mov je lds or and decl jge cmovge add inc jnp pop mov add testb adc decb mov js jp fdivrs mov out jae mov jl mov mov adc mov out add rorb lock jle cwtl push mov sbb lret lea add inc pop rcr into aaa pop loop mov call popa ja xor mov mov mov mov lock je mov cmp je mov push mov subl xchg dec cltd shr add and pop pop lods loopne clc add lea movb das pop rorb (bad) decl jle mov sub sub test mov jle add lahf cmc ljmp mov cmp jne cmp jne mov or jp jle jmp mov mov jle testl lds mov test js cmp xchg setae add aas popa je pop (bad) decl jno movb cmp mov jae jp push jb fs (bad) cmp xor mov (bad) sbb int3 aas mov or push sub test enter add shr add (bad) mov inc mov je hlt movb or pusha (bad) push jle mov into das mov ret mov call pop loopne push in negl xchg lock rcll jmp rclb xor faddl adc cmp ficoml (bad) jmp (bad) pushl pop xlat push push lea mov sub sbb call xor cmp pop imul mov sar sub add je mov mov in sar sub mov jne mov cmp je cli icebp pushl dec or rorl dec fimull rcrl lock clc cmovle and mov mov jo inc sbb mov rorl jmp aaa sahf ret and inc mov mov call add adc scas pop inc adc xor push daa mov pushl pop mov adc mov fcmovb add sbb call test pop ja (bad) add jmp movl inc movsb loope std pushl mov cmp ja xor add sete jge add sbb pop jle add ret sbb call inc loopne call call mov xchg sub call and inc lret sub sub fsubl lock sub rorb sbb and mov je orb and mov cmp sar fstpl lods (bad) std jl mov cmp jg iret add pop inc test mov call fldl shl mov les outsb cmp and or call rorl inc adc xchg leave jg aas in adc fdiv mov sbb (bad) jne pop and xchg int3 inc mov pop push ret mov adc or add negl lcall jmp fistp pop add jmp mov jmp das outsl outsl rorl pop pop das mov add and rorb add sbb xchg jnp or mov push dec sub clc outsl (bad) mov or inc setne movzbl add mov inc pop xorl mov dec lret add add sbb enter inc or psrlq iret enter push int3 cmovge movsl aad (bad) (bad) mov rclb push jae push hlt ja aam mov jecxz xchg ret lea (bad) stos dec push add fimull mov aam test loopne mov or mov xor (bad) aaa or mov cmp movzbl cmovb mov xor shrd shr test cmovne or inc clc mov or jne cmp je rolb iret loopne (bad) fsubrs inc fdivs jle ret add pop inc mov out das ret jne sub ret es cmp fdivrs nop jne mov push (bad) mov pushl mov mov mov mov mov scas clc outsl sbb cli call out mov mov loopne lock sbb jge push or and sbb daa stos or inc cltd jl inc add es add adc aas stos jge sub popf mov je std inc push sbb out add clc add js pop dec aam call mov pop incl adc jle ja aad mov je mov fmuls (bad) mov cwtl xor stos (bad) pop aad gs das mov test jns mov mov test mov mov sbbl xchg pop fmuls in mov sbb pop add pop in add andb dec out (bad) decl cmpsl (bad) sbb cwtl fmuls xorl je ret jmp call test js push mov mov mov sbbb (bad) lods ret or xlat jne outsl pop cmp fdivs jmp int3 adc ret or test ret aaa loopne stos nop add ja sti jne mov cmp dec je and add clc outsl add rcl scas (bad) and fld lahf dec add decl and cmp paddd xor test jns orl ljmp add add and outsl add popa fisttpl in mov and xor cmpsl or jp mov sti clc mov add mov mov mov add stos test lcall inc mov mov cmp ja sbb fstp push out fild subw and xor xchg (bad) js mov pop add pop mulb dec cmpsl ljmp and pushl (bad) mov shl shld shl mov cmovne mov shrd jge incb shr add adc mov out and shrb xor jb shrb and pop inc mov adc jnp mov inc and sbb sbb inc test add das or (bad) jg lahf xor cmp ja mov mov test js sbb mov add dec je bt repnz mov mov xor mov or je adc adc add out mov test jle inc dec je cmp mov pusha clc dec jbe add or jmp nop dec ja,pt inc cmp jmp adc mov mov inc cmc fimul ljmp xchg jo (bad) iret push pushl mov adc inc and lea movb loopne jb inc inc and jle es inc movsb add mov rorb or xchg cmovg xor imull fisubl jg jl add adc sub je mov mov jb jmp sar push cmp jge cli push sub pop pusha mov test cs jne imulb jne std xor jne test pop loopne pop mov in sbb add fidivl push addps testb je xchg fnstenv push lea or jmp fisttp mov sbb test (bad) jo push jbe je xor ljmp pop std pop xchg cmp je sub movsbl cmp std push mov cld cmp je nop shr (bad) (bad) jmp icebp pusha ja lahf ret inc or or out mov push call or mov pop cltd call add mov cld xchg movsl ja ss adc adc sbb pop movb cli xchg aas jnp mov xor or je and mov mov push enter int jmp das loope (bad) decl lods rolb shr mov mov mov lea xor or jne mov mov adc or jmp ss mov call jmp das push (bad) sti je popa cmp or (bad) arpl pop mov sbb ret add je mov mov cmp fstp and lcall add pop lods dec cmp (bad) call mov xor or nop callw or jmp loope out jp movl pop mov in cwtl lods xchg and ja out out jl aas aam lds gs cld xor subl je mov adc and (bad) mov sbb sbb lahf btr ja cmp pop lods and mov lcall push dec mov lahf or lds pop fs jmp pop test js das mov loop test fidivl loope addr16 cltd cmp jge push sbb mov popf mov adc (bad) aas cmp push or test lea je cmp sbb out pushl push and call sbb mov xchg nop sub out je popa out xchg inc and insb add cmp cmpsb pop or mov fild and mov push mov (bad) incl add inc loopne pop ja jbe movzbl in pop inc cmp pop movzbl loope xorl mov jmp test jne jo dec fnsave test adc jmp pop rcrl sbb dec pop xor pop femms enter jge mov fucomip adc dec arpl inc je add ljmp pop test je fldt lea push mov fistpl add scas nop or xlat adc xor pop pop adcb inc aaa cld ja icebp aas dec or test popa pop jne mov fdivr fldl lea stos push test jmp and xor adc test hlt jp adc push mov stos push test jp pand add add cmp jne int add sbb mov inc adc int3 inc add fsubrl int3 mov fisttp test int3 mov jne push dec mov dec cmp xorb test pop scas call push fucomi aas mov mov loop (bad) incl and add je iret inc in and add test lock aas or mov jne sar mov jmp hlt mov add mov cwtl mov xor je dec add pop je push bound add (bad) mov inc and mov mov cmp lea sbb and je mov fstpl (bad) daa mov je cmp sbb inc lds inc xchg iret das das test jne int3 sbb pushf and or ret faddl xchg jg mov stc ss xor test lcall adc std add sbb dec and aaa mov add inc or pop add hlt loope pop mov cmpb std je mov out and dec xchg jecxz outsb roll adc jne sbb or pop mov incb mov inc xor aas in sarb aas sub leave push xor and sub pop push push add mov fistpll fmull call cltd mov test outsl cmc xchg outsl pop (bad) cmp push (bad) pop dec pop cmp add inc mov test je and outsb cwtl decl test jge inc mov (bad) js pop pop (bad) jnp outsl lock push push xor mov (bad) popf push mov add ja add icebp pusha test js jle cmpsb call cmp xchg inc cmpsl cmp aam aad ljmpw data16 dec cld dec roll clc sub cmp nop or add or or das pop test iret inc divl pop add ljmp movsb std dec in jbe and mov xor adc pop cmp ja cs inc jns sbb icebp stos cld xchg mov mov mov adc ljmp (bad) xor mov jmp iret inc xchg sti add xbegin fsubr mov push loopne push sarl pop hlt mov cmpb je insb mov pop and mov imul inc fcomp call sti xchg dec mov jmp stos pusha lret xor dec xchg call lcall (bad) decl mov sub mov jmp and pusha mov loopne rcrb pop mov add aad inc mov mov mov jmp jne lea dec add xchg jo sbb arpl mov jno inc sub out push loopne adc rclb push cmpsb mov loopne (bad) aam and mov push subl mov daa xor imul jg jle movzwl divl pop sbb lods insb jno clc pop mov cli iret dec mov add mov test mov mov rcrb or negl adc lcall (bad) fldl ja out icebp fwait jmp nop mov mov jle lock incl or rolb cmp jl mov call push inc sbb add ret sub loopne lahf push inc jl rolb mov inc pop mov (bad) xor xchg dec (bad) sarl pop push ljmp mov mov lea cmpsl dec adc (bad) incl test mov mov je incl popl add add test je mov add (bad) mulb push test sub arpl dec cld sub shl mov push stc add lock pandn mov mov xor cmp jl aas inc and mov lea lea add fist pusha cltd sarl add sbb add mov jmp in subb xor dec adc xor div xchg jecxz jne mov je or in mov xor adc add lcall lret cmp adc jmp sti jmp inc and adc xor arpl xlat add popf mov sbb (bad) cwtl addl stos out out decl and cmp sahf sbb fisttpl (bad) out cmp dec roll cld cmp jae mov adc mov lea shl sub sub sub shr sub mov jmp mov test jne sub cmp jne mov mov js dec in mov rcrb xlat mov movsl mov scas jbe ret es nop push lcall mov xor sub sbb mov out fisubrl lock sbb add xor and push or xor inc cld mov jae lods dec jle mov add lea mov mov lea cmp (bad) (bad) out shrb in jne mov mov sub sub dec sub mov icebp mov add fisttp je cld test jne sbb fmuls lock push rolb pop in push xor stc lahf popf mov xor mov pop cmp ja pusha adc dec clc jg or mov cmp ja loop jle or ret (bad) jg mov mov pop stos out and idiv and lds adc clc add adc jnp aas mov push cmp inc inc add rorl sub mov sar jmp ljmp aas outsl test mov je decl je bsr fdivrp call mov shl mov xor xor call mov fwait jl and test dec fdivrl mov and or and adc jge cltd scas or push aaa mov sub sbb stos movntq or adc out add inc xor cltd loop inc or in aam inc jg rcr xor push movl and xchg or pop jl pop add mov add dec cld jb mov xchg and pop cmova or add lock add (bad) mov cmpl mov and shrl or mov fistl faddp jle enter adc adc or outsb movzwl jg and mov call insb fistl pop outsb fldz fucomip cmpsb add ljmp mov jo mov add loopne add mov mov ja mov add rclb fstp jbe push xchg cltd dec sbbl and pop cmpl xor adc cmpsb sub xor add ret es pop or and push rclb popf addl adc loop insl clc pusha cs or mov lcall jg stc testl rcrb or mov or jae adc notb add add lcall push jno pusha flds (bad) xor xchg ret test mov jle sbb fisttpll jl enter adc cmp cmp sub sub je and mov rorl pop sub and test loopne aaa inc cmpb sbb std and adc push rcrl inc and jo and (bad) je fcos jge xchg xchg outsl push xor fcoms fadd fadds or inc jmp out lcall dec iret xor test or xor pop lahf sti scas jnp jbe movaps add mov push xor fxch sbb pop sbb movb push fsubrs cmp lds les lea adc sub out mov dec add add fld fsubrs fucomi fstp jbe cmp ja fsubr gs flds leave stos mov fxch push xchg pop outsb ret idiv imul fsubrp fxch mov dec mov sti ja xor xchg or inc and add cmp clc rolb jl cmpsl popa jmp (bad) bnd add jmp add jmp mov add call lods push (bad) xchg add sub sti and sbb shr jo movl mov insb fistpl (bad) mov add adc lret push (bad) or and jne addr16 push push cs cs ljmp iret je and cs cmpsb (bad) mov mov cmp jl arpl adc add shrl pop test movsb sbb pop sahf fmuls fxch lods and push add xrelease and adc add xor mov cmp je xor rolb add (bad) push movb mov or test or mov and or jb sbb xchg scas in loope mov sub sbb lods push mov pop add shr lret and adc adc and hlt loopne idivl jg jmp das sub lea (bad) ja jecxz push add push jl icebp sub cmp jge mov std and je les inc inc fbstp setg into inc lahf ret je sub ficompl add std stos inc cmpsl add mov and clc lret loopne fstps dec (bad) mov test jle adc (bad) mov cmovle sub push xlat and repnz sub xor mov ss test (bad) cld aas inc bound enter ret (bad) mov add mov adc jle call add jge sete add push setle and xor pop test jne jg or and addr16 sub and add push aam rol jl jle xchg into xor adc jl jno add jle push and loopne or mov setg cmp pop pop inc and (bad) out cmp xchg mov pusha sbb adc hlt cmpsb sbb add fucomi inc shll popf int3 std or test and jmp cmp fisttpll adc neg popa xor or and (bad) push mov dec inc mov test jne dec push cmp mov mov stc jl repnz or rcr ret mov out jmp push and xor or sbb test jle jne mov mov bsr xor jmp (bad) jle xchg inc and sub fstpt ret ret or call sbb (bad) sti icebp test in es or add jecxz ja out pushf jnp inc call mov aas in rorb mov or movb push and mov lock test dec or adc testb je loopne in lea jle cmpl jne push push (bad) and imul add out or imul out add add mov lds fdivr or loopne out call mov cmp mov cmc popf cmp ret mov je push (bad) out call sbb add inc adc xchg (bad) and inc xor xchg or jg ret jle,pt mov (bad) sarb and pop icebp loope loope call (bad) je adc clc es jmp in (bad) mov jmp cmpb add mov stos (bad) dec in xor fwait (bad) sub cmp jge mov sub xor add mov out push rorb cmp adc loope shl fdivr sbb jg clc lret pop mov jl ds and jns sbb sbb add inc test pusha xchg mov sahf shlb dec jnp and aaa push or rolb dec push add adc or sbb and add jmp dec outsb adc jno fmuls lds xchg (bad) or pop and jl pop push add leave mov pusha add test mov sbb mov decl test psubb sbb add cli adc seto sbb jg mov decl lea je add loop push arpl mov jae dec call xchg ret mov (bad) test cmp cmp je and xor jmp jmp loopne (bad) (bad) out jmp xchg mov adc repnz xchg xor add cmp push je pop xchg sbb out sarb je jo cmp push xor jmp push xchg adc clc movd loop mov (bad) jl or loop rcr pop and xor and mov mov cli sub add mov jmp into in push adc jle cmp add call ret jno sbb pop pop adc daa mov pop and into mov sbb push inc cmp add sub and cmp fsubs sbb (bad) ja push xchg pop mov sub mov aam js rol inc cltd call jmp fs (bad) mull dec negb stos add mov call fmuls mov sbb rorb (bad) jmp cmp push xor fadds mov clc add test rorl orl inc rclb adc cmp rsm clc (bad) fldl decl push pushl push negl daa xor jmp push adc adc fcoml jmp fstp or repnz cld and cmp fmulp xor mov cmp jbe jl push pop mov incl aam mov movzbl mov fld insl jmp sbb sbb mov push test mov push jbe adc push faddl mov subl (bad) decb jne mov mov test fcmove lcall flds lret fucomi fstp ja sbb xchg mov into hlt (bad) mov call imul add pushl xchg cmc mov jmp call out cmpl subl sbb jne jmp xchg andb sub or sub jmp mov (bad) cmove call jo imul repz cmp xabort and aaa xor mov adc (bad) or push add push popa xor (bad) orl cmp cmp test mov popa ret mov mov mov jmp cmpsb frstor loop shl mov push test add xlat lcall ja inc sub (bad) das ss testb jne pop repz psubsw sbb xor push add rclb push repnz sti pop sarb sub jmp cmp xchg decl push (bad) cmp jo cli jmp sbb xor push rolb test rorl (bad) clc call pop sub ret add sbb mov inc sbb and sbb jecxz adc pop loope mov mov rol pop or add es insl je test rol pop pusha imul xchg mov mov js mov orb loope inc add das push pop jmp insb aam movb lahf jmp ret lods push and push inc xor dec and mov (bad) mov mov mov xor (bad) fcmovnu sarb jp jne dec xchg loope and pop push bound add divl call adc popa mov into dec scas pop dec push or xor cmp jg cmpl mov mov rol xchg inc lods sarl jbe lea xor stc mov fild jmp test xor jmp mov mov mov mov push xor les jo mov sub xchg sbb call add les inc out mov pop adc xor and adc cwtl pushf and xlat das mov rcrl push ljmp mov xor test sub mov js add add (bad) not jge and jmp cltd sub test daa xorl inc pop jne or lea in mov icebp sub je,pt sbb push cmpsl clc sbb fstps sub stc es or xchg rolb inc xor inc and jmp push mov jae or sbb mov imul ret sti in pop fidivrl test outsl sbb jmp fiadd mov cmp ja sti mov add pushf jmp call xchg scas adc in outsb add sub pop adc xlat add lret jle jge pop lea rcl daa aad fisttp mov ja cmp mov clc fiaddl or jo (bad) aas test addr16 call mov inc (bad) (bad) fbstp add add shl movzbl or mov mov decl fildll pop and adc add decl add ret add shrl (bad) push mov leave orl or inc jg repz gs mov jbe scas movsl cmp ja mov cmp not add shr lea push mov inc adc (bad) (bad) jg cmovs lea lea cmp jae mov xor test je jmp dec push mov or add push lock cmp ja pop ret tzcnt add sbb js fbstp lret mov add push lcall dec add adc or hlt jne mov sahf cmp add dec sub inc subl std cmp add lds test add sub arpl xor (bad) in jmp adc pop clc add cmpsb mov sub call sub pop out test or pop dec add (bad) pop dec mov js test (bad) cld fwait mov add ret push push inc push push push sbb sub les movb add push sbb call jg mov mov mov cmpl adc dec adc jmp sbb popa add jmp xchg mov addl (bad) shl lea xorl call dec sbb pop or adc bound pop fwait adc rorb inc clc (bad) call ljmp sar shr add cmp cmp clc add mov std or lcall sub cs iret addr16 add mov adc pop arpl je adc or mov push jg jmp sbb pop and push xor add pop add pop rorl adc pop sbb cltd xlat inc lea ja dec mov ss clc pop adc decl scas fdiv jle add adc mov (bad) out add xor add orb push mov bnd fstpl push or sbb sbb je adc adc mov cmc push es push pusha loop add mov je stos mov inc loop and adc or (bad) adc jo repnz into call mov mov jmp out adc or dec adc push into shrl and sbb mov mov add ret sbb sub dec pop sbb stos pusha shll adc cmp jge mov mov mov mov vlddqu add cmp xor pushf (bad) rclb adc push data16 je mov inc cmp cmp std fild mov add add cmp ja lea sti sbb push cmp lea lea or cmp icebp pop inc inc sub adc jg fst add imul or mov test je xchg cmpl sub xchg mov add mov mov sbb cld xor add adc add adc xor dec inc loope mov xchg lcall sub (bad) mov push ja int test jle into cmp pop cld test jne lea adc mov rorl nop xlat inc mov ljmp sub or xor sbb xchg int das adc add loopne pop add test sti add cmp cli sbb test mov jne (bad) (bad) psrlw je mov test je mov sbb or dec mov add (bad) je sbb inc sbb mov fisttp cmp outsl fucomip cmpsb add xor push arpl cmp mov test lahf pop mov dec insl call mov sahf stos cli cltd mov insl jne pushf arpl loope mov call pop je repnz xor jg mov cmp out and cmpsb push testl jle out jo dec add (bad) aaa push (bad) je movl outsl (bad) mov xor movl cltd jg inc xor jg push or dec jne push mov incb lock jg mov or ret jle inc inc add xchg xor jg imulb (bad) xchg add (bad) jle mov xlat movl add clc jne add and lea mov icebp arpl les pop and sub les fsubrl and shlb (bad) jg (bad) push and fimull cld shr cmp ja mov (bad) mov subl sti inc fcoms bound jmp mov out call push xchg mov js cmp jbe add imul int mov jmp (bad) leave pop push nop or inc clc call mov mov sub jne lea adc lea (bad) (bad) aas fldpi or adc add xor xor rolb bound loope leave inc pop pop and adc jne pop xchg (bad) xchg lea lea lea jmp cmp (bad) fldl call sub and out jb adc dec xor mov fistpll and mov mov jnp lea lea cld out and jbe sub and xor fdiv fisttpll shrb (bad) lea mov jmp adc inc and mov sbb cld xor xor mov sbb inc cld add cli or fild dec cli insb and mov (bad) mov outsl xor ja outsl enter enter loope dec mov jno mov inc add inc push sub sbb and pop outsl add notl loop xchg xchg adc int (bad) mov call sub mov sbb call ret pushf stos push iret (bad) fnstcw (bad) incl sub mov sub mov test je mov push or mov adc ret lock js,pt jge jns or repz js cli pusha mov inc (bad) aam xor je enter popa out cltd push push adc js ljmp rcrl lcall adc mov push cld lea bsr xor sub sub push std clc or mov js ret scas pop sub shr adc mov jae mov shr lea shl or fisttpll aad xor sub and leave (bad) test and dec mov mov shl mov clc fwait and and or cli shr mov fistpll or xchg shl push add (bad) jae and (bad) decl shr or jmp test jne xor xorl and jmp aas ffreep aas or sub inc and fstpl call imul mov shr inc sar daa (bad) iret mov or and je inc rol fstpl cwtl sub div bsf test lock sub icebp shr shr or mov test (bad) (bad) call mov setne movzbl add test mov je lea movsl and xor int outsb mov (bad) pop push jne inc sbb popa lret test lea mov sti jne bsr jge out add out xor shl mov aas xor icebp and popl pop adc or loopne push (bad) jmp movzbl test mov je seto out mov inc pcmpeqw repz mov nop nop push push xor sub loop subl test je leave je movzbl mov movl aaa jg test je cmpl jbe jne xchg xchg push lret in call push mov dec or stos xor gs jp test ret xchg jo test dec add pop sbb inc and test je mov pop jmp call push inc and fdiv mov inc movzbl pop inc data16 jo call jg test and jb inc and lea das ljmp jae sub call jae fwait aaa and call mov sbb jo in (bad) jmp xor add sbb or adc mov and xchg cs mov sbb jg fsubs mov call test mov push scas cmp repnz ja daa adc scas inc nop push push mov mov cmovl fild pusha test cmove xor call shll test adc pop jo je ja imul sub jnp pop inc pop push push gs push pop mov add add add cmp mov jbe add insl xchg ja cs addl mov clc pop int call jg cmp jbe (bad) rcrb outsb mov add sub (bad) xor insb lea ljmp ds or add or xor iret or jae add xchg mov jg push out cli sbb dec cs dec mov call ret jg sarl test mov add shr inc ficoml sbb or imul add (bad) ljmp sar cmpb mov jne jmp fdivrs adc mov sub cmp jb sbb sub insl call push test movsl sub sbb cmp adc and push mov test and add add xchg leave mov scas addr16 cmovo cmp cwtl xchg sbb sbb adc and test add ja popf call mov push lds add push call mov stos cli ret sbb cmp jl xchg or or scas mov fucomip rcll es call jecxz dec push jl mov mov arpl pop adc jmp ss mov xlat vmovhps movl add ja pop push scas mov jbe and lret jne sbb pop or mov mov adcb call ficoml lret incl call mov jl sub cmp test add cmpb je add lds popf sub add insb push aam or test fsubrs inc cmp xchg push mov add sub or int adc push mov or (bad) bnd and cmpl aaa lock divb jmp scas cmpw je fstpt ret daa jae bnd add add and and int3 pop enter xor sarb mov or enter mov pushf cwtl xchg enter nop mov test enter push fs pop xor and and and sub or enter sbb enter or enter add cmpsb (bad) xor sbb pop hlt lock fs inc (bad) int3 fs inc push enter inc push sbb fs mov push popl sbb jo push fs push inc cmp nop mov push sahf add pusha (bad) mov iret add add pop and adc adc dec inc adc add mov movsb test mov call imul push incb jp fistp mov adc lock loopne dec sbb cmp adc add dec inc mov ja sbb loopne jmp pop out daa bound mov sub sub and adc je mov jge jae movsb ja dec mov jae mov nop xlat add arpl je inc mov sub clc fildll push adc addr16 test test ret ret aas movl movl push adc movl mov dec (bad) call lcall icebp pop mov mov mov mov lret (bad) (bad) (bad) call mov mov mov mov mov mov mov mov mov mov xor inc and ljmp loop add mov icebp mov pop pop pop pop outsl and andl add stos test push stc pop add pop and in jo pusha jo inc xor jbe shrl and ds pusha pop cmp pop or mov pop aas mov cmp cmp ja lea je (bad) jbe add mov push mov sar add cld cmp loope movsb sti (bad) incl insl xor ficomp outsl mov lcall enter inc sbb add ret xchg andl or (bad) ljmp rclb sbb cli adc das mov push outsb pop add push push shll call xor cs call daa hlt and bound ja and push outsl dec cmp adc sub ret inc sahf push inc mov sbb mov subb xor sub and std cmp jo jmp jnp,pt out mov and and or cmp sub rorl dec data16 scas and inc push (bad) fucomp push fldl cmp sldt sti mov decb xchg rorb add or add scas jbe movsb inc hlt lock jne enter and add mov call in pop ja push or mov clc pop stos decl add mov test jne mov loope and xor push icebp adc adc jmp mov call js fistl fdivs es std and cld jne xchg je mov (bad) xor jmp lock xchg xchg mov call (bad) loope add mov inc ret (bad) iret fsubp nop mov jg lds mov loope cmpl mov call incb add shr vpperm enter pop cwtl sti dec incl in mov call andb and rclb insl lret je push push add xor iret dec mov push cmp push fwait loopne pop adc jp push push loope in mov sti cmpsb out call (bad) xor call (bad) mov xor mov lea cmp jbe cld inc pushf adc std xchg test jne je incl sbbl push jbe sub sbb cmp jbe cmp mov ja mov mov or pop (bad) xchg cmpsb addr16 aas (bad) jo cmp mov ja xor imul lahf sahf daa jne sub scas movups (bad) test and scas add jg add inc enter inc and jne add sub ret or and pop xor mov ljmp movsl bsf pushl mov dec add mov (bad) sub leave xchg das mov stc add jg iret js call (bad) jne sbb call out leave je mov xor shrl icebp cmp jne sub movl jmp (bad) mov adc ret int jmp sub mov incl mov xor jmp js sahf movsb xchg dec adc jg and push adc mov xor test cmc popa ret add jns and mov les mov mov cmp cmc ret jne sbb je mov mov (bad) jne cmp stos inc popf imul stos jg iret cmp adc jne and sarb add cli add xchg rorb mov xor pop sub mov clc and and iret scas enter mov (bad) jbe pop popa orb push jle in jo mov cmp mov (bad) pushl inc xlat test mov cwtl adc jl add sbb and fcmovb loopne inc je pop mov push adc (bad) je jns add add jmp jg mov or mov (bad) call je cmp ja mov and or aaa repz mull lahf jg adc out pusha pop shr add jg notl and mov cmp ja std and rolb dec cmovne andl ret fbstp lcall or mov pop (bad) mov mov and sbbl lock sti sbb mov and or mov jle xchg mov enter hlt fwait scas mov adc mov shl and add (bad) xchg adc sarb inc cmpl xor ret push cmpsb aas out push push mov push in clc mov call mov je cmp dec adc pushl jmp cmp mov je mov repz sub cmpl jecxz pop cmp inc sub adc inc or inc or xchg jmp nop mov repz loopne into dec inc xchg lret jb jae adc pop test mov or cmp pop inc xchg pavgb jmp je add ret call mov out sbb xor out push mov lea jne jmp (bad) (bad) xor or lret jb lea shr lea cmp je ja lea xor jae js (bad) int3 les cmp jne mov pop scas mov or and mov scas aad push add pop maxps das mov mov mov out mov mov (bad) jb test jne push pop jbe push icebp fistl mov je pop neg shl mov add add fsubr sbb mov mov test push (bad) arpl jne test je jmp jne ss scas cmp jae mov mov mov sub icebp rcll inc pusha ja cld mov cs jg push and call sbb (bad) add mov loopne testb mov mov clc das fsubrs or fisttpl lea lea push cwtl add in std in adc out loopne iret mov inc push cmp cmp mov jne mov jmp push mov (bad) in sbb rorl adc ljmp cld rcr mov push jb (bad) jne mov call xor int and out fmuls jnp mov xor push (bad) push xchg cmp inc clc fwait mov add rep mov xorb mov popa jo fadds push sbb sbb mov outsb (bad) scas lea xorb sub cmp mov jmp cmp je mov rorl (bad) aas lea (bad) mov cld (bad) call je jb lea jmp scas imul sbb xchg cmp ja out inc cmc jnp test mov mov call jo cmp movl dec aas sub lea loope cmpl pop push or pop mov clc stos popa out (bad) (bad) jmp das jne aaa sub ljmp aam sbb and push hlt cmp jne sub xchg cmp mov mov std xchg sarl setne test jne ss ret decb outsb or je inc (bad) and pop rorb inc mov (bad) jg fisttpl mov mov call add seto and cltd ficoml add out sbb cs out fdivs fucomi lea add stos test fldt add xchg and das cmpsb mov rcrl adc jns mov jne pop xchg and xor inc aas sbb cmp loope push aas inc insb pop aad xorl movsb lahf fsub repz daa shr nop in sbb pop adc call pop subl jne js xchg mov fldl jnp xor cwtl outsl sub push cmpl movsb (bad) and cmp add je jb in adcb sbb aam mov or rorb and mov (bad) in pop cmp and add fisttp sub cmpb mov and jg cmp xchg cmpb jne cmp jne mov call (bad) in (bad) inc inc add or add mov aas mov adc jge cmpl out adc (bad) jmp sbb sub daa or add cmc and loope sub je test cmp mov cmc pop or xor enter jbe mov push aas lahf cmpl imul je mov pusha mov ret je roll or mov push lahf mov mov fcoml ljmp stos cltd call (bad) and (bad) out lcall andl mov lea sub (bad) fwait ds movl sbb movl daa movl test jne je mov call lea rol test pop mov cld sub mov and ja cmpsb dec mov sub push aam daa je mov fistp mov movzbl movl push enter and cmp push fs in cmp lds call loopne add das stos cmp leave xor dec int fisttp adc adc dec rorl or fisttpl cmpsb pop xchg (bad) jo mov cmp lea mov fcomps push call sub inc fstps cmp in jmp (bad) (bad) decl add cmp jae mov cmpb je mov mov lea (bad) aad pop call ja shr test sbb add add jo out add pop mov adc loopne mov mov dec push add xchg and cmpsb push int3 decl js push push mov mov (bad) aam sub fdivrs subl stos repz js sarb call (bad) lods or mov pop mov adc cmp int3 inc syscall aad fisttp jae clc add mov adc int inc add mov (bad) testb je test dec sbb inc adc sub inc icebp or dec je es xor sbb add inc dec movl (bad) add call cmp cltd sti popa loopne loop mulb xor push inc rcr je cwtl mov imul adc in xchg movl or iret mov cld hlt stos or call shr or push push test imul add es xchg push lock inc and lea lea jg stc movl inc out add sbb mov out mov shll leave je pop sub (bad) xlat psubsw data16 das pop cmp call cli (bad) pushl mov ja call xlat inc nop jo das mov and cmpl negb call pop addr16 dec and dec inc incl in pushl push fsts dec cmpsl dec pop dec push (bad) mov lea pop out ret shr punpckhwd pop fisubl jbe nop jne jne leave xor daa lock adc push push in inc cmp cwtl xchg add out inc mov inc sbb sti flds jae inc add std insb call mov arpl add (bad) je push pop add nop int3 push or decl adc movl mov test cmpl pcmpgtd movl out add cmp xor shll add sbb (bad) mov sbb mov mov sbb pushf adc call mov xor or ret repz pop add push test (bad) call into jmp icebp jge movl pop or cld (bad) scas sub adc cmpl xchg adc inc rsqrtps ljmp test cwtl outsb jb flds movsb adc mov inc push and aam xchg add mov cmpb stos xor adc add aaa adc xor jl adc or push sbb push push pop call mov sti les inc pusha push sub inc dec cmp std xor xor dec dec and call test adc stos pusha iret fistpll jb stos and test js or pop cmp ljmp fsubp ds je mov je xor (bad) decl add rolb shr jne test out inc add aas cmove mov push pop push push lahf mov sub sub out xlat and js lock call push xor mov sbb fistl and add cmp jle test je or vpsubsb dec xor lds mov mov in or or lahf popf and pop test mov add je add rorl push scas cli jbe push jg push jne adc cmp fbld dec pop mov call rolb loopne mov jo sbb xor or xchg mov rcrb das pusha jmp mov into decb sbb orl call adc add sti fcoms adc (bad) call mov std clc stos call adc or inc sbb add or test pop lea setg dec xor dec cmp push insl pop sub ja insl cmpsl or enter jae mov pop lea lea mov mov mov jmp rolb adc add cmp jne mov loopne test je mov xchg rcr mov inc add shr sbb mov sarb cmp jne cmp and test lea add add cmove cmp lock rorb mov data16 and sbb clc sub sub xchg add sbb call sbb sbb sbb mov lahf cmp test (bad) mov mov mov mov jge sub add rolb push ret sbb push pop sub push or les out push and push mov xchg sub cmp bound rorl inc lea add or cmp add testb add mov sub or mov popa xor adc adc lea int3 je mov ret jg dec sub adc adc add jmp adc int3 inc mov cmp jne inc push add push adc add or popa (bad) loopne iret pop (bad) subb add fild cmp sub sub add mov or mov xor je mov mov int3 cmp dec out outsl sbb adc mov or or das fist aaa lds call arpl jno (bad) jno mov adc jg mov jnp add in xor push call shll ja push ret jne pop outsb add add gs (bad) push sbb and dec mov jmp add je mov mov hlt (bad) outsl and enter xchg and call lods mov sub xchg mov ljmp push push and sbb sub push icebp or inc xor dec mov ret loope ss pusha dec or push mov icebp inc mov add test sbb mov cmp daa aas jmp aas pushf je add std call iret insl je mov cwtl mov mov mov pop out mov cmp xor pop and lahf scas jb out dec inc jo pop es jne loop les sub dec (bad) je int dec sub out (bad) sar inc ret dec add adc pop mov push clc inc (bad) out out fucomip loop pop je stc bound jne testb inc adc xor add scas and or cmc scas cmp xor test jnp add je test mov or ret sbb cmp jbe ret shr stc mov sbb mov subb cld add jmp popa andl insl push cmp pop xchg jne mov push jmp xor adc scas mov adc clc xchg or test mov je adc xor iret (bad) out inc and or cmp out testb je jmp mov aas dec clc jg or add test jle lock push adc xchg nop lock lahf test pushl jno call push and or mov loopne sub jo mov subl and je mov adc sub jo call cltd push push push call loope xchg pop push call jle lcall testb mov jne mov cmc or fist lret adc pop dec mov out pop cwtl push adc add or (bad) push (bad) (bad) call mov aas call mov orl push orl call scas mov je mov test je mov test jg and pushf sti push and or mov mov jge push jmp test insb lret push (bad) call fstps xor test push test (bad) hlt divl jl sbb clc sti incb call daa bound inc ret and dec ljmp dec pop outsl ret nop call andl pusha jg lahf sub call (bad) das clc (bad) ja mov call mov je call subl aas aas std fcomps jmp jg and call mov call scas popf inc or add or (bad) call insb cwtl sub and shrb icebp pop out sub and or mov aaa sbb sub incl stos cmpsl orb pop loope xchg nop xchg aad add lea or push loopne mov sub cmp por mov loop cmp je test jne and or jecxz addl inc xchg insl push call inc loopne loope mov outsl test sbb mov loopne cmp mov or xchg shrb or aam pcmpeqw aaa aam mov add sbb inc xor out fisttpll rolb jo les std adc test cmp push or and adc xchg andl and out mov call dec jp into inc xchg mov and les test and mov mov jp fwait push enter mov call mov mov fwait call (bad) call jmp xchg lds fnsave mov test jne mov mov and clc std ja push mov test je sub cmp ja and pop pop jmp data16 call mov dec scas fucomip shr cmp add and push inc addb dec push (bad) incl test jne and xor or mov pop sbb pop push push test and inc outsb cmc aas and pop or add scas sub ret das push and jo mov test enter daa pop add mov xor jnp scas ds in in (bad) decl enter jne mov and fcoml popa pop das scas dec or sbb stos fs call or adc mov sub andnps push jg push add loop sbb jg add or call (bad) testl decl xor adc pop ret das add insl inc and ja sbb orl lods add jo loope cmp mov das lret icebp jb mov pushfw loopne xor jg call lcall inc add dec ds aam jg (bad) adc in sub xchg out je push mov test je stos call xchg and mov xlat sub scas movl movl mov dec and cmp jl push pushf mov jne pop push add xor out incl add jmp adc inc cld jmp inc stos adc xchg or inc cli movl test ss leave loop pop (bad) je add or or jne js inc or inc insb mov xor cltd cmp add sub mov loopne and sarl pushl pusha mov fcoms dec or dec insb bound jle out movl ret xor inc push test je rorb call inc icebp loopne notb loopne decl sub mov mov das incl cmp cmp push mov mov mov loope and adc adc push pushf xchg clc dec mov aaa lock testb jne mov or cmp fcoms loopne pop cs scas pop sub and or push xchg cmpl call sahf js ljmp xchg inc insb dec daa loop or stc add lds call jb mov xor dec out mov mov lret push and or and mov in pop cmp inc mov hlt test (bad) gs loopne push movsb dec push lret ja,pt daa and adc mov stos and decb inc or xor add scas cmpsl xorb sbb jb xchg add (bad) jne loop pop xor loope jmp mov and mov mov out lahf jle js jmp jmp lahf cmp and call or or add loope pop or cmp jne mov cmpsb mov push and je pop mov divb push pusha or lahf push test sbb or (bad) mov sbb mov and sbb scas pop loopne sbbl push lea cld xchg pop in mov (bad) incl xchg xchg pusha pusha nop (bad) and das inc rcrb pop std xchg imul iret pop test sub inc hlt jmp push out scas adc test js or pusha sub arpl sub fisttpl test xchg xchg cmp loopne xchg je adc push out jne push adc dec js andl dec mov pop shrl xor sbb jb push arpl out loop dec add mov cmp sbbl lahf call arpl dec adc fsubrs xor inc ret cmpsl inc jmp xor outsl jmp pop or pushf push dec iret mov adc or inc mov cmpsb jle imul mov mov xchg roll mov ret jne push lds mov test (bad) aas jb dec mov push into pop inc push or fwait js rorl inc cmp popa pop rorl mov and imul mov test jne or inc and add (bad) push add into inc sbb mov or adc add dec (bad) dec adc pop pop leave jle nop mov iret lret adc movsb (bad) inc add dec (bad) sbbl loope dec icebp sub or or pop jge (bad) adc dec adc push in mov jle test js mov lcall call rorl shrb sarb add incl je movzbl test jne jmp (bad) or js loop test je and push lock test loopne cmp inc incl mov clc add out das jae lahf adc ret xchg daa and pusha inc push add enter mov in fbstp adc xchg mov inc xchg xchg jmp les icebp das dec cltd mov pop daa (bad) lock enter addl jl adc jbe push sbb or sub sub and adc ja leave jb mov push jg jne or iret test lahf adc mov lock mov inc and push pop sbb push add push aad fs and add sbb ss nop fildll push push ja mov scas sub std aas mov (bad) dec mov jne dec jl sub (bad) xor cmp dec test das pop and inc mov adc cs into mov ret push add (bad) xor les incl pop push push mov test je dec ja and add imul sbb idivb test jne aam mov lea cmp jbe (bad) push (bad) jg ljmp (bad) (bad) jl cmp je cmp sti scas addl jg sbb call adc test or mov and jg add xor jmp std jg mov jmp aas lahf jg (bad) mov sbb fsubs dec add ret je mov lds (bad) imul mov mov sub adc push imul sbb xor cmp cmp xor setne lea pop mov mov mov (bad) fist je testb xorl divb addb ja cmp ljmp and add xor les xor outsl inc ret inc movl adc jmp cmpsl cmp iret sub push xchg popf dec add es pop shrl out sub xchg pop xor clc add cmp cmp pop cmpl sbb pop add add adc mov mov imul mov movsb fnstcw pop ret cmp jle mov pushf jecxz and pop inc dec add cmp xchg sbb push mov ljmp mov clc add cli mov add add lcall mov aas dec jg movl mov out iret (bad) adc cmpsb sbb je test test or push mov test sub movsl dec mov and inc in and scas cmp jl pop or lds mov clc mov cmp add dec adc stos (bad) jl or push rolb call hlt and sbb fsubl (bad) ljmp inc xchg xchg or xchg sbb dec jb or js les fs fiaddl push push cmp pusha mov add and (bad) jmp mov push fsubrl out cltd call xchg loopne or pusha and aad inc pop inc loope add dec add inc pandn xchg mov lds idiv fs imul push mov dec and sar aas adc decl add adc dec call xchg push ret rolb jle std add sub add out imul mov pop cmp jmp inc and inc lea push cmp popf stos lcall inc add push and sub js sub inc out add call and popf mov jae lahf pop loopne dec je mov cmp mov mov mov pusha add sbb push sti inc mov fdiv cs (bad) decl mov mov mov sar mov sub mov cltd add mov adc add adc daa push inc jl xlat sbb mov xlat out pop sarb ds jo or adc cmp push mov pushf mov inc mov or pop sub test call pop js jp ja cmp jge xchg jmp inc (bad) adc jb xchg sbb inc fild inc imul sub (bad) aaa add lea mov mov cltd mov jg cwtl sbb xlat or jne jmp adc cmp (bad) lahf loopne xor (bad) jbe dec xor sub outsl jp ja sbb call or jne sub (bad) sbb mov je push sbb aaa test sub and cmp arpl adc roll adc fiaddl add mov (bad) (bad) roll or (bad) aad or ret mov mov add (bad) xor push inc inc aas aaa icebp cmc jo mov adc rcll or fadd sbb sub aaa sbb cwtl inc mov mov inc test mov jne inc cmp sbb dec xor xor jmp (bad) in jo adcl xor loopne call les fstps leave lock jmp add fiaddl dec enter mov fdivrs lahf movsb icebp or ds xor mov lds or mov mov ds cld jl xor das push fdivr addl mov mov mov adc into adc iret mov int xor mov sbb mov xchg (bad) cmc (bad) xor add and add sbb cli ja jae fwait (bad) jge and xorb out cmp jbe push push lcall push rclb push push mov push mov pop je mov xor push adc sub and je cmpl mov rcrl jo xor xor sbb mov jmp scas addr16 jbe mov (bad) xor mov imul mov inc test mov add cmp jnp cwtl sbb je or std push addl xor fwait bound inc popa je,pn add loop or js dec cld ljmp jp sbb je mov add mov jb out mov sbb daa movsl leave mov jge ret lock aas rcrb ret adc pop cmp cs js jle (bad) call negl fcompl pop fs testl fist mov add push adc call adcb mov or adc add or and sbb add xchg pop adc mov mov pop or enter sahf jge or xlat test in call push add add fadds and sub mov push icebp pop mov js mov call imul jb les ret push mov and scas (bad) xor leave dec push sub icebp add jp mov (bad) dec push xchg sub inc aas aam sbb call push mov mov sub inc or inc pusha jne jns sbb sarb cmpsl push call sub ret movl mov aas mulb aam cmp cmp call cmc arpl lds lea push mov mov xor add add scas faddl test adc mov mov cmp jl aas mov jecxz dec call inc xchg and pop mov fwait iret in or sub mov adc (bad) popw dec or or clc aad or pushl adc pop hlt mov ret nop cmp xor popa xlat call push inc (bad) fld1 inc and loope adc cmp je sub mov and or je push call adc shll rclb lahf call jb jbe (bad) je jmp iret xor xor mov cld mov call mov call scas pop notl mov mov test je jmp cld cmp xchg ret jne mov cmp jg mov ljmp icebp push mov mov es ret test scas or inc outsb fsubs div xchg cmp sbb push adc xchg call add mov fisttpl cmp out add call push mov cmc add call out fistpll and xor scas je cmpl lea or (bad) ds ret push lock cmpl jg and or adc xor pop jmp inc test ja sarl xlat (bad) ljmp (bad) mov sub aad sbb scas and jmp (bad) lahf popf je add mov mov ret mov (bad) lea out cmp lcall jae cmp pusha movsl xor lahf sbbb in sub xchg cmp popa aas fisttp and sub jmp (bad) popa fdivrs (bad) (bad) jmp pop push pop rclb (bad) mov or push push pop test mov outsl ret dec mov pop fsubl test xor stc scas mov or push lahf xorl rcll pop jo out cmp arpl mov jne mov mov mov mov inc or sarb sub (bad) rorl sarb shlb or sbb dec jp sti or outsl je jmp nop push enter lds add or add shr in (bad) pop and aam std scas dec clc cmc jne mov mov add lock fcompl sbb (bad) mov cmpsl aas lea test dec stc ret mov scas add cmp sbb mov mov js loope pop sbb gs out xchg add sbb or in mov inc (bad) xor (bad) cmp loopne pop data16 lcall (bad) push xor cltd push mov sbb out mov jne dec xor (bad) lret jne mov leave enter push jg mov outsb push mov call insb out idiv and outsl add mov mov lea lea call rcr out pusha jo ja call and or jmp and and or mov mov sbb call je loopne or inc push and mov loopne pop sbb lret jmp jbe call sub mov add inc dec inc scas subps test je pusha ljmp je jnp inc and in sbb jo lahf (bad) test mov inc and xchg (bad) xchg js (bad) scas fldt mov sbb jno add les mov lahf dec or or (bad) clc cmp andb jmp mov or je cmp lahf dec sbb and icebp scas shll sbb idiv decl out notl jno inc in sub xchg ret jno jns mov and sbb loop sbb add sbb cmovge mov test js sbb call push bound or mov mov jmp cmp inc jge xchg mov imul cld add and or xor xchg add lcall incl je and fildll outsl das cmp ja jbe int3 hlt test pop das nop add mov pop (bad) jnp (bad) push jg xor mov xchg out add rorb clc jmp fist add rolb mov add loopne mov (bad) shr aas pop jne decl test iret mov mov sub rcrl (bad) push push mov mov (bad) ljmp inc mov mov cltd add adc cmp jl jle ret and inc test rolb fistp cmpl lock test js (bad) mov jae sub add mov neg sub add push loope loopne cmovg loopne add pusha cmp inc mov fistl cmp lods ja test pop pusha je mov fsubl xor mov mov add adc xchg jg cltd jp pop mov adc testl sub mov dec jle add mov push in loopne imul inc mov nop mov sub push inc icebp pusha xor fucomip or push (bad) adc lahf je mov mov adc js mov cmp mov test dec add add testb lock adc cli jl (bad) mov (bad) lcall ja cmp mov jbe mov and sbb sub lret call fucomip bound inc and sbb cmp jae mov push add cmp bound imul outsb jmp orb dec aas ja cmp jbe mov scas jne jmp sbb push xchg xchg pop dec add sub (bad) out popl xchg pusha maxps and mov flds mov cmp jb (bad) test lock push dec adc add je hlt (bad) cmp movl (bad) pop mov inc pop add movl loopne push pop sahf cmp addr16 push xchg mov fiaddl fs pop inc push je lods dec lea mov mov call lea mov sub out fiadd push movl mov pop aam mov les jg insb sub mov xor clc in je adc mov (bad) jne and loope gs dec les mov xor adcl sarl adc addps mov sub jmp sbb (bad) testb mov push out lock pop adc jnp (bad) arpl and mov adc add pop jmp out mov ljmp or push stos pop and cmp push aam mov sbb mov orb scas loope add mov pop mov add adc inc popa clc gs pop add push mov je ljmp mov sbb out adc xor incl (bad) cmp (bad) je call test add pop ret push andl inc mov and sub int3 push and fistpl push xchg sbb ss and cmp (bad) cmp sti adc xchg adc inc sbb push mov cwtl push mov push pop mov movsl cmp je call inc rorl inc mov sbbb dec (bad) (bad) (bad) call cmp cmpsb je notb outsb push insl cwtl sbb sbb out push ljmp inc mov push add insl int3 pop sbb xor jge mov call sbb incl aaa setne jmp mov mov add loop fbld test sbb outsb push push je movsl pop sub pop push sub xor jmp mov jne cmp scas jmp ret pop sub cmp sti jge mov push or ret in or add call lds inc roll ljmp setne lods sets lahf cmp mov lcall adc jmp je adc mov shll pop cmp cltd push pop pop es and (bad) orl and inc push jne mov or test js loopne adc and mov cmp pop xlat divl xlat mov das push test jne or inc orl call mov jmp lahf je inc mov mov imul (bad) je lea lea mov jo xor pop mov pop xorl loopne test rorb pop push mov push ljmp pushl call add cmp loopne mov mov pusha divb (bad) jmp lahf push adc lock sub mov cmp jle sbbl test and jmp adc pushf dec clc xor pop adc pop cmp aas ficompl jb std inc in mov bound add pop mov or cmovle inc les sub and leave pop stos add cmp (bad) out add push cmp addr16 jmp sbb and jle inc sbb jge cmp mov push pop movups sbb mov mov xor jge jae jle or dec dec ds add jae add mov (bad) pop pop lea add lcall pop pop pop jmp lcall push pusha (bad) sub xor or stos (bad) jne mov clc inc loop mov je sub cmpsb sub movl mov jmp out dec int3 (bad) and add and cmovno shrl xor mov add jg iret or mov sbb xchg and lds inc inc jo pop pop das sbbb pop jnp adc add pop dec js pop mov sbb jmp lods repz add pop das int imul ja pop (bad) adc jmp and xchg sbb adc pop inc movsl (bad) jg dec push (bad) cmp push fist and or pusha je mov cld sbb jae xor (bad) jl dec add inc xchg les and je cmpl adc jbe lea clc add xchg inc or jo fsubl push icebp mov jno loopne sbb mov rcrl int3 and ret dec jo jno and dec jmp jmp call cmp sahf sbb scas jge adc xchg sti popa aaa xchg call aas call mov or orl call add mov cmpsl mov lea add pop mov push dec adc jle xor inc adc push lea pusha (bad) cmpl outsl test add in je lea dec cmp adc outsl clc cmp jne sbb ret pusha imul pusha icebp (bad) jne mov lods push push mov mov xorl loopne xorl leave push dec lds aas xor cmp pop insb add call ret jno pop jg lea pop cmp mov sti jmp jns and in inc stc (bad) fcomp adc sub sub outsb js movsb mov call push or outsb ret add test sarl lods xchg and (bad) mov dec mov or sbb (bad) fdiv jmp dec rorb test jo lret (bad) andb lock mov sbb arpl clc dec ja cmp cmc loop cli add cmp inc sbb lcall dec inc sbb dec out jo fadds lea stc xchg call push pcmpgtd mov ret sub lret sbb sbb jne mov sub adc add add mov addr16 or add std lds and mov mov lret lret ret sbb cmp cmp jae jo loopne sbb fsubs enter fisttpll xchg loope xchg dec in faddl jmp fwait add adc jbe pop inc adc or and test push sbb out out jecxz sbb inc sbb jmp out xor test leave and pop push (bad) (bad) sub xchg pop dec jmp mov mov inc leave dec push pop xchg add pushf xor repnz add sub loopne push sub add dec dec jg mov jns neg pop fnsave outsl sar aad neg mov jno test cmovl mov fistp fmuls not neg mov mov test aam adc mov jne js inc hlt cmp jbe (bad) pop jae or jecxz jne jmp iret cmp jbe pop mov out test add pushl ficoml mov mov test je cs add xor test je negl icebp xchg adc inc dec and mov inc jl fldl xor (bad) inc sar mov jne cmp setle adc mov sub jbe loope aaa in xchg das cmp divl cli and pushl (bad) xor div sbb add (bad) mov div mov ljmp nop mov (bad) (bad) fist mov std mov mov mov shr mov or shl fstp std fisttp or jmp and shl mov es cld ja icebp or mov mov shl cmp mov divl mov hlt sbb outsl cmp mull cmp mov out or or cmp jae lea sub sbb mov ret cmpsl sbb ljmp sub sbb rcrl xor shr shll sahf and mov test adc ja push sub mov outsb sub and pop or imul inc icebp dec addr16 nop push add jmp ffree jmp and (bad) mov ret push inc jmp call sub push fistpll or call pusha out xchg add xchg jg jmp ja add mov nop sub mul xor xadd test pop nop rcl or loopne push call sbb mulb pop push pop dec icebp jnp cmp (bad) mov jle and sti outsl ljmp mov call (bad) mov inc add aam adc decl push add adc jo mov mov dec add pop add xchg outsl in add call mov mov push out push jae and add (bad) mov (bad) dec dec dec push add jo pop iret aam les pop sub aaa pop call add andl sub add and enter or jae pop pop jmp adc test repz aas test add aam sub lea sbb dec and xchg je dec add pop sbb call fmuls push into jge push xchg inc dec orl divl push movl (bad) xor sub das jae jbe ret por dec jb add jns or lret sbb or or roll out pop movsb sar call or lahf jmp dec pcmpeqb and or push psllw std ja and add pop jmp (bad) into repz add idiv das psraw lahf and int3 iret sub add scas jnp pop push push sbb mov xor or mov add pop lea inc in out int3 fs pcmpeqb xorb sti jb cmp pop in sti pop mov sbb scas xchg loopne add out pop inc pop pusha mov dec mov orb cmp stos adc test in add (bad) fldl shll jmp mov xor loop mov mov lock out je pcmpeqb xchg pop int aas and cmpl push pop ret add pop call pop ret push adc cmp stos aas ja mov rsm repz enter pop js adc and xor ret xor (bad) sbb je es cmp pcmpeqb inc pop xchg out jo cmp popa pop xchg push shrb out cs pop enter test inc aaa out adc hlt push stos sub stos sbb stos rcrl sub stos das pop jbe cmp mov je and mov mov cmpsb cmovb je ljmp lea push pop inc test jbe cs xor clc sar out outsb add popf call dec push add or xchg inc pop sbb aam cpuid mov ss outsl add push loope cs mov ret mov push fs adc fmull pcmpeqb outsb popf cmp pop fildll jge mov xor pushw (bad) popa lret lahf call sahf inc incl sub ret mov cmp pop jnp mov imul mov int3 sbb jb je mov dec (bad) je negb push int3 fs popa and je xchg insb ljmp push pop (bad) (bad) adc inc int3 popf pop inc push cs pop pop or cmpsb enter cwtl fwait inc ds sub push stos jle rcr lcall cmp cmpsb adc pop outsl pop insb dec jo call je sbb je pcmpeqb xchg push ljmp cmp es cs pop cmpb insb pop stos inc and push pop pop clc mov dec rsm arpl xor jg cmp nop loopne call je add jno subl stc je sbb add inc sbb decl pop movzbl cmp je mov ljmp ljmp dec cmp je cmp jne mov or add flds dec or push dec cmp add bound add mov clc iret (bad) lea neg jmp pushl leave jmp mov leave jne add mov pop adc iret mov clc ja add mov jno mov call test aaa add add daa rcl push mov sahf (bad) add call sub mov mov mov cmp cmp cmp add shrb adc mov roll loope add gs add mov add jne cmp jne mov push add mov (bad) jns cmp mov jb sub pop add shll test js add mov lea movzbl daa mov mov orl std popa add mov mov rclb (bad) mov pop lea jbe and movzbl test call mov adc int3 push shr call and test (bad) push or sbb xchg iret arpl scas loop xlat push pushl push inc or and not add pop add pop jg movsb pop stos pop push add xorb mov mov dec fisttpl cli call xchg cmp pop jg orps loopne mov jbe cmp stos (bad) incl adc push je cmp jne mov call push add enter out and out adc sahf ret xchg sbb or xchg or (bad) ljmp and add ja lock jne mov lea hlt pop add add fcos shlb inc jg pop leave ret mov ret (bad) sbb scas xor adc mov mov push pop popa iret mov dec lahf and adc push xchg nop cld mov or stos adc nop mov dec adc push and call ficoml cmp add call ret call fidiv call pop call nop nop mov xlat add lret xor lods fstpt test mov (bad) dec std sub sbb add dec pop mov mov cmp mov aas sub cmc mov fdivrl outsl cmp out sub outsl push out add out scas push sbb outsl out call inc imulb dec mov scas lea sbb dec int add xchg ss lea call call insb ret idiv xor sahf push aas mov push aaa aas dec pop add xlat lret std or inc pop sbb pop rolb and add push jne lea test (bad) inc je mov lea cmp ja je mov (bad) mov into jae pop jae jmp xchg cmp mov jae mov mov cmpb lea test jne sbb jg mov add cmp push inc add imul inc (bad) (bad) popf mov push pop mov jmp add mov iret sbb cmp lahf decl out cwtl jne addl inc add cs pop mov xend mov jmp ret scas loope aas xor mov jg inc jmp ds mov push mov jmp jo cwtl call nop bound into mov or loopne int aam sub es cld ljmp add inc je call call call jo mov push dec inc push (bad) fcoml push scas pop lret pop outsl or and mov (bad) mov or inc rolb lock je mov cmp ja jmp mov mov fidivl mov mov icebp xor cwtl and dec adc incl add mov sub cmp jbe (bad) (bad) call lea mov mov mov mov mov lea jmp mov mov jmp (bad) mov enter lret dec flds xchg cltd scas nop add or sbb divb sub jecxz imul (bad) xor shll pop lahf (bad) mov jg adc add fadd inc add push xor push pusha test in aaa test xlat movb ret nop mov fdivs xchg mov cmp and into or (bad) pop or push outsl cmp and mov call (bad) (bad) (bad) mov sub lea and lea mov mov sar dec mov sub mul shr lea add sub test movzbl pushl rorl fidivr jne ja mov je or lock (bad) sahf adc push mov decl mov sbb jle adc pop add inc cmc insb and repz fist lea mov jmp nop mov addl pop shr (bad) aaa pop jae sti pmaxub cmp mov in mov add cmp je cmp sete add jmp jg dec loop mov sbb mov test je mov sub add jmp ja leave pop cmp je mov ret add pop adc in fdivl aas sbb (bad) jne movb mov lea inc std scas mov jne test pop sbb into inc rcl mov sub inc shr add cwtl inc test jle add (bad) or sbb mov sub iret mov add out das movl dec loopne das mov mov sub dec ret and flds xlat call out mov outsl sub (bad) int3 jmp sbb mov jge mov sub push or and fisttp mov pop popa mov lea dec rep xor xchg in decl mov (bad) cmp lea lock lea rep mov mov popa cmc adc pop cld and mov inc add xor or dec and cmp (bad) fucomip jne or call mov mov cmpb je xorb (bad) xor sbb push (bad) sahf call mov mov pop or and mov and and stos xchg sti call daa add xchg add dec call add cmp int3 or xor cmpsb jb je call adc ret sti bound sbb in out jo cmp call add xchg in ds and ds jbe cmp mov dec cs jne call mov sar or les (bad) mov pop xor pusha inc mov test xchg add mov mov lods call jmp call pop (bad) enter out pop and inc call loopne into lahf inc fnsave loopne into mov lock xchg out mov mov cmp adc or nop mov mov mov cmp sete lds push push out ljmp mov test push decl divb sar ljmp pop ret mov shl test jge sar add std mov stos or (bad) mov add cmp jbe enter mov cmp cmovae lock icebp out and roll mov jl inc test sub clc jl ljmp or mov call add sub sbb cld pop adc mov and test clc add mov jmp xor ds lock cmp dec mov mov bound das sbb data16 add add or test cmpb mov je jp mov mov lock mov sbb clc ja mov movb testb mov and rcrb push and adc mov dec add (bad) jge inc mov test popa outsb adc cmp ja fmull test jne mov sub idiv (bad) decl and out add jno mov lea cmp ja jae inc or xchg clc outsl test ljmp ljmp movb je nop adc inc push sub in dec in and inc pop in add sbb adc sub ljmp and aas push add adc roll jmp adc sub lea cmp cmovb xchg jb push in mov jecxz sbb orb sbb cmp repz pop cmpb mov ds or cmp xlat mov fistp mov inc cmp mov mov ljmp cmp test add add (bad) lea shr add sub adc aad push add cli cmovae mul js adc cmp xor mov add mov mov jmp ss add lea add push inc dec movsl push (bad) rorl add rcrl jmp sub pusha lret push imul adc lea or adc lea cmp cmp xchg cmovg out mov sbb mov lods mov cltd (bad) mov mov mov mov xchg and dec insb das add in xor addr16 xor inc push dec sbb lcall add add xor data16 dec into adc fstpl std push popf test sbb dec loope add popf add jno mull jmp sbb push leave push and mov jmp mov mov push lahf adc fcmovbe mov mov stos cmp lods ds push mov mov jmp or xor adc out scas mov cmp xor (bad) and jbe addr16 test fsubs xchg adc out jle hlt mov cmp adc sbbl (bad) leave adc cwtl test and cwtl dec adc les mov (bad) out cmp xor (bad) fsubrl or in inc mov call mov mov or repnz sbb daa gs or push sbbb pop add cmpsl xchg and xor ret add pusha mov call outsl cmp add sbb fisub xchg inc daa jae adc xchg adc add or cwtl or and leave fisttpl int3 push aad and mov sbb (bad) mov loop insl push jbe push jg or in sbb mov aaa aam push movsl jb jle cmp pmaxub je test cmp je test push dec sub roll inc sbb jmp ljmp je jne cmp movswl add sbb je mov mov inc adc (bad) mov je mov add and inc adc add fcmovnb jbe add dec push cltd aas pop loopne mov sahf iret lea cmp cmp movsb sbb imul test dec inc xor in pop icebp cmp iret or pop add dec dec sbb mov jmp (bad) fbstp inc add out ja sbb test test (bad) ljmp fdivrl mov jne mov mov add mov lock push insl push add add aaa out or call out mov cmp mov movsb lea mov ja stos decl movb jg movb jmp add jmp iret mov cmp jb ja je inc sbb test lahf cld inc adc sub movl sbb or jl ret iret mov adc cmc aas jne add mov mov int3 inc inc les or push mov jl sti xor jnp jae or in sub mov fwait shlb mov (bad) mull daa bound jg mov mov add and add call cmp and and lcall cmc dec add incl push push ret adc add mov add ret arpl pushf test or push and or xor and test ret inc (bad) jg fsubs or pop add ja popa jbe or orb and ret cmp cmp pop inc jg and cmp jg mov or pusha call iret sbb dec add iret dec or push iret cmc ret or jo cmc iret (bad) adc adc sbbl push sbb mov das loope sbb add ja rol mov mov inc ret les call loope add mov jnp jmp test jnp out decl pop jne decl xchg xor jl mov mov (bad) mov movl inc ja pop add inc mov xchg mov pop push mov insl cmp pop imul xor aam cmpsl pop push movsb mov jg mov and mov cmp test stos xor aas das hlt mov or sub or adc jae loopne das dec sub dec and jae jne jmp adc push sti xor out jo jnp adc mov lret dec ror lcall ja lret nop sbb loope out push popl sti mov out cwtl jg cli (bad) lcall cs inc pusha les ret sbb in call lcall (bad) jg and add and and jbe sbb adcl xor or cmpl sahf mov adc jecxz jne cwtl sbb incl dec jg sbb and ljmp cmp jg test cmp or (bad) aas jp cmp ja test mov je add jmp sub outsl and clc sbb out pop jne adc add ret cmp jne cmp mov les cmp ja (bad) dec adc inc pop mov pop sbb push das jne cmp pusha ret xor (bad) test mov cld adc cmp or loope fdivl xor std inc sub add xchg idivb or sbb pop insb adc jmp fistp mov mov rolb int3 lock out rclb (bad) pop out test out std and faddl sub out add ja lds cld outsb int3 sbb out dec or sbb out hlt adc out orb mov xchg iret cmpl push jmp gs push lcall mov outsb sub ja dec xchg mov fsubrl xchg icebp jb jmp in fdivrl test insl inc dec out mov pop cs xchg jmp fbstp pop lods xchg outsb (bad) fldt cs es je (bad) fcmovu mov outsl mov fidivrl mov mov inc xor jno jae push (bad) fstpl ljmp shr mov andl dec and cmp cmpsb and jns dec or adc jg cmp add mov mov xor xor leave into popl outsl adc inc lret fsubs insb push xor jo xchg dec scas xor adc cmpl mov cmp xor jp scas mov mov inc call xchg xchg pop jae movsb fadd adc mov fnstcw adcl push jnp lea mov ficomp push add add xorl mov add push pop mov xchg icebp push popa xchg dec push cmpsl add sahf arpl inc cmpsl dec outsl add add mov jns imul cmp fs cmpsl inc dec imul add in addl dec cwtl fwait int3 aas push xor lock push cld leave fs dec dec or subl test adc cwtl sbb xor push pcmpgtb data16 and xor stos repnz mov pop cwtl mov and lock fiaddl sub pop shr add sub lea dec xor loope test add test gs call add mov xor sbb jmp fs cs dec adc clc or rcr hlt dec push dec cmp jae add out adc mov ret xchg sub fdiv sar call pop sub adc jnp mov lret lods (bad) icebp sub pop cmp mull jmp call fwait out jg sbb jne mov sbb fbld lea cmp jbe jne xor cmp mov jbe shrl xorb inc rcrl fadds cmp je jge adc sbb loopne rorl mov das pop jno mov ja bt jae push cmp leave pop adc mov call insb mov add push add mov mov mov mov xchg outsl xorb push dec or in imul pop mulb insb je orl pop jo shl push jmp ret mov incl enter add movl jae mov mov test jne test cli sub pop push add test aaa or add iret rolb sbb or pushf cltd into push push fisttp fcomp aad push out sti jmp add adc ja jg fisttpl mov pop je jae pop jb xor push fs push stos pop (bad) mov add popa add (bad) lock mov fmull xchg ja jae adc fcomi pusha push data16 lret add loopne (bad) cmp cli cmpsb cmp enter ja addr16 imul iret (bad) sub jo xchg xchg mov xchg stos or dec add or xchg jne mov test mov cwtl or or xchg aad adc out addr16 cwtl mov orl (bad) incl aad pushl xchg inc mov mov mov shl sub test mov or hlt decl inc incb jne ja (bad) mov (bad) lock jmp sbb add xor jmp dec cwtl adc es lahf movzbl cmp (bad) or rolb sbb cmc push pop cmp (bad) (bad) inc xorb jg daa fdivr into dec cs cmp jne mov xor call mov jb push push dec movsb jne call je pop inc jae xchg test lret adc cmp test std xor test daa in std jmp ljmp jmp cmp push or sbb out mov xor mov subl movzbl insb test mov pop out ja cmp jb test in adc (bad) jmp std mov shl sub test mov popa xor test or lock mov cmc jb fs dec arpl add andl and ja pop arpl sbb or ret pop sub (bad) incl shr add mov sub lea cmp cmovb test (bad) aas add and pushf pushw jo jmp sub in jmp into shlb aad cmp sar (bad) fisttpll pop adc jmp inc fstp sbb test cmp in shll dec adc mov inc outsb or mov arpl pop fldenv push inc dec hlt ret push mov sbb rorb pop (bad) push mov (bad) xchg and sub xor js (bad) jae je cltd xchg lcall iret sbb add shr push repz inc out (bad) (bad) fistp into sub add inc (bad) int3 push jo out and ds xchg xor ljmp cmp dec sub outsl negl jno mov test jp clc mov sub add push sbb insb push in add pop xor outsl mov adc pop outsb sub and adc loope or cwtl mov sbb scas and or mov bound imull xor fs fs sbb cmp adc and test dec xor mov jo orl test mov or mov inc hlt mov jmp mov arpl fadds mov sbb mov sbb adc mov loopne and mov fwait rolb jle adcb pop jo sbb jmp icebp out (bad) mov inc loopne sbb ss cmc or out (bad) sub pushl aad ds inc jecxz call and mov lea add call cld dec movsb flds jge test and test adc inc std or cmp inc inc or jmp ret adc rorb shrb data16 roll aaa adc jg jo,pn or mov test loopne js xchg and or sbb and addr16 clc imul xchg dec add dec sbb test jmp jnp jmp int3 mov jmp outsl and dec or xlat cltd imul and gs jle xchg sbb mov jae out mov xchg adc cwtl mov jmp cmp add jns call and ret sbb mov push jmp and lahf jl add cmp clc push mov mov stc pushaw xchg cmp mov xchg sbb test fmuls push dec jmp jo or jae add jle rolb adc mov adc ja fs or mov test or or rolb or repnz jg adc push (bad) (bad) call data16 es xchg cmp adc js sbb cltd pop push lret jae aam in sbb jmp xchg xorl insl and push test xchg popa adc cmp pop (bad) adc push mov lret inc jge and adc xor dec jb ret adc sbb push jae dec push call pop cld fwait sbb jae push push or adc pop repz outsb ret outsl int3 andl dec add dec lods movb dec sbb dec loope fwait lret jns fs add (bad) jo mov repnz jne mov push mov pusha incl jmp dec push popa jo ffreep adc xchg call outsl test popa test mov sarl ds jl sarb gs shlb mov xor sbb pop jae sbbb or loopne cltd adc jae pusha inc int js mov aaa leave loope imul ret or pop fsubrs sbb adc adc stc das jne gs xor mov or xlat inc xchg xchg lret or push cwtl mov and ja push lock test mov push mov push lea cmc dec push add sub aaa rorb mov mov mov jp je jle jle push daa cli das cmp je movl inc in cli mov lea sarl lea pop jmp call add je iret mov dec icebp (bad) jge add mov mov mov pop rcrb cmp int3 jne test mov mov call mov lea mov sub dec jns cmpsb mov mov nop (bad) pushl sub test and add movzbl push pop insl cli popf jae and mov jne add imul cmp mov lea mov addr16 loop call bnd mov and cmp je jle cmpsb ljmp xor mov into and xlat and mov push mov fdivl jle jns mov sub adc pop mov mov mov push xor incl cmp je sub jnp jnp xchg push imul mov enter dec jae and (bad) (bad) pop cmp cmp ja adc movzbl lea adc xor lea dec add lcall add into mov je xor les (bad) jbe mov mov movsb rorb (bad) out push stos test jne pop cld call les mov mov movl movl or ret lea mov cmpb jne add ja add jb lea push mov gs dec add and jns aas int clc ja and and nop add add int3 jge jne jne cwtl orl jle jg xchg pop dec inc and mov cli jmp nop mov test movl add mov xchg loope (bad) pusha das mov jg sbb (bad) out cmp je je movzbl sub cmp ja rorl xbegin or (bad) and mov je and andl imul or mov sub add incb je sub lea daa adc push shl pop cmc sbb lea sbb adc jp mov xchg dec andnps sbb (bad) icebp jae add repz jae lea add mov (bad) (bad) jae lea cmp mov je mov (bad) mov xor jbe mov add daa cmp jo sbb add jns mov push push mov mov cmp pop incb pop pop ds pop jne xchg cmp maxps and pop adc pop pop push or movsb dec mov test pop push pop scas scas cmp add cmp or and clc outsb lret mov or push decb inc bound add inc fldl pop pop popa jne ds fnsave test lea outsb add scas cmovle mov pop cmpsb pop js in outsb je xor mov (bad) ljmp and jae inc xor sbb popf push popa iret jg in xchg iret push dec jns addl sub (bad) push mov xor xchg mov mov adc sbb push adc pop iret ja imul push inc cmovb movsb mov das adc shr sbb push iret je lret cld mov jmp mov movl mov pop and movdqa pop sub mov lds pcmpeqb unpckhps jnp ss mov sub pop mov pop outsl je daa std adc por or into jne icebp add or add xlat enter pushl movl inc repnz jmp aam nop (bad) dec sub xchg and (bad) inc xor jg fcmovnb fsubrl mov hlt ja jae mov jne je mov jg divl cmp inc add dec sub lea push lock shr add mov sub lea hlt or adc ficoml add std call lock dec in adc mov inc (bad) cmp mov jge aas mov sbb scas stc dec cmp jb or mov inc ja (bad) cli int add mov jmp shrb or cmp andl cli loope (bad) sbb (bad) movaps mov sub loopne sub sub (bad) cmp sub movaps movaps daa or pushf mov cmp popf daa push mov je test cs mov js sub jne cmp movsl xchg mov sbb sub sbb dec xchg sub cmpsb sbb mov stc movaps cmc jge adc jbe mov sub pop fildll jb test or shrb popf cld call push out inc dec sbb mov stc fimul mov outsl lods xor movsl dec add popf sbb push jae jp xchg cli mov adc cli (bad) je inc add ja bt jae mov out and pop jge lock je outsb inc pop jle ljmp clc add test insb in mov je and inc push bt jae cmpsl dec cmp adc xchg stos jp call (bad) movzbl aam jne nop sbb fcmovnbe test add lea cwtl test mov jg and andl mov xchg jnp mov push adc loop cmp iret ds cs cmpsb inc add add (bad) jae push fsubr test pop push movsl (bad) ja sbbb fdivr and (bad) pop cmpb je outsl rorl out cmc out mov lds sbb (bad) or or test (bad) push lock orl cltd lock test lcall jns insb inc adc lret mov aas mov repnz and mov adc inc jg,pn mov pop adc hlt jbe cmp add push mov jo fsubl imul mov ja jae mov inc inc and pop jmp inc push enter add in enter mov aam test scas sbb mov mov faddl mov out add in daa or ret mov adc or adc sbb (bad) clc fnstsw cmp je push add inc jl bt punpcklwd and into aaa test (bad) sbb dec sub cmp arpl mov sbb sub insb ja mov cmp scas mov sub add (bad) adc sbb in mov mov xor inc mov je inc jbe arpl stos aaa jo inc repz push aas jl adc and mov jp (bad) mov out (bad) incl sbb mov test or mov test repnz dec or dec inc imul fs xchg sbb rcrl mov jg mov xchg movsb push cmpsb mov jle sub jge push jmp lods popa leave and ficomp shlb mov add andl push and or sbb sbb iret test jmp pop icebp andl or and sub test arpl inc in sbb lea mov (bad) out call and (bad) mov shl mov clc cmpsb (bad) in repz mov jnp jne dec dec inc sti lock inc mov dec mov adc cmp pop cmp nop mov pop fsubs cwtl (bad) fcomps jae xchg xchg sti stc scas push add test out xor call jbe pusha lea inc add out aaa mov xchg js push ret subl out sbb mov js mov and xchg or dec mov mov js dec adc pop out stos and mov jmp xchg test inc xchg cld xchg xor jge lds je xchg ret adc lea mov lock je movzwl mov rorl inc (bad) add jmp inc in push dec (bad) jo xor dec jge sbb and inc dec xor (bad) xchg xchg adc cwtl lret add mov dec fdivrl sbb or scas (bad) out rcll scas push js cs xchg sbb int3 lea or ja inc inc int3 adc cs sbb sbb js xor cs adc xchg and pop shr lds sbb mov nop jmp rol dec xor xor mov scas xchg rclb stc cmp cmp inc (bad) xor in shrb jne mov xchg nop mov mov call jb insb sbb jnp orb mov jne movzbl pop insl mov mov mov cmp cmp push mov cmp test mov cmpl out nop add ret rorl enter mov add adcl xchg add push ret shlb cmp das pop adc rol ja popa mov jns imul in and shl mov popa clc push ja jne xchg cmp inc and test je cli xchg jo mov repnz ss mov add ja enter adc out push cmp negl lea test cmp jae or dec adc call aad iret jae mov sub not and nopl ret pop or ja incl test push cmp je cmp je cmc sbbl cmpps sub jecxz jae or inc sbb dec insb call adc cli jbe stos and (bad) and aas (bad) and test daa insb adc (bad) cwtl orl jae arpl jo lea bnd inc mov inc inc sub dec mov sahf inc loopne push popa je lea inc sub ror xchg jmp sub loopne inc js xorb mov and adc mov sahf push aas inc dec jae sbb ds dec adc movzbl or xor sub mov inc add fadds ret mov push cld inc jbe mov pop add daa sbb sub sti pop mov jne add out push mov test sub sti sub call jp repz lea inc add and cli sub insb bt jae in mov add inc xchg and ret push or ret push rcll lcall and mov bt jae jnp sub or fcoms sub dec pop enter push cmp popa jae (bad) lock dec gs (bad) adc dec rdtsc dec push ja clc jae inc dec mov test insl jae ret push and fbld adc cli mov jb adc mov (bad) adc jno test jne cmp jne arpl mov mov jno mov shl mov sub test mov cmp adc inc incl mov mov mov mov addl jmp shr pop enter jo or outsl and (bad) adc pop adc rclb adc sub (bad) sbb push pop cmp gs je aaa or adc jg sti loop fsubl or je jmp nop add jge sbb adc pop outsl push mov jae jmp inc test sub pop or or rol and decl mov add jmp pusha mov mov lods cli sub gs add call pop adc sti cmovb pop fwait add out pop in je sti ds aam jg jge inc and fmuls xchg rcrl je addr16 push cmp mov pusha sbb or adc or rorb jmp pusha mov dec in add sbb dec roll mov cmp and popl add xlat cmc cmp jne dec xor into dec xor pop (bad) sub inc or in je dec aaa je dec iret cmp ss data16 (bad) dec dec (bad) jae incb add jmp loop lcall cmp mov je pop cmpsb jecxz mov pop loop xlat hlt pop jne pop mov adc scas mov lock clc add pusha adcl lret push xchg test int3 stc arpl std scas xor out inc shl (bad) decl add outsl fsubp mov pop add sbb sbb cmp adc jno add (bad) aas sub test inc ret jo add jmp cmp in in jmp (bad) cmp mov (bad) push mov ja scas outsl push fbstp inc movsb js pop jmp decl cmpsl dec or dec adc hlt jae test pop or aas and aas and push jo and incl sbb add jae,pn and pop lods cmpsb and push mov xchg es (bad) pop or jnp adc cmp mov pusha mov mov rorl add jl mov adc loope (bad) cld in jne out xchg mov mov es push push out jnp fdivrl xor dec or (bad) fwait dec and xchg jg ret hlt pop pop pop test mov in bound jne mov fs and add cmp aas cmp mov jns in (bad) jnp jmp cmovl mov iret in sbb jmp ja cmp pop or add aas push inc add push mov mov (bad) pusha xor shl popa pop xor jnp and decb test call and ja mov xor insl mov es jmp cmc aas jno incb test jmp sbb cmpsb jo push dec add ret sub sub faddl movsb fcoms popa movzbl push dec icebp test ret stos out add je and pop adc ja,pt dec popa or andl fldl sbbl ja push jae xchg (bad) mov mov add jecxz shll dec (bad) jmp xor or xor ja stc or add jp pop and aam jmp jae dec cmp arpl xor or lea add push stc scas loope sbb sti imul cmc sub jne cmpsl xchg and (bad) dec icebp sub xchg sbb sbb xchg adc jno fdivrs mov test pop bt jae push pop es dec xor aaa push sub movsb clc adc je ljmp or mov fdivl sbb mov xor jle clc mov in mov mov sub (bad) addr16 add and movl popf pop lods clc mov aaa rorb dec clc (bad) fisttp mov push xchg enter xor es or sbb lcall cmp ljmp jb mov scas (bad) mov add mov adc xor jns jne jge push add outsl scas add pop xchg imul add mov je mov movzwl push bsf cmove add jmp test std iret bnd sub jp inc daa aas sti adc inc sbb xchg ficom or rcrl and xor pop add (bad) sbb incb ljmp or mov jmp sbb dec das sub jp daa pop fnsave fdiv mov mov push or xchg xchg or dec je adcb or daa and ja (bad) cmp jmp mov and mov push sbb xchg aas adc je mov cmp enter (bad) mov push in adc mov les push jne es lret repz push xchg lcall sub and icebp loopne mov outsl lret and lds push jne das sub popa sub or mov loop mov and test push into aas or decb inc cli add jmp nop or roll inc sbb outsl cs (bad) jg jg add sbb and xor add popa pop pop orb (bad) ss (bad) dec dec xor cmp xor jmp cmp test jo repz insb push ja mov inc xor in pop sub cmp (bad) inc out inc inc je sub pmovmskb xor cmp add dec in gs stos std jg sti sti negl and jg pop dec in inc sbb fwait mov mov jmp xor and mov lock out dec fcmovnb jmp jnp nop sbb xchg and into add dec dec jo pushf xor pop or inc pop mov iret enter jno lret mov sub mov mov (bad) ficomp lods inc pop inc sbb add sbb xor ret push ja jmp (bad) jb mov daa lret in sbb shr in aaa sub mov test (bad) jb mov aaa mov enter aaa inc xchg sbb xor inc les aaa xor movsb add dec or sbb js imul fisttpll add or and sbb leave xor (bad) jmp adc mov jmp inc inc rcrl mov adc pop add add mov cmpb arpl not jmp adc cmp mov jmp (bad) push or jmp lea aas or test jae cmp jmp loopne mov imul or loopne mov outsb cmpb js mov pop ds or mov jle loopne jno jmp mov jp je pop int3 hlt cmpl push in push divb jbe inc jo mov push cwtl add jbe ja jmp sbb fdivrl xor inc loopne inc sub stos xchg jnp mov fisttp fdiv in fisttp movl in test aaa dec and (bad) sbb std mov xchg clc ret call jne xor jns dec xor fnstenv xchg xchg or push adc in push mov std out (bad) and mov mov mov loop add (bad) (bad) cli mov movsbl cmp jne cmp jb dec or decl add inc add pop and outsl add call ret xchg lea (bad) (bad) inc inc and add push add (bad) lea mov cmp rsm pop (bad) xchg push add cmp jbe add xor loop and cmpb lea cmp jg cmc decl ja mov movl idiv dec int3 int3 or cli movsbl ja lea add cmp inc shrl movsl lea mov pop add out aaa push sbb rolb dec jbe cwtl test mov int3 inc je push mov mov mov push rorb icebp sub add xchg cli notl push rorl mov and add arpl out cmp out (bad) scas or add xchg roll int3 or push adc lret mov je or cmp fdivrl lcall jl mov push and mov fildll (bad) fcomip cmp mov cmp movups comisd jae mov push adc sbb sbb into or mulps cmp jae cli (bad) cmp pop out leave sub cvtsi2sd out (bad) aaa sbb add addps ja pop ret jae jbe cmp or jle add push mov out out (bad) jle movsd add or add faddl daa mov scas jae mov cmp mov mov divl lea mov or mov out scas incl in add sbb aaa mov adc movzbl sbb jne sbb cmp pop lods das je push les and dec push out movlps or mov data16 ja jmp pxor loop mov subb add xchg cld or adc pop repnz jne,pn jbe mov xchg add add test sbb sbb sub add xchg sub mov dec shll add inc inc fucomp jne or add gs mov sbb loope sub pop push (bad) jg jnp mov mov mov imul jb das xchg lock test cld add das cmpb das cwtl cltd cltd sbb and dec das in or cmp mov cltd inc je arpl cltd add inc xor pushf adc ja in xchg xor mov sti dec jb xor xor leave pusha cmp js out icebp jmp jmp or mov inc add and or xchg mov sub mov inc inc out add out xor lock adc daa jp dec je and inc mov dec into hlt outsl shrl test jns fadds pop push jge inc inc je cmp add cmp (bad) add aad sub mov je loopne sbb mov push push aam aam in andl or push ffreep lds xchg cld mov sbb ja dec mov inc rcr adc mov lods xlat and pop inc cli inc add and test pop cli cmp mov into inc add test adc or cltd add fldenv ds notb mov push adc test out in outsl inc xor mov xlat aas loopne enter add add inc scas mov dec and or shld xchg xchg sqrtps leave dec adc (bad) add jb test mov inc test dec add sub mov int insb xor cli mov outsl push stos fdivrp or mov je sub (bad) cli or xor mov sbb dec add rolb test push jb cli inc sub aas inc sbb ret lea jo mov aas ret (bad) xor ret mov test cmp push jo add jg jo mov movsbl push orl add add cltd fwait ds jg lea mov mov cmp ja decl adc mov lcall movsbl lea cmp loop (bad) mov inc cmp add (bad) or inc and pop sub dec and cmp dec jl mov inc ja mov add and dec xor add xorps fwait clc incl lea cmp ja or rorb test push push mov imul call (bad) jne push push dec cmp pop rorl jno pop cmp cmp inc cmp pusha cmp mov pop call in adc lods dec jbe fild fs jmp jge fmuls test cmp add dec ffree inc sbb les dec cmp sbb and (bad) aaa sbbl jmp add lock and lea mov and ja pop lea rolb xor aaa cwtl js jmp cmp mov mov adc int3 push add out dec jne mov mov inc add xchg jo pop (bad) lock add push or ret nop cmp mov xchg test xchg int add test inc les mov push rolb test mov jg (bad) mov mov cmp mov push sub adc lea mov mov sbb xchg pop inc xor push xor inc or sbb add jae je xchg aad ds js pop add les cltd mov add add and pop push jge movsl cmp sub out daa stos add adc ret inc mov mov out out xor outsb add dec fcomps arpl lea jae or cmp push pop or cmp pop arpl mov jl or xchg push mov divps loopne sub dec ja mov imul mul xchg inc inc scas ljmp adcl cmp sub push push mov cmp cmp shlb xlat rcll sub std pop jg mov hlt (bad) pushl cltd ja push shr or inc arpl mov ret jne push sub (bad) sub das cmpb jne pop lcall add (bad) xlat and jl push add jo add sbb daa pop or or jae les addl adc inc pushf (bad) pop cltd mov outsl cltd test fwait decl add cwtl sbb call add push or scas and dec inc enter jge fdivs incl inc sbb mov psubsw push mov loope adc incb movsb cmp and jmp push (bad) mov inc ja sbb inc sbb ljmp adc add mov xchg popf call bound add popa mov pusha sbbb dec jbe into scas sbb mov cmpsb xchg xchg inc xor test mov dec add pop sbb orb ja jne sub sub mov and inc inc nop out add mov jmp cwtl inc ficoml mov lahf cmp sbb cmc enter int3 jo (bad) inc and xchg mov cmp jne inc xor fldt fwait lea pop add dec mov ss (bad) out jmp lcall inc ret jmp movsbl jmp (bad) jp aam sbb add and outsb je add hlt or out inc or jmp and and jp into mov das je stc sub mov push and cmp andb test andl dec mov jae mov and call and ret dec lea lea je popa cmpsb xor cs add jg mov iret or movzbl test mov je jg les test xor lea sub das dec aaa cmp iret jb or test push rorb idivl push push nop dec xlat neg mov mov (bad) out (bad) cmp lcall and sar (bad) testb jb mov jmp loop outsl dec inc dec add out int3 icebp movsb or push jmp add enter popa mov push and (bad) (bad) std mov xor (bad) fsubs loope and add jmp jne rcr xor xor jmp and (bad) fild sbb add jmp jae call xor (bad) (bad) in xchg adc stc inc movq xchg test jp or inc add sub ljmp adc outsl pop mov xor or or jns cmp outsb xor scas ja,pn insl push sub xchg lahf test popa or add mov (bad) pusha xlat push fild js add ja adc pop push mov outsb and jne add pusha ret or push ljmp imul sub fisttpl clc mov pop mov cmc mov mov cmp and mov jnp mov sbbl or jne jle mov sbb jg mov or push das scas and rorb test sub lea cld dec ja fldcw rolb pop adc and jg cmc jg adc call pop dec mov inc push or fldl (bad) incl lea mov add mov jmp (bad) mov ss jbe mov lahf mov jle inc jl nop cmp cltd sbb out dec jmp cmp test aad pop fldl or push sbbl lret pop mov jb (bad) (bad) mov dec push push inc loopne outsb add call shr sbb xor shll fisub ret add (bad) (bad) cmp add mov xor xor add loope push lock dec or dec and ja sub lea fisttp or mov aas sbb inc xlat ja or call or adc push mov rorl jmp and pop push dec add stc mov shll popf dec dec cmp and or jmp les cltd xchg cltd push xor mov push ds push (bad) dec cltd push jg inc and add cltd negb je dec add call add jl cmp daa mov mov push jmp push and jbe into lcall sbb aaa push cmp arpl jmp scas pop test jmp adc jle jmp sbb dec sub ficomp iret daa cmc daa mov jge out or mov (bad) movsb sbb xor add ss and push push and pusha cmpsb sub in or mov mov rolb jmp sbb pop idivb adc cmp mov xchg dec pop in popa pop repz pop pop fdivrs int3 negl rcrl mov xor jmp adc add jp fwait or ja outsl cli insl or jmp mov jmp or sti add dec adc inc das and andl push add or mov mov (bad) mov mov aaa ss scas incl add movsbl lea cmp icebp sbb lea add xor js outsl loopne pop add lea cmp lea jne lods or pop adc jge fild xor cmp lea add jg inc xchg lea movsbl xor jbe rcr fstpl lcall jb dec sbb sbb cmp pxor (bad) fldl pop add xor xor (bad) jne sub xor push mov clc cmp sbb sub sub sub and xchg pusha jmp adc rcrb jo jnp jmp stos pop testl xor xchg and or jecxz addps ret add movsbl mov cmpsl jbe out sbb sti gs and test inc cwtl into faddl je fnstsw and movsl xor rcr xorb inc and mov jg orl rcrb add mov sub mov push cli mov nop cli jg adc pop lea cmp jge mov fs mov stc mov xchg add mov mov mov push mov fwait loopne ret mov xchg cmpl fldl pop jmp enter cmp rclb lcall xchg sbb sti sub jo aam and xchg mov andl adc ret lcall sub stos je cmp test mov xor adc js shrb cmp jmp sbb fs add cmp popa orb (bad) neg add pop rcrb or cmp mov pushf loope xchg mov je mov jecxz add mov rcll push xor inc mov mov push (bad) sbb xor add add ret inc add pop sbb pop shlb lea pop ret and fcompl lods or mov cmp jmp daa pop mov sub scas lcall das int3 adc adc mov xchg mov jmp dec pop cmp xor roll sbb scas cmp mov cmp adc movsl inc inc sub dec int3 cmp comisd fcoml test sbb mov in mov movzbl xchg rorl and sbb jb sahf and adc lock jns jmp sbb (bad) add imul xchg inc pop mov mov jg cld push loope rorl mov add lea adc sbb cli addl sub sti out sbb arpl inc (bad) shrb mov mov sbb cmp inc jb roll jmp push or ret xchg int sbb push js inc adc fdiv jae cli (bad) dec scas (bad) xor dec rolb mov jo scas arpl pmuludq (bad) mov faddp adc fmuls mov add lcall es sti jmp mov ret inc les and fsubl insl jmp negl dec mov pop leave popa loopne (bad) xor scas jbe sub repz fadds pop mov rorb loopne aaa jne and test adc add cmp ja pushf addl leave jp je loopne sbb mov es jae,pn cmpsb (bad) push fiaddl neg test mov dec cmp inc mov ds mov mov jge add test jmp shrb or adc outsl movsbl shrb mov les cmp xor daa ficomp dec add mov jmp lea repnz sahf fnsave mov sbb fadds fsubr clc adc sbb aam mulb icebp shl push inc mov adcl sbb cmp sub neg mov mov sar and int (bad) out aad testb jnp mov jmp dec mov inc repz add pop inc or (bad) mov iret add cmpsl out mov popl xor mov scas sbb sbb cli jne std mov jmp dec rcrl into pop outsl sbb xor sbb and add mov iret and add ja mov cs neg inc or sbb lock aad lock push sahf sub lea shr add sub icebp ja xor cs mov cmp cmovb dec push or inc jl add add repz mov mov push and mov ss and pop mov pop sbb xchg and fimull sbb sbb sbb push inc jmp xor outsb and int3 popa and mov or xor mov insb push or push mov mov adc loope lret inc add mov xor mov sbb sbb pop mov inc icebp addr16 xor dec aad or icebp ret dec popf xchg mov push sub adc fcoms lea ja rcrl jmp xor pop fimull iret mov adc stc cmovae xor in add orb or ficom add mov inc sub inc mov jmp fistpll add call int3 inc cmp (bad) clc dec rclb dec push pushl pop inc lret push xlat sub lea inc adc stos cmp fneni(8087 (bad) cmp pop in fwait sub add or adc push xchg dec fwait dec mov xchg dec lcall jl xorl inc mov jmp mov xor jmp (bad) and loopne lret and lret lcall ret sbb je mov jmp mov std js test je push ja cs pushf add mov outsl and out (bad) xor cmp or mov and push cmp pop sbb test int3 pop and dec and mov dec or enter mov jmp jae and inc push and and inc icebp cmp or mov mov inc je ljmp (bad) dec cmp call and xor add mov or test pop stos fwait mov cmp sbb (bad) pop fstl xor mov mov jmp nop add mov mov mov lea cmp ja xchg mov add mov cmp cli pop je das or mov clc pop jbe mov (bad) out or mov push mov mov inc inc test out and cmp or inc popa clc lcall add mov mov jae in inc xchg xchg in push out cltd and xchg adc or sbb push jo stos pop sbb inc sub (bad) pop ja sbb shrl add (bad) inc mov cs and adc fistp (bad) pushl mov ds cmc inc or roll jmp inc mov mov mov cmp jb xor dec andl sub mov jb mov jne dec and test cld add add mov and push out jae adc mov pop outsb imul aaa push aad push mov add pop test adc popa lea pop push decl jae movb dec push jmp sar jg fisttp adc mov mov movzbl inc ret push mov movq roll push jmp or inc lock add ret ja and jmp xor jg mov xchg sub (bad) bound clc add lea fiaddl loop fsubrl push not add dec or loope out orb jo mov lea cmp ja lcall push and dec cmp mov movl add ja test test sub mov mov ljmp gs call mov ffreep or aas or fildll pop add pop sbb out cmp pop mov and das pop test and jnp mov mov add and push mov outsb and mov cmpsb add jae push icebp sbb aad lea and inc adc push add or fs and cwtl jbe inc adc xor loop stos imul sbb (bad) fsubrp pop mov es mov mov call sub enter stos das mov out pusha mov je sbb jge fist rorl add push pop je or mov mov incb push test mov add jne xor mov jmp popf outsl mov call mov (bad) sub cmp lock insb sbb adc cmp aad sarb shrl test jmp push mov and sbb push adc sub lea cmp cmovae xchg xor test je es outsb loope or insl js call and sbb push cmpb (bad) push shrb inc sarb mov jmp sub push mov cmp (bad) jmp es dec mov inc les sub sbb jmp dec mov inc test aad sub lea mov cmp scas mov icebp test je and call mov cmpsb lock add mov sbb mov add inc shr sub lea ret sub cmpsb sbb xchg mov ds jne add inc fdivr cmp sbb mov add fstpt push add ret add or fisttpll sbb push xorl dec add in jmp in jp ss mov cmp ja ret and or add adc lret cltd daa mov xor aaa push test std (bad) les xor adc decl dec lea cmp jbe lahf or mov flds aaa pushf mov shl add andl pop mov int3 adc or and inc out inc or inc adc mov popa roll lea adc test mov pop fnsave test fbld stos data16 add fucom (bad) addr16 xchg icebp add out fsubs cmp jbe cs push sub and shr cmp (bad) mov jno cmp lret shrb outsl cmp or sbb mov mov es lahf std mov lret cmpb adc xchg mov jmp aaa pop mov test je sbb mov test pop scas mov dec push cmp je in or icebp sub jmp mov or mov fdivrs and add xchg jnp sti jmp xor jl and dec sbb pop pop jg mov fldenv popf and addl push add jg lea arpl fucompp out xor sbb cs stos test pop scas arpl xor mov cs inc enter add dec dec cmp add ja and sub add int sbb and lret sub adc ds faddl push and mov jmp les inc pop and hlt adc or sub add stos pop les out (bad) lods or test mov scas and mov mov jns cmp or and adc stos inc adc cmpsl ret add pop decb mov mov cwtl sub cmp ja jae adcl test or xchg jp and and xor sub or push lret shl or dec js call popa mov (bad) jmp and stos mov dec out mov jp jg jp sbb and jp inc lea fxch or xor inc clc inc fwait and and imul je ja jge mov adc shl or ret add mov repnz xchg jmp (bad) or jge aaa incl add stos mov icebp xor xchg jnp dec lea jnp xchg movsb pop cs mov cmc sub dec ja add lcall sub sbb mov ljmp and push adc cltd cmp push adc jo pop (bad) or movsl or (bad) sub jno cmp (bad) xlat inc and adc jno and and jg sub pop rorb mov jae push add adc xor push adc pop push scas push test nop mov pusha ret data16 or cmpsb rol xor pop dec stc (bad) decl ret or lea jmp clc or shr or jbe fdivp jg sub (bad) nop sbb or jo js divl cli pop sbb and dec cld imul or inc popf inc and inc or sbb inc mov cmp cmp ljmp sbb or rol xchg sbb in inc cmp inc cltd mov and adc cmp insb les jmp xor xor pop jne fwait ljmp je add fildl nop hlt pop shll call lock dec fistl outsl add es (bad) jmp cmpb insb and les (bad) xchg inc or inc sbb je fcmovb sub mov push lcall test mov leave sbb and test pop out pop ja push and jmp jnp orl adc test sti fisubrl lahf stos cld leave popa xor jmp or xor sub and cmp jmp int3 add jmp or mov inc pop or inc lods shr mov ret sbb inc and sbb call sar (bad) xor out cli out loop aas add test mov inc adc jg mov jmp push add push inc xchg sti sbb arpl mov lods and fs sti inc adc xchg mov mov or push or data16 sub loop stos sbb pop push jmp pop addl push pop mov dec adc jae out pop mov addl mov add dec scas inc add mov or fisubl leave faddl pop adc scas xor fdivrp addb sub jbe pop mov xchg movsbl imul in mov call push data16 jmp xchg add ret sub mov and xchg test lock mov (bad) cmp mov fcoml sbb mov dec sbb ret add mov mov fwait je das lret sub add fwait sbb lods mov push sbb mov pop test ss loope cmp add jne xchg pop pusha bound idiv fist movdqu mov mov or and inc pop cmp aad and fistpll adc or add push sar jnp and cmp je test jg add and test movsl pop (bad) out sub loop movsbl cmp jbe inc icebp mov sub decl out bound (bad) cmp sub fildll mov push inc cmp je bound lcall or sbbb push sub mov insl pop sti out mov and lea cmp out mov ret mov je add dec jae in mov sti cmp jbe popa outsb mov out and lea loop adc lea push aam in xor sub mov add cmpsb mov mov outsl adc enter adc sub fs ret pop pop icebp push mov test or inc incl pop inc or imull jl push test aaa icebp decl lea jne (bad) push rol xchg movsl mov and aas dec mov lock mov cmp or ja mov fcomps push cwtl or nop mov scas loopne fdivrs pop cltd je xchg pop cltd mov cmp popf mov xor lret inc xor add inc cmpsb sti and (bad) mov movsbl cmp lret mov not mov and xor stos add xor bound dec arpl xchg sbb sbb push and push push jno inc rorb (bad) out orl or (bad) mov add mov loopne dec add lods mov dec jbe jae ja xchg mov inc je cmpsb xchg sbb mov add outsb repnz xchg cmp popf push lcall call push jae and test inc enter add add gs adc add lods fnstsw and fadds movdqa add inc rcr rol pmaxub movsww sarb jmp movups add int3 add or and je cmpb lds call lahf add jmp xlat repnz je movzwl mov ljmp call inc cmp mov je pop xchg loope lea fwait xor fwait dec aaa push push sub rorl xchg ret and fucomp lcall jbe neg and lea cmc or and ja je aaa jl cmpsb clc dec pop mov test outsl and movzbl lea fldenv je pop mov je popf sbb lea lea ffreep mov xchg sbb out add ret clc add jnp inc dec adc sbb and fnstcw sbb mov jg lea cmp lea add scas sbb lea cmp lea push lcall or pop lea cmp lea ljmp les lea cmp lea xor pslld or or fistpll je adc cmp lea or (bad) out and or clc or jnp adc (bad) mov jno cmp lea adc hlt out decl push lea or jno clc sbb int3 jl push nop mov add movb sub add cmpsb sub mov sub inc lea mov and dec push lea mov mov mov pop and add outsl (bad) (bad) adc inc and jae xor rorl mov sti or je push add je (bad) lahf lahf xor jne sbb sti test movups or inc lock dec xor pop pop dec add adc dec push inc idiv mov push sbb addb adcb xlat in jle nop movups or (bad) mov sbb mov and or and push loopne loopne popf push cmp fcomip jb sbb mov and lea mov std (bad) jg cmp je adc add and je cmp je cmp je (bad) decl cli add or pop cmp je movsb std (bad) jmp cmp je movzbl add add mov movzbl mov fwait aaa outsl fiadd cli mov sti mov cld mov std mov jmp int std decb clc mov jne scas mov fwait cli sub stc dec add add push jmp xor cld xchg pop mov mov and stos pop jmp shrl dec lds je push in lret lret stos out cmp in add dec mov cltd ljmp dec and mov inc push add add pop adc cmpsb mov jnp loop adc inc jo mov sub push stos out pop test jne push movl jae sbb sub xor adc mov sbb sbb dec push sub jmp jne jmp int3 mov rorb mov jb sbb jmp out addr16 into bound outsl and fisubr mov pop jmp adc incb clc test je movzwl jb movsb xor lret enter mov mov stos mov mov iret mov lea loope je roll adc ffree fwait jmp cmp js jne mov mov rorb cld aaa push push lea cmp jbe out xor or jae shl lea mov lea aaa xor xor xor scas xor les aaa and xor inc xor add inc xor sub pop mov test inc pushl les sub incl jmp mov cli jg xchg push cli lcall adc out shr or cmp cli mov ja rorb sbb jmp mov adc es dec dec adc hlt and movaps jmp shlb (bad) or jb push xor push xor (bad) xor adc rcll add jmp xchg pop xor push lds inc add icebp dec aaa jmp cmp push add loope jmp adc mov mov scas inc (bad) cld (bad) lcall mov jmp fwait aad jnp add pushf cmpb jne aam xlat or mov inc mov lea jne ja fisttpll sub dec add fstl cmp shl inc in ss cli xchg mov data16 mov ss inc or out dec sti cmp dec jb and adc cwtl add les ja inc ss mov mov and lcall push sub sti ja shl or cmc cld jg ds mov adc and mov shr or sbb jle incl and jbe jnp lcall ret pop shr mov or mov jae mov das test mov lea jmp or adc mov jmp dec lea jmp jae (bad) sbb sub jmp sbb dec in jl std push leave jmp out (bad) mov mov jno dec add mov jmp and (bad) lahf loop movsl movl out lcall fstpl sbb inc (bad) (bad) sbb (bad) repnz xor rol inc rorl push cmp push and xchg pop mov jmp cli sbb mov movl adc (bad) dec sbb push sbb xchg sbb inc xchg fadds mov push jmp sub and jmp sbb jmp lahf loope add xchg pop xor mov aam inc jmp adc or mov add iret push loope les dec push push inc adc adc add inc dec jl pop xor sub cmp cmp ja jns je iret or jmp minps inc js lcall ret cmp je mov fild mov cmp jb add jg mov jne mov mov push ja call and xor add push dec add push imul mov fwait scas mov pop add repnz sbb or fmuls add mov adc adc xor adc push add mov push or sbb daa pusha push add add jmp adc loop cmp cmp inc lock ja push je addr16 (bad) mov sub xchg or je mov jmp nop xor add fcmovu out lret (bad) mov sub lret mov pop std add scas cmp jae aaa lret add inc add push inc and lea jbe xchg sub stos sbbb popa add decl mov movzbl cmp jne cmp jb fmulp jne cmp iret or mov adc xchg add fiadd aas pop pop or adc xchg xchg dec decb jmp mov mov insb and sahf adc add jle in add adc add cmp or add ljmp add adc mov jns das push ds sub mov cmpsb cmp (bad) xor punpckhwd mov add aaa jl mov jmp adc inc jb jb cmpb je mov outsl mov mov or sub test mov mov (bad) ljmp pop lea push bt cli sbb mov test inc sbb fist dec mov lea pushl add mov lea add cmp ja mov pusha adc fwait sbb fdivr (bad) decl add cmc cmovae mov test je mov add jne sub jno sub inc jg stos jecxz add out sub mov or mov mov mov mov jmp loopne add mov sbb add mov push inc adc mov mov incl mov push or dec adc rorl ficomp lds sub add cmp jae es decl (bad) incl (bad) mov add into push nop jmp inc cltd lods xchg fnstsw (bad) jne and mov inc jmp mov test je adc scas jg fdivr ja les insl push or jmp mov jmp mov aas cmp lret sar inc iret cmp ja cmp xor (bad) xacquire add xchg movl outsl pop or jo add jno inc (bad) jp mov sbb sbb aam (bad) pushl rcrl xlat adc mov cmp jbe cmp mov ja call adc aam add adc or testl loope add pop je inc and jo xor data16 xchg and (bad) mov mov call call mov shr imul call mov mul mov pop mov mov mul shr shr imul sub mov cld sbb in inc hlt mov out add ret in jne and mov shr imul fist sbb jecxz clc mov dec jmp outsl sub mov std pusha pop add lds mov or jne adc and outsl sbb add jle sti stc mov sbb mov mov or testl inc add mov push or mov or adc or mov sbb aas or jle mov xorl inc adc cs jno loope push mov jnp clc and iret cmp jo xchg or out mul out es out lea (bad) lret into cmp push add cmc pushf push pop add inc add jo adc xchg and cmp push or inc fist adc add dec aas decb or sbb scas pop call inc inc pushf sub nop jg mov shr imul (bad) sbb push jb out and and jl and mov out jle sbb lret and iret mov (bad) xor sub (bad) sub loop imull test enter mul cmp inc dec and mov je iret sbb cmp jae dec outsb ret repz push aas jp jbe call jmp fsubs mov mov call ficomp adc sub mov lahf mov mul imul clc or int3 ja scas lcall testl sbb xchg mov sbb pop lea mov sbb lea mov mov mov xor jle sbb push into call mov xchg lea nop and inc jl (bad) sub fsubr jg movsb movaps (bad) arpl sbb imul sbb add rcll and mov mov fstpl lret mov lea pusha or sbb loop int3 in and cvttps2pi jge pop lods test shll mov mov jmp lock mov test mov icebp (bad) lcall mov lock std pop or add lea mov jmp adc addl cmpps std arpl xchg cmp nop cmp mov jmp cwtl stos das cmp xchg mov cmp xchg or arpl aaa jb ja adc adc and jg (bad) pop mov (bad) xor jmp jbe ja inc cmp jb cmp or mov mov jg jbe mov (bad) sbb sarb icebp mul mov imul mov ja jecxz adc mov insl lea ret mov mov or jmp cmp aas inc (bad) jbe mov mov jmp dec inc sub into add jbe cmpsl stos xchg (bad) shrl cmp sbb test lea mov sub inc add mov jbe out pop mov jmp push sti into out or sub xchg cmp aad add (bad) jne adcl sub jbe adc add cmc mov insb jecxz mov push adc or xor and mov fs call sub inc or add mov movl cs sti sbb or cmp aas sub sbb xor push and pop adc sti push scas aaa pop adc sbb lahf lret mov adc adc push inc xor adc loop cmp jne adc add in shrb push mov jae sub je pop cmp mov out shrl stc cli fcompl push inc movsb and xor pushf les mov les popa ret sub inc pop (bad) jae dec testb movsb aaa mov and sarb in aas mov lea ret lds nop jmp sbb xor cmp lods lahf or mov add add mov (bad) dec or call inc sbb add jae daa jmp sbbb adc arpl add adc enter pop or mov pop loopne pop call test sub test mov inc mov add pop xor add cmp rorl xor sub arpl push inc mov adc pop add and jnp push xchg mov xchg push pop inc pusha test jb add pop sub inc sbb jmp fsubl mov cmp jne movl shll out ja divb sbb ljmp lret inc gs mov jbe lock dec cmp je mov adc dec mov test mov adc and xchg inc and cmp pop testb les and push daa mov adc or mov int test dec mov pop lret jle adc (bad) add inc xor jle and nop nop pop sbb push fcomps mov jo fs xchg adc pushl movzwl mov mov push pop data16 aaa inc bound fdivr and inc loope inc nop mov ljmp push (bad) decl add sub jg add cmc inc adc movb mov mov push sub inc adc xchg and stos test movb mov mov mov shl test je mov fld1 sbb (bad) jmp por shl add cmp jne mov inc icebp incl mov lea mov mov leave add or je testb jne (bad) mov xor mov mov sub mov movsbl (bad) call shr mov imul mov lea cmp adc dec or and bound call mov lds sub jmp rolb out je inc or sbb gs fsubrs ja fstl add test jne mov aas sarl mov lea lea cmp jb int3 sbb add add outsl sub or add mov add adc mov jmp cmpl pop fmuls mov cmp mov outsl stos call cmp jbe mov loopne cmp jb jecxz (bad) mov je push cmp setle loop incl movzbl cmp mov sete or jne data16 je pop aam add test je (bad) call add mov movzbl mov movzbl xchg dec adc aaa lahf cli and or rorb outsl mov cmp sbb cmp je cs incl sti add test adc fistpl fcomps push ret cmp sete or dec maskmovq (bad) or out jno out push cmp fdivr jg jne lea mov mov mov je mov cs (bad) loope movzbl inc inc or jne sbb add iret pushf inc cmp mov xor jae pushl cmp je mov (bad) sti addr16 add testl gs xor fstpl pop lea popa (bad) xchg movups test (bad) (bad) dec mov add mov mov mov mov xchg adc add pop or test pop push jge add pop movl add lahf jb sbb clc pop jo cmp jb push jle mov outsb mov mov cmpsb pop mov or dec insb in rorb and adc or cmp iret outsl mov push in xor lods mov outsl jne inc jge mov orb movsb test add outsl jmp daa sbb enter push lea jg sbb mov movb lahf mov jg mov xor in je fiaddl idivl inc or push shrb mov aad (bad) fmuls adc jle mov (bad) mov test out call jg add jl (bad) leave je lea cmp jmp push (bad) ja add push loopne inc sub mov das call lock xor rorb xchg loopne add popa cli (bad) (bad) mov pop testb je add mov jmp or and pusha xor jg dec mov mov out roll cs jno popa or (bad) decl lea mov movb jmp pop dec cmp ja ss ja mov (bad) adc add pop and popf jg pop jne cs cmp inc and mov lea jb mov lock cwtl mov leave jb lock shr add test mov in cmp or xchg por in jb in mov cmp xlat pop push setle mov in cmp aam and jle je xlat ret xchg xchg (bad) cmp sarl nop push rolb test fwait andl jns cli add (bad) xor sub lods pop add push iret inc or add stos xorl data16 push and cmp cmp push pop stos psraw lcall jle (bad) xlat (bad) inc and and push xor pop dec xlat jne in push test mov cmp add adcl xadd jg (bad) notb rolb in add mov fdivrs lret mov leave fild add dec ljmp insl sub movsl jnp pop movsb dec test mov dec std inc mov inc inc fadd loopne add push pop push test sti insb inc (bad) mov mov clc lea aaa test je mov sahf out mov inc add cmp test or mov loope jmp aas aaa mov jge dec adc mov push xor mov add int3 iret out orb add addl movb and gs xor jg sbbb loopne pop pop cmp mov mov push std push add or adc test aaa lock pop loopne loopne hlt push or jp mov xor out mov sub incl pop mov lahf movzbl mov ja (bad) jge mov adc mov mov mov push mov xchg cmp jmp or fdivrs mov and je outsl aam inc lock aam cmc pcmpeqb flds lock (bad) cmp pmaxub or (bad) por pmovmskb test jne ja mov sub sub shr and mov lea addl mov stc mov lods adc push pop dec outsl pushf test clc push stc add pushf push rorl in sub ret aam (bad) fs cltd movsb movsl dec lea fwait dec je imul lods movups mov pop sbb add out pop scas pop hlt push fiadd outsb xchg cltd lret pop jp mov outsl push cmpsb aad dec sbb pusha add sub mov jne pop lea cmp inc adc out fmull test mov rcrl fldl cmp notl cmc xchg fwait in adc (bad) pop ret jae xchg rol fcomp fcoms (bad) inc cmp ret (bad) outsl dec (bad) je add mov mov inc imul xor in (bad) adc and inc ja test mov jne mov jmp test stc mov inc and rcr sar mov push aam mov bsf out (bad) adc adc test cwtl je mov mov in inc adc (bad) setae negl or je push jbe lock lret neg and je stos (bad) aam ljmp push add dec xchg sub inc add add test sbb clc jg (bad) push add stos push or inc add sti add decb add push add mov inc push cmp mov je pop cmpl jbe sti or cmovno or inc or test sqrtps cmp mov je xlat jmp (bad) sti or inc push or or test cmp cmp mov je cmp mov jnp rorb inc push mov mov xor lahf sbb or movl loope xchg add add jno outsl push icebp pop inc lock add jbe pop jne mov mov inc jbe mov movups xchg fild push push jb movups inc nop movups repz jp movups mov adc rorb push aas ja (bad) sub outsl inc loopne test pop mov cmpl push adc push lock add and movzbl mov sub cmp jbe setp add stc dec (bad) (bad) je hlt push sbb cli add xor cmp je outsl movzbl mov add xor fildl dec mov pop aam mov cwtl and or mov es in addr16 cmp jbe inc movzbl mov push pop add add imul addr16 push pop orb (bad) ja mov add add jmp jb jg sbb loope jne std xchg jb mov pop mov mov sbb inc rolb mov cmpsl mov fwait xchg add jmp mov test add test mov jne test jl dec add loop mov mov jne aaa cmc push and les pop or push adc jb pusha push add loope pop fstl mov mov cmp fsubrl aas sub leave lea sub jmp scas or mov cmp add mov test gs inc jno lock adc jo arpl cmp setb jmp push incb jne sub push mov orl jo mov rclb daa out add push pushf or aam push stc xchg push mov mov in (bad) je nop inc mov out xor jecxz je lret loopne mov inc hlt mov push stc pop out fwait or pop leave bound faddl cmpsb or fs dec inc cmpsb (bad) xor jae cmpsb scas dec xor dec sbb nop mov push push push daa outsl jge xor repz add int3 cmpl mov fdivrs cmpsb mov xlat int aas cmpsb repnz inc outsl xor rcrb push push dec inc inc outsl shll push (bad) aad iret push cmp push mov or inc int jae fwait or rol xchg dec xchg das out xor sbb lcall icebp nop lcall push jge je xchg cli add push inc cmp xlat (bad) bound and decl mov lea test (bad) outsb pop jne test lea cmp mov jae ret rorb je xchg aaa jne scas add neg and stos les mov sarl push incl je cmp mov pusha pop lcall sqrtps cmp mov or jg inc add xchg mov (bad) loopne jmp add dec inc add inc ljmp push push cmp mov arpl loopne pusha mov pop cmp mov xchg (bad) or pop push or or test or pop lcall xchg jmp decb mov pop pop lcall cmovno cmp mov fisttpll lcall call cmp mov ret cmovno inc subl jecxz scas dec lea sbb or nop rolb mov repnz sbb sub adcb push sarb mov adc jae je pop push push jb inc repz pop pop out xchg and repnz setb clc fwait imul pop cmp js jbe jo dec cld je add aaa inc pop iret repz or fmuls cwtl cmp sarl cmp jbe aas jb popa rolb jns push enter push push push in xchg dec jb ret fiadd fsubrp aaa jo and cmp ret in (bad) inc lret iret pop (bad) pop sbb (bad) lods incb movzbl bound (bad) push push sbb xchg jmp pop (bad) push or inc adc adc add add mov movsbl mov sub ffreep jb push mov shr imul sub adc call xchg imul and or in je add cmp (bad) call mov mov loope mov js pop in data16 jle loopne test lcall jl rorb test out cltd dec adc dec or jmp je and into movsbl mov rclb dec stos pop xor add or jmp nop mov mov mov mov jmp lea (bad) (bad) mov mov inc mov cmp mov mov setle clc add rorl test jb mov jmp call adc movb fisttpll mov dec sbb inc icebp arpl cmc or add fimul movl jmp cmp aaa jmp ja (bad) hlt dec adc xor mov fadds pop loopne inc add add aaa mov test adc inc add adc (bad) cmp inc test push decl aas push mov jmp test mov (bad) (bad) jg test (bad) sub mov lea shr add sub lea mov cmp pusha inc imul cmovae and je dec and push ret scas xchg push mov pushl add add lea mov jmp decb inc stos cmp add sub lea loopne fwait xchg enter (bad) pop sub mov sub loop mov call (bad) dec aam ret or lock loop aas sbb pop or movups mov mov aas xor loopne xchg cmp push in movd das (bad) (bad) decl fadds jg stc add pusha clc decl mov add cmp ja cmp inc or roll fimul test (bad) decl jg rorb add xor add movb add cld inc call std mov mov sub addr16 sub jmp je nop pop repz xor loopne dec jmp push iret mov pop mov mov lea sbb cmpb sbb add dec push lock enter neg movb cmp xor fdiv out fimul daa add movb paddb jbe in sub inc mov add add inc add pushf sahf sbb inc or (bad) lea sub pop inc gs pop adc and clc cmp aas cmc sbb je cmp pop clc add clc out add out cmp aam rolb movzbl mov mov daa cmc aaa fstps mov add add mov or or mov add inc pusha es je outsl ljmp dec pop in pop adc mov cmpsb fmul pop pop dec adc adc pop adc mov dec adc push adc (bad) xchg in dec adc adc add cmp jne jmp ljmp je imul or inc adc sub cmp adc xchg or jbe mov lods xchg test aas inc add push icebp lret push bound mov mov sbb jl xor lahf (bad) fwait lret pushf sbb pop fimul jge or into out fsubrp test inc fwait daa imul cld (bad) incl inc sahf xchg pop icebp (bad) sbb mov loop or dec fldt test lock mul mov icebp aas ja (bad) ret adc fmuls (bad) fist enter sub cmp mov jbe scas out ret pop ret lea test jmp out inc mov sub pop out notl mov mov ret sbb jp mov lods lea mov loope ret lahf xchg push add data16 mov cwtl (bad) cmp loopne shr add sub add ss mov inc push neg pop pop mov nop loopne ret sub (bad) jmp mov sub inc adc enter lock mov mov push add mov sub add ds mov push dec loopne pop enter mov jmp or rorb (bad) adc mov and pop or sub cmp popf mov out add dec inc inc or fmuls fyl2xp1 lea jmp lret push insb xlat inc jg lahf jo call lock das or call dec mov fisttpll or add push dec fnstcw push call mov cltd push pop test mov cmp sub movswl xchg out in mov mov das insl loopne push movsb ja cli sbb mov icebp mov orl adc loop les fmull add lea pop sub add sbb mov fmuls add (bad) pushl push inc fadds faddl add and jne jg jnp jg movsb ret jmp je adc shl mov cmp (bad) mov push mov icebp mov movl incl je dec rolb mov je mov inc fdivrs into out inc lcall sub sub mulsd (bad) lcall sti addsd cvtsi2sd subsd comisd seta add mov pop ss jmp jg and mov sub mov mov mov add or mov into xor mov mov pop shld shl xor add or popa ret inc rorl and lea (bad) (bad) decl mul mov mov mov mov mov mov mov mul mov mov ret mov push mov pop loopne inc test push lods add mov push cwtl dec inc sbb sbb jecxz dec mov fisttpl aam sarb mov fidivrl add xor mov mull out or enter mov pop ja decl add adc cmp adc mov insb in fcos enter adc mov add (bad) mov cmp (bad) imul pop insl jne mov cs jbe adc movsb cli add std mov xor adc mov sbb mov ja mov not mov jnp not in sub sbb icebp mov pop fmull xchg mov add adc mov mov mov mov movswl lcall add nop rorl jecxz ret inc repz mov ja cwtl mov xor mov ja shrb xor xor sti sbb mov mov test sbb sarl fiaddl inc loopne pop (bad) push imull test (bad) dec pop mov pop pushf mov shrd shr adc sti sbb cmovne sbb mov callw ja mov mov in in add outsl call or cmp cmp or jbe cmp icebp loop cmp les dec les cmp and dec jb xorl and or add jbe xor cmp ret or jge faddl cmp ja jmp push in mov inc movl xor test sbb aad push dec xor (bad) ds sub cmp jb and xor rorb fadds jge mov movsb (bad) jge shld add shl add mov cmovne out out test lea int3 mov cmp pop inc xor jb fild inc xchg mov sub (bad) (bad) (bad) (bad) jmp pop int3 js loopne repz ja cmp jb mov mov sub mov out mov jge sbb lea mov mov mov enter mov jo (bad) pop cmp dec cmp mov ja push std jb cmp ja push sti (bad) (bad) out imul sub mov sbb mov cmp jb ja fistl mov mov add test cld ja loope mov push cmp jg jle add mov add pop mov divb add movb lea aaa std or inc enter pop imul shr sbb loopne imul ret jno (bad) xor leave pop sbb jmp (bad) jbe sbb loope adc call jmp mov mov fistpll add (bad) mov outsl stos insb dec enter cmpsl cmp cmp mov mov cmc fldenv xor imul jp inc fisttp imul jmp lahf sbb inc xor lea add jmp call push sbb test fiaddl ljmp jae movl mov sbb xorl (bad) sbb xchg jmp sub or bound imul faddl dec fmull incl (bad) mov test jne sbb ret ror push mov add lods jmp mov subl mov and dec and mov (bad) aaa cmp ror fdivl (bad) fwait or lahf mov mov inc hlt call clc mov jl inc (bad) fisttpl pop mov icebp imul mov les dec les loopne out sbb cmp ja jae ja je sbb sbb jne add jb jb (bad) (bad) ljmp cwtl mov sbb sub lea mov sbb decb push jge fstps inc fmul add outsl xchg jl rcrb (bad) ja ss ja dec mov (bad) jne push les mov in (bad) pushl sbb mov cmp ja jb add or dec jg dec pop lock sub test pushl ja icebp sbb cmp ja jb cmp jbe cmp (bad) adc stos subb jmp xlat loop ss fsubr imul dec test pop in incl pop cmp loopne cmp ja jb arpl cmp in inc outsb xchg pop jmp adc test sub add sbb popa in aas test cmp aas jle dec or mov in dec shrl in add dec xor mov xchg jmp sbb xor jmp lret in cmc mov push or push cmpsb jmp mov jg sbb mov dec push pop sbb xlat test sbb fs (bad) outsb mov adc dec aam mov pop aas enter dec aam xchg (bad) lea or push cmpsb hlt lods lea mov fnstsw fldcw adc push pop or or mov xor cmp mov test inc cli sub aam das lea mov sbb sbb mov jmp out jo call jmp add jl and cmpsb and push jecxz add pop sub pop in mov lea mov adc inc add mov rclb adc or addr16 add fsubs pusha mov sbb cmpsb add xorb loope add loop movzbl mov int fmuls mov add sbb sti mov add dec push push push fdivr add pop fcomp jne jmp mov push enter jg mov shr add les mov enter add cmp push mov test xor (bad) sbb daa leave (bad) lods (bad) decl or enter sbb mull cmp mov sub and call imul add hlt test ret cmc inc and xor fcmovb cmp inc or ret dec cmpsl out fisubr jmp jmp loopne cmp jg sbb sti (bad) (bad) jmp bsr in (bad) hlt aaa adc and loopne sti arpl xchg fnop dec enter inc out (bad) sub negb adc adc aaa adc jbe aaa std cmp js mov mov neg in mov out or incl dec add test adc mov push cmc or sub mov scas scas fisttp and call xchg jg (bad) fwait pop or lea jns aas movb add (bad) out leave fildll repz (bad) jle (bad) pop or xor jmp aam mov shr imul xor cmp std and inc movzbl adc mov movsb dec inc cli inc add mov xor rorl cli ja ror mov imul sub mov leave xor lods (bad) push lea mov pop lea nop dec lea insb mov or js pop outsb xchg inc jo mov and dec jne xor jmp add push inc lods (bad) pop mov jo stos push enter cwtl sahf cmp mov pop fs mov enter cmp repz call jmp js push and cli fisub xchg xor pop mov insb ret test sbb jnp jne lock inc sub jl push pop loopne cmp inc and iret adc gs ja xchg test jmp cmp fnop mov loop,pn sbb cs xchg popa and mov dec push xchg cltd in mov inc fprem xchg ret push fmuls xchg mov xor ret pop fdivs or cltd loopne inc and sub sbb or xor inc movsb pop mov fdivl push pop add cmp mov pop (bad) out icebp and or jmp cli movsd xor adc lds inc aam movups jmp hlt rcrl pop push out pop sbb xchg mov jmp fcmovbe mov xor adc pop call push enter add (bad) mov jmp ljmp bound out and dec dec sbb xor bound scas je call sbb push fisttpll adc mov add sub aas addl inc or fcomp rorl inc addr16 add add pushf jmp andl jg xchg xchg call pop add test push sbb xchg scas jnp icebp hlt and adc xchg mov call xor loope jmp cs and bnd aaa rorl icebp mov cmp rdtsc jo icebp inc roll mov jbe cmpsb pusha in enter cwtl rcll or xor mov sub or add xchg cmp cwtl adcl jle xchg jnp enter jno lret sub sub mov movsl gs test gs dec cmp pop jge pop fs mov js or sti xor jmp leave jmp jb jge jno mov jmp add imul cmp dec push int ja fistp mov mov lea lock aam push test sub mov add mov add fwait inc (bad) out fnop jle sub leave mov add add mov mov (bad) (bad) adc out popf jmp sbb or aas (bad) stc or xchg or fimull or into iret mov imul lea mov mov inc sub mov add cmp cmovae inc add nopl call xor sbb jg inc adc sbb xor push dec add push jmp jmp popa mov lods dec mov cmp bound mov je icebp mov repnz outsb lea cmp sbb pop cmpsb mov add mov inc mov jmp decb sar fisttp call sub lahf sub or jmp xchg out jns sbb add pop sbbl pop nop imul imul rclb add cmp cltd je lret test ret lret mov dec andb add jmp sarb sbb sub jl jmp lea out pop (bad) dec loopne test pop fistpll or inc loopne inc add jle mov or test sub lea inc cmp sub fdivrs adc inc fmuls test and add fnsave dec add sub pop inc ret cmpsb mov jmp xchg jp daa and rcll mov push add je adc shlb dec (bad) jge out in aad add mov jmp fadds xor cmp stos out or push add fs mov lea xor pop decl sbb fmuls fimul hlt jo fucomi lahf mov dec mov movb mov add lea jns movsb clc into adc dec ret jge add jb jg mov pop je pop pop (bad) jmp or push imul and and dec jg push aam add jne int3 lock sbb push pop addr16 or mov je lcall sti cmp xor sub xor cmpb lea jne or rcr xor std jne cld cld jne sti aaa int jae jne cli cli jne stc stc je inc add decl push add out loop push sbb rcll pop notb imul and mull dec test popa mov xor sub imul inc adc xchg je jp imul aam dec mov rorb test imul mov fstps xor add adc andl cmp mov xor xor mov mov adcb fsubr adc jmp sub loope or xor sub jmp xlat movsb add js addl insb adc jo mov lods jnp aam lds loopne int pop sub fsubl or or es icebp incl addl pop std pop xchg lea mov sub push mov fwait scas and xor and je xchg mov (bad) (bad) stc add stc add and cmp je movb jne (bad) or add add sahf out mov cs add add lahf out add push pop xor jb cmpb push mov imul lea cmp jle aam jl sar or push inc pop incb lea inc fs push cmpsl mov cmpb (bad) (bad) out lsl add je cmp je cmp je cmp je ret dec cli and jns out push add test aas daa jge sbb push dec pop pop pop xor daa in loopne cmovns add (bad) data16 dec sbb lea cmp mov je bound (bad) and mov fwait pushf enter jne or mov in inc inc cld jne and jne (bad) or test dec inc stc je es cmp xchg pop je dec dec xor loope adc pop std or sbb nop mov aam popf mov inc adc (bad) jmp flds (bad) out jb cmp dec and mov je adc call mov jae jmp and mov mul inc add jmp ljmp fsubr cmc sub cmp adc andl loopne mov or scas pop test cltd hlt jne,pt adc pop push mov pop adc add dec or fmull cmpsl mov jb jmp jge cmpl je mov jmp or sbb jmp int3 jmp ret jae mov cmpsb pop stc std lea jmp iret popa daa fwait dec inc or gs test aam jae mov int3 cmc jg cmpsb mov jmp add jmp (bad) (bad) cmp adc or repz xor (bad) dec call cmp (bad) push and sahf cmpsl aad dec add jbe mov dec or sti stos jnp push mov pop out orl sarl gs mov inc add sub scas cmp cmp jne cltd mov mov fcomp push (bad) xchg fisub jmp dec sbb mov in sbb sbb inc jbe outsl rclb mov js and cmp sbb subb add lea mov loopne sahf add fdivrs aaa cltd idiv add shrb loopne pop insb lcall pop jge mov sub add aas mov add mov mov in cld add inc daa cli mov jmp jb push or int3 popa scas jo (bad) jl xchg mov or cli inc push jae sbb or nop sbb mov sbbb cmpl sbb push loopne nopl inc add repnz or in pusha outsl shrl (bad) sbb ficompl mov ret fdivrl jmp add mov mov call push shlb or test and mov call add or ljmp push sti xchg lock in or ja int push rcr push (bad) rorl rolb jo push mov jmp inc add pop mov adc mov out mov in xchg cli movzwl (bad) mov popf cld in add sbb test jle sbb je mov cmpb fnstenv loop push jecxz add cmp ja outsl test stos mov sub push clc mov sbb fist clc mov lea cmpsb xchg lret add test mov add add inc mov or outsb jne push and xchg adc adcl jle pop subl push xchg add jl leave jmp xorb or add out lahf add xchg dec das daa push aad add pop test cmp mov shrb mov mov cmp inc shr je xchg (bad) je xor add je scas loopne loopne pop xor aam jae pop nop rolb mov mov outsl or jne loope insl stos stos je jg and mov xor jno loopne add mov out movq test or or add mov push fildl es int3 or sbb cld subl inc sbb pop add test loope pop je outsl push negl or add or test movb in adc adc sbb pusha mov je jle sbb jno lret movsb das and scas call add or cmpsl lea mov aam aaa dec add movsb add (bad) lock lcall mov movb mov dec lea mov movb add pop es dec mov nop cltd dec outsb enter and jbe xchg lahf sbb dec lahf dec cs cmp add dec jae,pn push lahf popa jne sbb add aas add fistp mov rorb add inc jbe scas or out sbb lcall loopne dec fnsave pop (bad) mov scas test jb (bad) cmp loopne (bad) dec ja mov inc call xchg sub pop leave and arpl call mov add push orb xchg add dec or cli scas xchg xchg xchg ja cmp decl je xchg jbe std lea je ja lahf ret in pop add xchg cmp lea lea or mov sbb adc mov mov and loopne lods addb jo and or jb sbb scas add leave add cmp bound subb push dec sbb add fwait xor and scas invd sbb inc stc loope and mov push das mov je test mov ljmp jg dec aam dec test test test jne mov pop aam or int3 jne jmp rolb add lea adc incl ja fmuls loopne add test ret dec or pop adc pop idivl adc add cmp cmp test shl mov mov fisubl inc je fimul pop sbb mov sub lea sub mov inc cmp outsl mov jne add pop pop add add rcrl fisttpll xchg rcrb scas jne add add das leave and fisub mov stos sub pop outsl comisd add jo add mov adc inc adc mov addb test mov ss push adc jmp and loopne loopne push or jle movzbl lock or loop add add xor mov xchg sbb out fs inc or das mov jbe rclb movzbl dec push inc insb bound xchg xchg das sub or rorb mov or cwtl jo loop jle loopne arpl out out mov xchg push pop das push or negb jg movsl in mov (bad) sqrtps mov add das hlt push orb adcl nopl mov nop rol add and inc and add mov mov lock cmp repnz call cmp iret mov outsb mov jmp jb mov add ficompl ret and ret xor pop sbb ret sbb ret (bad) loopne or pusha arpl inc add xor fimull adc or lock jbe pushf add in adc bound ret add jo ret test mov cmpltps int3 pusha insb adc fcomps inc lar cmc js or std and add pop or dec ret ret les cmc cmpps ret bound invlpg ret push aam sbb mov cmpb in dec or pusha push inc movb call pop push test or sbb push (bad) fmuls jmp call in (bad) (bad) cmp jne jmp loop jl jg lret sbb and add inc in sbb hlt and rorl imul cmp data16 roll cs add sbb fldl nop sub cmp aas mov leave scas push in (bad) (bad) jmp add popa es out ror xor out inc mov mov movzbl mov jmp (bad) jbe jbe out les aaa cld leave jbe dec or (bad) out (bad) cmp pusha je pop orl jmp popa mov jg cld sahf adc es test mov loopne (bad) (bad) jns negl mov lea adcl movb negl mov mov mov or add lock lock pushf (bad) decl mov sub cmp add add add das stc (bad) dec adc clc pop inc xor pop movb jmp loop adc push adc add stc lea adc and rcr in pusha pop loop scas scas or adc cmp call les mov cmp movsd fist aam loopne test ljmp mov push loopne test je inc mov jbe leave mov dec or inc clc loopne mov mov and add mov lret mov lds or xchg and icebp mov sar inc or loope (bad) (bad) jg rorl test testb lds adc jmp lcall ja adc dec push (bad) (bad) add mov cmp dec dec mov mov ja fsubrs and in cld dec dec rcrl arpl daa rclb cli pushl pop ss or neg movb cmp fisttpl xchg push enter into adc out mov push lea jbe dec dec inc fwait dec add adc sbb xchg ljmp rolb mov or insb aas sub lea stos scas sub or inc push or xchg dec mov add add movzbl dec jo in repz decl fistl ret fistpl mov sub pop mov mov repz mov mov ja xchg lret icebp inc in or xor ror inc and punpckldq jg (bad) jo mov movzbl push lea cmp add sbb jno rcr or fsubp in fsubrp xchg incl sub jmp pop adc aad stc or add std addb mov push outsl roll jne int jo cmc (bad) cmp inc ss gs adc in mov pusha adc fldcw jne mov popa push int3 call or jge lods call push rorb dec or push add es (bad) jmp out in ja mov std ja mov movsb ja aam lock jg push in mov and mov shr mov and shll sbb push lea push sub test js jg movsl ds add mov mov push int3 sbbl roll jne jno ljmp repz sub push add shr adc mov fild inc mov inc (bad) mov push mov add test mov mov xlat push out jbe ret incl jno mov cmp xor (bad) sub shld mov xor mov cmp mov sub mov cvtpi2ps movl dec pop sub push cld pushl (bad) subsd comisd seta add sar rorb pop add mov aad pop cwtl sub icebp mov hlt mov ja add fucom rorb test ret bsr xchg adc xor shld xor cmp add add mov mov mov cmp fsubrl mov jl scas pushl je lods lea mov iret mov xchg nop mov mov mov es enter mul mov xor mov cmp inc mov mov fiadd mov and mov lods mul (bad) dec faddl jg clc mul mov mov mov or nop adcb stos orb out cmp mov pop (bad) std iret cmpsb or int3 aas adc mov add mov es insb rcll das jge mov or outsb pop int3 nop (bad) xor sub add (bad) jbe xor fistp int sub lahf dec mov (bad) jb rorb pushl not mov fs adc jo shrl ret mov dec mov mov loopne fcomip cwtl mov mov pushf lret fstpl lret mov or std (bad) pusha jbe mov cmovne cmovne sbb mov lods fwait jo mov gs test (bad) call push mov in leave mov lods mov cltd fcmovnu test mov mov stc xchg adc int3 xor adcl les dec pushf bt add cwtl mov add adc into dec mov add iret mov and and cmp mov iret add sbb jbe cmp dec cmpl rolb (bad) call (bad) xor adc jbe cmp outsb aad cmp rcl xor cmp adc mov movl adc dec add sbb pop push lret fidivl add loopne nop xorl lret fidiv orl jne inc gs mov pusha jb (bad) lds add rolb ljmp jo (bad) fiadd mov rolb dec cmp sahf dec push sbb or add jp add or pop je xor cmp add fidiv dec mov sub (bad) mov inc sbb fidiv sbb (bad) jne test and add pop popa add xchg rorb inc push les inc lahf mov les push and xor fistpll (bad) cs push push push or iret pop test loopne es mov inc jle incl jne ja jns jmp inc sbb shrl adc jb outsb or cmp mov dec add stos sbb loopne inc xchg mov dec call jmp call test ficomp dec push aaa push sarl sub add rcrb cmp clc pop dec call out dec lea mov inc or push cltd sbb loopne sub and mov add jbe or inc adc fcomps inc mov loopne dec aam jg or adc lret cmp pminsw ja pop out mov mull leave lods outsl in push loopne lock inc or cmp jg pop fcoml frstor test or add add loope cwtl icebp add push loopne jle popa arpl add call mov je sbbl cmpsb mov jmp sbb pushf rcrl test mov fwait in nop jl outsb (bad) ljmp xlat out addb or mov jle jo mov inc push mov sbb mov (bad) cmp jmp imul push sbb xchg xlat xor jmp lds std add or jmp popa add dec cmpsl out push xlat sbb push mov xchg js push movsl mov sub xor lock cli mov dec enter std mov mov enter movzbl jmp ror add and jnp movsb mov aam pop and cmp test or aad or lret mov daa add ret mov incb cmpb lock fdiv add and clc outsl (bad) shrb lret cmpl shl mov jle add out mov (bad) loope jmp add pop lret push add cmc mov xchg jl mov sbb dec add or mov xchg das xchg xor int3 sub xchg icebp insb loop push pop dec fmuls lock cmp movsl lret movzbl mov mov jmp fs xor or cmpl sbb ret and stc imul jo mov cmpsb addl movzbl mov or loop sub addl add or pusha mov sub cmovae mov mov add jbe adc (bad) sub add pop add out dec shr in (bad) jmp bsr xor or mov inc or push imul ja shlb push adcl xchg rcrb (bad) (bad) aam rcl adc add fbld jg aaa or or inc fdivrs rolb inc lock arpl xchg sbb add and fcos or pop cmp mov ja sti aad rorb mov jmp imul aad mov or sbb adc adc les jae and rol adc fildll dec jbe loop and inc inc cltd and mov in enter out aaa lock mov rorb les mov loopne jnp jae dec (bad) in jmp scas fcomps jmp ja aad and pop aad into pop sbb mov ror cmp adc mov pop loopne add push ljmp inc (bad) lock (bad) fild ret fisubr ret mov jne or mov pop out and andb aad or add or mov push mov xor sbb hlt pop adc mov and mov adc add js aam movsd pxor push les sti mov movups add in test daa loope clc mov mov call jecxz mov and cmp mov push enter mov outsb jbe jo jmp enter jge or jbe jmp mov sub xorb inc push mov cmp sbb sbb scas add in outsb out adc and lcall pop cmp jl jns sbb pop add push or lock add sub mov mov xchg ja scas loope std imul sub sbb pop mov insl inc and loope or jmp inc scas mov adc and inc rol and (bad) sbb mov xlat sub out add bound push mov repz ja in roll lods mov adc adc jmp fstl shr push add add push cli cmp add add and sbbl inc fsubr in cs push addb sub dec data16 jmp les test call xchg shrl dec data16 adc pushf daa pop insb xor repnz and fcmovnbe jnp jns push adc sahf and pop xchg xchg daa xor add push mov int push call pop jae lea jmp fld1 bndstx das mov (bad) mov in out out sub mov jmp cld loopne xor adc xor add add rorb iret fisub or inc pushf push inc and idivb sbbl notl pusha xor push loopne fs sub mov shl jmp je mov in inc mov and loope hlt xlat sub ja jmp jmp andb loope loopew aaa pop add shr mov cmpsb sub sbb mov (bad) jg xchg mov mov jmp adc xor call (bad) icebp notl mov jle movsl mov inc push rorb movsb bound add loopne call movl jle push cmp sbb xchg cli rolb pop jno cli and mov leave cmc loope push xor and cmp lret jmp pusha jp inc fsubrp and (bad) test and xor cmpb les movb xchg loopne popa pop cld mov (bad) mov (bad) jmp clc add sbb and loope xor pop pop mov adc popf sub mov or or cmp roll enter js (bad) incl subb mov add jl mov je add rolb mulb loope dec jne xor sub test or movsl lock add xor fisub mov movsl xorb aad mov movsl es rclb add push or and sarb or out or int jo movsl data16 adc test or movsl adc movsl (bad) xor aaa add dec jle cmp data16 cmpsb jmp icebp or add dec or jo subl (bad) xlat xchg test sub mov or cmpsb test push shrb mov lea and rcrl cmp push sbb push sub scas dec adc pop xchg rolb inc jae mov aam inc adc jns pop pop leave xchg sbb je scas fs push (bad) mov mov outsb push ja in jmp fsubs aaa hlt add push mov jmp test add in inc adc test push aad xchg sti hlt aas lock test xor mov pop and inc push aam fimull xchg rcl mov sub and out loopne pop add test mov je cli mov or call dec adc mov rorl xlat pop and jmp add outsb inc xchg mov ss cmpb stos test in pop jg inc or jbe sbb in ss pop in jmp mov clc add jne fmuls fwait je sub or hlt sbb xchg cmp inc cmpsb in pop cmp adc lea jmp frstor int add or mov push adc or psrlw jmp mov mov faddl adcl or ret fnsave (bad) ja out mov dec and pop push aaa (bad) or xor sbb mov adc xadd test xchg pop rcll and jmp add xor aaa xor cwtl or aaa cwtl jb stos (bad) dec pusha xor pop rclb or loopne push jne leave inc adc je,pt aam orl lret push sbb clc cmovae test imul and push add ret cmp jmp add push mov add push aam push or inc or rcll call push or mov sub lahf mov adc call add cld imull fcmovnbe call or aaa add loopne shll dec add jmp fxch pop negb mov lock fcoms adc xchg subb xchg push movsb or lret lea rol je mov pop and loope pushf mov push mov inc pop mov mov loopne arpl pop inc cmpsb push jmp cmpl jne push push mov cld sub pop add adc cmp inc adc add jg sbb sbb adc cmp cmpl lds (bad) fdivp pop dec fsubr xor into jb out test das pop aas xlat add (bad) push data16 inc lret cld pop (bad) or jnp pop jmp (bad) (bad) in test fxch xor fcoms inc xor inc out bound pusha gs pusha out test mov insb rorb ljmp pop jmp loopne (bad) mov adc mov loope cmp aam push or int3 (bad) jne xor fmuls dec adc push es add adc cld (bad) pushl cmp ja add cmp seta pop ret inc add cmpsb push sbb mov adc jno and (bad) mov push inc mov pop mov or or mov jle adc xor ljmp add mov test je test je jg cli sbb cmp cmovbe jmp dec test lea je add ljmp mov mov movsbl arpl loop sbb jns fild adcb sub or aad push adc mov mov or add add mov mov call mov lcall mov lock push hlt test je (bad) in (bad) (bad) incl cmp cmovbe jmp lea cmp je mov cmp jne pop pop cmp outsl lea xchg pop and decl (bad) jle cmp jb jmp xchg add cmp lock pop scas sbb jo adc xchg popa adc inc int3 add fnop add xor test jo scas (bad) movsbl add dec in add repnz nop nop mov sbb pop adc and cmp jb subl and pop and nop add enter insl push pop mov inc or js push push and mov mov xor pop call inc (bad) es mov sub push jg sbb call adc test xor jne lods aas or add xchg adc cld lahf test cmova jmp test inc arpl ja je mov cmp je dec lea inc sbb dec mov and sub mov jnp jae jecxz,pn cmp or and out push mov pop inc imul cmc and andl pop adc jae mov cmp mov je jmp in mov cmp jne andl and cmp fwait shll mov cmp jae add shlb xor and dec add mov mov add ret rcr ja decb pop adc test setg adc add lea adc fidivl and and lock mov and pop hlt inc dec sub mov cmova mov je inc add adc inc pop push jl in (bad) incl out sbb pusha sub lea movzbl and push adc pop and sbb add lret add js call add rcrb or or scas sub sub mov mov mov test jne cmp jnp inc and add dec add pop jbe lea mov push and lea sub cmp movzbl jo pop (bad) mov sub add mov je mov sbb sbb (bad) sbb mov das cmova pop xor mov dec sar or ds cmp ja add jo and sub and and adc mov cli add or pop sbb lock jmp movsb sbb mov push lcall push sub xchg jecxz mov loopne call cmp jae mov sub add movsbl in nop sbb sbb es fiaddl mov mov push xchg loopne mov (bad) mov adc iret fistpll enter imul paddw nopl inc add cmp xchg add push mov cmp ja sub rorb loopne mov or imul add jne mov dec push adc add scas mov outsl mov or push pop movsb test sub adc sarb mov aam inc (bad) sub sub inc inc jne mov imul xchg das add insb mov add xor cwtl and call in mov (bad) iret loopne or outsl sbb pop outsl call dec (bad) (bad) cmp push lock cld jle stos add movsb cmp call loopne aad and pop ret xchg jno (bad) ja jg mov mov mov mov faddl test je adc sbb (bad) push and or inc (bad) popa (bad) cmp out mov cmp test fidiv sub cmp cmova mov gs mov ret jmp (bad) mov and in loopne mov lret nop es cmp out mov popf mov mov call xor (bad) adc pop popf dec mov add cmp das adc (bad) pushl sub fdivs sub mov cmp cmova fiadd aaa xor jne mov adc cmp push mov rcrb add and sub mov out jle adc mov dec dec jg jle je,pt and push sub js fimul lock mov cmovbe test jne push or cltd jb test nop ja js mov cmpsb dec popa push add (bad) push pop or stos sub mov sbb or inc inc sbb (bad) flds mov jbe cmp dec xlat ret and cmova xchg xor mov cmp popf lds test clc ret add add adc xor xchg std dec scas push add adc or adc push xchg or add out pop (bad) mov ret pop inc sbb sbb sub mov xchg into nop xchg imul lock inc ret push inc inc ficompl inc clc incl movsb xorb movq jle jo lret aas mov or mov cmp lcall fs push mov inc and inc or ljmp mov inc hlt sub mov cld push or xchg (bad) jbe call and loope mov mov sarb cld leave aas push les lea sub adcb mov outsl in add pop sbb hlt and std mov push push mov call pusha push xchg add pop sbb add jge add dec pop incl pusha and clc fcomip sbb je cmp inc test je sub mov scas dec or lock mov add rcl ficom pop fbld sbb push lds and cmp outsl mov outsl push xor movzbl test jl mov fild jmp mov xchg cmp je and clc pushl lock pop scas add sbb inc aas aas mov and add divl mov jmp inc add negl popf push push aas inc cmp or xor sbb ret cmp fisubl or dec rolb adc or and aas fistp (bad) (bad) (bad) jg inc add mov les addb add and fbld or mov (bad) daa pushf mov sub xor add jae xor pusha adc adc add mov inc add lahf push subl outsl sbb lds mov cmp dec or aas ret jecxz shr scas pop imul jecxz cmp or outsl lock xchg or dec outsl test (bad) adc pop movsl popa shrb dec repz cmp dec loopne enter cmp xchg into xchg cmp add mov add mov call fldl add inc add inc add push adc push cmp les and fdivs mull push mov add lds mov sbb cltd mov and mov cmp frstor mov out (bad) pusha push out call call adc arpl in dec sarl adc jo cmc adc add mov (bad) cmp and rcrl or (bad) cmp loop out jno int movzbl lea add sub loopne idivl sti unpcklps push (bad) mov je mov idivl mov movsbl jmp fsubrl add call sub popa rclb sbb adc mov and xor mov xchg rol mov and pop int daa out call sub xor pusha addb or lock dec push or das outsl push sbb inc dec test xor push and aas out add cmpsb dec cmp pushf inc rolb call lock faddl or insb rcrb sbb add mov fmuls inc and nop inc cmp inc dec or orb add add mov sub mov orb sub jg aam inc lcall mov mov cmp mov lret or cmp fwait mov aaa sbb add add pop popa rcr sbb inc and sub (bad) mov shl fistpll add xor call loopne push push mov fs fistp arpl ja enter cmp mov loopne addl ds push and and fcom aaa pusha std xor ret inc shrl inc pop cmp jo or and (bad) sbb inc pop std aas pusha add je and fidiv sub mov call pop inc cmp rcrb or ret jne loope adc call lods pop rol lds pop sbb cwtl cli xor or add popf fbstp add ss orl les ret hlt enter addb sbb add repnz je andl sbb cmp mov decl dec push xor adc sub add fbld and cmp sub negb fistp (bad) jg and mov arpl call push ja sub jle orb cmpl rcll xor insb imul jmp fidivl cmp sub cmp paddb sub inc (bad) stos inc clc mov cmp cmovbe into add leave sub insl pop ret addb test and call add loopne das adc mov lock (bad) int3 add pop add pop sbb fwait call mov std cmp call leave inc fbld add cmp pop sbb loopne scas cmp je mov or mov cltd push mov enter add adc out sbb mov nop popf mov (bad) push (bad) jp call add or fdivrl push dec dec nop nop xor rorb pop insb push mov mov mov sub incl rolb inc add rolb and xchg ret cmp cmp loop mov lret xchg jns jp jg mov test jle lds ret dec mov jae jmp add aad call add add cld xor jnp push pop lret pop jg push stos xchg jp cmp cmp mov push or fild js je cmpl scas out and inc inc cmp movsbl (bad) mov call push pushl add or loope ret mov mov iret lock or loope add jl jae xor in jae sti and adc push jp or das add pop call cltd push nop pop test and lock sti (bad) (bad) (bad) jmp movzbl jo insl and sbb mov add inc inc mov pop cmp sti in fcmovnb lahf sbb jp pop add adc movsb cmp and cmp int inc cmp lds jae add popa push mov pusha xchg xor mov sbb xor loopne jg hlt mov cwtl jae jne ljmp sub push adc test (bad) movzbl mov and inc roll inc pop (bad) ss push lret iret mov jle cmp jb bnd add in lret mov call add ret das xchg sbbl cld add leave jmp mov addl mov ja mov xor (bad) sti aas sub sbb clc hlt cmp ja aaa xor and inc adc add icebp je adc aaa and and mov (bad) jg aaa mov pop pop push test (bad) in mov xchg lahf adc (bad) push rolb mov cmp int3 sarl add sahf aaa pop std and lcall aas ja movzbl inc clc add push movsbl loop cwtl push or mov cmc mov mov hlt cmp jae fcoms (bad) mov call rol cmpsl add pop pop ret jle jnp ret push pusha je (bad) aas (bad) cltd das pop out or cld cli (bad) decl add dec xchg sti or xchg or jg iret insl mov adcb push adc sbb pusha add cwtl imul dec add xor adc je addl lea pop rolb flds outsl xchg punpcklbw ds jl jae mov movb orl push or test js adc insl or data16 or add rorl je rcrl and add xchg out and dec jle ret mov lea movsb sbb ret adc call sbb call mov mov loopne inc decl ret mov mov or inc or push inc mov nop out insb mov inc lods or (bad) jg add aas ja cmp lea jbe lea cmp call push sbb std sbb jbe cmp jae add mov in sub cmp inc fdivs sub jg pop add mov int3 pop stos add leave in outsl lock add add (bad) hlt mov lea dec in push orb add dec insb xor mov adc test das fxch adc adc das jl add (bad) jne or jns movl mov mov test pavgw (bad) dec mov mov xor test icebp push pop pop rcrl jl mov xor sbb and mov out es inc dec out pop add xchg add xchg insb and aaa adc out or ret call pop push loopne jmp add pop js mov nop das cmp jne mov mov faddl sub mov dec mov imul jns jo adc or adc dec cltd lret das inc hlt mov sub cmp rcpps cmp ja jge lea jb call xor and pop outsb xor push add jo jne dec jo jg dec or or adc push cld push les jge decb push fdivl (bad) push les sbbl cmpsl add lahf push sbb je mov in push sub cs fidivrl aad xchg clc jbe cmp jb mov add cmp jbe daa icebp call stos jo sbb jnp jle inc jmp movzbl mov mov pop lret movb or das (bad) stos lock push mov mov rol lds jmp iret sbb push inc cld and icebp sub call push jmp and or jo mov dec adc jecxz push gs mov test je xchg jo add cmp sub mov mov call insl in mov sbb aas xor adc lret cmp pop xchg jg dec cld test mov xor out clc add add rcrb les clc cmpsb fcmovbe loope adc jmp jg pcmpeqw inc mov mov add cmp jae or icebp call xor sti ret xchg sti add test mov js cmp insb inc aas fldt jmp data16 (bad) imul iret inc dec insl in push (bad) outsb dec clc mov mov add outsb or jno mov mov push sub add xor push fdivp addr16 xor cli jb add inc mov jbe aas or xor dec or cmp add jo xor jmp inc sbb clc lea pop rorl add mov jmp jge mov and mov jmp in aam rcr fucomi mov jbe ds and pusha adc daa jg xor int3 dec stos inc call and and push add hlt int and fist cmp jb lea cmp jbe ja add mov pusha or mov andl nop icebp cmpsb add mov test jg push cmp ja or jne andl mov pop mov call or (bad) xor cs out and dec outsl test je inc sbb xor inc inc lret sub aam sbb dec mov jmp push add mov xchg mov xchg dec scas (bad) mov sbb sbb push cld lea lea pop pushf clc mov xchg mov mov incb clc jle mov add ljmp das pop (bad) (bad) loopne mov jb push or sbb sbb push jmp scas mov and add hlt sub (bad) adc sar ret add lea jle (bad) decl add mov je lock mov fmulp iret (bad) imul adc fsubr dec xor jg ret mov xchg sbb add insb cmpsb push inc popf add inc or mov pop in popa loope mov lahf rorb (bad) mov imul and call mov adc inc and (bad) jne imul aas xor inc cmp or cmp xlat add je (bad) hlt pop push ret dec adc mov call rolb addl cmp loop sub and hlt cmp ja xchg cmp sub cmp ja cmp (bad) jb add cmp jbe cmpsl imul dec mov fidivrl or push sub loop push push xlat pop jg mov sub push je dec call cmp sbb cmp (bad) jg out mov mov lea add lea cmp jbe cmp orl incb jo mov xchg test adc repz (bad) sub fsubr mov xor cmpsb cmpb jmp mov (bad) or xlat aam test jne mov add add sub and push cmpb xchg cmp sub adc inc add push and jmp movzbl out jo adc movzbl mov jge xchg sbb or loop dec cwtl jge,pt inc jmp data16 data16 mov xor adc (bad) in push out cmovne pop mov ficompl pop xchg incb adc inc gs and dec dec and and sbb sbb dec scas stos movups xorps cvttps2pi andl pop ljmp push hlt cmp ja add stos cmp sbb or adc or fdivp mov fcoms sti push or mov add adc popa push xchg push fildll loope (bad) cmp push push jno add rorb scas (bad) pop ret pop and cmp ja mov jb xor dec jp sub aas adc sub popl add movsl push pop movsbl sub leave push adc xchg and pop sbb push pop mov loope or and or cmc pop dec adc or test jne pop jg adc jmp cmp pusha loopne inc repz add add aad mov dec inc mov jmp je data16 das in out pop shll push and add ja addl or ret das cwtl jmp pop add fcmovnb jnp subl in mov push sub xchg sti xchg sub adc add adc dec inc enter outsl rcrl js insb xchg cmpsl sub mov push ja sub push fwait orl data16 sub pop fcom call scas xchg jp mov xchg add das fadd dec push ret push cwtl arpl mov nop test mov (bad) or outsl jne add lea inc mov je xchg jo and mov es add mov and pop rcrb les mov mov cmp ja sbb shrb clc add fsubrs rolb std daa ja inc adc xchg mov fcomip lret jbe mov push mov test add call movb rol gs (bad) jg pop mov jg add lea cmp mov ja idivl aam dec push ret sti ret das lock push or push in rolb xlat cmpl (bad) ss test popf mov pop imul or (bad) out call mov cmp jb cmp enter fldt fcomp jmp iret lea (bad) stos loopne je jo mov and sub aad dec or rol push iret dec pusha icebp call inc or jge mov (bad) inc inc xchg pop or jg outsl pop add loopne add hlt lahf sbb pop jmp mov pop add daa cs sbb pop stos jp add loope mull ret cmpsb xchg sub call je sub sbb movlps iret hlt idivb sbb std test pushf and hlt inc cld sbb int adc adcl sub leave adc fildl mov das pop sbb adc mov xor rcl popa dec push mov add pop fldl je jl sub sbb adc dec cmp ja push loopne push push cwtl and jmp sub pop or aam (bad) xor mov cmp je cmp lea add cmp pop inc (bad) sub (bad) fchs call call decl dec cld test jle mov xor or test cld pop sub mov popa or incl sbb fisttpll jg jmp lahf loopne mov lea cmp ja ds les aam add lahf mov mov icebp ffreep or add mov xor pusha daa int sub pop sub xor ds pop (bad) int (bad) mov and decl adc cmp sbb jmp sub mov mov add sub add ja mov test jle das sbb cmp inc add sbb mov push lea pop adc jl push add test loopne jbe mov mov test adc push add sbbb dec mov xchg pop lea add lcall daa lods faddl cmp add inc add pop pop mov movb add xchg rcrl xorb inc les add or dec sbb js loopne inc fwait lock (bad) mov and call fstp (bad) ljmp jne push mov inc std popf test inc and je mov add int3 aam flds ret int3 je push lea mov push mov jmp cmp lret and lret mov mov add psubb jo ja fnstcw sahf loopne (bad) sub mov mov mov sbb add mov out add xor shll leave xor adc addb add or sbb (bad) jmp sub push or cmp pop shll pop into je in xor (bad) incl fmuls andl sbb xor xor je sub (bad) cmp dec adc aaa jne cmp mov cmp fildl inc jbe add jg fdivrs cltd int enter add mov cmp mov pop scas add adc add repnz add cli xor push or jmp mov and sbb and jg add adc ret sub fcom ret sbb inc popa or sub push sub or in cmp add cli in pop jmp dec aas shrb jge and mov sub (bad) in (bad) jg add add cmp ja lea add outsb sbb pop pusha call or outsb fisubr pop (bad) dec cmp neg outsl and sti bound bound rorb cmpl add sub dec push popa scas and sbb pop add mov cwtl mov push sbb mov xchg or or sahf pop enter dec loop das cmp mov pop ret call fcoms aaa jmp sub fwait and test xor or das xor add adc hlt adc and cmp jmp pop and or xchg or loopne pop mov add push push int test aam (bad) push push and xchg push ss mov push mov mov dec or in hlt push fucomip mov cmpsl ffreep mov (bad) fidivr outsl mov pop cs cltd xor mov fldcw cmp mov ret push roll repz jmp je rcll stos subl or (bad) loopne mov fild mov push mov data16 cmc jge (bad) decl mov jo sbb sbb xor mov cmp inc and or or xchg arpl mov orb test add hlt and inc and mov or mov add adc outsl test arpl add lahf mov add lcall cltd cmp jp fild push (bad) mov popl into enter jb std and movsl repz decl (bad) rorb cli pop sbb jo,pt (bad) vphaddudq adc mov pusha pop movl mov ret dec dec add call pusha cmp adc jmp cmp lea mov out dec lea sub movl mov xor test hlt lea pop pop movsl mov mov call loopne dec call add jg xor add add roll mov add add push xchg adc add test mulb push jp sti xor call call pop cmp pop (bad) aas sbb add xadd test jle in enter dec push adc andl mov inc mov lock adc iret dec sbb imul inc mov jg in sub call lahf movb jp pop out ret xor jle,pn mov pop shr movl mov daa pop les addr16 cmp pop mov out push pop dec out sub xlat ror inc sbb mov dec pop subl ret fistl lcall lds and popa mov xor adc out sub xchg ss inc mov les pop xor and rcl xor inc test fild in mov mov cmpsl (bad) (bad) decl je mov mov mov mov mov mov movl add inc or out sbb (bad) fisttpll pop or pop adc into nop pop mov mov jb or and loopne or stc push nop push lea mov and mov mov add es jo adc loopne (bad) dec inc ss adc das or add mov mov sbb call adc mov in xchg scas movl mov mov add je pop add dec jge lods (bad) dec ret and shr jg ja mov jecxz mov adc mov lea cmp std (bad) push je cmp je mov mov test mov mov mov or adc jnp (bad) nop add movb or mov push cmc out xor mov mov add mov ds mov add sbb sub add (bad) mov jmp mov cmpsl xor push pop pmaxsw cltd or sbb add scas loope idivl xchg das movl stos call push mov or mov lods scas or inc and pop (bad) and xor fistp loope jle call pop ss mov jmp orb adc ljmp pusha pop movl ffreep add call aaa nop push sbb and pop cmp mov cmp adc shrl mov add out sarb dec jne mov push jmp xchg mov (bad) call call shlb insb add mov add cmp jne (bad) jmp lock add add or mov xchg decl (bad) incl je sbbb add cwtl mov sub mov pop dec pop and pop scas add push movsl push mov jne pushf pushf pop mov xor mul (bad) std pop popf xor and sub jge les and loopne test mov je fdivr dec adc sub cmp shlb divb aas xor loop cltd sbbb xor cpuid cmp jne test je jle pop in jp pop loope inc je cmp test jmp dec xchg xchg xor je and cli daa das and in test out cmp xor cmp loop dec inc dec ja decl push sub push mov loop out jmp mov lcall jl jl lcall movsb addr16 xchg xlat cltd jge js mov inc movl mov sub dec fcomps cmp (bad) int3 dec pop and sbbl stos mov dec clc adc or lahf add setle cmp mov cmpsl loop inc (bad) add out push mov push pop movl cli in mov je xlat push mov jmp xor or pop add push inc stos (bad) mov inc das movl or inc sbb gs add push rorb outsb out xchg das movl (bad) data16 loope push pop sbb test sub call lahf imul mov lcall and imull mov sar lds test cmp mov scas sbb xor add js inc aaa xor outsl into mov push add clc (bad) call fsubrs ffreep clc add rorb loop (bad) mov push (bad) cmp jbe or adc loopne aad lea mov cmpsb inc lods adc (bad) mov (bad) fwait add sub add movb inc jo sbb add pop and adc and cmp stc add adc (bad) or xor inc adc insb (bad) mov sub cmp imul mov ja mov add scas das or int (bad) loop mov add sbb mov inc rcrb hlt or xor push adcl fwait test jne mov jno xor mov jmp xlat adc push cs push xchg cld (bad) icebp push add mov test cs mov pop sbb adc cmp pop rcll inc dec xchg xchg push outsb adc test das pop sbb pop dec xchg sbb mov jbe test cs dec das pop mov push pop xchg lcall add dec dec or cs pop fmull push andl inc sbb sahf sar lret inc je aas cmp mov mov fildl mov outsl pushf sbb lock movsb push lea test add scas dec adc clc je addl movzwl mov cmp pop sbbb adc xor and mov sub and lea je lock or scas inc addr16 and sahf adc out or inc and dec loopne fstl cmpsl mov mov sbb mov jle jg push ja adc popf out push jbe nop jo cmp jge addl sbb inc push nop scas lret cmp mov inc call dec or sub rorl out mov sar adc ljmp dec add enter sbb adc xor ljmp mov rcrl push cmp daa lea xor sub inc fbstp mov cwtl (bad) outsb ja (bad) call xchg sbb sbb data16 dec and call test je fiadd call inc icebp fist add mov mov jmp pushl movsb (bad) call cmp or ret lcall call add jmp leave bound scas test inc jo cmpb xchg ja aas mov pop aaa test lcall jne mov or (bad) call pop push push sub sahf adc adcl in dec lret das or adc or dec lea cmp ja adc add call add inc clc das cld adc adc dec or stc jb and inc add push sbb cmc setne sub xor setne and or inc and jae test je adc cmpl ja add test inc rcll lock inc arpl or arpl insb mov push cmp jne adc sub add mov pusha push adc add bound adc cmc mov pop inc test fs aam or (bad) aad mov std dec stos call movzbl movsl or pop add imul test mov cmp call add push inc and cmc outsl and dec add add cmp ucomiss mov sub jbe sbb or cmp and jne cmp cmp jmp or fldcw test call adc add push cwtl or lock add pop inc cmp stos js cwtl jmp stos jnp test jge stos inc dec test bsf add int3 jns mov iret pop test std (bad) jmp fadds xor je (bad) mov mov je test jne mov mov sub add add cmp je rol std dec test je out stos test call fdivrl in xor lret push jmp sub adc mov jmp outsb ljmp lods push mov fsubl mov pop (bad) mov pop jns movl call push and sub adc stos mov inc sub add add mov and cli emms pop mov test je push xor ss mov decb call and adc inc pusha sub mov xor shlb icebp mov movsl fwait dec aaa mov xor into call or jle mov in mov jmp stc pop add and mov sub cmp mov ja mov cmp mov je test dec loope test sbb inc xchg mov push push jne mov popf add jg and push cmovbe ja bound nop cld jmp jmp mov (bad) lods pop xor or das mov movd sub push mov cwtl adc and jmp fistp icebp or mov (bad) sbb leave data16 stos mov je fmuls lahf jp or lahf adc jle or daa jb dec adc test dec aas ficoml and lods js test je cwtl mov ret jmp dec mov fwait popa or mov jl mov mov adc sbb iret mov std or add push jb in mov or push xor idiv mov lea cmp inc testl cmp jb repz pop push add loope fistp fisttp inc fwait inc and push inc or cmp jl shrl or inc loop orl lea sub add pop sub in sbb cmp xor roll sub je cmp je add or add xchg je (bad) idivb add or mov add daa inc pop rclb mov xchg add ljmp sub xor loopne mov xor mov movzbl mov mov mov call das inc mov adc mov ja sub mov pop adc and aam pushf and push xor decl ja jmp clc pop arpl push loopne cmp jae cmp out jbe shrb jnp out mov mov (bad) (bad) (bad) (bad) jg sub (bad) je mov lea mov lea cmp je cmp mov je jnp adc mov mov mov aam xorb jno adc cmpsb xchg pop pop dec (bad) jg idivl cli je xor jo imul add imul outsl or sar mov mov mov mov jle add mov andb divb mov pop push adc mov mov mov sub sbb push out pop or and leave hlt pop or add jmp jg cmp add mov jp mov mov mov test cwtl sub shr sbb mov mov mov mov xorb add add (bad) out jb mov mov mov mov mov cmp adc shr ffreep jnp xor push inc jg mov pop fadds mov movb jmp insb enter aam mov into scas push mov or sbb call push mov pop and iret push movsb adc sar mov roll push add (bad) je sub mov fadd je or mov movb pop les lds mov push inc idiv jg xor (bad) ja cmp je test je sub bound lret rcr add out dec aam arpl rorb add adc mov xor das jae xor dec push popf stos sbb in jecxz mov mov jg je and fsubr cmpsb loopne std pushl jg push loop sbb push sub sub pop cmp push pop clc sbb jmp in xor sub xchg and inc dec sbb mov test xor das loop and mov in (bad) cs dec ss push add lret (bad) call mov mov sub js aam popf cmp ja mov sbb mov xor mov xchg sbb fcomps sub call mov push and xor xor mov or sbb imul or pop ja or add pusha sub out xchg add iret or inc add jge dec aad and cmc call inc or inc sbb jge xor sub add int jge adc (bad) or (bad) or add xorb pop aam mov add xchg mulb add (bad) add sbb jae sub sub mov inc xor lds ret inc and lock push lahf fistp mov ret pop aaa fs rol cmp add and mov ja aas inc xor ss lds adc call loopne imul pushf push dec in sub mov sub (bad) ja mov inc pop push mov dec out pop cmpsb inc xor add out stos mov ja ljmp and jle shrl aam xor adc ja stos xchg push mov inc imul jecxz adc pusha addr16 jne add ret sub stos sbb jns xchg mov cli pop dec or (bad) ret popa fs leave push sub sbb or stos aad and outsb push or ss bound (bad) adc sbb dec ljmp xor cmp lcall adc mov sub cmp cmovbe and add fbstp ret mov mov xor mov in inc and push adc jns (bad) sub xchg cli addr16 xor rcrl out push int (bad) lock xor popa push or out push ret xchg add cwtl jp jnp adc loopne or mov xchg cmpb or (bad) mov hlt jg pop and cmp jb jbe lcall ret iret inc sbb jne call push mov test xchg pushf inc test pop in mov add mov sub mov add aam sub ret sub mov mov sub or pop mov dec and test add lret dec pop inc xor lcall mov lods nop popl leave adc cmpsl push arpl (bad) dec adc pushl aas inc mov cwtl loope mov mov movb inc lds fidivl add mov pop mov inc mov sub arpl push adc loope cli pop add push fdivr or inc jmp ljmp push mov xor ljmp gs cmova cmp fdiv push inc inc insb cwtl jae add lret and add adc pusha sahf sub jmp jmp pusha outsb das pop lock pop jg rorb push (bad) mov mov sub cmp push mov dec jecxz js cltd nop sbb int shlb test lahf or insl dec test dec test leave call and std sub (bad) mov or dec pop and imul popf or fbstp sub cmp cmp add push test push adc shrl ja je and push scas mov ljmp or lock dec sarl subl and enter mov adc push and andl xor lock orl jns mov sub cmp icebp out inc add sti ja fisubl mov or in push inc xor xchg pop outsb add adc cmp add mov clc mov iret push pusha and or push fdivr sub lods ljmp aaa pop test outsb pop mov and cmp jae (bad) xor rorb fldl cmp je mov ja decl cmp je cmp mov ja cmp jb adc ja inc jnp test nop pop pusha push mov mov adc add inc cltd add lea cmp push push (bad) push adc adcb faddl (bad) fildll sub (bad) je inc js es mov mov dec or adc aaa or shrl popf ss out adc mov mov (bad) (bad) call call jbe jmp (bad) aas cmp aam outsb mov into cld inc mov (bad) fist icebp sub sub call pop cmp lea lea xchg je,pt dec leave mov call ja mov cmp sub out inc jmp out or xchg movzbl mov out or fidiv inc push jl push sbb sub andl jo dec std ret push push lea adc sub jb (bad) and call dec or mov ja test je add lcall les repnz (bad) xor faddp or dec push clc or pop or popa add add adc enter pop in dec in jl add sub push add cmpsb pop mov out add rcll xchg sti stc je mov scas sub psubq das inc cld jg mov cmp mov jb test jne mov or jae jne sub inc inc mov jmp sbb ret jge adc inc adc in or aad adc sbb addr16 (bad) cmp xchg arpl push or add orb cmp add enter sbb add cmp dec cmp jbe add call inc push idivl bound adc popa add and (bad) jno add jg or xchg mov movl scas and call ret iret ljmp pop sub shrb push mov add sub add cmp sub xchg jbe mov xor jae cmp clc ret aas add test movzbl mov jge test je add push push js addl add je jne pop mov jg mov mov jecxz ja aaa sub xchg test mov je daa push add add add add pop gs sti cmp jne pop push mov roll into popf mov xor jmp fcoms pop sub shrl xchg cmp loop in loop cmp int3 push les scas adc and call xor xchg lock mov cmc nop inc iret push push fbstp cmpb adc add hlt (bad) aas mov or cld mov cmp lea inc xchg test cmp jbe outsb and jbe push pop leave xor jmp mov mov mov pop inc dec xchg popf out ffreep (bad) or aaa and mov inc leave fidivl push push ss add adc jp outsl repnz or pop mov outsl push or lcall pop mov pop inc lret hlt daa cmp sub test je fistpl out jp out scas loopne or fcoms rorl incl pop data16 (bad) or inc inc xor ds lea daa push iret rorb in in and adc jb test mov add add add push xchg roll in call or cmp mov lret sub pop cli dec jecxz stos adc clc popf das or nop push lea sbb arpl mov loopne ja add shr push jge loop or negl pop jmp roll add inc pop push cmp push outsl rcll jg cmc and loop add push cmp ja aaa sbb push cmp pop and inc movl hlt push popf fldcw push push push pop fsub and sub add pop shll jge call js jp mov jnp xchg add push mov sbbl ja insl inc mov and mov js mov rclb sbb adc mov adc xchg adc mov bound dec outsl jmp xchg mov addl test or dec dec add and frstor mov sub outsl jne pop adc outsl push dec xor lret dec jnp in push push dec outsl (bad) stos cmpsb dec outsl mov subb fs pop pop jno adc sbb es test xchg outsl or cltd add jb mov inc adc mov es and outsl xchg push aam shr outsl out pop enter inc jae xor nopl mov ret pop dec mov cmp push mov mov je cmp jg inc mov (bad) sysexit push lret mov aas lret pop mov test add loop loope sub dec inc dec hlt xchg add pop (bad) ja mov fdivs adc movsl cli add add cmpsb shlb (bad) mov aaa or call dec or cmp or fmuls mov mov repz pop adc add iret rorl xchg pop mov pushf mov or cmp inc stos pop outsb das imul stos pusha jnp sbb or inc sbbb je mov and pop ljmp into dec or into jbe mov enter inc rorb (bad) sbb dec inc std cmpsl sbb into cmpsl xchg mov mov mov push jo movb ljmp lea jo subl fild mov inc fwait add inc adc push (bad) (bad) cmp jle xor cmp mov je dec add jmp call cmp mov fcomps jle jnp (bad) mov sbb sbb (bad) jae mov iret sub rcl mov (bad) lcall mov cmp jle mov xor jmp pop jge adc push or cli aas sbb test insb lods insb cmp pop lea sbb jne jmp pop xor imul dec push sbb pop mov std decb imul sarb std (bad) das mov test je mov inc mov cmp add cmp inc adc mov pop mov in mov add and cmp sbb jmp push cmp jae mov sbb (bad) je mov rorl adc iret jle mov test jmp rorb cmp jg dec adc mov mov cmp jb jg popf ja orl sub jg cmp jbe lahf mov lret (bad) cmovne cmovne xor scas sahf add jl cmove inc add subl mov shlb mov push test sbb xchg and popf adc add inc mov mov mov mov ja sub adc in push or mov mov jmp lahf cmp jb push mov inc test mov jne cmp add (bad) fnstsw xor mov mov jmp mov sarl cmpsb in cmovne cmove jmp mov jg mov (bad) or pop fldl clc std (bad) (bad) jmp outsl mov cmp jp mov push sub mov xchg rorl mov rcrb loop adc mov cmp fdivs sub shlb pushl iret cmp jl jg cmp ja mov ss mov mov jmp sti (bad) (bad) out mov mov push and cmpb mov je jmp mov xor jmp add mov xor xchg sbb pop sub lahf (bad) call test je mov cld push mov test dec sub test lods mov jecxz adc push and je or fstpt (bad) jecxz icebp and test jnp test push lahf sbb pop sbb ja rorl dec je mov arpl popa ficompl and add and call mov jae shr cmc outsl sub (bad) mov jne mov cmp push repz adc jne inc rolb cs add call cmp in mov jne out sbb adc or (bad) fsubrp leave adc sbb xor sub jle decl call js ja mov mov pop stos ljmp xor cmp je cmp jecxz jp mov mov mov sub inc fcoml jns call lock decl test bound push cwtl icebp or push jne mov and push mov loope add rorl push xchg mov jne mov repz decl je mov mov mov mov imul sbb cmp dec add pop add mov popl or dec cmp dec sbb or cmp pop cld adc (bad) add add sbbl add lret and pop cmovle out jge xor cmp or add add scas ds out pop push add daa or mov and mov ljmp movl call insl mov int3 push scas jle call bound sub orl aas xchg dec adc loopne sbb xor sub and push jg outsb xchg popf mov aas stc pop lock pop das xchg das insl aas adc rorl jo (bad) ds roll mov cmp incl or or inc and mov push jbe std sbb sub out pop add sar inc sub jge push lea lea lea lea movzwl lea jle (bad) decl mov add divl cmp mov jle jmp cmp adc adc jg xchg jmp insl lea mov push (bad) sar cmp jle movzwl or and cmp ja jmp scas sbb (bad) mov push jbe mov lea lea mov shr bound incl ret sar cmp jl movzwl sbb adc (bad) ljmp push sub jne mov shr add sar cmp je lea (bad) xor adc outsl fmuls sbb test jne pop add lea mov mov mov cmpsb and jnp test je inc jmp or mov sub mov dec in or je cmp mov and neg mov clc je cmp adc mov je sub mov lea shl lea fdivp incl iret mov mov sub mov icebp or jg mov add pop cld cmp les clc jg jb ja int3 or pop and jbe shl mov xchg or (bad) ja xchg mov cld mov jle push dec push ret mov xor and mov mov mov jg cld pop pop pop (bad) sub fwait inc lea mov (bad) jbe fnsave repz je scas test iret lea mov shr subl add sar sarl adc test jbe mov sbb sar lea sbb fstpl ljmp adc jae push add aaa inc xchg adc cld jg mov inc je add loopne popa (bad) lea mov (bad) (bad) mov inc mov shr sub add sar cmp jge divb rorb call pop std outsl clc jg clc mov mov jb ja add jbe jmp nop lea adc (bad) fidivr loopne lea sub mov push add ffreep pop cld sub mov mov mov jmp mov mov and loopne rolb pusha out mov fstl (bad) mov out jmp pop out lcall mov ja decl in mov sub cmp jle and fild add mov sar out clc incl movzwl subl lea mov sbb mov (bad) mov (bad) cmp jae fisttpll xchg cmp xchg pushl mov mov mov mov movzwl mov (bad) jg and movzwl icebp jb cmp lea jbe lea mov (bad) fucomp ret sub push add ja cmp jae mov mov movzwl (bad) mov cmp inc cmp jb (bad) ja fnop mov inc std cmovae (bad) mov mov das mov mov rcrb mov and sub mov clc add mov jae mov shr add rcr push inc (bad) std mov and je outsl or out dec add in add inc and aam sarb inc sti jno add test (bad) pop dec cmp je je mov push incb push je movzwl or call add cltd inc inc lcall pop movsb mov xchg pop adc ja jg outsl add outsl add cmp or cmp jb xchg adc out lea xor mov jmp mov mov and or cvtpi2ps stc (bad) decl inc std int in mov sti and inc cli and dec testb icebp sub enter sub in inc arpl push imul inc in inc add shl (bad) into aaa mov dec arpl aaa mov push (bad) jmp ljmp ja sub adc je lea cli ja hlt cmp je rcll sub repz es or mov pop add into cmc (bad) rolb es add mov ljmp je movzwl cmp jb jp cmp jb jmp lret mov mov hlt out mov push decb out mov inc cmpsb shll je rclb shlb push add pusha inc and fnop es sub add sub add and add test sub repnz shr jo cmp cli xchg push cmp inc andl adc inc xchg adcl decl adc mov cmp jb sub adc mov mov cmp jae inc jae jbe je mov call sub ss das push shrl ret xchg adc nop push jae sbb (bad) jb rolb add outsl sub push and outsl sub cli add lds cmp es (bad) idivb xor cmp lea jmp dec (bad) cmpsb das outsb adc shrb ds adc push add add pop jae mov mov sub push cmp push addb rorb xchg xchg mov sbb or add xchg sub or flds cmp xchg lock ja ret push movzwl mov sbb mov insl aas stos pusha jbe inc fimul dec xor orl daa jne add cli div jmp ret or xchg xchg jle xchg pop dec pop flds jnp popa adc sbb adc dec jge mov xchg adc add add fwait pop js or mov cmc fs rcll dec das jl and popa ds rorb mov mov cmp seta jae jo negl add outsl and add inc or (bad) jne jmp out ljmp push call mov test jne js mov cmp aas mov add decl or idivb inc or inc ret sar dec or sbb fildll test lahf scas adcb (bad) adc inc sub call shrb add rorb adc xor mov add mov add add pop mov add push mov mov or adc in xchg push pusha in lret repz call call mov mov decl sbb in mov clc inc mov adc pop push dec dec adc mov add fnop icebp add xor out or add add xor cmpl sete add cmp jne test ficom push or sti (bad) incl enter add add dec add add addb cmp je mov mov mov movnti adc (bad) enter sbb mov mov (bad) icebp in adc add cmpb aad pop (bad) or clc js pusha inc in inc pop int3 and xchg inc push mov add fs jl (bad) lods xor sbb pusha scas sub lahf pop dec in inc clc rolb dec or mov and add or xchg add adc push sbb data16 rorl iret pusha lahf jle rorb pusha sahf sub adc xor xor mov xchg pop sbb inc jg aad jbe cld (bad) js xor call dec enter mov inc and nop xchg popf xor cld or inc cwtl fs xchg pop dec xor and pop notl inc dec lods and pop fld (bad) fsubp xchg out mov inc out icebp aaa cwtl bound adc sar lea jbe add add loopne call sub lea lea ja mov or out sub lock mov outsl inc xor sbb mov call fs inc pop push lea bound inc push adc mov mov hlt fdivr push mov test mov jne sbb mov push jg dec mov cmp fstps out ja decl push add jp je or cmp pop inc lahf cltd lret or mov ret sar mov mov test jne jmp cmc mov mov mov (bad) mov jmp xchg mov sbb or adc je imul mov mov je inc jl fs add pop cltd jnp pop pop mov mov and mov pop add mov adc mov add mov mov mov mov pop mov test jne jmp sbb add pop jp jne test movl add out jne add fstpl cmp test mov test inc mov mov sbb lcall fiaddl aas add test push add cmp cmpsb mov rol mov push add lret inc test and sbb cmpsb cmp xor in mov xor sarl ds pusha lcall jg cmp add inc (bad) iret mov mov mov or add jmp add and cmpl or or mov jne ficomp mov (bad) push add cwtl decl ja leave mov pop add dec add dec add pop adc dec adc fadds xor jns ret jnp sti or or (bad) mov test jne (bad) lock or and sbb sbb es dec clc (bad) jns mov mov nop test je cwtl cltd sbb ret mov or (bad) (bad) (bad) (bad) aas push xor or sti jmp add add loopne xor jg mov mov jmp pop pop push outsl call mov jmp push enter das lret mov stos jne jmp or mov jmp jae adc add mov outsl xchg fwait add icebp test cmp leave add mov loope dec aas mov jne mov dec sbbl xor dec fisttpl ja xor pop add push dec mov mov je outsb js jno push push or adc jmp dec (bad) pop cmpl je scas mov mov mov pop mov mov lods sbb ds je jl ret ljmp repz mov mov mov pop jmp idivl out mov jmp imul lret fcomip out or jmp decl out or push mov jmp ja or pop sub cld maskmovq idivl jmp lods mov jmp outsl ret mov mov jmp and sti jmp nop pop sub mov and rol loop faddl adc add movl je hlt adc scas dec or and fistpll jmp (bad) xor test cmc in cmpsb (bad) sbb popa test je leave jne mov adc adc xor out aaa mov add movl fisub jg or inc or fwait mov jmp (bad) iret cmp je jnp idivl add ret mov pop (bad) inc mov fbld js out mov mov clc mov and sbbl pushl aas add es cmpsb xchg add jmp (bad) (bad) (bad) decl (bad) test mov adc outsb cmc jne mov add clc xchg cmp sbb jmp add add jo jmp sbb lret js jb dec jle lock pop mov mov test mov jo lock xor mov cmp cmp xchg sahf cmp jb dec lock xchg dec add rorl test jmp ret pop adc jmp sbb jmp xor lods sbb mov inc jnp cmp (bad) lock add jns cmp insb mov mov mov mov pop jno mov (bad) lock jmp sbb (bad) or mov ds jmp ds or dec (bad) dec int jmp in dec mov jmp sbb xchg mov jmp or pop xor add bound mov mov or inc mov inc (bad) xor or mov mov (bad) (bad) outsb inc push (bad) sbb mov or xlat inc cmc and jmp insb jl xchg inc inc adc pop shrb decl std decl add scas ds or push add add pop or pop mov mov sub pop push add xor mov sub xchg dec inc out mov inc and mov rorl in or jge fistpll pop mov adc push in test mov clc pushf or scas (bad) pushl sbb mov mov lea mov mov or inc add adc xlat jne add fld1 dec mov mov pop jl rcl (bad) mov mov cmp lds mov xchg cmp push or dec insb mov adc gs fcmovne (bad) decl push clc mov movsbl fldln2 pop xchg mov enter dec fnsave pushf adc test or ds popf outsl fcoms cmp paddusb mov inc js jne ss lea ja adc ret gs lcall mov push es mov call jbe mov mov adc sbb mov xchg mov or and jg inc out sub call push cwtl pop inc fs pop add repnz adc loop bound decb rep add sub popa clc push pop pop inc add dec jle (bad) addr16 outsb outsb call ret (bad) (bad) dec or jae (bad) jecxz fidivl sbb idivb jg or iret cmp fild inc clc xorl mov call call hlt rcrl adc cld cmp lret lds aas and fnstcw call xchg in pop pop cltd sbb cltd pop add sub call ret test ljmp nop push lea daa mov xchg cld push push inc mov imul pop jne sbb mov push ja sub jae call mov add mov cmp (bad) enter xchg mov loop popa mov jmp adc sub das push rorb pop lods cmove sarb test je dec call fsubr (bad) decl loop cmp pop adc movl adc outsb nop push jle scas jae xor call mov je lea sahf aam inc xor and inc std (bad) outsl xor and sub add shr rep js rcrb xchg mov cmp es jne call xchg pop xor push bound xchg sub pusha jns incl ret mov call call or sbb mov jnp lea add decl add adc incl icebp ffreep xor xor (bad) lea sub cmc (bad) jg or mov subl cmp je mov mov mov push sbb je loopne out jne mov add mov call jg add je jl sbb add push add jge cli add call adc clc add mov repnz call mov in insl scas pop and mov inc hlt mov jno push mov mov mov mov mov and scas fldl lods or adc decl add mov lea mov xor call add inc sysenter or pop (bad) jmp mov sbb jecxz ret call outsb call std fsubrl js ljmp xor mov xor inc pop mov cmp add jo fsubs je call adc inc xor mov je mov aaa add mov jbe shr cmp sub imul popf pop add lcall addb dec cld pop mulb (bad) pop pusha sub pop xor sar and insb sar add cmp ja mov test js xorl mov jmp dec mov mov ret add pop and add cs sub test sub add jne ret mov sbb int dec adc mov pusha fistpll add notl mov rorl cmp jbe add mov add cmpsl mov (bad) jmp leave xor xor push inc insb das inc adc push gs jae xchg (bad) fistpl or sub and outsl dec adc inc mov sbb inc mov mov jle out ficom inc mov inc loopne sub inc mov lea cmp mov push dec inc movl add jo mov sbb mov adc inc (bad) into add popa and mov addl xor jbe xchg lea xchg in pop mov aaa nop sbb call push roll negl in add jg jecxz popa loope rcr inc sub mov adc mov call in ficomp movl add enter or inc inc mov mov xor call add push cs mov outsb clc add mov xor cmp std adc je add dec dec lock and add and pop cwtl and inc pop add inc push sete test ffree and mov je loope test mov test sti or jne adc jae pop dec (bad) fistpll mov mov leave dec adc or sub sbb fisttpl mov jb dec outsb sbb clc adc decl das jb cmp push popa aas jp stos sbb and imulb pushf jl cld xchg mov (bad) mov je pop mov push int call mov insb mov xor cmp jne jo pop pusha mov add (bad) jg add jl dec add cmp paddb (bad) fldl and movzbl xor mov cmp je mov call inc or mov adc addr16 mov fsts mov dec xlat sbb or jmp ficoml stos dec out bndldx adc std mov mov xor call mov inc mov xchg push decl xor (bad) cmp pop movsb dec add cmp jbe testb add test rclb ret sbb sbb xor add ja cmp add xchg es sbb js stos outsl or mov js inc adc (bad) mov inc mov sbb std nop (bad) incl pop cmp loopne adc xor pop popl jne ja inc pop sbb movzbl mov call aaa movsb ror std pop dec sahf pop push and cmp je fdiv cmp jmp and cmpsb je push sbb sbb (bad) pop mov dec outsl xor pop or (bad) repz test mov je jae mov test es jb aaa adc daa test call mov fs xor leave dec add out xor and cmp and add testb mov pop inc loopne adc ja xchg arpl in xor fist cli aas test cmp ja and je fistpll outsb and shl neg or mov fidivl imulb aas sbb ret aas movzbl add mov movb fisttpll mov inc out cmp (bad) ja icebp je jg xchg and je dec inc push (bad) xor sbb ljmp add insb fisub mov fisttp pop jmp jmp and mov (bad) jne test je xor xor aaa mov sub jmp push pop mov mov jl call adc arpl movl test stos (bad) clc mov push scas (bad) xadd jo or leave ja arpl mov out sbb pusha adc insb xor xor call add mov pop imul jne and fisttpl or test call sti pop jo sbb mov inc adc pop adc xorl int frstor mov das pusha movsb add rol inc inc cli push xor dec (bad) jbe popa jmp push call cltd test push cmc (bad) (bad) jmp ffree push sub jle gs loopne cs mov cwtl inc sarl adc cmc incl mov add in cld xchg adc movl add add call pushf sub adc push out xor call push hlt sbb add in pushl push lcall lock push sub jno call add (bad) (bad) popa ja outsb mov stos call jg mov gs mov pop pop pop pop lea mov push mov push push mov xchg nop subl sub call test push push je mov icebp jg mov jns adc push push xor jg in fimul call add rolb nop nop mov add sbb jbe add sbb mov jne jmp or adc sub icebp or push adc rorl inc xor jp leave mov xchg dec add movl cmpsb cmp or (bad) jae and and (bad) cs lods xor cmp les fidivr movl push mov dec jne dec inc test gs lea mov lods rclb std xchg cmp mov jle pushf sti sbb movsl std (bad) call or push mov mov insl mov add ja lcall orb inc and testb sub pushl std or or in or scas push and leave ret stmxcsr xchg mov iret pushf pushf pop mov xor (bad) and push popf pushf pop popf xor test xor cpuid sub test je jp inc (bad) loop mov push mov test outsl push jmp mov add hlt mov and mov add dec add add dec add scas sbb adc add (bad) incl inc popa out aas or add add or fist (bad) pop add icebp (bad) call add add add mov jl add mov sldt fwait pop int3 adc mov jns (bad) and fildl sbb jg sub or add mov inc decl add sub outsl add xchg add outsl add out add add decb add add add cmp (bad) lcall add push jb add add add add std out mov add add add jl dec xchg sbb outsl pusha into scas sahf or add pop mov or add or std jle,pn or insb add int3 sub sbb aaa add jno jbe test iret incl or push sub add jae or add in jae wrmsr sbb add pop test sbb add fs push xchg lahf add daa sbb mov xor inc es mov or pop cmp jne mov or add sub incl adc mov add add ret sub sub add push lea add jg xor add out cmp inc add push add xlat and andb adc (bad) jg add mov add mov add test xchg lds add ja out adc inc add imul dec add jae jnp sbb cmp loopne dec inc dec lret push cmp pop add daa mov adc iret std test dec add pop lahf neg cwtl jnp and mov (bad) fstpt add dec add imul add pusha adc jo dec add outsl dec add outsb dec add pop push (bad) or inc mov add xchg and loopne mov dec add jg cmp inc dec out mov adc cmp add addr16 (bad) (bad) jmp jae fs sub insb add jb imul jb insl gs imul outsw adc (bad) (bad) (bad) jg outsl outsl insb add je insl add outsb add imul jb outsl (bad) (bad) (bad) pushl insb outsl add outsb outsb arpl outsb add popa insb add addr16 je (bad) (bad) ljmp gs fs push popa je add add jb mov sti pushl bound outsb add js xor jae arpl je add jb dec (bad) (bad) (bad) xor xor xor imul jo add add outsl add addr16 (bad) fstp popa addr16 outsl outsb push pop insb gs insb add pop arpl jb mov (bad) outsb je jae popa mov or popa jbe pop leave nop gs adc in jbe jne jle xchg rcrl cld fnstenv lock or add fbstp or mov add jl push popa mov sti out movups lcall xor add aas jnp scas inc loope test (bad) std push add addb adc fwait (bad) flds mov inc and push dec inc dec push push and arpl fucom jmp jbe fs gs je sbb dec sbb add or push sbb pop xor cmp xor sbb std jo jne gs adc or neg mov or je cmp jne sub sub daa jb sbb jg into in xor insl inc sub inc je insb sub cld xchg mov and and jne (bad) lock sub and fs dec insl mov in fucomip add fs and cmp jg jg and and sbb xor sarb sti pushf add xor dec enter add add aad dec add pop pop (bad) (bad) fstps and and and and outsl (bad) (bad) ljmp jo and and xor sub insl gs outsl sbb (bad) inc insb xchg adc and cmp aas std mov add bound insb outsl bound je jb gs jmp outsl jo fdivl and insb imul add cmp call cmp fs cmpsb (bad) cmp and push outsb popa jne push arpl add jne and and and scas fs and gs and insb jns mov jp fs incl gs arpl gs jmp and jne jo jb gs (bad) dec seto xor jge mov stos cmp xor mov add sbb fwait (bad) jg leave jbe sbb fs outsw jne and std add (bad) dec add add pop rorl mov dec add add cmpsb imul push cmp push dec add xor mov js roll clc arpl into iret (bad) int scas add jae add pop iret push es mov mov in (bad) pop dec cmp jne jne insl imul and divb push sub outsb outsl outsb arpl push insb je ret or outsb outsl ja cs arpl inc add lock dec push dec dec and pusha cmp test data16 lods enter or add and std (bad) cmpsb arpl outsb je gs jo jns pop ret out decl jb outsl je insl jne je outsb or cltd lcall outsl ja bound outsl mov jbe insb jne jae xlat mov outsb or cmova jae mov and outsb mov bound jg (bad) push inc insl bound and and insb outsl outsb lret loopne popa data16 xor xor (bad) pop pop das insl insl popa and and jge ss nop or jb popa sbb and gs push nop dec outsb arpl arpl pop in pushl gs imul and arpl gs loopne jbe jae sahf addr16 sub fstps (bad) imul loope adc add inc rcr push arpl popa arpl push les push pop fildll jno ret ret and jb pop outsl pop in rcrb mov push sti push push popa ret bound pop and jae outsl jb es jne insb gs and bound inc jmp mov or outsb cmp gs outsl outsb les xor sbb add insl imul xor fs dec add ja jno gs cs jo arpl imul sbb outsb je js out add dec dec (bad) xor add jo mov dec repz add pushf enter sarl dec add jns mov dec pop outsl es jle lcall scas sbb fiadd cltd mov jg iret loopne shr sbb xor and xchg ret add or xor fs push (bad) push inc pop insl aaa je and sbb push stos mov insl pop xor int or mov sbb jae fs cwtl jae adc sbb mov dec cmp mov sub jbe fs add out push aaa cmovl jg push jo cld aaa mov imul or dec dec and lds xor bound gs (bad) push andl mov aas cmp test jae push imul push outsl and xor cmp cmp jo lds arpl jle push xor mov mov adcl int3 test (bad) es inc mov inc add js data16 jb arpl add das das add std mov insl sub push outsb imul mov cs gs push sar aas addr16 jb and inc and sub jo scas outsl xor outsw jb popa and fldl stc pop dec push out jg call jne insb je push dec outsl jbe xor and (bad) pushl xor aaa and je and inc add add and std (bad) cmp (bad) cmp imul inc push sub or call pop jp jbe xchg jns je outsb out add add insb imul pop addr16 cli xchg jmp outsb popa outsl pop outsl jo outsb fxch rolb (bad) (bad) les cld or sub fidivr js dec and stos dec or sub jle xchg daa and clc iret sbb dec and push outsb and sbb test xchg cmp adcl adc dec in dec add insb movsb xor aaa dec mov or dec add push rol call xor lret xor mov xchg adc pop js add jae sub outsb mov sub lock add lahf inc lea add pop enter inc mov cli jne insb dec mov add cmc xchg jb xor push sbb mov cmp mov pop outsl adc movsb test sbb add (bad) ja mov rorl add lcall xor je jbe bound imul call push push add jne popa data16 (bad) jle je or jb outsl jb (bad) cs cltd sub lcall mov sub add js jne,pt jle pop push push add outsb je xchg jb rcr mov gs je jns and adc mov add jae push inc out in pop jb cmp mov sbb jbe (bad) pushf imul unpcklps push xor cmpl ja std cmp or test xchg inc out xor lea icebp setl insb adc movsl paddsb mov out add jmp in add mov rolb add das xlat xchg adc adc cld adc sbb and arpl imul es sbb sub adc cmpsb andl jb push or sbb jg xchg lock repz arpl jg aas add popa fs xor (bad) ljmp ljmp pandn test mov and out out inc mov push pop dec comiss add mov (bad) incl sub imul cmp cmp fsub (bad) call jae je push cmp jne dec cmp push insb cmp add cmp mov and push push dec dec dec push pop or jae or and das inc mov inc dec and add pop test and fs jne je mov sbb outsl leave pop xor insb cmp sbb leavew and jb cs das dec jle cmp imul and inc inc jne push push inc push dec inc dec xor inc inc mov (bad) bound jns xor mov fwait std push push push dec push inc xor sbb es pop cmp add add jb add jge and jbe popa jbe cli sbb jl and push jb mov sub xor popa jne outsl cmpsb insb arpl arpl add push mov outsb and fs jb fnop jg outsb je shrl je sub cmp insb add sti sbb jb sub repnz ret inc jae xchg or or jae std loopne xchg arpl xchg jne movsl (bad) and (bad) adc and add cmp out push je bound jl sti imul (bad) out or jae je jo outsl arpl jae and xor push and jl (bad) mov and jae and js push adc cmp xor inc jmp or cmp aas fld faddl pop sbb xor imul sub xor outsb lds and fcompl outsb outsl sub mov and imul jne addr16 xchg xor inc insb pop xor adc sbb les pop adc clc sub frstor xor xor imul mov jg mov pop arpl je cs in outsl insl and mov ret jmp or cmp jb outsb push addr16 add or and mov mov cmp (bad) std cmp and insb outsl popa and lahf xor jne sub aad jne pushf out lds and inc insb or pop pushf fiaddl divb popa xchg pop insb and lods popa xor and sbb adc aaa adc jne and loope cmpsl sbb mov arpl (bad) leave clc pop mov fs aaa out pusha out shrb sub js adc push inc popa nop mov jbe je fmull adc jb jl pusha outsl sbb inc sub add sbb lret insl sbb ds add fild xor cwtl adc ret and cmpl bound das jb and mov jnp insb fs imul xor repz push lret sub imulb add inc push dec xor push and sbb cmp imul movb jb shl andb imul jo popa jns sbb jae pop bound sub ret (bad) xor xor rolb and inc movsb cwtl inc dec jg sub xchg add xor dec in adc sbb aas sti cmpsl or insl and and aaa insl push inc push push psllw movsl cmp das cmp fldenv and and popa scas add aaa das daa les iret push cmp insl push fs pop xchg xor scas adc dec idiv xor jbe imul pop mov ds (bad) leave xchg add dec mov mov ljmpw dec push inc inc inc push cli adc insl and fdivl cmp aaa insl sub and and loopne add push inc movsl mov ret das jge inc cwtl je test push popa xchg fwait andb pop sbb loop and arpl movsl test or or ficom jnp decl inc inc and inc inc (bad) mov mov jb pushf outsb bound and mov xor push ja in ja aaa and dec xor and sahf and inc das pop jle and pop dec and pop sbb cltd xor dec popa (bad) fistpll cwtl cmp insb pop pop push dec dec dec and and rcrl out test add xor je or jg dec dec dec inc dec and xor add cmp add sub and cmpl push xor or pop bound out cltd clc dec loopne push daa jo int3 xchg lods add cmp jle add outsb das popa mov insl jae mov jl and cs jae xor mov mov or sarl xlat sub in pop xor and and xor dec cmp ret cmp jae xor or and pop (bad) aas lcall dec bound ja rcrb mov mov (bad) jmp das clc pop push add dec add jg std add imul or add push add imul ja insb adc dec jne and and jae arpl jne insb jns cmp bound push fist gs imul int and add outsb add add pop inc or pop add push je inc gs mov or and push imul mov jmp dec push and add ljmp push stc push icebp adc inc loopne cmp adc cs jl add (bad) test je add and inc adc (bad) aas data16 mov fsubs enter insb fwait std jnp add mov addb add orb fmuls adcl mov mov pop sbb fstpl jae cmp aas jnp xor arpl add fsubs add outsl mov ja adcb scas or xchg add add (bad) (bad) (bad) incl add push (bad) xor movsl hlt xchg movsl xabort xchg test pop mov mov cltd (bad) (bad) (bad) (bad) out idivb lea pop or (bad) or mov ficom enter mov (bad) (bad) (bad) ficom cmp nop lock lock pop add add loopne,pn loopne test into push roll push out sub sub sbb mov cmpsb bound jl out lcall in pop mov mov lcall add mov pop mov inc rorb (bad) (bad) (bad) decl xchg out xchg out sarb adc mov es jg mov into inc leave inc pop leave (bad) (bad) (bad) decl sbb outsb das in das (bad) in inc mov test mov inc sbb sbb std (bad) (bad) (bad) lcall pusha and inc and fidivrl push push add add mov (bad) (bad) (bad) jmp fwait jbe pop in sub pop ret ret lds and sbb cmp jp (bad) (bad) (bad) (bad) cmp mov (bad) out pop out fcomps jle ret inc ret cld inc jle repz add icebp add (bad) (bad) push adcl rcrl in in pop push pop mov pop xor mov call stc loope or jmp scas xchg scas fist jae dec jae bound push (bad) (bad) (bad) jmp imul push aas sub sbb or adc xchg arpl push divb push xchg inc jmp gs (bad) (bad) incl jg pop loop pop popf xor sub sub aaa iret clc mov or adc adc (bad) (bad) (bad) decl das jmp mov pop mov push adc or and pop ss dec ss lods mov mov fwait (bad) (bad) (bad) lcall fistp cmp es es cmc mov dec jg dec int dec (bad) (bad) (bad) (bad) jg push mov ljmp sbb sbb cmp je mov (bad) (bad) (bad) lcall inc jb jb cs inc ja ja sub mov mov sub sub (bad) (bad) (bad) pushl mov pop movsb movsl add add movsb jbe xlat dec xlat in dec jbe adc popa mov (bad) pushl dec cli into jge fisttp push fstpl fstpl xchg jno mov lcall mov xchg mov mov cmc cmpsb mov imul or mov sub cltd sub inc loopne pusha mov jmp jecxz and and pop jecxz cmp inc repnz sub sub in mov or (bad) (bad) (bad) (bad) mov inc lret lea jo jo fldenv scas fisttpll in jb in jns jns (bad) (bad) (bad) (bad) ficom sub cwtl mov and and mov pop fimul adc mov insl (bad) (bad) (bad) ljmp lds sub dec jnp in sahf in in xlat cmp cmp push in xchg push lds (bad) (bad) inc xchg das xlat lcall push adc xchg adc (bad) (bad) (bad) dec mov fnstenv adc leave adc add or or push add cbtw sbbl pop (bad) (bad) (bad) push mov int3 lock js lock aad mov jecxz xchg jecxz mov pop (bad) (bad) (bad) push mov sbb pop rcrb addb mov in jle (bad) (bad) ljmp mov jo fmuls loopne jo std or or add arpl jp jp (bad) (bad) (bad) (bad) fbld das pop rcrl ja xor scas inc out arpl jo xor (bad) (bad) (bad) pushl and lret sbb rcrl in out adc adc push std mov gs mov aam (bad) (bad) (bad) decl and adc xor es xor ret mov das jno das ret mov addr16 (bad) (bad) jmp mov std push xor dec or mov gs cmp cmp xchg push push stc cmp push xchg push pop or push cld popa popf (bad) popf jecxz cld jp leave inc leave hlt inc jp daa out lods out mov (bad) (bad) ljmp xor mov jge sub out movsb xchg movsb xlat xchg out cmp mov (bad) jmp cwtl mov cwtl sbb daa rcrl sbbl data16 mov (bad) (bad) jmp push (bad) (bad) jle test push cmp out out stos cmp xchg sahf sbbl inc lret (bad) (bad) (bad) dec mov mov sub imul imul inc cmp push cmp cmpsl sub jns push (bad) (bad) (bad) (bad) jns mov arpl mov daa sub push lods aaa lcall xchg dec cmp (bad) (bad) (bad) (bad) cmp fs cli push cli enter cmpsb rorb call and and push adc in (bad) (bad) (bad) (bad) (bad) fistl push sbb or cld mov mov insb dec mov imul lahf js pop out (bad) (bad) (bad) lcall mov popa outsb mov sub icebp cmpsb icebp xchg cmpsb les (bad) test jb (bad) (bad) ljmp movsb mull xor mov pop mov xchg aad push xor (bad) (bad) (bad) pushl aad dec lds or jmp jmp pop outsb ficompl ret scas mov add (bad) (bad) (bad) decl lods jns mov icebp insl shrb rcrb xchg loopne fcomps (bad) mov stos (bad) (bad) (bad) pushl adc cli or or pop repz mov and scas ljmp lret mov inc addr16 and sub sub sbb outsl or fdivrp (bad) (bad) call outsl lock mov sti mov mov outsl dec pop lret xchg mov insb and jo (bad) (bad) jmp push pop or or push (bad) push out jae fs repz and (bad) (bad) (bad) jmp lret mov pop jl call lret pushf call arpl xchg ljmp (bad) (bad) fstl jg fsubl pushf xchg xchg fwait xchg test stos nop stos (bad) (bad) (bad) call inc xabort jl es les les sub stos in stos int3 nop jecxz fdivs (bad) (bad) (bad) (bad) fcoms (bad) add add cmc add sbb adc cmp sbb cmp mov (bad) jmp pop loope pop push mov stc scas imul shrb mov (bad) (bad) (bad) call pop call push imul daa not mov fsts (bad) (bad) (bad) (bad) cmp jmp xor jmp in mov push mov and xor xor rolb mov (bad) (bad) mov jo dec jo pop xchg pop xor repnz repnz xor pop (bad) (bad) (bad) pushl and and sub and and xchg fistl dec xchg dec ljmp mov mov push jp add (bad) (bad) (bad) decl clc adc fwait sbbb cmp cmp sbb jne jne (bad) (bad) (bad) (bad) fisubl test push mov xlat test push (bad) push adc test add mov (bad) fcompl pop pop (bad) (bad) (bad) inc (bad) sub lret mov push mov pop ret cltd ja mov pop push sub adc jnp inc lret inc test (bad) dec jnp mov cld pop dec cld test or (bad) popa fcmovbe insl sub dec cmp cmp adc (bad) (bad) (bad) ljmp and or adc add cmp movsb (bad) xor or (bad) (bad) (bad) jmp sub adc cmp push mov mov lods rcr jl mov test pop or (bad) lcall sub pop or or or push femms or or or (bad) (bad) ffreep add push or or add push add pop add add or add or push add add or add femms add or or or add (bad) out decb or add pop add add push or push add add or (bad) decl or add add push add push femms or add or or add and incl push add add add (bad) (bad) aas dec das addr16 push scas addr16 cmp dec movsl jg push push (bad) (bad) (bad) decl sbbl int pop fcomps jl pop fnsave cmp divl or (bad) cmp ljmp (bad) stc movsb dec cli lock (bad) aas and jb fisub jnp adc push subl xchg dec lahf dec (bad) sub cwtl cmp pop inc cli pushf add rcrb data16 (bad) (bad) mov adc mov mov pop lcall or add (bad) (bad) lcall jmp pop out fcoml mov imul gs or cmp (bad) (bad) (bad) ljmp mov roll pop or frstor pushf xchg rclb (bad) (bad) (bad) (bad) ljmp inc lods rcr gs arpl cld and loopne sbb add in test icebp add decl xchg mov addl fildl xor sub sub mov jae clc (bad) (bad) (bad) (bad) mov jb sarb vunpckhps jne outsl cmpsl (bad) adc mov (bad) (bad) (bad) jmp mov cmpsb mov xor pop push and mov mov (bad) (bad) (bad) lcall std ss push inc sub into sub cmp jae dec cmpsl (bad) cmc pop pop outsl (bad) (bad) (bad) decl xchg popf lods subl xor push or mov inc je es (bad) (bad) (bad) incl jle (bad) jle jnp push or xchg jecxz lahf xchg mov sahf xchg adcl (bad) aam sahf pop inc repz (bad) cld lahf pop in inc push and in add hlt leave test xchg cmc popf (bad) (bad) (bad) (bad) cli xchg fcoms jle and push movsl pop fbstp mov cmc jg shld mov mov (bad) (bad) (bad) decl cs jle test sub jo imul pop xchg icebp sbb sbb push (bad) (bad) (bad) (bad) mov inc call jge call repnz jp fwait xor rcrl (bad) (bad) (bad) fcompl loopne and dec repnz (bad) mov mov mov add cmp (bad) (bad) (bad) mov ret shl mov imull xor inc nop icebp xor jno add (bad) (bad) (bad) incl jmp das cwtl dec mov arpl roll scas (bad) jle dec icebp loop (bad) (bad) decl (bad) xor mov int3 outsb mov movsb aad push mov popf test sbb xor (bad) (bad) jmp call pop and repnz push loope xor push pop lcall and (bad) (bad) (bad) ljmp jnp into lods jg roll mov push lcall lahf cmp (bad) (bad) incl mov or jle mov ljmp divl sbb (bad) (bad) (bad) call jbe inc ret jge add xor fadds in in and andl (bad) (bad) (bad) (bad) cmp test ret cmp subl inc cmp sbb inc repz inc lock sub dec insb sar (bad) (bad) jmp dec std mov push pop out lea jmp pop mov jo jge scas sarb (bad) (bad) decl jmp mov adc push or pop sahf jne in pop xchg push (bad) (bad) (bad) call pop push clc mov cmp jne hlt (bad) jb sbb fs lods sub (bad) (bad) (bad) pushl insl insb xor push mov popa loop adc xor jne sbb mov (bad) dec aas mov add inc mov or mov mov dec mov push pop xchg cmp (bad) jns push jns jne mov scas aas ljmp and or push mov (bad) (bad) pushl cmp inc mov aad mov cmpsb scas repnz or imul clc jl jb (bad) (bad) incl ds or imulb cwtl xor sub movsw out (bad) out push hlt mov mov rcl je (bad) adc std rorl push leave imul rcll (bad) (bad) (bad) jmp cli push jle scas cmp ror repnz fwait rorb stos into xor sub repnz (bad) (bad) jmp xor jecxz clc lcall jns call outsb add push push out (bad) (bad) call cmpsb repz or mov sbb cmp push test add lret mov (bad) (bad) (bad) incl inc incl (bad) and pop pop dec pop gs jl cld xchg xor inc sar (bad) (bad) decl lret inc or mov cmp in cmp add (bad) (bad) call clc outsl mov lahf fsubp mov xchg fnstcw inc mov stos (bad) (bad) (bad) jmp mov push lea stos ds stos and imul sbb stc rcrb pop (bad) (bad) (bad) decl movsl xchg dec xor push mov xor inc adc mov lcall (bad) call popf mov outsl rorl add add mov pop lea (bad) (bad) call adc mov popa mov sbbb test insl sbbb (bad) (bad) (bad) (bad) pushl cmpsb test clc cmp add add inc mov mov outsl out adc rol (bad) (bad) (bad) incl mov pop rcrl mov push cmpsl push mov mov jecxz cld (bad) (bad) (bad) (bad) incl inc js mov dec dec push cmp fcoms cmp dec fiadd push incl lret and (bad) addr16 scas enter mov xor inc dec ss push mov (bad) (bad) (bad) decl in (bad) and cmp push fwait jg daa fildl sahf cld mov push pop lahf ret (bad) (bad) (bad) ljmp mov jns call hlt cmp fst jp test (bad) (bad) (bad) pushl xchg xchg insb aas mov jmp mov jmp int jnp mov rcrl xchg pusha (bad) (bad) (bad) call (bad) cli add add mov dec aam xchg ja mov es (bad) (bad) ljmp jp lock (bad) das test mov dec jne adc or jge bound jbe divl (bad) (bad) jmp xchg xchg mov inc subb pop pop daa sub push test push add shll (bad) (bad) (bad) jmp ljmp xlat imul jl (bad) sbb xor movsb adcl mov xor push mov data16 data16 outsl into sahf mov fcoml call (bad) (bad) pushl outsb adc xchg test cli push rcrl sbb inc mov mulb cltd (bad) xchg movsl lods (bad) (bad) (bad) (bad) ljmp leave push lcall xchg xchg pushf in lock (bad) (bad) (bad) ljmp fdiv frstor adc fldt mov test xor dec popa (bad) (bad) (bad) jmp fwait scas movsb addr16 sub add in push bound movsb out sarl cmp jo loop mov in xor mov add adc rorb mov sub (bad) (bad) jmp roll lret mov sbb jne sbb mov adc jno and ss (bad) (bad) call add lods cmp push por fwait andl rcll mov (bad) (bad) (bad) jmp aas dec pop (bad) dec lcall xchg mov mov (bad) negb nop push cmovle mov (bad) (bad) (bad) (bad) aas sti out nop fwait inc or pop mov mov xor fadds in push or add (bad) (bad) (bad) incl sti mov and sbb mov lea nop repz cmp (bad) (bad) (bad) std into dec test out addl and mov adc mov mov (bad) (bad) call jl xchg inc (bad) xchg dec (bad) (bad) lar add add repz outsl js jl xor sbb (bad) incl in mov xchg cmp xor xchg (bad) or xchg lcall cld in push popf mov push aas xchg dec fldl rcrb mov mov xor addb (bad) (bad) (bad) (bad) jl jnp imul add (bad) xlat stos jbe (bad) leave jge pop inc lock aam scas pushf movsb jb mov (bad) (bad) (bad) std xchg es (bad) int3 xor in jno xor sbb and daa mov or (bad) (bad) incl pop mov sub das test add and mov push mov iret sar (bad) (bad) (bad) out stos sti inc dec xor push cmp test mov cmp mov push ror (bad) (bad) (bad) decl in pop xchg inc pop les sbb orl inc out mov fneni(8087 (bad) (bad) (bad) pushl cmp dec push and ret bound enter aad test gs or js cs mov call mov mov dec add push popa xor sbb (bad) (bad) clc cwtl adc mov push sub mov inc push mov mov (bad) jmp movsl clc jl test ja cltd idivb (bad) push repnz fisubr mov vandpd (bad) (bad) pushl xor add add addr16 out (bad) sbb stos stos out jbe lcall lret (bad) (bad) popf mov leave inc cli jge xchg cli cli adc mov leave sti lock (bad) (bad) ljmp aam pop mov scas ljmp movsb mul jb xchg fwait rol jne (bad) (bad) pushl std sbb xchg xchg scas dec es ss jle aas inc cmc div add (bad) (bad) (bad) pushl pop push movsl movsl hlt shl in stc icebp icebp or jno xchg stos fcomp jae xor push sub (bad) (bad) incl or mov gs ret ret pop xor sbb aaa xchg xchg mov das lcall incl pop or adc sbb loop int jmp dec daa daa imul jne adc (bad) (bad) decl or sbb sub je sbb cs sub mov pop out pop mov (bad) (bad) call divb cmp (bad) (bad) popa jge mov push sub jnp jecxz ds das das jno test cld push push cmc mov shr sub and pusha jecxz cld pop (bad) (bad) (bad) (bad) jns mov mov pop in aam push (bad) lret lret inc addr16 cmp dec dec ficomp (bad) (bad) pushl iret iret dec mov out out sub stos in sti sti push xchg lds (bad) (bad) jmp xor test iret jmp add push (bad) jg andl (bad) (bad) jmp test jecxz push push repz mov inc rolb xchg lods and (bad) pushl cmp cmc cmc add mov mov scas fcmovu jne and arpl adc xor (bad) lcall (bad) (bad) (bad) (bad) std repz mov int dec sbb adc adc xor mov xchg xchg mov mov cs pop cmp cmpsl cmpsl repnz jle (bad) jp cmp lods mov (bad) (bad) pushl sbb sub jae xchg shlb sbb dec shll and push sub jle (bad) (bad) (bad) cmp mov (bad) out out sub mov cmp (bad) jns pop pop loop (bad) (bad) call or sbb fneni(8087 loopne xor push je cmp or push xchg dec dec fisttpl push or (bad) (bad) decl and mov ret mov lods lods out les cmpsb cmp xchg movsb (bad) (bad) (bad) call in aaa bnd mov out xor aaa aaa pop fisubrl mov lea fs (bad) (bad) lcall test mov push push cli repz hlt pop iret ljmp hlt jp mov (bad) (bad) incl scas jmp outsl mov js dec and jb,pn sbb and cmpsb cmpsb icebp (bad) (bad) (bad) pushl mov xchg mov lret call fnstsw je ds pop and mov (bad) decl mov nop jl ds jno mov int3 data16 nop dec dec fadds add add div testb push push adc popa popa mov scas push push stc imul rcrl (bad) (bad) cmp sahf mov jmp clc adc cwtl cwtl mov adc xor imul (bad) (bad) (bad) incl mov cmpsl sub push push and jmp into dec stos push push (bad) (bad) (bad) (bad) call sub (bad) jp mov or or fcmovbe out xor (bad) (bad) incl push ret sub sub adc mov test push cld imul push cmp cmpsb imul imul cmpsb imul adc imul mov lcall lcall dec pop hlt imul imul imul cmpsb imul lahf sbb cs mov sti (bad) dec cmpsb imul imul roll pusha pop enter (bad) xor inc (bad) aam xor (bad) xor imul push (bad) xor rol xlat push xchg iret dec (bad) xor adc xor (bad) xor repz mov xor shrl dec (bad) xor (bad) jne xor push xor (bad) xor dec adc das (bad) xor shl mov (bad) xor repnz inc lods out xor (bad) xor mov xor shll stos or (bad) xor sub cmp loop xor (bad) xor cmp push (bad) xor rcr or xor sarl rcl out cmpsb test aaa dec sarl xor out inc pop mov xor (bad) xor shl mov (bad) xor roll and (bad) xor sbb mov and dec (bad) xor (bad) push and jl pushf and pop pop fstp xchg nop inc les roll dec (bad) xor stc rclb dec (bad) xor adc dec (bad) jo cmpsl mov dec (bad) xor xchg and js xor (bad) xor clc adcb (bad) xor (bad) xor mov xor ja lret cld (bad) cmp ja repnz xor shrl lds add xor addr16 xlat stos jbe dec (bad) xor (bad) leave jge (bad) xor rcrl lock aam (bad) xor mov rcl (bad) xor std xchg scas cmp (bad) xor aas (bad) int3 xor in dec (bad) xor jno xor add and sbb xor xchg add xor (bad) xor jmp mov (bad) xor rorl subl dec (bad) xor outsb pop mov dec (bad) xor sub das test sar in add imul imul imul cmpsb imul imul imul cmpsb imul fisubl adc repz cmpsb imul imul lcall pop sbb lcall and nop mov lcall pop or imul imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb mov call lcall imul imul imul cmpsb imul cmpsb imul imul cmpsb imul inc push imul xor inc clc out divb ficom roll into push out dec mov popl dec (bad) xor out mov sti push scas dec roll pop scas add dec (bad) xor and fwait jne xor (bad) xor dec insb jle (bad) xor roll dec rcll bound or popf xor (bad) xor rorl das push and dec (bad) xor (bad) dec jg adc xor (bad) xchg imul pop push add jbe (bad) xor mov push fstpl push xadd xchg dec (bad) xor roll mov xor (bad) xor addr16 cwtl (bad) xor (bad) mov mov xor in xchg dec (bad) xor add mov shll dec (bad) xor add arpl inc and (bad) xor sar mov (bad) xor ret mov xor (bad) xor cld jp mov xor rolb dec sahf mov add (bad) imul xor shll dec (bad) xor fs xchg or xor (bad) xor lahf mov dec sarl xor repnz (bad) xor mov add xor fsubrs ror hlt inc adc (bad) xor lock pop cmp xor (bad) xor lret mov dec rcll in xor jl int3 nop add xor (bad) xor negl push (bad) xor shrl cltd cmp dec (bad) xor fldpi sub shrb pop xor dec ror xchg xor add sbb xor (bad) xor rolb imul jnp add insl mov daa or mov rcll popa jo mov outsb das aad inc outsl outsb je outsb je ds sub add add sub sub inc cmpsl sub imul ljmp jae inc jne push push shrb or dec gs fs (bad) jmp jae inc gs jb jb add push push and insl outsl outsb loopne lock je and js or mov out (bad) lret add arpl pop and and sub adcl add add jae jae gs daa mov add add (bad) out pushl inc dec inc add inc inc inc push push inc inc push dec dec push push inc or (bad) dec push inc push inc dec dec or push push insb in ja out or inc dec dec push dec pop inc das inc inc dec dec dec pop push mov inc inc inc inc dec inc inc push dec pop or dec mov dec dec push inc inc dec inc inc dec inc inc xor (bad) (bad) fmuls inc dec inc dec dec push dec dec dec inc inc push inc pop xor sub xor dec push inc push (bad) fistpll testb push or push dec push dec inc dec mov push push dec inc test or dec push pop push or movsl lret fsubr pushf push xchg inc inc push push or inc dec inc push push roll dec dec dec inc inc dec push push pushf or int loope inc inc or push loope (bad) mov push add pop dec push push add inc push dec push dec mov dec push push push dec jno dec add push add jmp mov dec pop inc dec sbb popf or dec push add pop push push inc push dec pop mov fcomip aas jmp dec dec cltd dec inc push inc dec push outsb loope es push dec xor inc push inc push or jg daa inc push add dec inc dec xchg inc cmp cmp or cwtl lea inc push pop xor cs pop inc dec push push sbb xchg sub inc push inc push dec add dec dec dec or adc push jno inc dec inc (bad) mov pushf push dec push rcll push push ds dec dec inc inc dec push scas push pop push inc xchg pop inc xchg dec dec dec out dec stos dec pop xor dec dec dec dec add or push cli popa add imul xor insb outsl outsb add jae add adc outsb imul jp mov and inc nop int3 adc push pop xchg or (bad) adc ja mov and dec add jb (bad) dec jmp outsl jne arpl pop jo jb jb and jns jne jg hlt jb add imul and push inc add add or inc push out inc (bad) jno loop popa outsb arpl jo xchg cmc ljmp lcall pop flds jns mov rolb ret fcmove fs jb imul scas dec bound data16 gs insb outsl ja insb and scas call je arpl in (bad) or cmp add movsb les jbe and sub inc shll and mov outsl addr16 jae fist gs jb jo outsl jb fild (bad) jb jne jns insb sbb ret or sbb and jl dec cs push outsb imul sbb jae data16 bswap in or sub fildl pop in jb add jb and sar mov and gs pushf je inc int3 inc mov data16 mov (bad) mov (bad) sbb hlt add jle jo jg arpl insb and cmp adc cmp (bad) imul bound xor ja je jb jne je inc pop or pop imul jo mov (bad) ja sbb pop add imul ret ffreep adc and arpl and fild xchg insl popa outsb jns jae insl roll bound imul jae das jne xchg int3 xor dec lds dec mov add popa addr16 mov sub outsb gs std mov outsl ja add adc je cmp fidiv jae popa mov mov in push inc cld cmpsl sbbb outsb outsl jne push inc outsl xor arpl jnp sbb inc jnp sbb xchg add shll (bad) insb data16 bound jl jne or imul sbb sbb mov ja inc rcrl push pop ds jb cmpsb pop inc cmp lret pop add xor xchg ja and dec outsl pop cmp inc insl imul bound and add insb orl xor ja fstpl or or cwtl rol fs subl test es cmp popa outsb jae je adc sbb and jne es jecxz gs dec pop dec es je insl and mov push push add je (bad) icebp jg inc jae outsl jae sub pop dec mov or sti add inc jb jo dec cmp inc pop push daa push mov mov xchg je and dec push cmpsb jmp xlat inc add add loopne mov pop mov das jne sub mov arpl xor popa jae outsb (bad) cmp jmp arpl arpl data16 gs or insb insb add popa outsb sub adc pop xlat gs mov jae (bad) cld decl mov jo sub je jns jne jo jae outsb popa setns popf mov dec (bad) xor add add fsubp in repnz idiv add dec add pop (bad) xor pop sbb jae mov xor cmp add paddb sbb and je add iret sbb cmp or hlt pop push inc insl add mov cwtl test xchg add lahf fs cld aas push fistl xor xor xor add imul inc push and xor dec mov pop dec inc dec inc dec inc pop inc dec dec push inc inc sub and pop xchg mov and and rcr inc daa dec and add push jne jne fs outsl sbb adc je je movsbl cmp sub inc push pop dec inc adc test inc dec inc push test inc gs sbb dec cmp add outsl add outsl outsl jo and pop sbb pop jae dec add and test push or push push inc push inc lock sbb sub es js mov jle push imul xchg and and pop pop push dec imulb pop fs (bad) sub mov cs sub sub daa jle je sub or push push (bad) or add (bad) call addb loope adc pop mov mov adc out add xor inc add addr16 add jmp jo push pop pop scas imul inc roll sti xor inc add inc add and or inc mov jae and add mov test outsl arpl jae inc or or or inc pop ss xchg adc ffree pushl add pop jo je pop scas and and ja and std dec push dec dec and btr roll cli sub pop inc push mov dec xor ds pop jo pop cmp sub xor pusha jne cmc add add add or in popf sbb sub jbe dec push inc dec add outsb fmuls stos or inc add pop inc (bad) mov sbb test inc data16 fs inc add fcmovb push insb (bad) sub dec cmp jo push xor jb je je mov outsb jmp sbb adc add add bound (bad) (bad) (bad) jmp add data16 push add insb add outsb add jo jno jb (bad) lcall daa je jne jbe ja js jns jp inc add inc add add (bad) (bad) (bad) incl dec add dec add dec add dec add push add push add push add push add jmp add xor xor xor xor xor add add jle pushf popa inc sarb sbb and cmp cmp or into jge les nop daa inc add sub or idivl adc or inc add and and shlb inc add leave outsl mov and mov ss (bad) je (bad) mov pusha add out jae out push xor test add mov inc inc out xor mov xchg data16 push jle pop jae and jae (bad) cld add setg ja (bad) mov icebp and and jno cmp mov scas mov pop mov mov pop add add pop add or pop cmp add adcb add ret pop or je js decl jne pop jo jb sub test fwait call jne inc (bad) xchg inc cli and jnp or sub dec and popf adc ds xchg mov arpl cmp or xchg (bad) add movsb inc mov xor add fs add lahf stc and bound mov jnp les daa add and outsl or mov hlt sub jb sub sub dec cmp ret and push out mov or push inc push inc push inc jg pusha dec loopne inc dec inc inc dec and pusha jb dec sarb sbb divb sahf push add ret dec dec dec inc inc out xorl cs xor inc sub xor xor stos dec sbb orl dec cmp mov add and pop popa push imul shlb push inc inc inc adc ja jp push dec xor movsb cs mov ret mov out test add and push inc dec inc sub xor pop jne adc je inc or clc add dec push inc fs xor fcomip imul cs lds push pop inc push sub fidivr ret bnd add xor or jae jb outsl jb inc rolb xor add and mov jge std dec dec dec pop es inc push push inc loope faddl add push pop or cmpxchg and je or push pop pop aas pop mov jne pop and push xchg sub sub cmp sub push inc push (bad) push or jmpw jmp cmp sub in or insb jbe fnstenv xor xchg aad mov xchg sbb sbb inc pop test xor pusha and (bad) xor in or inc dec sarl fildl jmp jge ds outsl data16 arpl sbb push enter dec and orl push aaa add sub push inc push push inc push pop std jae and push inc push pop cwtl orb xchg ret adc add inc mov jg gs add sub and xlat jl lcall imul push jb ja popa je pop pop inc or cwtl mov fwait and pop scas push jne imul mov cmp je popa insl nop loope adc aas xor nop popa pusha xchg xchg mov jb or pop sub xchg xchg fnstsw add or shrl inc add xchg adc inc pop jge dec push xor ljmp loop sbb les data16 cmp pop arpl cmp xor adc add popa cmp cmp jnp adc and pop mov adc sub cmovns popa cwtl cmpl dec sub jae and movsb aas jo sahf inc inc dec inc adc inc mov dec negb sub loop sbb pop sbbl cs cwtl lock dec or jns inc and sbb push xor in mov sub and std pop pop clc or xor jae je test movsb (bad) jae xor pop jmp xor mov mov stos iret adc add (bad) mov stc aam rclb mov insb xor fs cwtl jb inc mov add mov jns xor jmp xchg mov mov das add sub imul dec push (bad) call call sub je arpl add ret (bad) incl dec int3 push add je outsb hlt xchg cmp outsb sbb arpl outsl add jo adc add fistpll add mov xchg add popa pop gs bound stos idiv sti cmp add jbe movsb aad mov jae outsl jo das lods mov incl jbe jb outsb insl outsb je popa jb pop push xor leave push sub lcall ret mov push outsb rcrl js popa imul mov sahf test jg sub jae aam push dec ss push push pop inc inc push inc push inc fcoml push inc push inc dec adc (bad) cmc call dec inc dec push push pop dec dec inc push inc lcall popa sbb push inc inc jb inc push inc push dec inc dec push int3 lock push sub push add push add cmp inc aas add inc jae push mov call outsb (bad) push (bad) ss outsl jb in insb gs inc roll stos mov (bad) or dec add inc add enter dec add add gs sub ja dec dec inc add push dec push push mov pop xor pusha or mov dec test sbb imul in or adc jae or je inc repz aas dec jg add jo rclb xchg add sub and push push dec add dec aad mov xor dec cmc dec int3 mov add scas sti and dec dec add add pop push pop out mov or xchg add mov pop pop mov adc add dec adc add or jmp (bad) dec dec add add and cmp pop push out iret jne bound push jbe mov cmp pop mov pop pop add inc add jp adc jle popa insb jns adc pusha movsl lods push lds dec inc dec inc scas push sbb (bad) (bad) mov imul outsb jnp mov jne and gs mov adc addr16 inc or mov pop xor xor sbb push mov add cmp arpl (bad) jmp push add fstp mov mov gs dec pop jbe dec push cmp pop dec dec inc pop or mov or mov and lods dec push and rcll decl xor roll or fs insl and and push out add leave or popl and ret bound or add (bad) int3 loope adc adc sbbb and and mov int adc gs push sbb push push sub push int3 dec inc pop ja push inc xor fwait or xchg push js call int cmpsb adc outsb sbb mov add je addr16 repz inc jo sub cmpsb or nop add sbb and push das daa xor xchg bound iret pop aaa sbb push notl inc dec push pop dec inc dec inc pop xor out pop mov push xchg push gs popa jo outsl jb mov sbbb je pop xor rcll adc or pop or and stos outsl mov sbb jns das mov adc inc or leave jbe jp mov adc xorb jecxz inc xor jmp cmovg or sub add inc fmul mov mov lahf jb adc imul inc in das and in pusha mov stos mov push add mov nop inc add mov cmp inc add lea adc add enter inc add test mov add fsubl ja xchg outsl ffreep data16 jg inc add xchg pop or inc idivb pop movsl xchg inc add fstps outsl stos xchg sahf mulb ret orl sbb (bad) out sbb xor add mov xor xor xor xor xor fsubr fdivs xor cmp xor xor pop mov or cmp xor pop xor stc jl and or xor cmp cmp jbe in xor xor pop aaa fsubr enter xor xchg xor mov xor push xorl cmp and push xorb push mov pop inc push jg inc or lods cmp xor mov mov sbb ss sbb xor jbe push cmp leave fnstenv xor inc jbe into jle cmp fdivrs cmp cmp mov leave fnstenv jge ss into leave fnstcw xor arpl xor lock cmp sbb xor pop push pop xrelease and add or and or or int add movsl inc add std inc pusha add movsb inc add add ja push mov add or pop outsl push inc mov daa out add inc cmpps sti out lcall add inc add add adc (bad) ud2 mov jmp iret das adc pop enter mov pminsw jle push and add lcall add mov add add mov inc fnstenv dec ljmp and pop add add inc mov sbb subl sub data16 mov icebp pop jb ja ja imul push mov xor or addr16 call adc lods mov and test test lods and dec testl lods xlat outsl push xchg pop mov jge add inc push push aas insb gs outsb add xor rol mov xor inc inc enter mov and js arpl andl jae and rcl pushf pop pop js mov push add add adc inc and add jne jae addb push mov jo sbb add lods xor je mov pop je je gs add push xchg and jnp jo imul push add pop inc add fnsave inc add inc adc dec add dec pop js add add add inc add adc jb popa add add jne ret and jb and dec add cmp inc push adc push hlt push inc pop pop sub jns stos ret jns add dec mov idivl pop cwtl dec dec popa insl insl push add loope add outsb add mov popf nop and inc pop dec adc lcall dec push pop push inc push pop dec inc dec inc push flds std pop push cld add push pop or je insb insb cs fwait enter outsl fs lds je dec je push outsl inc mov jae sbb mov data16 inc xchg push pop mov jbe imul fdivs adc push sub sub jg jne jb push outsl insb jne xor cmp push std psubusb gs gs xor push push loope iret cmp xchg mov or push cmp pushf rcrl jo pop gs out ds decl cmp imul loopne outsl je std out inc dec outsb imul stc or push jbe (bad) pop xchg add gs inc push sbb call push push push add imul insb xor mov lds adc arpl (bad) pushl imul lcall popa je dec popa insl test lret jo ja or sbb addl outsl ja jb push jne inc js xor pop sti sbb add push push inc (bad) jb jne add add cmp add (bad) cmp addr16 outsl jo add outsl jae or je (bad) jg inc add frstor mov jbe mov icebp jge mov sub lods lret iret adc jae cmp je sub add xchg fdivrl insb insb pop sbb push add xor add mov cmp test ret dec pusha (bad) out cmp and xor inc inc (bad) mov inc mov adc arpl jb mov xor add and or mov mov movsl push ljmp cs push push sbb xchg popf push add add pop repnz and mov pop nop das sub outsl aas and pop (bad) mov adc repnz test mov and sub or dec add sub aam popa pusha xchg mov inc jb aam loopne std xchg sub bound dec inc inc pop inc pop push jl pop fdivrs xor push outsl outsb add addr16 fs insb cli dec aad das xor xor dec mov add inc pop add jmp and or je push cmp and (bad) jae nop sbb and xor inc add xor jne add sbb dec push xor out data16 inc aad lahf push (bad) add outsb outsb jns lock push fwait dec outsb addr16 add fldl insb jne js sub outsb aad add add movsb add push cmp inc imul clc das insl push imul push sub xor bound adc inc andl push dec sbb popa insb mov and and outsb outsl and inc call and imul sub mov jae pop add push push hlt pop nop int3 and outsb gs push adc dec jg or xor je outsb jne or ret andl and or jmp and imul sbb out push pusha stos scas or mov and data16 js gs (bad) adc and flds inc pusha mov jae dec dec or push sub cmp jecxz dec inc add (bad) enter adc in rorb mov pop cmp popa outsl lsl push inc add push pop cmpsb jmp rolb loopne pusha mov rep inc je push or adc daa (bad) (bad) pop add ja je xor (bad) ljmp je dec dec inc pop inc dec dec dec push pop push push inc push inc inc inc and xchg add popa sbb aas push gs jge mov push fs jg fidiv push gs outsl outsb jae cmp dec mov push push add insl movl cmp je insb ds ds mov gs gs jae push cmp add iret sahf sbb bound jns pop outsl jne and rcll dec cmp jp jns je pop cmp arpl fwait sahf mov outsb inc outsl imul inc scas movsb add outsb xchg idivl jae shrb mov repz push mov imul movsb pusha pshufw outsl mov gs outsl jb outsl outsb pop popa imul jae cmp bound leave andl adc xor xor ds mov punpcklbw jae daa and ret imul add and sub fsubr cmp das dec aaa loope (bad) cmp outsb xorl sub mov push sub arpl popa and add scas mov sbb mov insb popa arpl mov popa mov push add sbb push mov insb add cmp add xchg nop xlat ficoml or pop dec shrl stos int3 inc pop push jle mov sub or call sub mov mov jo das pushf mov and outsl insb test pop push push inc push inc cmp arpl and (bad) pop nop js ret outsb fs hlt inc add mov imul pusha jo xchg call xor scas jnp dec into xchg cmp arpl or and jmp or bound roll xchg jp pop pop sub adc pop icebp arpl pushf cmp xorb xchg xchg icebp jbe popa and dec enter insl insl jne imul and stc push sub add pop fldl adc push insb gs aas cltd mov fs xchg dec aad insb jbe push bound cmp push (bad) inc cmp ja jo jno mov and loope inc dec push orl sbb test bound rcrl fsubrs outsb popa addr16 or adcb xchg xor add (bad) sub ror fs loopne inc add inc add pop out mov add add inc pop inc add pop inc add or and mov or mov pop inc add add movsb pop inc pop inc add out or push fs add lsl jmp inc cmp sub sbb xchg or mov insb fcomps sysret adc pshufw push das pusha loopne (bad) pop mov and push sub mov ljmp and les jnp jne add sbb jne add add add imul imul inc inc dec dec out (bad) jmp add bound dec popa jb inc jo pop jns dec mov dec jne add add jo dec arpl add adc jo jnp je js dec (bad) je jl test rcll fwait inc xor inc sbb neg and add xorb add xor aaa dec je loopne dec add and adc add pusha jo add inc jne adc arpl inc jne leave je dec aam rcr icebp or and ja jns jb adc add mov sbb push aam pushf add push adc add pop mov je inc insb jae and outsl je pop jae jae data16 subl jb add jo inc gs jmp roll fs and iret inc call popa inc js cwtl add add dec xchg xor and dec sbb xor lcall add jbe xchg cmpsb push fldz cld adc cmp sbb add or cmp pop jnp cmp sbb inc outsl jb imul inc outsl jne add and and inc mov cmp mov aas add outsl js and pop (bad) dec and jns sub insb imul add adcl loopne sahf and ljmp outsl and loopne sti add dec and push pusha loopne sub dec gs fwait (bad) lcall popa outsb addr16 imul jl inc fcompl scas jo dec imul and mov add shlb and or xacquire arpl jne fildll jb inc outsl insb sub in enter push fcmovu cmp jecxz dec mov adc jae add aad inc pop and and gs pop out pop int3 sub std dec outsl push pop mov je push dec add inc and sbb and aaa in enter movsl insb and jb and (bad) fsubrl xlat out jb adc and dec je addr16 aaa jae xor sarl xor sarl dec add daa sub push (bad) xor shll xchg addl movnti fcomp jne test pop pop pop sub add inc pop or scas sbb mov insb adc cmp push jo and outsl imul jb sbb cmp jl jns ljmp rcrb dec dec jb dec daa data16 xor inc xlat push arpl add jne inc call push call add jne je push dec cwtl popa dec mov std test mov ss (bad) xor (bad) cli dec dec jo cmp iret fs ror inc mov imul and add in adc or add cmp push sub add lahf add sbb add dec dec and add or add jbe (bad) xor orl mov xor insl jp pop (bad) xchg jae sbbl into int dec inc mov cltd scas push add or adc or out insl cmp (bad) aad fldl cmp popa jb cmp add lea mov sub imul mov (bad) add pop gs mov add mov xor pop mov inc and mov ds add add dec jbe fdivs and fwait xchg pusha push cld and sub adc mov mov push pop ja and shll sbb push aam in repnz out mov dec dec push mov xor dec out cltd bound xor fs inc outsl data16 imull xchg jo es les push pop loop dec dec popa scas pop (bad) subl mov fs js adc pop nop sub int dec dec pop jg fadd xor xchg push inc insb popa push cmc jg sub inc inc dec push dec inc pop inc dec adc adc out and arpl jbe or push push pusha adc outsl jb pop and test idiv add push dec inc push pop inc dec dec inc dec push insb sbb pop ret push jge and jae test sahf ret push push loope ret fistl les push aam std jg test inc and sub and jne ljmp mov loope and aam jle cmp inc aas sub mov push mov add inc add scas cmp rclb mov lcall jo push inc xor fsubs and or add dec testl aaa ja out cmp pop add pusha pop or add pop inc pop mov mov adc add jnp in adc sub nop das sbb jl arpl outsb jbe gs aaa hlt insb jns popa arpl push test dec mov xor and pusha movl sbb call jp or gs mov adc popa xor push imul (bad) push inc jl je jo je sub cli dec mov push gs jae xchg rclb add lcall adc xor and in mov and and cmp pushf push mov inc and mov dec jp (bad) hlt (bad) iret addr16 fs xor out imul sbb mov add pusha and and mov fisubr inc popa je and je jle inc arpl call and rcrb adc stc scas fist stos aas and fs mov push jno inc or outsb bound or inc mov roll fwait (bad) scas mov test pop repnz outsb cmp and gs add andb add arpl or fnstenv xchg or jmp mov pushf outsl lcall popa je inc dec push push push subb pop pusha jo or and pusha lret repz jae xchg pop (bad) dec cmp outsb imul cmpsl jle movsb fimul push imul add rolb dec outsl icebp icebp sbb (bad) cs addr16 add jo push and inc insl jo push (bad) jns jae sbb cmp leave sub ret push push lcall add jo insb adc cmp int dec dec push (bad) adc (bad) gs mov cmp outsb popf add or into push xchg (bad) add es jmp fiaddl gs mov push cmpsb dec add cli lock loope inc jge fs adc fs add adc cs mov sub mov mov popf cmpsb jae sbb mov pushf push cmp cmp ja jl push push (bad) pop push inc push push dec inc and add add sbb addr16 inc xchg mov mov cmp je aas and jne aam add je add aam andl pop xor sub ret lret mov ret mov mov ret insb mov cmc shrl insl gs lret outsl jne fs je outsl bound pusha add fs jae clc lds pusha pop or outsb xor jnp outsb push es jo rclb mov mov ja jecxz dec and jae fwait xor mov cmp pushl outsb pop data16 insl jg hlt sbb cli inc fs mov push and (bad) jno imul or and adcl xchg imul daa dec push inc or jno xlat (bad) cmp adc ds adc pop inc rolb inc lret aas jg pusha or dec cs aad mov jns fcompl inc ljmp pop cmp mov out lret and dec xor jne stos sbb add sub fdivs adc insb icebp inc dec xchg push icebp or cmp mov je jns jmp add xchg and jbe (bad) lret inc dec inc lcall or (bad) sub shrb and outsb arpl mov pop ret roll (bad) fldl imul mov jne gs add adc xchg shlb mov outsb outsl jb addl xchg fsubrs iret xor fsubl xor je push pop fwait jo cmp mov add inc sbb in and lds jae push push iret lods push out add outsb cmp xor and insl ds push test sti pop dec push jb movsb insb and inc pusha sbb lahf arpl outsb jne std loopne inc or and mov (bad) shlb sub je or ret pop adc or jbe add xor xor cwtl ret es add or or psubusb pop add lds testb add xchg or jb dec gs loopne inc (bad) jns inc mov scas es sbb jl nop xchg inc mov and add dec sbb outsl sbb addl cmp mov adc jo sub fs dec sbb mov cwtl andl add mov jnp add cmp cmpsl add nop cmp and insb popa xchg mov mov adc jbe sub pop imul mov lods sahf push js cwtl mov leave and (bad) pop insl mov mov xchg or in jne pop lods mov orl mov outsb outsl ja gs sub sbb adc je jae push dec and ds js je inc gs and mov pop lret and cmp and push adc add and adc pop idivl pop lock ret shlw wrmsr ljmp fstpl insb popa lret push rclb jnp sub inc jge loope adc jge add out cltd and cwtl aas mov ss enter popa loopne sbb xchg and and xchg dec icebp sub mulb adc jb ret adc sbb inc addl mov mov bound adc lods cwtl or xchg pusha pop sahf fchs xchg adc sbb and outsb and jp test movsb mov fwait add jb dec add sbb or pushf fs adc adc sbb cmpsl inc lds and add or (bad) push outsl and pop adc test adc cmc pop data16 lea fcomps jae ja mov gs imul and push je insb gs stos loopne or sbb sub or adc jae bound and and pop adc adc cltd stos and sbb add arpl data16 and iret mov push inc jb imul and add idivl aas jne je jo ret les bound push je arpl outsl das arpl jne mov testl fsub imul (bad) xchg xor fsubrl mov add popa jp lcall cmp test xchg add dec dec push loop sub mov xor inc popa mov enter xchg jbe (bad) les sbb fisttpl xchg push xchg lock js and int3 add cmp cmp or xchg push adc xchg addr16 imul mov push outsl push adc lds jns jae mov push mov inc sub or inc cld inc mov sub imul cmp es fs xor adc arpl mov jns gs mov js es add add dec and inc mov mov push imul sub mov outsl sub xor mov jle xor push push data16 fwait orl int and pop inc in pop xor das out adc mov shlb insb or pop mov fs jle ror xor outsl outsb imul sbb dec incb pop adc out fs xor add push sub or ret add daa popa mov add sub pshufw jae popa jo and arpl nop cmp mov xchg daa sub adc clc xchg and imul shlb (bad) inc hlt dec in ret stos sbb dec and cmp dec pop shlb dec ljmp dec daa inc adc mov or adc iret ja sub (bad) xor xor jbe jo cwtl adc or das and add jo loope out or jg pop das add push mov mov pop or and inc loopne add jmp or or add jo gs xchg jmp or pop in cmp (bad) jne xor sbb scas add testl jge push pop jae pop add add add push pop add (bad) out add add out mov add add mov (bad) fisttpl jecxz adc jnp jae or pop or adc addr16 jge adc jnp mov (bad) or add inc cmpsb loopne outsb gs lock mov arpl (bad) cmc jg xchg add inc jns imul decb sbb adc js inc jb ja jnp inc push jmp jne push dec js fdivrs notl inc and daa ret sti ja add popa jne dec popa jne jae paddw or add sbb push and lock adc inc outsl fs out or inc adc iret mov and mul or jg inc or adc xorps and add inc pusha mov iret adc pop dec lock cmp adc xlat iret push (bad) xor xor pop daa lret pop pop fcomi mov pop xorps pop out mov inc inc cmova loope and mov mov aam addr16 cmp inc dec iret jge test and xlat cltd cmpb pop or and int3 or pop out ret jge shrl and cmp cmp aad cmp sti (bad) fisttp dec push push inc push dec dec pop cmp xor push dec inc dec dec dec push xor push fildl push out pop inc or in mov inc or fisubl add loope mov jmp or xor inc pop or adc add adc jae xchg pop pop pop cmp inc outsl std (bad) (bad) pushl sub and insl pop pop xor xor inc dec pop push pop aaa jl and inc push push add xor ja imul iret or jne insb and mov fsubs adc movb and mov and dec pop or sbb jg add pop pop xor pop and and pop add pop dec inc pop pop xor adc jne aas xchg add add out pop or scas jns loop xor xor xlat or in imul dec shl jg (bad) pop outsl outsb add mov push add outsl insl cmp imul push icebp fcompl adc cmp push inc mov out pop cmc bts addr16 psubw and sbb mov push adc loop push push jg adc (bad) iret bound mov cmc fildll out mov xchg mov add add inc mov faddl imul cmp jg push mov jg jo out and jg pop add pop (bad) es ja pop jnp adc sub sub cmp pop outsl pop out mov pop ret pop mov mov or mov scas adc dec push dec push dec add fldl add push dec dec inc inc add push push pusha fbstp dec inc push inc add fwait dec push lcall add push pop dec cmpsl add gs decl inc pop push dec dec dec add inc dec dec inc pop adc out lcall inc push sbb push dec dec inc inc inc dec inc add mov dec fild push pop dec add inc inc cmp dec or jge push pop dec push push or insl push dec inc dec pop (bad) aas fnstcw pusha xchg inc add dec push inc push push dec dec push dec (bad) jg incl inc dec inc dec dec dec inc push dec dec addr16 dec dec inc push dec inc push add inc inc push les pop je fild cwtl dec add mov dec shll xchg jmp daa daa ret bswap pop pop dec (bad) jne fadds fmuls loop fpatan fcmovbe jl xor fisttpl dec add adc fstpl fisub fildll scas (bad) xor pop loope fcoml ja pop pop arpl outsl jo addr16 push cmp cmp jo ljmp je insl paddsb or outsb and or stos and mov out push inc (bad) mov je add cmp js popa outsb shrb pop cli decl data16 insb and addr16 mov sub out (bad) fistpll arpl outsb jne outsl jb das and sub and cmp hlt pop std jae cmp es popa insb insb outsl orb out sahf arpl fmuls cli (bad) out lahf mov pop push pop arpl cmp pop pop arpl arpl stos fstpl pop cmp bound in adc outsb and mov test mov std jg adc add dec add (bad) inc add jne out mov rclb and int3 add imul (bad) std jb cmpsb jae add mov ljmp push mov js popa jl je mov daa add or push in loopne mov push jbe mov add and popa sarb ret lock sub insb sbb pop mov sub imul sub ds sub and jae ds and add bound imul cmp sbb and inc outsb and enter enter (bad) adc popa jb insb mulps pop push pop scas pop gs mov sub jb jo popa or js mov std and jae jb adc mov or adc cltd or jo adc cs mov mov pushf dec mov and push cmp add (bad) mov add fs jne popa outsb outsl insl int inc cwtl mov adcl pop pop daa imul sbb dec sub jae and dec push fcos ja sub jb add xor cmp aaa jb dec sbb int3 popf dec daa mov add lcall sub popa je add add adc push pusha mov sub pusha pusha add xchg es enter xor shr dec inc (bad) iret or add add jae notb add add mov add aas jnp insb nop add imul jae cmp adc jnp mov sub popa outsl outsl and sbb mov fidiv add add pop in mov pop or dec add out out jno adc inc or outsl adc mov or jae pusha xor add xchg and aaa and pop daa cmpsl cmp mov pop call add dec dec inc ret outsl (bad) add popa outsb outsl outsb jns outsl jne and std (bad) jo add in dec add add psubusb sahf sti pop fiadd add bndstx or pusha add adc mov add popa out lea add or ljmp add push add add jo add adc adc jb insb push jbe sub add in mov sub xor add ja jl ds add cmp add or xor or out in xchg add inc jae pop add xor jne rorb inc inc rorb add sbb adc xor fiadd int3 das add daa fsubl ficom add mov ss ret or dec inc stos das cwtl cmp sbb pop dec sub in mov daa or add add pop cmc aas adc push mov xor frstor mov insb imul add jne je test dec dec add dec dec add negl xor les daa pop daa push dec add dec and bound add jbe mov aas and pusha pop add sub push aas pusha fildll outsl and repz pop rclb add sti pop ja and and pop add add add add popa xor sbb sbb pop popa bound or fs and jge cmp dec inc jb popa jns pop pop add add popf (bad) incl outsw jb add push cmp cmp paddsb and sub xor xor xlat sub fsts data16 adc sub addr16 jne imul adc jbe outsb je xchg je jb sub (bad) mov cmc popa jbe and inc adc cs adc add fbld stc nop xor jb mov sbb pop jg addr16 jns and mov fisub popa insb push push jae je jae popa outsl (bad) or outsb gs fcompl mov push popa je add arpl insl add jb add lock test outsl jb and popa inc icebp pushl mov add sub imul pop mov jne add insb add insb call add add or or and add cs cmpsb cli (bad) jnp popa jb and insb outsl bound (bad) iret xchg jae imul ret sbb mov sbb insb popa insl bound add and jnp outsb jg jo fnsave pop incb dec je add fnstenv insl dec add insb dec add sub mov into push add imul jl push jno add movsb jo add mov outsl dec add outsb dec add jb add (bad) xor push or cmpsl pop dec add in fwait roll cmp adc add (bad) dec add dec add add test add imul bound jle popa dec add (bad) jl cmpsb cmp add pop dec add cmp add pop dec add mov (bad) mov dec cmp (bad) pop dec add pop dec add pop dec add int iret jge outsl or add sbb loopne aaa call dec add mov inc rorb add add pop loopne rcrl add outsb outsl lahf sbb add es cmc sbb outsb popa jb and sub and fcomp add jbe inc sub xor in pop aaa inc inc push mov and mov lock dec add mov sahf dec add mov pop adc jae adc popf cmpsl pop mov xor pcmpeqw sub sub xor mov movsb popa je or adcb pushf rol insb and fisubr pop ss push sub jb fmuls pop icebp imul ds insb adc ss popa insl or adc sub daa cmp ror out sub outsl dec add pop and dec sub imul push popa outsb fadds sub in mov je pop outsb mov iret mov das mov adc rorb sbb push out xor in (bad) ljmp or scas dec add jne cmp sbb inc adc jb jmp push pop xor xchg neg out add xchg or movsb pop lods mov sbb or pop jmp scas fwait pop (bad) mov es add add add add add sarl js outsb outsl data16 arpl outsb out outsl and sub insl add pop loope incl jle fs add cmp add ffree jg pop and arpl fs imul shlb (bad) pushl out pop jae sub add das add add add cmp outsl add gs cmp add add jb add std (bad) cmp add cmp cmp jo jb (bad) out jg and and insb jae add cmp insl dec add add js pushl imul add add int3 (bad) icebp mov and add add push add fcomip ljmp add outsl outsl add dec jl jo add cmp sub (bad) mov sub jo add or add jb add test ds jb add das jo mov xor jb add test outsl data16 jae mov push icebp or pop jae add pop fdivl xor ja je inc inc mov add add dec add add add or mov (bad) ud2 push lods addr16 or pop add push scas sti xchg pop pop bndldx int mov or sub xchg out pop (bad) xor xlat jge ud2 add or add (bad) pop (bad) (bad) or add add inc ret jne jae sbb inc or repz jne pop push or mov iret jne add add insb add sti pop pop std pcmpeqb ja sub mov (bad) jp sbb jl jg xlat sbb or testl pop mov (bad) imul out sbb xchg or add xor xchg sets lcall mov in mov test jae sbb add pop push jp iret jne pop sbb (bad) cmp or jl dec add (bad) or or add add xlat jge jne lret add bswap or add pop idivl (bad) add add push jae (bad) faddl das fimul jnp sti xchg loope in or ds mov add mov jmp repz add or out outsl das stc paddb or (bad) xlat jge clc or or negl cmp or push add add jae adc adc cmp push or xor jge add add pop add mov or pop pop sub sub out out or or pmaxsw jecxz aas xor pop add out out cltd xor inc or add sti sahf jmp add aas add cmovae out xor scas inc add mov aas subps pop add sbb jmp add bound decl decl insb sbb xchg lcall incl or xchg jecxz mov (bad) or scas adcl sti daa dec sbb imul outsl insb add lahf sbb gs jns add sbb scas add and test lock outsl add pop xor cmp jne dec rclb (bad) mov inc sbb pop pop and cmp inc adc (bad) iret xchg mov outsl imul in pop je and or adc pusha insb xor jnp mov xor push inc adc cld fdivl ss or xor je jo jb cs push lahf mov loopne dec add jge in adc icebp pop (bad) jge cmp incb add push jmp add jae sbb fmull adc adc sarb pop adc out jbe pop adc lret divb mov arpl cmp add adc pop sbb push sub dec out popa iret pop mov inc push adc jae mov pop bound inc pop ret pop mov mov jnp add add jo mov dec adcl sbb adc xchg mov cmpsl pop imul xchg aaa lahf adc out out fdivl outsl test popa jo scas sysret outsl fdivs cmp outsl pop nop movb sarb pop adc lahf push out xchg dec loopne pop stc xchg pop adc rcr andl add sti dec add stc dec add dec add cmp add add popa je or sub ja jae imul cmp cs and sub mov jb ljmp outsl push in decl test and inc dec dec inc dec dec sub push aam pop xchg cmp popa jb je and jb add sbb data16 ja jb cmp loopne insl xchg sub adc mov jo scas sub inc fldl mov sbb add or push dec inc adc mov push add popa insb ljmp sbbb jbe push push and sbbl insb outsl and sar add mov inc fs (bad) xor fisttp outsb addr16 ja xor jb outsb andl add jmp call outsl and gs popl movb and add add jo pop das stos sbb lock (bad) or std cmc and into xor outsl pusha and xchg lds bound and xor punpcklwd mull and jo gs ja les adc jo push hlt add xorl xor add pop xor imul jg lret dec add dec add or (bad) or cmp add adc add (bad) xor push int add into dec add nop mov jl je xor adc mov xor dec add repz rcll add icebp fnstsw dec add and dec aam add or add sti pop shll fisttpl jnp add xor cltd cmpsb imul adc sti mov fisub add negl inc mov pop mov fmulp faddl and pop add fsubl sbb adc dec pop ja ret or nop pop addb xor push gs add inc gs add mov ja xchg jecxz fild ret pop adc pop or xor aaa sbb imul dec add add lock ja loope add add xor (bad) bndstx and sub jmp add jg mov loop add jecxz add push jne sti out or repnz add lods or fstl add add sbb or add push dec pop dec pop cmp inc mov xchg or mov enter and notb arpl (bad) mov aas outsl gs daa je je imul or and loopne sub popa insl bound jne xor sbb mov push (bad) lcall or gs mov push and add fadd (bad) pop dec cmp jne outsb add outsl add push pop xorb inc neg call add je imul data16 in or iret add add add fisttp popa add cmp and and pop jae inc sub sub std out mov or js jo push sub aas jns xor (bad) add inc add push nop jmp ja aad (bad) dec scas add sub dec sti (bad) (bad) decl inc pop inc pop push dec dec inc dec push pop inc dec inc dec push push add dec add data16 fcmovnu fild add add xor add cmp inc (bad) ss mov adc pop loopne xor adc or pop push pop or fisttp xchg pop aam push cmp xor pop in jae push addb test xchg cwtl cmp mov sbb mov scas sbb add aas mov and inc iret jge jmp rolb sub jmp lock and add stos pop jnp jne add aas pusha movhps add push outsl fmuls pop roll jnp mov add cmp add (bad) fbstp add or aas popa inc outsl arpl jg push dec pusha mov mov aas sti xchg jge push arpl xor push xchg cmpb inc add inc inc add loopne mov jp mov mov xchg mov in pusha addr16 aas and adc mov add mov pop (bad) mov addb arpl test inc hlt out xchg gs and add (bad) jnp jbe aaa pop mov in xor (bad) dec mov imul and jns inc inc add jbe add dec (bad) (bad) (bad) jmp shrl in loope inc mov inc push out loop in dec inc xchg aad (bad) cmp push iret lock add mov rcrb xor dec cmp shld popf xchg mov or lods sub enter scas mov (bad) (bad) aas pop outsb add inc cmc stc aas jmp xor (bad) pop cmp jae (bad) adc fst adc jbe arpl je xorb es jae je mov je data16 mov pop inc outsl jne adc scas push popa cmp inc xor pop in test lret insb es (bad) jbe and pop insb arpl inc shrl pop dec pop pop push add add (bad) mov and and popl sub outsb movb (bad) and and imul je pop test sar add ljmp fidivrl or push (bad) cld and add out std and cmp das insl xchg stos (bad) pop jbe or cmpsl mov das ja outsb jo jae testb ret jb sub sub sub pop je sub sub sub imul pop push push dec dec inc dec dec jle dec pusha sub pusha adc pop dec aaa gs or mov fldl imul (bad) jae and or push mov dec movsb pusha or divb jb and add sub or movsb jg sub add cld (bad) (bad) mov iret mov and pop adc dec add rcr iret xor lret inc pop test push cltd mov or lds or int3 dec add adc add or pop add iret or push fs or int3 sbbb cwtl sbb mov ja or loopne (bad) fwait adc fdiv or add das hlt fwait mov xor pop pop popa bound jbe xor fs jne sub pop xor mov pop sub adc pop and dec or push lock cmp imul xchg cmp aas xor popa out stos jae pop arpl jne enter xor nop movsl (bad) aas or inc pop inc roll xor mov (bad) imul imul (bad) rdmsr ljmp and push push push stos jge sub pop outsl pop ds xor dec mov and loope call outsl mov sbb adc xor or or sbb lock mov cmp push je or ffree into pop inc sbb jle cmp in lds sub add dec add and fwait pusha and sbb jbe repz push add xchg dec add rolb jae lock mov sbb mov sbb add add pop pusha sysret rolb pusha rcrb sub (bad) mov mov mov push xor pusha xor inc add jno pop out jns nop add jne out add cmp pop mov xorb aas int3 jne add adc xorps mov add fsubr fwait loopne cmp inc add cmp pop pop popf jns pop fimul lock sarb (bad) xor (bad) xor jo adc mov push pusha inc add inc aas int3 xor add adc push and adc sbb sbb inc aaa inc mov gs adcb xor pop mov add shrb sub jle add mov add mov jne add xor cmp outsl jg xor add xor dec add dec add cltd outsl lcall (bad) xor pop add mov xchg add loopne inc nop dec add dec xor fwait stos fnsave lock rolb xchg popa add add mov loopne push dec add adc pop es ficoml pop and push pusha fild lea dec add adc pop neg clc cmp dec add loopne add or mov lock daa sub cmp scas or push add lahf adc cli lods jmp add adc dec ret fdivrl adc mov dec add adc std mov adc rclb adc rcrl int pop arpl and adc test sbb lcall add mov rol inc add jmp adc or mov dec adc mov xor adc add or loopne mov add add pop aam sub jp or mov int jbe or sub and cmp flds lcall add leave nop and mov pop and add or or mov je jne jb jecxz rolb fwait mov lahf cmp test push dec lret fistpll (bad) ljmp xor xor xor xor xor xor xor xor xor (bad) (bad) (bad) pushl xor xor xor xor xor xor xor xor xor xor xor xor xor (bad) pushl aaa xor xor xor xor xor xor xor xor xor xor xor xor xor (bad) (bad) (bad) pushl xor xor xor xor xor xor xor xor xor xor pushl xor xor xor xor xor cmp cmp xor xor xor xor xor (bad) (bad) pushl xor aaa cmp cmp xor xor xor xor xor xor cmp cmp cmp mov jle pop cmp cmp (bad) (bad) jg outsl cmp push sti jb mov cmpsl sti sar sti idiv adc sub inc (bad) (bad) (bad) (bad) cld popa cld jnp xchg cld mov lret cld out add sbb xor std test mov std out (bad) (bad) (bad) (bad) std or and (bad) je (bad) (bad) test (bad) stc (bad) adc decl arpl jle cltd (bad) (bad) (bad) (bad) pushl incl add add add insl add add add add (bad) (bad) (bad) incl pop add xchg add cld add add add add add add push (bad) (bad) incl push add add add jo mov movsl add add add add add (bad) incl add mov mov scas mov (bad) call and push mov xor inc iret sub mov lcall sbb lret (bad) (bad) lcall stos dec fdivrl or imul push mov lods pop rorb (bad) call sub mov cmpsb lods (bad) lods jno lret mov and pushf ljmp int3 scas push into (bad) (bad) (bad) pushl (bad) aaa push sti dec ss adc dec cwtl dec cmp xchg nop (bad) cmp xlat hlt xchg (bad) (bad) (bad) (bad) mov mov cwtl or mov cmp (bad) enter (bad) (bad) (bad) call sbb inc ffree xchg leave and xchg test lods fcomi ficompl pop stos mov (bad) inc ficom cmp test mov mov insb add xor xor (bad) mov (bad) (bad) (bad) mov xchg mov ja fisttp mov je iret pop test (bad) (bad) ljmp mov clc lock push and jnp (bad) loop cltd push cmp (bad) (bad) ljmp sub adc xchg jae cltd and stos push lret repnz std jmp adc int3 mov add call or mov loop pop mov (bad) (bad) mov add adc bound or (bad) cmp xorl pop ljmp sub movsb cmp aad and (bad) jmp dec lahf daa sti (bad) aam mov enter fidiv mov movl lcall sbb ljmp fimull out lcall jge jnp (bad) (bad) (bad) js bnd fnstsw in mov lds xchg push xor cli pop (bad) (bad) (bad) pushl cltd mov mov (bad) fwait movsl pop lahf cwtl mov into mov (bad) (bad) (bad) mov and pop repz mov into and fist jnp pop push cwtl cmp pop xchg fdivr (bad) (bad) pushl jecxz push rcr test inc cmpsl movsb fnstcw adc dec dec jbe sbb (bad) decl push cmpsb adc pop shrb xor fwait popf or mov sub cmp (bad) (bad) (bad) jmp sub dec inc subb and das pushf mov mov pop xor test fistpl sahf fnstenv mov imul fwait cmp adc lock push add dec inc dec pop (bad) dec loope add fcos (bad) (bad) (bad) jns js inc xchg add sub mov inc xor lods push inc add inc adcl ljmp out rolb out loopne hlt inc ljmp inc and or (bad) lcall movsb push pushf leave inc and cmpsb enter fsubr fwait sar inc (bad) dec (bad) jb (bad) (bad) jmp xor and stc adc sbb inc mov mov rolb dec pushf hlt (bad) (bad) (bad) incl pop ret icebp sub dec out sbb cli pop jb popa mov cmpsb dec jns sbb (bad) (bad) (bad) call mov dec dec jge pop (bad) out adc pop inc lock inc dec (bad) xor push jl pop mov (bad) jmp test mov (bad) cmp or sbb fs push sbb sar jbe (bad) (bad) call popa test jge adc mov (bad) lock into leave adc xchg and inc cld sbb (bad) (bad) (bad) jmp cmp nop dec adc pop ds pusha popf icebp dec jge dec insl mov (bad) jmp repz jmp repz sbb dec xchg popa xchg aas pop icebp imul (bad) jecxz bound inc sti cmp mov std mov shrl mov cmp lods or stos enter cmp (bad) (bad) (bad) ljmp ja or xchg mov lods dec cmpsl inc (bad) sbbl jne mov dec adc dec dec dec adc in (bad) scas orl sbb sarb mov (bad) (bad) incl push jg daa (bad) sti lock out cld mov popf ss adc inc add lcall push jnp add push insl push ret adc js push enter sbb shrl mov pop lret or add icebp cs cmp imul (bad) (bad) (bad) ljmp push sbb mov sub lods popa repnz mov push in pop (bad) (bad) (bad) ljmp lods call arpl fstl jo pop or cmp ljmp push cs xchg jge xchg and pop hlt stc outsb sbb out jae mov (bad) call mov repz mov push xchg push js stos out push aas adc fs (bad) (bad) (bad) pushl push push fdivs push adc int3 cmp adc lahf or inc xor (bad) (bad) decl push cmp pushf cli push data16 mov sub es fs loopne popf out (bad) (bad) (bad) (bad) std cltd push mov rclb pop xor dec add imul pop lds hlt imul outsl pop mov shll (bad) fcmove fcomps inc dec js sti push pop shrl jmp (bad) (bad) (bad) lcall icebp jb movsl and (bad) jbe das inc scas pop int3 sbb pop aas mov xor jmp sbb cmpsl mov inc jle jl sbb mov sahf sub in pop (bad) cld pop inc jge and cmp xchg pushf mov mov cmp (bad) decl dec pushf rcrl mov pop add pop dec test and sub into xchg mov jmp jl inc mov pop push adc sbb lret jae (bad) jo add push fiadd dec (bad) (bad) (bad) (bad) pushl loopne push les mov cmp aam adc push insl mov or jl and add pop (bad) (bad) push add mov pop jg out push dec (bad) (bad) (bad) (bad) fistp xchg push cs mov dec pop jb pop sbb mov out in (bad) (bad) (bad) pushl imul out in mov inc push aad pusha hlt push lahf mov push pusha mov xchg lods dec (bad) (bad) jmp push and test repnz ret cld outsl and hlt sti (bad) (bad) (bad) dec mov popa js aas mov (bad) pop (bad) sub cmp popa or mov ror sti popa xchg (bad) (bad) (bad) call jp pop xor add aam in push and pop push cmc shlb call ljmp mov cmp test arpl addr16 inc js movsb arpl inc (bad) (bad) (bad) incl push loopne arpl sub fs je aaa inc fs xor inc jns push loopne (bad) (bad) (bad) mov fs loopne mov inc fdivs sbb jae dec rcr dec gs (bad) (bad) (bad) (bad) push adc xor popa js pop mov or data16 (bad) (bad) (bad) pushl popw lea mov out fbld data16 mulb inc (bad) (bad) (bad) incl addr16 and mov xchg addr16 cmpsl icebp push push int3 adc (bad) (bad) decl push rorl lret jmp push lret push sahf pop mov (bad) (bad) (bad) mov push rorl scas dec lods lods loopne inc imul je icebp cmp (bad) (bad) dec or (bad) inc mov imul adc (bad) imul test jae (bad) (bad) (bad) lcall and jg or push lea push lock xchg and (bad) (bad) (bad) ljmp hlt cwtl ja imul mov push jg fisubr imul outsl pop lret add imul or jle daa insb (bad) or ret pop mov insb rol cmp (bad) stc movb (bad) insb aaa mov clc nop and std insb and cmp xor dec inc leave stos test xchg mov jo (bad) (bad) (bad) (bad) cmp or mov mov push outsb (bad) jb xor stos cmp addr16 fist jno jg (bad) (bad) (bad) (bad) sti xchg out movsl outsb fbld jge add outsb sub mov outsl jbe imul sbb xchg cmp (bad) incl mov bound cmp jge outsl int3 push insl int pushf in jg enter sbb cmp (bad) (bad) (bad) jge push sbb inc mov push stos ret adc jmp jae jo (bad) (bad) (bad) incl shll inc xor xchg pop jno pop xchg std mov xlat jp xor ret jno (bad) (bad) (bad) (bad) lcall push ret jno icebp lahf fwait jb sub mov mov xchg mov outsb xchg jb xor (bad) (bad) (bad) cli jmp dec int or jae dec add jbe (bad) xor ss push jb mov je (bad) (bad) inc and push jns jecxz (bad) jae cmpsb push xchg sbb or neg jno inc je jp std (bad) pushl (bad) jne sahf cwtl shr addl xor (bad) (bad) decl or dec jne insl xchg or xorb ja dec mov icebp lret (bad) (bad) jmp std add jne decb inc and mov jbe dec enter mov popa jp (bad) (bad) ljmp sarl sub repz pushf das mov sub cmp push add xor pushf adc xchg ja jle ret cltd cmp ja sahf out inc dec (bad) ja ret enter mov (bad) ljmp cmp stos mov xchg popf js pop dec jo jl js negb sbb jns xor (bad) (bad) jg loop jns mov jb cmp nop cmpsb jns jp or xor jns lods mov (bad) (bad) jmp mov sub jp lods cmp mov gs and mov jg sub (bad) (bad) lcall add in pop pop mull inc out jnp xchg cmp sarb test lea (bad) (bad) (bad) incl dec cmp mov imul pop push jp into test testb jl push iret (bad) (bad) (bad) ljmp or (bad) stos or jl hlt jae push or nop data16 push das jge xchg sbb (bad) (bad) inc imul mov ja jge mov pop enter mov cltd cmp sbb jle jne (bad) (bad) (bad) decl add insl jle pop inc dec dec stos mov sbb push xlat jle popl (bad) (bad) jmp sbb or outsb push cmp sub jbe xor pop jnp jg enter add test int3 loope adc dec push push or xchg or (bad) fild dec mov inc sldt cmpb repnz inc inc inc cmp sub jbe sub inc inc (bad) repnz dec push pop push xor lock or or leave ss add sub test pop add sub scas ss push pop mov and ret add sbb xchg add xor mov push adc or push push add jl add mov add or add add ficom push (bad) aas jne inc inc xchg xor adc mov add and test push add or jno inc or add xorb fadds repz and jp add sbb sub push pop add repz push or add add add add ret inc movb lds call add (bad) jmp negl pop mov dec pop jnp jmp push add ja xchg mov and add jbe mov in adc das imul inc arpl testl aaa addl ljmp inc ret push add iret (bad) inc scas rcrb jno pop push adc mov mull scas loopne aas aas outsl push sbb rcl push or or inc bound stos aaa inc mov fdivr xor xchg push sbb dec push inc or mov lret cmp les test int3 je pushl pop (bad) (bad) (bad) cmp add or add adc addl add push adc jg ja adc push or movl mov pusha dec add add dec or hlt push outsl test push dec add jl pushf inc mov and xchg subl mov pop inc jne cmp inc add push cmp in xchg push add loopne xor mov addr16 mull pop xchg pop addl lock mov in adc or add or aam adc repz jo push dec push xor push adc incl bound sub xor out sbb xor or incl shrl inc push xchg inc clc addb arpl inc outsl xor aaa je test repz lahf movsb adc inc inc mov ja pop inc or das movsb daa repz jae stc rcrb add dec or pushl bound test sbb or jmp inc push nop add mov xchg inc sub sbb cmp cwtl inc dec push mov lock ret xor insb inc lods pop repz jmp mov add add add lsl or (bad) jl inc adc add adc add add or inc (bad) adc inc or loopne (bad) mov clc push pop repz fild cltd jmp push dec inc js mov dec mov inc insb pusha repz xchg add push pusha add push pop inc push pusha dec add add adc cmp pusha or dec jae xlat cmpsl mov jne fildll nop movsl push sub pop ss lock std decl in jo mov xchg cmpsl jecxz add xor int (bad) mov or imul popl (bad) imul outsl lcall lock call xor mov pusha sbb iret dec sbb andl into idivl out dec or popl pop adc movsb cmovp add das inc xchg shll das inc xchg inc push cld mov cld in xchg push push add icebp popf sbb jecxz test lahf lock addl movsl ret mov lret iret inc xchg lock add or pop negl jo addr16 pusha pop je push mov add inc faddl iret int sbb dec shlb in out cltd test addr16 xor dec and or popa repz add cmp popa sub add mov loope arpl sbb adc push aaa and or mov dec mov arpl mov inc inc das pop movsbl pusha pop ljmp dec adc ret add or punpcklbw inc rcrb int int loopne jg or jb pop ret push (bad) nop push push rcll (bad) add loopne add pop add incl in nop dec inc push and fidivrl movsb adc dec or push cmp test (bad) movb aas inc or repnz inc repz (bad) (bad) adc aas andl add ja popa pop inc push pop add xor repz fs sbb pop fisttp pop insb repz xchg sbb repz mov push and cmp mov add xor pop inc or jl fidiv mov add lods and (bad) (bad) loope pop daa xor popa cwtl or rorb sub xor (bad) mov outsl ret movsl add dec or mov and lock or insb repz call jg add mov repz clc pop jecxz and frstor push sub outsb push push sub push xor (bad) lea je add sub test pop sub jae out push mov aas mov (bad) call jae repz daa or inc add loopne ret jno xchg pop mov sbb (bad) jnp jecxz or fistl jb fmull inc or dec or add sub or lock ret inc add push xchg jnp fcoms loopne mov stos fdiv pop cmpsl mov outsl xchg loopne cmp inc test movsb outsl inc xchg ret xor mov sbb mov and dec or test push out jl repz (bad) cmp push inc push adc jmp (bad) out push inc push sbb gs outsl int3 enter decl pop scas xchg addl scas mov hlt add sub pusha and push jno incb xchg push add or dec or fwait inc aas sub les lcall or push add push and inc cwtl out addl hlt pusha pop xor outsl dec push and inc ret cmpb adc or ljmp les stos mov jno lahf push inc and push sbb out scas push dec pop mov pop push mov sahf sbb ret mov pop push je inc xor mov mov and inc clc adc pop add xor fst adc mov pop pop sub fcomps dec push lock dec pop sub and out adc lret push add sub ja mov adc mov frstor push fldt aam adc sub or pop sbb lods jnp push push xor pop add ffree fmull inc pop add das orb je inc push or sets push add jae popa dec push cmp sbb inc add repz iret and pop xor add dec inc daa in push (bad) fild fisub sti inc addl ret les mov adc and dec jbe lret js (bad) xor add stos into sarl jb add or arpl mov cmp lahf das pop add pushf adc imul mov ja mov add fdivl inc or fimull loope fldcw jge inc clc inc ja call movl mov repz adc add fnop dec sbb xor add out sbb pusha ret loop repz add test push and xchg fcomp sarl pop (bad) pusha mov in jg sahf sbb aas mov imul add mov sbb inc mov popa cs inc or mov add sbb dec jge repz and scas icebp jo push call and (bad) xor fsubrs repz add pop fwait cmp hlt jle add inc or adc ret sbb cmp repz xchg out cmp jo outsl sub ja arpl pop add add mov adc decb inc add fild hlt add or push pop dec or inc mov dec or and in xchg repz dec and loop xor popa cmpb add add clc cwtl xchg repz cmp xor fwait sbb les dec jl add jge mov (bad) jnp xor flds push sub outsl pushf jecxz or (bad) je int3 mov lcall cli jbe js or dec xchg repz enter lock xchg dec outsb push inc mov mov pushf stos cmc or pop or push pop daa mov cmp add fildll jmp jnp mov jae jnp push jo push add mov fs push jo pop sti (bad) fdivrp inc or repnz push push and (bad) add insb dec push jo adc mov xlat sbbl and push inc add js mov add inc hlt dec cmpsl repz (bad) or fbld add movsb nop and out cmp sarl test adc je addr16 adc fldl arpl xor out mov or out loopne repz (bad) xlat (bad) aam xor push push adc ret dec jo enter loop pusha mov cmp cmp lock out (bad) push pop dec push pusha add inc or (bad) lock push in mov or pop add mov jo add mov rorl imul add dec ja push faddl dec pop add or mov add repz mov repz xchg cwtl or push mov push lret sahf int3 loope sbb or mov int sbb int3 popf dec or out or mov ljmp jmp in push int3 lods xor sbb push fadds ret (bad) xlat inc fisttpll test test subb inc pop fs stos add adc jecxz jae in pushl arpl aas dec mov add dec push dec mov cwtl jae notl push cmp inc (bad) xlat and sub stos mov and pushl xchg dec inc mov pop mov sub xchg mov sbb les outsl lock std inc cwtl xchg xor dec mov mov rcrb or int3 pop (bad) jae or je (bad) incl dec mov fwait pop jl enter inc test inc sbb and or or subl cmp fwait push push decl fwait or (bad) out add leave rorb push out mov orl adc adc pop insb inc std dec shrl adc or push addr16 dec mov or pop push and stos es dec push mov std pushl inc call adc or inc inc add inc push sbb push sbb adc sbb cmp loope dec dec scas out pusha shr add dec outsl mov pop mov jg dec or js and push lods and pop movsl mov or repz xlat xor repz pop rcll retw sti jp lret out nop and push pop jecxz call dec (bad) aaa sub lret jno inc outsb adc inc insb jmp dec pushf out incl adc pusha sub dec aas loope leave xor jmp (bad) inc jbe xchg push add mov mov cli into inc cmp inc or scas xor xchg cmp mov test lahf push mov nop dec dec xchg mov inc stos inc dec or in repnz out pop shll or inc ljmp dec pop dec pop and ret push and or sbb imul mov movsb adc (bad) add adc rep int3 pop inc pcmpgtb jg push pusha fstl outsl sbb pop mov es mov setnp push and push xor inc or cmp gs dec and or div (bad) aas dec or push imul add js dec sarb outsb adc clc repz stos mov (bad) xor (bad) in pusha dec dec mov mov aad dec add dec (bad) insb (bad) ret xor inc enter (bad) imul les dec cwtl addr16 jne in pop jecxz mov dec xchg xchg jp inc fwait or repz out xor test rorb jo (bad) mov (bad) aad dec lea enter xchg adc imul scas clc mov dec jg dec or out sub scas sti pusha pop mov dec iret add ja mov dec push jle inc push insb push fadds or adc jo dec fcoms lcall sti (bad) fmulp je (bad) rcr adc es fistl push (bad) sbb icebp or pop jge add pop xchg gs push or mov test cld repz (bad) sub cmp inc push xor or nop fs cmp adc cmp std call and push pop icebp cmp pop jae ret sub pop scas push adc sbb scas comiss xor sbb xor xlat (bad) mov jo mov mov mov dec addl dec mov imul push or pop inc sub and xor aas loopne enter addr16 xor mov (bad) sbb mov inc push daa xorb es adc sub loop lret imul notb lahf add dec or jno or addl rcrl ja lret (bad) add cmpsl pop hlt pop sarl mov mov xchg icebp das push dec push rolb add push mov loopne in outsb push les dec push int3 add inc out fiadd dec pop cmp push cmp repz (bad) aaa jge add inc add inc addl orl test sbb push xor aam dec add cwtl sub enter popf and sbb and out negb mov dec pop std (bad) and jmp std and pop jmp adc adc jnp add cwtl adc roll add inc cwtl dec xchg adc test mov cwtl dec aas mov (bad) xor scas das add fs hlt push inc add push add lea in xchg nop insb dec or mov icebp fist enter scas sub adc xchg add inc push and test sahf cmp pop ja arpl aas adc adc repz dec adc inc lret add adc or adc loopne pushf push or push jge push out pushf aaa push sbb adc orl sub sbb adc das sti adcb xor enter or push mov sti test add sti or adc adc inc dec add push sahf and pop ja adc adc adc orb push push xchg int3 push sbb sbb xchg ret xor call push jnp push stos (bad) (bad) fstpl push dec push pop dec push pusha add mov pop mov insl or je add and fimull adc pop and push pop mov push xchg loope stos pop pop add and imull add das xchg std mov aaa jo inc lret dec test das xor outsl push adc mov addr16 es xchg or lret push push pop add add pop mov dec aas movl sti jl pop adc js in mov add or test insb adc subl ljmp inc bound out fs mov insb and or movsb sub int3 xor push iret rcrb pushf adc xorb (bad) jne xchg scas xchg adc out or and popa pop les mov pushl mov aad xchg add adc sbb push and daa adc push and rcrb add pop cmpl out or sub aaa mov add mov cmpsl add mov mov popw and punpcklbw xor aaa pop lahf adc jno cmp stos mov push rorb inc or out add dec jae add incl pop inc adc sti push outsl popa rclb add (bad) test xor xor adc mov fs testl add jg ret ds add loopne loopne add xchg mov push mov xchg pusha xchg loopne outsl pop insb pop dec orb jb mov lods xchg add call add inc gs ret sbb mov out fcmovne pop sub sub cmp sub jl or sub jnp sub (bad) or jl mov lcall jg add pop ja loopne cld incl jnp push das add jo std mov loop or popa push pushf adc mov ret jnp fmull iret and pop xor (bad) fmull adc sahf push fisttpl pop or sbb inc cmp dec inc or icebp (bad) pop enter mov and (bad) (bad) hlt add call addr16 pop cmp hlt (bad) std sbb loopne ret add pop push sbb push and adc pop stc pop add movsl sub or enter sub jmp dec push or add or lcall mov push hlt lcall pop add mov xchg mov pop cld daa jae mov addl notl dec ret andl aas cmp dec dec cld rolb out adcl sbb pop hlt pushl gs inc add add enter and fldl jp jnp or daa push pop and inc or mov jo hlt jmp pop rcrl mov jmp ret js push addb push dec xor mov add add fmuls mov pop push push mov add mov lock incl pop (bad) adc daa andl and add mov ljmp (bad) lea mov add sub into mov cmp ss push arpl add out dec roll sahf jae cmpb (bad) mov xchg cli jle xchg push rorb push cld aas shrb or xchg push inc inc push push add pop inc sub bound rclb add sbb dec dec add add inc or xchg xchg call or inc push loop in imul add mov hlt call xchg fs stos negl stos sub inc pop jae and cli ret add ja xchg hlt or mov std jmp dec fwait jg xorb dec fbld scas shlb cld jmp add std mov cmp dec sub inc or (bad) push inc insb inc inc vmwrite push test es ud2 mov rclb and xorb mov xchg and fist pop adc test and and sub std call outsl add add push add repz xor dec or popf in add add negb (bad) jg inc push dec inc push push bound pop or add and mov inc js inc jnp xchg andl mov add dec or add jle fucomp pusha and stos outsb stc call outsb andb cs or pop pop aas add push xor push xchg jno jp mov push sbb add add jp xor (bad) cmc cmp add cmp les add sbb inc mov (bad) arpl test pop pop pusha das hlt call fsubrs fmull dec or ret cmp les or imul dec push or cld add adc pop stos fs fbld mov lret and jb inc push mov inc lret out mov add gs inc out (bad) push dec pusha arpl inc push jnp pop cmp sbb adc incl push iret add cmp rolb xchg push pushl push adc cltd andl pop sti inc mov mov cmp push sbb inc sub adc push fistpl ss ljmp dec pop pop mov cli das dec push rolb fiaddl pop adc test aaa and cmp jmp aas iret dec or inc or (bad) mov stos test std call push adc inc and enter pop dec cmpsl and notl ds xchg adc arpl inc out cmp mov pop or cmp sub (bad) mov dec adc or andl aaa inc iret pop cmp decl and pusha push inc movl into add cmp pop mov inc ljmp out hlt incl jg or pop inc lsl push jne nop clc adc add out inc add shll call inc or add lahf mov mov lcall (bad) pop inc push jo int in push cmpxchg inc or add push out ja inc hlt lcall mov add jae push lods outsl das je xlat xchg mov pop aaa xchg jno movl adc mov jmp add out inc pop push nop dec ret ja inc or test xchg add lret mov fbld add mov call mov pusha sbb mov pop lret and mov fs pop xor fs xor sub dec push and ret aaa and hlt pushl add in (bad) mull dec clc pop (bad) pusha std dec call imul rcll push (bad) xlat push dec hlt ljmp adc pop adc push flds sar faddl pusha rorb mov decl or test stos inc or stos pop jo push jmp xlat (bad) hlt pop jge push hlt (bad) js out shlb push xor mov inc aaa hlt push sbb add pop jmp add loope inc sbb add or hlt ljmp xor (bad) inc xchg or jg js lret jo xor jo add icebp pop xlat jge jl insb pop dec pop pop daa dec cmpsb or cmp sbb xchg add or loope add aaa inc mov add dec xchg or and (bad) mov adc pop cmp push sbb dec mov mov or dec pop add (bad) jecxz in pusha sub or jne push loopne pop clc ret add fs add lcall or les adc dec cli or push sbb jb repz push hlt call or mov jnp fldenv decl mov add lods add bound bound jecxz pop add ja push hlt incl dec mull jbe push out and xlat icebp inc or mov xchg loope jae inc inc loop aas add inc in loope pop fwait lock lods das pop das push pop xchg pop sbb xor jae push jb cmc push (bad) call xchg pop xor mov pop add hlt je sbb fild je and pop xlat pop out pop inc call movsb das rcr sti jg mov (bad) push dec dec push pusha jne jnp enter dec or fs pop outsb push dec dec push pusha jbe jbe adc push dec arpl cmc push add cmp incl leave jno insl add pop push sbb or js and orl addl mov xchg inc jl xor and cli jmp lret and hlt cmpsb and pop lds nop jno or inc insb test mov dec add mov xor imul or mov jle or ret cwtl std push mov push cmovl sbb arpl push mov addb imul arpl push jo push shlb jo mov or mov insl cmp (bad) mov fs jl add insb pop jae inc pushf popf push dec adc push cmp push add push push dec or dec push insb push inc push cli shll jbe jb push jl push mov jnp pushf pop hlt call xchg cmp stos pop or jae push xor jo ds mov adc jnp xchg mov cmp das xchg adc or add rolb push push enter and ret test sub out pop hlt xchg aad pop mov iret jmp in iret je lret pop sbb sahf xor ds xchg cmp push je mov sub adc xrelease aad cmp outsl test dec xchg js roll jecxz mov jmp pop hlt jmp and nop push add and xchg inc stos iret pop jg cmpsb or mov (bad) clc xor xor cmpsl or dec push rolb out daa mov or hlt call cmp aas inc mov inc xor jns sar push jge adc cld xchg ljmp and les incl hlt mov pop adc cltd hlt call aas outsl dec pop popf push xor inc je adc pushf mov push or jns das nop nop lds je fadd pop fwait and sar push xor int3 or cmp (bad) hlt decl (bad) jmp movlps jmp add aas xlat jg pop dec fildl int3 hlt call das test jecxz dec lahf or scas add cmp mov hlt incl cmovns aaa inc mov inc cmpsl inc and popl clc xlat hlt ljmp adc and or (bad) js cmpl inc jp or test dec or cmp ret test jmp inc mov stos dec push add jge add or inc pop mov sarb push (bad) xor hlt call adc and mov hlt push pop sbb add add rcll rcll adc insb cwtl in aas pxor fstps mov divl hlt hlt (bad) mov (bad) mov or sub dec cli das pop mov test pushl fcompl lea xchg dec pop mov sbb lret jecxz nop inc data16 das mov inc and push inc xlat pop test cmc xlat mov popl push add push out ds add insb push pop and inc add adc adc add add in xchg hlt sub and loop hlt inc nop xor ljmp push jns or xchg and aaa push push nop dec cmc (bad) jmp rol sub das cli xlat imul push mov sarb pop das add imul inc inc js cmc call or or mov add lods inc or push fstl xor pop inc pop inc add cmp or insl cmp test or negb or rorl lock mull sarl mov adc idiv xchg ss sbb aas and std add push mov test idiv das add mov mov or mov insb aas push daa dec (bad) idiv add out adc mov jb pop adcl lret adc mov test and arpl stos loop mov pop out or ret jg dec addl lahf or mov cld inc testl fild add mov ret or pop (bad) pop and rcrl (bad) incb add and aaa xchg in lahf pop call and add add shll fmuls jmp jl fs imul push pusha or ret ljmp fwait nop dec mulb xchg sar out add push fwait mov out push idiv jp out pop inc mov iret add jge adc inc dec cmp push xchg xchg cmpsl das dec mov les push fsubrs lahf jp insb push sub negl cmpsl pusha bound xor in mov imul cwtl adc and jmp addr16 cwtl test call das cli dec push inc cmp lock (bad) mov pop das scas cmp mov (bad) (bad) movsb inc xor xchg and jge daa (bad) verr call cs (bad) outsl ja cli out das pop jo idiv outsl imul ss sbb adc inc push mov or dec idiv cmpsl (bad) jge push stos (bad) xlat (bad) mov testl dec lock and or sbb jecxz iret fdivs ret loopne,pn addr16 adc push idiv dec gs dec adc push mov adc pop jne daa inc cmp and leave repz inc adc (bad) and or sub les dec or xchg roll cmc sbb inc jnp outsl faddl scas mul push idiv (bad) jnp inc sbb xlat stos call loopne cmp xor inc or das pop jnp push idiv sub (bad) jnp xchg (bad) xor sub dec mov rclb mov icebp mov (bad) xchg push xchg xor outsl xchg ret and dec sub or lock sub push idiv pop mov fwait inc push push add pusha dec dec mov lock out jge divl jg sub pop pop mov mov push out xchg nop loopne mov mov subl fadds inc jne sarl pop dec repz xor mov xor push push xor andl push and cmp push iret dec pop arpl pop aas popa iret (bad) aaa adc aas push cltd jmp popl adc inc aaa mov addl jae mov and pusha inc and cwtl jmp lods cwtl adc inc pusha mov mov cmp adc mov ja,pt adc in daa pop pop idiv cmpsb adc cmp idiv std mov dec push and sbb push and daa mov movsb mov decl lret and inc sbb push mov cmp cld mov pop cmp sub adc idiv lret inc inc cmpsb jnp test sub inc xchg ds jmp jge or fstl int3 and fmull or movsb adc dec mov inc or lock add and xlat mov xchg aas dec imul jb mov add or push pop mov popa cltd outsb push or pusha mov adc pop ja add inc add or aas sbb cmp cwtl outsb mov rclb adc and lea adc mov cmp adc xchg imul pop adc bound adcl test adc sarb dec adc jecxz dec push xor pop je sarl mov cwtl adcb or and adc cmpl sbb (bad) cmpsb adcb mov rorb (bad) das adc mov add clc (bad) mov aaa out call dec sub idiv or and insl add inc mov inc or dec je mul lock and negl bound sub test int3 xor cmp push lahf aas or ja add (bad) push add jmp pop in or dec (bad) dec add aaa adc pusha mov and mov imul popa scas pop sub (bad) jb pop mov add jae adc idivl arpl subb leave or daa out (bad) out sub xchg dec mov pop inc pushf cmp add shrb roll add fwait int std stos (bad) adc idiv ret sbb cwtl leave fisubl inc cmp xorl invd xchg icebp and add pusha add push push arpl xor xchg jo outsl pop and movsb pop adc adc dec sar inc jo (bad) incl outsb mul or call jge sbb dec pop incb andb sti cmpsl add notl inc push dec push jp aad add inc or inc or mov xor pop lret dec inc push loopne add enter pusha adc ds inc or negb ret mov sti shrb call or inc add sub dec and jg jo incl add add xor fistl movsl xlat addl ja mov dec cltd jmp inc push inc subb dec jb jae sahf xor add pop push psubusw (bad) lret add or mov mov orl adc jmp sbb mov dec imul (bad) stos xchg and jnp imul adc adc scas int3 adc xchg push xor das (bad) or pop mov adc inc or add dec pusha lock or les sti and out (bad) rcr iret call cmpsl mov arpl sub push inc and or ret cs push inc scas mov xor cmp jmp out jmp enter add pminsw xor (bad) ror adc push outsl leave lock aaa mov push mov inc inc xor pop jo push pop cmp pushl popf inc dec out inc das ret mov push js divl mov scas inc push inc add jecxz push cs inc or mov popl rclb imull dec and sbb push sub xor pop mov and add loop add mov test dec je mov mov movsb dec cmpsl add (bad) fwait or xchg mov add push int3 pop jo sti add xchg les push dec or pop push mov add push rorb push mov test or icebp mov pusha insb or mov and inc pusha mov push subl pop (bad) (bad) mov adc nop sti mov push xorl inc or jp xor test fdivrs push add lea sahf jecxz decl push push or xor sub or call ret jb xor (bad) jnp sub dec mov fisttp inc mov xchg test dec push dec adc lcall aaa pusha sbb mov pop sbb insb push dec rolb xchg inc or jmp loope and inc sahf push mov adc push rolb jnp addb or mov sbb out inc sbb aad mov dec std fisttpll add les add int3 add mov pop xchg add addb add daa rolb or mov or pusha xor pop pop push or inc add push sbb xchg fist pop inc mov jo jmp cmpsl add pop cli dec repnz add add adc sbb test adc push bound addb inc adc xchg idiv jecxz (bad) sbb mov pop sarb xacquire mov idiv test or xor jmp add cmp sbb dec push nop add mov int3 jge sarb das pop push sub push test xchg or sub or idiv jecxz adc pop out add xor push sub pushf idiv mull jg push rolb inc push movsb inc rolb push mov adc lods or mov je add or inc or xchg xchg popf mov add add adc pusha cmp fstps (bad) mov in inc lahf add les punpcklbw mov sub add add addb add pushw aam sbb aam push cld adc arpl nop pop sahf popa push loopne add or xor sti (bad) push cld inc inc jns xchg jbe xor or pop pop hlt push sahf xor stos inc push nop (bad) in mov mov inc mov inc adc dec or mov sar fadds sbb js test ss outsb lock add add insb repnz xchg jne cld sub bound in pusha sbbl fwait dec inc add inc ja fstl sub lods add add push sti jae inc adc iret add add divb pop add add cwtl sub cld pop fadd push mov add pushf sub out jbe aas jb pop insl add pop jbe pop add mov dec push lock fs mov dec jmp iret jne push pop inc dec pop dec (bad) pop neg pusha lahf (bad) inc outsb rclb sub add div sahf bound add add pop inc (bad) pusha fist inc movhps add push js idiv test jne or in cltd (bad) pop and add idiv or adc out add xchg sbb cmp lods (bad) dec adc add scas and cli andl sub test out stos clc jg sub add inc (bad) idiv testl inc add lret or xor inc or push adc outsb or adcb enter sbb mov idiv ljmp lret jbe add add ja inc mov aad xchg or add jnp sbb into dec jp lahf gs das test inc xchg push push xchg cmpb iret pusha push nop mov imull mov inc add ret sub or xchg pop dec or add iret notl and jae mov sarb dec jno inc repz mov loop idiv dec jae add xor test insb jae or jns push inc add dec lcall dec xchg or add idiv jl mov inc push jo pushf std les lcall jle xor or mov mov incl test mov push mov and jnp fisub jge out mov push movsb pop mov adc lret or jnp shr or cli add adc sarb mov inc lret and add push inc xchg in test aas in out and pop push dec sbb add pusha jmp inc mov sub outsl push fnop xchg in fild push adc add pop test out idiv sbb xor inc jge mov sti add add clc add and push (bad) xor adc pop add je cmp inc xor sub mov push cmp or cmc cld repz jo in add arpl xchg jbe sub in aam inc das inc dec test jnp push xchg cld pusha adc add mov and mov xchg adc or dec out inc sar adc add adc loopne mov xor jp mov or (bad) mov call and add add jno scas nop pop push add jne xor dec dec push es add push jge dec cmpsl into lock or add inc imul outsb sub sti pop cmp clc push cmc add lcall pushf bound xchg and mov jmp and pusha daa add cs pop std movhlps adc push dec inc push pusha add (bad) push jo push push add add inc or rorb and aaa xchg and and loopne clc incl lds mov fs pop les sub push addr16 push or loope sbb mov sub shr push sbb xor imul xchg push pop and dec sub or or sub jl xchg dec or inc sbb sub jns das sub sbb inc or inc sbb in push push inc dec push sub sarb ja pusha add dec fadds clc punpckhdq mov fimul inc lea (bad) xlat (bad) adc mov addl push fiaddl mov ret frstor addl imul ret and shlb add sbb dec (bad) movsb aaa les aaa (bad) outsb icebp inc mov dec test push inc ret fdivl cmp mov or clc out rolb sub push (bad) inc mov sbb shrb mov scas out in fildl xor int3 jne or xlat inc add aaa add clc ljmp cmp mov jmp add jnp push add or add mov out pop xchg push pop sbb jg push add mov fadd push jno push jo test mov orb sub add push pop add scas xor sti mov or inc sub insl mov xor jecxz imul push and cld push mov and dec or test add pop push sbb sub or stos jg push mov and imul cmp inc or aas adcb (bad) int or cmp xchg sbb inc aaa add pop inc push clc ljmp stos pop mov add pusha add or push inc push pusha mov and andl xchg pusha add dec xor xor cmp (bad) pop mov add adc pusha sub scas push mov dec xor push add rolb or gs add inc pop pop inc mov add add repz loop sbbb ljmp xchg sbb xor push push push (bad) es pop jo clc ljmp jecxz out add inc les xor or inc dec jae and lock inc mov pop pop jae insb pop pusha inc jge int3 adc (bad) add ljmp mov or lahf push and inc pop mov pop mov inc push clc decl data16 mov push add push and (bad) xor arpl xchg mov loopne inc push inc jnp dec outsb cmp inc add sbb push inc dec and clc incl jo (bad) or add add adc add nop sbb (bad) out or icebp outsl xor sub mov xor or test inc cmp in lcall (bad) pusha sbb aam xlat jg cmp add xor cs cmpsl pushf (bad) mov dec loop xorb pop adc fisttp loopne add push rolb into or int3 or faddl psubq sub or inc push roll and loope jle pusha pop jnp jp enter add add sti add sbb jle cmp adc xchg mov mov clc inc cmp push mov dec dec inc mov push push mov adc mov ret inc mov dec inc pusha vmptrst inc data16 cmp add and add or xor mov sti xchg pop xchg pop jge add inc pop mov mov clc dec repz addl int3 jo dec test sbb test sbb and inc outsl movsb push push xchg iret pop into push jg lcall or ret test stc add push adc out cld jnp es (bad) in cmpl stos cli addb test in call mov (bad) inc adc decl add mov jl push subb push add (bad) fsub xchg adc sub (bad) sti or rorl outsl mov cmpsb or out out decb xchg mov cmp push add push add xor add add inc or dec add aad push dec inc inc xor jg adc add or clc jmp adc in lods push pusha add push push sahf stc add clc add add ja jne (bad) insb pop and clc ljmp jp lods out jmp pop add scas test notl xchg daa cmp scas xor js scas adc dec jo or sbb cmp and das pop pop das sub add inc xor xlat mov or inc add movl iret push cmp push nop fwait add (bad) shlb add fidiv aas dec das inc xor call add cmp xchg jmp sbb sub movb inc mov shrb bswap jg jns and push xchg lret or xorl int3 inc jnp xor jg push roll dec stos ret mov aas das rcrl push popa or inc or jo or outsl shrb cmp orl push pop stos add adc (bad) lock cmp inc or mov (bad) fcomps or sub mov rclb adc mov cmp clc inc lock mov loopne add jo jne adc sbb mov add add xor mov inc or faddl hlt pop add clc inc testl mov sub push xor add xchg and xor or js mov add ds jmp inc mov je adcb insl inc or mov dec inc test clc decl or add xor sub and inc int3 dec les xor push inc or movsb dec or ja mov or inc ret add mov jecxz lock mov clc lcall jmp sbb subl ljmp popf (bad) (bad) pop adc or clc decl rorl inc adc dec addl mov in inc or add push xchg add or cmp or ds sub jo push push add loopne and or xchg push movsb inc clc decl inc jg inc push enter mov or and nop adc push stos add aas jo mov (bad) std mov les fstl cmp mov cwtl dec dec cmp mov roll dec clc push rclb gs clc mov dec or push inc icebp dec adc or testl cmpsb rorl sbb sbb cmp push jmp call adc repz lcall push addr16 rorl mov push adcb inc invd inc addr16 mulb inc xor push aam sub pusha xor insb and sbb clc inc aas ds sub sub gs push mov adc inc or adc sbb das outsl (bad) mov in adc int3 nop jno adc rcll (bad) ljmp adc inc cmp mov push scas mov push in push add dec jo (bad) aas xchg pop xchg add adc cmp add push or (bad) mov pop fldcw add xchg popf add pop cmovno es mov incl (bad) inc inc bound loop dec lcall dec push mov push clc incl pop push pop sub mov movl push clc dec call shlb movl int3 lock adc pop dec pusha xchg push mov sub pop inc xchg fs jge push pop js mov mov inc pushf cmp and or das adc clc (bad) sti cmp adc pushf add jg dec or fcmovne xor (bad) mov add mov add pushw nop loopne jno das adc lahf dec and dec push clc ljmp inc mov push inc dec xchg inc jne add xor xchg mov (bad) lret push (bad) cltd sub pop inc push inc pusha jb lret rolb (bad) dec outsb or pop xor mov daa pop (bad) jg cmpsl mov inc xlat das insb in push add pop dec inc pop clc jmp addr16 lock sub push cltd dec sbb push push push flds or mov pop aas sbb dec push orb dec imul xchg push mov movsl lods mov inc adc outsl xchg daa dec xor into pop fist push insb pop clc incl inc roll xor or sub test lods add roll inc lret xor pop clc incl pop loope call inc gs push testl inc addl add rolb fidiv pop popa sbb inc pusha cmpb mov aaa cmp lods sub das xor dec mov jb push add adc mov and xchg sub or or mov pushf mov sbb xor push mov sub fistpll sub sbb push and add add adc and push pop push sub mov rcl mov fmuls dec lds in lock add push enter arpl add pop add stos lock in add sbb in push or fadds cmp sahf xchg ja mov inc or add add inc sub cwtl xor sub insb jb (bad) call inc inc push jae inc inc push or test sub jno cmp cmp adc xchg push je inc add insb daa jnp mov xchg rolb push mov mov push rolb add xchg mov xor pop test inc xlat mov pop subb bound (bad) dec or sbb push and inc or sub nop and paddq sbb lahf mov addl pusha add cmp add fwait sub push xor js sahf sbb mov or xchg inc or out outsb aad add insl mov xchg xor dec out les dec cmp dec pop arpl inc xor mov dec dec sbb cmp data16 or jecxz jbe dec and cmp repz test mov mov sahf mov add lret imul pusha ja incl or cmp pop out cmp bswap and popf in inc mov pop xchg mov cwtl js mov inc inc adc add aam or dec mov repz cmova xchg (bad) jno jne inc or mov std ja sbb call xor lahf push xor sbb arpl dec or dec adc or dec dec or add jae and cmp sub or push xorb or inc jecxz mov push sub mov (bad) jae jmp sbb nop lahf in and jo (bad) pop xchg enter add or mov adc test ret sub shll xchg mov cmpb add add adc xchg daa add out push push fwait test not jae push xlat add imul or add lahf jl and loopne pop xchg jecxz sub dec rorb pop and xor add mov mov jbe pop scas sbb add clc dec add dec inc push pusha add adcb xor out sbb mov dec fist inc repz rcrb xor inc pop mov loop add xchg mov inc xchg sub loop and cmp roll inc push and push mov shlb push add lds ret jmp (bad) xchg mov andl bound cmpsl outsl add subl dec xchg lret add ja cmp clc incl xor imul mov sbb subl out lock pop jg ret ret mov test mov and push or dec dec push movsl mov lock repz arpl test adc jecxz push xlat adc sarb lret sub dec pop dec ret and scas mov or mov add inc int test xchg adc adc inc ja outsl enter scas imul stos dec daa loopne push pop pop or js stos jmp add add add fldenv and add add or pop xor cmp mov out enter clc jmp jnp fadds xchg (bad) adc sarl push rolb xor xchg adc mov ja fiadd pop testl adc inc inc or add cmp cmp inc or sub xorb (bad) clc lcall imul or jne dec xor roll jl nop clc lcall aaa add adc aaa (bad) or push mov (bad) or test daa cmp inc push push or mov xlat outsl fs loopnew push inc and outsb and push enter cli push add mov mov aam adc rol pop inc or xchg add dec mov adcl pop cmp ret dec or hlt or (bad) mov daa mov dec xchg nop je test push add xchg dec jb mov (bad) pop push cmp add cmp clc call xchg and mov push add adcl out mov push adc clc jmp arpl xor push push xor or or sbb jb inc add lock xlat push or clc incl inc add roll int loop shrl add pop dec pop pop sahf clc inc dec inc mov sbb add xchg arpl imul (bad) jae test or xchg pop inc loopnew les inc scas bound loopne and pop inc sahf pop aas arpl mul add inc ss push in add pop inc and add je push xchg cs imul andb out dec or pop in jo hlt dec or and rcrb push push and shlb clc (bad) sti outsl push or pop add add addl sbb add mov xchg add push pop lods push mov or jmp shld dec or aad (bad) repnz push imul and popa push sbb fisttpll out lods pop nop xor push pusha add xchg mov xor cmp adc xor pop cmpsb clc (bad) (bad) nop and arpl sbb xor test call or jo imul pop sbb ds popa jmp inc cli add gs mov pop or push adc fadds mov inc or cltd andl add es and out cmpsl clc (bad) out add sub imul xchg aaa jg sbb sbb pop inc aaa pusha adc pop and add out les cli push push sbb push dec and cltd stos xchg sbb or xchg ja in repz xor cmpsl push stc and sahf call aaa int3 and cmp arpl xor sbb xor add cmp out orl imul mov sbb cmp mov adc and mov inc xchg pop faddl loop push pop mov int3 pop imul or sbbl lret sbb mov inc inc xchg dec push dec jg add rcrb lahf sbb sar data16 pop imul jmp add xor dec add push sbb fadd mov xchg inc push and movsb and xchg sbb or hlt arpl mov fist dec inc out xor push cmpsb shr ficom ret or repnz xlat inc cmp or test aas xor xor pop xchg aas xor js and cmp and mov sarl mov push test bswap jne dec fdivrl pop jo and je push jae jmp mov (bad) pop pop addr16 sbb daa aaa mov mov test jge dec pop loopne xor movb mov jno iret adc clc ljmp icebp int pop xchg xchg and das pusha (bad) out pop pop outsl pop mov inc push pop dec (bad) int loop xlat aam push ret ret negl xlat push mov push push pop pop and add add addr16 or push and aas xchg dec or out in imul and ret push aaa dec les loope or ret adc stos clc jmp push movsb mov mov dec int3 mov pop jecxz lock hlt adc lods xor mov cmpsl (bad) xor (bad) push bound mov jg aas or inc push inc add sbb push stos sub stos mov add outsb data16 add aas loopne loopne hlt mov xchg js inc inc or call pop sbb movsb sbb pop xor clc lcall data16 and inc mov push shll (bad) pop fdivrs push pop (bad) pop leave push push cmp push inc bound xor push mov imul jb mov addr16 cwtl mov adc mov int3 xchg xchg jo rcll xchg fimull pushl jno xor xlat push fwait in push lahf je or or xor mov xor ja sbb or add icebp (bad) lret popa ret ss ret outsl or jo xchg xor (bad) mov sub adc sub cmp pop sub dec xchg dec outsl or ja or popa inc push arpl das inc fistpl cmp stos push and popa add add inc or jecxz cmpsb and jb and mov mov call mov cmp inc or xchg mov cmp mov add loop xor mov test lret test mov or mov dec pusha iret mov rol ret adc inc (bad) add scas aaa arpl mov ljmp push addl dec int bound add mov push cmpsl cmpsl sub pop push iret inc shll fildll in test inc addr16 jo and inc stos daa inc mov xor and (bad) dec xlat add loopne scas sbb push cmp adc mov inc push push push jns add cmpsl add push push push addl push fidivr sub lret inc mov pop xlat xchg cmp popl mov add mov out cmp sbb clc push (bad) repz pop adc mov pushf sub or outsb mov inc jnp mov add mov add xchg pop or jge inc push test dec push lods pop fwait adc push test test mov and push xchg scas xor ljmp dec nop mov imul add inc sbb add test push jmp inc mov cmp push inc dec add push mov in or mov cmpsl inc inc stos jecxz or rorb das ret sub mov push pusha andl jno enter pop icebp (bad) xor push aas shll jnp (bad) cs add jg push xorb shrl pop fmuls repnz jmp dec inc jmp ret xor aad pop lods mov test add movsb and cltd sbb and enter dec inc or inc movsb sub pop jo and fcomps sarb inc arpl dec push inc sbb push mov xor inc mov jmp (bad) jmp inc push sbb addl mov push sub ret gs sub xor or movsl add cwtl sub add arpl fldenv add mov or inc rorb xor clc inc pop jl mov jo add push js inc sbb pop lret inc xchg or push lock ret ja or ror cmp enter and (bad) push jg jno jae sbb fnop pushl add dec and test xlat mov pop test les mov stos fldl enter add push das cmp adc fdivr call cwtl fwait inc push dec add les cmpl cltd pop mov insb push mov xor push mov add adc push jo push add rcrl outsl enter xor dec (bad) pop mov aad into mov (bad) push cmpsl mov pop inc or popa popf fild mov repnz pop sub pop sbb nop popf es push adc addr16 clc (bad) mov mov stos dec push xor mov adc lret dec clc dec mov adc adc hlt clc (bad) out jecxz pusha lahf mov inc push pusha jnp dec or ljmp cwtl pop aam fsubrs jns push (bad) ds pusha jle pop cs sbb push idiv (bad) jp iret mov loopne js dec cmp mov pop adc dec xor (bad) movsb rcll mov clc call ret jl out inc jns or xlat push mov inc or in inc mov add mov sub inc mov les pop loope dec jo scas mov (bad) fcmovnb cmp xor push aas sub sbb push jmp sbb add pop pop test and lcall sbb mov sub sti clc pushl (bad) push in ret add shrb inc add sahf mov clc jg inc sub pop mov add sbb push das inc cmp nop addl fsubrs pop sub pop jmp mov (bad) mov bound cwtl arpl out push (bad) push inc or scas add shrl dec orb scas and test (bad) fdivr (bad) addl rolb pop fs mov inc push (bad) jno mov or mov les es inc mov jo inc sti pop leave (bad) pop rcrb (bad) out dec inc mov repz xchg mov inc add add and jnp dec push ret xor fwait mov push sbb scas add shlb xor inc or mov add dec daa sbb or inc in scas test add pop enter test stc imul gs inc add pmaxsw out mov daa lods daa lock pop xchg and test (bad) stos xchg gs aad lock xor pusha aad jcxz out add jecxz xor mov mov bound xor add add sub arpl or mov add adc cmpsl dec outsl xorl mov add dec add pop movsb and xchg sub mov pop repz cwtl jmp sbbb in xchg jmp pop xchg or inc shl icebp or mov lock js (bad) sbb stc lcall push pusha sbb (bad) xor jmp dec lods mov hlt sbb xor stc (bad) cmp pusha add or in lcall inc sbb inc fsubl outsb call mov (bad) xor pusha pop xchg xor push dec sahf mov ret mov push dec jmp fidiv fmuls stc incl arpl add orl pop jns add in popf and mov pusha xchg adc push jp inc pushf (bad) sti pop cmp mov stc pop inc jle sbb inc (bad) out pop inc mov je pop sub or lret jbe jg pushf test push push aaa push fwait xor pop lods fcmovnb add aas and push pusha xor adc add xchg iret shlb stc jmp jmp shlb daa pushf xchg fstl inc add dec stos add test add shrb sbb xchg sbb fnop popf jo add inc xor (bad) or or or outsl movsb mov jl adc adc notl xchg adc ss rclb mov or inc xchg mov roll mov push cmpsb push (bad) out das or sbb and fs movsb xchg push xlat cwtl pop fimul dec dec cld and adc add mov xor rclb push pop pop pop lret pop inc sbb js mov stc jmp adc dec icebp inc dec in dec shrb and adc out popa push loope (bad) xor inc lock cmpsl xchg cmp xor add adc neg xchg inc add inc stos add inc cmp sbb jg arpl es mull fcoml jae enter add add pusha and cs nop jnp popa add cmpb and repz lds fneni(8087 adc pushl scas sbbl test (bad) jle mov or mov aad adc mov in or push adc les adc sbbb adc stos mov (bad) xchg push cmp add or and and dec push sub loope mov adc push xchg popf inc xor test mov dec jl xor pop mov push adc lret pusha xor pop into stc add add (bad) arpl rorl lahf add inc add push sbb sub (bad) inc je and inc out or incl sbb and scas xlat push fisub or test bound mov stc inc btc adc jge push push scas sub fldl sub sub mov ud2 es mov push daa clc dec or add scas add add (bad) sti fucomi clc daa and jns enter jg ret adc mov imul imul andl cltd inc inc cmp inc test mov stc jg pop rcl inc out jb lcall cwtl in adc mov lock add nop add add sbb jno inc stos inc or add adc pop nop add enter add pop shll dec cld push stc lds subl pop repz adc add xor rcl add push sti or rolb pop inc rolb push pop bound pop addb or push lret push mov and pushl pop jmp jbe add aaa gs fs pusha or sub outsl js stc add push add jmp jg adc addl mov push add mov lcall push faddl dec push lahf xor stc jg mov dec push mov loope ret aad insb xchg xorl xor add ja push mulps je inc push dec or inc xor test cmp jb (bad) dec push and stos in adc stc (bad) jg push xor xlat ja inc push nop rol std pop push push mov inc pop add orb adc (bad) sub jmp push cld push das jg clc jnp inc movb push add or lcall add add (bad) out xchg and subl push andl xor test or dec test ja int3 arpl mov fildl or jnp ljmp les inc push rorb jo pop push int3 xorps dec inc dec push mov pop push and pop mov and popa cwtl mov scas adc or jmp push or add stc dec subl rcrl add inc push in or shlb (bad) or and movsb pop roll jne xor andl xorl and rolb (bad) xchg dec inc or les inc adc cwtl mov push mov inc or inc scas bound shrl out jecxz gs inc push xor jae movsb add je add xor decl or add jmp daa inc fsubr and pusha inc push dec or pop inc pop cmp cmp mov ja mov aas jg add inc push (bad) sti or add add or sub adc inc sub ja jnp or sbb pop add dec push and inc lret mov add and pop sub and mull shrl stc call mov sub push mov lds or rcrl pop cs pushl fildl rorb push mov outsl push sbb mov or lods pop pusha push mov nop and jnp adc or ja popf bound scas inc xor enter call adc stc decl scas mov jecxz jle pop push mov xchg popa js xor dec or push push cmp push (bad) jo jle push inc int3 lods mov pop fwait rclb daa dec daa or shlb jno outsl or daa dec push push mov (bad) mov mov pusha mov cmp push pusha aas scas jnp mov mov inc pop arpl adc dec mov xchg pusha xchg inc fwait les stc (bad) in cmpsb xchg rol pop dec cmpsb out scas (bad) add popa push cwtl dec jb imul pop push dec jne cmpsb and inc dec cltd jnp test inc or les mov push push push roll clc decl jns push pop inc push pusha dec push pop inc push pusha sti (bad) popl sbb hlt aaa pop cmp add and adc inc and mov fs add test das jp lock jo stc call pop mov lock shrl das fmul jne jecxz das shrb inc cmp das push mov sbb aaa pop nop cmp testl mov xchg mov inc roll add sbb adc or adcl stc and add add stc push adc cmp push scas mov aas jbe sub inc mov adc scas adc mov jge mov pop mov sub push xchg fistl push mov jge loopne mov stc jb add in or imul adc test mov pop inc cmpsb scas test cmpsl jae sbb mov xchg sbb cwtl add dec inc cmp add adc inc stc dec pusha push jl outsl addb into jle mov or adc or inc fbstp xor add inc inc stc arpl mov adc sti rolb xchg aas xchg adc push scas inc mov pop add add insb inc das push adc rcll inc stc daa lds sbb shll xlat add addb and cmovne mov inc repz or sub stc jb,pn movsb jae sub lock rclb fldenv das cwtl inc inc addr16 mov scas addl sbb roll lock arpl mov push aaa pop adc stc pop imul cs add xchg rolb or add or adc ljmp loopne fcos xor lock call inc stc inc fildl lods out inc push xor xor add or jle inc or xor iret arpl cli or aas jp jmp leave lret push inc add cs pop data16 arpl out rolb outsb and dec xchg push mov test test popl push inc ja inc shrb inc push mov sub inc inc or int3 push ret mov add push xchg add dec or or in push push test add (bad) add push (bad) add sbb push or loopne add fwait adc add mov jmp and inc or xor sbbl jmp imull dec push js sbb insb inc push jo add jo ds clc or inc or pop (bad) movb js out dec stc (bad) fistl iret loope push ja ja adc bound fild test aaa xor fdivrl imul arpl pop daa pop (bad) and cmp addl add sub jge jmp push stc incl orl add dec inc or xchg rolb inc roll repz mov test dec aad int les pop jmp call push or xchg and (bad) push pusha adc push add mov or add in pusha pop add repz xor jle pop stc jmp add scas outsl xor mov stc or jg xlat xor flds xchg xor add dec cs arpl pop add push jmp stc pushl mov pop aaa ret push andb or stos (bad) mov cmp or (bad) cmp mov inc rcll shll inc mov ret and jae mov push inc scas rolb ja sub mov dec push pop add and mov or aas addb in cmp scas and adc cmp sbb sbb (bad) rcrl daa push push mov sbb sbb fadds int add jne push add pusha pusha add pop add sti jg xchg add add insb stc (bad) mov push adc inc je inc inc lds int jbe pop insl pop inc and jne les adc inc ret adc add call fwait ret fstp dec xchg add dec push and enter scas push (bad) jge hlt aas aas adc incl or dec stos scas or outsl xor stc call fs add sar arpl add or ljmp (bad) jo pop push mov jns pusha es add test push loopne loop addr16 add pop jo (bad) fistp clc xor xchg push pop dec push jo push add pop and popa add addr16 adc stc add add pusha nopl add mov push cmp push cmpsl adc cld pop fdivs or push insb inc push jo or pop xchg out xchg pop data16 or aam xor dec or add lods add fdivl mov popf pand addr16 das add (bad) orl or dec xchg xlat movl inc adc ds or or add push lret loopne stc call push adc dec inc (bad) jo xchg adcl pop outsb out inc dec jo adc ljmp hlt ja pop push sub stc call addl pop scas xor xor sbbl cmp (bad) outsb mov dec push inc pop int add push insl testb xor dec pushf inc or or shlb repnz cld push add aaa cmp pop ljmp pusha jl dec xchg mov jae or sbb mov xorl scas stos mov into cmp cmp bound jp (bad) (bad) int3 pop nop imul add push inc adc pushf jnp xor pop or ret and xorl adc dec or pop dec mov add xor xor or xchg les aaa les scas xlat xadd push out rclb or inc in (bad) mov in mov push inc push adc addl scas sub stc decl jmp fs adcl inc or sbb mov adc mov cmp sahf or das inc and ret and push xor pushf les add xchg fmuls push adc mov addb cmpb fidivr fbld arpl mov inc push inc js add inc arpl jns add inc add or pop lret inc push inc sbb inc cmpsb pop sarb dec dec mov rolb or je add add ja push stos pop mov sub mov repz gs push jae inc add xlat or adc jmp test mov xchg out pop scas sub pop add xor (bad) fs sbb adc enter mov pop ja cmp or or sbb push fcomps add push add pop inc mov (bad) push sbb cmpsl mov push adc push jo in in in add nop or roll aad add scas loopne stc decl inc jo ret mov push pop cmp push add xor push add cmp rcrl adc add add mov sbb add data16 push xlat aam stc push jnp cmpl lock adc in jle mov push in push push call pop adc or dec add sti inc (bad) popa inc testb dec xchg jge pop add add add jbe jbe ret or jle inc mov dec clc mov xor lret or add cmpsl xor lret outsl add xchg insl loop adc push push and sub xor pop pop iret mov xchg aad cmp imul jl adc jl mov add ficom push pop inc test (bad) jno inc or mov push mov add lahf sub add test stc dec push adc int3 mov dec adc sub push notl fwait xlat mov mov jl mov and inc pop das inc push xchg sub pop dec or in or mov add sbb inc or loopne sub pop adc jae dec or out ljmp lcall rep (bad) lcall iret add add push cld ret pop dec (bad) jbe add xchg inc or mov into dec push and pop inc movsb mov outsl movl jae adc mov jp mov mov push mov js mov fsubrl and (bad) call cmc or adc add cld dec (bad) sarb lret or add insb pop jno (bad) push lret xchg add xor nop nop xor mov jge push mov fdivs or jmp (bad) mov add stos xchg xor add push inc add dec mov loopne or push xor pop sbbl inc fcompl inc cmc ds bound sbbl les (bad) jnp or cwtl or add ror stc (bad) jle push mov sub inc mov dec push lods push pop test or sub add cltd inc aaa popa pop fs push add jbe sbbl add std adc add mov stos popa psubusw mov xor inc mov dec pop add cmp push popa xchg jne sub enter add or or pop or add and (bad) cmp and add test adc aaa imul movsb sbb dec loopne pushl cmp lea je imul jb mov or fldl int3 das fadds sarl adc in jmp sbb adc jge inc sbbb jb cmp adc scas fnsave add test mov insb sub pop (bad) js stc mov push push adc add inc dec sbb cmp add rcll mov add lea outsl inc outsb mov lahf add dec mov ss jbe into and push shrl and js mov sub mov int3 add lods jl je push fs nop in or add xchg xor test push out sub or out in stos sbb or sub sbb sub loopne jno out dec push and jo sti pop lock xor and and mov inc xor or pop dec cwtl adc jmp and les mov sbbl xor jno gs or loope or inc or andl and jae cmp fcmovne inc adc jb mov repnz jnp push adc lods push mov jecxz les sub loope sub sub push in std pop push sub je sub popf push mov push add jo mov sbb repz adc mov ljmp push adc out lea (bad) fcmovu pop jg mov mov pusha xchg stc dec mov pusha fbld cmpsl test gs jle jb pushf inc (bad) dec in push sub ja add fwait lods dec add mov push movsl icebp mov inc (bad) fldenv pop adc push fsubl mov xorl inc inc push sbb add sahf mov cmp dec lods out mov aas add add outsb pusha mov dec dec cmp add xchg call or arpl aad mov add dec or add je ret cmp add xchg les jge add inc aam addr16 fadds add inc or mov cli mov mov jg add out mov add scas xchg and imul inc sub push addb cmp push mov push and cmc inc xor xchg inc or dec sbb out pop push inc mov iret pusha js cwtl fwait mov movaps stc pushl aas loopne out and pop cmp stc mov sar movl jle imul or gs repz inc push lahf popf sub outsb push jl push adc xchg out inc les sub js inc pop cmp push add jno pop ret sti push shlb cmc stc jmp or imul add andl lods enter sbb push cltd hlt mov lcall fcmovnu nop loope in xchg addr16 lods sub ret pop adc pop mov jo ljmp gs or stc negl pushf cmp and or fisttp mov push adc mov jecxz mov mov pcmpgtb pusha inc (bad) add cmp fstl sub cwtl jnp and dec dec pop inc std cmc dec adc aaa fildl pusha inc andl add sbb out add out push movsb popa fist add and dec iret aam fcoms pop adc xor cmpsl (bad) or jb mov in add lret push sub push add movsl aas jecxz adc or mov add adc cwtl jae or push arpl popa dec mov cmp dec inc add jmp xor (bad) adc inc or mov loop mov cwtl push jb iret hlt arpl (bad) adc inc push inc add jb push es imul cmp cwtl ret stc lcall push subl pusha cvtdq2ps pop xor cmp test mov jnp xchg dec inc cmp inc je stos inc out enter add sti stc pushl mov jo or dec pop inc inc (bad) fwait jecxz dec sub cltd or dec dec or inc bt mov inc ret or push push inc insb and enter cld stc (bad) stc stos pop addr16 xchg cmp inc or orl mov cmpl aad push mov or aaa push mov stc pop mov fdivr in inc push addl mov push shr loopne or incb or jo cmp jle and popf inc xchg int3 in dec shll sbb enter test sti sarl (bad) stc ljmp scas adc mov pushf dec sahf test sbb inc or pop push sub adc mov push adc stc lahf dec fsubrl dec or push mov or push sti add adc inc or add lret hlt mov mov pop push and adc in pop cli inc xchg pop (bad) fcmovnbe add pop sbb not pop inc les jmp (bad) fsubp aam jae aas out xchg add cmp pusha inc in lret sbb sub and push inc xchg iret adc cmpsb add mov xchg fs sti das inc add inc (bad) cli inc mov mov das jmp test fist dec sub push das sbb push lock int mov push (bad) (bad) notl pop (bad) pop inc xchg bound and or scas pop or pop inc addl ret andb stos jmp and cmpsl inc add add jnp in imul and lahf inc xchg addl mov mull push inc ret inc inc jo cmp (bad) mov pop mov sbb inc addl mov push mov jecxz ja cmc xchg cmp xchg jo add mov flds jl sub mov mov (bad) ljmp js gs mov add or add (bad) push (bad) or or add imul or adc call mov adc addl add mull imul add or sub jne add sub out push (bad) mov pop xlat inc xchg jns fcoml scas push (bad) and rcll popl fidivr push sub (bad) out outsl jmp lods imull notl sbb adcl sub lock mov pop mov mov jg or ret xchg movsb cmp mov mov ja xchg std ljmp out or sti pop mov pop jnp icebp hlt sar decl mov or aaa lret xchg sbb loop cld push adc push nop and inc outsl or sbb call mov or dec pusha push mov cld call aaa push or pop or and dec inc or pop dec push test xchg mov popa jae xor cmp push imul push rcrb xor sub jmp std (bad) jp jnp divl pop xor out inc adc and or popf loope ljmp sub pop inc js add cmp popa add jo adc repz bound lea scas out dec mov or inc and add ret call push push dec or iret icebp dec loop push lock inc push lret jmp dec nop sti das lods and mov pusha addr16 mov lret insb aaa ret adc lar mov dec sub adc sti (bad) cmpsl cmp std lcall or adc dec hlt loopne sub adc or insb cltd std aaa je aas sahf sti cmp inc or daa cmpsl xchg lcall xchg pop mov add add sbb add loop mov pop inc pop add jl std lcall fnstcw fwait aas lock dec pusha pop mov loopne mov int cmp jp dec add pop add add dec add lock adc sti xor mov roll les ret aaa and and sub (bad) movsb pop inc and ja jmp sub rorb add or adc mov add and daa iret and mov add stos push inc sub fs icebp iret rcrb in inc (bad) sbb inc or and push (bad) inc mov enter and adc imul in loope lahf inc adc or and fsubs add mov inc sub and popl inc and ret cmp pop iret xchg inc (bad) add inc shlb test cmp push lahf add inc rcl cmovnp inc das jbe addl mov pop addl push iret cmp xchg das incl popf and jnp pop push es pop or xor lods sbb and push and adc movsb mov cmp aas adc mov in sbb setae push dec mov scas in xchg cmp movaps in aas mov sub cld push sbb (bad) lahf push add add ja inc mov clc hlt pop aad mov enter divl sub push dec das outsl mov sbb arpl push out repnz or (bad) (bad) ja pop pop dec push mov hlt sbb mov loopne lret add pop (bad) ja mov mov cld xchg inc jmp js jo gs (bad) dec or pusha inc sub dec mov test push mov cld jo outsl cld jle (bad) push or ret sub insb push cwtl sub hlt jnp add lret inc arpl add pop mov inc lret (bad) movhps scas jmp push pop cmp push roll pop fwait ja inc sbb (bad) lret add sti incl add add sbb test das and xchg inc add dec pop daa pop and xchg cwtl insl add aam sti pushl mov mov or fnstsw repz sbb dec std xlat lock (bad) dec push and mov jg inc mov mov ja xchg imul add inc sub pop mov pop xor out mov aas and mov or pop out xchg aas inc (bad) jne inc inc aas inc pop sbb (bad) imull mov out add daa aas dec fwait test scas add dec mov mov aaa and mov add dec ljmp inc adc mov lret cld cmc xchg std inc lods or addr16 test std dec mov aaa pushf push mulb lock pop push mov mov sti mov push jae adc das sub pop add fs jmp add inc cwtl adc mov jo push aas jo pusha pop jg adc inc (bad) jo dec pop mov sarb mov pop or stos (bad) jmp push xor dec cwtl push std jnp and call aam or or jno mov cmp inc push shll sti adc sbb addb cld mov call add mov pop les push push cmpl nop scas imul add inc push and dec add dec inc inc nop xlat push rorb xlat in mov fsts and stos stc scas mov mov add imul push inc push stos adc and imul add imul sub inc or push sahf std lcall adc inc idivb aas inc push push pop cmpsl aas jo xchg add push and dec inc fistpl pop scas out mov clc or sti pop repz sti (bad) xor mov gs popa fsubs and mov loope mov test idivl adc adc add xchg adc mov xor sbb xor out jge mov pop inc or push push (bad) or (bad) cmp adc inc loopne xor pop adc push pusha daa aas lds add add ja aas xchg repz popa ret sbb lsl jecxz fmull mov adc mov lret enter or inc cltd or lret push cmpl loopne std incl popw pop push add xor mov dec lret hlt cmp mov dec push xor ss cmp or xor push ret fistl je out data16 out adc pop pop aas imul push jg add push loopne cmc outsw pop lahf in std lcall mov daa jg push int3 roll pop lahf test pop or and xchg xchg not out movsb pop pop add adc adc xorb (bad) or aas ficom pop push cmpsl test sub add lcall xlat adc adc sbb cld sbb push out test cld pop xor enter xor outsl xchg (bad) decb push sub rolb add jecxz or push cmp (bad) mov cmp ss add in add sbb nop xchg (bad) lret cmp (bad) adc or mov aas xor push flds iret jo add js cmpsl push out mov nop cmp mov xchg or pop mov or sti fwait xchg push adc add stos dec repnz and cmp rcrl ret out pop (bad) je std lcall sub add mov push xchg adc inc add mov push (bad) js sub sbb jae cmpsb cmpsb sti andb or add cmp add das push and pop inc mov jge loopne xor jmp push sub cwtl test gs fisub (bad) hlt rep xor ja inc push mov lods dec mov adc or jb adc sbb jnp sbb in lcall stos inc cltd iret scas adc push sbb pop add mov or xchg roll lock jp sub (bad) pop dec jp mov mov fwait jecxz aas jae jne das push fcomip lret inc cwtl inc mov push (bad) push icebp das lret add add stos stos pusha sbb das jecxz mov lahf add pop das xchg mov out xor aas add fistl xor dec push pop test pxor mov fistl jo and fwait insb fcomps outsl je outsl sbb dec lods aaa lret pop decb (bad) jmp js lahf inc addl jle call inc or fnsave push fwait addb cmpsl sti incl (bad) mov xor in or pop sbb scas ljmp inc sub cmpsb sti cmpsl adc push add in adc adc mov sahf stos jae insb push fstpt pop inc scas xchg or aas push adc ss add stos push mov pop jmp sub mov xchg arpl or out add das mov inc das jae loopne sub insb das pop xchg scas mov adc pop pop (bad) sbb cmpsl jnp add mov test or ja sbb js das (bad) xchg mov add fsubrl testl (bad) jo add cmpsl add push cmpsl rolb pusha sbb scas xchg adc arpl lret mov xchg cld das mov xor and xlat adc in inc xchg (bad) xor mov add (bad) stos iret sbb xchg xchg sub mov xchg sbb dec aaa sub cltd out rclb (bad) dec ja pop fcoms dec pop xchg shrb mov cmp xchg testl das xchg inc pop add push adc and negl sbb dec arpl sbb movsb das out stos xchg xchg mov das imull add mov cmpsl rolb orl and (bad) mov cmp arpl jmp test cld inc jl cmp das cmp pop (bad) jmp in das cmp jne add cmpsl mull cmp sbb (bad) iret mov fnop or nop das scas xchg pushf das out sub cld das call testl mov xchg hlt dec fstps xchg lods arpl and lahf xchg mov sub mov inc adc fwait mov out add hlt cld jp or sbb push xchg lods (bad) sub repz and andl fmuls mov out push lea mov (bad) xor xor cmp (bad) mov pop pop or cld adc pop out xchg pop std inc cltd and ret enter shrb sbb mov std push gs stos sub aam push ret sub cld adc add adc ljmp repz pop es sbb add jecxz adc and clc and hlt js or sub out cld das adc jnp in push adc hlt aam cld inc sub sbb sbbl and adc xchg inc cmp xor or int3 jo (bad) xor or sub rolb cwtl in cld out xchg cli sub in icebp cld cmpsl jmp inc pop sub inc xchg jp test push out and pop xor mov sbb push xor jb pusha and push mov dec xor addl movl push push push xchg das addr16 adc (bad) scas cmp and mov push or (bad) aas or test add adc sub add ret jo push or add fst pusha shrl cmpsl lret or addb inc adc and pop inc jnp int3 adc sub adc loopne ja adc dec adc and mov lahf inc adc and push enter out jae sub or push fwait out rclb out addl push sbb dec and (bad) out xlat dec inc iret (bad) xchg adc cmp enter or adc adc or jnp add aaa subb and sbb iret movl jae mov cld pushf adc push and mov popa and inc sbb imul inc sbb test pop roll jg jecxz xor stos pop inc (bad) (bad) aas mov inc or adc jecxz or inc aas repnz pop pusha faddp and aas push cmp lods push cmp mov sti aas mov (bad) daa enter scas or out jg push xor mov mov xchg stos das addb xchg adc push imul xchg jno pop push and out xor add shll lods fbstp cwtl dec rorb punpcklwd cld bound inc and loope cmpsl jnp pop push add cld (bad) jnp fisttpll dec outsl or adc addl lret in ja mov xlat stos movsb pop and xlat and shrl or inc adc enter adc loop lods cmpsl iret adc push mov push fwait outsl jns lods rolb fcoml scas and cltd mov je ret push sbb jl inc or or enter push adc nop dec bound jmp cmc xchg inc enter lods cli idiv sub push mov jae frstor or addl daa add cmp out sub sub inc insb pop rolb add push and push mov push xor and push add or pop jnp in xchg int3 or decl clc mov push inc jnp push push or stos ja inc jae mov dec (bad) xor sub repz ljmp rclb mov call dec aad sub mov incl std fistp popa ret push (bad) mov sbb sti cld lcall adc sbb add mov inc add xor jecxz aaa add and das test div inc rclb ja push adc or cmc fildll add adc (bad) mov add jmp test mov cld ret mov push lock and mov std lcall sub and enter sbb lock inc popa or (bad) sub xchg or in or stos sub and cmp ja popa (bad) add and inc sbb stos add inc mov add inc mov cmp pop cmpsl push and xor mov ret or inc loope cmpl dec pusha in popa les mov pop xchg addps dec lea pop push sbb or pop and inc cwtl push and push mov dec xlat inc inc push xor adc mov and xor xor or outsl add js mov fdivr mov sbb sub mov xor arpl push add mov js std mov and loopne dec mov dec iret xor sbb push pop iret imul inc mov add mov add cmp bound inc add (bad) xchg pop faddl testl ja add cld cld cmpsl and mov fs mov mov xchg and repz shlb adc or adc sbb jnp addl or outsb stos push xor sbb in packsswb adc and jg push movsl xor add mov insb adc cmpsb and aaa or and arpl cwtl jecxz push sub mov ds adc ret and jo sub mov dec add cmp cmovg inc inc add pusha add inc mov call sbb cmp popl add inc lahf sbb daa (bad) mov add fmulp jo enter push and adc sbb pop aaa add add xchg xor push cwtl mov aaa mov les inc ljmp fwait inc or or push aaa (bad) pop cmc notl add std pop (bad) adc (bad) lea fwait xor jo aaa pusha xchg ljmp mov shll outsl rolb pop or push or add fisttpl xchg flds xor inc inc and dec fistpll cld (bad) mov pop shr sub push push pop jnp sub xchg pop das cmp inc out pop stos cmpb and mov ja jnp xor cld incl sbb movl add xchg and inc xchg cmp jnp lret push inc out loopne dec xlat mov push inc push push popa iretw inc add mov imul sarl fsubr cld call int3 (bad) dec add mov or inc or or addr16 lock (bad) (bad) jl sub out fwait arpl sub push or push inc mov mov (bad) jmp or xchg dec jge or xchg push movsb add and aaa xchg out cld punpckhbw mov pop jle sti dec and in or push arpl jo add sarl add or inc fistpll cmp insb stos or mov mov add cmpsl cwtl sub das shrd sbb data16 mov mov adc pop and (bad) inc push pop push stos or add inc (bad) sbb add adc and addr16 sub add nop dec mov in dec nop and or rorb push and bound and xor cld or nop pop dec inc or mov adc push sbb dec and jae add hlt cld daa push and lcall aad inc pop push in or mov pop cmp insb test ret inc cmp ja (bad) xor scas sbb or adc shrl inc call and dec inc or add js cmpsb add push pop jae popa xor int3 jg add arpl dec pusha xor inc adc mov test outsl aaa xor or cs clc jecxz xor jg pushf arpl cmp mov cmpsl push or push iret imul jo jb inc aas sub inc and fs incl fildl add push pop and pop mov push sarb cmpsl xchg and (bad) pop add push loopne in and and jg sbb cld lds dec pop sbb cli aam inc jl adc dec add push (bad) ljmp data16 xchg aaa jo push sbb push xchg js add or add inc lret jnp ret (bad) pushf mov fistp and sbb dec (bad) pop pop inc jl inc pop cli cld roll imul sub cmp sbb xor xor inc xchg and or jecxz sbb aad cld fwait out addr16 adcl or lods nop scas xchg sar and mov cld (bad) jl add pop add sbbl xchg push cmp mov xchg mov fmul (bad) cmpsl mov and testb jecxz add and sub sbb xor add enter add pop add push addr16 push loopne add movsb icebp cld inc adc pop mov and (bad) and and lods aaa cmpsl inc add sub das jl ret and mov (bad) mov pusha out mov fildll inc fcoms add jmp dec sub mov loope loope repz (bad) jne imul push aam cld or sub pop inc add (bad) jo ret mov mull sub out pop fsubl adc push movsb jmp and adc pop dec idiv lcall add sbb push and outsl adc inc repz jb xchg add iret mov cmpsb push sbb jo jmp xlat out or and js aaa pop lds sti shld adc repz aas fcoms (bad) jmp ret test or loope dec mov sbb imul jo dec mov out and shlb inc push and adc bound inc fisttp and add inc daa pop test cmp (bad) and fisub pop outsl pop add int3 push rolb pop in ljmp pusha fcoms cmpsl and lret adc push push pop mov ret test and scas dec jae and out (bad) leave (bad) cmp mov (bad) aas int3 jbe mov sub add and push xor dec or icebp (bad) bound repz and ret cmc shrb out xlat dec adc adc adc sub push pusha subl and push xchg push pop (bad) out in popa test cltd fwait adc hlt adc aam movsb adc or (bad) cmp jae sub stos xchg or stos cli inc or jb cmc jnp sub cmpl or pop mov iret aaa pop mov sub pop das mov fmull outsl and les jnp das das das sbb and pusha inc stos and jge dec mov cmpsb or and test fcmovnb orb call sbb add pop or or dec iret xor add cld fldt push xchg or mov and pop and sub sbb mov ja nop mov sub adc shrl and mov mov or loopne sbb add inc rolb inc sub and lcall icebp rolb sub mov inc push das and fs dec inc push push (bad) dec std pusha adc and mov inc push push jnp orb sub mov dec and push and push add pop dec dec dec icebp dec inc inc push inc add aas inc movsb adc ja fs and jecxz data16 jmp jecxz lock sub push andb add sub push mov sub (bad) xor inc cwtl mov aaa fsubl adc xlat and inc or fs aas je aas push xchg cmp mov adc inc lock gs cmp inc out rol inc mov fist pusha push sbb loop push das nop loope inc das inc fist mov jecxz out adcl pop adc sub dec cmp inc sub fwait mov push add (bad) xchg push lahf push cmp test add or orl xchg test arpl inc pusha push pop mov out adc or and faddl pop sbb pop add push imul fwait and out lret fstpt movntps scas push xchg lcall arpl xchg sbb pop nop mov push inc or mov clc push push sub in xor mov jle mov std roll xchg popl popa and mov push push mov sbb add call mov pop and jo add adc mov add sbb sbb mov inc and pusha rclb mov xorl vmread les mov and das pop je pop inc add xor pop aam lods xor pop nop push and push sbb ja add pop (bad) jp and mov xor movl jg lahf sbb push add test roll inc fwait push add (bad) out adc lcall push out adc pusha insl lret inc or lahf in and adc pop loop sbb push push sbb and lret faddl inc xchg cmp dec or testl add sbb fwait xchg insl xchg and pop mov movsb push repnz test push xchg push mov or mov mov xchg push push or cmp aaa arpl add jg pop paddw daa mov adcb testb inc or push inc jb mov push nop adcb clc jnp xor jl std rolb insb nop scas and sbb lret mov addr16 jnp and pop int (bad) add imull and inc fistpll lock inc or pop mov push cmp dec xor cwtl adc push add xchg ret push rolb orl popa ret insb fbld loopne aas in cld push add or aaa adc sbb inc push or das jle adc or imul ret mov stc inc xchg push cmp push decl into lcall pop icebp popa jnp and andl cmp and mov stos ret or lret inc xor shrl sbb or fs sti add pop pop addb (bad) inc add inc and dec out int insb and outsl mov push ret ja xchg pop add or subl pop xor loopne jo aaa les jecxz outsl xor and xchg push cmpl ret sub (bad) pop pop and leave pop and loopne adc imul pop arpl cwtl sub cs xor ret adc add or scas xor mov sbb or das pop sti push sub (bad) imul cmp nop mov xchg enter xchg iret dec add sbb dec and inc leave popa jecxz xlat xor jg rclb jge popa xor pop aam inc or add ja pop inc xor inc pop mov xchg inc jecxz sub fadds adc js nop inc sub sbb jecxz (bad) pop subl sub sarb add andl mov inc sbb hlt or mov inc ret mov fs pop mov sub divl jl dec pop jno scas adc mov cld adc bound jae sub or aaa adc push or aaa cmpsl add mov mov sbb mov lock cld in pop xchg dec fstpt sbb and adcl mov or (bad) loope jmp xchg lret call (bad) fdivs aas xor ds mov scas cld mov rcrl or add mov inc cli lods adc movsb and push or cld ljmp sub sbb cmc dec mov pop mov mov outsb or add dec orb xchg jmp daa pop xchg xor cld lods cld incl sub adc mov pop fisttpl mov xor sbb pop repz adc sub mov sbb xchg adc jg inc or xor adc inc adc rorb dec and loopne dec or aam or xorl jg push mov xchg dec mov nop cmp mov jle jecxz cmp daa add xchg sub stos (bad) sti fimul add imul and push cmpsb jnp fsubl and xchg dec mov loopne add outsb (bad) sub inc xchg hlt imul mov aas movsb jg nop inc pusha cmp xchg loopne add aas pop imul sbb daa test lahf add or popa test xchg clc imul pusha inc out mov sbb dec push xchg dec add and mov and add cwtl mov in stos and aas pop mov shlb imul xchg dec adc popa or mov das inc pop aas (bad) push cmpsb inc sbb sub sub movsb call cld ja and inc inc ja jo adc xor dec popa jnp andl lret insb test addr16 adc fisttp xchg movsb pop add cmpsb jmp add mov inc cltd jg sub call and fmuls add enter add inc movaps mov dec shll je sub lea inc pop popa xchg in mov lcall inc std sub jmp mov sbb and aam xor ret in jae inc lds or ss push mov in out pmuludq pop std call inc ret inc fwait and xchg xchg add (bad) popa or jg xchg lds add movsl adc add lret xchg xchg push shl add jno and jle clc adc xchg sti jl std inc add ret shlb mov daa shlb aaa sub add push pusha push mov adc or add push xchg inc dec mov dec lods inc lret xchg dec sbb inc inc add dec push cwtl or mov cmpb push add xor or pop and and add js xchg xor or mov or adc xor push and jecxz nop inc (bad) sub insb push mov add xor push inc dec subl xchg ret push leave add std push ja add jl mov lahf cld add sbb iret mov adc adc shll jg add daa fcoml add stos add push inc imull add inc or push push adc jo sti and and out push das inc push adc push (bad) sub inc rcll popf adc mov daa dec cmp inc ja push adc stos (bad) or pop or mov dec inc or add mov inc pusha adc push xor (bad) dec mov xor inc lret inc push xor insl dec inc push mov cmp and mov insl lahf xchg stc out pusha cs xchg pop inc dec sub inc aad jg sub or xlat push je dec add xor adc addl add pushf das and mov and xor insb in add push pop inc adc adc pop insb and (bad) jle dec inc xlat adc test rorl dec mov jle cld dec push and pop or inc or xlat adcb rcrl mov stc mov xor mov jns in dec add iret cmp xor rorl sbb adc sub pop inc or loopne pop adc sahf mov adc (bad) inc push sbb xchg aam je stc std lock out push repz pop inc or aam fwait push dec add sbb daa scas addl and push push or xchg add daa call cs jbe outsb inc aaa inc mov stc push adc scas add cmpsl ret xor pop xchg push stos cmpsl jecxz pop adc addb pop inc push push out push push test dec add push sbb lahf aaa xchg orl xchg shrb inc jb adc insl jg and inc pop pop add lcall (bad) outsl wbinvd add inc push popl cmp inc xlat daa pushf cmp movsb dec (bad) pop int3 mov cmp pusha add inc or adc xor inc or pop (bad) fist pop or repnz add add (bad) in adc pop inc or xchg test xor pop mov fwait xlat inc push inc add adc loopne cmp test adc sub add sbb sbb sub xchg cmp dec pop pusha add or adc addr16 fldl mov ret jg mov and pop das loopne es aad jnp push stos pop rorb addl sub or insb subb push mov or fsubrs add (bad) std jp adc xchg outsl pop push add pop notl jo inc and push xchg and dec pop out and inc push fildll pusha sub mov mov xchg pusha xchg les or inc dec push dec or shrb or mov incl in add fildl pop pusha sbb or mov adc xor mov sbb mov sbb dec pop (bad) mov dec mov and and inc nop sub inc or pusha sub jge call jne mov inc push adc xchg ret cmp mov test mov push xor (bad) jnp xlat xor mov ljmp sbb xor daa inc dec fistpll mov pushw inc xchg outsl (bad) or cmp pop push pop pusha rcrl rclb mov push push lock aam sti js stc incl jge inc add add outsl rolb lds adc inc inc or inc add rolb dec pop pop or add nop sub and push mov dec xor or mov inc or mov add loope incl cmpsl mov addb inc or xor jle pop insl push dec or dec aas inc add add jo nop inc rorl cli or push sbb jnp add scas insb aas xor cli lcall je verw sub fwait xchg mov lods push inc mov movsb and xor lock (bad) cli decl xor mov fsincos insl decl xor add pushf adc call mov sbb mov mov test cmp adc (bad) in cli (bad) je mov mov push inc mov lcall dec aaa faddl adc inc add mov pusha dec add inc sahf sub out in enter je ja and sub or rolb (bad) cli aaa add and add or and scas xorl pop inc add cmp mov add cli inc sub add or adc pop std daa pusha dec inc jmp jp add iret mov std (bad) jae and sub popa dec adc rcll or and push in jp icebp sbb test outsb mov aaa cmc push cmp lahf jnp push add xchg push mov dec xchg add or cmpsl adc mov and pop pop adc add cmpsl jb icebp add daa mov xchg mov jle out and xlat ja pop cli fs das out jae stos cmp adc test ljmp push jge sub sbb pushl sbb loopne sbb fldl jge adc push adc test ret mov add push cmpsb and dec push adc mov adc push scas xchg sbb out and negl dec inc fnstcw sub sub inc jbe mov dec push cmc ficom mov xchg jmp data16 add or inc inc or push adc mov and add mov lret inc or idivl scas inc je aam push jae or add mov pop stos dec xchg cmp push mov jle inc or (bad) in mov mov sbb inc pop inc adc jnp sti fisubr rcr stos xchg sbb mov dec cmp out loope add out pop out and sti inc dec adc ja push push mov xchg out push out xchg pusha mov (bad) push inc mov daa pop adc mov (bad) lock fildll daa std incl cmp push idivl and inc div lds lea adc inc movsb jmp inc adc sub jg jae xor cli ljmp mov jae or adc lods adc repz or call (bad) mov stos push inc ret cmp mov aad push xor mov cli adc add xor push and jo cmp and sbb out or sbb daa jecxz dec mov mov jp add dec or xor test mov and call pusha add push cltd fstpt inc in pop movsl lds data16 mov cmp cmp iret inc ret cmpl sbb sbb cld add pop popa subb pusha adc outsl push mov clc push pop jmp or jecxz addr16 cli das inc in pop out adc pop mov add int3 jge jmp sub fisttpl or (bad) xor cs adc loope add or push pop arpl push add jge js loopne mov add mov inc jb daa rclb fwait loop test fildl push cmp mov adc cli pushl cs sub adc cs inc jae fbld fadds push jo inc pushf (bad) subb and add pop inc add out popa cmp or (bad) pop mov lock jmp or cli ljmp adcl shl jmp nop sbb or pop mov xor add inc add fildll sub incl jae or push je (bad) pusha xor pop adc into dec xor adc inc push adc xchg (bad) mov cmp mov adc (bad) add test push sub call stos adc mov cli mov cmp adc xlat adc pop inc or cmp cmpsb jl inc js std mov lcall sarl lahf adc adc inc add add dec push pusha add out inc or sub and pop les lcall inc cmp lcall push or lret stos dec push rolb jo sbb pusha ds call cmp dec push rolb add cwtl add enter add add xchg mov dec sbb test push push addb inc or ljmp inc cli ds ret sub inc push adc xor pop mov inc or xor add hlt sub ja or rcl xchg xchg movl inc lock imul adc aaa and inc pop aas dec push nop add out cmp adc add or cli pushl ja adc test add dec lods cmpsl movsb push ret mov imul addb xchg pop xor push ja inc mov add jmp (bad) pop (bad) mov add push mov enter mov rcrl push cmp (bad) iret dec mov pop xor mov loopne pop adc jo adc in adc xlat adc jnp adc adc add cmp add mov add dec dec xor sub add imul daa hlt adc mov add fwait lock fldt add jnp (bad) and push outsl cmpsl sbb cwtl inc cli ljmp ret pop mov add push jnp inc xchg xor inc addb cmpsl or mov dec or out (bad) loopne xchg add rolb inc cli mov inc lret imul inc cmp cmp push mov ja inc cli enter mov sbbl mov cwtl or dec jmp push rorb pop dec or lea jecxz cmp loope stos inc pop add pop and nop pop in mov iret (bad) pop push dec add xchg add mov lock iret outsl jmp dec cli incl and add (bad) adc or inc aas xlat mov (bad) xchg pop xchg or out sbb mov mov or inc push inc add mov lahf sbb adc jmp loopne or jae pop mov stos inc les sbb dec cli fs xchg test mov mov add lcall adc sbb adc clc incb imul pop cmpb jno sub sti ret test lret sbbb push xor popa inc xchg push add mov inc bound jg cmp or dec cli call fadds fwait sets pushf outsl and (bad) dec or jmp pop mov aas add xchg lret cmp cmp or jmp jns inc cmp add movsb add add dec cli mov testl fdivs lret push adc (bad) push lret mov push adc or jg mov inc push jno mov mov dec xor in push cli jg xor push sub push dec fisttpl and push cli mov jmp add add lret rcll nop and fstl aas lret movsb adc sbb dec lret xchg or pusha arpl inc adc pop sub pop add inc inc add imul add add add pop dec inc pushf pop fstl outsl dec pop rol jne sbb pop jmp xor enter and enter xchg sbb or movsb push cli daa push in js mov adc or sub jecxz dec subb pop mov fs (bad) arpl arpl decl jns inc or push fsts mov cmpsl jg mov cli imul das mov insl pop pop xlat add bswap (bad) xor leave test cmpl sub adc sbb cmp mov das or sarl xlat jecxz pop cli mov ss pop push dec sbb ret nop cmp loopne or or sub sub add and pop cli xchg pushf xor jge repz and add xor (bad) icebp mov ljmp and mov cmp (bad) je outsb dec arpl jge out sbb cli jmp fbld and aam add cmp sub add dec or inc lret test push (bad) je inc scas cmpsl sub arpl dec pusha mov xchg inc je inc jb out adc gs sbb add addr16 adc mov or popa outsl fs push inc aas mov data16 pusha inc sbb call cmp add dec inc rcll mov mov add outsl dec inc or mov push or or jae add and inc or lret movsb or scas movsb pop pop or or pusha dec cmpsl cmp mov dec stos add lahf inc outsl inc push rolb popa addr16 pusha xchg popa jb mov mov lock ret (bad) addr16 or imul dec adc cld cmp stos dec push push pop adcl add je scas adc pop cli adc ret xor push pop adc stc cmp xor cmp jg add xor add pop and add fs test sub cmpsl mov sub mov add pop icebp add ja imul inc outsl sbb inc or mov or add mov inc push pusha pushf fbstp (bad) mov (bad) mov inc sbb push push testl mov xor xchg adc or cmp loop add inc cmp popf or lret adc cmp ret mov xor inc imul aas stos and add inc mov push pop pop push dec arpl addr16 add dec insb cli (bad) jl roll xchg nop or iret decl cwtl or xor stos fwait mov outsl cli cmp minps sahf movsb or dec dec or (bad) push dec nop ja stos mov mov pop popl adc mov push inc call adc pusha andb popf arpl inc xor fdivs mov sbb cmpsl jbe jo mov inc or iret sub scas add je clc push (bad) mov jmp iret jne push adc inc or inc or fistpll jo add test jmp push sbb inc xchg push jno les (bad) stc push mov dec inc je sbb gs push jb (bad) cmp loopne aas push jle inc adc test inc add (bad) pop sub add xchg pop pushl xrelease (bad) loopne jg push jnp xchg call es add jmp mov add jp das das fs addr16 inc sahf mov adc inc xor das jo add shrb scas inc aas inc lea mov lcall push adc popa pop enter add push add inc rclb clc sub cwtl add inc daa enter sub nop sahf jo add or push fwait dec addl mov inc daa add or xchg cmpl test xor aam jb xor jp add outsl push adc xchg ljmp push and popa and test es fcmovu inc xlat push (bad) testl inc adc xor pushf nop pop loopne inc or out mov mov mov pop add cli popf dec or adc and push addr16 xor outsl sti inc inc (bad) jo pop cmp mov dec xchg add cli fcomps add (bad) popa push add add pop jl pusha add shlb jp mov add loopne pop sbb xor daa mov jb sub loop adc sub adc inc aaa pushaw push push mov mov lock add cmp scas sub or add imul and sbb and insb rcll add push aaa jno inc daa daa repz cli push or das push add aaa pop mov inc rol je dec pusha aam sub adc or adc jae dec or sub mov add push push push adc jnp push les xor out loope aaa push lret and xchg add mov sub cmpl mov xchg inc add add dec cmpsb jl testl iret test mov jbe add outsb lods sub scas and inc insb sub pop inc xchg nop fisub mov xorb inc pop or outsl pusha add mov test mov sbb cmp cli pushl and nop out mov cmp jg pop or ret jmp mov (bad) mov out (bad) pop out outsl add push or add dec push xor cmp push add xor and sub dec or out add fcomip xor and lds or int3 mov dec dec adc dec or lock arpl cli add sbb loopne cli sub and lock fcoml stos ds jnp lods aas sub sub jnp add mov popa aas add xchg clc (bad) pusha push cmp sbb and and push scas inc jg lcall sbb sti clc cmp xlat hlt xchg inc rclb jmp sub jge fsubrs addr16 inc mov mov jnp lods fwait mov adc bound (bad) cli cmpsl rorl addl or (bad) dec aad (bad) sarb mov jae aaa adc jae movsl cmpsl nop sub int3 inc int jnp and or dec out loope or dec dec sub jecxz sbb adc and add jecxz lods (bad) xor and add add or mov aas imul or sub adc (bad) sti or daa add xor mov push inc negl adc or mov or icebp ja aam jae test jb sub pop inc push es push or push mov nop/reserved push roll (bad) jbe xor js stos daa inc or xor adc scas (bad) jno pop push sub push xor (bad) mov cli ljmp mov adc xor add call pop add xorl call inc mov decl std or sbb xor push es cmp push imul push (bad) xor push andb test sub or mov (bad) cmp mov adc push leave (bad) aad pop mov test sub inc das inc aad push mov xlat cmovo fistl pop mov adc adc pop adc jle push je pop adc xor adc adc sub cmp xor adc add push repz mov jmp das mov int3 sbb adc pop add ret outsl inc stos sub fdivrl dec aas pop sub out lock cmpsb push sub and xorl mov add cmpsl mov cli or push add sub scas nop add ljmp inc push and roll arpl mov dec or or push dec leave inc pop sbb add ret mov cwtl dec pop (bad) jb ss add xor inc scas push cwtl xchg test or mov ljmp cmpsb xchg incb inc add mov mov pushl sub sbb cmc mov xchg adc pusha mov xor mov xlat mov mov adc mov inc cli cmp cmp mov sti sub cmp and mov and lock jo xchg xchg inc mov das movsb and addl xchg les ret push mov inc push mov push add stos pop mov or and pop and xchg daa (bad) scas (bad) push mov (bad) mov sbb adc xchg inc inc inc xchg lea pop sbb pusha add inc push and (bad) mov xchg aam test cli jnp insb cmp and std addr16 xchg sti sbb sub mov add lahf repnz push es inc mov loopne daa inc xor cli ljmp xchg das mov or (bad) cmc adcl jo or nop or sbb dec (bad) sbb (bad) push mov push add jp dec mov jbe or inc hlt mov fs (bad) xor test xlat xor mov jecxz push add pop sti jo push (bad) adc dec pop xchg sbb sub pusha mov insl or jo or pop outsl call sbb add fs ret in sti dec pop and ds xor push sbb push (bad) cmpsl and cli incl add pop pop scas pop lds add push and shrl imul or gs cli hlt lds or push and leave sub nop and add add scas xchg popf or add outsl cmpsl xor adc loopne daa (bad) dec scas inc add and sub ret clc xor and xchg pop add inc (bad) xlat inc clts dec lahf das clc rorl and and cli decl mov adc ljmp inc scas mov in lahf ret loope jae sbb adc (bad) enter fstpt cmp test adc femms fildll xchg pop hlt xor in mov or jl mov aas sbb push fisttp jbe (bad) int3 sbb cmp add pusha scas mov sub adc orl add mulb aam gs mov (bad) incb and pushw sbb push pop testl aas int3 push inc cltd incb call push aas mov add jecxz pop or add or pop mov pop xlat pop adc (bad) sbb inc and xchg xchg pop adc rcll into in jae sbb nop inc loop dec inc push sub add mov shl pusha jg pop and push pop mov mov xor dec aas js and pop inc or adc jp inc adc lods mov adc shlb les inc or cvttps2pi sub mov test pusha add push xor push and incb add push cld or push nop rolb in mov push cli dec or push inc sarl push popa push add fs pop insb jbe cld popl or add (bad) cli lcall mov push xor dec in lea cmp (bad) and jge cwtl adc mov repz je das mov inc xor xor jl and or cwtl adc lret jae or add fsubrs pop cmpsb sbb pusha and jae and aaa jae adc xchg fsubs (bad) fdivl frstor xor dec js sbb sbb mov mov daa mov jnp daa add enter imul or jecxz lods into pusha dec jno adc dec pop in inc or lret out inc push inc jo xchg imul xchg jno fwait dec jne dec inc sbb push stos stos add add xor add test inc or dec push lods mov loopne add add (bad) mov out pop and sub and xlat pop das push xor push scas (bad) mov jne push inc push pop pop pusha and rolb add loopne jmp in and jae jnp dec push adc push insb pop dec inc jle (bad) adcl pop mov lret subb inc arpl inc lds outsb pop adc mov fdivs cmp stos dec dec fmuls cmp cwtl shl jae daa (bad) into je mov add add mov push sbb into mov gs cli cmpsl dec xor (bad) xor fdivrl pop pop insb lret cli repz aam sbb nop xor push dec dec adc aaa rcrb sbb xchg int3 cli jle mov pop pop xor mov push add inc or adc jge dec xor adc js (bad) pop adc pop jae xor je enter cmp stos nop adc lods adc push xchg enter mov adc (bad) cmp dec add (bad) dec or cmpsl testl addr16 xchg pusha aaa adc jne ss mov cwtl xor adc loope and cmp arpl stc or fwait or inc scas fsubrs jg pop cltd jo adc sub xchg dec push mov cmp imul ja dec jmp cmp aaa sbb inc sub and inc add xchg push rcll sbb rorb ja push add mov inc cmc jo pop pushf jo jmp lds outsl sbb cmc sbb dec insb inc push jo cmpsb mov inc push add adc jmp enter popf int3 adc dec or cmp add paddq cmp xchg jae add mov cmp stc dec sbb push inc inc outsb clc and addr16 xor cli decl loope and notl cmp cmpsl add add add dec popa push jae push push inc cld mov sar pop bound mov add adc daa shll add dec insl (bad) mov mov mov push rorb mov xchg into dec adc ret adc add jg outsl scas add cli jne cmpsb nop mov out and sbb into repnz or hlt pop sti pop aaa add sub jecxz das xor incl push push inc xlat add test add and addr16 push jo faddl pop adc inc sbb inc loopne inc sub dec push xor mov dec inc cmc dec or (bad) jb lret mov xor xlat adc aaa lret mov ret push stc lret adc jp aas daa adc adc sub jae adc loopne inc sbb pushw dec sti adc adc jae inc ljmp nop ljmp push add out inc rcrb jae aad stos or xchg sbbb mov lret adc mov pop inc sub or je iret add push pop adc movsl xor add push push out or pusha mov xchg add pop adc and add dec push sub xlat push lcall bswap jo add fsubrl sub adc imul les sbb push fcoms sub adc cli (bad) jbe orl loopne test adcl inc push es and cmc sbb xchg insb lahf xor rolb inc push push push sbb or or ret aad roll daa or xchg and jno mov jbe jecxz fstps aaa and cmp adc adc scas orl repnz sub sbb js and sub in bound cmp das ja iret daa lcall sbb ds lock pusha fdivs divl adc mov scas jnp sub push add aaa mov xlat inc arpl xchg mov add add jecxz or xchg jno rorl or sub dec inc push clc mov sbb cli push lret inc mov push pop daa or xor js xor mov cmp (bad) test jo lahf mov pop inc mov enter hlt adc add fistpl jo add inc pusha pop scas mov push cmp or or cmp aas sub mov jae jae scas enter adc out loopne add push adc cmp enter mov pushf jmp and sbb dec adc daa pushaw or sbb dec out adc out loop push xchg or add jo or push dec js sbb mov cmc inc xor mov (bad) iret dec bound inc call or test mov (bad) ss adcl sub in fs fadds pusha in cmp pusha xor push fsubr add in stos clc addl test pop xlat add jo std (bad) pop (bad) jae sbb and cmp jl lret movb cltd mov xor lahf add imul inc and and xchg shll and sbb pop inc lea movl in jp bound pop pop cmp cmc xchg loopne jmp fwait xchg arpl jnp shll inc pop pop push fldl push xor leave orb or fwait or pop and pop out ss or or xchg or outsl pcmpeqb insb ret inc js inc jl push xchg es and cmp scas addl scas pop movsb adcl inc mov push pop adc or push xor cmpsb inc dec inc push push fadds add sbbb mov xor add pop push pusha or mov push or insl sbb dec jle mov stos ret dec nop jecxz add test dec push ret movsb inc stos inc pop fldenv (bad) push pusha or and push pusha stc (bad) test rolb stc outsl or in adc add in adc add roll mull cmpsb and cmp inc std pop movsl nop cmovnp loope ds add inc or ret test push sub and pop std or out and and inc push and cli sub lds mull test or (bad) in lds add mov pop push mov push daa jle sbb adc (bad) mov add shrb pop add add add (bad) fucomp (bad) incl add stc pop add std pop add pop sar add neg ja add add add (bad) adc cmp cmp cmp pop add scas jmp add sub push inc out pop divl push pop nop mov push dec inc sti out jbe shrb nop arpl add mov sub dec xlat mov mov adc add inc test xor out or push insb (bad) xor roll xor aaa dec call add xor xor shll mov dec rcr push adc decl add add add add (bad) fldl pop mov add add add or imul adc (bad) jg add mov add add add add add add add sbb add (bad) (bad) (bad) incl and and and and and add jb addr16 add inc pop popa fs outsl outsb outsb arpl outsb adc jae outsl outsb jae pop outsw outsl aas enter gs push jb popa je out psubusb xor jne addr16 aaa inc fdivrs pop jb insl pop bound data16 sti adc popa insb insb bound imul je sbb sbb xor add popa je outsl data16 je or mov fs add push dec (bad) pcmpgtb je outsl jns push addr16 mov adc imul das in dec imulb jae fs gs outsl outsb sub mov xor test out sbb jb int3 leave or fisubr scas test add imul pavgw sub jb xor je pop jne gs (bad) cmp popa jo imul gs jae jo outsl jb mov ret xchg insb outsl outsl imul jecxz gs mov jne jne adc fldcw push gs stc adc jecxz pusha inc adc outsb pop xchg jae insb aam and pop outsl jo sbb lcall mov jo outsb imul inc ret dec jnp inc sbb jae popa jb mov or sbb and jo outsb xchg push push dec jl pop popa popl mov add jg icebp add cmp ltr adc add push aam mov lret (bad) pop mov and fs (bad) cmp (bad) hlt and imul sub add mov dec ja scas or push pushf adc adc xor and inc (bad) clc and std addl xchg add xor cli adc verw xor (bad) xor inc pop data16 mov mov imul sub dec cmpsb imul imul sub imul imul lcall outsb xchg mov (bad) imul dec fs imul cmpsb stc add lldt inc pop je imul pop fwait out xor and cmpsb imul imul cmpsb imul cmpsb imul (bad) adc verr dec pusha imul out cmpsb loop or add ds imul insb lcall and cmpsb imul imul into insl adc xchg add cmp imul imul push cmpsb imul jge pushf arpl into repz (bad) xor ljmp dec (bad) xor xor dec pop push xor (bad) xor nop mov dec sarl sbb dec idiv or repz dec (bad) xor cmp pop push jb mov stos mov enter xor fsub in idiv or je cmp add and xor push pop fs xor shrl (bad) nop pushf dec (bad) xor cmpsb mov (bad) into fdivs dec (bad) xor in hlt cld add cmovge xor add sbb ss xor (bad) xor push pusha push (bad) xor sarl xchg pushf cmpsb dec (bad) xor scas mov cmp xor testb fwait or (bad) imul add (bad) je pusha pop outsb jle mov (bad) rcr call xor adc xor (bad) xor dec pop data16 xor roll dec (bad) xor mov out adc mov (bad) (bad) jg pop add fs jae push outsl imul jb jbe insb gs (bad) jmp add jo inc arpl imul gs inc add test jg outsb push popa outsb outsl insl add mov push and addr16 popa jae add inc gs dec outsb outsw jb popa cli (bad) fistp push adc dec popa insl gs add xchg mov js movsl push add add fs arpl jne je imul adc gs mov lods or push outsl insb imul (bad) std arpl outsl arpl jae add and push gs dec gs jge fiadd push or push add push jne jb imul (bad) bound aas add je jb jg mov or str arpl jg pop std gs js gs dec add add add pop int3 lock imul dec bound pop hlt out and gs dec outsl testl add push mov or jo js jo inc lock outsl adcl add gs je inc jg jns xchg (bad) das test inc jbe outsb lea xor xchg or psadbw dec popa jb dec imul dec outsl inc outsl insl jo gs push in jg push outsl jb add fwait sbb lods movsb adc xorl lods adc xor inc mov insl popa jo xor (bad) lea push outsl outsl ja std ljmp insb jo xor popa jo push inc push je inc scas or jb je arpl push dec and pop (bad) icebp push jbe arpl outsb je outsl insb add add add fs add jb mov sub daa push imul jae gs or add lcall mov jae insb gs jne jo je je jb bound mov or push and and add jne push add arpl inc jge (bad) sbb dec mov gs add gs aas idivb sbb push jb jb add out jl jne jae jb add mov sbb outsl mov in insb (bad) push outsb jb mov push fcom je pop mov ja add icebp fadds (bad) adc jb pop mov adc leave adc cmp dec fs adc add int fildll adc add adc jb outsb insl out arpl out outsl push popa jb popa bound je ficoml push out popa outsb add adc lods arpl icebp adc and jns add sbb sbb inc add dec sbb add pop pop dec popa jae inc jb outsl jb add movq push popa fnop mov sbb push insb gs sub sbb jne imul adc (bad) mov lret sub xchg das cmp inc clc (bad) sbb bound dec data16 outsb scas ret jnp enter pop add pop jae add inc inc data16 mov je dec popa jae add push sbb pop lods add push pop xlat pop rcrb jae fs jne fs xchg (bad) hlt std jne add push pushf je push adc add jbe nop adc push fild add sti inc mov dec xor jle enter test jg fidivr and mov push gs jo sbb sbb addps ljmp xchg adc imul adc inc jns adc incl pop imul enter outsl bound dec gs outsl jb sbb mov cli inc js add add imul scas mov lock fs jo outsb pop fcomip (bad) aas or dec jae inc inc push dec gs fs jns gs or gs ja (bad) bound addr16 enter add popa jo push (bad) in jbe outsb fldl xor add bound clc dec add test in (bad) psubb insb outsl arpl add inc incl xor add dec outsl jbe mov add insb je cmp jmp (bad) push outsl push imul mov inc add aas sbb add imul psadbw (bad) jae xor movsb add xor cs jb mov pop xchg clc out add push gs notb inc add and out enter outsb mov adc push outsl jb dec xchg add add imul imul rcrb addb add adc iret psrlq bound pop outsb lret rclb outsb add or or sti jb popa imul imul insb gs push cs mov insl or and lock cmpsl mov add and je pop ret (bad) testl ja add push add jmp stc outsb int3 inc je insb dec jb sbb add pop or pop fdivs popa dec test add sbb daa das adc add push cwtl dec add sbb mov pusha and adc adc inc pop mov les inc outsl inc jns add dec or outsl imul pop or lock add pop popf sub notb adc inc loopne mov not sub (bad) sbb test aas inc insb popa jae adc dec je or lock jns shrb cmp mov jp orb sub push outsb push adc or jg cltd add insb gs mov cld psadbw add je push cmpsl add gs imul jb add insb jae dec outsl mov lods or add push lock or xor jns mov popa movsb add sbb and pop inc testb les ror add gs sbb xchg xchg sti imul or add imul fmuls or fmull dec pop imul fist dec add out test out pop movsb popa or out shlb add push push outsl inc sub or or inc xchg push add outsl cwtl cmp adc ret add add pop popa jb jbe pop pop fs outsb fstl mov add pop fs jb outsb jge ja in or popa (bad) jb jae cmp mov outsb jbe inc or outsb jbe adc sarl add insl bound jne pop insl popa xchg imul xor pop je add mov (bad) jne adc add pop jne popa arpl insb outsb add pop mov in str arpl xchg adc mov cld fsubs test sahf add fsubrl xchg (bad) mov pop arpl mov pop xor pop fildl pop outsb fs pand jg mov and adc testl jo outsb add jp aaa hlt add insl int3 add xor pop add jae fwait bound lock insl add or add roll fldcw lret daa in loop xchg xor pop outsl push push add inc test pop push dec mov and jo and outsb ja jb (bad) out pop push add (bad) or jo out outsb imul add outsl popa add and jmp inc sub add jae inc idivb jg add arpl add dec jg out jle sub xchg jb jbe les insl imul pop out add dec add aam (bad) lcall loopne insl sbb bound add je imul ret sarl add add aas add cmp scas inc add inc add repz xchg dec rol ja jne arpl dec pop jae out aaa loopne popa add pop jmp aas or fcompl popa add outsb add ja add insl je add outsl add jae outsl ja jb ja ja jae popa arpl jae jo adc (bad) popa insb arpl cmp mov insl add add gs arpl mov or sti (bad) stc jo add xchg xor xchg or add fwait add add add adc add add int3 sbb add mov pop in outsl add insb add mov jae mov jae vmovq popa add test testb sub jmp or xor jne (bad) outsb adc sub or jle outsl lret add into or iret or jl aas jne add add add add sahf fcmovnb (bad) incb hlt add arpl (bad) or sti or (bad) (bad) insl decb insl decl sbb fistpl add imul or or pop je je insl (bad) add jb (bad) mov addl dec dec jg in (bad) or inc outsl js add or aam add ja sbb rcr push dec imul js add pop push add xor push add add inc inc add ss add or imul xor push add mov outsl arpl or arpl inc or scas out pop inc jb insl add push pop add mov into jle outsl add je push adc add xchg loopne push (bad) addr16 pop lahf inc inc dec jae call out jg add add xchg bound loope in jmp add jae add push or sbb je loopne popa insl ficomp jns add gs xor roll or xchg add outsl (bad) jnp imulb add add sub add mov add add or add je idivl imulb dec cmpsb add jne outsl ja cmpsl add inc data16 add fildl jb,pn aas inc inc push inc push dec xor mov adc dec push dec dec push adc add xor xor gs dec inc push dec inc dec jnp add or jbe jb and cmpsl push push and std mov inc push sarl cmovne aas test lea mov add xor fs popa fwait jmp (bad) cltd test rcll adc nop mov jg mov dec add mov dec std subb adc jo (bad) fild push cld dec add push cltd add xchg in dec add push add add dec mov pop sbb pop int3 sbb add and jp test add pop jae jnp push jo aas mov and loopne or add add syscall pop fldcw push adc pop xor sbb popa pop inc ficoml insb out or add or call fnstenv sub das sbb out or inc push test paddusb dec sbb (bad) rcrb clc cmpsl sldt pop jae push add (bad) adc out seto aas int3 imul scas verw pop in imul add inc add add pushf mov sbb xchg repz pop sub into sub (bad) (bad) (bad) (bad) jmp mov add push push push push push sub cld aaa mov push push push mov adc scas jg push insl insl insl pop ret ret ret add out inc gs arpl aaa lahf xchg fisttpll nop out dec dec std add std xor popa mov gs xchg rcrb pop mov pop pop iret stos cld aas xchg test push push push lds pop push mov and mov out inc add (bad) pusha pusha pusha add and imul jb por sub dec and add aas sti push push push mov jge fwait and sub addb nop out sbb lahf fnstenv mov das cmp dec jmp sbb insb adc dec dec dec jecxz (bad) je xchg fistpll lea sbb sub sub jle bound sub xchg dec inc (bad) std or outsb adc fildl dec mov jl jl push (bad) inc sub or jg xchg mov outsl outsl outsl sub push scas add mov stos push (bad) ja add lods js js ret sbb rolb ja mov pop adc jnp or std sbb push push push test jg pop pop pop jno sub and sti add aas sbb pop adc es xor pop aas jo xchg ret sti add ja cmp add push js dec pop dec xchg decb add push push testb add incl adc mov mov ss ret mov or test loope or jbe incl lsl mov mov or mov scas and sub add ss pop mov (bad) lock jno popa mov cmpb mov mov or (bad) (bad) cmpsl add mov fldl jnp and add cmp insb pop xchg mov add fdivr fnstsw daa mov adc std add sti (bad) pop nop movsl xor mov pusha mov addr16 and pop fdivrs pop pop pop stos mov (bad) dec adc aas add sbb add bswap mov xadd mov ja add dec addl pop adc sbb add fisttp add jnp test add pop ret ja inc std add sarb adc (bad) mov mov or lret inc pusha outsl test mov jecxz dec add or ret xchg mov or mov imul push add orl ret mov mov adcl mov fsubs data16 sti xchg adc imul jo insb addb cmp and xor inc or ja xor add (bad) dec add sub popa mov and ret mov cmp dec xchg incl mull mov insb pop mov add (bad) sub dec rcll add movsl mov outsb and pop mov mov and ret inc ss cmp mov push jae dec daa inc mov or ss mov adc aas adc ret mov pusha test incl fild push outsb sub mov inc xchg mov xchg mov add jmp pop mov outsl mov insb fadd mov in lock (bad) decl jae stos imul or or pop imul movsb pop rcrl jmp imul punpcklbw incl ss xor pop popa ret mov and test xchg icebp and push test aaa loope cmp xchg std nopl inc add stc mov pusha inc jg addr16 sbb xor hlt mov inc idiv ret xchg (bad) stc pop jae dec fadds sbb pop ret mov dec pop add sbb cmpsl mov adc jne inc push out sbb sbb cli add add jnp and pop or addr16 cmp cld and pop mov adc pop mov nop cmpb jb pop test call (bad) adc add (bad) das mov mov movq ja or rorl adc sub decb adc mov jmp add repz dec push push xchg incl popa mov pop mov sub outsb push (bad) jne (bad) jg stos add mov add (bad) cmp (bad) or cmpsl or je inc dec xchg imul xor test and popf push test inc cmpsl pop xchg lcall xorl add xor push mov push push push movsl dec dec dec lds roll ret pop mov sbb das scas scas scas xor scas sti data16 dec pop aaa add inc sub xor lahf and imul xchg xchg xchg add push addr16 pop mov and cmp inc adc or push arpl adc add add jg push push push stos gs pop pop sbb outsl sbb pop repz (bad) pop bound adc negb mov packssdw and add cmp adc mov aaa dec jg add inc popa aas dec dec dec sti jg (bad) dec enter adc push (bad) xor subl ret sbb out or addr16 sbb jg sarb test mov pop lret mov out sbb fwait or (bad) enter mov mov (bad) lock add jo inc out add in xor add jp xor mov adc sbb jg dec std sbb arpl pop je aaa aas mov rolb movntps imul pop xor xchg outsl jg mov push add pop in inc ss mov push or lea testl add inc arpl pusha jg push lods xchg out or jnp idivb jne insl jmp add mov sbb ret iret push imul insb cmp push push test call jg mov xchg loopne adc xadd nop nop dec mov add popa dec pop addl mov addr16 fmulp inc pushl push ret jae addl ret push xor jg mov jg add subl test decb sbb cmpsl or xchg add mov movl pusha jnp cmp or orl fsin dec jg (bad) pop test push pusha pop addl decl mov adc inc ss or incb add jnp and xorl incb jge cli push sub push xchg cmp mov jnp pop or or subl sbb jg imul pop add jbe pop add stos test pusha outsl jg cmpsl cli cvttps2pi cmp addr16 and dec push popf adc hlt push and pop idivb or insb pushl add xchg pop ja mov add jg pop add dec xchg idivl sarb pop cmpsl in adc sbb jae sbb in aas mov ja pop jae sub incl xchg or jb and jo popa or sbb inc mov not xor pop push or jmp xlat xor adc repz ja xchg pusha and call pop scas subl mov ja in xor push js cmp je stos stos (bad) fwait mov pushf aaa daa in fstl mov jg movq dec cmp push sub pop mov xchg stos push and push cmpsl ret jg popa fs xchg or push movsb jmp mov lds in sbb sbb adc mov arpl add ret test stos pop stc add xor and pusha jmp bound das xchg sti xorl push push jne mov icebp inc and dec add out and xor adc mov decl xor dec mov push imul pcmpgtw jne nop aas out arpl fucomp pusha pop aas xchg cmp cmp sbb iret aas ss mov inc aas jne popa sbb push out pop (bad) add aas push push push gs mov jnp adc push in add aas jmp rcl xchg mov in (bad) jnp add incl sbb stos inc push aas repz scas fstpt pop hlt mov jle imul dec mov and imul incl jne xor lahf mov sub mov or scas (bad) pushl jne sti dec cmc out xor xchg add inc jnp inc sti mov cmp lret push (bad) aad or scas outsb pusha sbb mov (bad) push mov daa ret outsl fldl ja cmp add insl ljmp xlat jne push (bad) addr16 or adc pop sub pop add mov mov xor jmp into in push cmp add add add cmc or or add (bad) out mov add push add push or dec aad pop adc inc or fistpll (bad) push add stos popa into shlb add addr16 add add lcall add add imul ja ja imul dec or out leave out mov add xor xor bound out out mov add add add insl add popa das jns dec pop mov fstpt ja add insl pop xor add add xor lahf jmp xlat cmp imul xorl jae add dec inc pop add imul push add dec test sub push add pusha inc push jb jae xor xlat jne xor xor and dec and pop xlat jne insb dec outsl mov inc pop push lods add and sub (bad) out cmc xor add fcomi add or push stos popa insb (bad) cmp push jmp jnp cmp sbb gs cmp and outsl add adc mov out add mov add ret shll (bad) in cmpsb sub and jnp sbb adc push mov outsb cltd add lahf push hlt or insb and (bad) (bad) ljmp xor and arpl imul inc sub je outsb fs insb outsl outsb gs and jae aas or jae gs bound aas outsb jae and outsb cmp (bad) (bad) jmp gs popa jae insl imul je arpl cmp insl jbe,pn and insl popa outsb lahf int clc imul or sbbl je dec mov (bad) push xor cmp arpl imul adc jno bound push outsb faddl sbb sbb sti fwait sub insb and and dec outsb push fadd (bad) jbe imul das xor das push cmp xchg cmp das les cmp insb xchg mov imul mov cmp jg jnp jle outsl outsb adc and and in (bad) decl and insb outsl ja imul gs sub mov and jb dec jbe (bad) mov leave and (bad) incl gs push and cmp xor xor xor sub icebp jmp sub sub jb xor jge fs add decl xor cmp xor fs sub pushl xor xor xor cmp (bad) jg xor xor cmp sub sub sub cmp arpl xor xor ss cs jmp mov mov data16 arpl ss sub cmpsb xchg (bad) ljmp sub data16 and sub mov xor mov (bad) call cmp data16 popa xor sub sub sub jg sub xor popa cmp cld or xchg js das in pop bts dec das dec or add (bad) mov and sub xor xor dec xor jne jp jg (bad) (bad) (bad) decl ret xor cmp inc xor xor pop xor xor xor xor xor (bad) (bad) ljmp xor xor xor xorl xchg xor xor xor xor xor dec xor (bad) (bad) pushl xor xor xor xor xor xor xor xor xor sbb (bad) (bad) (bad) pushl test xor xor xor xor inc xor push xor (bad) (bad) (bad) (bad) jge mov mov mov mov xor pop ss ss ss xorb (bad) (bad) call ss out add and aaa push aaa mov idivl cmp push aas stos jb loop aas decb (bad) (bad) out out lret xchg xor push sahf xor icebp xor mov xchg aaa (bad) (bad) (bad) pushl xchg xchg cmp cmp cmp js xchg cmp cmp cmp (bad) out cmp cmp cmp fnstsw dec aas mov mov add cmp call test or xor xor xor xor (bad) (bad) (bad) mov jnp jbe xlat aaa mov cmp cmp cmp push cmp cmp mov xor lea andl xor (bad) (bad) dec xor xor xor xor cmp cmp mov sbb gs cmp lock xor ljmp sub outsl ss (bad) decl adc sbb aaa xorl aaa mov pushf cmp cmp cmp (bad) (bad) fnstsw insb int cmp jecxz add cmp cmp cmp cmp cmp cmp cmp std (bad) (bad) cmp sarl ds aas bound xchg xchg nop (bad) jmp inc jnp xor cld xor push sbb mov (bad) (bad) (bad) pushl int3 xor loop lock divl jbe jl sahf cmp cmp fs cmp cmp std fcomip cmp cmp sbb loopne inc ds adc (bad) (bad) ds ds fidivr repz aas xor ja mov out addr16 decl xor xor xor xor int cld (bad) pushl adc sub xor xor xor xor xor xor (bad) (bad) (bad) pushl xor xor test int in or ss ss in ss aaa lea mov (bad) pushl dec cmp inc cmp mov dec cmp cmp cmp in cmpl stos (bad) sbbl xorl cmp xor xor xor xor in xor xor bound int lcall xor mov sahf xor xor xor xor (bad) jg pushl xor mov ss ss ss decl repnz and cmp cmp cmp (bad) cmp mov int or (bad) (bad) (bad) cmp cmp cmp cmp inc cmp aad ljmp (bad) fnstsw jo pop aas addr16 jo jbe cmpb aas fbld rcrl jmp xor mov lret (bad) pushl xor xor xor inc xor xor xor xor data16 xor xor adc push and clc add pop aaa inc (bad) (bad) (bad) pushl outsb aaa jg std aaa push cmp cmp outsb cmp cmp cmp cmp cmp inc cmp (bad) (bad) cmp cmp cmp cmp cmp cmp cmp cmp aas cli (bad) (bad) cmp mov call ds add (bad) (bad) (bad) decl xor dec xor xor xor aaa clc cmp xor cmp cmp cmp add xor ljmp xchg xor cmp cmp cmp cmp cmp cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp mov add xor xor xor xor xor pop aaa sub mov aaa cmp aaa fs mov cwtl cmp jge cmp mov pusha cmp cmp outsl cmp cmp cmp (bad) in cmp (bad) (bad) (bad) decl lahf cmp mov cmp and sub cmp cmp sbb pop in (bad) (bad) (bad) incl xor xor xor xor xor xor xor xor cli decl dec xor xor xor xor out cli pushl xor xor xor xor xor xor jmp xor clc (bad) mov lds xchg scas ss ss add cs inc mov xorl aaa ret aaa out aaa add sub mov out mov outsl cmp cmp cmp ja cmp (bad) (bad) jmp cmp cmp pop cmp cmp cmp and cmp cmp cmp fsubs clc out mov ds ds ds add clc xor xor add mov push xor jge lahf (bad) lcall pop xor xor xor xor lahf xor (bad) jg popa jle test pushl add adc inc cmp int3 cmp cmp cmp (bad) fbstp cmp cmp cmp cmp cmp bound push test (bad) (bad) (bad) (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp loop jmp and lock outsl fnstcw repnz aas mov add (bad) (bad) mov xor xor push ret xor xor xor mov sti xor ljmp push xor xor outsl test cmp cmp cmp cmp cli jmp ds ds aas cltd aas mov add xor (bad) (bad) ljmp xor xor xchg xor xor xor scas cmp cmp cmp cmp cli (bad) lcall xchg daa cmp pop cmp jle xchg loop add and dec cmp in aad and fdivs loope jg pushl divb aas xor adc sbb (bad) cmp fstp push js (bad) cmp sub push cmp stos cmp cmp or hlt jg cmp inc cmp and aaa ds cmp (bad) ljmp ds sub aas cmpl aas les add cli mov adc xor dec (bad) lret xor xor push (bad) ljmp inc xor xor xor xor pop cmp loopne out sbb mov jo add outsl mov and cmpsl cmp popf pop xor mov mov and xor xor or pop mov aaa inc cmp cmp cmp cmp out incl cmpb cmp sarl cmp cmp (bad) (bad) jmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp decl cmp cmp cmp jne cmp cmp cmp cmp cmp cmp cmp cmp (bad) scas push cmp cmp cmp inc cmp jns lock cmpl cmp pop ds addb fcomip aaa add xor fcmovbe xchg lcall cmp cmp cmp mov mov mov cmp (bad) sbb aas sbb inc ds cmp xchg mov xlat pop jecxz cld sbb in ds aas add aas aaa xchg xor inc xor bound jb out cli xor xor xor xor xor xor ret (bad) fcomip xor xor pop nop xor xor xor xor xor xor xor xor (bad) (bad) jg xor mov aaa (bad) aaa call cmp cmp cmp cmp test rolb jge out add add sub pop adc jl ret pushl adc adc xor xor jge inc push xor sbb xor aas pop mov fdivl loop (bad) (bad) pushl cmc ss ss aaa jno mov xchg aaa lds into aaa jmp aaa and arpl (bad) pushl cmp (bad) cmp cmp cmp cmp cmp cmp cmp cld sbb cmp cmp xchg cmp mov or lock xor outsb cmp add cmp iret pop cmp aaa std lcall sub inc cmp js enter in cmp xchg cmp ffreep (bad) (bad) cmp cmp cmp cmp cmp cmp cmp ret cmp rol (bad) xor ds ds ds mov jle,pn decl aas fs lea sahf xchg icebp aas add push or push xor xor pushf xor mov pushf xor xor or xor mov pushf xor xor xor xor xor xor xor xor jae jnp xorl xor xor test xor xor and xor xor stos or sbb push fistpl xor xchg movsl ss shlb pushl adc inc aaa pop aaa outsb sbb sti and rolb xor clc cmp rorb push ror aas jnp loopne arpl outsb xor lock (bad) push lock add aas cmp (bad) fstp dec xchg adc sbb push aas pop xlat movsl aas lret aas idivb std aaa inc les adc add xor cmp inc xor jbe jge mov xchg xor xor xor xor sbb (bad) in outsl jns xor aaa std pop jl aam cmp cmp xor pop jg pushl and xor inc xor arpl jo scas xor sbb sub xchg jg xor inc loop (bad) jg xor xor xor xchg xor enter (bad) cmp jg pop ss ss imul inc fidivl loope push aaa or (bad) out clc cmp insl aaa je xchg aaa mov mov aaa add or dec cmp ja incl out cli jle mov cmp mov cmp cmp cmp cmp cmp mov cmp sbb cli jmp cmp adc sbb xor inc cmp mov mov jmp (bad) mov (bad) inc cmp cmp cmp cmp cmp cmp mov and push cmp cmp sti cmp (bad) pop dec ds ds ds sarl (bad) hlt ds xor inc aas dec mov jne (bad) cmp add pop sbb add or pop pusha xor xor xor xor xor xor push aas xor lcall loope xor xor sbb and sub push xor push (bad) cmp xor xor xor xor fisttp mov (bad) (bad) cmp xchg xor xor xor xor xor xor xor xor xor (bad) out clc mov repz xor pop and cmp inc xor mov mov xor sub add add fcomip fild xor mov (bad) aaa hlt aaa add hlt (bad) cmp cmp aaa cmp pop cmp xchg cmp jg cmp (bad) out inc add (bad) pushl inc sub xor jo repz decl jae xor lea movsb xor xor (bad) lcall add in cmp cmp add (bad) es (bad) jle xchg cmp jo add and add (bad) out push xor xor cmp cmp jno mov incl add (bad) xor cmp nop pop std or xor pop sarl icebp cmp mov imul mov push xor cmp adc aaa add outsl stos jb ljmp cmp add add jns jmp add adc xor xor scas (bad) dec xor fidivl pop ss ss ss ss mov add push cmp adc cmp cmp inc cmp pop mov sub popf cmp cmp scas (bad) (bad) incl xor xor xor pop xor xchg mov mov inc cli out loop (bad) xor xor xor xor xor mov sbb mov xor xor daa mov mov add push and mov ljmp sbb (bad) ljmp aaa (bad) aaa fwait aaa fstpt adc daa mov jecxz add cli mov lds out rolb add (bad) mov mov xchg rolb add jg xor xor xor jl xchg pushl leave xor xor xor xor test int (bad) ffreep xor int xor xor xor xor rcl das icebp xor xor xor xor sar jg xor xchg aad fdivl out pushl adc xor xor xor hlt (bad) (bad) fistpll xchg xor xor xor xor xor xor dec xor je sbbb ja mov les adc pop ss ss ss xchg (bad) pushl lock ss int3 ss ss or adc aaa imul aaa mov aaa les testl cmp popf push lret cmpb cmp cmp xlat ja dec cmp pop and cmp lock pop xor cmc cmp and (bad) movq (bad) (bad) cmp cmp cmp cmp cmp cmp cmp std (bad) ffreep cmp pop mov cmp cmp cmp cmp cmp jne ja xchg cmp shr icebp cmp (bad) adc cmp inc ds ds ds lret fistpll add sbb and inc mov ja test mov mov decl out xchg add dec orl xor jnp xchg ja aaa lock xor xor xor inc push xor xor in notb xor (bad) cmp push xor jo scas xor xor xor pop xor call movsl xor or das ds xor mov push xor xor xor pop call xor outsb jae aaa daa insl push aaa pop jnp sbb cli fwait mov fdivs fildll and mov lods cmp sti cmp cmp cmp outsl xor cmpsl cmp cmp cmp cmp insl cmp call mov cmp cmp push mov mov cmp cmp cmp cmp cmp cmp andl cmp cmp cmp jne push push mov push add push jnp mov jne xchg fidivrl loope push aas es aas adc mov aas test lcall lock addl and imul xor xor leave stc dec sub cmp sar (bad) jg xor xor xor xor sub dec xor pusha xor test std jg xor xor xor xor xor xor xchg inc push (bad) jg xor xor xor xor xor stc cmp lahf xor cmp sub xor jns xchg dec cmpsl out cmc xor test cmpsl fwait jle aaa sbb ss adc sub pop aaa test xchg (bad) lcall aaa cld aaa xor cmp dec cmp pusha cmp sarl loope fist xlat add arpl push test mov hlt aaa or in add rcll cmp hlt cmp cmp cmp cmp pushl cmpl or cmp cmp cmp cmp cmp push mov cmp pop loope cmp movsb cmp fistpll and xor inc jae,pt les sarb jecxz mov sbb and das loope aas arpl lcall pop xchg mov add mov pop (bad) lcall xchg xor xor xor xor xor xor arpl jo or xor xor xor xor xor xor xor arpl js mov test (bad) pushl (bad) xor xor xor xor pop xor xor xor xor xor adc dec xor loope xor xor fisttpll xor and movsb cmp xor sub fnop pushl cmp push imul (bad) fnstenv jecxz divl adc sbb cmp ffreep aaa inc adc cmp aaa in ret ja ret sbb sub inc cmp data16 bound imul jne pushf aas mov aas cmc aas decl adc xchg adc pop xor xor add cmpsb out clc mov inc ljmp xor lcall mov xor xor xor xor xor call fnsave inc xor push xor lea xchg xor lahf sbbl xor xor incl pop jae adc pop ss lods ss (bad) ss xchg add or popa aaa push aaa scas aaa mov ljmp pop cmp push xchg mov mov xchg fidivr hlt xchg pop xor inc cmp (bad) ljmp mov cmp cmp cmp cmp inc cmp pop cmp incl cmp cmp cmp cmp jbe mov xchg cmp call fdivrl call cmp cmp cmp cmp cmp cmp mov fistpll cmp cmp cmp aaa cmp mov test cmp and ds (bad) decl ds mov aas cmp dec aas push aas mov inc (bad) mov aas mov aas loop add add rcl pop aaa pop adc mov cmpsl xor imul jg ja push mov xor xor and sbb xor xor xor rcll pop add adc outsl lcall xor xor in repnz xor fnop pop cmpsl push xor out lock es sbb ss cltd cmpsb outsl aas push ja (bad) ss cmp push pop jnp mov stos inc or aaa mov sub std jg cmp cmp jnp (bad) (bad) (bad) pushl cmp cmp pop cmp cmp cmp cmp adc sbb cmp ffreep (bad) (bad) cmp cmp (bad) cmp xor pusha rcl (bad) (bad) cmp cmp cmp cmp push fbstp (bad) fnstsw out sbb and push aas imul shlb mov sarb loope stc aas jl add std pop je add inc xor xor cmc pushl pushl fdivl in xor xor xor jne jl xchg mov fdivs fild aaa xor xor (bad) imul (bad) jg xor fnsave repnz xor decl cmc xor xor xor xor xor xor xor lcall sbb xor xor (bad) sysexit and inc xor jg pushl xchg xor divl sbb arpl jno jnp xlat pushl xchg stos ss mov ss ss jmp aaa cmp lock mov int3 push sti push cmp ffreep sbb pop cmp test scas cmp lds pop cmp mov xchg cmp (bad) fistp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov sbb cmpsl cmp pop call cmp std pop cmp jno pushl mov cmp cmp cmp cmp cmp cmp aaa mov cmp in add sbb and sub pop jg,pt fdiv (bad) xchg xchg ds ds ds aas adc ds inc mov aas mov pop ja aas xchg aas fwait aas scas jmp aas clc and aaa aam mov xor mov negb pop xor cmc aaa xor bound mov imul xor xor jge xor clc pushl insl jg xchg xchg xor xor jnp xor mov xor lea cltd xor test xor xor xor jmp in int3 clc (bad) (bad) cmp repnz xor xor xor xor enter mov xor and cs stos push ss call clc fidiv in clc adc aaa cmp push aaa pop aaa js (bad) aaa test shrl popf cmp cmp cmp cmp cmp (bad) decl cmp cmp cmp cmp cmc movsl cmp cmp cmp cmp bound (bad) (bad) (bad) cmp iret cmp push xor dec outsl jbe,pt (bad) cmpsl ds aaa (bad) or sbb inc aas push jle cmpsl sub sbb add add pop xor cmp mov pushl mov jecxz ljmp xor fs xor xor xor xor (bad) pushl sub xor jns lea lods xor sub jne aaa and test push pop icebp and mov xor xor xor xor notl cmp push xor mov loop repz cmpsb lcall ss shlb aaa je jg aaa push aaa das aaa inc aaa add je pushl lock add cmp inc mov aas mov loope cmp cmp cmp cmp cmp push lea (bad) ffreep (bad) cmp cmp cmp cmp cmp mov insb cmp lcall rcrl pop out cmp cmp or out int fistpl pop je sbb cmp cmp cmp (bad) idivl cmp aas jno inc (bad) cmp xchg sub push cld (bad) fbstp jle test xor cmp aas jp cmp mov aas aam out cld or add scas push cmp add xor xor xor xor and sub cmp inc xor insb orl (bad) sbb ljmp xchg xor xor outsl mov mov mov subl xor xorl icebp xor xor (bad) or dec xor pshufw popf jg xor aaa lock std (bad) ss ss adc sbb aaa pop (bad) (bad) lcall aaa fidivl call cmp cmp cmp pop cmp jns mov ffreep cmp cmp cmp popa cmp xchg mov aaa lock cmp cmp cmp cmp dec dec cmp mov int3 cmp cmp std dec aaa xor inc stc fwait cmp lcall cmp dec cmp cmp cmp icebp outsl mov cmpsl pop cmp addr16 je mov mov cmp sbb dec ds ds cmp pop (bad) aas add inc xor push xor jnp (bad) outsl jg (bad) jg xor xor xor xor xor int xor xor xor cmp adc xor push cmp test or fsubrl (bad) (bad) (bad) in xor and das cmp pop ss ss ss xchg ss ss sbb push inc or xchg aaa stos adc cwtl call std aaa sbb rclb sarl fnstsw repnz and (bad) mov cmp cmp cmp cmp inc cmp jp push (bad) mov cmp cmp cmp sbbl cmp out adc xor cmp (bad) (bad) incl push cmp cmp cmp cmp cmp cmp cmp dec cmp jbe lcall mov repz add inc ds jle,pt or ds sarb adc ds lock lret cmp inc aas dec aas mov fdivrl in aas add add or adc push das push xor (bad) jg jnp xor xor xor xor xor js dec jne xor divl mov xor xor outsl (bad) xor xor (bad) (bad) decl mov xor xor imul xor xor jmp (bad) push pop xorl cli out outsl lds test cmpl jmp lcall jge jnp cmp cmp out ljmp idivb or push das cmp pop cmp hlt or cmp repz inc std inc nop add mull insl xor adc xor sbb xor pop (bad) out sbb fs shr xor xor xor xor xor xor sti (bad) call pop xor xor xor xor xor xor xor xor push mov decl xor loop out xor je decl ss ss ss aaa adc pop cmp aaa cmovns mov enter divl (bad) aaa or (bad) (bad) (bad) cmp cmp cmp cmp cmp jle test mov cli cmp cmp cmp cmp inc dec (bad) pushl pop cmp cmpl mov sarl cmp cmp sub hlt jg cmp test nop cmp (bad) xor or cmp cmpb cmp aad in negl or cmp cmp cmp cmp cmp mov adc sbb loop pushl sub inc xor push xor xorb xor sar jmp xor imul xor xor xor xor (bad) cmp sbb rdpmc push in xchg xor xor xor hlt jmp xor xor xor xor xor xor push (bad) or loopne ljmp xor insb dec std lcall xchg xor mov sbb sub cmp inc pcmpgtb aas push pushl outsb xorb mov ss lock iret cmp fdivl idiv cmp cmp cmp cmp cmp cmp mov mov std aam lret mov add inc and (bad) pushl xor test cltd xor sbb cmc xor xor xor xor ja xor ja xor xor xor xchg and sub pop xor ja std xor xor mov loop or and aam fidiv out aaa divb push cmp cmp cmp cmp push jp (bad) cmp cmp cmp mov cmp (bad) xor cmp lock mov push or cmp mov jmp push cmp push ds adc add (bad) inc mov aas push aas inc aas fs mov mov pop xlat xor xor fwait cli outsl dec mov call xor xorl outsl mov loope icebp xor test xor xor xor incl (bad) insb xor xor xor (bad) mov (bad) xor xor xor xor xor out ljmp popa xor xchg xor shrl icebp xor and xor inc dec popa ljmp lcall mov icebp add adc outsb loop cli and xor inc jecxz aaa sub mov cmp stos fwait lahf out sbb mov outsb push xor inc cmp jno xchg cmp loopne cmp ret icebp cmp cmp test popa cmp push xchg lret mov rol (bad) mov cmp inc cmp jno cmpl mov sarl adc and lcall push ds cmpl mov sarl loope,pt icebp ds mov aas add add insl ss ja (bad) decl aaa mov cmp xchg int3 cmp cmp decl cmp dec cmp cmp cmp sub inc cmp lods cmp add cmp cmp cmp cmp cmp sbb cmp or or out adc ljmp rcl add xor je rcr xchg xor pop sbb inc decl or xor xor xor inc aaa lock cli xor xor xor xor jne xchg xor jg xor xor xor xchg cmp int3 aaa sar call pushl sub cmp into cmp cmp cmp cmp cmp cld pushl xor adc and gs add lock push xor xor xor cmp std sbb xchg aaa repnz and imul cmp imul cmp je jnp mov cmp mov gs xchg rcrl pop mov adc test das jbe mov out gs adc or xor xor xor xor lock xor jge pushl fdivs pop cmp or sbb ret cmp roll leave cmp lock daa aas cwtl aas ret adc lret or xor call decl pushl mov sub dec xor in xchg jo mov repz xor cmc xor mov cwtl lds fsubr cmc adc xor (bad) jg cmc je jnp lret cmp cmp cmp cmp cmp lock cmp cmp pop mov cmp jns lods clc pop pushl ret ds aas push aas negb and push outsb (bad) and mov out shll mov xor xor xor xor xor xor xor push lcall mov lahf xor xor aaa sbb (bad) jmp aaa sbb je sub push cmp cmp cmp aas inc iret jns sbb scas push movsl aas sarb xlat lret add add das add lcall ss int3 ss jb xchg stos mov cli push pop mov aas setg cmpsb cmp leave cmp daa imul jecxz (bad) dec cmp cmp cmp sarl add jnp jae (bad) (bad) mov mov cwtl xor xor xor je and inc xchg cmp cmp cmp cmp lock cmp cmp cmp push and pop jmp sub inc aas dec aas mov push add xor (bad) (bad) decl push xor pop xor cmpsl xor adc cmp xor xor pop jne inc andl ss xorb lock aaa mov cmp mov cmp inc cmp (bad) add cmp cmp or je fdivrl jecxz adc fiadd pusha add xor (bad) mov loop ljmp xor xor xor cltd (bad) incl pushf cmp cmp outsb (bad) lcall mov cmp cmp cmp xor (bad) cmpsb aaa leave jno add out loopne loopne xor add pop xor xor mov xor outsl clc push mov cld add push xchg aaa in aaa test aaa and cmp cmp cmp cmp cmp cmp cmp ret mov cmp cmp lods adc aas in decl je (bad) xor xor xor xor xor lods xor sti fnsave in in mov xor jno cltd adc lods jae lods cmp cmp jg jmp icebp cmp inc cmp cmp cmp cmp push jg sbb lahf mov xchg ds aas push or (bad) xor nop add xor (bad) es pushf xor mov xor xor xor jne fdivl jecxz mov mov gs add call ss ss ss mov jg jg aaa lock dec cmp aad hlt cmp cmp pop (bad) (bad) aas push fistpll daa cmp imul add sub sbb xlat cmp push (bad) aaa test push popa jnp mov subl fist jb mov aas sub adc (bad) mov rolb xor xor xor xor (bad) mov pushf xor dec xor (bad) xor xor push daa xor xor fdivrl subl fild xor nop xor jecxz les cmc xor push ss ss scas aaa mov pop std ja xor nop cmp imul cmp xchg (bad) cmp leave cmp cmp jg ds inc cmp jecxz ds test fptan ja out out ds add xor xor je (bad) incl mov and lcall xor incl add xor xor xor xor test pushl jns repnz xor pop aaa jg sbb fstpl aaa ret int aaa loop or outsl cli outsl cli push cmp cmp cmp cmp cmp fucom cmp cmp bound xchg mov loopne scas sbb jmp ds adc xor cmp je jnp xchg imul (bad) dec dec rolb aas mov xor arpl xor or lcall xor lds test mov movsl jg pushl (bad) ss aaa inc cmp jb jns stos cmp cmp cmp ffreep ja cmp cmp inc cld cmp cmp sarl (bad) mov fdivrl pop imul xor jg (bad) pushl xor and cmp xor xor xor xor xor xor xor daa xor call xor dec ss ss xorl ss ss jmp lods test cmp cmp pop cmp cmp clc pop loopne cmp cmp dec cltd or sub mov cs nop cmp sbb cmp lcall adc jle inc xchg add ja xor xor xor xor jmp pop xor xor xor xor xor xor or xor imul ja xor insb ss lea xchg ss ss ffreep (bad) aas and xor ds dec aaa push aaa pop aaa gs insl mov cmp xorl sbb mov in cmp or push push xchg insb xor aas jle or (bad) aas ret aas lret aas in aas add add adc (bad) (bad) jg xor out xor xor xor xor dec xor or xor (bad) lahf call xor sbb jp (bad) xor scas imul pop ss ss ss (bad) (bad) jmp out aaa (bad) aaa xor dec cmp sarb cmp cmp cmp cmp (bad) out call jmp cmp ljmp aas mov add ret cmp je jge jg fistpll out cmp xor xor xor xor xor sbb push xlat jbe jle mov (bad) pushl add and xor xor xor mov (bad) ss fdivrl jecxz add cmp incl xlat cmp dec xor cmpsb cmp add pop cmp (bad) (bad) (bad) cmp mov and cmp jl,pt mov xchg les lret ds and stc push push or adc pop xor xor aad fst xor push xor aaa fcompl xor movsl inc xor xchg int les xlat inc jg pushl loop in ss ss aaa push (bad) xchg aaa popf aaa sbb and arpl mov xchg cmpl inc (bad) hlt cmp cmp insl outsb cmp mov negl jmp mov arpl test add push (bad) (bad) incl jle test or adc push xor xor xor xor jg aaa cmc xor xor xor pushf mov xor or sbb sub les push in (bad) decl cmp cmp cmp cmp jno (bad) cmp cmp cmpsl or cltd repz cmp cmp cmp (bad) mov dec cmp sarb jmp andl xor loop mov aas loopne xor pop and xor and mov pop xor jle aas xor xor xor jl xorl xor or push ss ss (bad) out loop aaa arpl xchg cmp test cld cmp push cmp mov sarb clc (bad) out and and ja adc gs mov outsl or cvttps2pi xor jne xor ffreep adc inc xor jl xorl lret cmp xor xor xor xor mov jmp aaa sub inc aaa dec aaa xchg aaa fwait aaa cld aaa push cmp cmp cmp mov and fnstsw mov cmp jns pop sub cmp aaa cmp cmpsl loopne mov lods cmp aas int push push fild lds add xor xor adc (bad) jg xor cmp bound imul lret xor xor pop xor push (bad) lea mov leave xor mov icebp pushl enter call cmp cmp cmp sbb (bad) (bad) (bad) cmp cmp dec cmp cmp cmp cmp cmp jle mov xlat mov xlat cmp push dec cmp cmp ja sbb jo mov cmp aaa sub ds ds ds ret pop dec pop flds push mov pusha push push cmp push xor cld jg xor xor xor sar (bad) xor cmpsl xor xor xor xor xor or sub xor xor xor push add pushl xor xor adc ss addr16 (bad) incl sbb inc aaa insl pop cmp sarl fdivrs add add out cmp inc flds mov xor xor xor xor sub ds xor xor xor xor xor shrl cld aaa (bad) hlt arpl bound jno ja mov pushl add cmp lds cmp cmp cmp or inc inc lea xchg cmp lret pop (bad) cmc (bad) cmp cmp cmp push cmp push (bad) outsl call cmp cmp cmp cmp adc and pop mov ds aas pop aas jg mov pop cmove outsl xor xor xor xor xor xor and outsl leave fdivrs jecxz in cmp popa sbb push mov xor imul jl push fdivl xor xchg (bad) xor xorb hlt call aaa out cmp outsl lcall cmp outsl push cmp cmp cmp outsl sti lea pushf cmp cmp pop cmp cmp cmp cmp cmp and (bad) (bad) ljmp adc jnp mov mov (bad) cmp enter and pop loopne cli daa aas dec aas push sub aas add cli ljmp xor jl xorl xor xor rcll jmp insb xor xor xor xor mov xchg xor mov sub dec ss xchg int (bad) (bad) fild aaa push aaa jne lcall cmp cmp js popf cmp insl std add fbstp cmp mov pop inc ja fistpll stos cmp cmp cmp mov cmp fcos (bad) jg cmp cmp cmp cmp cmp cmp mov ds xchg (bad) cmp jecxz out cmp xor jb,pt cwtl ds ds mov xchg inc inc aas dec aas insl aas jl fwait int and clc leave aas fdivrs (bad) lret mov add add and xor push xor lea test lds xlat xor xor xor xor popa xor test ds int repz pop xor mov dec xor jnp lea lahf xor xor (bad) (bad) decl xor xor xor xor xor xor xor xor mov ja lock jne std aaa adc aam cld cmp cmp cmp (bad) cmp cmp xor (bad) cmp xchg cmp cmp cmp cmp fildl (bad) mov mov lcall ds orl mov xchg jne aas repz push add mov xor jae xchg xor xor xor xor dec loopne (bad) xor mov test xor rcrb push or pop std (bad) jns xor or pop (bad) pop ja adc and bound call cmp push lcall cmp cmp cmp cmp mov imull out ljmp jbe loopne out call imul pop xor xor xor xor xor sar (bad) xor cmpsb ss or jae movsl aaa adc xor in cmp (bad) cmp (bad) (bad) jg cmp cmp cmp cmp cmp cmp cmp cmp sarl xor es sub cmp dec aas popa aas addr16 int3 pop push decl xor mov xor xor (bad) pushl and xchg xor xor xor mov or xor rol aaa add mov jo sbb add ss aaa add cmp hlt decl cld cmp cmp cmp out daa push aaa ffree (bad) sbb jnp cmpsb adc xor sub rol pushl xor les xor (bad) stc mov cld ja pushl and sub xor dec cmc js (bad) ss jb jns std decl aaa xor cmp rorb fs sub inc roll pop mov cmp cmp cmp repnz xor cmc cmp xchg jne add push (bad) fild loop or test lahf xor (bad) clc out loopne cwtl xchg mov mov xor xor add xor aas xor pop xor push pop (bad) jg xor xor xor xor xor cmp shrl sub mov insb xor (bad) decl mov xor cmp xor xor xor xor popa rcl (bad) pushl xlat xor dec ss imul jae (bad) (bad) (bad) (bad) and xchg cmpsb aaa ret aaa loop or and push cmp cmp jg loope xor pushl cmp fnstcw adc arpl test iret cli jg ja add adc jmp xor xor fdivl add scas sbb in jmp add sbb xor decl (bad) test xor dec mov out pop arpl js mov jne aaa mov xchg scas (bad) lcall inc mov je sub jge adc cmp call and outsl inc lods xorl fwait xor cmp xor xor xor xor xor xor xor xor xor xor push xor outsb xor test mov xchg xor xor xor mov xor xor pop out loopne rolb pop xor cli cmpsb lds das fwait ljmp lods mov mov ss ss incl (bad) sub pop aaa jge fisubrl add sub pop cmp mov add or aad fwait lahf inc cmp cmp cmc dec cmp ja (bad) cmp and cmp inc ds movsl or push aas mov pop mov sti xor xor nop xor xor es out mov push xor xor xor sbbl mov aad mov cmp cmp cmp dec cmp dec mov cmp cmp cmp clc lock fnstsw cmp out cmp fs inc pop incl xor popf int in xor xor xor cmp mov ret xor lret cmp (bad) incl and cmp cmp cmp jb lahf sarl ffree lahf std loop jb add add (bad) xor fcomip or xor xchg xor xor jns (bad) jg je mov xor xor ret ss aaa aas cmp cmp lock cmp cmp rcll cmp cmp (bad) (bad) sub xchg sbb das ds ds ds pusha jg pop rolb add mov xor xor xor lcall xor in cmp cmp sahf cmp cmp cmp cmp out mov cmp cmp hlt cmp aam mov (bad) mov fnstenv aaa cmp cmp lret ss (bad) out cli in add arpl or cmp insb cmp cmp cmp lcall divl test lret lods scas addb mov clc aad loop cmc cmpsl inc xor jno stos xor pushf xor xor mov aas xor xchg cltd stc xor mov test out sbb cmp pop mov cmp cmp cmp xor mov fwait clc es cmp xor inc aas push aas pop cli out loopne pop jbe jnp xorl cmp dec xor xor xor ja adc sub mov xor popa xor jns (bad) xor out testl call inc xor xor xor xor xor fwait clc xchg push aaa jg divl push addr16 cmp data16 cmpb cmp nop cmp cmp cmp cmp mov cmp or es mov sbb cmp cmp cmp cmc pop sarl cmp cmp cmp cmp add pop (bad) (bad) cmp sbb cmp pop cmp xchg shll mov aaa xor xor xor xor xor jnp mov xchg xor pushl jno pop xor xor xor push xchg loopne cli cmp cmp popf mov cmp cmp in call cmp cwtl clc outsl stos aas (bad) iret cmp lock cmc pop arpl xlat mov aas push aas pop incl inc cmpxchg (bad) cmpsl xor jb icebp (bad) (bad) jg xor xor cmp push cmp push jae test les loopne hlt cmp or in jecxz fnop lock cmp sarl shll jb jnp lahf cmp cmp aaa je pop out int cmp std sbb rorl cmp test cmp cmp cmp jg decl frstor cmp and cmp cmp cmp jl adc cmp push cmp jne add pop add (bad) (bad) pushl pop jp lcall xor xor adc sbb xor jg pop ja adc cmpsl xor xor push inc mov out xor xor xor xor xor out xor xor call pop cmp xor cmp xor cmc fnop ss testl adc adc aaa xor inc aaa push aaa pop aaa insl aaa jbe test xchg aaa test aaa out (bad) jg pushl push cmp cmp mov faddl sbb inc cmp pop cmp std aaa aad cmp cmp mov cmp (bad) (bad) (bad) (bad) sbb insb cmp xchg cmp ret cmp pop ds into js (bad) xor push ds call sbb mov jg xor xor xor dec xor mov xor mov xor xor xor xor sbb xor xor xor dec xor mov mov repz or lcall jg cmp lret xor jg (bad) xchg leave jmp xor pushl fidiv icebp fcoml pushl adc sub sub xor dec add mov or aaa in lea mov data16 insb aas jbe xchg cmpsl scas aas leave aas rolb lock lret loop add loopne (bad) jo call ss aaa pop aaa mov aas sub outsb pushl cld dec inc mov cmp insb cmp cmp cmp jg dec std cmp cmp jp mov cmp cmp rcl aad jp mov cmp cmp push inc jge arpl idiv or cmp pop cmp test mov aaa cmc (bad) (bad) cmp sbb sub cmp jnp,pt mov cmpsl imul fmul or xchg push jno push cld (bad) aas cmpl mov sarl aas loope pop (bad) (bad) call ret add adc and xchg xor xor xor xor xor push xchg int add xor mov lcall xchg xor xor xor dec cmp es cmp cmp hlt jg ja repz lcall ds ds aas mov mov or (bad) xor xorl outsl call xor cltd xor xor xor xchg jno xorl xchg xor cmp jo (bad) aaa mov out xor xchg cmp cmp add add cmp (bad) jmp sub xor push aaa jle mov cmp mov cmp cmp sarb mov ds add or xor cmp inc aas dec aas push aas pop aas outsl aas add or (bad) (bad) mov xor xor cmp cmp cmp cmp nop aas add sbb mov xor xor clc das call cmp add fild call xchg xor xor imul (bad) adc push cmp push or xor (bad) jg dec out mov cmp fstpt loopne push cmp or hlt (bad) cmp dec cmp cmp cmp cmp mov test leave pusha or xor (bad) movsb xor out ds inc ss xchg mov std cmp cmp loop jecxz cmp out cmp fs cmp adc fcoml pop ds fdivrs dec aas dec aas mov jne or xor (bad) cmp stos xor pushf xor jecxz cmp cmp insl cmp cmp lahf cmp aas sub cmpsb scas (bad) mov incb mov xor arpl xor aam and aaa (bad) xchg cmp arpl mov aam pxor adc cmp lea add adc mov aaa add cmp cmp push daa insl xchg cmp cmp cmp out scas popf ds cmp jge add ja mov xor pop and (bad) pushl or push cmp cmp cmp cmp push aas add jg aam add mov pushl es ss inc (bad) decl aaa pop aaa jno (bad) aaa xchg fwait (bad) aaa jmp cld aaa add or sbb cmp pushl pop decl cmp cmp (bad) (bad) cmp cmp cmp push cmp cmp cmp cmp xchg out bound cmp cmp pop cmp push (bad) (bad) jg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp out cli test loopne lock cmp cmp fwait cmp cmp int3 out in repz adc mov xchg cmp add or cwtl add push xor arpl loop test xor pop add xor xor cmpsb outsb das imul out xor xor xor xor xor pop xor jnp stc dec xchg ja xor pop outsb xor xor xor xchg xor xor xor ret jno jg test xor (bad) mov xor pop add and xorl sub jae cmp rolb aaa mov inc mov ljmp xor xor xor xor std push xor in sbb dec cmp add add pop lock cmp mov pushf xor xor xor xor inc xor mov mov jg pusha loopne xor or dec ss decl (bad) cmp cmp cmp cmp lock mov cmp ljmp repz or jge cld push xor xor xor xor xor xor xor sbb and sub (bad) incl pop loop in xor xor xor arpl xchg xor xor xor xor ja je xor xor xor xor ret xor and sub hlt jg ss aas mov inc aaa mov mov pop cli cmp (bad) (bad) (bad) cmp cmp cmp cmp lds fnstsw or sub bound mov hlt (bad) cmp cmp cmp cmp cmp cmp (bad) push cmp cmp cmp cmp cmp or in cmp cmp cmp inc cmp (bad) inc pop pushl pushf cmp sub xor icebp pushl rolb test aas sub xor inc aas js ffreep ja cmpsl aas mov mov aas out cmp add adc or xor xor ja std jg xor xor xor pusha xor sti xor cld fist inc gs jle test mov mov cltd xor push (bad) xor xor xor xor xor push xor arpl imul xchg xchg aaa cmpsl aaa (bad) aaa jmp cmp cmp cmp ret (bad) cmp cmp daa cmp sbb add or cs fdivp xor dec das (bad) cmp xor cmpl pop cmp inc or xor lahf gs xor jmp aad push xor xor xor xor xor sbb ss clc cmp add add adc dec std pushl bound iret xor xor xor aaa dec aaa pop lahf xorl les adc aaa loope in aaa pop dec pop popf fild jg cmp insl cmp andb cmp jge jg cmp cmp cmp cmp jne cmp hlt (bad) sbb mov (bad) pushl dec inc xor xor xor xor xor cmc ss ja fistp cmp cmp cmp cmp arpl cmp cmp cmp cmp cmp lret hlt cmp cmp outsl dec cmp pop cmp mov (bad) cmc xchg cmp xchg (bad) cmpsb mov lret cmp cmp cmp aad lcall adc sbb and sub xor inc mov cmp mov jp (bad) cmp cmp js (bad) mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp imul cmp (bad) (bad) incl cmp cmp cmp cmp cmp cmp cmp pop (bad) out cli incl dec cmp cmp cmp cmp cmp pop jbe cmpl cmp xchg cmp repz aas enter mov stos jo add (bad) incl arpl xor xor xor xor pop mov out xor xor xor xor xor xor xchg xor out ljmp xor loopne cmc aaa call aaa adc and mov cmp cmp cmp cmp ljmp mov mov cmp jg mov sti sub outsl daa adc sbb push jne mov std cmp (bad) out call cmp cmp cmp mov int fdivrl outsl mov cmp inc ds js,pt mov call fnstcw aas (bad) aas mov sbb xor dec fadd xor mov cltd xor jmp xor xor imul xor xor and xor cmp xor xor xor xor push push pushl xor xor xor sub jne mov pushl lds (bad) ss ss cmpsb aaa loop inc cmp cmp or cmp cmp cmp imul jge mov fnstsw push cmp mov es cmc ffreep or int cmp cmp cmp cmp je pusha (bad) ds aas jae mov add (bad) push mov into xor xor insl rorl cmpsb xor xor xor xor fidivl out sbb ljmp aaa lods aaa mov pop mov loop cmp cmp cmp cmp cmp cmp (bad) out clc mov mov cmp cmp cmp jno,pt movsl add sub jbe mov (bad) xor xor xor xor xor outsl call xor xor xor xor or jbe cli mov mov fnsave or xor fs ss mov aaa lahf cmp sbb cmp cmp cmp cmp cmp decl cmp jo ret cmp cmp cmp jle adc mov fidivl test (bad) divl cmp mov cmpsl ss ss out cmp int3 cmp jg and cmp cmp stc ds roll lahf mov fnsave push add (bad) aas js mov xor xor xor push neg adc xor xor xor xor mov dec cmp sbb jg pushf cmp lahf ds bndstx or incl (bad) pop das xor xor out xor jl rdpmc sub jg test xor negl cmp out iret cmp mov cmp cmp cmp cmp cmp or out loopne cmpsb pop jnp xchg cmp cmp cmp fwait cmp push (bad) int3 cmp repnz or (bad) mov dec jmp in sub xor scas lcall lds in xor xor inc fldcw sub dec xor xor xor fcoml or shlb divl lcall arpl mov mov and mov xor xor cmp cmpsl cmp rcrl cmp cmp pop push cmp lods jae add or (bad) aas push ret nop xor xor rcll pop adc add ja pop xor xor xor lock mov cmp fcomip inc std aas push aas add inc xor dec pop dec xor fnop pushl adc in idivl cmp push cmp lahf dec fwait stos cmpsl ljmp or fistpll mov xor mov sahf daa (bad) pop inc enter add cli cmpsb mov lahf cmp fadd fist hlt cmp (bad) adc cmp cmp dec cmp je jg or cmp jg sub cmp cmp cmp cmp or push cmp cmp cmp cmp jae cmp sub cs sbb cmp or mov aad call xor or pop cmp mov iret out cmp cmp cmp cmp cmp cmp ds je,pt test sub cmp push push aas fs mov loopne push xchg mov xor xor push cmp cmp push (bad) fistpll loopne ljmp aas sbb and add or jg arpl rcll xor xor inc xor push xor out clc aaa mov mov sarb cmc add rolb out call inc xor pop xor mov inc es inc loopne stos cmp pop (bad) lds push aas push aas mov jno aas jmp add lock xor xor jg rcrl cmc xor lock xor xor aaa mov (bad) (bad) dec jmp cmp cmp cmp mov aas xor aas push aas popa out bound imul mov insl ljmp incl xor xor xor push xor (bad) out aas sti inc adc inc cmp cmp cmp push inc ds ds cli mov inc aas sarb fldenv and aas add xor xor aaa aaa (bad) lcall xor popa cmp cmp cmp cmp cmp es aam ds arpl ret xchg add (bad) xor cmpb cli mov (bad) cmp cmp cmp cmp add ja mov xchg sub jmp xor jbe jge mov cmc fild aaa ja cmp cmp cmp cmp mov mov mov decl cld xor xor mov xor cmc (bad) pushl bound cmpsl cmp cmp cmp cmp cmp mov sbb dec cld or cmp cmp mov cmp adc add cmp cmp cmp ja cwtl scas xlat mov pop aas sub inc aas addr16 xchg aas mov sbb adcl or incl xor inc xor popa mov clc (bad) loop cmp inc cmp cmpb cmp xchg test scas cmp lcall cmp icebp cmp cmp cmp mov cmp movsl and sbb aas repz cli testl inc sbb pop xor xor xor push adc (bad) cmp cmp pop pop call xchg fistl cld ljmp aaa xchg aaa test (bad) aaa inc lock xchg jno xchg xchg xor xor xor ljmp sub xor xor xor xor xor xor xor (bad) xchg push mov aaa adc mov addr16 ljmp cmp cmp (bad) (bad) jg add xor xor xor xor divb cmp lcall add pusha cmp cmp cmp sbb adc push jge shlb xor daa (bad) xor xor xor adc loope xor std (bad) lcall xor xor xor xor xor xor pusha xor jnp mov movsl xor or jg pushl xor xor ss or xor jg (bad) jg xor xor cmp cmp inc xor cmp xor add xor xor xor xor fucomip xor xor xor xor sbb clc or add or fwait push push xor pusha xchg push subl js jl and sub xor (bad) out (bad) (bad) cld xor xor or adc and sub xor cmpsb (bad) cmp call cmp cmp cmp sbb add or or adc sbb sbb and loopne mov mov aas lock hlt aas clc pop jg scas loop or addl add pop adc adc stos psubq sbb sbb xlat pusha xor loopne out loopne incb xor xor xor pop adc and mov xor xorb xor xor xor cmp clc cs mov xor dec add (bad) (bad) call xor xor xor xor xor xor xor xor xor xor xor dec loopne sub sub inc sbb adc fdivs fsubrl pop pop aaa std add or lock imul inc xor dec cmpsl push xor pop (bad) lcall lods fs insb xor je js jl xor xor cmp cmp cld fcomip ss ss xchg dec ss ss ss ss ss lds jge pushl insb ss je js xorb mov ss ja (bad) pushl cwtl ss mov lods ss mov mov ss (bad) ss ss ss xchg test mov cmp cmp cmp mov sbb cs mov cmp mov fcomps cli cmpsb in in cmp cmp adc adc push out loop sbb and cmp cmp sub cmp inc cmp cmp sbb loopne mov cmp cmp cmp cmp cmp or aaa xor xor dec cmp cmp cmp cmp push or xor ret or jno xor xor ja lock hlt xor xor xor xor xor xor fcomip or sbb (bad) and sub xchg xor cmp ret ffreep or fistl push xor xor cmpsl jl aaa jl xor xor lods je js jl test xor xor mov pushf mov lods (bad) loope pop enter aam fdivs xor xor xor xor call sbb hlt xor xor cmp inc xor (bad) (bad) pushl push xor pusha xor insb xor js jl xorb (bad) pushl xchg xor mov xor mov mov cmp (bad) (bad) cmp cmp cmp cmp cmp cmp ja fisttp cmp cmp mov mov add cmp cmp cmp cmp cmp cmp cmp mov sub xor xor cmp dec cmp cmp cmp jns cmp jo js jg xchg cmp cmp cmp cmp cmp add adc loopne in call ss ss inc cmp (bad) decl dec cmp pop cmp fs cli ljmp js jl cmpb cmp cwtl daa mov jmp mov mov mov cmp int3 cmp fdivrs (bad) decl or pop ds ds sarb ds sarb (bad) cmpsb (bad) call fdivrs fdivrl loopne in call imul dec cli mov fwait pusha xor xor push out imul xor scas out cli les enter aam fdivs fcompl fucomi push stos in arpl loope imul lock adc adc sbb sbb and sub and aas lret xor and cwtl mov arpl adc push roll in cmp xchg and push push movsb pop mov movsb iret mov (bad) inc push (bad) (bad) aam in sub cmp dec and pop pushl pop aaa push (bad) mov mov mov scas cld cmp (bad) (bad) mov cmp xor cmp inc cmp cmp cmp sarb cmp cmp cmp cmp cmp cmp cmp cmp mov pop add cwtl xor (bad) ljmp xor (bad) xor xor xor sbb clc xor xor xor or or sub ffreep sbb and sub sub xor cmp cmp and xor std mov nop xor mov xor (bad) mov (bad) xor xor xor xor xor xor in push out call lock out mov or or adc adc sbb and sub clc cmp xor xlat inc xor xor test pop out xor xor clc es jl test mov mov lret sbb mov pop sbb xor nop stos cwtl jl ffreep xor lods xorl les sbb pop adc std (bad) xor (bad) (bad) fisttp fdivs in call xor cld xor or loop pushl or adc adc sbb sbb and and sub sub and and (bad) decl cld add add or or adc adc sbb sbb and and mov aaa xor cmp inc aaa inc mov fwait mov xchg pop aaa pusha aaa fs insb aaa jo je ds mov test mov mov nop aaa xchg aaa cwtl lea lods aaa mov mov mov aaa les enter (bad) aaa aam fdivs (bad) (bad) (bad) (bad) fdivl loopne in call aaa hlt aaa clc aaa cld aaa add add or or adc adc sbb cmpsb lcall and sub sub xor xor cmp (bad) decl inc cmp dec cmp cmp cmp cmp cmp cmp cmp cmp cmp (bad) (bad) (bad) (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and (bad) (bad) (bad) cmp sub sub xor xor cmp cmp inc cmp cmp cmp cmp (bad) (bad) (bad) (bad) cmp cmp cmp cmp cmp nop cmp mov cmp push in call adc hlt or cmp (bad) (bad) (bad) jg js jl cmpb mov cmp cmp cmp cmp cmp cmp cmp cmp cmp (bad) (bad) pushl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp (bad) (bad) push cmp cmp cmp cmp cmp or adc sbb and sub adcl cld xor daa fistl (bad) jmp push aas test mov cwtl aas mov cmc jg aas les sarb fdivrs loopne in jg aas add cltd or lahf fwait jmp xlat jmp xchg (bad) mov xor aam mov and and ja xor (bad) aad imul movsb lcall (bad) xor pop xchg js and xor dec and adc push sub scas pop cmpsl daa pushl mov jp push (bad) xor aas loopne in shll inc xor xor sub xor push mov pusha xor pop xorb xor push xor pop xor aam lock xlat add aad pop stos cmpsl mov jecxz fcmovnbe shlb lret outsb mov and xor cmp push aaa pop jecxz lcall cwtl aaa mov xchg mov jecxz or and (bad) mov pushf fcmovnb lret fcomps cmc or cmp call sub cmp push mov or shll mov and scas icebp call andl insb cmp cmp cmp mov (bad) (bad) (bad) (bad) call cmp cld cmp or or adc adc sbb sbb and sar (bad) jmp sub sub xor xor cmp cmp inc ds ds ds ds ds ds (bad) incl jl,pt cmpb mov mov nop ds ds ds mov movsb ds lods ds mov mov hlt (bad) (bad) (bad) ds ds ds add add or or adc adc sbb sbb and and sub (bad) ja xor xor cmp sar sbb aas pop aas pop aas pusha aas outsl insb jno aam je aas js xorb nop aas xchg pushl xor movsb subl rclb dec mov aas int3 (bad) aam fcoml pop rorb roll or pop ret and push xor xor loop and mov add inc out add jle or cmp addl adc adc sbb sub xor (bad) out test dec stos push lods pop cmp cmp cmp or pushl je js jl cmpb cmp add punpckhbw or shlb push add inc aas pop rorb imul dec cmpsl xor daa cmpsb dec addb cmpsb or aas setle nop push or aas or pop add add rorb pusha sbb mov adc and out or mov mov sbb in push push negl push pop (bad) (bad) (bad) pushl xchg cmp gs lods sarl cmc sbb cmp aas test (bad) lcall adc xor xor xor xor jns jg (bad) (bad) (bad) cmp cmp repz cmp ds aas jne lea mov fadds int jmp xor (bad) (bad) pushl popf xor xor lods xor xor xor xor adc jne movsl ss decl mov loope inc cmp inc push lret ss hlt lcall cmp aas mov pop jbe (bad) jg xor cmp cmp cmp lcall int inc aaa popa aaa dec cmp (bad) jg inc push adc arpl xorl pop ss add icebp dec icebp arpl add adc adc add ret push jmp xor sub add cs outsl out out mov insl or add jb je insb or addr16 add jb gs add arpl gs push outsl ja xor lock push pushf inc add stos jge mov sub add add push icebp out cld pop gs arpl je sti mov jbe cmp popa jbe adc and jae arpl das das pushl imul das insb imul push sub cmp cmp or fs lahf or fs sbb jb xor dec idivl and ja inc push dec inc outsb outsl outsb jns outsl jne (bad) (bad) (bad) ljmp daa jns dec push gs outsb cmp dec aaa xor inc pop cmp inc push popa push dec js xor adc (bad) cmp sub or sbb ret movd icebp pop ret add inc add aas mov xor push loop fs out xor popa jo bound insb ja sbb inc orb fwait adc inc push push inc rcll sub push sub add inc stc sbb cli adc inc imul cld inc js add or push imul bound sbb inc dec sbb js dec outsb addr16 inc adc test adc inc add push gs outsl jb sti int3 sbb jne add imul add inc sbb pusha sbbl add and shlb add inc fs sub jnp jb outsl inc mov push adc push add daa insb xlat dec jb gs add adc cmp jo inc aas dec fnsave push popa je addb jae jae (bad) pop loope jns,pn outsb addr16 push imul inc mov shrb inc add mov jg aaa dec insb jae jb jo outsb push dec outsl imul and ret pop pop fwait cmpsb sti addl iret add sti adc fnsave inc add pop fdivl mov repz rcll loopne pop add fbstp lret stc int3 loope test mov lret ffree loopne int sti (bad) (bad) (bad) mov shrb mov test in std xlat jmp shr (bad) (bad) out std xlat jmp (bad) mov fcom jmp repz shl repnz mov lods lret mov adc out shll aam inc lret not std (bad) mov shlb idiv das sti lods mov ror mov mov into cmpsl add mov mov mov mov fmul mov repnz pop (bad) pop sti idivl rcl out mov mov mov aad or sti std inc lret mov iret mov mov stc mov fistpll and (bad) sti mov ret inc dec dec dec mov (bad) mov aad mov into repz pushl mov mov lret mov enter adc inc push mov (bad) movsl lds (bad) mov jmp sar rol iret ret sbb mov pop jge lret sahf std sbb std mov into stos xor rcl mov (bad) mov mov mov les aaa into mov ret mov lret stc shr shrb adc pop js loope jae popf inc add sar xor outsl addr16 insl and (bad) ficom outsb popa insb and and sti incl cmp and or mov mov inc lock fst jecxz add data16 and ljmp add aad add rol iret and sub popa arpl outsl cmp xchg cmpsl mov jne cmpsb (bad) fdivrl (bad) jmp adc (bad) out stos mov xor clc xlat not fild add push dec jmp inc aas dec and outsb andl hlt and cmp lcall (bad) fidiv mov (bad) cmp and (bad) and lods sti cmp sbb dec int les ret ret (bad) mov sbb cs jmp jmp (bad) fnstsw shrl lret mov and add and pushl and fs add mov add sbb dec or push add inc into add xchg ja mov add jo dec sbb fisub add imul incl and cs outsb imul data16 popa jb pop dec dec pusha mov pop pop inc jae cmp sub push pop pop mov jg add imul add xchg jnp add rclb test mov cld push mov aas pop jg cltd sub roll or arpl aas inc push inc dec outsl push jb aas mov test inc inc sbb pop inc inc pop sbbb pop push dec dec pop push push inc push inc inc cmp inc inc insl fs popa jb gs push mov mov pop fsubl inc jo sbb push scas das ss pop sbb (bad) pop mov pop iret scas inc push dec xor (bad) adc inc inc inc inc aaa mov fwait pop add std ja push dec and push push inc add add adc aaa inc inc xor sahf xor and inc imul sbb popa rcrl pop adc push inc add sub xchg inc daa fs mov pusha daa push inc push imul inc pop aas inc mov sahf push pop inc sarb aas push gs jne arpl adc nop cmp jg xchg mov (bad) mov mov xchg dec dec inc push dec inc push add pop pop inc mulb and inc inc push inc pop dec hlt inc rolb inc jb sbb add mov lret pusha iret cmp and or inc hlt inc jb popa jns enter pop cmp sahf xor sbb push outsb adc add aaa fsubs int3 cmpsb pop or aas pop dec outsl je fwait add push jne inc std movsb invd (bad) inc push inc mov jb ret addr16 gs add jnp cmp cmpsl inc inc or (bad) iret jecxz push sub popa cli ss test je push outsl add aas mov outsb jne pop outsl mov cld lods inc add jne add jae push pop sub in add add pop nop and add push mov push pop and sarl jnp loopne pushl fimul add pop add pusha push fprem pusha add enter paddd add add add pusha (bad) jns or adc mov cli add sbbl mov mov ror flds cmp nop and (bad) aaa add mov call scas fist pop adc jg jle xor add push ficompl and pop fisubrl incl push adc add xor mov cmp inc add (bad) mov lods test dec (bad) xor cwtl nop test fs (bad) xor pop pop push push (bad) xor rorl inc cmp (bad) xor cmp and adc mov pop add clc cmp add fmul enter cmpsb imul imul ja stos push pop xchg addl add or pop add mov adc or ficomp out sbb pop sbb aam push hlt pop xor push cmp icebp adc mov add setne dec inc mov inc iret inc sub mov inc flds or icebp or pop gs jo sti jnp jg insl pop dec jo negl adc and out das orb addl lds orl add jae push inc cltd add jne sub aad push cmp (bad) mov outsl cmp stos add add sbb xlat sbb xchg daa pop sbb inc shl jl movhps sbb or lea pop mov pop nop add (bad) nop fwait pusha add shrb pop xchg or mov and (bad) loope test fs (bad) push das and inc add jae out sub and pop inc (bad) inc pop idivl sti addb pop push adc pop pop add pop add xlat aas inc clc aad add scas and pusha pop (bad) je negl sub jns xchg jmp sub pop sbb ja fldl call hlt fistl inc add adc cmpb enter in sbb add pop or test pop inc arpl add fiadd pop push std add push adcl add nop in loopne loope and sub sbb int3 ja sbb flds adc test add or addl stos fild inc int3 shlb add add ret add (bad) mov sub jnp push cmpsl fwait pop loope out add push fs push pusha fistl pop pop push add mov dec pop pop inc pop push jo add out lret jge pop xchg sub out and in outsb add fs (bad) pop (bad) iret adc orl add mov cld xchg mov pop (bad) in pop pop out add out pop paddusb call inc in jo push int3 pop cmp (bad) jne les leave (bad) jne scas jmp and pop adc pop push add jg add call add shld add rcr mov adcb jmp or xor (bad) pop add int3 add test lret add js mov loopne add (bad) or adc pushf add sti and daa loopne or add ss cltd sbb or sbb out int sbb pop add add clc arpl lock (bad) call jae mov fs push inc aas or ljmp pop rcrl mov ud2 loope sub pop and xchg pop mov adc adc out mov mov sbb mov jne xchg add dec xlat daa das add adc xchg adc add cld decl js orl orl or pusha push out cmp repnz out mov add repnz inc pushf or ret mov adc psubw adcb sbb (bad) jg add leave sbb into sbb rorl and sahf mov sub (bad) (bad) (bad) incl pop std and sbb addl xlat xchg inc push add inc stc mov adc (bad) (bad) decl mov decl js roll (bad) loopne jmp xchg test mov (bad) call cmp inc mov popf sti jmp stos push inc mov repnz test incl pop stos clc scas adc (bad) inc jmp aam imul loope jp iret inc gs (bad) xchg push cmpsb scas (bad) (bad) (bad) jmp or addl cmpsl xchg cmp xor dec cmpsl in (bad) (bad) lcall lds mov cmpsb lock mov popa sar mov fsubs push (bad) (bad) jmp xchg clc repz mov subb fwait xchg and and in int int add aas jno or mov incl aas pop fs dec lea aas ret shrl mov icebp aas rorb and (bad) (bad) incl cmpsl out aas inc cmpsb mov insb scas add aas xor aad mov (bad) (bad) aas ret into popa test ja stos in das dec pop loope les aas xchg les jne int (bad) (bad) call lcall cmp push mov xchg aas and (bad) loop mov jp popa push pop (bad) (bad) (bad) inc jle push jl mov das lea mov inc aas and movsl jmp jg sub (bad) (bad) (bad) aas jge mov inc rcr push arpl int3 and call cmp jp and inc xor lods cmp mov cmp std xlat cmp mov sbb add movb pop mov jne fldt cmp jno shlb (bad) out dec nop pop cmp fisubl (bad) (bad) (bad) pushl loop mov cmpsl push lahf inc pop mov sub dec in ss push scas into imul faddp (bad) (bad) (bad) (bad) jge call mov xchg cmp push andl dec dec gs std orl in faddp sbb enter fmuls push scas add sub pop push push aas adc inc add add mov add inc insb outsl bound inc gs gs inc je insl add dec outsb je jb outsl arpl dec dec fdivr fs outsb arpl insl outsb je inc gs (bad) (bad) decl popa insb inc jb add inc insb jne push inc jne data16 add insb jae mov arpl outsb inc gs jne insb push popa je dec popa insl gs jmp mov inc insb addr16 imul inc jb pop mov ja push arpl outsb add push insb jae mov and push sub dec gs jbe call jnp dec inc in inc push gs fs push popa insb jne mov out addr16 dec inc insb popa addr16 mov push mov imul add jb outsb addr16 mov inc jne jb inc imul cmp loope je imul ud2 ret cmp xor push jb arpl jae pop sbb call gs outsl push jns je insl or sti or and add inc jb outsl (bad) lock jb outsl fimul push dec outsb outsw sahf dec inc dec mov push or popa jb jne sbb outsb ja test ja add push popa imul jo dec gs jo idiv lea mov inc cmp outsb fs gs jl xchg and jbe cmp icebp imul pop mov push mov pop (bad) cmp ret fisttpl inc outsl lds (bad) jne fstl adc mov jns clc pop push popa jb popa bound cld push xchg rolb outsl jns add jb ret lock add push imul out mov sbb iret clc rcll inc popa pcmpeqb cmp mov loope or pop dec pop sub ret inc stos push dec iret inc outsl and jo jb inc cmp nop push cwtl sarl loop xchg mov adc sbb or push push mov adc aas pop xor outsb gs sbb popa sbb mov xchg je dec sti das (bad) aas lea insb gs add outsb ret lock inc jbe aaa push gs imul add addr16 mov pop aad outsl imul mov imul outsb pusha (bad) lcall leave or imul outsl dec jne je or jns add push outsl pop xchg dec add inc gs std js outsb ljmp push outsl ja fnstcw es gs adc gs jo sbbl (bad) add dec outsl popa fs imul push in stos or daa cmp outsb test jb dec out gs fs outsl jae in iret mov jb je pop cmovle push hlt mov (bad) bound lds ss in das (bad) cli adcb add push dec push imul gs jne sub mov mov das or push dec push adc sbb inc js je or xchg rorl inc add sbb and maskmovq negl shll sbb push outsl jb jg and cltd jmp imul xchg mov inc adc pop push sahf or pop nop or sbb sbb xor insb add push push lcall scas data16 ljmp push xor popa jo push fwait (bad) xor pusha fiaddl add cmpsl lahf lods add and jns pop mov dec outsl outsl imul out mov jmp les and xor push ljmp ret loope add inc fs jae negb sti push outsl imul loop lret push or add sub add addl imul shrb push js jne push mov or je jae popa nop out loope inc insb imul bound mov pusha push je arpl add add mov data16 xor add fisttp imul mov insl popa pop push sbb push mov jb or iret or cmp insb outsl push or xor or gs sbb gs outsl test dec jb inc test adc ds mov ljmp mov cmp gs xchg testb push decl rorb mov inc outsl mov popa outsb arpl add ja mov push inc insb inc js arpl sub jo arpl outsl insb fs mov jo dec out outsb addr16 outsl je data16 cmpsb sarl fldl arpl pop mov xlat jae add outsl sbb jne negb popa pop push dec inc xchg push jne adc fild sub pop imul inc int3 jne add or je dec loop sbb je jb loope into inc or sbb fwait outsl jo push data16 mov push outsl arpl inc xor cmp xchg add mov lock arpl dec cwtl jae hlt mov outsl jb xor add cmp (bad) cmc sahf fwait shll cmc fistpll cwtl sbb adc insb addr16 je pop mov jb push cmp add xor int3 fs std sarl jb ja push popa bound fs xor or in xor (bad) mov dec cwtl jnp jb and or int inc popa insb insb xor arpl jbe ret andl gs dec inc cmp sbb add or inc into xor push xchg popa pop ss hlt gs dec jae imul sub insb popa arpl lcall jae cmpsb inc outsl arpl outsb outsb jne push popa jb inc pop out inc cmpsl outsb jae sbb xchg pusha sub loopne adc sbb ret jae or loopne xor and xchg addb imul xchg push shrl test adc insl outsl push out adc loopne or inc lcall xor gs ljmp xchg ss je jne adc in outsb inc sub gs fwait mov cmovle int3 sub int dec std es aam push popa jb insl gs jae pop cs jne rcll insb gs jae outsb fld fisubr xchg pop jo mov jg dec or sbb es jnp push sbb addr16 fs jae jb lcall xchg xchg pop jmp imul test push jb outsb jae jno jg rcll imul adc insl ljmp je or icebp jae and cltd outsb add gs mov jl and adc std ret push int mov addr16 cltd cmp cmp push rorb push outsb jb adc or loopne jp clc mov aas mov add sbb jg jge adc gs imul incl dec add pushf cmpsb push pop lsl add add add add add adc xor mov mov add add add lds add and adc add sub int3 daa pop or add add cld imul add enter add add scas sub pop cmpsl adc cmp cs mulb pop int3 pop rcll add add pusha jb,pn in fdivl scas popa add pop inc adc lahf insl sbb push add pop add out or sbb pop and fsubr faddl daa shrb jae arpl jmp xor repz push adc daa add add jmp and add add add movsb das and and add incl pusha mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add add add addb add add add xor add add add add add dec add add add add add add add and cmp js insb and jb imul xor and arpl imul inc sub je outsb fs insb outsl outsb gs and ds jae gs bound js insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and insl popa outsb imul jb imul xor ds jae gs bound fs je je and insl gs jo and jo outsl arpl jae jb jb push je jb cmp and jbe jb imul xor xor xor and gs xor and ds gs outsb fs arpl cmp gs outsb fs je jae gs bound cmp jae gs bound fs je je and gs xor and outsb popa insl gs jb jae data16 push imul inc outsl insl insl outsl outsb sub jb insb jae and jb imul xor xor xor and outsl arpl jae jb jb push je jb cmp and jo bound dec gs outsl imul and xor xor xor arpl xor and addr16 addr16 das ds fs outsb fs je jae gs bound cmp fs outsb fs arpl cmp jb jae dec outsb outsw and insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and and and cmp arpl imul and and cmp gs gs gs jb jbe insb gs and and and and and and cmp gs gs gs js arpl imul insb and gs cmp jne jb inc fs imul je jb and inc arpl jae cmp jae and and and and and cmp jb jno gs gs jb jbe insb gs and and cmp jae arpl imul jne je outsb outsw ds popa jae gs bound add add and loopne and inc and call add add and lock add and clc arpl add and or and outsl and adc and jnp and sbb and xchg and and xchg and sub and mov add add add addb add scas and add add aam and mov and les loop and add add repnz add add add and add add adc and add add es add add cs add add inc inc push inc push dec xor cs insb add dec inc push dec xor cs insb add dec xor cs insb add push dec inc dec xor cs dec dec add xor cs insb add inc dec dec xor cs insb add dec push inc push dec cs insb add inc push xor cs insb add dec push push dec dec dec cs push push add add push gs jo outsb dec gs add add arpl add inc js je jb arpl jae add inc gs jb arpl fs jae add dec outsl popa fs imul add push imul jb je arpl inc outsl inc jb popa je dec outsb jae popa outsb arpl add gs insb inc js arpl gs add add je inc imul jae add add je inc add add outsb push jb outsb je jb add add add add add xchg xor add push and or add xchg xor add nop add add add add (bad) incl add add add add sbb add push pop mov int mov push push jb addr16 insl and outsb outsb outsl je bound jb outsb and and and fs add add add cwtl data16 faddl or faddl or faddl or cld jle std fiadd or out and or das add fiadd or sti (bad) jo fiadd or dec ret jne fldl or sti (bad) jbe aad or sti shll pop or iret orps rolb or es std fild or faddl or xchg push or sti (bad) ja fldl or sti shll pop or sti (bad) jae fldl or push imul push inc add dec add pop jae inc loopne add or or add add mov add add add push add add add add add add add add add add add add add add add add lock add add add pusha pop add add add adc add add add adc add add add add adc add xchg inc add lock add rolb mov xchg add add add push add push add cmp add dec mov add add add push add add add inc add add je js add add inc add add add add add add add add pusha cs je add add pop add add add adc add dec add inc add shrb jae arpl add mov rolb add add add inc add inc jb,pn insb outsl arpl add rolb add and add pushw add add add add add add mov add add add add add inc add cli inc add or add add xor add add add push dec add fs add outsb dec add mov add dec add mov dec add fimull add dec add add add adc add dec add sub add xor add inc dec add dec dec add push dec add dec add je add jle add mov add dec add mov add mov dec add fimul add dec add add add add push dec add and add dec add xor add add add add dec dec add pop dec add push add jp add mov add add mov dec add fimul add dec add decb add add sub add dec add dec dec add pusha dec add outsb dec add xchg add dec add hlt dec add adc add xor cmp dec dec add fs add outsb dec add mov add add sahf dec add stos dec add mov dec add fimull add add ljmp add dec add sbb add xor add add pop dec add outsb dec add (bad) dec add cwtl dec add stos dec add rorb rorb add dec add cli dec add push dec add and add dec add dec dec add push dec add xchg dec add test add mov dec add in dec add or add add cmp add add pop dec add fs add jo add xchg add dec add mov dec add (bad) dec add out add repnz add add add add and add ss add inc push add push push add fs add mov add push add mov push add (bad) push add out push add push push add push push add cs add ds add push push add pusha push add outsb push add jle add mov add add (bad) push add rclb add push add cld push add or add push add xor add inc push add push push add pop push add jp add mov add push add mov push add out add cld push add adc add add cmp add add fs add jp add mov add push add mov push add ficoml add add add push add or add push push add ss add dec push add pop push add outsb push add adcb add add add andb add nop push add add add sahf push add add add mov push add loopne add (bad) push add or add push add sub add add or xor xor xor xor add and add add add es add add add and rcll (bad) rolb stos add pop dec dec inc push pop push outsl data16 popa jb add push pop push outsl data16 popa jb pop push outsl insb imul dec dec dec dec pop push outsl data16 popa jb add dec pop push outsl data16 popa jb pop push outsl insb imul dec imul je push inc dec gs insb je pop inc jb outsl jb gs jb imul nop nop nop nop mov add pop mov add popa mov add dec mov add pop mov add jo add (bad) mov add mov add mov add mov add (bad) mov add mov add push outsl data16 popa jb pop dec imul je push inc dec gs insb je pop inc jb outsl jb gs jb imul inc bound add outsb jae bound inc jb popa imul nop nop push add outsb add jae add dec add je add popa add je imul and push add add add nop nop push add jo add add add dec add arpl popa add add jb jbe add xor xor add inc add jo dec add add jo jo dec add add add add dec add add add add and and sub add add add push add add add add add add outsb add add jne bound jae arpl jb imul jb and data16 jb and push add dec add and dec add je ja outsl add imul add jbe add je jae add nop nop nop nop adc add add add pop enter enter enter enter enter enter enter leave add adc add push leave add das leave add cmp add mov add mov add push add jbe jb imul insb insb add outsl fs je and fs je insl jae fs je insb popa jae cs je add add or add or add adc add adc add sbb add sbb add and add and add sub add mov add add add add sbb xor add add xor sbb xor add add add in add push add add xor add add add int3 sbb xor add xor sbb xor add add sbb xor add add add add add cwtl push add xchg sbb xor add add sbb xor add add add add add push sbb xor add add push add mov add or add adcb xor sbb xor add add push add in add push add add push add sbbb xor add add add int3 int3 int3 int3 add add adc add pop sbb xor add add add add add or add aam add dec sbb xor add add add add add sub add adc add mov add adc add add add and add add add int3 int3 int3 int3 push pop add adc add in sbb xor add add add or add jo add mov add add add jl add xchg sbb xor add add add or add or add dec pop add fcompl add rcrb add mov add add sbb xor add add add pop push add test add add add int3 pop add add add int3 int3 int3 int3 fcoms add adc add sbb add int3 int3 int3 int3 mov add adc add nop sbb xor int3 int3 int3 mov add adc add mov add int3 int3 int3 int3 xchg pop add adc add test add add add mov add add add int3 int3 int3 int3 mov add add add add add mov add adc add dec sbb xor add add xor add int3 int3 int3 int3 push sbb xor add add add add add mov add add add xor add add add mov add add add and add xor add mov add add add sbb add add add mov add adc add cld sbb xor add add push add or add int3 int3 int3 int3 mov add adc add xchg sbb xor add add sbb xor int3 int3 int3 int3 sbb xor add test add add add int3 sbb xor add add outsl fs je gs imul jae push jb fs je push dec push gs dec jne add je dec popa js nop nop nop push dec push je fs gs dec inc add je fs inc add inc insb imul inc outsl jb outsl jb je push push dec push push dec add js push insl push jo outsl popa add inc outsb popa bound nop nop nop push dec dec inc dec add add inc add push and popa insl gs jb and je jo dec inc push add xor cmp sub xor sub inc outsb arpl jb inc outsl insb outsl jb push imul nop nop nop sub sub xor xor outsb arpl jb inc outsl insb outsl jb nop nop nop inc js jb jae imul bound inc gs outsb gs nop nop nop push gs imul nop cs nop nop push jae jb popa insl add je jb gs inc js insb outsl jb jb nop nop push arpl imul imul ja inc popa arpl outsb add dec inc pop pop inc dec inc push push inc push pop push dec dec push add jae push jne push imul inc outsb gs insb add insb imul nop nop inc outsl insl insl outsl outsb add pop inc push push push inc dec push pop push push inc push add xor nop nop nop dec dec inc pop pop dec dec inc inc dec pop dec inc inc dec dec dec inc add ja jb add arpl jae data16 nop nop dec data16 push add data16 add jb add add insb add arpl imul add push outsl data16 popa jb pop push outsl insb imul imul je dec data16 add add xor push add and add pop xor sldt and adc or pop pop or add sbb nop nop nop push add arpl popa add imul dec add add add inc add imul dec add add add jo push add jae add add add push add push add push add add add add add inc add add add add add popa add add add add add add add popa add imul add add add add pop add jbe add add add add jae popa add imul dec add add add jne jb xor xor add add add add add popa add imul dec add add add inc add add add add add add add imul dec add add add xor xor add add add js push add add add add add add jae arpl popa add add add add add add je jae popa add imul add add add add add imul add add add add add add add arpl je imul add add add add add add jo imul dec add add add outsb add insb add add add add add add add jae jo outsl add insb add add add add nop nop inc add jns jo je jne imul dec add add dec add push add dec add add add add add add add imul xor xor add add add add dec add jbe add add add add push add add add add add add add add add add add add popa add imul add add add add je jo jne bound add add add jb jns jo je add add add add add add je jb jne jae je add add add add jo je xor xor add add add push add dec add je push add add add add add add dec add inc add add add add inc add inc add add add add add add add add add add imul outsl add imul add add add add add inc add inc add add add add add inc add add add add add add push add add dec add add add add add dec add add add add inc add dec add add add add add add add dec add add add add inc add push add dec add add add add dec add inc add add add add add add add add inc add push add add fdivrs call in sub movl pushl movl jle movl movl (bad) (bad) (bad) flds or add add (bad) or sbb decb pop hlt punpckldq ffree push mov mov jae adc mov ljmp subb fs adc pop out mov push push add xor add cltd jnp sub inc cld scas (bad) push enter push ss inc push (bad) (bad) (bad) fldl add add mov pop ret mov mov test jne xor test (bad) dec je cmpb je dec ret test jne xor cmpb inc ret test pushl mov cmp jne or je cmp jne or je shr cmp jne adc (bad) (bad) mov jne add add or jne xor ret sbb shl add je mov inc aas jmp sub test fistpll mov add aam int lret les (bad) mov jne inc mov test add (bad) je push (bad) out (bad) jg icebp mov mov add xor xor js add add out (bad) fldl es je test je push add je jmp lea inc (bad) (bad) ljmp ret ret lea add in mov lahf loope roll add loopne cmp push inc mov jne mov add push addr16 decl add mov add dec jne pop adc (bad) jmp xchg add pop lea push lea mov add mov (bad) repz decb jmp add pop push dec jne jmp arpl std out cmc push mov pushl inc add add cmp jne out sbb add sbb mov aas xor xor mov pushl push adc das add add mov pop fadds test insb out jle sbb push xchg xchg insb add xchg add pop jo jle pop in jl cmp add mov mov pop add les sahf daa je gs sbb xor repnz add adc nop add gs je lock fcmovnb push dec cmp jge add test xlat xor (bad) jge or push or push imulb sbb loope mov push leave jge xchg jne out sub fs pushl iret sbb mov mov lods add cmpl inc rcll fwait cld lcall jecxz inc clc mov mov hlt ret es push cmp loope or call insb ret ret pop pop (bad) jae mov out xchg jne add cmpl push and sub fsubrl push daa lea dec (bad) ja orb xor lock mov push add fdivrl add gs jae and sub push aaa clc mov mov xor mov add push push in pop mov mov mov lods lock daa inc inc mov xchg (bad) icebp mov cs dec sbb cld cmc test (bad) mov clc mov lock sbb dec mov push leave hlt decl pop call add sti or out pop add ret or mov in push div rep pop push call fdivs in push mov mov pop xchg mov pop pop add jo push push mov mov (bad) and sti std aas je imul jmp mov cmp pop pop jp lock add popf in out cltd cmpl adc add push add dec cli mov add mov or int or mov ljmp or in adc and rorb xchg rorb xchg popf cmpl xor rcr (bad) mov push and push mov add or xor (bad) pop xchg add test and adc push inc xchg push add jnp dec sbb cmp ret jne and mov jae dec jae and sub mov inc mov add jge subl cmp movsl out and lock mov cwtl lods or or cwtl roll sti xor cmp nop mov addr16 movl or iret mov sbb and lds jge decl test mov je (bad) xorb add pop (bad) pop pusha dec (bad) inc (bad) pop (bad) inc or fstpl fdivl icebp (bad) jmp fstpl fildl fstpl fldl fsubl fcompl negb add test xchg and outsb out jl add dec aas lret test and mov add loopne jne in xchg call and fsubrl nop mov dec mov inc push xor fisttp (bad) faddl faddl jne ret inc out inc ss push sub fisttpll ret or inc lock bound sub push mov sbb push and or pop adc dec inc inc dec sbb inc ret mov idivb mov dec faddl adc insl clc or inc hlt std setp and adc push mov call dec push (bad) sbb xor fdivl add or inc adc push es adc dec sbb call dec mov and out fcos adc xor push jae adc inc (bad) cld aaa std incl (bad) mov or pop fldcw fistpll fldcw mov mov sub dec mov push push add mov and or adc clc dec (bad) out (bad) fildl fstpl fldl faddl loopne inc loopne leave lret adc imul pop rorl add add hlt adc clc out ss js sbb cld sub in mov test je push mov jo mov lock (bad) inc mov xchg pop pop mov rep add and ret in pop pusha xchg mov sbb push mov mov inc jne or sbb loopne cwtl pusha sub stos (bad) loopne and gs push xchg add int3 sub xchg add cmp lret jno add fdivr insl dec popa arpl dec adc inc incb inc jo rcrl sbb loope sbb out subl mov pop mov (bad) mov (bad) jae,pn xchg add push lock inc ds pop add out pop xor test adc pop fist or jne dec lock adc shld push call push inc loopne jae adc jnp hlt jnp,pn hlt push adc push or add jg add mov or (bad) dec jbe xchg mov add mov push mov popf test add add cmp loope rcr ret and fildl add cld lahf (bad) rolb jne jns sbb mov cmp pusha fs ljmp popa lret sbb xor or mov lret jnp test jae fcompl movsb movl adc insb out add adc mov and add dec out xchg add cwtl adc sldt test ret adc or pop mov outsb sub lds pop jp jp cmp push or adc and xor inc xor outsl call push in scas cmp sbb cmc adc inc sbb adc add dec and cmpsb rcrl test mov jno jne cwtl jne add leave push call dec xchg mov or dec out or adc sahf js sub notb jae mov inc or push outsl push fsubrl pop ds adc inc ljmp imul sub pusha ljmp cli (bad) ljmp cld mov fildl fstpl fldl fildl fstpl fmull fmull fs push jne push mov mov mov lock sbb call xchg es xor pop bound cmp jne call lock push add xchg rcrb idiv adc cld lret cmpl pop jb sub mov mov inc not inc and sbb cld (bad) mov bound dec mov push dec sub jmp or add shlb fs mov rclb ret inc sub cld push sbb mov xor loope xor loope cmc (bad) sub push dec sti psubusw pop popa and clc popa mov mov or hlt jne mov call (bad) and adc pop sub or adc xchg sbb std xchg xchg stos mov mov mov mov push movsb mov stos or lret or dec adc enter mov mov pop inc adc gs stos or rolb cmpb sbb cmpsl cmpl in (bad) xor pop out mov push inc sub or dec shrb cmp adc mov icebp cmp sbb adc or sbb lcall (bad) pop push fadd pusha popf (bad) pusha pop adc (bad) lods adc add push nop (bad) mov xchg (bad) sbb add mov mov dec adc arpl and sbb adc and xor dec jae adc ret andl xchg xor (bad) adc add mov xchg inc mov nop/reserved leave push mov pop inc push push mov push cmp jg cmp mov inc shl add push mov loopne jbe incl add mov push pushl in xchg jnp lea add mov push ret push out mov jle cmp push gs insl dec jnp daa and dec dec jp inc and daa dec in dec inc adc add (bad) aas lock pop pop pop clc push xchg loopne pop mov pop out xor movsb iret call or daa jmp test add mov ret fcoml cltd outsl fs xor ja dec inc test jo jge decl test rcll gs jmp nop mov inc sub pop add and xor (bad) adc jp (bad) pushl call lea lahf rolb and fnstenv dec or mov push inc dec jl push dec in (bad) cld sub cmp clc xchg pop roll add (bad) scas xchg and xor xor jg nop in mov push pop pop mov jbe cmpsl hlt pushl call cmp movl out jne movl (bad) out loop mov pushl pushl xchg sub mov loope hlt lock lahf rcrb push push repz out adc pushl pushl pushl jmp (bad) or sub sub sub leave pop xchg adc das (bad) jmp insb sbb add and push ret rcr inc mov enter into fs mov sbb ret mov mov or scas loope (bad) test jo jb push std call faddl ficom cld sbb (bad) je add push in call and push jle jle mov push rcll call mov test je mov or xor push loop sbbb out bswap adc mov or in (bad) jne and sbb jl mov add outsb mov xlat popf xor and dec xor jl pop and mov les cmp gs hlt fmul dec fdivl jno mov lret (bad) loope test inc in leave sub cmpsb and adc clc mov lds pop call add xor and add test or push push cmp loopne dec pushl push aaa cld add xchg or fcompl std out stos pop stc sub mov mov movl add (bad) (bad) cmp je mov rep mov fnstsw dec call cmp inc mov mov add aam clc mov push ja dec and push pop mov xor and sub fs pop js,pn dec ljmp out mov sub rol rolb push or cmpsb add xchg fwait cmp dec add pusha push popf lods fcomi daa add popf jg adc xchg shlb rorb mov test xor call mov les sub call add out lret jo and adc jmp jge pop lock push andb inc push mov mov jge clc sub xlat movl ds adc xor shlb push push aad addl push into adc sahf in mov dec je add hlt and jl into dec cmp test pop adc cmp cwtl jbe dec leave add push pop leave orl das loopne mov leave add rolb leave adc out movl into int inc clc sbb aam int3 push rcr lock popa icebp xor sbb mov idiv jne sbb cs jmp pop push add sbb xchg push ja cmc push movsl jne inc adc and orl cmp mov insb inc or push add roll adc jbe pop movsb xor sbb les cmp mov test push pop fildl sbb cmp fildl fstpl fldl fsubl jl sbb pop loope ret pop pushl enter push inc push jno outsb push and cmp mov sub adc push ret or jp add xor add mov push xor lea add mov add push add jne test jne xor jmp push add push aas es xchg mov jp inc add fdivr jg pop xor mov add rep dec jne pop loope fimul add sbb push pop cmp push andl inc mov mov push add fdivl cmpsb dec sbb addr16 test aad cwtl in mov je lds lock adc sbb popa fwait adc aaa pop cmp xor fcoml push popa adc ret scas push xchg inc cld sub ret push push push test sti (bad) (bad) cld rep pop pop pop sbb je adc add cld lods ja or jge es or stos mov adc push pop xchg or lcall jne pop add inc dec jae add cmp stc faddl inc repnz aam test xchg mov mov xchg dec xlat stc dec push pop jl fdivrs push pop leave push pop cmp and ljmp add fiadd add add imul add cmp or sbb xlat push out sbb dec cmp nop adc adc test pop xchg sahf ret cld fninit sbb add add xchg push inc mov call out xorl stos aas mov mov sbb add mov repnz int3 inc jl push jl fidivl add pop jl loopne xor hlt adc add rcr rorb push xor xor xor ja and add mov push push int3 mov shr imull nop push mov loopne xchg movl pop push jae rcrb cld lcall pushf testb je push call popa aas out lds sub add mov sub fcomi mov ds or mov push dec or push sti stos xchg pushf std jg into sbb push mov push jae sbb and mov into add inc cld mov orl nop call mov in mov sti xchg add shlb jnp jbe inc sbb add push mov mov mov mov cmp cmp out add mov lahf mov sub out pop mov mov cmp test mov mov pop mov int ss add sub loop leave test jbe cmp jae mov lea lock sbb add pop add ret inc add lea sar add push push push call aas mov cmpsl pop pusha mov pop test sbb push push sub mov std mov test jne push push fadds fcoml push dec xlat mov je mov push xchg lods sub mov pop ret or push mov cmp cld incl add mov pop cmp fs cmp or adc mov push jns and mov aas mov (bad) pop adc push in bound push test mov test jne mov mov (bad) ja cmp dec jno inc mov lea test sub andnps cli mov add imul dec jne pop imul lea push lods inc sub iret (bad) (bad) fcomip mov mov sbb jmp lret add movsb pop mov pop pop ret mov pop les addr16 faddl pop sub (bad) lcall xor xor mov mov mov mov sbb ja cli call mov push lea push push call cmp ja call ds mov push test mov pop je mov add rorb in mov psubusb pop adc push ret dec sbb xor decl loopne sub xor xor cmp je cmp daa incb xorb push cmp fnstenv scas call movl mov pop add push insb and incl decl scas not dec sub flds jno add (bad) jg sti add add or pop cmp je cmp mov add or xor pop add ret fldl xor sti xchg sub test setae cmpsl insb and jle jg inc sub pusha int3 mov mov cltd xor inc xor or and jle test je pop inc push incl inc addr16 das sub push mov je cld rorl enter dec (bad) lcall les push add and and clc cmovge push add add pop std push call sub test xchg xchg push push call sbb jo out push and das adc js mov test pop and jne jp sub jl jmp adc lea (bad) jmp push iret dec lea mov cmp je test dec fdivs cmp jbe mov dec adc movb cs lods jmp adc not adc inc dec sbb or inc sub adc mov fadds lods and pop pop lea scas push arpl fdivs add adc (bad) sub sub push sbb fcoml in push mov pop lret dec xor iret lock cld insl out leave ljmp cmp sti and pop sbb ret incl je jg aaa mov adc movb dec mov jl adc mov and aaa add scas addl or (bad) (bad) call (bad) jg or jo mov sub lea cmp jg jae push adc (bad) jle roll and popa lods cli jl je (bad) fild (bad) lea js xor inc sbb arpl lock jbe dec push push loope fdivl fistpll (bad) jne mov aas sub push add pusha ja pop inc adc cmovnp mov pop (bad) (bad) pushl push adc cmc inc mov cmp je jmp cmpb jge add jmp inc cmp in pushl jb jmp cmp jae pop add (bad) roll enter adc mov and icebp cmp jg test ja idivb repz rcll sbb and push cli mov add and sarb sbb arpl (bad) arpl (bad) enter push inc add xor pop nop das sbb xchg in movl sbb add add outsl mov mov scas push ret or test mov jge test add (bad) ja cmp cmp mov das push sbb bound push lea push mov cmp idiv out rorl and push cmp sbb and push push xchg inc mov test or (bad) nop pop xor sbb test or pusha or out les push adc (bad) lahf cmp pop pop clc or test je jle (bad) xor das adc test std popf (bad) push inc adc inc popa inc insb push test adc jb xchg add or pop lock mov lock jmp fnstcw sub pop mov cld adc sbb push push jmp daa les jae xor imul push sbb lret pop sbb mov mov (bad) or pushf and mov sbb or or push je fistpll and adc add cmpl pop mov push push push push dec cmp test pop dec pop add jecxz ds out add jl push push repnz sti addr16 mov aaa pop or decl fstpt jo add (bad) cmp jb test jne pop inc ret lea push shl pop xor lret mov add add jae lods ja adc mov (bad) and fistl stc or imul and je rsm and sbb cmp and shr push iret adc or out mov cmp push sahf dec in lahf mov aaa mov mov icebp ja test decb xor clc add xchg cmp and jbe sti test mov jae jbe push je jns rcl and or add pop jecxz cmp sbb pop lret sub icebp push push adc data16 out dec pop mov fs je int3 jge int nop inc and das mov mov dec sqrtps sub test shrb pop and dec mov xchg es add lea xor je push jne faddl adc inc and inc and pop cmp frstor dec and sub jl inc sbb sub sub je inc and xor (bad) je pop inc hlt and ret pop cs mov cs xor negl add lret aad add adc fiadd pop dec dec mov fcmovnb lea inc mov or pusha iret cmc and testb push test out (bad) jle lock mov mov inc jp idiv cmp jb mov pop pop jp jmp sbb add mov test out mov push jnp sub je aam sbb inc add pop ret nop push push inc adc mov scas lret (bad) hlt or stc je xor cli jg scas cmp mov test jg pushl aas sub lea cmp jg lea and je cmp ja cmp push clc cltd fistpll icebp je ret repz rolb pop fdivl hlt cmp push push es fdivl adc sub pop inc ret pop xlat add add in sbb add sub mov push push call mov repz mov add xchg jmp cs push cmp (bad) jne ja bound push call dec adc rcrl push sbb insb lret pop inc jne mov sbb clc mov and jg xor pop ret push lea push xchg fbstp loop mov mov mov jo inc pop dec stos mov icebp stos pop movb pop mov out jbe or sub adc and pusha ljmp mov mov cmp je and mov add ret push (bad) adc mov fstpl mov adc add push push jae (bad) movsl je xor or fdivrs call call pop inc nop test (bad) inc dec add dec scas jbe sbb adc push sub aas sub cmp inc or lock (bad) cmp jnp data16 dec nop push or (bad) je mov mov adc leave jle cmp jle mov add cmp orl ret xor insb sbbl pop jmp cmp pushl in cmp je lea push ret fnsave xor cmp fistpl mov add jne scas out out sub and adc hlt pop in orb dec or cmp jne arpl jmp push xor cmp setl dec outsb ljmp cmp je mov inc cmp push ret fwait sbb pop cmp div and popa lods cmp xor mov rorl fwait cmpsb dec adc test or fbstp push push jmp lea mov push jl xchg lcall mov xor repz jne mov sub mov lock fistl fs cmp std out jg add sub cmp cmpl je dec inc adc adc or out pushl cmp or cmp stos nopl (bad) jae aaa jmp lods mov jl xor out add out je ljmp xchg mov (bad) mov inc sbb shr mov xor push (bad) out or ficomp (bad) lea and stos pusha dec inc out add pop mov andb out adc sub cltd movl pop data16 (bad) fistpll and ret jge mov lea sbb mov pop pop jo xchg push add or (bad) lock (bad) leave lcall xor and cld fbld sub jns xor push lea jg fsubs jl rclb and adc decl enter ret xor pop cli xor (bad) mov sub xchg pop pusha dec add xchg popa jne aaa pop test je (bad) decl test je cmp je push call aam mov mov pusha mov sbb jne je dec pusha dec es lock cld ffreep adc loope cmp je jmp pop fs adc ret adc add xorl sbb lods insb inc mov push fdivrl push push je call mov sbb cmp call fsts (bad) (bad) ret adc pushf in clc lahf outsl test jne adc sub push sub loope jo inc not push adc adc or cltd pop mov push inc push inc outsl addl pop sbb clc push add test push or ja pop ja mov testb xor pop aam arpl adc (bad) mov push mov or mov mov jmp jb adc push mov jbe inc inc mov fstpl xor push and (bad) mov cmp out adc adc je ds (bad) ja je je,pt scas (bad) mov das pop flds inc sub mov clc pop pop ret out jne fstl push push mov sbb mov cmpsl add adc jmp add inc sbb roll mov rorl xor popa movl xlat jo xchg dec fdivl jmp into ljmp sbb test fwait mov je jne push mov (bad) cmp mov jl int3 adc int repz popf push add lahf cmc sbb adc (bad) aad xor ret (bad) call je lds je jmp cmpb jge mov test je daa xor pop in mov cmp jge cmpb je dec lock push adc lods mov jl sub sub and pop sbb sbb test arpl fimul cmp stc add ljmp xchg shlb les push je hlt int3 mov and mov fdivrl (bad) sarl push push movl call sarl (bad) pop pop push lcall inc or je xchg fwait pop popf sbb or add ret mov fldln2 jecxz pop jae mov or dec or cld mov ret sbb xchg decb jnp add inc mov adc jne imul ret push sbb lcall mov jb dec cmp fadds sbb jne sub mov xadd or add or sbb imul xchg fcomps test test cld daa push js push loopne push loop pop push ja cmp scas imul pusha mov lds je (bad) xor jae jg ret xor fimull xchg rorl add shrl sbb loop ret setne dec and ret aad xchg pop add and mov jp ffreep lock shr and add dec enter aam cmp ss pop clc mov cmpsl addr16 push pop insb ljmp or or fcmovnbe mov or pop pop push or cmp xchg pop cmp mov cmpsb daa jl mov (bad) xor inc (bad) mov push push inc adc inc pop lahf jbe int3 or sbb es insb vzeroupper loop or push aas push (bad) jg add add in sbb add cmp idivl inc push push jg je adc add je std mov pop pop je mov subl jne (bad) mov jp mov jnp push ret adc add sbbl pop add sbb pop adc test pop movb lea call push out sti cmpsl (bad) les mov movb add add lret test sub dec jne inc mov push mov fmull xor (bad) jnp insl push add paddsb mov enter mov out push add jno sarl cli mov and mov mov cmp jne pop pop or je pop push add jne ds insl ja sbbb call inc (bad) fdivrs mov jne mov or (bad) je push jne cmp je cmc repnz jne push jle jg mulb je jle jmp sbb daa mov push sbb cltd je js mov test js push mov (bad) xor (bad) (bad) mov sub (bad) je inc enter cmp scas mov popa adc cmp add test ss mov dec mov shrb adc xchg imul cmp test or je xchg xorl mov add xorb mov push cmp and loop aam lea cmp icebp fdivp or xchg mov lcall aam popa add push mov or jo std inc jl cmp dec les test add movsb jmp (bad) jne lea pop push sbb add and pop add xor xchg aas das jbe fmul jecxz jb cwtl mov push int3 jne dec and jno adc addr16 fdiv inc nop ret insl inc add pop pop add pop lcall add pop cmpsl fadd sbb addr16 add aas lock in push cmp icebp pop add ja push push call add cmp jl sbb scas sahf clc or push pop (bad) sub scas or push push push daa fadds shrb or push cmc adc hlt nop imul mov aaa ret clc jno mov std test mov add mov sbb cmpb jne lea in and loope jnp mov jmp decb adc outsl adc cli push xor jle push add mov adc mov jmp cmpb jne movb pop push or scas cmc jp into mov push dec sbb lods push call push out ret mov pop aas mov lahf xchg (bad) mov xchg sub push add sbb push pop ja mov dec and dec cmp ja ljmp inc dec add repnz das add cmpsb imul add add cmc sti adc push fwait add or fildl mov ret push lea mov fsubrl ja clc adc cmpsb push pop push dec nop nop add or test add cmp dec xchg add xchg mov dec std fbstp mov ret jp add (bad) xor movl lock mov mov mov mov out icebp push mov mov jmp adc jl add mov adc call fisttp mov push cmp jne cmp cs jg add push add push inc mov lods lcall or mov (bad) out call shl mov movl fs mov pop pop pop push (bad) adc pop dec cld push lea pop idivl sbb cltd inc or mov adc dec mov or add addr16 loopne insb and push test mov jne out arpl (bad) out mov push mov push popa int3 push js dec xadd incl jb add cmp jae or incl xor mov cmp jl cmp je sub adcl cmp fiadd lea aas cwtl mov test mov cmp jge xor incl mov mov push mov mov push and ret mov sahf arpl mov pop jo test aas cld inc or mov lea cmp sbb je xchg or sub push mov fstpl outsb clc adcl inc adc in sbb jg and jmp cld jg mov lea cmp jb lea mov pop sub sbbl cltd and clc or inc xor inc and test add decl add xchg pop out cmpsb daa pop pop and push ret (bad) push or rolb mov mov fucom fsubp pop ds mov xor add add jnp sti mov jl cmp ret out fist adc pushf test mov add test push je pop fs lret xor sub gs pop adc or pop scas lcall dec mov pushl add or or add push dec idiv xor mov mov add and outsb out addb or mov mov pop add or loop mov mov sti ret cmp jne ja flds (bad) outsl push add or clc mov add mov push mov xor sub ljmp cmpl fsubrs (bad) mov push mov push test movl mov sbb or jne into mov fstl adc jge cld repnz pop jne inc sub mov pop pop pop mov movsb js mov xchg dec clc (bad) decl pop lea mov cmp je cmp jne cmp jbe and push and jne,pn ffreep inc add ja repz mov subl push out sub push mov xchg mov sbb cmp push and push jbe adc ss push imul and push (bad) aad jmp pop es pop push fildll mov inc mov add add pop sub lea jb xor xchg lahf ds movsl mov (bad) rep je mov mov in pop and xor hlt mov rep jmp xlat adc mov cltd add add mov inc and add movhps (bad) lea (bad) lea mov fsts repnz mov dec movl shlb sbb or hlt (bad) or push push mov push roll jg inc xchg les xor dec ja frstor adc movl or scas into dec jne sub pop aad daa ret jecxz and ljmp mov cmp pop ret lea fimul sbb lea popf icebp (bad) pop push call clc incl ret push push push push push (bad) fldenv pop or push repnz in push push add mov xchg push jl cmp fmuls add sbb mov lea push fimul out jg mov xor mov add mov push jo out or rep repnz and push push push mov adc je lahf sbb lea mov inc (bad) pop gs sbb sbb int3 loopne inc mov ss add add and xorb jnp mov leave push inc setne add mov cmpsb sbb cmp add (bad) mov and push xor xchg add xor test jbe sbb xor arpl dec push mov or inc mov inc popa mov clc (bad) ljmp xchg fldl fcoml sub push fnstsw test jne std fcoml jg (bad) int3 jbe fsubl jne dec mov mov out outsl push sti jmp fabs adc or mov mov mov mov je adc out incl shll enter add jg (bad) cmp jle sub add jmp jb cmp mov jne sub mov mov ljmp dec (bad) xor sbb sub cmp xor (bad) mov pop sbb and cmp loope inc sti idiv jns in outsl negb or dec or inc jne test inc sub (bad) (bad) mov cmp jbe sub inc add cmp jl pop add hlt (bad) cmp mov mov adc mov inc faddl pop movl cmp pop mov cmp (bad) fabs fmull lock mov push cmp call sar mov shr add cmp cmp mov idiv mov mov and mov mov mov dec jecxz jg out push push mov mov cli and push inc sbb popa jo inc mov rorb cli jmp pop dec mov pop add adc int3 hlt hlt ja jl dec mov not pop sbb clc pop in inc unpcklps cmp mov jae test jp push and mov sub push nop fs dec or push mov push adc testl mov jb test jne cmove loope jb mov fcom out popf mov xchg mov cld add ret mov and sub cmp jg xchg psadbw dec xchg lea (bad) pop cmpsb xchg mov std imulb xor sub and ficom rcll (bad) mov pop scas mov dec subl or sub scas test pop add pop mov pushl cmp add shrl jbe outsl cld add les fisubl push xor cld add imul add in test cmp jle mov outsl loopne mov cmp jl cmp jg mov sub fcomip pop test mov mov flds shr add call mov jne mov push push mov fcomps ret ret cmp sbb cwtl add add mov (bad) out jb rolb rorb andb push mov add fadds mov or addr16 mov add jl cmp jg repz add dec in pop mov arpl cmp pop mov inc (bad) pmulhrsw or insl clc xchg scas jmp sub mov and add push or lret or stos test (bad) adc dec cmp jne ja mov lahf or push (bad) jmp cmp push fcoms loop or add call mov leave cmp sbb neg ja push xor (bad) mov leave jle cmpb je movb add call outsb (bad) add push add sub fwait push push or cmp pop mov or mov aam add lret mov xchg cmp call and rolb imul push jg sarb fsubl jo jmp mov mov jno push lds jg cmpb pop fsubrl pop push int3 pop cltd scas rolb in sbb dec cwtl test pushf sub je decl sbb jle xor push mov mov push push sub fdivs or jno fcomps add stos jno sbb mov and and sbb jg push dec dec pop push mov add lds test add jl dec push add ret pop insb fnstenv ss jl mov add jne ret adc push popf rolb out fild cmp mov jmp test and movsb movsb jnp in nop nop iret xchg fs stc and jo and push push adc fistpll sbb test out add test (bad) insl jbe adc jns jae or xor adc or adc add inc xor xor pop es ds lcall and je cmp adc mov adc lock cs mov inc call adc push push push push icebp cmp inc and push call fldl jbe iret add iret sbb adc sahf pop xor jmp cmpsb adc inc mov mov aaa inc and push push ja lds mov out push jae mov push push mov gs push jbe je test adc testl mov push and fucom bound and inc (bad) dec movsl adcl pop dec or mov push mov ljmp push call push call xor lea (bad) or cmp je push pop jne daa push cmc adc add xlat mov push rcr inc fiadd push push cli imull outsb push or rolb cmc ret pop adcl push fistpll call in enter push call or and das bound dec xlat inc push push push push pushf push enter dec cmp or push mov push call lcall adc push lods add test test add fdivrp jg leave cld pusha add add mov stc jnp fsubl adc mov sub lret adcl test btc xchg xor inc mov inc xor jne or mov xchg popf push nop dec mov out mov mov jge leave fist mov sbb (bad) ss or out (bad) decl push je xor ret pushl pop inc nop pop ret sar insb cmp or lods or data16 andl mov xchg add aad lret mov fisubrl xlat rcrb xchg (bad) jmp call dec cmp std add ret and xchg mov adc cmpsb or jno call jmp xor inc out dec pop adc sub rcll and jne jno in scas adcb pushl aas (bad) adc outsb cmp pop ret das gs xchg daa dec hlt addl rol call mov mov mov pop ret in pop ja das ret inc and fwait (bad) ss add push sub xorl dec cmp dec push mov jg inc and cmp jbe mov and or inc and and cmp or or xor adc add dec es pop mov lea cmp jbe sub mov and out lods add jns mov mov jnp mov add lcall mov xchg add fadd pop ja push frstor add enter xchg mov mov jl mov inc or or inc sbb jbe jbe jns dec mov (bad) mov add jne pushl jno test movl andb add rol dec ja mov pop popf pushl mov cmp andl xchg popf call adc std sbb or push dec aad les inc pop ret pushl add xor jns push mov adc mov in pop mov jne mov sub push loop rolb push call ja mov jne call mov push jmp push lea adc push inc pop mov push push dec movsb out les or push mov push sbb jg sti aaa pop add push call jmp push sub lock call mov push cmp incl movl add add jg dec push pop pop pop pop xchg mov jb push decl mov and lods neg jmp push cmp pop sbb add xor push or inc adc jb test adc add push popf cmpsb (bad) xor push push lea imulb sub or fisttpll leave xchg sub add clc decl cmp je mov push call (bad) (bad) decl sub jne mov test je cmp jne cmpb jne arpl aas (bad) push pop mov pop pop imul (bad) jle add jle jne sub mov mov mov push mov (bad) cmp das mov cmp sbb sub andl subl xchg dec lea std mov pop lea in push mov mov call pop lock add int3 xchg inc lret sbb int std adc add mov pop inc and aad hlt rcrl inc pusha mov add adc push mov pop movsb cmp movsb mov lock (bad) std push pop mov nop cmpb je push das je mov sub out lahf and pushf mov push or jg in add add ja out in push push popa mov lock sbb add lea jecxz pop xchg add sbb cmp push dec or sbb popa or in sbb fsubrs loope inc mov cmp mov add ss pop test mov je test sarl mov jne pop out sbb popa mov sbb and (bad) call ret push decl nop (bad) jle jb adcl (bad) jecxz add fs cwtl js mov nop push sub jg jno push fnstcw add dec inc (bad) mov ret push xor cmp call call je xor cmp push subb rolb add daa add clc cmp je mov sub push push call cmp mov push repnz or cmp addr16 mov adc in imul in push mov std jmp mov mov sbb lods mov xor aad sarb push scas jg xchg aaa cld cs adc adc jne cld mov and lock or cmp jle mov (bad) mov or cmp jl cld mov pop std add adc adc inc adc jmp call inc or je sub cmp notl lea push adc iret cltd mov jmp add pop paddsb push xor leave sub (bad) (bad) xor push inc add out pop sbb or or idivb fidiv cmp jb (bad) aas sti ja push push push push call mov mov push mov fdivrp (bad) loopne or (bad) lea lea movsl movsl movsl cmpl push xchg incl movsl pop mov mov pop jb add push adc pop mov nop pop pop xchg mov mov pop imul in pusha je call jmp xor dec mov gs inc cmp rolb mov repnz dec and xor orl lea xlat push ret addl andl mov adc add push jb lds adc jo or dec add push call pop xor adc pmaxsw xor inc dec push andl les pushf stos xor incl lock lea sbb and dec popl repz pushl (bad) jg cmp xor mov dec mov imul test lea jl inc mov decl or add push dec jne mov push mov pop paddusb test fldt cmpl pop leave ret mov add sbb popf ret jl or icebp test je push ds dec orl mov cs sbb lods xor in test add in (bad) push mov sbb mov jg add into push xor pushl sti testl or sub add fsubs jae fldcw es xchg adc jmp xor or stc add inc and cmp inc les mov outsb js mov jo sti into add dec ret push test pop inc sti testl mov add fidivr ret cmp (bad) test test pop push push iret call nop (bad) mov mov mov std sti ja rorb loope add mov mov roll push mov jne push (bad) in out xlat test mov adc into (bad) xor (bad) mov popf loope pop xor mov mov subl lret mov lea mov mov mov mov testb je movzwl jmp push pop cmp cmpsb or pushf push ret sub mov add mov mov imul pop pop ret mov call cmp mov sbb push mov cwtl sti dec mov pop and xlat ret int3 add aas aam pop push mov xor popl (bad) inc or repnz inc jg jg cmp je add ret int3 daa add fstcw sub stos fwait scas daa push aas add dec adc es pop mov pop flds lret out (bad) (bad) decl repz mov xor cmp ja je dec dec not mov pop pop pusha jg xchg in and call inc adc outsl loopne movl push lea pushf movl sub xchg decl mov js mov cmpsb icebp push pop or mov (bad) aad leave lret jle (bad) mov (bad) (bad) decl imul xchg fildl movl mov jmp jno cmpsb push movl fnstsw mov mov (bad) (bad) out cli cli pusha add mov jl cmp jg add pop ret push mov stos loope add xchg dec cmp cwtl or add xlat push int3 xor adc pop push mov fistpl inc and sbb sbb pop jmp sub sar ret popf cmc push cmpl into adc xor jb mov jbe mov mov xchg mov mov sbb add fistp and pop add push push cmc into lret divl lcall jmp mov mov and fiadd ret jmp mov decl movzbl testb je andb push mov mov pop jmp sbbb ljmp or pop push push lea push ffreep ja push pushl add imulb lcall cld jmp add cld shl or mov add std bound movzbl push leave fwait push mov mov inc inc jmp movzbl inc cmp mov je psubq add add xor inc or add add fadds fdivl loopne cli (bad) mov fwait lea xor iret cmp mov jne neg pop pop pop pop cli pop jmp pop add ret lea add (bad) xchg or push mov mov imul stos pushl or fnstenv push adc or push sbb jecxz push or mov mov decl lock xor xor xor xor add and or and jne cmp faddl pop xor ret mov cmp je test je cmp je fwait cmpsb jmp out call push aam cmp in xchg pop pop mov (bad) aaa ret lea push cld shll push push dec jge mov add cmp jbe cmp jb (bad) aas test jne shr and cmp jb rep jmp test inc add sub jb and add jmp jmp mov rclb cld add jg pushl and mov mov mov mov mov push mov add andl int3 lea sub fincstp (bad) and add (bad) cmpsb and pop ja and mov lahf imul insb sar fwait cmpsb fs mov mov pop call call hlt aaa dec (bad) xor clc clc cld cld lea adc mov clc or lock xchg jmp add jle pusha mov mov adc ret in mov or ret sbb lea jg jb std rep cld ja sarl neg gs inc add pushf jnp push stc sub and dec xlat std sub pop or mov rorl cmpb dec loope out pop xchg and out jge mov sbb loope cmp sub sub jb sbb cld add rorl sbb dec xlat xor aaa addr16 pop sbb xor (bad) xor adc adc xor rorl or jmp repnz push dec pop add outsb or or xchg paddsw adc (bad) adc mov mov cwtl sbb push inc outsl sub mov mov push (bad) (bad) mov push out mov adc lock cmp lock test (bad) pop add fstpl fldl fstpl jbe,pn mov jle cmp jle ja xor push and insl rcrb mov mov push fldz and or pop clc push or add xlat mov daa faddl pop cs clc fldl jae sub fist sbb push push cmp cmpsb add jmp adc cmp or loopne jne mov fstpl or sbb sub sbb sbb gs adc inc clc in sbb shll add inc add cmp je fcompl cmp testb addl mov das mov push (bad) fdivrs pop sbb sbb sub add push xor loopne push cmp pop mov je fmul in add test dec rcpps pushl mov cmp call faddl jne sbbl push leave pushl fsubs dec lock cwtl xor pop call mov dec mov loopne and rol sbb mov push cmp je lock sbb adc sbb les sbb xor aaa dec inc xor xor ja out cmp pop sub mov lock ss xor mov lret popa jne ret add lea and (bad) mov pop mov cmp ja sub mov shr add inc pop fwait mov sub xor outsl mov rorb lock pop cmp and inc mov add mov fs mov mov mov pop or sub pop (bad) arpl mov jmp imul add std sub fadds inc inc jnp test push mov cmc inc mov add fwait cmp sti mov bound mov mov sub loope pop in add pop dec sub jb into icebp scas cld lea rclb inc adc jne mov xor mov xor cwtl mov xor mov or inc lock mov xor iret fmull dec jb inc in lea mov sbb push repnz mov lret mov leave lret push push pushl pushl inc aad or sub jo cs (bad) and xor andl cmp clc movl sbb cmp mov call sbbl add cld lock pop div mov popf fmuls int3 cld dec aas cwtl cld test inc aam inc rclb cmpsb out ss pushl cmpl gs add xchg mov (bad) je mov data16 dec jmp mov (bad) inc int3 xor out or mov daa and ja in cmp push add (bad) out mov pop jmp push adc jo decb aaa adc add add in dec cltd jle js add mov xchg nop pop or std arpl mov jmp dec je scas dec push mov mov mov mov mov cmc fwait jl cmp pop jg pop and stc add add cmp jecxz inc jg jge cmp jle pop idivl inc cld xor jge mov mov inc mov mov mov cmp out mov or add lock pop lea pop call lock sub mov sbb add push lock mov testl push in repnz scas xor jecxz,pt push push sub call add add sbb mov mov cmp and je lea mov mov mov cmpl jne (bad) jg sub cmpsl xchg xchg call jmp popl push mov xor fs (bad) fistp leave cmpl push or push or push or fwait adc ret push push mov or (bad) (bad) (bad) out dec or or pop ret int3 int3 push cmp fstl (bad) jb mov add add (bad) pop jae sub mov test mov mov push daa loopne ss or lea outsl dec cmpl jne mov mov or je mov inc mov inc cmp je sub cmp jmp in lcall leave and add add xchg push cmp je sbb sbb movsbl pusha add shr lock add add incl add adc push movl mov addr16 jg lcall xchg sti rolb cmp je sbb sbb mov pop or or and jne dec es incl mov cmp jae cmp jae shrd push fnop call ljmp loope shr pop xor mov push movl xor (bad) (bad) clc std xchg push adc add jbe xchg lret enter scas or inc pop jbe inc sub pop or (bad) cmp jne mov push mov call sbb sarb pusha clc inc and mov cmp pavgb lock jge and and test mov push push daa jle jecxz push inc lret add cmp mov cmp je mov dec xchg cmp jb mov (bad) (bad) (bad) push push pushl nop lahf in sbb mov inc fdivrs fdivrl mov jge jne lahf push push xchg or push inc add mov push push inc push push and dec adc xchg ss sar fwait cmp jne pop add popf and push mov jne stos cmp ret addr16 jne xor dec mov outsl jo loope pop jne adc notl push mov jbe push xor roll xor adc push dec and inc cld arpl rolb jmp jae mov shr mov aam jne inc out jo jmp fwait mov jmp push cmpsb loop cmove or mov shl mov ja test incl sbb adc jmp scas push pop cmp nop and and or sbb xchg jmp je push adc insb push jecxz dec dec sbb loope hlt xchg pop xor sub das or cmp jne push and xchg or jne xor mov int3 push inc xor pop inc xor aaa sub sbb lock inc or inc js test or cld lea mov mov mov (bad) ffreep jnp sbb popa lea cmpl je push push lea call jmp sti fstpl inc or je js and loopne movsb pushf sbb les ss add lret inc (bad) jb add mov cmp mov sbb es sbb mov adc adc aas pop out loopne mov sub or or inc sbb mov fs sbbl test or jge inc mov neg neg jne cmp fadds mov xor mov fstps jle add adc (bad) div mov out lcall inc or (bad) adc push and sbb (bad) ljmp sti ffreep ja lock lds mul add jb cmp loopne (bad) mov cmp jbe dec xor mov dec jne neg neg sbb pop negl sub adc mov or adc fstp fisttpll enter or add loope push mul jb pushl aaa pop adc mov mul add pop sbb sti push push pop mov adc movsl rorl loopne (bad) jne mov call cli roll pop (bad) or push rorl xor popf fcos inc or inc xor je dec je adc jg pushl sub jb push mov shl add push adc fucomip pop pop add je and sti addr16 pop ret daa jmp aad and (bad) int iret enter je out mov pop and jmp sbb jmp jmp cwtl and inc fwait pop pop lcall sbb jmp pop jl xor or outsl ljmp bts jmp addb (bad) out inc mov adc bt jae mov cmpsl pop loop jg jle push push test je push push mov mov test mov jl adc shr jne jmp sti mov inc dec idivb test je pop jne mov sbb je and (bad) lock sbb mov jmp adc je icebp out in jne cmp jne pop unpckhps fistpll add dec je repz cmc mov add sti lcall mov je test je test je pop loopw sar (bad) mov jmp and jbe dec push push add rclb rorb insb testl dec jne mov test out add adc clc sbb fisub mov fs mov sbb pop inc cmp je fistpll or test jne pop pop pop xor ret lock (bad) call lock lea mov test je mov add cmp jne mov pusha idivl incw jmp xor xor ret mov lea or mov add xchg sbb adc adc jb jbe adc and (bad) jne pop cmpsb inc mov inc and imul xor jmp sbb mov nop enter add xlat fwait xchg lea push or or or jmp and pop or dec jns pop inc int3 ljmp push adc std pusha aam or mov lea push clc inc pop ja je or out mov test pop je rorl in pop rcll mov leave cs add shrb adc push cwtl fstpt or add lret pop jl stos ret and je or or add stc adc xlat sahf scas push push (bad) add cmp jne sbb outsl cli push call and add pop jmp mov in push mov mov push mov mov push lea cmp jb jecxz (bad) mov add (bad) jae pop push xor rcrb int3 or add insb pop std jle fistpl pop or lea or pop ret push int3 inc loope fdivs pop or scas clc xchg fstl or or in pop ret rcr add lahf push and add (bad) je xor (bad) ja ja push mov lods sub add rcr jl fwait inc dec jne mov shl add push adc and (bad) je fwait mov cmp and imul cs cmp inc out mov arpl notl push push mov (bad) repnz or cmp xor mov ljmp push inc inc dec je mov mov cmp jne mov mov or (bad) std incl jo add pop pop ret mov and sub cmpsl ja ja je mov mov and or shr or add cmc (bad) sbb pop xor jge (bad) (bad) mov sha1msg2 dec je cmp jne dec je and cmc fdivrl cmp jne dec pop mov add add (bad) cmp out mov dec push (bad) int3 push nop bound mov mov and sub mov pop ja js inc push mov (bad) pop xlat mov test adc pop (bad) xor add xor in outsl add aam (bad) insb and jne mov lock pop pop add loope popa nop (bad) (bad) mov nop jae nop popl or jmp or xor mov sub mov (bad) mov jo and daa mov xlat stos mov xor xor xlat pop test add dec lods mov xchg jmp push gs insb mov loopne call cmpsb clc or xor xchg inc add test movsl xchg out pextrw mov fistl fcos sbb lret cmpl lea je adc decl mov inc inc test jne sub sar dec dec cmpl sub add push push jne lcall xchg mov mov jbe sbb int3 xor movzbl test je movswl testb je inc jmp movzwl movzbl (bad) inc shl or cmp je jmp movzwl cmp je inc jmp inc mov in cmpsb mov jmp or or or jge inc or inc sub (bad) not and pop pop sti (bad) jle pop movsl movzbl mov inc test je inc lods fwait add (bad) push xor cmp push push (bad) std jmp xor dec or movzbl testb push fldl faddp add adc mov sub (bad) popf jne fstp call lea jmp test jmp or jne inc loopne add xchg pop mov pop pop pop sub inc or and push mov jno je scas dec fs sub xor (bad) (bad) je push add or mov leave sbb or cld add aad cli push push test push mov decl cmpb je mov test jne push stos mov arpl sub push movl mov push pushl test inc add inc adc cmpl jne pop lock cmp lcall test jne cmp sbb mov (bad) cmp jne xor jmp cmp jmp dec pushl pop pop jne mov jb or mov (bad) jg movsb insb cmp pop jb cmpb mov or jle ja adc mov push sbb andb inc inc jmp push or andb andl cld jg ja mov mov or or mov testb add sbb ret or (bad) fist or lea mov inc cmpb jne mov decl sub pop sub cmp jb mov push cmp sub or and into loopne pop (bad) pop orl or andb mov test je cmp jb mov ds mov push jge das inc sub cmp jae mov push pushl push pusha ja mov and add sub sub and pusha dec fcoms mov cld pop pop pop or ljmp mov pop sbb stos jne cmp jbe (bad) adcl out sub adc stc push data16 out and gs fwait adc add adc fwait adc mov (bad) cmpsl cmpl pop fadds add mov mov test mov mov js,pn xor std (bad) pusha (bad) mov push push sbb out add push pushl (bad) jg add jne push mov push lea (bad) fdivrl fwait popa add aas cli cmpl jne jmp xchg mov mov adc or sbb arpl push inc (bad) push jne jg inc js push jl mov sub mov jne jmp loopne test or mov cmp jne rolb lea inc enter or mov shl push cmp test push jecxz add fnstcw fimull jp xchg test pop fnsave aas je incl outsl stos rorb and pop mov call div stos ret test je mov (bad) mov je add inc cmp lea push push call mov cmp jne andl (bad) out sbb add jne rep stos mov xchg xor (bad) ja cmpb je out mov test je inc jmp insl mov movzbl cmp ja inc xchg in xlat jmp dec push dec lea rep adc das imull and je xlat idivl movzbl fnstcw (bad) ja mov mov ljmp nop inc inc cmp jbe inc inc cmpb jne incl add cmpl jb jo pusha adc movl loope adc cmp pop mov mov jmp inc jns add test (bad) decl cmc jmp inc cmp stos sbb mov div xor pop add rorb stos jmp loope out ljmp packuswb js imul or xchg jb (bad) (bad) fstl cmp jne movl or clc std adc and std inc cld jne mov cs (bad) pushl sub sub je sub je dec fbstp add add ret mov or pusha xchg sarb rclb iret pop lcall adc lea ret xor inc adc scas (bad) ljmp inc mov inc cmp jb mov (bad) mov cs aaa push push lea movzbl cmp cmp ja sub lea inc stos clc sub xchg inc inc mov test jne xchg push lea lahf (bad) jp mov mov push mov inc and leave mov push push pushl (bad) fadds xchg lret bound push mov negl les lea test je add cmp (bad) adc mov test je sbb out fnstsw and jecxz mov inc in jmp faddl mov clc inc jb cmp ja xor (bad) (bad) adc mov clc popa jb cmp ja sbb and and loopne dec mov cmp dec jae adc shrl adc mov and lods daa pop pop mov xor adc stc inc jl (bad) out mov rorl jl cmp jle mov (bad) push cltd pop idiv push add mov cltd pop pop mov mov jge add dec or (bad) (bad) (bad) fnstsw mov test mov jne cmp jle inc lea imul xchg cli add ret add pushf inc icebp out (bad) jg or rorb leave jl test jl test jle add (bad) jge shl adc adc xor cmp setne mov push nop test and or orb dec rcrb into imul inc cmp adc mov add xor lds inc insl inc ja (bad) jne mov inc adc mov jl test fcmovbe jl sbb (bad) jmp test jge test jge pop je mov (bad) jmp add lea mov nop std ljmp cmp leave jg jge cmpl jle mov push negb push xor lcall repz or movsl jmp or lods cmp xor fldt and jge and adc adc push mov (bad) (bad) fcomip test mov mov mov mov cltd idiv mov imul or repnz (bad) sti ja cmp jl sub inc push adc lock or add (bad) ljmp pop mov mov cltd mov idiv mov sbb rolb aas incb lock jne mov push pop lea cmp jge inc add jmp jmp mov inc adc sub mov or add mov cmp rolb ret std ja orl inc or lock lcall loop,pn mov add sarb andl mov mov in mov ds mov loope decl push cmp jle cmp jge sub shll cmpl clc test mov je pop jno test jmp loopne xchg sub movl mov addr16 fstl pop test mov pop je sub insb push push outsl pop cltd mov idiv test mov jge add mov sub or inc add or into (bad) ja push add or add push stc pop fldz outsl in add and and jge inc push or decl stc add mov push fcomp incl add pop cltd idiv mov bound inc or sbb (bad) pop fadd jbe jge and inc jo pushl mov pop decl mov movl adc ljmp icebp lcall pop decl mov cmp rorb cmp jb cmp jb add clc cmp ja js cmp pop inc mov mov or sbbl jb cmp pop jmp popl sub add ja mov and or push das inc jg dec mov jbe in cs jne je or ljmp sti add imull dec jp xor sti add test pop mov mov mov or dec push mov cmp jne int3 mov (bad) mov sarl lea shl mov add andl mov xor sarl pop or add iret popa out inc jne movl cmp mov xchg por cmp xchg xchg cs in out (bad) das push cmp cmp out pop pop pusha pushl push call pop mov pop pop fdiv mov call cld mov and or lret ficom push and (bad) call flds ret lea lea adc rorb jae cmp jne lea lea cmp or or je fldcw push mov and adc es push aam call (bad) jg aaa cmp out or and inc jmp cmp jbe inc cmpb enter ja mov add and inc add mov fild pop xor mov cmp je cmp je inc jmp lcall jns insb pop lea jmp lea scas outsl mov cmp mov test fisttp mov cmp fild insb mov pop inc cmpb je orb fistpll mov cs pushl aam in pop add pop add cmp jne (bad) out mov push lea mov pop pop movl pop mov cmp das mov loope cmp sarb mov pop mov cmp je mov lea push incl adc sti ret (bad) clc mov lea aam les cmp mov mov add push jnp lcall xor dec mov mov lret (bad) mov adc push sub incl adc jge clc add cld (bad) mov mov add mov cmpb jne mov nop loopne ss push (bad) jno sti fwait js incl inc push mov mov inc inc or in fisttp add add inc inc jmp adc aam insb add movzbl testb int aas add inc and cmp jne test jne (bad) ffreep add divb incw andl cmpb mov mov cmp je daa add out fsubr icebp pop cltd mov cld push adc add inc adc xor cmpb jne inc inc jmp xchg pop cld (bad) ljmp ret add xor cmp je cmpb lea jne inc add (bad) mov or sarb push sbb xchg ret sbb jmp rorl (bad) je std (bad) mov push pop inc incl dec jne mov cmpsl dec cmpl jne jne (bad) mov je cmp sbb ret push pop cld jmp jmp inc jo inc add adc sbb cmp inc (bad) mov movl ss (bad) (bad) incl pop ret push push mov push push mov xor xor xor icebp (bad) (bad) (bad) cmp jne call mov cmp je movl int3 cmc ja mov cmp je dec std sarb (bad) frstor inc or je push mov je inc inc (bad) fnstsw sti cmp jne push repnz mov push push inc push push push push movsb incl mov xlat mov cmp je xor and je push push push push pushl and mov or daa sti (bad) jg pop and mov push call mov jmp cmp jne cmp jne mov out ljmp je cmp mov je inc cmp jne add sub inc mov std adc sub push push pminsw aas cmc lahf in add push call lds pop pop pop pop fiaddl xorb lret in test test xor jg sub xor xor movl lea push andb orl (bad) std sti push out inc add (bad) and pop jmp lea mov call jge xchg sarl popl sub ss lcall lea mov mov jl cmp addr16 mov cmp xor push lea pusha (bad) jle aas mov ljmp mov add add fcomps mov push mov testb lcall stc pushl add or push call (bad) incl into mov sar and mov lea (bad) ffreep fistp or in cld add inc cmp jl xor mov and cmpl lea jne test movb jne push pop jmp mov out sbb dec pushf add or cmp cmp mov and ret mov in orb jmp mov std lock or jmp add add xor (bad) aas cmp inc ljmp rolb clc push add shll je imul jne out fild push pushl daa loopne sub mov pop call add push mov pop mov dec add inc push xchg inc add pop push jb ret push stos sub lahf cltd cld inc mov call enter insb es mov jmp push pop pop in pop orb aas test add cmp (bad) (bad) lcall adc dec cmp leave je add mov mov mov mov pop xor mov xchg lods lea imul pop pop jmp (bad) fistpll (bad) sbb incl jne cmpl (bad) ljmp push inc dec mov in (bad) ljmp adc add faddl mov je ss lea je mov cmp jl mov jp add and jne inc push push push (bad) xor xor sbb enter lea mulb testl lea in or push inc enter pop cmp jle sti ret je push or je inc mov add loop decl cmpb jne mov jmp repnz repz xchg add stos in dec je dec je (bad) fistp daa mov cld push pop sbb add inc add push in shrb push dec sete mov sti inc add inc mov dec jne push add dec icebp mov dec test jne push mov jo inc ds ret gs mov lahf jl and cmpl jne push xorl lods jno add rcrb adc mov push or leave mov je (bad) test pusha ret mov shl cmp cs mov call cmp je jne es test push lea lods cmp insl xchg xor pop int3 xlat inc jle inc test push lea xor cmp jbe sbb movsb insb mov call clc push fild fwait cmp les lea adc andl repz adc cld or fmull jnp test cld pushl imul (bad) das cld push adc daa add movl lea lea rclb outsl call ss dec hlt or ret pop push push icebp mov pop adc ret aaa push push test jne mov test je or mov mov push and (bad) out (bad) out or test adc loopne pop add incb call push test pop ljmp pop sbb testl mov mov sub bound mov dec test mov jle push xchg add out stos mov jmp cmp je mov mov jnp cmc sbb jmp mov add je clc out fmul dec outsb add cmp or add decl imul cmp pop je orl jmp sub adc mov jmp or ret sbb xchg sub sub aas (bad) sbb dec lock inc test mov mov mov pandn pop cld test add mov or adc bound adc mov and sti js push movsbl mov (bad) ja adc mov sar cmp mov ja jmp and test inc add rolb rorb inc inc (bad) fcoml mov movsl (bad) addr16 (bad) (bad) out dec sub je sub je sub je dec dec je or push add inc orl (bad) or in aas in xor sbb orb adc call cmp jne lea ds push insl jge fdivr (bad) aas out daa mov movsbl lea lea jmp andl nop into sbb clc jge and mov aas mulb mov dec cmp je cmp je cmp cltd sub pushl sti ja test add pop jg mov and cmpb jne cmp loope jle xor push inc inc orb xchg andl aaa add mov dec inc inc add pop cld xorb in ret (bad) outsb fs jecxz mov sbb sbb jg out bound cmp jg gs mov jg or mov je outsl call call daa testw jne or addl hlt jge (bad) mov mov pop and call and or enter je mov fs scas add rorl aaa jg aam xorl out inc rolb ret out (bad) mov add decl int pusha out and inc clc jns ret pop scas movswl adc movsl je scas (bad) pop (bad) fisttpll add test mov test jge movl pop jmp sub je sub je dec je mov (bad) ds mov sti adc out or push lds outsl loop ficomp je mov movsl sub out je movswl shr jecxz out sbbl enter fisttpll ret xor cmp jne rcll cmp jle mov cmpl jecxz in pop add mov cld out sub hlt jmp ss jne or or loop mov (bad) aaa cld mov mov out push lea push adc shrb out mov cmp je pop jne mov dec jge jo mov adc jle lcall test inc jnp cmp pop (bad) arpl or ljmp test or test scas dec rcr rclb mov adc int3 cwtl or push ja cmp inc sarl mov cmovge adc cld je cmpb je sub and ret ja cmpsb and cmp cld adcb add inc int3 movb add movl std add and je or jmp mov (bad) fbld or dec in mov jmp pop mov jo pop xor imul jno pop negb std xorb pop jmp icebp jne inc cmp adc cld push sub mov adc mov jmp and cmp and and (bad) pushl out pop xor sbb sarb jl test jae into std ret push fadds loopne fisubl in push or jle jne repnz cmpl andl mov clc out jmp inc clc mov or sub add (bad) (bad) das decl test jg sbb inc lock mov mov push push (bad) jbe mov or fdivr addr16 pushl add dec cmp jge add pop int3 mov decl hlt mov jmp push sub fucomip jle stos dec hlt cmpb jne jne and mov (bad) mov xor cmpl jne mov ret inc je test je mov ret or jmp iret sar or ret add and sub sub lock std lock jne mov (bad) aad std ja dec in inc ljmp or push mov imul adc pop test xor xor inc das mov cmp mov lea mov inc or push inc pop rorl pop jle in hlt cwtl mov pop pop outsl pop mov dec sahf mov push shr adc mov ret sbb cmpl out (bad) rolb je pushl sub add jne push (bad) aad mov mov inc in sarl std add add sub xor push mov mov decl js mov mov mov sarb mov jmp push stos pop (bad) call clc dec adc orl pop ret add negl jmp loop mov and push incl fadds mov inc jl (bad) cmp jg push mov (bad) loopne ret dec fstpt mov xor stc movsbl push inc lods ss pop (bad) out ret dec push loop and cmpl add or mov push (bad) mov sbb dec jo dec incl mov or jmp aas sbb add fstpl fldl inc lock fmull addr16 lock fsubrl adc ja fnstsw sahf jbe push leave ret xor leave ret push pop add in push add mov sbb jnp rorl lahf lret mov pop je inc inc outsb nop add orb push aas dec add mov (bad) decl mov mov inc mov mov mov mov inc test jne pop loopne mov sbb or lret mov inc hlt mov push jg std mov or stc inc in mov dec cmp (bad) incl cmp jne dec mov inc inc test mov jne dec fldl je pop test jmp jbe push push xor jne je sar jg mov sub mov mov mov mov leave ret sbb push adc sbb lea push fdiv fs push frstor clc pop aad fstpl push cli mov daa (bad) mov or inc add jge sub leave test setg add cmpsl fdiv rolb lret andl adc adc das out leave inc arpl idiv aaa cmc fstpt pop sbb push mov je xor cmp setg push incl fistpll dec add lret jecxz pop cmpl aaa cmc (bad) mov jne movb lea and add mov mov ljmp push fnstsw enter test repz cmp icebp enter add incl xchg inc inc cmp pop add jns neg movb inc cmp idiv jmp mov push cltd pop idiv add mov cltd idiv mov push or enter add add les jbe inc fdiv or hlt add shlb add dec add sbb or push lret (bad) pushl add adc inc add cmpb je cmp jne lcall add movb andb adc sti sbb sub popa adc push std aaa pushf imul pop xor jmp add pop (bad) (bad) cmp pop mov mov inc pop test jge outsb call neg jmp neg cmp jl (bad) pushl add fcmovne inc or or pop sarl sti push cld daa xor fcoms inc hlt mov lea rolb mov lock pushl jo add add dec cmp setl cmp lcall cmp jge or test jne and cmp add xorb sbb add xchg or out cmpl xchg jge adc je or adc lret cmc test jne pop push sub (bad) jmp call adc push ret or (bad) jne sbb or movsb insb inc push push add (bad) mov adc ret push mov loopne xor pushl sbb ja (bad) (bad) out incb push cmpl pop jne push out xchg mov xor adc std sti jg test pop pop int3 xor jne call push sub pop fstps pop pushl call cld pop xchg pusha call ds mov push test mov xor cmp jne les jo push push push pop push push cmp jbe push sarl or inc iret std and push push sarb loop test test add adc ja sub cmpsb push sub pop push je sti pop mov mov sub fnstsw or aaa sbb (bad) or adc and pop mov push push leave mov mov adc or and adc scas fmuls sahf out ss aas mov lea add and sub mov push mov jmp sbb pop sti dec cld decl fdivl fsubl out js add test test cmovge xor call jne cmp je testb je cmp je mov cmp jg fimull mov cmp gs and xchg pop loop cmp mov mov ffreep cmp jmp mov fcmovnb jmp fbstp out mov lcall add sbb push push jmp mov push pop jmp gs cmp je jno andb lcall sbb fidiv lret add jmp mov loop sar (bad) lcall push inc push add incb mov mov push loop test cld test inc mov scas push gs aaa or jmp fiadd decb mov or inc or push inc or cld ret (bad) fsubs ret adc add jne mov and fldl and dec push clc pcmpgtb xchg pop mov mov push mov push addr16 cmp xlat mov pop pop (bad) ds jnp in pop cli lea das push (bad) icebp jmp xlat mov andl mov aaa mov mov (bad) cmp es fstl or pop sub inc sbb cmp and cmp cmpl popf xor sbb jmp dec out decl push push mov or inc nop mov (bad) mov or dec adc rcll or aaa aaa add add roll push adc add in add add (bad) and adc adc cmp xor test push adc (bad) pushl push dec push mov mov not and and shl or std out dec negl dec or shl and or xchg out test shr sbb jmp add iret and add mov test inc dec or add fcomip xchg or adc or test mov inc or pop or push mov xor out mov cmp sar ljmp add jl or jmp (bad) mov or mov jmp or add data16 add cmp cmp cmp xor or jmp or ljmp call inc cltd adc loope sldt mov shl jg xlat std and rorb daa or dec and xlat out out iret mov sbb add fstpl mov cmp jge mov fldl fstpl push xchg (bad) (bad) lea push push push movsb cmpsl sti out bound testb je andl or in cmpsl jns sti add add test (bad) (bad) (bad) jg mov mov and sub je dec je dec je dec jne orb jmp jg lcall mov and or jmp and or mov jmp and mov sar (bad) sti jmp xor dec je dec jne and jmp mov and or jmp and mov fldl fstpl mov (bad) lcall (bad) les mov and push test pop je test je fdiv fisttp push leave scas pop and push aam xlat push testb xlat add add adc xlat sbb add je je sub dec jmp and je add je pop or scas cmp test add fldl (bad) out call push (bad) pop add ja fchs fstpl fldl jmp scas sti cs pop sbb fldl fimul jnp daa inc pop add das daa push arpl fwait dec push outsl fstpl and fldcw add test mov adc test or (bad) lret xor repz lahf mov inc xchg mov mov and (bad) scas mov pushl cld popf lret lea cmp jge fldz mov lcall push xor add shr add rorb (bad) (bad) jmp (bad) adc inc cli mov cmp jge sub test je test (bad) decl hlt test je orb shrl dec jne test je jp sbb dec out sbb stos test pop je jl mov and testb (bad) mov (bad) and push out xor test pop pop ja pop cmpsb lock sub mov aad pop in push mov adc (bad) fild mov mov mov mov mov mov stos mov jne and mov lock xlat mov sbb in xor adc xor add nop pop fldl sbb imul mov pop aad fldl sub loopne mov adc cmp jg sbb mov and jmp xor mov cmp xchg sub icebp jl xor ret mov insb sbb mov jl push jmp cltd add (bad) out mov aam ljmp add movzbl xor clc and shl addr16 sti ss or jg cli cld mov and adc or ja and clc shl or mov popa sub rolb lock or push or jns jne dec into adc subl mov ja lret cmp jne jmp cmp testl jne xchg (bad) mov push pop pop ret xor mov jecxz or xorb out xor (bad) iret dec imul mov testw cmovge push addr16 or xor lcall testb jne shll testb je xorl decl add or out andl outsb jecxz or out push jo ss sub jmp (bad) cmpb ret (bad) mov add and lock add fstsw movswl jecxz in es or loop fstcw (bad) mov enter dec cld or mov fldcw and pop mov mov add sub data16 pop or loopne (bad) fwait or cltd out test adc roll add fwait sbb fdivs xchg fldpi sbb shrb fild test mov add popa add xor and and jg push mov xor std mov or lea mov cmp jae mov cli add adc jb add aad and jmp mov or aad jne inc adc or out adc mov imul add (bad) fild push dec test mov jne xor hlt (bad) (bad) (bad) decl clc mov test mov jne sar dec cmp jbe push pop mov jg aad cmp jne cmp jae mov jmp dec neg (bad) incl add shll pop mov dec or sbb and jnp sub pushf mov mov (bad) jmp mov mov mov mov add mov mov xchg mov push or pop sarl clc and hlt jne xchg sub mov sar push mov dec pop cmp jbe mov add ja (bad) dec clc mov inc cmp (bad) adc cmp je mov mov cmp jne cmp jae mov shr idiv mov je dec add jmp lea push arpl push sbb mov mov aaa or jno mov mov add dec or mov or or fimull test aad pop roll xor mov xchg dec add dec add dec or mov push mov xor sti dec paddd mov jae cmpb ds daa fistpl or or jmp jne and and std cs (bad) (bad) ljmp mov mov (bad) out aaa add test pop mov add or dec int (bad) inc inc add loope add mov push push push call pop addr16 mov pop or push sbb inc adc adc inc or adc or cmpl jne xlat pusha dec (bad) std jo call adc jo sub cmp adc cli pop sti shl mov sub enter in push lea cs mov decl out cmp insl or push leave (bad) and scas icebp out jg push sub arpl lea push lea sub decl jge lea and and stc add cmp jge or shr cmp hlt jmp add or xor shr mov fstpt mov mov jae and and jg insl jne add cmp sbb pop jne mov dec fsubr fidivrl fmuls jmp cmp jne pushf jecxz pop and adc sub in sub cwtl ret adc push mov int3 fisubr pop cli push je insl fistp mov mov mov cmpl arpl inc ret (bad) fisub mov cld call mov cmp mov je mov inc scas (bad) (bad) jg aaa mov jo and and andl lea or mov jne mov xchg mov inc cld sbb roll and or je mulps jmp lret pusha hlt mov jne (bad) (bad) out pusha pushw fs test jl shl inc jmp mov mov (bad) fcomip add or mov mov sar dec cmp jle pop pushl mov xchg cmp jne cmp jge out cli movsb sub iret shr xor pop mov and mov decb jne mov in and jmp lea push lods dec jnp lea movsb sbb (bad) jne sub add sbb (bad) mov dec or jns mov mov mov xchg mov jl mov decl or or popf mov xorl std (bad) (bad) and inc cmpb mov jne mov pusha mov or or jmp sub aad ds sub cld lea push test aaa mov test je mov cld (bad) cs mov mov jne add lea adc cld out (bad) pushl lahf mov test lea mov jne cmp mov (bad) outsl adc jmp add ffreep push xor mov push pushl (bad) jb (bad) je subl or lcall (bad) push push inc mov xor cmc ljmp (bad) mov je push push out loopne mov call jne (bad) (bad) ljmp fnstenv fs xor jmp orl mov mov jmp adc mov orl into (bad) fist in lcall mov xor test jmp fwait sbb push imul xor aas push jecxz cld mov mov leave dec jne mov push shl add xchg push (bad) mov shll loopne (bad) (bad) call xchg add add cli ja lea orl orl lea cmpl cld lock mov out (bad) decl call ds fsubrl cmp jbe lods mov dec or (bad) push pop mov ja std or fiadd mov jl inc inc mov inc test jp dec inc jne or or push and ljmp ret stos iret test or cli (bad) jmp or xlat lea sub jmp ljmp hlt sub dec cmp pop cmp mov jle add test add in push lock jg aaa popf lock lea push pop pop mov cmp jne cld sub push push jae cmpl jo fsubl pop nop icebp sub gs pop and hlt dec or std dec add stos mov mov sub add subl mov dec or incl aaa aad cld lea cmp pop addr16 mov dec lds sub pop adc add pop add dec or cmc fild pop mov sub pop jg and add and cmp or lea xor test jmp and xor (bad) les or inc test arpl shr inc push jg lea mov mov dec add mov vpmacswd push fninit inc jge outsl pop mov sub mov xor push call push ja fs pop testb pop mov sbb xlat pushl cmp jne pop imul je jns pop xchg imul jns cmp mov mov pop jbe,pn jbe push mov scas and adc jne mov jne xor push sub pop push add sbb cmp inc sbb or pop mov in or xor in cmp jg jns lea loopne adc sbb inc sbb cmc cmpl imul jne mov dec sub dec das pop ss insl sub je les pop outsl inc pop rclb aad clc lahf aad push adc ficoml incl dec div mov push mov cmp cmpl cld neg sbb pop jmp mov mov mov jne lea pop mov lea (bad) lcall mov mov mov xor mov cmp setge dec and dec inc jbe xlat mov setae pop adcl inc or add cmpsb mov jae orb mov movl daa add (bad) jmp xchg daa mov adc je mov mov adc andl ret mov pop cld cltd xor xor shlb inc and mov inc mov mov mov add movsl dec add push inc adc dec pop ret orl inc jo add decl test mov adc add add add jl test (bad) je orl decl mov je neg adc cmp jbe and or jmp (bad) lcall sub test jge and je cmpl jne push lea jns lds pop out inc push cli out orl nop pop cmp stos icebp jg pop (bad) lcall lcall cmp jbe cmp jb mov cmp je sbb out test jne mov mov (bad) outsl fistpll bnd mov mov add and mov sub add clc add inc or ret dec adc stc or inc enter adc adc adc adc loop sti movl add and pextrw adc out push pop cmp xchg je cmp fdiv or (bad) jnp sarl (bad) clc add loopne add cmp mov jae mov fdivrs lret jl cmp dec jge loopne adc and push jecxz xchg mov bound xor inc mov jb sarl inc or sbb jg (bad) cmp mov jae mov cmp jl dec adc push pushl out push xor inc cld lahf mov push std (bad) or jge jb inc cmp mov push out mov pop mov (bad) jmp in psubsb mov cmpl je cmpl jne mov cmp clc xor mov inc mov mov mov (bad) ljmp testl add cmpl jne add jge andl mov divb loope inc adc loopne push push mov pop (bad) jne dec mov clc xchg sahf fsubl (bad) rorb mov cld orb decb cld mov inc pushf clc lock sbb dec cld jne mov mov jg cmp jae cmpl je sbb repnz mov rorl mov sub sub xor (bad) sbb mov jmp movsl and mov mov mov lea jne out (bad) mov jne rcll mov sub lea adc cmc mov mov imul mov lea out stos mov and cmp jae add mov push add or inc or pop add (bad) push cmpb je mov lea cmp jae mov test jne cmp pop cmpb (bad) (bad) cmp jne inc inc jmp cmp jae cmp jne mov jmp or arpl clc push or (bad) cltd jno ret jmp movzbl add or jb lea cmp jae lea cmp jae ss lcall add inc inc jmp lea cmp jae sub mov jmp jno mov mov lods jmp cmp jae sub sti (bad) jg jb mov jmp movzbl add jmp lea aaa ret shrd push lea imul shl sub and es and movzbl (bad) jg pop xor sub sar cmp lea (bad) fs jbe mov sub mov add dec jge pusha jae (bad) jg out adc push lock lea cmp jae cmpb jne (bad) (bad) incl inc jmp cmp jne mov mov mov cmp ja cmp jbe sub adc rorb inc cmpb je mov arpl xor incb mov sub push lcall and mov pushl call test (bad) out mov pop je push pop ret xor sub jne push mov cmp js cmp adc inc add out test sbb add je sbb push jg rcl push pushl jne in mov (bad) decl fbstp cmp insl loopne sub js jbe mov pushl sbb dec or sbb push pushl pushl cmp in out test mov roll pop pushl sbb mov iret sbb out lcall andb mov sub std outsl push lock mov cmp jl popf jne mov jg push jne (bad) fistp add cmp jne cmpl jne mov add hlt mov faddl mov pop inc jo add roll ret inc in add sbb mov stc cmp jns pop out adc jg jle outsl sbb test and test jge sub inc mov dec push out idivl inc add mov cmp orl cmp jg cmp jg mov mov mov test mov jle mov mov arpl (bad) sti lea mov adc jle pushl pushl in clc (bad) ljmp sbb dec clc add cmp jg decl addl (bad) sbb mov pushl pusha jp xor add cmp jne incl cwtl out cmp rol adc and mov stos cmpb je or icebp rcrl fsub lds lock lock mov aad repnz testb imul and xor roll mov pop and lock jae cmp jl cmp jg sbb daa test rorl out icebp cmpb mov decl jmp (bad) adc test xchg leave ret push dec in (bad) lock loop je cmpb lea je pusha dec add (bad) je sbb add arpl repz or sub jmp testb je testb je mov test xor std decl add add pop add add call push push pop rolb scas (bad) lcall or adc jne je cmp jle arpl fimull or pop adc adc insb add adc repnz jae sbb fdivrl insl cmpsl out daa int dec mov mov xor pop jmp mov test ss fs cmp sysenter incb cmpl push mov add cmpsb sbb jge je and mov out std out cmpl mov add lahf es fnsave jp pop mov pushl outsb popa in mov (bad) jg mov push inc mov pushl sbb rorl jae pop xor enter aad or addb mov mov andl mov aas (bad) dec cs les mov lea jo sarb jge mov add sbb dec in xor xlat adc insl cli push nop pushf xchg mov cld and out dec dec out test add cmp insb out shll add mov shr xchg jge mov mov inc fidivr mov mov cmpl jae sub jg je sbb das mov push adc hlt and push xchg data16 and jg stos jne cmpl jne loopne in adc js enter and xorb dec adc rcrb mov je jg add je lea out call or sbb add loope (bad) sbb je add push cmp or mov cmp sub mov (bad) mov sbb jne testb je popf push pushl test add cwtl dec js sbb es in mov jle add test inc pop cmp jmp cmpl push inc insb add jne mov inc cltd push je push xor addr16 loop pop fadds je xor jg push push je testb je insl inc or mov test es xor sbb jmp movsb sub mov xor shl es test jne adcl addr16 fs cmpsb aas add jo pop shrb nop or sarb or xchg shlb mov adc fwait decb decl add test jl mov mov or add add pop xor cmp out push inc dec jle ja push pushl out decl ficom rcrb mov pop adc or cli push mov cmp add xchg mov pop leave ret mov xor mov and pop stos test inc pusha mov jmp sub cmp jg out repnz jmp jbe rcrb mov je ret pusha pop call jmp push repz lea push add call mov pop repnz or je adc outsl mov and (bad) jo aad and adc and sbb inc and sbb sbb mov test sub loopne frstor daa test inc lret (bad) in sub cltd jmp mov pop les mov inc (bad) mov add notl inc and (bad) jo adc push push inc cld decl jns jmp lea jmp lea jmp lea incl sbb je mov inc adc mov add mov das xor fiadd test je lods incl je pop push in sbb nop or data16 inc add cmp fcoms sbb pusha xor or test je add aam inc mov or adc loopne repnz mov inc add push call nop mov inc mov push adc cmp jne fdivrl decl add fwait push mov out fwait fwait add (bad) jmp sbb jge and push call add ja loop,pn ja mov dec add and lods cli outsb (bad) gs xor divb clc add jnp jle push rclb mov jle icebp jmp and cmp je mov lea mov adc hlt mov push nop movsb cmpsb loop ds test pop cmp je pushl cltd or sahf pop mov or into mov push sbb pop cmovns loopne pop lea sub sar popa add adc rcrb (bad) push cmp jge mov mov sbb cld pusha mov jne push push mov dec jg or adc mov xor icebp adc mov ljmp mov rol add or incb lea mov aaa je jne orl cmpl inc cmp jl dec add mov sub add adc (bad) decl (bad) jb cmp ja sub sar add pop lds cmp xor adc push leave pop sbb iret and adc and mov ja (bad) rolb push and lods fsubs out clc test jg les mov in (bad) loopne adc or test fndisi(8087 or adc enter add in fadds in cmp pop push idivl hlt dec in js (bad) scas add clc (bad) cmp int3 (bad) je pushl jmp xor ljmp (bad) inc aas fildl sub adc adc sub stc or out bound cltd adc push push inc rorl mov lahf push daa cmp ret iret or (bad) (bad) (bad) jmp mov inc loopne mov das ljmp lea mov cmp push push mov (bad) (bad) (bad) mov rolb stc (bad) je dec dec cmp jae mov mov mov mov inc int3 loopne clc dec jmp mov mov jb inc lahf jle cmp jb push int3 xor je adc stos aaa cld add and add setge (bad) ss or sbb add add sbb mov movl ja mov pop cmp aaa insb cld andb push lea push lea add push out pop or inc or movb call mov pop call inc mov das ja mov test jne cmp jg mov fwait pop test ja add xchg jle mov push loop adc cli xor add inc cmp xlat mov and add mov je (bad) mov adc sub or and push or xchg add mov adc add jmp push outsb xor std adc (bad) je mov mov testb mov je inc inc sbb push mov inc (bad) (bad) fmuls pop adc or add addr16 cli incb mov dec out je lea xor mov shr rep mov xchg (bad) pop pop pop ret cmpl sti pusha add jne push adc xor pop jne cmp in std sti aad add orl pop xor push mov hlt imull cltd incl sbb fisttp movl add aaa mov pop cmp jne mov sbb and adc rorb cmpsl mov sbb xorl cmp pop mov out mov mov imul add adc sbb loopne jo movlps rorl popf aas mov sbb fisttp cld mov aas mov repz push rcll jno pushl adc pop cld out std out jne mov add or and inc cmp pushl test mov jne inc cmp or add test sub xchg loopne jne in pop sbb out je sbb jg mov mov ret mov orb insb pop sti or add enter test pushf les andb cmpb jne movl add xchg pop mov mov imul mov cmp je cmp jl cmp jg fadds out cmpb jne sub mov add pop nop out and cld mov add or (bad) test mov lcall (bad) mov inc and jmp ljmp nop sub (bad) jge or adc fs pop (bad) mov fisttpll add inc adc add clc jne cmp js cmp pop adc mov and mov push push pop and jmp iret and adc push sbb or xchg push push push jmp sbb push mov adc push push jp add movzwl (bad) ss popa les push adc pop jne inc push into int3 jne sbb (bad) hlt (bad) or lret pop push pushl cwtl (bad) mov add inc jmp daa push clc (bad) sti mov and fstl push push push push push pop jae mov adc fisttpll inc pop mov add mov sbb sarb cmp jl jg (bad) decl clc push cmp jge mov cmp jl cmp jg cmp jle inc in mov mov add mov imul rdpmc leave std stc (bad) out cmp rorl pushf shr mov cmpl and mov inc arpl pop adc lock shl mov and inc (bad) (bad) jmp add imul push sar (bad) (bad) (bad) decl clc lea pop cltd idiv mov pop cmp jg imul sub add jmp inc sbb dec add jmp or sbb adc or sbb push mov adc into jle sub jmp mov ret add mov addb jle dec and sub (bad) push decl ss inc sub push mov iret cld add mov pop cmp (bad) push sub sub (bad) mov add dec mov cmp jl shl in sub inc adc mov pushw push mov fwait outsb addl movzbl mov test (bad) jmp mov sbb jl or je movzwl fist int3 or test jne ret dec inc and jo lret adc scas incb add ret adc push lcall mov lea mov orl dec cmp dec adc ret loop add decl cmp xor adc jmp cmp jne pop or aaa loope xchg test jl sbb mov (bad) ja cmp jg push sub sti xor inc adc pop jmp std aas arpl mov cmp je cmp adc pop mov cmp jne (bad) pop fldt jne pop add pop jne mov inc inc arpl fcomps divl mov mov (bad) scas xor lret sub jmp stos inc rol jle ljmp mov and jecxz orl dec pushl adc sub cmp jae mov in or jne jb jne sbb nopl lret add or jne jbe (bad) clc mov incl mov jmp outsb decl and or xor lock sub test or test jne fcoml ds je cmpl sub jne icebp outsl loopne jbe inc mov testb movl out fisubr (bad) jmp push and neg add cmp jp (bad) mov add cmpsb sbb add inc clc mov xlat adc or add ds leave ret ds push push add aaa icebp jne push call scas fnstenv js (bad) cmp mov push jne jle mov mov pusha js mov push call mov loop mov adc mov add adc ret xor jmp lock rcll cmp call addl or pusha fcoms inc icebp add popl adc inc jo sub add inc or andl dec push xchg movsb (bad) je or add lds pop sbb adc jmp push adc sbb adc mov cmp jne call dec push je add push lock jmp mov and sar mov lock xchg sti addl xlat add mov in adc add sbb adc lock pop adc clc ja clc clc add or loopne lea mov ret cmp sbb inc xor je inc call mov mov mov add testb je or bound cmp cld fmuls xchg ret cmp in sti (bad) decl or sub out std (bad) decl cmp jne incl movb inc mov inc mov lea stc cmc iret incb mov mov cmp clc lea push loopne jnp pop push push mov pushl call xchg add cmp jl enter inc into rorb mov hlt adc lock pop cmp je push pop cmp jne in decl sub xor inc mov inc or (bad) lea push push scas pop jbe nop jmp rcll loope dec xor cmpsl sub push (bad) ret xchg sub add inc cwtl inc or cmp sub data16 test (bad) mov cmp shrb inc lock incl es lcall pop lock decl rorb dec or movl outsb jmp or lea sbb push add rorl mov aam add sbb mov dec or sbb lea mov and ret or mov inc push mov or add ficomp dec push decl pop je jle jb or adc add ljmp adc cmp ja push mov pop pop ret lea add std or xor push lea adc push push outsl insl adc nop rolb push es xchg shll decb call and sub xor pop sub add das test mov sar decl test call repz mull mov inc adc call pop call inc sub rclb leave mov adc or icebp pop or fstl dec pop and mov inc and shrl dec lcall (bad) ljmp adc ss or dec push inc pop and adc pop add jl fcomip sbb and imul lret or call fldcw aad sbb decb and icebp or and pop pop ret jne xor push test push je push pop imul aaa add add iret add test or add ret and add add add ljmp mov mov add and mov push pop dec je pop (bad) (bad) jmp je or (bad) jne or jmp or jmp or and pop je cmp jle (bad) jne inc add jmp add pop pop test pop je add xor ret xchg push jp mov pop aaa pop xchg add test mov add mov jo sbb into je push or (bad) std or or mov and (bad) mov add or jmp or pop dec add pop je jg jmp push cltd pop idiv push popa inc and cltd idiv pop (bad) (bad) decl fsubrl lret call loop rolb inc cmp jge lea cmpl or incb jne inc add adc jnp loopne int dec push js (bad) int dec adc cmp push push pop sub lret push loope pusha ret pushl xchg push lock cmpsb jg fsubrp adc sub test jge pop dec mov (bad) (bad) push cmc js push sub pop pop decl add or add hlt clc lea test into shl test je inc push ret cmp inc push in add loopne jae jbe cld pop stos in push pop and clc inc cmp jge mov sub lea xor rep push fild mov push push sub ds aaa cld pop mov mov add ret lock getsec mov xor and mov add cmp jb jge pop or cltd mov into sbb pop add stc nop sbb adc lret sub not mov mov and (bad) mov or mov mov add loopne (bad) fistp pop in jne mov push pop mov push pop mov cmp jl rorl adc or jmp jmp sbb out clc popf mov mov or add push mov (bad) out (bad) decl add (bad) jg add clc shl cmp fcom (bad) decl notb jae add or pop adc (bad) mov pop fstpl add or (bad) sbb ret or or sub out mov inc add enter cmp jge sbb or aas fstpl cmp fdivrs sub mov push ret add dec std cwtl sbbl push and add xor ja add cmp jl xor jge pop cmc (bad) ja aad or mov mov aaa push cmpsl or push adc idivl add mov xor shrb aaa cld decl mov shl mov neg sbb sub icebp or cmp fdivr ffreep jne in mov mov mov jmp cmp jne adc leave ret push jbe xlat push xor xchg inc push mov fwait and (bad) jo pushl or sbb leave xchg inc or leave les inc push gs adc adc or lea movb test mov jle mov xor (bad) lcall out je movsbl inc jmp push pop mov inc decl (bad) (bad) (bad) fnsave andb test jl cmpb jl dec cmpb jne movb jmp incb xchg incl incl jmp xchg mov xor mov rcrl sub push lea (bad) jg push stc sahf orps inc fcomps jne push push push jg mov movsl movsl movsw fcomps mov mov dec shr inc fimull add ss sbb pusha repz (bad) jo sub mov hlt decl inc push mov mov and jge jmp mov mov movzwl lahf (bad) mov shufps fbstp mov inc std icebp add sub cmp cmp jne ljmp cmp mov jmp lea fcomip lcall mov shr shl or aaa or shl mov mov test sbb pushl mov add mov shr or lea mov aas add lret jmp or iret mov dec jg adc test pop adc add or push sub or je dec dec cwtl test pusha imul sub imul faddp or xor or fisttpll cld push setge push push push ljmp pop push pop cmp mov mov divl add pop inc testb je (bad) dec cmpsl ds std repnz cmp jl sub inc test push cmp adc xor or jnp pop pop andl inc cmp movsl pop out xchg pop mov mov ret pop outsl mov cs je int ret testb je pushl lods and cs neg pop pop sbb adc ret loope and xor push out sub adc add (bad) test je mov test jle clc adc or cmp cmp mov or xorb mov jmp lea bound adc or clc inc mov push mov push xchg je adc jmp js inc std int3 xor negb in je mov mov sbb pop pop cwtl negl mov (bad) fstpl sbb xorl and add jge mov das sbb add jle cmp dec sbb or (bad) incb mov add (bad) pop pop inc cmp mov or adc xor add sbb mov test xor gs jne cmp je push mov push sbb test je jle ds aam jg adc insb pop mov lods das test movsb insb cmp pop jbe pop sar mov cmpb jne push scas add cmp scas fucomp add rorl add shlb in int3 push add loopne adc or pop test push sub adc inc fmull inc mov adc adc cmp adc lcall cmp cld or cmpsb add and or pop aam jge xchg or add dec std lret (bad) xchg mov and xchg push nop cmpsb add imul sub outsl mov mov push adc test testl push push outsl lcall pusha adc add (bad) ljmp xchg push jae mov fcoms lea roll sbb je mov je mov cmpl pop xor sub je dec je dec jne push push jmp push push jmp push push stos jmp insb in mov orl xor jmp add sbb (bad) out mov or add pop outsb adc subl jae pop nop add sbb mov adc pusha add inc push icebp ret jle add cmp mov lcall cmp shl add cmpl jne sarl jne lea push (bad) mov incl sbb add push loopne xchg jmp pop add dec lock fild (bad) rolb addr16 add dec push push dec push je dec dec je ljmp call sub dec je idivl test sbb mov sbb out or jmp mov sub (bad) mov add mov clc pop add pop mov xchg mov mov add add bound cmpl inc xchg test xchg jae (bad) (bad) jecxz push lods xor cmp jne cmp je fs pop adc jle clc or clc or pushl clc add sbb or dec mov hlt out push loop inc pop push mov pop jne mov scas mov enter (bad) ljmp lea shl mov add andl cmc mov pushl and cli cmp jl jmp mov lcall jge or jae jmp out cmpb or bound mov or mov mov mov mov add dec ss cmp jne sbb push mov pop adcl sub lret cmp jae push adc dec jge push sbb cmp push pushl ja stos and add pop lea int3 aad add adc ficom add adc out push pushl mov and pop (bad) ljmp jle push mov mov mov add mov lea shr or lds clc decl mov shr shl ret cmp jecxz,pn stc add repnz shl (bad) mov or fisttpl shr or pop mov mov dec aam mov sub xor lcall and sbb (bad) or or push mov mov lea movsl movsl push inc (bad) aam outsl add outsl lea mov (bad) in pop adc push gs int3 rorl mov and xlat (bad) incl decl jne xor pop cmp jne mov dec call mov out (bad) aam mov shr shl or popl lock loop jmp jmp mov jne addl xchg jmp lret pop mov mov insl sub cld loope inc movsb push push sbb jl rcrb push call cmp fcmovnbe mov mov in inc clc mov mov mov cmp fmuls out clc (bad) pushl stc or stc or out add mov inc in xchg (bad) incl sub xor sti cmp push mov sbb cmp aam mov movsbl sub je fisttpll adc into fstp jne les mov pop jmp and mov sahf dec mov jl push jle incl lcall xor in (bad) out incl cmp jle inc jle cmp jle fstpt jg arpl popa dec push pop fsubl fistl or mov (bad) call or jbe out dec jne sub call cmc or movzbl mov or pop jne add push hlt mov and push (bad) sbb lock mov hlt incl sub incl add inc clc jmp aas fldt jmp addr16 mov pop sub pop ss mov or repz je add adc jo sbb mov outsb mov shl cmp sub jbe jb jne aas push xor pcmpeqd fdiv push lea xor dec adc dec xor shr (bad) push jmp mov int3 add mov pop or imul icebp mov fnstsw jg push pop dec xchg sbb xor popf jecxz push divb lea and je (bad) mov jne push pusha int3 std dec mov call cmp je loope inc fiadd sbb movl sub mov lock aaa push jl push sbb fwait mov je out mov inc rolb add mov jne dec (bad) or rorb add pop test cmp shll incl jbe cmpb jl incb jp dec test sbb jmp or add xchg sbb sbb lea push mov pushl je jne fiaddl pop lret in leave add cmp jge neg add out (bad) incl cmp jne add cmp jne sub cmp add minps push lds frstor fstpt add xor movl inc lock cmp inc sarb jmp (bad) jmp mov jne js add mov mov (bad) out inc mov mov jl mov (bad) xor xor xor jmp or in mov adc mov dec or inc fcomps jno mov mov mov jg xlat inc in mov inc add inc add int sub inc add add test xor cmp sbb inc adc (bad) or enter loope and test push movb movb out call jmp out sti sti pop xor movb (bad) mov inc add ja mov xchg push test jne cmp jne data16 sbb add movb movb insb pop in cmp jne mov testb cmp jne add (bad) adc out (bad) inc jne push jmp xchg je cmp push jmp outsl test jne push and sbb arpl test add push push push pop jmp movzwl mov inc lock and sbb adc add out or (bad) pushl aas push lea mov imul mov lea inc sbb out test (bad) adc (bad) neg fdivr aaa sbb shlb jge (bad) aas jb lea (bad) pushl pop pop testb mov je mov xor sti clc test jg nop sbb adc pop movzwl sub out aas add jl add inc sbb call aaa fcoms outsl decl pop jne test jge neg and out incb jne lea testb push mov out sbb movsl movsl and jnp arpl dec lea sahf pop adc mov mov andb add add sbb dec jg adc adc add mov push dec cmp lea (bad) jg cld jl cmp jb roll movb dec jmp cmp jae inc incw xchg mov (bad) incb sub sub mov movsbl andb ds mov das or cmp jne dec jmp sub add andb jmp add iret push push or or je das stos orb mov mov mov (bad) lcall add es mov je or je inc inc cmp jb cmp mov add out clc or (bad) cmp jne dec jne xor cmp je inc mov add jbe in neg test notb push push cmp sub mov (bad) xor (bad) jmp mov mov mov or mov je or je inc popa adc cmpsb add out call jne dec jne out je jne add adcl pop xor (bad) jg add mov call jmp iret push inc or ja or jmp cld push ja add add cs push push jo testl xor adc es dec add jge and jmp mov cmp decb add dec cli or sbb jb ret pop popf add je add je ljmp mov pop movaps or mov test pop ja mov jmp xor test je sbb add mov push add adc jmp jb pop add xor xor add lds jb mov cmp call es or push inc pop xlat jg ret add pop ret push push push sti (bad) jg push mov push xor mov cmp je mov push add call rorl ds lahf loopne movsb cmp pop ja push push push push push pushl mov xor push pushl inc sub mov jbe inc cwtl pop sub add inc pusha negl pop ret scas jmp push and mov push mov mov xor loopne sbb in mov mov mov ret and je cmp add aaa lock jb or subl sbb sti std mov mov cmp sarb jg sbb test xor cmp jne add push jne xlat and xor mov jp adc cmp jne cmp jne mov inc pop fidivrl aad (bad) (bad) lcall mov movl lock cmpl jle add lea push jne mov orl jg clc mov movzwl movzwl imul mov add push push pushl push cmpsb ret lret push cmc icebp (bad) decl subl decl jne addl incl decl jg aaa lret or jg addl or jle testb jne pop (bad) adc sbb ficomp jbe andl adc pop jge movswl neg add mov testb je in jo std popa inc popf dec pop jne cld decl add jnp (bad) (bad) (bad) (bad) incl add jne cmpl jne andl cmpl jne andl (bad) incl pushl xor inc out sub incw jmp incl pop add loop (bad) fdivrp cmpsb jae mov or (bad) jmp push mov mov mov mov mov jmp neg sbb (bad) xor add addb andl mov (bad) xor pop or mov (bad) cmp adc jmp pop arpl or subb add pop add push adc or mov and push xchg or and decl je lea cmp add or jge movsl movsl movsl incl addl dec (bad) lea aad jnp push inc divl leave jne,pt pop inc jo adc rclb ret xor mov pushf insb inc inc add or std je cmp je adc adc cmpsb push scas add push mov or je cmpsl adc pop inc mov es xlat xchg orb mov sub sbb loopne mov add add shrl andb test je aas adc pop mov test (bad) (bad) xorl je pushl lods lea idiv xor pop mov test push push push add xor jl ja jmp pop jne push mov mov push push push push call (bad) fstl or push mov sbbl test movl adc repz fwait adc ficom pop lds jmp cmp jle ljmp pop push add push shll jns sbb (bad) cmpsb (bad) or adc cmp jne mov dec and repz ljmp dec cmp jne push iret (bad) aas push sub cmp jle mov cmp jg lea push incl orb test (bad) mov cmpl jb lea cmp je mov cmp je aaa inc std decl cmp jb cmp jbe inc xlat out add pop mov jmp push xor push xchg popf xchg mov or lret jle (bad) pop jmp loop daa pop push push shrb (bad) ja les mov cmp or arpl addb or sti (bad) ljmp pop jb jne push pop cmp je or pop push pop mov cmp (bad) jns xchg jge lea cld mov sub jge cmp icebp (bad) jnp xor adc je push pop sbb jne push fiadd mov and rorb add mov shr jg incl pushl je inc mov dec test jne or mov add ret mov cmpsl xor pushl jno je,pt push (bad) fild in shll mov je cmp je mov insb clc pusha add fstpt pop add xchg ret cmp mov (bad) mov mov push cmp je cmp jecxz insl push je mov adc fisttp test (bad) sbb mov cmp add xor sbb cmp ret sti sub mov add (bad) (bad) (bad) nop popf test pop jl cmpl je test je pushl lea mov lea inc add shr pusha adc clc mov shl mov lock ja cmp xor jmp test jne mov add fimul fdivr aaa icebp cltd daa je or mov add loopne bound cmp insb inc inc push jbe dec (bad) jg fistl add in mov pop sub pop add andb imul fistpl fcomi shll fcomps pop faddl stos mov sub adc das cli loop push sub push lcall ret adc mov mov mov cmp je pop rcl mov sub cmp clc add (bad) jl sbb lock xor test or sbb jae ret sbb mov or cmp mov push push lea je lds jmp aaa test pop mov mov mov push add sub or mov jmp loopne jne lds pop pop lock inc adcl ret das or lods mov clc pushl dec mov mov sbb mov (bad) and and sub cmp ret mov test je clc outsl loopne sub mov iret enter mov mov push mov pop popw push test mov or push push pop adc call jno das cmp sti std es sub mov push or insl jp adcl jne adc jmp cmp dec in adc sbb adc pusha pop xor jle arpl add inc add mov shrl sub ret push leave (bad) ret mov xchg testb pop jne orb pop adc mov sub push ss or in add jmp xor or sub sub mov fucom lock and int3 jmp fistpll and jmp or test aaa aam sbb je ret pop nop lret leave mov or (bad) dec adc (bad) aaa inc es or add jbe lcall out push sbb mov mov push mov (bad) cli (bad) and lea movl inc in or daa inc jo incl insl enter adc mov je adc mov xchg cmp xlat std aaa inc faddl cs jle add or push jbe daa mov mov push mov inc fist inc insl mov xor inc add inc cld push (bad) add inc xor inc loop enter rorl adc mov sbb dec mov mov push add sbb lock lahf xchg add pop leave cmpsb out pop xchg pop (bad) mov out mov hlt insb pop jae stos jmp movzwl in pop cmp or movzwl push push movzwl push lea sub cmp (bad) fs cmp push push mov (bad) adc cld (bad) sahf adc sbb clc adc adc popa aaa loopne sbb add fisttpll add ret leave sahf fadd add lret js sub mov aaa xor insb push icebp imul inc test sysenter inc test mov mov hlt xchg inc dec aas js jbe mov das out inc nop adc sbb cmp (bad) icebp pop ja pop push push mov dec push push push lea and out iret aaa loopne or out cmpsb incl mov push push pushf push xlat mov mov xor mov sti fstpt sti jne fs pusha pop aaa les sub pop or pop pop xor mov mov cmp jne mov popa lds push push mov popf ret aam xor subl ret (bad) decl sti jg mov cmp (bad) xlat sub lea push and (bad) sti pushl and sub push lea comiss pop pop jmp xor out mov or clc add adc xchg sarl shr adc push pop popf int3 std mov jl mov int3 mov iret cmp lds lahf in jnp clc sub lea jae xor (bad) nop ss fidivrl mov aas daa sbb scas es push scas in inc mov in inc adc in jne pop or sbb mov not test je ds loop mov add pop jle jle lcall pop mov add lret or jle jl addr16 cli fldpi sub jnp call xor sub in bound fadds add cld dec push test decl adc ljmp xor mov push and mov mov decl mov cltd add mov mov mov mov test mov je andl jmp andl sub ficompl mov loopne rcr icebp add pop xor mov mov mov mov clc adc xor pop test mov jne pop (bad) xor mov nop and dec add aam or fist movl movl out mov adcb dec into sbb xor insb add pop add pop and je xor add xchg push push fs or mov adc pop pop scas inc inc test or jnp pop adc hlt jge adc pop ret mov sub dec fbld aad inc leave pushf sub cmc xlat (bad) push pushl pop push cmp xchg sbb lea cld call dec test lea jl inc mov aas sub dec inc aad (bad) jne mov or dec adc outsb pusha or add xor sarl mov xor shr divl or mov mov adc shrb or jo mov jmp xor dec aaa hlt (bad) sbb test push je sub rolb cmp test je cmp je mov jmp mov jp icebp dec enter scas fsubs icebp dec xor mov into mov call mov sub jg push or jmp add pop add inc jb xor mov xchg xchg lea (bad) mov mov jbe shr mov pop xor mov cmp frstor setb cmp jne mov test aaa insb push jbe test xor cli jb out push mov pop or jg out (bad) repz cmp jae sub push or (bad) jb fisttpll (bad) adc jecxz pop hlt adc pop mov pop sarb mov add add lock aaa imul (bad) repz xor mov into push decb pop jbe call inc adc call out call rorb add mov mov dec je sub je (bad) (bad) call xor push cmp mov jne cmp jne inc adc jge jmp inc add sbb mov push push jmp push adc adc adc jmp push test psraw mov test jg cmp mov sbb mov call test mov mov sbb adc enter (bad) out or loope or or push and rorb pop setl pop clc push jo repnz (bad) xchg mull add je mov dec loop icebp movzwl daa add push call sub icebp into das add outsb pop mov cmp je add adc lock and pushl fidivr add sub call jge adc shrl inc and loop je movsl and mov pusha xchg mov stc cmp lock in or mov or (bad) add xchg mov decl push push push push (bad) (bad) jg adc lcall add dec mov or mov je or lret or push adc frstor aam out out adc mov and jb mov cltd cli pop ficompl add push push xor mov in sti je lea push add mov cltd inc imul adc out push or push pusha adc xor xchg (bad) out scas (bad) arpl daa mov cmp (bad) fs dec adc dec push dec or sahf xor lcall arpl cmp je cmp lret adc (bad) (bad) out dec jne xor jmp mov mov cmp jne cmp jne cmp je xor lock sbb pusha mov rclb out jmp add push xor push cmp push jg sub sub std inc sbb lds cmp gs sbb push pop or push pushl mov push or (bad) mov add cltd cli enter out pusha xchg mov test outsb sbb pop fcomps jle cmp je cmp and iret push out call jl int3 jo jne push sbb dec adc adc cld jnp packsswb lds imul mov orl (bad) adc cmp int jo shll fdivl dec add xor divl pop sbb mov add push push mov call ss clc pushl cmp je mov add mov cmp jae push push push jbe pushl lds mov cmp jne jmp test cmp out pop je mov mov cmp je ret push ja add jmp pushl adc jae call (bad) fnstsw add pop pop jp jl or aas mov jne pop cmp loope jmp test mov pop cmp imul and xchg jecxz fisttpl (bad) je jg outsb jbe pop nop outsb pop pop (bad) fist jo enter cmpl jecxz clc pcmpeqw push pushl call jns sbb mov jne test jge cmp pop xorl (bad) pop pop mov insb push call jmp push sti mov xchg mov jo call jmp push cmpl pop jne cmpl jne mov shr test jne mov repnz adc (bad) test jl push or push jmp add add add (bad) sbb and or repz mov je push cwtl mov dec dec je sub xor cmp add cmp mov loope je pop (bad) push dec lock fwait add inc inc cmp je add cld and cmp je and flds cmpl pop stc sbbl aaa push jne push push push mov mov adc cmpl mov jae push sbb cmp sbb les pop or mov add clc cmp je xor cmp leave ja push mov cmpl add push lea pop movl movsl mov mov dec test mov inc mov in jecxz test sub push sbb inc and mov mov push or adc xor decl push push lea push push push lcall addr16 popf pop cmpl push xor jbe jne pop mov inc into add decb pop xor dec push or dec adc push sbb mov lock ja pop dec gs add call fbstp mov push test pop aaa mov mov push jae fisttpl inc sbb clc sub je repnz sub je dec je sub je sub cld mov dec jne mov xor add push adc adc pop jnp (bad) sbb inc pxor fdiv jmp or das jne inc jmp sub test out sub ds je dec je dec je push pushl ja (bad) insb push adc inc or inc mov mov (bad) fstl xor cmp sete dec jmp pop fstl pop jmp data16 ret pop pop mov (bad) push push push cmp sub jne xchg cmp fwait xor lea loop add jnp loop (bad) (bad) or mov mov ss call jecxz test add mov jbe jno adc loop je or mov inc or addl add and enter push data16 cmp pop insb push mov inc fs scas sti decl or mov aas jmp test cmpsl incl fmuls mov shr mov jne mov iret push roll mov sbb repnz dec dec mov pop ss pushl pushl push jo (bad) xor aad cmp lds adc xlat mov rol dec pushf add jge das adc enter xchg cmc pop jbe mov out decl push mov out add popa sahf in cltd add and push je cs pop inc dec inc lea fwait rorb mov push or add pop lock cmpl adc or or roll std or negl dec sbb push std push mov mov loope add or push jo rcpps jmp cmpl push push jne mov call sbb xor add push mov mov push cmp leave jne push sub les pop fnstsw sbb mov enter add push ds and lods add (bad) hlt jmp push inc push jmp mov mov pop pop xor xchg test je lcall sbb les pop (bad) icebp xor xor cmp arpl fmuls lcall cmp fstl clc jne cmp mov fdivrs pushl sub xor adc xchg icebp sbb test inc mov push mov lcall and or test mov inc cmp pop jmp sbb push subb outsb jo or js xchg add orb mov sub xor push inc pop jne and or jne out jo popa repz lea or dec and mov cmpl jl mov add inc add push test jmp mov aam scas mov pushl popf inc mov movb fadd inc out inc push mov (bad) or in pop icebp ret push out pop ret push jmp aas mov roll inc push mov xor push push xor pusha inc dec xor mov xor jge mov sbbb hlt iret (bad) fwait lcall divb out jmp push push clc ja ss jg mov js jmp mov pop add idivl mov pop cmp sub mov cli pop pop jmp lea inc addr16 mov (bad) aas add andb mov add mov aaa push push push xor pushf std cmp inc cmp push dec outsl push addr16 inc arpl mov pop fsubr jbe nop es clc dec roll dec hlt cmp shrb scas sub flds call adc pusha pop fistl adc adc mov adc mov loop (bad) aaa cmpl jle mov clc mov mov push std mov inc push push int les and inc mov inc andb cmp jle xor fadds inc push sub adc cmp pop test xchg fisttpl ret mov or mov mov repz push xor hlt mov xor insb push push push lahf out loop lock xchg pop cmp mov cli sti out loopne and push sub push andb test mov sub dec jmp movsb mov push sar xchg inc test push test mov je loopne adcb jge add into push cmp inc mov inc adc add hlt data16 add imul push adc test mov sbb sub push fisttp les cmp and test (bad) out mov js add mov lea cmp jg push (bad) mov add cmp push int3 lahf in and or call and push sbb mov push push pushl scas inc sbb pop push call lea dec cmp xchg mov dec and add pop xlat adc or sar xor jle push mov cmp jge mov and dec push pop inc xchg lea push lea push fdivrl out pushf mov mov pop lods jno add add outsb or ss pushl call mov pop mov subl loope (bad) mov enter int3 pop and call or or repz push add push push (bad) and sbb (bad) jg cmp jle mov pop pop ret mov incl add push cs cmp sub push push jbe inc or gs mov mov call daa lds in sbb iret pop mov ret mov mov push aam or lret pop shrl (bad) lea and jbe sub sub dec (bad) out daa adc dec and je mov jmp push lock loope push test adc fmulp add mov std mov ret add add jle xor xchg xlat pushl jo in add mov lea push lea push mov movnti pop outsl addl and cs add pushl sbb popf fidivrl xchg call aam push push ret dec insl mov lock ja ja mov mov out bound sbb fcoml sbb mov or inc inc sbb inc sbb sbb sbb dec cmpsb jmp das pop adc fwait cs pop ret adc sub ss push fs sar mov orl daa jb and jae mov cmpsl mov cmpl enter addl pop sbb pushf mov pop stos ss enter cmpl jne (bad) mov ja or dec jno xor jge mov jo ja push or clc or sbb sub rolb mov mov cmc pusha mov aaa mov add jno push out dec cmp add adc sti shrl xor dec orl nop push mov mov test cmp lds add xor mov dec mov cwtl cmp enter xor decl dec or (bad) mov mov or mov jmp lea push movl xor movb (bad) enter inc pusha (bad) aas push push sbb xchg lea push push push and jb pop les inc scas sbb sub aad inc out js cmpsb (bad) pop mov pop inc mov inc adc push jne mov and jne jb inc or or dec popa in outsl ljmp hlt jne push sbb rorb popa xchg sti push push and int mov or clc imul int3 mov pop sti jnp (bad) jne andl fdivr (bad) incl bound mov test mov jne and jmp mov stos jmp inc clc push leave push (bad) cmp gs inc pusha jmp (bad) push jne cmpl or jle pop out inc jne mov cmp lahf ds adc jge data16 call je popf push add push sti mov (bad) pop pop xor push dec push add jge pop sbb les ljmp fsubrs pop lea lea sub decl mov mov or cmp mov add incl mov mov mov jne mov push add push (bad) shrl sbbb jne,pt lea or add imul popf add addb out cltd sbbl inc or cli addl dec sar call push mov mov add (bad) xlat xor (bad) add jl in lock inc pop mov mov in push lea pop lea mov mov pop or ret push in ja loope ljmp inc inc call enter pop call dec dec mov lea mov mov jg pushl mov mov pushl pushl in or lock ret mov jmp jne imul sbb incb inc push push dec add mov mov cmp scas mov and mov inc sub inc sbb pop sbb scas sbb (bad) fild push push push dec imul push mov push add scas loop dec call add and xor addr16 dec loopne add sbb or test outsb and clc push mov mov dec sub add cmp cmp push mov sbb sbb or pop lock xor ret andl xchg jp ret ret movl fldl (bad) xor sub aaa pop cmp jne (bad) dec inc xor jmp adc cmp call add jmp mov je sub push jne or scas mov xor push ret adc sub pop je sbb test fdivr pop jne call mov jne sbb dec fcomi in js add mov fwait mov push mov pop pushl ja rclb add mov es ret call das mov or call adc pavgb pusha jb adc jmp dec adc adc dec lcall clc ret rolb dec fistl dec fistl jne clc cmp (bad) add test je and xchg leave dec push push (bad) xchg inc pop mov mov sti ss adc push push icebp loopne push insb jle mov dec outsb pop pop scas push push push (bad) pop loopne mov dec mov mov mov idiv btr pushl and cmp cld adc jmp pop (bad) mov or xchg (bad) (bad) decl inc jl popa enter repnz mov mov pop loopne rep mov add pop or test std sub push scas pop in push cmpsb or jo mov bound adc pop cli clc test jne testb paddusw fldl jne in pusha rorl outsl loopne enter add add jne lods mov mov (bad) test jne and lock or pushw push call adc js sub lds lret test je arpl xchg pusha push push push sbb pusha cmpl ljmp cmp hlt adc je cmpl je cmp fcoms dec adc lock scas paddsw dec shrl push sti call mov jne push pop inc call out adc and adc dec rorl mov fmuls mov mov andl jmp je out lds dec data16 cmp mov push mov push fild fmuls adc stos and call or cmpl mov jne mov or arpl jbe arpl (bad) cmpsl lock je adc jno in xor data16 pop movd out dec pop sub and cmp je cmpl stos frstor jo add mov js,pn test inc (bad) jmp cmp add inc sub or aas cmp xor rcrb add sub inc push inc xchg xchg sbb inc clc aam inc inc mov sbb shll jno and daa in inc loopne inc sub sub fadds jns lea mov mov mov mov push orb cmp out add push sbb shr sub or call pushl pushl pushl xor push jb lock aad and clc and fs orl popa dec test setne pop les jg decb pusha cmpl jne sub inc sub xor iret inc and imul test push std (bad) jmp mov pop mov adc ss jg mov sub sub push push add sub jmp or clc push cmp sbb mov inc inc or adc jp sbb incb cmp push je cmp (bad) mov add mov add mov inc loop or jo jne andl loopne pop mov mov pop fsubs andl test add inc lret sub mov cli clc xor cmp je cmp repz ret mov sbb cmp jne lcall and xchg lahf clc mov cmp jne jg out decl xor lret je mov push test pop je ljmp scas jbe pop and dec inc mov fs cmp je push lea push inc aaa add das or pop aad push movl out add mov (bad) cmpsl pop das mov call mov test jbe cmp ret jne cld rorl je sbb bound pop and (bad) pop mov sbb mov mov jmp movsb add add fmuls inc int ret xor mov mov or inc cld or jge add fdivs jno loope retw pop pop outsl dec mov push jl ficomp stc lcall mov xor jmp and push ffreep push or lea fmuls inc ret aaa inc xorb add fucomp or shrb fstpl loope mov mov and into xor dec push inc sub mov je test je push call push test jl mov push xchg nop faddl push in mov in loop ja jae gs (bad) pushl loopne jg fist (bad) leave je cmpl jb jne in decl add orl jge push out enter andl push les jne orl cmp cli and lahf clc pop push mov pushl jae mov push je sbb push pop rcrl inc xchg dec inc pop mov fs sahf or icebp pushl es jae and inc or cltd ljmp and push test or out cwtl and pop and push mov add mov cmc fs add orl or pushl call aas psubusb incl xchg add jae cmp jae push cmp jmp and cmp je inc cmp jl jne push add ret jae jmp adc shl (bad) incl sbb dec push jne pushl jmp push call aas mull inc imul into hlt aas adc pop mov push push push sbb xchg or pop or add xor xchg enter jae out or inc enter push pushl pushl call and in (bad) leave inc cmp inc inc nop lret dec sub lcall std nop lret xor xor call lea pushf cli incl movb push push mov call jmp rcrb out faddl pop fwait add fstpt roll out dec call sbb sub (bad) mov dec hlt sub cmp jecxz or add es xor or ljmp push xor or or nop in test or lock out sbb push sbb xlat sbbb call pusha bound (bad) mov and adc je aaa mov fdiv push call jno inc jmp (bad) gs (bad) call pop jne push push push addr16 sbb xor dec push push or mov int3 leave push mov rorl (bad) (bad) (bad) incl sbb add jmp cmp jne cmp jb cmp ja mov push add or add lock cmpsl mov cld push mov ret adc add nop or push adc inc mov int clc pop xacquire add jl out call pop or cmp jo pop adc mov test aad faddl ja jmp mov mov lea push out std adc iret call sub cmp sub scas mov cmp jne mov (bad) add ljmp sti and mov shr push movswl add call cmp das push dec or fdivrs and push xor aas idiv (bad) call mov lea cmp lea mov jne mov (bad) cmp jne mov push mov fwait add inc subb mov add add add jb movsb clc xlat mov or push cmp and lret addb in xchg addr16 mov inc adc jmp mov sbb push je lahf inc adc lahf sti fwait xor cmp je rcrb dec push faddp dec ljmp jne gs xor mov inc dec add push cmpsb add fstl add mov adc or push mov cli mov jne call jg add shlb shrb cmp ja jmp mov mov cmp pop push pop in mov dec insl adc dec fistl test (bad) clc out pop pop lahf lea sbb inc add lea mov mov adc scas jbe push movb mov adc popa add inc mov adc jne lea adc fmuls scas or fmull andl andl add pop adc popf ss jmp add or sub mov pop (bad) iret movl cld decl sub aam jne mov ja dec iret pop jmp dec push movzwl push pop lahf push push cld jbe (bad) rorl pusha sbb jo mov and or bound into or test cltd into jge stc adc lret outsb push push xor mov xchg rcr popw outsb pop into sbb cmpsl pop pop ljmp add push lahf jae adc jmp std cmpsb xchg jge dec fucomi iret fs adc out adc mov and pop mov jbe lods jnp cmp por adc lds ljmp or nopl int dec push push jmp push cld and push pop jb ja jmp ds fstl mov lcall sub xor fisubr dec addr16 into jo and loopne jbe add or inc pop (bad) pop pusha lret in pop jmp out aaa rolb or cs adc inc add jl je jnp push outsb inc add scas jmp adc sbb ja xchg add out fwait pushf mov add jne (bad) jne loop lock push and (bad) xor roll cmp popa jmp xlat or pop cltd pop cmpsb add cwtl sti sahf adc outsl add sub and mov roll lret movl lret aad add (bad) pop rolb loope or into roll inc add in sub lock movzwl jbe ljmp lea dec pusha clc outsl mov cmp call jge call loopne cld or pop cld je xor push or xor cmpsb andb cmp sbbb inc sbb or je arpl dec push int sti jne xor jmp mov inc (bad) (bad) mov call testb inc or lret int3 inc push inc test sbb divb (bad) mov push movzwl or and cld mov mov (bad) pushl push push test je in je add ljmp push lds adc pop icebp sbb jmp mov stos lret cmp add aad sbb je mov addl jmp push push mov rcrl test or rcrb js pop adc push mov jge packssdw mov pop pop push fldl lods push push sbb into jmp pusha dec je sub adc push mov mov jmp shll (bad) inc jne call mov mov clc jmp adc jb jne add fdiv push jne and les jmp cmp aas testl jmp testl push (bad) outsl cmp icebp jmp test adc push je mov dec pushl orb inc or jge add arpl dec aad call movsb fbld cltd jl add cmc cmpl inc cmpsb incb jne and push add loope je,pn adc adc mov jo rclb mov data16 dec xchg mov mov push mov inc hlt adc faddl (bad) xchg je jecxz mov into aam xlat jmp inc push enter arpl stos pop cli or adc das mov mov cli sbb mov lea sub add inc lock push fmull mov fcoms je (bad) std or inc push pop mov push lea les popa fdivs mov (bad) clc or lcall push push jg movsb sbb loope mov xchg xor je out stos decl lea push xchg rcrb jo or decb cmp rcrb (bad) add out or pop pop pop cmp in sarl ljmp inc cmp jb jbe cmp je cmp gs rorb push or (bad) lea insl loop clc push xor or add add dec xor jmp push sbb mov pop inc cld mov pop je mov jmp cmp outsl loopne cmp cmp cmpsl cs adc add mov jmp cmp sub (bad) ja fistl jge lea notb push cltd mov add aaa pop jne fisttp jns add je or cmc enter jne push ds arpl lock scas inc and xlat ja add mov jne add pop daa push fimul stos add je mov or sti push xchg (bad) sub mov or sbb (bad) or dec movsb pop add rclb push sub adc mov scas jle push mov rcrb int3 fnsave inc adcl adc dec out (bad) push and adc in js cmc fldcw andl mov pop leave sbb mov adc test inc mov cmp sbb fnsave loopne or xlat jbe arpl ljmp add ljmp clc or cmp call test jl ds in sub adc and sbb mov fstpt pop lds pop loope,pn data16 push cmp jne fwait pusha mov sub ret jmp loopne lea cmp sbb mov mov stos mov in sbb aam inc mov ja mov lea ljmp call mov push jmp fsubrl insl dec sub iret jo insb push jo mov icebp je push lock clc add push cmp je test aam dec or jmp cmpsb (bad) cmp push push or mov call sbb inc pop cwtl mov push je rcrl dec leave ret fidivrl icebp push pop push inc fnop mov jae mov jmp testb je clc inc movsb lods pushf jmp or inc sub js imul loopne addl mov mov xchg call inc jne xchg test je push sub (bad) jle mov adc and incl sbb sub outsb adc gs add add mov add rorl inc enter out pop or jmp enter shll push push xor fisubr cmp sub (bad) fisttp (bad) sti xchg jae push pop enter push stos inc icebp ljmp mov mov add sub mov sub sub mov mov or sar sub mov outsb div inc int3 add adc mov push sar adc cmp jge (bad) lcall mov add cmp jle sub add mov cmp sbb (bad) (bad) mov add cmp jle mov sub add push push push push push mov arpl mov add ret mov and add inc sub test data16 (bad) je and mov jge dec shl mov call push mov loop lret pop mov or cmp or sar rorb add xlat or inc fwait ret xor mov xlat inc push lahf inc das push adc mov xlat xor pop inc jl push push idiv adc out jne jo mov and xchg jne call sbb sbb es fnsave adc ficompl pushw or or xchg mov int3 (bad) pop cmp in scas nop lret sbb shlb inc or ja lods pop outsl and sub xor daa jb pop xchg sahf fsubl pushl or testb mov mov adc in pop hlt je xor fdivrs leave xor jle out (bad) outsl push pop xor je orb daa and iret fnstsw dec and and mov pop mov inc inc insl out fistp xor add and jp add (bad) (bad) (bad) and mov sub insl or test push in or je push push dec ja jbe sub or push adc push pusha jp dec and or leavew mov sti andl je push pop adc out sbb cmpsb xor sbb add mov sbb push hlt cmpsb xchg iret int jne and out movl js xlat or rclb push push cli (bad) movaps or shll push inc mov xor sbb sbb int3 inc or cltd and sbb jge add leave sahf fwait jne add fcompl ret xor dec dec or nop sub cld mov (bad) pushl mov mov and cmp jne or or mov (bad) pop and pop pop sub sbb inc dec mov aaa sbb cmp je cmp cli push add xor sbb xor (bad) pushl cmp popf mov push call push mov push adc inc sub push fdivrl mov cmp int3 jl jns jmp adc or inc mov (bad) mov inc or xlat cmpl mov call add jnp cmpsl pop insl and nop movsl sbb pop jle ja sub sbb call sub adc in push aas add sbb test (bad) (bad) pushl sbb out sub xchg jbe sub incl data16 rolb cmp inc or sbb (bad) push lea inc jecxz pop fistl aam cmp xor frstor outsb mov fistpl pop ja jle dec xchg mov lcall rorb or pop cmp and (bad) dec nop lock sbb push in push mov xor mov cmp je (bad) mov jne xor lahf inc push je mov in (bad) je mov push add push mov sub pop pop sarb or cs mulps sti inc jb lretw add test mov mov popa mov sti sti es add pop jae cmpl add daa insl mov aaa xor mov lea es popa cli xor inc or adc lcall mov pop cmp pop pop setne ret add push arpl lods jle push lea movsl xor jle inc (bad) call xor pop mov dec sbb pop push movl nop cmc outsb ljmp mov jge pop jno mov mov or mov leave fs mov test mov mov jne xor xor adc mov add and loop dec and decl inc mov add cmpl jne mov jmp jnp (bad) ret dec cmp mov add pop xchg orb hlt in mov xchg inc push mov sbb ret mov push addb ret mov and jle clc dec out xchg test je jg scas subb inc clc je push lea (bad) arpl and in inc clc stos xor pop add sub add mov cmp ss add mov pop (bad) xor ret mov ds inc rcrb add js and adc or rcrb shlb (bad) lret mov fimul push adc nop inc insb jp push leave je sbb hlt xchg push mov mov mov add mov add mov fwait inc and lcall adc in cmpsb cmpsl maskmovq notl (bad) data16 push pushf notl adc pop jne push pop nop adc hlt and adc addr16 push rcll adc add aas xorb or je clc pop inc clc ret mov mov mov add and cmp inc and mov pusha adc add jne push or orb pop add jb add xor scas test popf sub sbb je (bad) loope mov je adc push add clc mov das inc cmp and push pop add fwait push cld mov aad hlt test movsb mov and mov stos sub shrl add rol jg add mov xor push mov pop popf mov mov cmp je rcl or add cmp sub dec or pop imul aaa icebp or call mov push das inc push or cmpsl cmpsl push mov xchg imul fst add xor sub inc mov mov dec je push inc add push inc cmp (bad) xor mov xor push mov aaa xor test je mov mov flds cmp test sub jne enter ret and or xor stos int3 cmp sahf jo push jne lret push paddd mov jb lea push lcall adc sub (bad) jmp ror cltd cmpsb clc pop pop mov mov sub dec js and cmpl jecxz jo ret xchg cmp insb cltd stos out out lret push loope mov test fsts mov add stos call loope lahf inc push sarl pop js add add adc xchg push jb jns jns xchg xor jno jp mov pop dec enter xchg adc mov mov dec cld decl cmp jge mov mov xor js jmp or mov cmp loopne sbb lret mov add jmp lds (bad) into mov and jbe adc mov inc pushl mov jl out pop jae inc mov inc inc add cmpb pop xor (bad) jae movzbl jmp mov jge sub inc cmpsl jnp or ljmp (bad) pushl cmp jmp movzwl iret (bad) xlat jnp push cwtl xor sub orl or out hlt pushl cld lea imul jmp and int or dec stos add jmp mov or jge lea push pop inc pop rolw aas push add dec or add dec movsl and dec cld push andw loopne or iret lea jle xchg fadd inc adc shr leave lret push mov adc aad fnstcw inc and decl jg sub cmp jae mov push dec add add cmp add fistpll ret xor divl mov mov cli andl mov lods jg ljmp xor inc or inc clc sub test jbe xlat ja sub sub pop clc cmp jne call inc mov mov cmp ja add inc sub inc clc mov jmp clc inc add inc or (bad) jg jbe cmp jb sub lea mov jmp xor jne (bad) jle push mov push pushl call adc pusha aaa andl lret andl sbb test push inc cmp add loopne jge or scas loop dec and cli and push cmp sub xchg lahf add push mov jbe popa sbb add sahf lea push (bad) fnstsw add push sub out ret push mov call ljmp and push sbb (bad) jle pop or jne cmp je sub mov call jmp ja mov push sub mov push push push call pop adc add push cs xor jno mov sbb sub sub stc add hlt fbstp pop jg enter (bad) jle push xorl push add adc out clc or fild into push push incl cld add sub leave or (bad) mov hlt incl jb dec imul sub sub cmp int3 ljmp push push dec and push stos add push mov sub sub pop pop cmp jae je fwait pop (bad) adc (bad) cmp mov jae lret inc lock sbb cmovs xchg push lea icebp in loope and (bad) (bad) pushl (bad) scas clc mov sbb addb popf stos roll les test mov je ficom add or mov inc out lea inc fwait cs dec cld fcos js add push sbb mov addl (bad) sbb mov lock mov mov and sbb lock mov inc decl mov ljmp addr16 pop mov (bad) mov sub dec add jle fwait add push arpl inc or mov add imulb aaa cld add lock push icebp add in or lcall cmpsb jo call and cmp inc and ja test jne call int3 or call (bad) aas pop mov inc or call xchg stos out push jmp out pop mov push inc sbb lcall adc inc lock and addr16 adc ds scas pop pop push js add mov xor add roll mov adc jb mov push lea sti cld call sub (bad) push adc xlat sbb movsb (bad) cwtl or and int3 or mov stc adc (bad) ja aad or sub adc shr and jmp mov dec jne aaa rorb cmp pop aam aaa aas sahf pusha xorl aaa (bad) decl add cmp ja pushl aam jmp and or pop jmp sub sub push adc loopne cli cmpsb rcrl pop in js adc adc jl or mov add jle pushl call (bad) insl frstor pop add mov fsubrp adc mov andl std or mov sbb pusha and mov leave je add push and sub adc fldz cmp decl push pop adc xor lds arpl dec pop aad sbb mov cld es mov mov mov repz or mov pop mov xchg xchg out mov cmc pop add sub je mov lods or push cmpsb out sub test mov push mov (bad) jno ja das push lret xor cmp mov je mov push push call adc pushl lock cmp je lea pop clc je stos popf lret rorb add mov lock mov dec (bad) jg jl clc add cld or or inc adcb jg mov jmp lea mov mov push push lea mov adc or jno bound sub test mov or mov je push xchg sbb or mov (bad) jno xchg jmp idivl shll fcoms test in jmp popf leave je xor pop lcall mov mov pop mov pop push sti push add cmpsl loopne test push loope incl addl mov hlt mov arpl pop adc sbb fnstsw push push test mov jne jne mov cmp pop or incb (bad) je push mov call adc test jne xor mov sbb jb es inc cmp enter das cmp je push push mov (bad) ljmp mov aaa scas loop jg pusha inc je push call ret in and lcall xchg or les fiadd popf jl je cld sbb jmp fist lea push push jns add jmp or psrlw add out xor xchg rcrb outsb mov mov adc mov xor insb loopne adc lods (bad) negl adc xchg mov or mov push pop lock test into (bad) aaa shrl push je (bad) (bad) jg mov jne mov cmp jl cmp jle cmp jl cmp jg lcall sti out or movsbl sub jmp pop xor cmp jge mov mov add fldl sbb pop mov adc mov push add inc call std inc cmpb jne pop or sbbb je mov cmp jne mov inc cmp jg dec inc inc jl movb inc jmp je add jo push (bad) sar jns push jl jmp add cmova push mov mov inc jmp sub mov add inc xor ljmp pushl loope and push test or add out rclb dec sub xchg rorl lahf or ret mov movl and pop lahf lret stc push inc add cmp pop (bad) in out and push lock inc fcom jge adc add js add jle push fsubrs lea jo xchg mov adc in adc movq addb sub jle mov jo mov mov mov xorl daa push push adc stos mov mov or rorb cwtl jbe roll mov mov or inc fwait and xchg add add leave sub scas es mov mov add lahf mov push mov test je cmpl add mov andl pop fisubrl or pop andl lock add ret mov mov jb xor xor cmp xor (bad) mov mov mov cmp adc (bad) aaa inc nop lret adc mov adc jle loop mov push sbbl js sbb dec pcmpgtd jle push mov push loope adc call adc sbb ror (bad) aaa fimul cmp jne mov cmp pop add jbe in jo jle lea pushl in adc or or out incl add mov mov push mov xor inc cmp daa sbb or xchg jbe jmp push add (bad) and test and cmpl data16 add adc inc mov mov pop ret mov mov add mov aad and stc sarb or or push nop lds push test push mov xchg xor cmp mov xor (bad) mov mov jnp mov cmp sub iret push call cmp xor or movl mov mov int3 in sbb mov nop pop push xor lea mov push mov mov mov mov mov mov mov mov movl mov push ret mov pop xor jae (bad) in outsb imul xchg xchg pop or cmp inc push imul inc out pushf push dec pop xchg cmp jns adc sub pop test adc fadd std (bad) lcall and push pop lea lea cltd sub sar out add aas sar jae sub addl (bad) (bad) or or push pop cmp jle stos js hlt pop cmpsl lea hlt sti jg gs icebp inc hlt add add movl icebp mov movb movl inc das mov (bad) mov mov shl incl xor not mov mov mov add ljmp cmp decl jne push push divl push call pop mov pop test mov (bad) mov or ret mov or inc into mov or es mov icebp mov ret push jmp mov fwait xchg mov pop push into aaa sub ret push notl aaa ja sbb or mov (bad) mov mov sub movl xor addb mov add std or shrb sub test (bad) int xor into cmpl push mov xor mov insb inc xchg cmp xchg adc ds es ret sub xchg lods mov cwtl add stos scas gs dec jno cld sarl mov ja sub push push enter xchg add pop testb jnp or aaa (bad) xor cs imull decl aas out adc aas mov addr16 es mov orl incl add in inc lcall loopne mov dec and xor es push sarb mov or mov mov arpl jbe in pusha push pop sub add dec dec ret jbe loope cld cmc mov push mov (bad) mov (bad) xor lea mov int lcall push and sub orl push (bad) aad mov mov mov mov movl sub movl sbb add movl xor cmp das cld dec push jb mov inc and ret lret in pop mov adc mov adc mov lock xchg pushf (bad) cmp icebp add test or xchg das and adc ja out mov add add nop rcrl push push mov dec push fdivl push aad pop inc mov shrl xor push call mov cmpsb or nop mov rclb and sub fwait add pop cmpl ret fcomip xor fldl inc nop pop mov jmp mov sbb or notb hlt (bad) (bad) out ss nop scas icebp nop scas ret push out xor mov test (bad) aad mov (bad) punpckhbw inc add in inc xchg dec dec aam sub les ljmp inc daa add stos orb push or push jne mov pop into jo lds je push mov lock adc out (bad) movl lret (bad) mov ja mov repnz rorb jne ret mov mov xchg cmpsb push ret mov aas push inc ret pop lret loope rclb ja xchg fildll adcb fcompl push jne pop das push or mov xchg pop push out sub or push aaa cli mov push cmpsb add mov mov stos mov inc add mov test lds (bad) jmp jne mov jg incl add mov jmp xchg pop mov push mov cmp je mov add out sub je mov mov ja jle pusha out or call addb sbb fstl jl add mov pushf and fdivl fist inc sbb inc sbb inc add inc sti mov or inc adc adc xor lea push push cmpl push repnz mov pop cld scas mov shrb inc adc adc (bad) arpl xchg movb mov sbb sbb ljmp mov cld xor push xor adc jnp push push push fwait push imul xor add jle std dec jg cmp jge dec testb je pop cmp jle cmp rcr adc add jl (bad) lcall mov test push jne mov shl push push jbe mov (bad) fcomp mov dec out mov push daa adc cmp jp lea clc jnp pushf rcll dec adc fisttpll js,pn adc or sar and jg cltd pop add lea shl push or add mov mov pop cmp jl lea cld sbb or mov jbe lea adc push inc xor push cmp stc lea inc cld (bad) jmp mov mov and pop or mov mov ljmp adc andl mov test (bad) push jne mov pushl andl lea pop pop loop mov ret push xchg add je or aad mov lea cmp jl loop push pop scas jmp jl aas cld sbb or add int add incl addr16 pusha and cmpsb push lea jnp sub mov inc push sarb or push xchg sub add loope push xchg ret xchg jnp rorb push or mov or mov push lea sbb mov xchg inc or add (bad) push movsb arpl or pop mov pop xorb lds aas sbb push add fcos fnstsw loopne cmp jle mov je mov cmp adc clc fnsave cmpl je in jae add add jo inc hlt je lea in push lea fdivl cmpsb xchg inc pinsrw jbe xchg fidivl xchg clc or adc incl sahf or lcall sbb inc enter sbb push sub or sbb dec cli add pop popa adc xchg xchg pop inc push icebp mov jns add push mov inc je fucomip sub pusha add lock (bad) mov fmul std negl xchg push mov mov xor (bad) out pop adc jo jge mov mov push or imulb pushl adc arpl mov notb jge adc inc movl cld dec push add icebp xor cmp jne jne nop mov or mov dec jl add fwait add insl sbb add sbb call jnp jecxz and flds mov inc cld add cld pop and cmp push popa (bad) dec sbb dec xchg pop ret call mov or or xchg lahf adc loope andl xor lock pop add add call fldcw sub (bad) pop leave orb enter call cli inc jne lea push lea push push push (bad) jae mov xchg mov fstps hlt push mov and dec pushl call cmp mov xor (bad) sti (bad) cmp or call mov inc faddl push xor jge lods cwtl jnp fnstsw stos push push push inc andl cmpsb push push sub push mov loopne dec fcomps push dec xor out push push sbb ret mov and push push loopne xor push xor lock scas xor xchg dec xor push insb rol adc jne movb shr data16 xorl adc push fmul dec (bad) aam cltd xchg setns ret push mov (bad) testb scas dec les es push jne and mov enter pop xchg cmpsb std xchg cltd loope cmp add xor add xor stos sarl jae out (bad) sbb push and cmc std cmp das pop ret jmp je decl jne add jge loop adc xlat mov add jg test add push add add cmp xor fninit notl js cmp jne test jle jl adc sbb inc mov jne (bad) out out sub xchg push call pop jne lea lea sbb mov rcrl negl add add cmp scas push sub test popf push mov or inc pushl adc call inc push mov fs inc add out cmp add and test xchg xor push mov fadds movzbl movzbl shl dec push (bad) (bad) out sub dec pop sbb pop inc xor sub cmp mov mov aam decl mov mov je xor mov add sbb sbb inc mov mov mov fisubrl mov enter jg add sub inc cmp inc xor cmp mov mov out clc testl inc adc pop ret mov in out or push jns xor pop or inc call and add xor aad mov in dec mov aad add fwait aas or inc aad loope in xchg clc mov mov push xor sub and add fstp or pop push or lds add jnp sar (bad) call or push call cmp or sub push inc je mov mov mov in (bad) out fimul adc mov mov sub ss loop inc inc aam pop sub ffree and clc mov inc push or lea push push pushl incl cld das sahf adc sbb pop jbe and in push sbb sbb sahf ja fstpt sahf mov or (bad) cmp jne sub cld (bad) lcall xchg push jl inc mov push decb inc js inc js inc adc sahf or jmp and xor mov cmp mov sub dec hlt and pop orl jne movsl push add cltd roll cmc ja adc mov and or je cmp jne jl push push add mov int3 daa or jmp cmp rorl add jae jmp std add mov movsl xor pop aam rolb cs cmpsl adc push jge stos adc in addr16 cmp ret push push sahf cmc mov roll jno int ffreep outsb loopne or pusha add ss out push jle mov lock pop (bad) jo ja cmp xchg rol lahf pop fisubrl pop sbb pop push add adc jle pop lds imul xchg mov js sahf mov testb and or (bad) sub adc cld push add add sub adc adcl mov push fnstcw inc (bad) ss adc sbb and add outsb repz push xor xor into push push dec nop lock adc lds inc xlat gs test ror aam dec xchg push xor dec xchg mov nop add xor mov fcomps je push push outsb mov pop es jg cmc pushl inc lock lea jmp push mov cmp xchg ficomp je movl mov xchg mov movsb lea inc pop mov nop cs pop scas mov cmpsb inc push push stc pop xor stos lahf in mov or pop pop pop pop fsts push mov imul jne dec or dec push mov stos mov mov sbbb mov lea mov add (bad) aam jns mov std sub jbe mov add add mov fisub add xchg movsb ret mov fwait test in insl mov mov pop adc dec test dec (bad) lea adc sbb sbb jns nop pop ret mov mov daa and mov dec adc daa jo int3 lahf fnsave call ret fisub sbb (bad) mov inc and addr16 mov int3 mov lret or lock dec (bad) dec mov roll or cli jg and lea insl inc or add inc insl test mov inc or add xor pop outsl addr16 rcll pop mov int3 pop xchg lock mov (bad) mov jne jbe jno fcomps faddp mov je add pop (bad) pusha mov cmp xchg popf pop rclb mov cwtl or ss sub lock mov jg adc cwtl or pop testb mov mov sti in push dec (bad) sbb push lea sbb push adc add mov push dec adc outsl dec scas mov adc enter das dec jbe adc sbb ja in or iret imul or cmp adc add or shlb sub and mov (bad) clc or jae adcb js mov outsb je mov push sbb adc add add add add add cmpsb xchg pop cltd cmpsb imul add dec add add (bad) aam in repnz out add xlat jne cltd loopne cli pop or dec (bad) xor sbb sub push insb jle jmp cli add rolb call or lcall push jmp cmpsb jbe and imul add cmpsb imul imul imul lcall scas enter cmpsb imul add cs insb mov mov cmpsb jmp or add movsb ret nop add push imul mov add add lock add fiadd rol cmpsb imul imul or testb call imul imul out push clc cmc add out enter lcall mov and add mov call cli jae (bad) cmp xlat (bad) add (bad) aas pop int3 add add je (bad) je ljmp (bad) xor (bad) xor pop jb (bad) xor adcb xor aaa loop add rol mov pop xlat xor mov add xchg xorb xlat jne sarl and sub pop add dec (bad) je (bad) or add and cld sub je add add into imul jbe imul push add add xlat xor lods pop pushf add xor mov push xor (bad) xor es sbb add dec (bad) je fnsetpm(287 add mov (bad) xor jbe dec ss fmull add cld outsl in add add adc inc xchg add inc and cltd inc add out inc add out inc add inc add dec inc add cld je xlat jge incl inc pop xchg aaa add inc cmp add daa add add dec inc add inc add or inc inc add jmp jmp pop or dec inc add pop adc xchg inc add lcall inc add pop mov sub pop shr adcb and mov ds aas adc loopne add iret (bad) cmc inc add test inc inc mov pushf sbb sub mov cmp aas add inc push imul movl aas adc add jae (bad) mov mov adc add and iret pop or adc cmpb pop adc in (bad) (bad) jg jb jbe gs popa addr16 push gs imul jg fildl stos xchg inc add faddl mov aas dec mov or aaa add cwtl inc add loope pushf or aas push add ja cmovg gs add inc (bad) mov add cmp (bad) xor pop xchg arpl dec inc and pop addl jg jnp pop or out pop pusha cmpsl inc mov lret dec pop inc inc insl fs popa jb gs add (bad) (bad) clts sub add int3 sbb jb neg test pop mov pop es leave sahf cmpl pop ja das pusha sub sbb or adc add push lock or inc add fiaddl push sahf sbb push jle and adc pop mov daa xor adc sub inc add pop inc push inc add sti pop add pop push popf inc add xlat lock jo imul nop pop adc cmp cli daa mov (bad) push add inc inc add fcoml mov dec inc das fsubs ds mov inc js inc pop clc clc cmp str mov push jae jb js gs imul stos cmp int3 and push gs jne arpl pushl jne js (bad) imul add cmpsb imul add outsl lcall inc add mov cmp xor xchg add inc pop cmpl add ja sbb and xlat loopne arpl mov push ja invd lock subl jae inc add push pop stc cwtl or popf test inc add loopne add mov push sbb mov icebp mov adc inc sti mov push je fild jb jns fdivrs xchg jnp cmpsb lahf nop aas arpl add aas (bad) sti pop incl imul sub inc add mov mov xlat mov outsl lea inc pop mov add inc add dec loop inc add xlat add or pop call pop fldenv add cmp das add dec mov ja jb push loopne out add dec scas mov or dec aas xlat mov icebp decl je jne jo jb gs call inc dec gs outsl jb sub add dec jp jb adc dec aaa pusha sub lahf shr mov loop add pop cmp mov nop scas movsl inc add insl bound outsl js pop idivl je popa jb or nop ja or dec rcrl and push cmp pushf call push add jecxz test jecxz inc and sub adc and mov or fsubrs add and pop xor xchg sub mov jb das xchg add aaa into xchg or and stos addr16 add or cmpsl pop mov pop mov adc adc jns add push add xor inc lret adc ljmp js add test es add xchg cmp into or pop imul (bad) adc push jmp dec ss adc push fwait and or das xchg add (bad) jae cmp adc xchg jbe add jge das loope (bad) pop or jge pop or ja add add cld pop sbb xor mov jbe aam push inc add fs add push xchg cmp add mov loope and test xor adc or inc out fcomip js insb fs jb arpl xor adc in jg push inc outsl outsb je outsl insb inc popa jb out (bad) out add dec inc dec inc jb insl adc or lds adc dec insb gs dec (bad) cmp add je outsl outsb imul inc add cmp ljmp insl inc imul jae or jno dec cld outsl insl push outsl imul inc add movsb and outsl ja jg cld cmp jns je insl dec andb push push (bad) jg incl xor add inc dec push push dec inc pop imull je insb pop inc jb addr16 imul je jae cmp enter pop pop inc hlt add pop aas sbb imul pop pusha jg pop inc add mov cmpsb pop add adc pop or mov add jno lcall pop (bad) bound outsb ret scas jmp call outsl mov js out shrl inc add jae imul inc add xor addr16 outsl insl insl outsl outsb xorl pop idiv jg dec dec inc push dec xor cs dec dec sti jo mov xor sbb add cmp or lods xchg dec fldl out dec shlb lahf sti dec push das dec popa jo je push outsl add or std test in add lods inc add jmp dec dec dec pop cs dec push addl (bad) out and pushf (bad) decl outsb jne cltd cmp jne mov push mov addr16 pop das xchg subl pop mov call pop lret sbb jnp cmp add sahf inc or inc es lahf pop mov or push clc movsb adc pusha mov cmpsl inc add ja lods push jbe out lds jg data16 sti or pushl sbb cmp cmp add outsl out add dec and and dec das fs jns (bad) out mov add inc arpl bound pop dec outsl jbe call arpl push in adc ja pop inc jne jne cmc dec jne inc add dec jne cs fwait inc jo imul dec popa cmpsl dec inc bound popa jb popa outsb mov add push add into rcrb dec aas insb add dec mov (bad) out jbe jb cmp dec popa outsb add je jb sbb inc jle jb or jb add push gs gs mov or push jne mov popa je inc jb add das add (bad) (bad) fistpll add add inc dec dec inc inc dec pop dec inc inc push pop push inc dec inc inc push mov inc add dec push push inc push push (bad) add pop mov iret and jb jb or aam dec dec push push adc add dec inc (bad) mov dec dec inc dec dec adc xor cmp outsb popa fdivr pop jmp and imul jp and popa jo (bad) (bad) aas fild daa aaa outsb outsl je outsb outsl jne push arpl data16 pusha out jnp outsl ja cmp aaa dec sahf inc cs fs (bad) lcall xor and jb jne insb and outsb arpl ficom sti and insb insb pusha xchg xor xchg fdivr std lahf pop outsl outsb gs je popa je and ljmp jnp iret xor aaa imull outsb and outsb jae and or imul jbe gs push gs adc jbe dec pop jg fnstcw sarl jne je je and imul mov sbb xor popa je aaa cld mov popa bound jb add outsl addr16 les test insl imul dec and outsb inc outsl outsb insl outsb je dec pusha mov xor iret sub addr16 out jne jae xlat xor daa data16 outsl out ficom out outsb outsb and and adc xchg cmc (bad) add arpl sbb push imul inc sub and dec imul ret sbb push inc mov or ret jle out aam ret cs outsb xor outsb add mov fbstp add push add add add inc inc add clc (bad) aas add pop or aaa xor push push pop add and scas stc out pop jb or pusha add add js and (bad) mov or sbb add add add add jne insb add pop add outsb jne insb or jle push pop (bad) out outsl int3 cmp inc inc dec jae arpl jae jb pcmpgtw jb jae xor inc sub push inc fisttp add xor mov jg pop js das mov add outsl fiadd fdivrp fldl jae pop jns add xor add pop mov insw outsl (bad) add jns outsl fistpl pop aaa sti lds mov data16 addl gs add outsl jae jae outsb add jb add jge pop sbb cmp into mov and xor ds pop repz push pop insb outsl xor push jo addl arpl std inc add add roll aas xlat popf les imul mov out inc add add and stmxcsr in sbb clc pmulhuw call jnp pop dec add add pop ds jnp aas pop cmp add sysret andl xchg or or outsb or xor pop xchg imul push jb sbb addb push into adc shl cmp add push or push or frstor push pop add popa jae inc jb pusha xor std gs outsl jo jo cmovns dec jge dec or gs outsl xor gs lcall js and inc dec add xor dec dec loopnew sub pop lret out mov sbb inc add add mov inc xlat pop popl or jle add xlat out lcall out jae push add negl add dec or mov aaa push neg jg xor inc add add add pop mov outsl dec pop inc pop adc dec das addr16 add pop rclb xor or das loopne imul dec xlat sbb cwtl sbbb push sbb add pop and pop dec clc adc mov and arpl xor sbb fcoml (bad) cmp daa jo push sti (bad) lds add adcb inc cwtl sbb dec test dec shr add inc rclb cmpl bound fdivr pop push add outsl popa out sbb mov jnp sub inc pop outsl neg ret add or in sbb adc outsb nop pop dec test dec mov inc mov ja out jae lahf loopne mov xlat clc sbb add or lock xor add mov jno out or pop mov daa js mov fldl inc iret mov cwtl in add mov divl out sbb pop pop ret dec loopne rclb inc add sbb add sarl pop out or sbb sbb mov mov mov das mov dec pop xchg in mov inc fcoms pop wrmsr aaa and lahf add iret iret and dec or or sub dec dec mov fadd add mov in dec out add adc cwtl lahf mov cltd cmp enter adcl dec lock dec bound and loope dec add out sti inc sbb loopne out (bad) jo fdivr pop pop aaa mov pop jo pusha add call adc mov pop sbb test pop int3 sbb cmp insb mov dec fcoms pop push rcr movb negl and push sti bound dec xor adcb ja mov pop cmpsl testb add adcb rol inc scas ret push push or aaa test add rcll xchg pop jae outsl and aas lret clc sbb ja outsl fadds inc or add dec mov sbb outsl test or outsl fadds dec pusha adc push add push mov pop enter push mov neg pusha adc inc and inc fcoml xchg rcrb fucomip sbb in sbb das add adc mov or and and inc add sbb outsb mov push push inc dec adc dec jae (bad) push arpl dec jo push neg ret add sbb add cwtl adc push insb dec rcrb fcoms mov adc adc loopne dec clc sbb mov mov xchg pop pop xor out add push xor jo jnp ret fsub pop push xchg xchg push pushf daa fdivs sbb xlat les orb sub xor add push in js loope,pn add xchg add adc sub cmp pop and out push daa xor add inc fs js xchg adc pop mov pop inc pop add aad repnz and adc and xchg or cmp pop mov (bad) iret pusha daa mov sub das mov pop mov daa push mov ret xchg pop add mov loopne in gs push pop call adc xlat and mov hlt jg daa cmp mov adc xlat out push das cmp cmpsl sub mov xor aaa mov out aaa pop pop aaa fs aaa sti faddl fsubs in ret jae aaa cwtl pop aaa push adc mov pop add dec daa and int3 jge les das inc mov jge lock das clc pop addr16 or dec pop mov pop inc (bad) or fdivr mov iret sbb ja mov or or mov out jae ret adc aaa or mov xor and mov dec dec pop fwait pop mov outsb clc inc clc lahf cmp sbb dec dec pusha ss mov pop aas add xchg add das cmpsl jge mov rcrb fdivs pop dec pop pusha fistpll adc sub loopne int add pop push or adc cmp add (bad) lock pusha pop inc xlat cmp das jnp fs dec pop daa comiss cmpb add add pusha xchg in mov pusha jg pop pusha mov incl aaa mov pop add sbb fisub or or out or imull add das jg sub or enter in jmp adc daa mov mov pop pop inc pop aaa jg mov in jo fsubs cwtl dec push fs rorb sbb daa adc sub adcb ljmp daa adc cmp int3 inc mulb pusha daa push daa pop cmp pop das nop daa mov pop sbb inc or in jnp or mov add das mov in add add cwtl sti fdivrl xchg xchg out inc sbb faddl sub sbb das fidivr fimul pop or cmpl add add xchg xchg jnp stc fiadd push pop jo add or or cwtl and nop cmpl fisubr xchg sub orl pop mov call add add daa push add adc adc arpl adc push xor xorb ret or add insb jo jo add mov mov std dec mov dec dec dec dec or pop (bad) jmp adc push inc push push dec dec dec pop cld add and arpl fs addr16 test insl popa movsb mov (bad) dec dec inc push mov mov cmpsb sti aas and push inc add push inc add add (bad) mov add test inc add scas adc mov add add cmp inc add inc add inc add test mov outsl mov inc add mov cmpsb imul stc mov stos inc add scas inc add inc add incl stos add inc add mov daa and push inc add add int3 jne fdivs pop lock aas roll pop push sbb pop pop pop (bad) decl inc jne jb outsb je gs imul pop add insb imul iret pop inc (bad) jg pop enter pop add add lock ret mov pushl repnz rol jmp cmp jo cmc jg dec scas mov cltd add (bad) out data16 push gs bound push jb jbe insb gs sti (bad) jg add mov (bad) jae arpl jae cs add add enter and scas (bad) lcall jge jne cmp add inc push push inc pop rclb inc pop jb insl popa add shll and arpl lahf or inc dec xor push popa jae insl addr16 rcrb rcrb gs (bad) pop push addr16 popa outsb addr16 jne push push std inc test push inc push jb jns xor xor gs test das and mov imul imul outsl outsb incl mov or popa mov (bad) ljmp and and arpl jo outsl outsb imul and das and aas mov pop and fs jne je and sbb mov jbe xor push add dec add je insl and jb popa xchg jg (bad) ljmp xor popa jne outsl and insb arpl popa arpl jb mov outsl jne fs and gs inc or lcall add je and outsb gs imul inc arpl outsl jb inc js mov popaw insb jae add stc imul (bad) sub and je jne es jo sub popa data16 add dec and jae je jo outsl mov and fwait inc push push dec jb and aaa std sub sub insl push and js and arpl gs outsb and popa jo imul popa xor xchg and xor imul outsl mov push sub cwtl sti jmp popa je sub insb mov shr pop in mov and sbb fdivs and sub int3 xor aaa add ljmp test popa and sub gs insl jo cmp decl jae insl gs jo je das js jb imul (bad) and popa js arpl cltd in fmull xchg sbb inc test roll sarb insl and fs push (bad) fbld and imul je sbb ja imul adc arpl movsb je adc and jle or sub mov jge and jae jb add or cltd and push fnsetpm(287 js jns dec cwtl ss jb cmp or gs push cmp and mov or arpl sub and data16 and jecxz jae imul pop jb gs dec out add jo jne gs pop popf sti negb je gs movsb mov jb cmp adc ss xchg xchg cmpsb (bad) jnp clc cmp push jae aaa outsb (bad) dec adc popa jbe bound add push pop popl adc sub movsb gs test aaa (bad) fwait jge jo outsl insb xor ffreep fisttp or and popf and add outsl insl cmp out jnp push push dec and imul or inc add xor (bad) (bad) (bad) and pop inc push cmp jno js pop jae jbe jp cmp aaa dec (bad) (bad) (bad) ljmp push js pop outsl jb inc inc push xor pop inc dec inc fs inc inc xor (bad) (bad) (bad) lcall dec dec dec jae gs xor js push push addr16 je push xor ss lret jne push jo movsb cmp mul sub xchg lods jo jae and adc mov outsl jb xchg lock pop fs imul popa insb imul jmp mov or sub fidiv jmp outsb or gs and outsb gs mov inc jl and dec or aas pop inc and outsb imul popa xor pop push into sbb inc xchg sub sub and push or iret or pop and imul xchg stos imul subl adc dec and je jae das das shll jae bound add ja imul jg and int ret sub outsb jns and ror int jno pop sub or mov imul inc aaa add push arpl dec ljmp add add nop sub scas inc jmp rorl adc xor je add (bad) cmp push add dec int push out and sbb cwtl test arpl fwait cmp add bound push dec inc dec inc inc pop adcl xor (bad) out into pop push inc add xchg in pop pop push add add add add sbb mov prefetch and xor adc mov out outsl cwtl cltd or add mov add jae or or inc adc das pop nop sub adc cmovne sbb sbbl cmc mov loop or loopne inc or dec adc mov push and nop or mov mov and or clc adc jle cli or lock add je js iret in and (bad) repz sti (bad) pop rcrl cs add cs lahf jmp cmp mov jg jae adc inc add jb,pn orl mov adc mov and daa inc jo,pn inc pop fwait jecxz add adc and inc add inc js,pn xorb inc push adc or add or push add bound adc jle in cmp daa sbbb ret xchg cwtl lea dec imul xchg fwait add fstpl out dec pop daa shrb push xchg enter add and push mov cmp (bad) incb je,pn lahf xchg xchg mov aas cmp dec add mov and gs outsl sub aaa fisttpll cld daa inc adc add nopl cs lcall dec sub dec mov xor mov or data16 enter sub xchg or cmpw je xor sbb add jg test xchg call dec mov cmc call dec mov add fdivrp jne and mov inc jnp mov mov call or or cmpl je xor dec add ret (bad) mov movsb push jmp xchg dec arpl dec add cmpl pop jne dec sbb stc or je push add sbb fldl lock jbe adc outsl (bad) lea rolb jmp aam lea call outsb mov sbb (bad) sti mov inc test cmp adc fbstp lds sahf or dec lea mov or pop dec lea cmpsb sti mov das inc inc mov call nop out loop nop/reserved inc push push push push push dec sub add sarb or repz stos dec mov int mov push lock mov pop xchg or out (bad) pushl xor dec mov jmp dec cmp je ljmp icebp inc call dec mov lock cmpxchg dec test jne dec mov jbe xor adc sub out scas sub je mov pusha pop cmc push sbb pop mov pop xchg outsb add or xor mov cld jg leave call call sub adc adc jg mov call or call out out call add dec mov push (bad) lcall into pop jne jmp nopl test je and je pop push cld xor dec add movzbl (bad) lock jg out mov inc xor cmp inc cmove jmp test jne in das jecxz jmp incl ss or cmp jecxz push testb mov inc jne mov sbb inc lea add in shl dec mov call test dec mov xchg scas adc fistp jle lea xor dec lea fdivrp fwait decb or call jo dec mov call inc sbb (bad) adc dec mov or sbb dec cmp jne dec lea push cmc inc and mov out pop call xchg insl adc pmaxsw mov dec mov xchg test or (bad) ljmp ret lret mov test jne call mov (bad) inc add pop inc pop inc pop ret movzwl jmp mov aas push sbb js pop in add test mov sbb insl mov adc fucomp pop xchg loopne sub or sbb aam (bad) rorb test and add out in jmp loope call jmp ss nop inc outsl inc add jbe add dec jmp call or jne dec (bad) icebp sub call cld (bad) call pop sub inc das inc dec mov sbb test jnp dec mov dec lea popf pop jmp push jg or pop pop mov nop or les push mov outsl movsl call dec mov dec mov call into adc and lahf dec jo (bad) mov je out cld pop dec mov call jmp outsb ret cmp testl inc (bad) lret dec mov je nop jno jecxz xor call or (bad) cwtl xor jge cld pop sbb ret call out out mov imul xor jmp outsw mov cmpl pop xlat cltd ret into std jne xchg cmp call sti cmp mov mov gs or scas dec mov fs xchg inc das push mov or cwtl dec insb push inc push ret jmp nop nop inc aam iret dec mov dec mov fdivrp add mov cmp call and cmp and in and out sub iret dec mov (bad) call xor loopne cmpsl pop mov inc mov outsl icebp dec mov call dec add inc mov jmp cwtl sti (bad) sti add dec mov xor ret sbb std jae inc mov fisubl xor dec std rcr dec add call inc add add inc cmp mov and add movsd fstl call xchg cmp adc mov adc inc mov push inc test mov dec loopne imul int inc into movsl into movb movsb inc mov lea movl add fcompl movsl mov sbb in ljmp adc incb fstl add xchg dec and dec cmp je out and push fwait add loop mov mov dec sub dec shr dec lea inc and je pop pusha mov mov cmp je stc add add fstpl xor add add push add je push je dec mov dec lea orl cltd sti mov mov dec lea pop mov out push dec dec mov das pop mov out fidivr mov pop push dec and dec cmp je out inc dec pop pop nop lds (bad) pop pop jl orb je cmp dec in fild lds pop or dec mov repnz cmp jns push add cltd mov lds jne lock or imul test sub out daa dec adc push je adc dec frstor mov and loop cld mov dec shll call add xor xor mov jns dec push outsl jae pop and lret inc or inc mov lock or or lea mov decl fsubs dec add arpl dec mov mov movb call jmp pop mov mov add xchg loopne mov call call cmc icebp add cmp loop jg add pop lds jnp gs cmovs loopne std dec lea mov dec lea adc add dec cmp mov call (bad) mov mov dec sub js dec sub inc mov dec cmp (bad) icebp out decl lds shr dec aas or and lea inc sbb movl cli dec jmp and dec mov dec mov dec movl mov sub sbb rcrb sub shr (bad) dec mov dec mov out out (bad) push adc (bad) je inc inc mov ds popf sbbl pop jmp fs adc call ret int inc push popa sub orb dec imul push dec mov dec sbb mov dec lea mov call ljmp jne mov inc sub dec mov cmp xor notb rcr aam add into dec or adc cmp xlat (bad) decl dec and je dec mov dec lea dec lea push xor sub dec mov (bad) dec push cmpsb cs push and cmp ljmp insl inc daa add dec mov mov jae cmp sub jnp push (bad) mov (bad) jno subb and dec mov dec mov dec mov dec mov call sbb rol clc pop out pushl gs inc mov dec or add adc sbb xor adc push dec dec mov dec xchg aas out pushf mov dec mov mov dec mov push mov js cltd dec or sti jg std inc mov and dec fs mov add dec out into jge pop xor data16 leave bound jbe jno ret dec mov jmp inc outsl pop ja dec mov pop ret sbb jp mov pop inc mov pop lcall inc movl jbe dec mov fdivs aaa push icebp ja dec and inc mov dec enter pop add and dec lea dec mov das add cmp pop movsb cmp inc and push int3 (bad) sbb or push mov mov push dec mov push out aam inc cld rol pop mov and loopne dec mov lock jecxz dec lahf mov aam scas push dec mov and sahf dec mov dec lea (bad) fnsave push add or dec mov inc push (bad) enter adc jle cmp push push or add (bad) (bad) cmp add inc mov shr dec shl inc lea dec and dec mov inc mov dec mov jecxz dec test je dec mov out or jae icebp dec mov dec xchg lea or mov dec sub dec add dec cmp je fimull fmull sar jge loope (bad) sbbl lcall fstl js psubsb dec mov dec mov dec mov aad jg lds dec mov push inc mov or dec mov je and out jo fisttpll dec or or sbb hlt mov dec mov and or and loopne adc arpl addl cmp mov inc pop xchg rcrb adc jmp lahf mov xchg inc mov or mov dec inc mov ljmp add inc add dec mov inc or test mov add dec cmp jbe jne cmp dec inc jo mov push out jo cmpsb dec lea add lret jno sub das loope xor or dec or push jmp les mov xchg aaa cltd dec test dec lea and fdiv dec push pop xor jmp pop push fisttpl inc pop or (bad) add mov sbb sbb test lock jg popf orl rolb mov sbb fimull test xor cmp add je aaa mov dec mov inc mov mov loope inc mov ja or push dec lea jmp jmp (bad) cli (bad) (bad) (bad) mov mov call test in jp xor mov imul mov jmp sbb dec mov dec sub dec jg je dec cmp jmp cmp jg or mov dec mov mov imull push mov inc xor call inc sbb inc and (bad) sbb adc into (bad) fidiv cld dec ja je dec adc xor dec add xor xor imul jne push or sub dec xorl fldcw push inc call je fadd ficom dec mov xchg inc mov cltd xorl lret int fcompl or lahf mov leave push leave stos and jo sahf out in int3 aaa loopne (bad) xor jb dec xchg jmp dec cmp push inc sub jp mov jns sub ret xchg adc fcmovnbe cmc ja dec mov dec mov cmp xchg lea ljmp inc and and movapd out pop fwait cli adc test push mov adc sti (bad) enter into comisd movsb pop add or int xchg mulsd xor fbld dec cvttps2pi pxor push or jg dec cvtpi2ps and cmpnlesd or sub inc je div subps or dec sub push xor push add leave dec mov icebp ja jp xor jns dec mov dec shl mov incl and dec mov dec shl adc mov loope fbld dec mov inc mov dec cmp ja mov dec test push rolb mov dec mov pop in add xchg jg sti add pop dec mov jne clc pop outsb loopne mov sub inc xor xor or add add (bad) dec push push add mov repnz dec mov addr16 dec mov and outsb sbb push or repnz movups or icebp mov int3 out icebp add xchg or xlat loopne sub or ss call and in xchg into es and js scas imul inc xchg js and xchg dec mov and dec and je roll inc mov dec lea dec add xchg rorl test cltd dec cmp ja dec mov es (bad) (bad) stc outsb dec add arpl mov mov mov or getsec and pusha or int3 (bad) adc fmull (bad) sbb and sub add push and sub or lock jns adc pop add clc and dec movsl (bad) and mov dec sbb popf mov in popa scas cmp jp sub xor xchg or jnp sti scas sub xor out rorl dec xor popa pusha sbb add int3 scas scas (bad) cltd pop xchg xor mov movsl js ret adc fcomi ljmp (bad) jecxz cmp sti js mov dec mov ja inc (bad) decl inc lea shr inc add inc cmp jb es dec mov inc inc lods dec and dec mov mov (bad) iret (bad) sbb push xor dec mov inc mov adc (bad) adc or cmp jg push xchg dec or mov in nop dec fwait mov je push dec mov lea ss pop push dec add clc push sbb lcall dec scas pusha loop mov iret test decb dec and dec mov loop hlt cmpsl inc pusha dec or and and dec mov lock call adc sbb movsb stc das dec cmp fnstsw or mov push or icebp and insl cmp jbe add and pop ret aam push (bad) aam mov mov adc inc daa and sbb mov out push dec insl paddq mov add push add mov lret jo or dec or dec mov popa dec mov (bad) xor jl dec sub sbb cmp xlat adc mov add cmp inc fadds cmp adc jo adc faddp js and js push jp cmp inc dec mov pusha push dec mov dec lea ja inc mov inc mov dec or dec mov lret push jb and pop lea dec mov dec cmp mov shr dec shl inc lea dec and loope decb add dec dec test je sbb cmc rorb adc arpl sbb cmp push nop aad sub dec add dec add pop dec add dec mov dec cmp ja (bad) mov rorb test or test dec mov je dec mov dec mov xchg stos mov call xor inc and sahf push xor fisubl clc dec or dec mov jbe sbb jo jbe fisttpll icebp cmc or add mov dec and cli (bad) aas xor and prefetcht0 dec mov inc mov dec cmpsb es (bad) cmp adc push roll adc insb or sbb sbb add movaps sub adc inc inc pop ret loopne dec fs decl push rorl repnz (bad) decl testl call dec and jne xor in pop dec lea dec inc dec ss clc sti cmp ja or mov dec inc mov cmp mov dec sub (bad) je ret jg add dec cmp jbe jp decb test ljmp jp add test mov scas sub add das pop pop xor xchg stc (bad) decl dec or inc push xor jbe dec lea shrb outsb xlat ds mov outsb adc das sbb (bad) cmp dec mov inc adc flds mov out lea and jne lret test je dec mov dec lea cld jge pop jg lea jbe push test inc je jo mov sar adc hlt add pop cmp (bad) js mov lock ss lea fwait cli (bad) jg and dec mov dec sub dec add dec cmp je mov dec cmp jb dec in je stc (bad) lcall and dec mov dec mov call sbb cmp dec mov jmp mov out xor imul push lds sti (bad) scas test cmp dec dec inc rolb call (bad) sbb xor test es mov outsl dec inc popf jp mov dec pop or sti or dec mov jmp sub dec mov jmp sbb cmp jg adc and movl jns cmp xchg std dec mov out pop sbb sti std clc jbe push test dec lea hlt mov test cmpsl pushl mov dec and dec or xchg cli xor fucomp push xor (bad) cmpsb out pop push sbb dec or dec mov mov dec cmp ja outsl rol clc jmp rolb notl aas lods inc mov jp mov addl jle adc or repz xor adc (bad) decl adc cmp sbb inc mov push stc out pxor add fdecstp and dec mov jb dec cmp sbb (bad) dec lea sbb daa mov leave jmp inc jo rcl lods ret pushf pop dec (bad) jmp cmp test dec xor mov pop xor into xor mov pop leave in stos test fdivl mov (bad) bound test dec mov xor push and call cmp ret andl test hlt adc inc mov fyl2xp1 push mov data16 ljmp jp dec lea jmp inc fcompl adc sub xchg pusha mov push pop sub (bad) sti inc xlat cmp test rorb lods out pusha pusha fsubs pop stos adc rorl dec or test jg out repnz incl std or (bad) jae dec mov inc mov pop (bad) (bad) out dec mov dec mov dec mov dec lea repnz add dec ljmp and xor pop fdivr decl pop inc mov shr and inc cmp dec mov jae mov cmpsb test incl je cmp (bad) (bad) (bad) pushl incl je cmp je cmp je cmp je dec mov dec mov mov xchg inc mov add dec mov dec mov inc mov or iret cltd outsb repnz mov sbb or decb sub dec mov out out cmp cmp addl aas inc lea inc ret mov adc sbb jmp popa outsb adc sbb pop das jmp ficomp ret pop cmp lea xor sbb (bad) lcall test and lea jnp mov pop sbb jbe mov pop je rol dec or xor jl mov call sti or je dec rorb je out dec nop adc inc mov addr16 push cmp scas lods out dec or add mov cmp pop add lds jmp cmp xor rcr and xchg sbb xorl rorb dec mov cmpsl or or jge jmp mov jl dec inc push out adc mov sbb and cmc push push and and sbb sub mov xor (bad) lcall movsl dec mov dec sub dec add dec cmp ja out jne mov jnp jmp and arpl popf push jge push inc outsl popf rcl insb xor inc pusha jo adc es pop (bad) mov inc and xor pop inc cmp pusha push and roll in mov pop aas dec gs sbb push xor inc jmp ljmp (bad) insb lock incl mov inc mov jmp inc cmp adc (bad) hlt sub test mov icebp out jg dec in sub sahf inc xchg push xor xor add lock pop dec dec mov stc dec push jbe ret add out and sub fs sbb and dec pop xor jg pop xor dec ss jbe xchg mov daa or cmp cmp sbb pop adc into gs mov rcrb or xor dec add dec cmp jbe dec cmp and pop add mov mov cmp sbb cltd enter je fldt dec mov jmp cmp mov fdivr lea cli adc clc or cmp jge (bad) movsb push cmp jno and addr16 xor inc in aam and out cmp fbld jmp mov inc mov sub pusha xor pop pop xchg mov movsb popa add and dec mov pop push imul dec sub or lea into cmp les jmp rcr (bad) jp pop xor out pop in adc cmp and scas xor (bad) pop or mov popf inc xchg rorl dec out adc cmp xor daa stos mov dec inc push dec das sub lock mov inc mov inc dec shl dec sar js loopne dec test enter ret ret inc mov jbe icebp mov adc or pusha inc xor mov cmp fild cmp mov je faddl sub push out ret sub dec lea dec ljmp ljmp add or mov imul dec inc cmp jb push sarl inc lea dec mov dec (bad) (bad) cmp sub add inc mov inc shr dec shl inc add dec and stos or inc pop insl dec mov ffreep dec scas insb mov icebp dec cmp jae aaa cmc arpl dec mov xlat mov dec lea rorb push mov loop dec cmp rorl mov xchg (bad) mov dec test dec mov je dec mov dec mov mov divb call mov xchg sub aam inc insl and dec or dec mov jl pushf pushf add jno jg push cwtl cmp dec and dec shl (bad) aas and mov movl dec mov dec mov fmull pop ljmp dec mov pop cmp dec mov inc lea mov cmpb paddb (bad) fldl nopl dec add cmpb jne inc mov inc sub aas sub aas pop dec lea dec jnp or dec les push (bad) xchg pop adc test nop loopne insl push or inc mov lret outsl insl dec shl inc lea dec and dec mov mov aaa cld xchg ljmp fisttpl test dec cmp out sub jae dec mov ljmp (bad) lcall dec mov dec sub dec add dec cmp je fimull ja jo jge dec add je mov test dec mov out call ljmp and dec or dec mov push adc or xor or or add mov andl out adc cmp data16 out clc dec mov dec cmp addl dec add pushf ljmp inc mov dec test je dec mov cmc sbb dec cmp jbe xchg jecxz or cld sbb xchg sti je or jne cli icebp aas sbb decl or int jmp outsl mov mov jmp mov jle imull jmp mov (bad) (bad) (bad) in push jg,pt xchg jae add dec push mov cmpsb dec mov dec and push add xchg sahf xchg mov lea jo test or pop jne inc mov inc or xchg (bad) xor fnsave dec cmp (bad) jge sbb jmp cmpsl daa prefetch or inc adc jmp mov and dec mov xor jl xor xor xor inc dec mov sbb jae xor jmp jo sbb rorl test cmp call cmpsb test dec dec mov xor jge dec mov inc and fcomip push and cmp add pop dec test dec or jmp lret add push orb ret call mov call cmc out mov dec mov dec mov inc inc fild daa push inc mov add dec sbb push or or jmp les aas add add xor jmp (bad) jg mov dec sub dec add dec cmp ja cmc aaa jl or sbb dec mov dec sub dec lea ja jb mov and push mov inc sbb addr16 mov xchg xor hlt cmp mov and mov movsb push enter sbb xor push add call inc into and and fwait and sbb adc inc inc pop inc and (bad) mov (bad) fsubl mov mov int nop dec lea dec cmp jbe dec cmp dec mov add xchg loope ds cld mov test fisttp aaa in xor in mov stos add mov (bad) outsl and dec lea jne jno xchg fbstp mov mov dec mov sarl xor add dec cmp push lret sbb ds mov sbb cmp mov xchg sbb or lea pop jo,pt jbe add sub into jmp orl dec mov jmp and sbb out sbb adc inc lahf insb jae mov inc lret je push cmp aas sub popa outsl scas push mov add rorl adc jbe sbbl adc clc nop jg roll jne mov sub dec mov dec xor mov fcomip add mov mov insb and psubd cmp test pop jo dec lea pop hlt jg mov ja or (bad) dec xor js scas bnd cmp mov (bad) mov dec xor mov jg mov dec lea inc mov add inc dec out inc incl dec or rcl push ja fnsave and pop pop sub dec mov inc mov fs sar scas jmp je dec adc or push lcall xor push fild add shr es popl loop inc and dec or inc add inc add dec mov inc (bad) jg mov adc mov dec mov dec lea aaa mov lea mov or pop call aaa insb insb and dec mov ja outsb dec fs push and and sub out inc mov dec mov mov inc pop sar (bad) decl pop inc dec arpl inc sar dec mov inc and cmp push ja ret testb mov lahf decb push pusha jo pop dec lea push outsl jo js xor jge inc mov mov dec or fwait std pop inc cmp jb packsswb or lds and push or push or inc movsb dec and dec mov inc mov out adc test adc push xchg nop jecxz sub jae dec xchg clc xchg aaa ret ljmp add dec mov jecxz hlt dec cld jns mov add (bad) fsubrp rorl lea test je sahf out dec les xchg sbb mov ja mov dec or dec mov push sbb pop cmp add dec adc dec and or xchg sub les fst mov test mov decb cmp mov dec lea mov clc dec mov inc xor jno add xor push loop dec add mov dec or dec or mov sahf pop add inc cmp mov jb mov add inc lea leave cwtl push (bad) inc shr inc lea dec and dec mov inc and sub je out xchg mov adc dec mov dec sub fisttp test inc dec add dec mov in mov dec xlat xchg stos lahf inc xor pop sbb inc das and fist pop xor mov cwtl dec cmp cli sbb js sub inc inc adcb or sti or repz xor cmp pop arpl adc xor push xlat ljmp xor mov inc lea inc mov inc cmpb pusha sbb dec mov dec add inc mov inc mov inc sub push push xor mov sti imul mov inc cmp dec mov aam and cwtl or add aad pop sub xor inc ret mov arpl insb cwtl mov loop lds std mov rorl jmp test stos roll arpl in stos shlb je jmp sub jnp or inc mov dec mov sub je adc mov xchg jg push dec and pop inc jge xlat mov and lcall sbb and xor add push xchg in mov pop sbb pushf mov lea out sbb ret lahf ljmp ljmp or out dec cmpsl inc shr inc lea dec and dec aaa cmc enter mov shl add sub mov jmp adc cmp jae sub pop (bad) mov ljmp clc dec sub dec add dec cmp je fisttpll fmull bswap aam ret xchg popf dec mov add in or cmp arpl lock orl idiv mov call stos (bad) inc jno ja dec or dec stos (bad) sbb sbb (bad) stos sbb xor fstpt cmp xor xor dec mov xor jmp lcall or or mov jl adc add jp icebp sbb ret testb cmp adc paddusw sbb adc xchg jae sarb icebp lcall jge dec lea dec or inc cmp sbb jle mov imul lea inc xor incl in inc lea inc mov ficompl xor imulb je mov sub add lret jns xchg mov mov push ja xlat adc push dec or js in es inc mov or fisubr mov dec and jl test mov push je data16 inc stos sbb or mov dec or cmpsb out adc ret fstpl pop rcr (bad) fild or add rol lea (bad) outsb jl pop (bad) shrb sbbl cmp dec and lahf lock arpl pop mov out je (bad) pop decl test push pop rcrb imul mov push outsb loopne pusha dec cmp je stc movsl enter dec cmp ja enter mov je mov lock bnd test (bad) (bad) sar rcrb xor mov enter xchg icebp insb inc dec and pop mov sbb testl mov fs daa xor and outsb dec inc js sbb jmp (bad) jge dec inc dec mov inc xor adc sbb inc inc mov dec arpl int3 inc sar inc pop mov incb adc mov lock push pop popf inc lea inc mov aas and push inc shr inc add dec and repz mov je add sbb push jbe cmp jae dec mov rol (bad) decl push or sbb dec sbb enter dec xlat cmp fild xor dec mov dec js xlat fst or sub dec mov push push push je dec mov dec mov call shll pop or jb add iret dec mov inc lock sub sbb (bad) hlt loopne mov adc fadds sub aaa lea dec mov sub sub (bad) (bad) jp aaa push add push pusha stos outsl loop adc jmp aad inc je imul das subl insl add dec dec mov or cli mov jmp clc std add or xchg add loopne pop lea or cmovl add sbb out cmp sbb pop mov xchg sbb (bad) aaa jo in aam dec test dec lea je xor (bad) jne sti adc dec in jmp mov mov pop dec mov test aam popf add repnz mov inc outsl cs adc dec lea mov jne push pop add nop sbb mulb outsl dec mov in test add mov xchg xor sbb dec lea dec mov test inc xor sbb cltd leave lock or push jmp mov push xor (bad) outsl cmp cmp jbe jg outsl jae push push repz loopne mov outsb fs sbb imul dec dec dec or fadd rorb adc dec pop outsl pop inc mov dec cmp jae add jbe insl loop sbb xor push adc inc imul lahf daa outsl cmp mov je nop shrb inc pop add dec xor cwtl push ret (bad) xor ljmp mov test rcl cmpsl mov add or pop shlb or jns shrb out arpl jne data16 jb ljmp and hlt in mov mov cmp dec lea out mov test adc cmp call cmovae dec cmpl stos fcmovnbe cmp test mov fstp mov cmpsb js cmp dec mov xor jecxz (bad) and loope jne out aad popa pop sarl or add dec mov dec fs xor mov (bad) frstor sbb xorl incb mov inc xor jmp mov lds imul mov leave dec fwait int3 sbb out xchg sbb ret jns fs repz out popf and mov push or jmp cld add lds xlat mov call or in je adc lret dec dec ret inc scas dec mov dec mov dec lea jmp jo dec and (bad) pop jmp push faddl into sub pop adc rorl mov push mov pop push xchg inc cmpsb cli dec lea jmp pop inc mov pop hlt je ret rorl or xor bound jmp dec mov dec mov pop sysexit inc xor mov adc out inc mov into arpl push push icebp call add test push pop fwait adc push mov or jmp or int3 pusha adcl inc pop and fiadd fisubl (bad) je shl mov outsl lods adc add pop outsl xorl inc outsb adc jmp shr loope push outsb add mov call les into rcr fwait pop xchg ret adc inc adc loopne addr16 add jmp dec addb out call stc call faddl pusha dec dec mov (bad) mov xchg pop mov int3 mov or popf mov pop mov loopne es pop js add es test inc dec leave inc mov cmp (bad) loope roll add test rorb sub mov jmp int sub dec add clc lret icebp xchg out dec (bad) mov push or dec sub dec mov fidivrl pop jmp dec jnp loopne add xor xor and mov dec mov dec sub dec add xchg xchg xchg (bad) inc mov arpl xor decb outsb dec (bad) outsb ljmp add in jmp cwtl sti pop xlat (bad) test jmp xor pop aas or movb jg adc cmovs xchg mov xor or jmp in fsubr xchg xor cli cmp and mov arpl fs xor call loope aad inc xchg dec mov popa clc loope or ret es insl pop call pushf add xchg jl fsubs int3 call pusha incb out (bad) (bad) call iret xor rorb test mov ret cwtl sub xchg and mov or dec mov inc and inc into fsubr sub push jb dec dec jb addr16 pop lcall inc sub enter sub aaa pusha iret pop (bad) cmp push rclb add dec popf adc xchg push outsl xor xchg bound dec push popf aam test jo test scas and adc cmp subl xchg jbe inc enter call cmp (bad) fdivl roll scas or popf mov and dec (bad) jo jnp jbe jg adc cmp andl int ja mov pop pop (bad) mov push sub cld mov (bad) dec mov pusha inc pop xor stos ds jne std mov into lea push or sub repz inc dec dec cmp xchg adc sbb sbb out orl ffree xchg das or or test adc dec lea mov ds test mov mov push or pop dec jns shll inc test mov dec test cmp sub aam (bad) mov mov je repz pop cmpsb jb pushf fldt sbb lds mov shr jmp int3 push in sub mov aaa sub sbb rorl push dec cmp sbb sahf stos dec xchg les xchg call mov cmp stos jecxz adc push cli pushf adc (bad) jo sbb sub adc mov cmpsb popf (bad) pusha add sub push jg push dec cmp ja sbb inc outsl loop dec add mov sub xchg cmp add sbb or enter sbb fwait int3 fs xor sbb add dec sub xor sbb cmp jae dec out dec ret xchg loopne dec cmp mov or cvtpi2ps loope mov cmp sbb dec fndisi(8087 imul lock loope pop les outsb mov dec mov pop push push dec test jmp bound mov in xlat in sti sbb (bad) call mov sbb inc das add imul cs es lahf or sub sti fs mov decl sbb int3 xor push movsb xor enter push add sub imul sbb and jns gs inc es dec push bound nop (bad) out sbb xor add and dec lea sarl scas enter ret scas out or mov mov dec pop out clc jg (bad) js (bad) pop and add int3 mov call and add xchg je adc dec sbb xchg pop fadds enter hlt sti and lock xchg dec movl or dec lea add adc jg das mov sti or pusha mov and dec mov and mov mov dec mov mov dec mov mov loopne add aaa fidivrl inc mov jbe jp mov shl out decl enter cwtl add fmuls icebp (bad) add adc or ret or pop cwtl jmp (bad) push and mov (bad) dec mov dec mov or fmuls inc and mov ret push xor dec lea andb mov dec lea or dec lea iret sub xor mov add dec dec or dec or dec mov loope add pop call js add aaa sahf js loop mov icebp scas bound (bad) jne jb lock lock xchg addr16 mov dec mov imul xor aas mov jle dec dec mov dec mov dec mov lock sub mov cs mov push mov ret mov inc mov fdivrl data16 add jne sbb xchg flds (bad) aam jbe mov push mov fidivr dec mov lods cmp mov scas xor mov out sbb pushf and dec mov and push hlt lock dec or add decl (bad) out nop out mov aam decb inc mov (bad) adc loopne loop lret jp jne pop je inc std inc cmp ja xchg mov and fild jecxz call cmp ja inc int pop dec mov (bad) call mov imul shl dec cmp inc hlt decl dec mov dec mov je fmuls and mov mov inc push mov sub lea sbb mov nop and mov jne rorb mov ja lea jae (bad) pushl repnz or inc jnp dec cmpl xor test mov and call aam pop cltd rorb inc and jbe mov hlt dec cmp cwtl add ljmp add jp add (bad) (bad) xor jl mov pop adc sahf daa dec stc fidiv jg lcall je inc mov repnz cmp sbb jmp ja imul inc push mov mov test loop adc test add (bad) addr16 decl clc es lds (bad) jmp sbb icebp cmp lea pop in pushf sahf inc xor cs xchg push pusha or or dec or cmp xchg movsb cs pop aad pusha xchg stos xchg inc jb movsb lods outsb test mov popa call sbb inc adc (bad) jl jle jo into loopne mov loopne aam mov out das xor dec mov jmp mov data16 push dec lea sbb (bad) lahf sbb imul jmp (bad) iret (bad) aaa jl cmpsb push inc lea dec mov dec mov cmp pop cmc inc mov inc xchg cmp dec mov movl loop dec test dec mov je mov imul jae das mov jg pop pop dec mov dec mov dec (bad) in out or (bad) je dec mov dec faddp pop push in jo add mov mov sbb dec test js sbb pop add testl ja and rcrl mov jae mov or push xor call dec into insb and dec mov xorl jg push inc mov dec mov cmc fist push dec mov mov mov dec mov and pop lcall loop pop ret call test hlt dec rcr inc call adc lds jmp jg in mov dec mov dec and cmpsb dec jne nop add sub aaa inc iret je mov (bad) call or add in mov mov inc mov jmp jae jmp sbb fisttp rorl inc call pop and jb mov jmp jne inc push inc mov cmc test push sbb ja mov add mov mov and xchg sub call js dec lea fist xchg xchg sub ja ret or and fnsave mov dec lea pop pop add inc and xorb shlb or es or adc dec mov mov dec lea push (bad) fcomip add dec and dec mov dec mov rorl into add dec jo inc rorl cmp call dec mov dec mov xchg arpl js out push pop lea xor jmp mov mov lret mov test jne cmp cmpl (bad) jmp cmpsl fwait dec and dec xor (bad) popa ret call jmp push xor test mov xor scas mov mov fwait xor xor adc jmp and xchg or mov fs repz or push cmp imul imul mov out push mov dec mov push adc jmp dec rcrb push inc sub add call call inc inc pop fildll add dec mov into dec lock cmp jmp xlat icebp sarl fcoms jl mov inc xchg mov jmp dec test mov mov mov pop xor mov jle das jmp ja (bad) repnz sub aaa inc mov dec jmp test pusha mov inc or dec mov dec mov fwait aaa dec lea je jns sbb in cmp push add mov pushf cmc int3 std daa je repnz cmp outsb xor std je dec dec push dec mov (bad) mov mov or dec lea cwtl or inc or loope (bad) (bad) in xchg imul push and data16 or pushf xor and or call (bad) loope mov mov or pop popf push lret call sbb sbb xor mov les into das jns mov shrb inc and leave data16 fcoml sub fdivrl add jmp inc mov mov dec and dec idiv (bad) inc out dec shl dec test dec mov inc mov je dec cmp jae add jmp scas dec mov lea xor dec sbb dec cmp jbe dec lea cld cmp jb fmuls fadds loopne je std jg mov dec cmp dec lea mov mov sbb dec lea cmp je sarl movzbl pop add xor add cltd data16 jnp aas and add out or jmp add mov inc out es mov (bad) into push stos and and jne pop popa add ja mov mov je aaa orl pop pop pop mov cwtl arpl je push xchg imul pop inc mov jge lret dec enter jge out and inc or lahf jmp xlat inc or rclb or in faddl or out xchg sub test and or or cmp out inc or mov je cmp pop or aad je mov cmp outsl mov test (bad) out mov cmp mov or inc pop (bad) out daa xor (bad) dec sub dec lea std (bad) fisttpll outsl aad adc rclb movups dec cmp adc jge adc pop pop pop or adc and out sti adc xor inc inc dec stc insb ds push dec push push pusha push pusha pop jo out lds or jnp adc adc test mov jmp push adc mov nop pop adc aad incb je and ret cld pushf push jmp mov cld cmp mov dec cmp scas jecxz add mov ficompl or add add add test sub jne add push and popf adc lret dec add cmp out add adc mov out lds test pop add jg out jbe push push pop inc mov je dec pop or sar inc mov je inc inc stc jg or jo push push pop or inc push push fucomp sbb push or dec or ja or inc or inc mov je ret pushl pop or pop movzbl mov dec mov hlt dec mov jo inc fcoml dec mov xchg dec mov insb loop xchg fadd dec mov mov sub mov outsb sub mov jne cmp mov cmp repnz call or xchg adc lea aad xchg adcb mov mov mov dec mov je mov or cmp cmpsl push mov adc or stos xor mov fidiv (bad) call pop vpandn pusha adc les inc xor inc movzbl inc mov or inc mov inc movzbl out fnstsw or or inc mov and inc adc add push or add push sub or ss pusha loopne rcrb data16 xor movq dec nop mov add movups pop cmpsl jmp ja mov (bad) xchg (bad) inc add mov (bad) mov sbb es push psubw push nop les decb in in cld fiadd inc dec adc jmp js negb mov mov scas sbb sahf (bad) or or fisub or add or dec add jmp jmp mov cld aaa cmc pxor dec mov dec (bad) (bad) lea loopne inc xchg or in subl inc mov jo push cmp cmpsb js sub add jg and test pop adc pop imul cmp sbb add jo push xchg (bad) cmp and call (bad) aas hlt push and (bad) push dec lea dec cmp ja aaa add outsb push dec movb push subl cmp dec add xchg ljmp dec ror or call call adcl call add clc (bad) jg pop inc dec test je dec sub dec lea dec shr dec add dec (bad) (bad) out fwait jecxz lret dec lea (bad) dec cmovb dec test je dec mov call jbe,pn lea inc and dec sub add ss popa jbe dec push shr mov xor je ret stos mov call dec cld aas ljmpw test insb leave movaps jmp incl add dec lea loope adc mov mov mov (bad) fdivs adc sbb mov mov sti pop inc fbld pusha pop ds add push xchg fsubr pop and and xor sub add push out hlt pop push pop or outsb (bad) insb push dec movl fldcw mov loop es and fnstenv ds sbb popa push mov call and cmp xchg call cmp scas (bad) std jmp jnp mov dec cmp jne dec mov nop sbb inc into cmc dec and outsl and call call dec orb fucomip push adc sbbb pushl hlt pop mov (bad) fidivl mov call jnp inc push jne jmp nop push xor dec lea or fs or or or fsubl (bad) or or andl fimull sbb or andl into loopne sbb or push add mov inc mov mov mov mull movsb adc pusha push mov lret lds push or sbb pop cmp fcoms sub add inc shrl inc mov push mov je call xchg pusha mov sub (bad) dec notl movsl fwait les dec shr dec mul dec mov or les pop ret iret dec mov out out dec mov cmpsl call (bad) bound xor fstpt mov insb mov dec mov jp dec loopne clc call clc dec shr mov xor dec div xchg xorl jg insb and paddd add dec mov mov or movb add xor mov add inc mov or dec adcl adc add cmp fucomip inc push mov sub adc dec sub jne sbb inc mov outsb mov ret (bad) scas dec mov (bad) cmp decl rorl (bad) je jp mov call out (bad) (bad) (bad) decb pop dec add dec cmp je dec cmp je dec sar inc mov jne pushf dec bsr (bad) jle (bad) decl lock dec cwtl dec sub dec add call movzwl push mov call out jae inc and xchg call nop pop loopne push add sub aaa add lahf iret dec mov dec mov dec mov rorl dec lds jl jle je (bad) in dec lea dec sar dec mov dec (bad) lcall mov dec shl out add pop clc dec sub dec mov dec mov dec lcall clc dec cmp jae dec cmp jb jb dec mov dec (bad) frstor cld mov dec mov das dec mov fimul fdivs dec cmp lds (bad) decl inc or dec lea dec dec mov dec sbb (bad) dec mov push jb dec cmp jbe dec mov dec mov inc (bad) int in and or mov gs arpl dec clc dec mov and cltd sbb jbe ret roll fisttp mov cld pop shlb ljmp jno pop stos mov call dec sub or and pop fnstenv (bad) std xor cli and int clc arpl add jp js test dec mov cli sar dec aam (bad) decl decl sti dec mov dec not inc and dec lea je mov cli repz jp lea icebp lret cmp lds out add and call dec cmp fdivl insb gs add cmp pop cltd cmp dec xor sbb fstp in push call and incl mov decl icebp inc mov sub call and cmp lods (bad) popf and loope clc sbb push and out add call popf and pop fisttp dec cld out cltd fucomip movsb sbb decl test dec out pushl cld lea dec mov out dec mov dec mov dec sub dec sub dec fsubr cli scas or call out add clc add lock ds and pop dec inc jo fcomps mov push je dec sti aas jo les add dec mov dec mov dec dec jne out add xor jmp ret fdivrs pop call es mov push mov in mov fsubrl test dec mov mov inc xor std lahf or mov xchg inc or imul or mov mov xor call pop adc jge dec or push dec sub outsb jge fistp xor lea dec mov out lds sub (bad) mov pop mov xchg imul inc stos ret mov fadd dec mov sub js test cmp jl dec mov dec mov jg mov sub push call jmp rcrb loope xchg sub sub cmp cld or pop dec addl movsb or cmp decl mov dec add adc dec push decl dec cmpl cmpl inc outsl sbb xchg fnsave icebp lcall inc mov je (bad) je adc icebp and add sub dec lea cmpsl dec lea inc mov addr16 and fsubl sub pop outsl add dec sub sbb stc add jo push (bad) mov add inc dec add call xchg stos aad mov jle decl fisttpll mov sahf (bad) jmp dec test jle (bad) divl adc imul add xor ljmp (bad) fistpll mov dec cmp scas clc arpl dec lea jb jbe int3 jae dec lea sbb decl dec lock mov dec (bad) out dec pop dec cmp jb (bad) clc jmp pop dec lea pushf dec ss das shlb lahf dec lea decl in dec not dec and dec add jmp pop dec test jle mov mov call rorl outsb fcom ja or int movb idivl out sbb clc jb dec mov (bad) jae ja insb test scas ret shr mov dec cmp scas jb jmp dec (bad) leave xor cmc dec lea mov adc xor cmp jbe dec lea push scas (bad) mov (bad) jb dec cmp dec mov lret je fildll sub jmp das mov mov and add lret dec mov call loop mov adc add xchg mov addr16 cs repnz (bad) loope cltd in add shlb iret inc outsl add call (bad) mov mov cmp (bad) ja cmp je cmp je inc ja cmpsb je fnsave xor jg dec nop dec sbb jbe call call in pop mov mov add cmp mov adc testb lods or cli or dec dec mov inc jae mov aad mov jb cmpsb pop dec mov mov test mov imul cli lea lea cmp je mov lcall cli push je cmp jne adcl pusha decb or jae sbb lret add xchg fistpll outsb sub repz jo pop andb incl cmp je jle jg pop cmp jmp inc and adc hlt jg or inc add mov jecxz mov dec cmove call rorb and cmp in nop ljmp popf andl adc sbb push jae std xor inc cmpb dec push cmove call es inc pop jg out xor dec cmpl push jecxz inc mov lea dec lea or call adc loopne inc callw lahf iret aam out inc mov mov mov sub and sub (bad) bound add xchg dec mov inc movzbl add add mov call repz repz pop mov ljmp xor push call out jg out xor dec mov mov call dec mov call lock inc dec mov call cmpsl mov adc add add fsubr add les adc add mov subb and cmp push je decl mov mov daa daa (bad) mov pop popa call inc pop pop xor fistl jo rorl sub js cltd adc or pop mov ret cmp inc lahf fcmovbe std push jnp dec sbb arpl pop xor push addr16 aas sub lea iret decl mov cmp adc or mov dec mov cmpl add and cmpsb and mov aaa cld iret addb lahf cs call cli mov cs icebp call inc and inc fistpll mov or subl inc fcomi xorb and outsl dec mov pop lds dec call or xchg mov (bad) or push loope pusha or dec adc cmp je incl sub add outsb pusha push or and and dec ficomp out inc call push cli out adc add call jae call outsb imul movsb shr scas add inc std dec xor cmp movzbl mov (bad) call (bad) mov call jle and arpl mov mov in call (bad) divl add cwtl mov test xchg mov dec jmp xor rcll add mov cmp mov adc hlt loope cmp ret cmp js inc lret test call (bad) mov and out push mov and or inc mov dec mov inc imul mov js dec outsl add aas mov push or mov dec jmp xor jmp jecxz jbe inc add dec lea jp lods ja mov call rolb repz in call scas ret test jne jnp loopne xchg (bad) (bad) aam cmp ret push add sbb push scas gs and mov out lods add cld sbb (bad) xor mov adc mov (bad) push and dec mov dec and call cmpb into outsb jbe ret or je cmp push repz out mov adc pop dec cmp jp sbb jmp out cmp or push sub jge les inc mov xor dec lea je dec add inc mov dec lock mov inc mov push aaa inc jne lods lods cmp mov lock lea jnp sub adc adc sub dec pusha rorb das or jmp jmp mov push rorl add lds (bad) (bad) incl dec roll clc add mov call dec lea stc add ds movsl aad or or fldl or je inc fbld cld or (bad) add aad inc sub mov je cmp jne dec mov xchg xchg fidiv xor call push shlb sbb sub sbb insl dec xchg adc jne dec push lea dec sbb xchg cmove adc and and jne adc leave xor popa rcrl (bad) mov je adc cmp aam jmp cmpl out ret push js ss xor jmp dec add ret cmpsb xchg lds sub andl call inc xor mov cltd shr xor add leave js loop call push or testl mov mov cmpsl (bad) (bad) out std cmp dec mov je movl subl or jne jl adc cmpsb pop or mov enter into xor ret scas ret inc adc (bad) (bad) flds and or call jmp scas cld rcrl dec pop mov and xor jae xor sti mov adc ret xchg rorb mov and sbb dec lea stc or jmp call test xor or jo push es das (bad) loop icebp call pop mov adc jmp sub loope (bad) xor jnp ror jle cmpsl mov xlat mov jmp inc ficoml call jmp sahf adc mov dec mov pop adc movntq out call dec cmp jne iret mov loopne dec out shrl xor call or jo sarl or sbb xchg outsb xchg jo stos cwtl cmc xlat mov cltd je mov ds jg mov mov mov mov mov sahf add add add xlat jmp lea inc (bad) call jle call mov dec mov sub dec mov dec mov dec add mov rorb insb and call inc lea mov mov dec arpl inc dec inc movb call push mov mov pop or dec mov call stos pop or fdivrs (bad) pop icebp dec roll inc mov add in call sbb (bad) pop aas dec mov xor nop call insb sbb inc xor lahf jg mov xchg into jne mov test js mov xchg rcrl call cmp mov lock inc mov test (bad) jl mov jo xchg inc add pop (bad) dec and push out daa or inc lea test sbb cmp xor jg scas sub add (bad) arpl dec mov inc sub adc mov shrl sbb (bad) out dec mov dec arpl daa cld lcall pop movb dec lea call fs frstor pop (bad) mov add loopne jecxz insb js jl pop bound pop or xchg jo dec out mov rorb xchg fiaddl pop dec lds out cmp into or pop inc mov adc popw idivb mov movsb push out aad (bad) aam adc sbb pop sub ret (bad) adc icebp call add leave iret pop dec xor pusha mov or cmpsb push icebp inc inc test mov call les mov xor sahf mov dec lea mov or dec cmp je fmuls dec lea call or jecxz loopne je dec in subb je dec mov (bad) adc dec mov push fs std aaa cmp rorb inc call adc sbb push adc push sbb add mov inc call dec call or adc push add pop jbe clc adc lods xor xchg add dec nop xchg pop icebp hlt and sub pop jo icebp push test (bad) je sbb imul xlat cli dec cmp je orl or mov mov mov or je add fwait fwait push add cmp test sti xchg mov (bad) (bad) lock or sbb inc jbe cwtl adc adc testb adc inc call dec outsl test sbb dec mov xor or enter mov inc cmp dec fdivs imul fwait cmp adc loopne pusha push fwait sbb rorl fwait sbb mov xchg test aam xor xchg dec mov jmp inc outsl aas sub ja rorb cmp je out clc mov dec je iret dec sub cmpsb push andl stos push mov (bad) decl add add pop ror je add adc fsubl call dec lea rcl decl adc add popa lmsw aas adc jbe fldenv adc adc out push pop sub push adc lcall add dec cmp je xor js mov cmp daa mov adc call dec or daa jnp lcall ds mov sete out addr16 mov cmovle xor jo pop cmp stos add jg,pt inc add ja pop pop jmp mov nop cmpl dec mov dec stos jg sub adc dec arpl lea ljmp call mov dec lea xlat dec sub inc test inc psubb lock leave dec add dec arpl dec add std or (bad) ret inc mov shl and dec lea (bad) (bad) incl je dec arpl dec lea dec lea dec shl dec sub dec lea sbb test lods adc btc mov jg add cmp fisttpll scas lret rorl enter decl dec mov call sub ds mov sbb xchg (bad) (bad) out push cmpb dec lea je dec arpl dec lea dec lea jmp cld dec shl dec sub (bad) cltd (bad) mov nop dec lea add dec mov lahf clc push ljmp nop call dec fcomp out mov push inc mov jg inc add mov mov pop dec lea or call inc jmp add jle dec mov dec add mov add dec add add jae out movl insl cli out faddl jne dec mov mov push dec cmp je dec clc out mov sarl sbb call shr outsb or ja pop arpl rorb xorl shl loopne mov mov call jmp dec pop (bad) jge iret fimull push adc dec jmp aad and ret mov or mov or add and dec rorb (bad) or hlt fild call movl icebp es jae call je dec (bad) in ds ja inc mov gs call mov test call sub sub fstp into sbb addl and adc aad fisub (bad) andl dec ja xor fist call cmpsb push out jne xchg outsl or outsl ret pop cmp ja or nop stc sub jge dec sub dec in addl mov neg lock xchg cwtl addr16 mov dec mov call mov jp add fild add (bad) cmp jne inc mov dec mov sub out inc les pop add add leave addr16 and sub dec and mov jecxz cmpsb push cmpsl add dec or dec cmp jo je cmpsl sub shll mov dec shr dec lea dec sar dec pop pushl (bad) jl cmp lret and inc cmovne dec and inc rol std test dec mov mov cli dec sub mov scas mov cmp rol outsb mov xchg add inc movups test mov inc mov inc cmp je (bad) and fadd loop test movsbl push inc sub and xlat leave fsubl pop ds cltd loop push ds test mov das outsb movsbl inc sub repnz cs inc testb (bad) mov jnp test inc movsbl dec mov inc sub je fsubl push dec lea xchg or aaa jbe push sub and push and cmp out jno or inc inc jge and lahf test jno lahf add push or lds xchg sub cmp jmp xor pop (bad) jb popa or add sbb mov icebp xor inc (bad) rol cmp add inc nop ret mov ret push fist jae cmp push or cmp je dec mov call test fdivrl mov je pop xchg std add (bad) adc mov add ret aas ja xor clc dec pop lea dec mov mov imul cmp mov add movl inc inc xor pop or aad out pusha xor call sbb xchg add loope mov jo sub push push dec and call dec or and je inc out sbb out repnz mov ljmp icebp dec and and inc sub and mov adc inc sti dec and pop rorb inc je inc dec sub dec sub loopne lcall add test dec cmp and loop je test std arpl out mov inc cmp jne fstl icebp call jne ja testb dec lea cli je mov add test inc loope (bad) aaa call sbb xchg dec add or pop mov jle and fdivp sub inc (bad) decl and mov inc mov dec or add inc mov outsl pop dec and or dec add dec scas dec lcall test push add dec mov dec mov sub out xor loope sar mov sub and sub dec and test xchg sbb inc cli dec sub dec sub shr dec lahf inc sub cmp pop sbb mov jne leave jp fs jne mov mov cmp and inc cmp call and shll xor push xor adc adc daa cld mov nop decl outsb jnp xor outsb out test cltd add inc movl cld jmp jo into rolb add add inc jb test push mov je je xor dec jae out sahf xchg test inc mov inc jae inc mov inc push xor push inc adc mov test inc inc push or sbb xor mov orl cli (bad) (bad) jmp and dec mov pop sbb icebp inc std dec lea xor or stos dec lea pop mov fimul test dec jmp out pop popa xchg test inc jae sarl gs mov push je inc mov jbe mov jne lods dec cld cmp das xlat pusha mov repnz cmp jae mov cmp hlt dec lea pop test and inc inc cmp test sbb dec xor call jbe adc cltd fidivr fimul test lcall sub and sub cli dec insb inc and test sbb cmp dec mov out sub inc jne pushf push xchg test jmp jae inc fbld dec jle cmp sbb mov test int3 adc test aaa xor test aam and jno cmp fistp lea add les or dec and lret cmp pop mov movl stc incl cmp (bad) clc (bad) mov xor test sbb in cmpsl mov jmp sub (bad) cmpsl test outsb (bad) out jp or je cmp add out test or out add sbb idiv and outsb testl scas xchg cmpsb roll scas cmpl idivl jbe jmp shl mov mov inc sub mov insb cmp je aaa fdivrs bound sub (bad) sub std and mov inc ds dec and jg xchg push ret sub and jno dec je out xchg lahf test adc jecxz or aaa ret mov arpl (bad) mov dec jl test push (bad) mov sbb loopne adc pop movsbl in pusha inc push in scas push movsbl mov idivl test adc pusha jno pop and sub (bad) xchg cmp loopne or test add addr16 pop dec push call outsb hlt jne sbb push movsl mov or mov add lods nop call pop jo aaa push and dec ljmp inc rorl ljmp push add mov pop pinsrw cmp xor (bad) mov adc jmp in out outsl push or imul sbb test push cltd adc orb test add ss cltd cmp (bad) dec aas xchg cmc adc dec jle lret sub pop jnp jmp push or sbb popf dec or jbe push jl mov call test cmpb stos pushl add inc movzwl cmp aad fisub faddl dec mov ja dec mov call inc testl and lea test je inc (bad) sbb sbb sbb adc je xor jmp loopne inc lea xor call jmp sbb mov stos hlt je popa inc xchg jg test jmp adc dec dec dec mov (bad) jbe inc and dec jo add movsb stos js mov dec (bad) sub test adc sub adc loope lret dec mov mov push dec mov mov dec mov jp jg ljmp add cmp not fidivr mov dec dec mov xchg loopne add movl sbb (bad) clc or dec mov rorb push cmpl mov sbb sub cmp xlat hlt dec lahf or lock out inc cmp (bad) xlat mov inc fcmovbe xlat test jmp xor xchg cmp xchg and jnp cld dec mov cmp mov xchg pusha push jmp sbb xchg xchg mov ja cmp repnz sahf or leave xchg push push in push mov (bad) popa mov fadds fnstsw lret dec mov mov mov ret incl cli movb dec lea mov mov movl mov push pop (bad) adc orl dec movl or (bad) (bad) mov sbbl movl test xlat adc fistp pusha dec xor xlat in push pusha add addr16 cld xor push or mov jnp jnp adc xor or add mov movb dec movl pop sbb pop dec mov pushf movl pop inc das add pop jne les pop add xchg or rcrl jecxz jmp nop outsl xor mov xchg dec mov je movl sbb ljmp out jne or sub call fdivrl dec lea sub jbe bound push mov (bad) je cmpb je (bad) bnd mov dec mov mov dec mov inc and movzwl pop jge orl pop push js cmp sbb call lahf neg xchg test les dec cmpl ret jg cmpl jne xor jmp push loope test and push mov xchg out sub or bound pop int3 mov leave jecxz or push out inc sbb add nop pop aaa movsb orb and clc call mov add aam xor adc outsl das movsbl mov out enter andb into mov and enter daa insb cwtl aas js push jne jne xor sti add dec add add outsl dec mov ret mov cmp jbe mov (bad) jecxz xchg js cli add test test clc cmp jne (bad) mov test ret pop xchg pop push mov test mov jle call dec mov ljmp and or jge xchg jnp jg mov or call push outsb inc cmp push popl dec mov sub aaa mov call jle pop rorl lea or or mov xor add popa movsbl push add fild lea dec mov dec lea mov dec lea or lea or loopne (bad) (bad) cmpsl mov pop add gs xchg sarb or or (bad) push mov xor add insb mov sarb sub outsb jmp dec mov jae inc mov xchg dec mov dec push or and dec mov add dec mov (bad) and jmp adc jbe decl mov dec cmp jge dec mov jne add scas test and lea out push stos mov lods mov outsl add outsl inc adc inc test test or or aas push lahf or inc sub mov dec mov dec cmp clc inc loopne jle xchg cmp je dec mov and ja lock call js dec mov push xor jge js repz push scas ret imul cmpsb stos sbb test out cmpsb jle pop dec mov jmp add icebp roll ret ja push dec mov sbb daa (bad) out imul dec mov cltd and dec mov mov icebp mov pop inc call test adc jno lock repz mov xor mov jp sub insl call push sub inc cmp add cld out mov or shld nop jge dec cmp push xor dec call stos sahf and xchg test ds cmc out mov adc fisttpl clc jne cmpsb dec cmp jg cmp mov dec mov call jmp ret (bad) adc hlt inc leave lahf shlb ret dec (bad) push and mov dec mov and mov jle test jne jmp dec decl push adc mov dec pushl inc loopne inc dec mov dec mov dec cmp jg ss mov xor jmp test (bad) jne aad lea mov test in and xchg aad repz sub pop push lret rolb adc pop xchg cmp push int jmp pop out dec mov lds popf imul or dec jecxz mov jmp aaa jne mov dec and leave dec cmp setl jmp xchg lods popf jmp fnstsw pushl dec mov jne jmp pushl inc adc mov mov cli jg sbb jecxz nop sbb xlat loopne pop inc push pusha call dec pop aas je dec mov dec cmp incb in mov out mov dec cmp je cmp pushf loope jp aam movsb fmuls push push ret jmp out into and out dec cmp jne jmp jg mov dec mov jmp fucomip pop push mov xor ja je inc mov aaa lea mov adc or add push inc push fstps clc add adc das sub mov sbb jmp nop lock (bad) push add rolb add jmp shrb mov pop jno add arpl and sub mov mov sbb aad xor mov add dec xor repz sub inc and dec shl dec lea adcb test sbb xorl sub andl inc mov pusha xor jg test cmove dec (bad) sbb sub dec shr dec add and je xor jg add adc sub inc mov jg sbb (bad) add adc xchg and loope ds clc jae sbb cmc inc movsb and add js push dec lea push fidivr inc xlat inc mov inc sub push cmp adc adc xchg add dec lea xchg lds fcoml inc jne mov jno jecxz and ret loopne inc dec movl dec movl mov shll lock lods ds mov dec cmp je int3 shrb and pop dec lea adc jle je ja (bad) fbld ja pop adc popf aad notl mov movl std or dec cs push (bad) aas push cmp call dec mov roll mov jg mov dec and das mov mov out (bad) mov ljmp inc and and test dec pop dec and dec sub dec and xor shl dec add jecxz adc dec je sbb mov lret jecxz dec shr das cli fwait js dec sar aad sub and decl mov aas xor (bad) test dec cmove dec sub sbb xor lds test push add test or je loope and jae test movsb adc or inc inc add test hlt cltd clc out scas cmpw dec lea lahf push mov loopne (bad) jmp mov inc mov cltd test lds or (bad) cmp test aad call ja jecxz adc sub test or and outsb mov inc inc lret jb cmp addl adc adc inc sbb out add inc and push in jo inc add pop or add xor dec dec and jne dec (bad) hlt add dec push mov sar adc dec je (bad) jle enter test daa jmp jo and rclb lea inc jb fldl push adc dec mov out dec aaa inc mov stos fcoml xor loopne add out test mov or xchg int3 add adc outsb divb xchg aas (bad) lock test mov call into xor push movb adc imul xlat cmp cmp popf cmp popf xchg xor inc ror test imul fldt jp rsqrtps repnz sub movsl test and test cwtl repnz or or movsl add or test dec mov pusha mov test lock cmp jmp inc int pop data16 mov out sbb test xor out mov sbb or pop jmp pop cwtl sub andb pop xor jl xor stos or adc negl push test das ss and adc out mov iret jo push mov movsb out fadd fmull dec jmp les mov or jmp shr xchg and and lahf out cmp pop test xlat je and cmc adc loopne sbb inc pushf dec stc add xor test je adc fwait add lock ret sarb dec mov call mov or mov fbstp sbb call aas sub pop adc (bad) add mov push (bad) ljmp lcall test lea (bad) icebp icebp call sti test xor call jbe sbb out jg incl xchg push dec lea dec mov xchg int pop jl pusha inc mov lcall pop adc add mov (bad) (bad) call add fwait stc dec pop testl jmp insl inc mov add je and sar je insl mov orl and pop addr16 pop jb adc sub loop popa cmp cwtl movzwl cmp adc mov push call xchg inc adc call xchg mov (bad) call push pop adc ss flds call mov lret call sub mov loop fsubrl xor (bad) and nop scas outsl clc pop pop mov inc cmpl rorb int out ja dec mov je dec ja dec lea cmp into and push and push add inc ljmp je and lahf adc jns add dec mov add sbb cld cli and dec mov xor cld xchg inc push mov mov dec mov xchg mov fs (bad) repz dec or cmp pop mov dec sub dec and pusha dec mov dec add sub out or dec cmp and test nop loopne,pn in jmp (bad) mov out pop shr xor mov add sub mov mov mulb decb (bad) aaa xlat icebp dec sub inc clc dec sub dec shr mov outsl and and je out or inc fwait repnz inc cld push xchg testb inc movsbl xchg clc or loop sub cs test xor stc daa out add pushf push ficoml push (bad) dec and je inc cmp lock mov shll test sar lea dec mov add xor push lods je dec sub mov and dec or dec cmp mov call clc and das rcll (bad) jae mov lcall (bad) cli jecxz add cmove dec and test dec cmovne dec sub dec mov dec sahf dec mov xor cmpsl dec inc test test inc inc mov mov es xor mov test xchg or adcl ljmp cwtl cmc jns,pt sbb mov iret cmp add pop dec cmp je loope or test test mov fldt ljmp push sub outsl stos and push xor or jo (bad) jg xor mov xchg mov call jmp sub push sub std outsl test sbb add stc jmp out rcr sub cmp out xor add sbb and hlt inc xchg jo (bad) fstl and testb dec mov je pop cmp push adc out push add mov cltd inc xchg add sbb pop pusha js and cmp push pop daa pusha test cwtl or or mov and mov mov add jmp pop rclb pusha push inc std nop stos cli and lea adc ljmp adc clc addb sub jmp and add or cmp inc cmp or popf in bound add rcrl cmpsb jmp cmc push iret inc mov adc jle scas mov sbb iret push xor pushf lds mov dec clc jmp xchg xor jp pusha loope imul cmp mov mov and mov push inc in in add inc pushf lcall stos or xor cmp fsubl inc rcrl and mov and popl inc stos lea into insl mov add cwtl or daa test inc or rorb ror fiadd mov mov sbb mov call test jge push sub cmp test out mov push xor xor ljmp ret fs aas (bad) cmpsb push mov hlt or movzwl popf dec mov and or into int3 lods mov xor gs xchg test mov out jns lcall pop jmp inc sub and sti xor iret sub jnp (bad) mov out mov adc pusha add and fnstenv mov dec out (bad) cmp mov shlb mov sub jmp (bad) je repnz mov sbb pop xor cltd cmc push sbb (bad) rolb jae outsl add jle dec xor xor outsb aaa pop in mov (bad) sbb lds jp bnd ret inc enter sub gs jae xchg pushf add jnp test jmp clc (bad) and subl xor orl sub icebp add and icebp (bad) (bad) mov ret sbb jb (bad) je lds xchg dec cmp je sbb mov fs mov and mov inc push addb cmovs js (bad) fldl jne dec cmp je dec cmp jg dec lea or push test int3 fmuls inc adc inc xor mov xor push repnz stos les and pop subl std adc and or push or lahf dec add inc inc movsb and add std (bad) mov and inc mov dec sub dec mov and dec add pusha dec or je add cmp dec and ja icebp pushl dec add dec cmp je sahf mov loop mov sbb sbb test (bad) cmp adc adc jl pusha inc cmove dec and pop dec cmove push cld clc dec sub inc mov pop inc sbb inc mov or je jecxz pushf test dec push mov test adc into and pop shl ja xor dec cmp je dec push aaa fs cmp add outsb xor or mov adc hlt jne loopne xor cmp and push int3 scas sbb mov incb popf int3 bound add rorb (bad) xchg iretw xor es repnz ljmp shl push dec sahf mov mov aas dec inc sarb bnd xor and mov and sahf ja mov push sub test and add icebp repnz or dec and dec mov pushl push cld ss mov jmp iret dec mov dec mov pop bswap xor in push sbb or xor jge mov mov test je dec xchg addl icebp (bad) call mov stos cmp rcl inc push jne sahf lods jp test ds push mov jae ror sbb inc push es adc in add jmp andl (bad) je add aam pinsrw rolb addl or outsb (bad) dec jo ja jmp sbb sbb and push (bad) sbb scas mov outsl sub fiadd push mov test push jmp fadds add sbb inc sub inc cmp jmp jb aas imul inc jb mov and mov dec mov icebp mov aam dec mov sub lret das xchg data16 rorb mov jo xchg push shlb jmp imul dec out jne cmp mov pause pusha push mov paddsw and adc rorb mov mov call arpl cwtl test sbb adc pusha add dec movl jmp gs xchg hlt dec inc cld jg iret dec mov dec lea dec addr16 lret mov cmovns or (bad) dec mov inc mov push xor sbb je mov push and dec sub dec and inc andb loope dec lea pusha push (bad) xor jnp repz clc xadd test mov dec mov dec rclb add xor sbb jne repnz push inc sub mov push or (bad) popf inc jmp test mov dec cmovne dec sub jne pop pop add xchg (bad) push dec rolb add test jne pop popf pop out mov mov call stos cmp and std pop mov jne cmp mov mov iret push xor add sbb bound xor jbe sub xor add clc sub rorl test cmp fadds pop inc jp sub sub mov lea pop das test sub ret adc cltd jae push les jno ret cld fs into push and fimul movl or clc and inc xor pop jp and pop jecxz shlb cwtl call sub adc fild (bad) mov jmp xchg lock sbb stos cmp in mov outsl int3 jmp xchg jl test ja call scas and sub add inc incl jne cmp je ret out cmp jne or out pop mov jmp pop xlat iret jno mov mov push fistp roll mov jne jp and sbb lret test add int3 pop je inc sub in pop fadd data16 test aad in sub lea sarb je xlat push hlt mov xchg sbb push xor ds cmpl lahf cmp jmp jo adc xor sbb in push xor pop out call and out cmp dec xorl pop jmp lahf adc mov inc test lea cmpl dec lea and test test (bad) incl je jns outsl test clc test fildl sub call add push and mov or outsl pop or aad call mov pop out add outsl push dec sub inc dec mov aad stos es push push cs pop dec mov in sbb and lcall or jle (bad) mov cmp pop sti mov push mov ret nop cmpb pop dec mov add adc rcll mov testl jmp psubusb fild push subl mov std and les mov mov dec lea and mov je movsb (bad) fist sub ss dec mov jne dec (bad) cld inc jo mov pop pop jmp or cli aas hlt jmp add pusha dec mov test dec mov js jb xor dec test add stos sub cmp push incb jp dec mov jb test fstl jmp adc lahf dec mov sti dec cmp (bad) xlat pushl js add dec cmp test test je fildl sub add and pop aam adc lret adc addl or inc push fist pop dec cwtl dec sub dec mov or bound rorb xchg movsb inc mov lock mov xor add lock test lahf repnz bound cmp inc mov push xor add mov inc mov or or fldl loope dec mov dec mov scas inc aam and mov jne or mov mov aam leave std jmp dec fwait xchg (bad) fild xor push pop nop dec add clc and movzwl ljmp inc in mov cwtl mov mov les xor jne add outsl sub outsl jb (bad) xor add sbb dec add cld popf jmp inc cmp dec mov mov int3 std and sub or xchg ret loope push and xor call lods jne test ja in xchg add sbb call fistpl stos movsl dec add cmp mov cmp pop sub pandn sarb jae jmp nop dec xlat mov call jmp mov inc inc mov js push adc push xchg sarb cmp stc call ret dec jmp pushf bound and push jno inc mov lea and gs adc mov call xchg mov xor inc xchg pop add test adc (bad) or xchg xor stos iret int (bad) sbb add mov or and and or fmull sbb cmp outsl or jae cs data16 pop xchg test test or les lods add xor sub or roll jle and mov adc dec movl mov iret push sbb pop (bad) jnp fldl (bad) xlat (bad) les add test sbb inc and or icebp or je dec mov fsub bound insl pusha xchg and popa aad adc std inc sub pushf and inc mov cld xor sub pop pop dec lea or test add dec lea dec cld dec clc decl jecxz or dec mov mov dec or dec mov lcall je push (bad) xor add outsl sub loopne dec mov addr16 jo iret sbb out test cmp dec mov add incl jb mov fbld mov lea leave inc mov adc in inc lea or push add cmp std or ret cmp xor fs xor adc rorl jmp sbb neg std cmp je hlt dec lea dec add (bad) ja fwait (bad) (bad) dec add dec mov je in dec mov je cmp adc ljmp mov xorb ret loop mov push xchg sbb xchg add add inc cltd add mov lea sub or pop fnop and dec sbb and mov loope dec fs lret mov mov std and mov roll sbb add rorb dec or inc cmp jne or jae and jb loopne test or add mov or ja mov lret dec loop dec mov popa clc fimul test dec fdivp (bad) cmp push test aam je sbb clc mov sub dec lea test sub adc push fldl fimull xchg ja jb push inc and test add dec sbb call es subl push mov or test scas enter push mov cltd add dec stos add add mov shll cwtl jp sub pop mov cld lcall cwtl push (bad) in clc sbb inc add (bad) sarb addl (bad) jle jecxz mov and inc xor jge mov je dec mov jg rolb stos bound testb inc sub popf mov or add or dec dec rolb pop pop adc add dec lea and xchg popa (bad) addr16 or ret decl js and add movsb inc or jne xchg dec dec or scas aas mov dec mov adc pop pop push movl ret add dec mov push enter sti sub loop fnstsw (bad) (bad) je sbb ljmp iret shrb lea lret aam pop xchg add dec and add xchg dec rol lcall cmp fisttpll dec sub cli outsl andb mov dec mov mov je dec ret ljmp outsl outsl cmp jne inc sub dec lea andl hlt pop dec push movsb mov or pop or dec push mov (bad) clc (bad) sbb mov mov fdivrl ret and and fisttpl push pop inc push dec lea fiaddl or sub mov dec jge lea xchg mov mov jmp cmc inc lea dec and dec mov dec aaa cmp add das add fadd cli pop dec cmp jl jmp fucompp dec lea jo sub outsl loop (bad) cmpsb sbb mov call dec sbbb mov jl addb sbb cmp and and push (bad) sti push ss ret xchg sub mov dec and or dec mov cltd lcall popf and aas xchg insb and add lea push xor decl sbb dec lea inc in mov inc mov and inc hlt mov popf and movb out das (bad) mov lock cmc (bad) adc scas mov push and or dec pop clc jnp or test push call sbb and dec push rolb sub dec cmp mov (bad) fs xor sbb call pop mov outsb pusha call fist ja sbb inc dec mov icebp (bad) cmovs adc jmp outsl ret sbb push or imul cmp push jns or mov call pop mov dec call call inc test adc inc pop inc das mov in movb and mov adc jbe data16 inc sbb pushf add mov dec cmovno fisttp bound test push sub (bad) jne iret js out dec and or pop mov mov loope mov lea ficoml jbe fiaddl dec lea push cli sbb lock subl cmp jge mov movb add xchg jns mov dec mov sub imul fs inc cltd mov add call divl mov js sub push and push dec addl ret (bad) in mov dec push or sbb lock push push in mov ds in test jmp or lock por out jge jnp je dec ljmp lds loope sub and push cld or shufps daa mov negl lea lcall ret mov jmp nop dec lea fldl2t sub mov mov dec movl std pop dec mov movsb and psrld mov loope push dec ret dec mov cwtl mov mov push imul mov lds divb inc shr and sub bound adc (bad) xchg jg jnp or aad xchg in push cmp jle xor jle int3 adc xchg add dec outsb xor sbb ljmp lea je sbb xor jmp ljmp cmp mov dec cmovae dec dec push aaa fnsave mov xchg test cwtl inc test sub pop mov inc push jmp inc mov ret cmp daa fwait adc jmp inc enter cmp jo nop in xchg cmp cmp cmp or xchg (bad) cwtl ret fmull mov pusha jp jae mov mov dec mov ja sub cwtl stos loope mov mov dec mov push or add adc sbb pop fsubp add sbb scas and pop jnp inc test ja dec mov pop out aaa gs pop js push or or lea jmp or mov mov jnp call pusha mov dec mov sub icebp pusha dec mov dec mov jmp scas cltd mov rclb fsts jle add test fld1 xor loopne test dec mov dec mov inc sbb pusha cmpsl push addr16 es adc sbb mov dec sub dec add loope cli add mov les mov ret out (bad) incl dec cmp jb and cmpsl sbbb addr16 mov and and int add ja clc pop and xor (bad) (bad) call test iret dec mov mov cwtl push ret jbe adc adc roll push xchg sbb loope int xchg sbb cmp and ljmp pusha call sbb fildll push or jo (bad) int3 dec push cmc mov daa push (bad) jmp lea dec sub dec mov dec lea dec shr dec add or jmp add dec cmovb cltd test cs outsl mov dec ja add (bad) inc and dec add fidivl dec sub fwait (bad) dec test sbb sbb xchg (bad) (bad) lcall dec mov dec lea dec add dec cmp jbe stos jle push dec (bad) out dec cmovae fildll dec mov test aad dec loopne push je nop and push (bad) je jno mov jne xchg fsubl je jo nop dec mov push lret dec or dec push dec lea inc dec cmp jbe hlt lret mov popa mov ja call cltd cmp dec mov dec mov dec mov movsb (bad) cwtl or pop inc or icebp or pusha mov and add fbld cmc (bad) dec insb xchg lock rorb and leave shlb outsb cli sbb mov lahf mov test dec inc inc clc test mov and push sbb js pop inc pop or and (bad) jb cmp xchg xor jns sbb ds lea lret sub jmp out outsb xor jae xor movl pop into mov lret int add add (bad) je ror jmp cmp push push addr16 sbb push add in push mov lods or rclb in add jo sahf data16 out mov call test scas pop out lea int add aaa inc jno int3 pop test adc pop sti pusha movq je push dec sub jne test pusha push jmp push xor mov dec mov js dec mov dec mov dec inc mov pop add or adcl push fisttpll jge loopne adc outsl pop mov cwtl leave lods lock (bad) jmp ljmp imul (bad) xorl mov shr jns sub or jnp inc add dec mov xchg and pop movsl or cmp call mov cmp js (bad) je (bad) inc into cmp divl inc cwtl cmp lret add lahf movsl adc out adc movaps adc mov jne movb adc lcall test in les pop lcall xor int3 stos or push inc mov cli add cmp mov call or mov push inc inc mov fsubrl repz add or mov cmp fiadd or sbb fmull imul pop jb inc fsubl add and adc lods movl jbe sbb lds rdtsc mulb addb in (bad) (bad) sti inc push lea test movzbl inc cmp jne mov in loopne mov inc test je dec add cmp (bad) jnp dec push add cmpb jne push icebp mov ja cmp ja mov sub lea dec add dec and ss push dec cmp je pop js and sbb mov mov dec sub dec not stos je fsubs xor sub ja es aam dec xchg mov (bad) fistpll cs movzbl cmp ja dec bt jae xor jne decl inc cmp jbe rorb (bad) xchg mov je movsb (bad) and imul fisttpl test adc and sbb jl dec lea ja data16 xor push inc (bad) out dec aad sub jbe mov dec outsl test rcrl pop jge nop xchg das sub in je jo (bad) popa pop xchg adcl loope fadds dec mov inc cmp mov cld jno xor jae (bad) ja repnz loop test pop pusha sub and fnstenv scas dec not inc and je add dec pop cmp dec jg mov je or je xor (bad) and mov icebp jae mov push shl mov mov ds dec cmp test bound lcall add int and cs cltd in lret dec lea sbb popf dec inc sbb sbbb dec mov dec mov das pop lds adc mov inc mov movsl or add dec xchg pxor adc data16 pop ljmp test xchg and ss scas inc js cmp adc xor je lahf popl inc aad aas lock mov inc sub dec cmp jne jmp jge adc or mov adc xor mov (bad) decl jge jne xor or call (bad) sahf xchg test es sub fucomp mov nop (bad) xor sub add les or sbb sbbl xor lea dec lea loope lret fs (bad) jne xchg dec std aaa add sub dec sub dec not cltd add sbb das xor cs cltd mov orl or je sub inc mov inc data16 outsb arpl jmp rcpps xchg sbb xor add les sbb sbb add add std sub (bad) fist adcl dec cmp dec mov jne movdqa in sbb lret or and repz adc fnsave shll je add por bswap cld (bad) jg aam shll xlat loopne inc xor je inc movzwl inc loope call inc bsf inc cmove add dec cwtl dec lea and inc pusha imul pusha pushf dec mov out jae out int lea loopne ret (bad) movzbl lret and std (bad) std bt jae dec sub dec not inc and cmpsb aas sbb cmp repz inc rorb pusha sub jne sbb add add cmp cmp adc dec ds clflush int3 addl inc cmp xor xor push mov adc loop popf fs sbb jae decb mov add push mov xchg fistpl jae sbb sbb sbbl jae out or push dec cmp dec mov je loopne sbb mov jmp xchg cmpw add test and add push leave (bad) (bad) push les inc lods or movl xlat jl or pushl (bad) cmp dec sub dec and sbb loopne push dec dec add dec or dec cmp dec push cmc dec outsl xor test rorl mov shl push mov dec sar dec mov ret popl inc and inc sub adc lea sti test mov dec and sbb inc out sub sbb mov (bad) (bad) dec (bad) push add popl sbb jb addr16 cmp push dec lea int3 and mov ljmp and dec add subl movsbl data16 (bad) fstpl add jne loop adc call fisttpll adc testb fs (bad) cmc or mov sbb cmpb and repnz inc aam stos mov js sub inc aas test mov mov mov dec and dec or inc (bad) lcall or pop dec shl dec shr dec sar inc sub and lock iret dec and test cmp mov (bad) lret and pop add je cli and aam jmp inc (bad) cmp cmp aas rolb enter lea testb inc pop cmp jbe sbb mov dec add and pop or adc mov (bad) fcompl dec cmp jne adc (bad) mov or add (bad) dec movl lds rcll stc dec sarl pop or sub dec cmp stc dec add dec lock or xchg orl lcall dec shl add sbb xor cli cmp xlat sbb inc or inc stc dec and adc dec sub dec sub dec sarl xor jecxz subl out xchg sti pop test pop add push (bad) (bad) stc pop outsb adc inc jnp pop inc fadd gs or out push sbbb lea sbb inc and dec iret push and in (bad) ds sbb inc sub sub cld test sldt inc scas or jmp inc in pusha add arpl xor dec sub (bad) ret adc ret dec (bad) pushf fwait rcll bound dec dec sahf jno dec (bad) pop out and sahf into add add mov add adc add clc ja fld1 std int3 (bad) (bad) jmp pop cmp xor (bad) les mov mov sub pop arpl outsl and sbb mov bound and mov (bad) dec and into pusha je subb xor push push cwtl nop fdiv jbe inc enter cmc decl and dec lea adc pop mov call jmp dec (bad) cmpsb push jg icebp add jmp dec mov add push push jmp scas (bad) xor cmp dec mov ja sub xchg ret inc test dec add inc jmp inc mov and inc sub lds dec cmp dec mov jbe int3 dec xor insl int3 fdiv mov dec lea dec xchg mov hlt in or stos (bad) fstp or es dec lea dec add push or (bad) and dec sarb and loopne pop inc jo or cmp push and mov rcrb fsubl popa clc or xor lea mov add push adc (bad) jbe add mov push mov jo or dec cmp mov stos js test dec mov dec mov fstl sub dec jp cld dec sar dec call cmc inc sub fs (bad) call dec and fs cmc dec sub sbbb or jle inc out sarb jnp femms daa leave add fs or adc or andl arpl dec push cmp lret xor arpl or outsb inc ljmp xor and call pop (bad) aad ja sub inc inc sbb push dec or jge inc mov mov movsbl call pusha adc (bad) push adc ljmp movsbl sbb aaa or adc ret pushf mov jmp cmp lea hlt push xor icebp lea adc push loope add dec sub in dec or test adc mov mov dec mov inc mov scas and mov and fidiv sar flds in or andl push dec nop or cld cmove dec sub fimull mov and adc push adc stos lock adc push adc or jo cli dec inc cmp (bad) je std xor cwtl sqrtps rol in xchg hlt mov xchg and adc lret add xchg jo scas das inc push rolb lea inc daa sub aad je mov dec subb push dec lea mov popf inc xor fdivl and jo scas int3 jnp sbb and mov test loopne test ljmp add dec lea pop and and cs fisttpl decb cmp (bad) decl scas (bad) sbb enter or out dec mov adc jmp frstpm(287 in roll loope mov jmp sub call push (bad) fbstp and in sub push inc lret pop or and ljmp pusha ljmp push jae aad mov xlat cltd sbb jae cli rclb in test dec ljmp add ljmp push dec icebp pop add dec (bad) sbbl into je out (bad) push push lods push dec lea popf mov aam sbb popf pop addl imul and repz cmpsl push push scas dec add or dec and dec das dec mov call (bad) ja add cmpl test and fdivr (bad) decl or push repnz out inc pop pop add or es mov int leave (bad) loop mov pcmpeqb and iret pop sbb xor (bad) cmp icebp xor in xor je inc movzwl inc bsf adc shlb in or and pop outsl test (bad) sbb ljmp or je (bad) cmpsb hlt push pop lahf and pop adc push incb stc jae mov mov bt jae sarb mov add push add adc je lea mov inc movzbl sbb enter aaa jnp push leave jae add add test jg inc cmp ja nop mov decl stos bound or inc push and mov add pop out out pop scas xchg ja fsub hlt pop add mov xchg js adc outsb add mov and push adc inc scas sbb xlat jne or inc or ror inc dec pop scas adc mov or and sbb inc jbe lea (bad) sub xlat je sub push jb mov (bad) lret push push dec lea mov xchg sbb push and ljmp int3 xchg inc out jo xchg stos adc test push and test xchg je enter pop inc pop movb call js aad inc jne add out cmp dec repz or (bad) sub mov roll cmp inc or les mov mov dec aas pop mov xor adc pop add or cltd mov or aaa aas cmp cld inc subb xchg mov js add (bad) mov inc je pop iret xchg fistl mov xor dec pop and lahf lahf inc add or or cmpsb out lcall out jo scas outsl aas or adc int3 mov nop iret and jmp dec jge lea incl push mov xor mov out jbe and jbe mov ljmp fistpll sbb or adc cmpsl jns mov mov mov sub or mov test inc inc rorl xchg jmp sbb inc mov jo adc (bad) jmp insb ja dec jmp in jmp fldenv jns xor loop or jmp les popa (bad) and pop jmp fwait mov je orl sbb sbb jmp psubsb fs jmp out out mov int pushl movzwl icebp aas js dec les (bad) push inc xchg inc cmpsb (bad) js mov call mov and and cwtl pop adc jne adc shl jne push or ja cld inc je dec call sbb sub leave sbb enter mov dec mov dec cmp cmp jnp icebp mov loopne cmpl adc mov xchg sub push ret lea push mov call clc dec dec lea adc mov mov mov je (bad) mov and mov (bad) adc (bad) imul sub out das lahf inc je cmp xchg and lods and add inc rolb sub adc out mov je out jge stc call and jp daa xor nop xchg push pop dec (bad) cmp mov and pusha xchg loopne std imul lock lock add inc mov dec test mov adc dec mov (bad) cmc mov in test sti xchg loope imul mov jnp jne stos ud1 or fild pop arpl mov sahf dec dec xchg fwait mov and cmp xor sbb push sbb rolb shll inc cvttps2pi adc sub std in mov push sub xor arpl inc mov (bad) and inc out fldl2t push jnp (bad) jl test sub je inc test jmp arpl and in repnz xchg sti jae loopne test dec cmp inc aas inc aad and sbb cmp cld aas inc and ret idiv xchg sbb inc call sub xlat dec arpl jmp cwtl sbb incl icebp call mov sbb jno jmp leave lea movsl gs dec out pop iretw jbe mov push sub xchg push aas inc jg lret loope out das and addb inc iret push add mov jmp xchg xor xchg (bad) xchg push call xor ja xor jb or xchg inc lahf (bad) pop cmp dec sbb jecxz fucomi inc xor (bad) pusha push imul cld mov loop test ljmp mov fldl add stos mov cwtl dec mov sbb nop mov or in lret loope imul adc sbb je aam rclb mov fadd test clc jmp dec rcr ficompl lahf sbb cmp jae (bad) stc jne sbb and or or jae bound cmpsb scas cmpsb or (bad) jne mov sti sbb std adc dec mov jmp mulb mov je cmp cmova sub cwtl test push add rcll int3 or sub nop repz rorl dec and call add pop mov or cmp sbb sbb inc sbb cmpl es (bad) jo aas ss loopne jbe pushf adc jmp or pop sarl js out bound ds or sub ja adc das jne shlb jmp out or inc mov decl paddsw fiadd lcall or mov pop sti faddl out rorb inc adc push xor int3 lahf lcall jmp pop sub fimul sub out cmp inc loope (bad) or pop (bad) notl cmp idivb int3 sbb out and cwtl sbb or dec fistp mov jmp mov mov out test icebp call pop pop inc insb fsubr rep xor sub sub pop push ret call or or sub fwait das or dec sbb mov and into out daa cmp lds mov daa mov mov sbb test jb jnp or aas out mov int3 in sub (bad) push aas scas popa fsubl and ss sub aaa sub sbb dec mov jmp xlat jmp je pusha xorb mov mov pop or pusha inc push andl dec mov js mov ljmp cmp jb sbb xlat dec mov dec mov jmp dec lea pushl iret repnz dec sub dec mov dec mov dec sub call push ret dec mov mov dec or jne dec test je ja mov dec cmp je es mov call rolb test cmp (bad) (bad) incl cmpb jne dec mov dec mov mov call dec mov pushf lock rcrl lcall or inc movzwl add sub adc inc testl cmp ds daa dec je inc sbb call in or out sets xchg and bound sbb add jns out (bad) jmp nop nop nop pxor inc mov mov movl inc cmp loope pusha popa add push pop or sbb mulb mov inc rcrl jo adc adc aas add or sub and jmp nop movsl pop jae test lahf decl dec dec int cmpsl mov and jne dec roll pop (bad) call dec mov pop jbe dec add cs ret pop (bad) (bad) aas (bad) jmp jg mov push inc lea xor inc lea lea inc shr inc lock ja cmp ja rolb shl mov out (bad) lcall add push rolb inc lea inc cmp jbe or (bad) mov adc jmp (bad) mov sbb fisttpl cli mov clc add pop add xchg add add fdivrs ss inc movzbl sbb inc sarb outsb sub jp incl sti mov pop mov mov inc or pushl shr mov push push movsl push popa inc lea std popf xor xor and inc movzbl pusha out ret cmp jg fldenv cmp ja call jmp test es add xchg dec leave inc arpl mov inc cmp lea cmp xchg push inc lea fisttpll add inc movzbl xor mov jg (bad) fmuls inc lea jno cmpl or imul test mov inc mov enter movzbl lea inc cmp jbe pop lahf inc cmp aas sub inc lea mov xchg shr or pusha out lret test jo cmove jb mov xor sub lea sub ds adc and loopne or lea pusha (bad) mov and jae test je movzbl test unpcklps cmpsb mov add add int3 jmp jbe inc xchg lock inc lea stc add adc adc fbstp in xor fildl inc pop cmp add sub nop push jg je add pusha cmp das iret jmp cltd xchg out leave (bad) ret xor cmp adc adc (bad) jmp mov push das lds xchg adc orps mov fldl dec inc (bad) je nop cmp js add clc or adc xchg mov pop or add adc add rol call dec cli movzbl pop xchg jle ja xor inc mov test inc lea stc or (bad) and jbe inc lea adc add inc lea add jmp jne mov leave inc or test inc mov jne fist movzbl inc lea inc mov inc push xchg sub (bad) jo sub lea xchg incb std pop add sub and mov and lea daa ret fwait lahf jbe lea lcall jnp dec mov lea inc or test mov jne lcall inc mov xor jecxz outsl or imul adc inc clc mov (bad) jg sub inc shl inc mov movzbl sub lret call stc aam (bad) lea dec or fistpll and inc or icebp push and jne or pop and inc lea (bad) xorb into or lea loopne sbb je shr pusha mov nop cli aaa or mov dec movl ret mov dec lahf adcb add lea pushf push inc lea xor pusha in leave gs mov jmp ljmp bound inc into nop pushl push leave xor inc mov fisubl clc arpl sbb nop pop dec and inc lea dec out adc or inc lea xchg jo mov rcl jg push fildl lds lds inc lea mov jo push jge aaa cmp lret adc fs pop push adc cmp inc xchg and sub jg mov cmp jb jle push fsubrs push std xchg cmp (bad) decb mov mov dec and lahf mov sbb inc mov or rol cli add cmp clc mov pop and jne test inc mov (bad) je inc mov or rorb repz shll div dec or mov pop xor sbb dec mov push nop scas pop aas out insb xor cld pop and stos cld jbe inc lea ret out push add in xchg xor idivl pushf and iret test inc mov ret xchg sbb pop fdivl shrb xchg xor (bad) fsubrl mov inc lea ret jbe (bad) cltd jnp jmp orl xor out xor or cmpsb and es clc inc adcb inc and mov jne xlat (bad) pop and inc scas sub dec frstor ds scas rcrb mov lea (bad) jbe (bad) jmp sub pop mov push and inc lea subb rorl pushf ret (bad) inc clc cmp rorl leave or test mov jbe mov ss jnp push cmp jbe mov inc rcrb (bad) jl mov mov fbld ret sub clc or negl (bad) dec sbb mov aad inc cld rolb pop jne out cld push and dec jbe mov int3 cmpl pop inc and fnop sbbb push cld pusha sbb add sub sbb xchg pop leave or std sahf iret push mov xchg jne fdivs mov sbb fnstsw ret xor jmp nop jp mov addr16 cld jnp imul mov shll rorl test dec cwtl sti cmp xchg sti (bad) lcall ljmp in inc dec xchg fs pop out or mov jmp fs test jns jmp inc adc test (bad) ss jne jmp xchg test xchg outsb js (bad) jmp jge sub gs mov jmp lea jmp xor (bad) test mov add adc in or adc xor daa lock inc outsb (bad) (bad) (bad) jbe xchg dec jecxz das inc lea fcmovnb test sbb icebp (bad) mov jmp jae pop jmp pop cs ja mov test ja push and cmp out push imul enter jmp je sbb inc es aam lret test lds jb rolb test mov dec cli pop dec lahf fnstsw jmp (bad) xor (bad) jle lods mov (bad) fisttpl data16 or pop aad gs das cmpsl mov faddl leave xor sbb xor inc push nop (bad) movd adc mov (bad) xor pop cmp ret test cmp fnstenv sbb nop xor cs mov stos sub pop mov jmp jmp ffree mov or out pop les xchg jmp add out lds add ljmp inc lea jecxz shr inc and pop ja xor xor mov in mov add imul xchg sub jo lea adc fistpll mov inc test inc mov jne in pop cmp dec sbb outsl js adc ja add dec and insl stos addl out adc cmp dec inc outsl and popl sbb xor loope or push idiv repnz test inc mov jne inc cmp (bad) decb into movzbl in sti jb lock mov sbbb jl lds mov in into sbb or adc popf mov test pop add mov jle lea mov aad xor icebp xor stos xchg sub mov dec push idivl lea decb jbe lea inc pusha mov test inc jg aaa popa xor pop lea jmp shr mov inc mov jne dec add xchg add mov xchg xor std ret lods jns hlt jle popf jecxz lea push xchg xor mov test jmp mov xor sbb sarb fistpll mov jle and jmp into push leave jmp (bad) gs dec ja mov (bad) xor les (bad) cmp dec scas lea jmp adc sbb decl adcl jmp add ja pop inc inc outsl test sub dec cmp xor adcl mov dec xor repz jo adc or add test mov fldt sbb inc rcrb leave adc mov jmp jg push test je lea adc pop jmp jmp dec add add (bad) cmp inc mov je (bad) mov push inc call lea cmp inc cmova loop sti flds sbb sbb rorb ret nop cmp push jne pop out fild add pusha dec mov (bad) (bad) ljmp xor dec xor dec or jne dec mov dec mov dec xor dec xor dec or addl mov in xchg pushf dec mov xor and dec dec dec or jne dec mov pushl xchg xor mov mov xchg call lahf in mov cmpsl nop add dec mov dec mov or jmp dec mov je dec mov mov sbb rorl (bad) lea dec mov dec add andps dec dec mov dec mov add add data16 inc fmuls mov call push dec mov inc jo jno or mov cmpl xor mov xor xchg jno dec sub stc call (bad) push (bad) decl push adc cwtl or dec mov and cmpb and aaa call fistp and dec cmove call push inc test pop dec sbb ja mov add mov test adc pushl inc dec mov dec mov dec mov dec mov dec or rcrl mov dec dec test dec mov sub adc dec mov dec mov lahf je inc scas dec lea lahf add add cmpl mov dec cmove call cmp testl or loope in ret call add xor lret test (bad) (bad) clc je dec mov call test jne dec mov sub rolb jbe dec lea call add adc outsb and add add scas lock mov ficom dec addl inc bound dec (bad) loope call sbb call inc scas dec sub xchg add or pop push popl inc clc mov lret push add icebp aaa test clc sarl outsb xor add mov cmpsl or cmp pop outsl fbstp inc jmp dec fwait (bad) push dec jecxz ds push je cmpl mov mov adc jecxz jne mov (bad) push call lret or cltd inc andl add call hlt orb ret mov dec mov pop jmp popa dec sub mov (bad) fwait add loopne hlt jnp add shr fldl lret xor repnz cmp adc leave je dec and push cmp jb lahf and push and push dec add jle push or hlt adc jle scas sbb jmp shll sbb cmp jle iret or and test in iret xchg loopne jne xlat mov iret add mov jge iret mov xchg mov xchg test add mov add sbb xchg xor (bad) (bad) jmp movswl sub loope push push add outsl jp inc and outsl jbe xchg aad outsl cltd or xchg or add outsl ret mov sahf sti jp lock pushf or add mov or mov mov jns dec mov cmpl or dec mov rcrl dec (bad) incl (bad) fist data16 add mov pop repz mov dec mov dec mov int cmp dec mov jbe or fistl mov mov call push pop dec aaa mov dec mov (bad) call arpl dec add adc dec xor test jle dec cs mov leave xor (bad) hlt ja dec mov call jae fwait dec jg add add pop mov ss add dec lea sub movl ja jb outsl mov and mov jno dec mov dec mov movsb stos ficom and (bad) ficompl mov or add mov je subb xor rclb dec mov ljmp repz push std mov mov aaa icebp cmpsb xchg nop jge mov mov mov sarl cld xor loope call xchg or div dec imul cmp popf rclb aam add adc out arpl jb aad movsl lahf (bad) jo outsb call call mov scas mov nop nop scas push inc inc pop sub jb test das movaps scas pop sbb pop jg loop out nop in push inc jmp (bad) fsubl jl dec xor pop pop mov icebp jl or jae dec sbb xchg aas iret clc mov push push (bad) adc or lret dec mov decb sahf inc bound dec arpl idivb mov push inc xor call push mov inc adc cltd dec mov push shl aas dec jmp lahf call jmp add pusha and inc push mov clc cli out jnp pop push pxor mov js aas fs dec fwait mov movzbl dec mov stos mov ret and jg cwtl jecxz jne dec hlt sub repnz sbb repz or push scas fiaddl scas push jmp and jne add pop jmp inc out test mov mov pop arpl (bad) aas rcrb lea cmp cmp mov mul cmpsl inc sbb inc popf fistpl sub addr16 and movb xchg jl aas and fs (bad) scas out cmp cmp add mov out dec mov sahf jp jo std cmpsb or inc or xor mov sub push and add and add jle and inc rol adc sti add jb mov add inc cltd mov mov inc and inc (bad) std push test out dec mov mov cmp (bad) imul dec mov call mov pop sub adc mov dec lea and popa mov outsl dec mov call pop mov call inc lcall lret sarb jp add inc jmp iret addr16 inc hlt add jmp test add pop imul and ja jo (bad) ljmp call mov fildl nop ds (bad) cli loopne mov mov add call xbegin mov call mov incl ficom imul and add mov inc bnd push dec mov call adc pop add inc xchg sbb das std (bad) cmp or sbb add (bad) push int3 cli (bad) push rcrb dec lea jmp inc cmc das stos ret add lea sbb arpl jmp mov (bad) das mov call (bad) js mov push call loopnew repnz decl xlat mov imul (bad) inc nop nop jg daa jg aaa lock jg arpl inc and or jmp data16 mov or jmp or pop pop into (bad) std (bad) fistp dec cmp je xor dec mov dec add call clc (bad) fistpll enter add ret jb dec mov mov push xchg test lods pop and pop ret setg arpl jns (bad) sqrtps and adc adc orb dec cmp jae notl nop add add add cs jno add test cmp sahf scas or dec or aas or xchg std mov sti je pop inc mov adc call call addr16 or lret jbe mov jnp call call cmpsb push dec stos daa cld mov cmp jne cmp pop fild mov popf shr (bad) sbb and fild stos adc adc aas dec fisttp dec mov dec jmp (bad) nop jmp iret cmp clc jmp sub mov mov test jne adc or incl inc jl cmp inc adc push dec lret dec arpl loopne (bad) decl lret cli add fimull cli add add mov dec cwtl dec mov jg sub inc inc scas lcall ficoml test mov mov adc push jmp fimul mov addl dec mov mov inc (bad) rorl stc pcmpeqd add aas lcall jecxz je mov pop popf enter popf out mov sbb cmp jne dec mov sub dec cmp jb test js cmp aas dec sbb outsb mov xor fistpl adc adc arpl sbb dec jnp adc mov pop xchg jne mov not shr inc push mov mov mov dec cmp jbe rorl jg cmp shr (bad) stos scas adc (bad) pmaxub ret jle das sbb inc mov push xlat mov test jbe rep adc adc dec mov dec (bad) hlt rorb adc push xchg jg fild jecxz or test adc pop out sub dec repz dec or pop and push jno push fdivs xor sbb clc cmpxchg8b (bad) dec adc push clc push or jecxz or dec or cmp sbb mov rorb cmp inc pop jg or cmp je push call addl lret cmp fdivrp aas rorl sti add (bad) and outsb or push fwait cmovle rorb jg dec mov dec mov pop pop dec call add out scas sbb adc dec clc mov dec sbb xor call lock jecxz dec mov dec mov jmp inc nop aas cmp outsl inc sarl decl mov dec sub lret inc fild (bad) cmp mov pop sub dec pusha or push or adc imul call mov jl cmp icebp jns mov jmp adc and dec mov dec mov inc imul dec cmp inc mov je jle mov sub inc aas es cmp bound inc push xor xchg incb stos loopne add in pop dec lea lods mov fwait int pop add out inc add (bad) jo mov dec cmp xchg dec sub (bad) dec adc sbb inc sub inc cmp inc sbb test xor jg lock lea xorl sub and inc xor xor test push and fist and loop and inc mov test call xchg lea je (bad) jbe add xor sbb (bad) cmp (bad) decl adc dec mov dec and inc imul push xor cltd je icebp xchg aas sub dec push sub add mov sub mulb dec dec (bad) (bad) and jne dec cmp or insb inc add mov call mov mov (bad) ja mov lods mov movsb dec out mov adc dec in and call xor cmovne xor inc mov aas test (bad) test push mov mov jne jl mov call adc adcb dec sub int3 fadds xor fldl je sahf jo decl xor push mov imul dec cmp sysret gs test sbb inc cmp call jne add pusha pusha pushf mov inc and xchg lahf jbe xor mov mov cmp (bad) pop lret pop es mov pop (bad) aam add adc outsb inc rcrl sbb jmp ss nop das emms out and dec (bad) add add fild jo das xor (bad) xor dec mov push push shl jg push push add lret lcall jo orl aaa loope pusha loopne test inc or adc or loope pop or pop shl xchg adc pusha das mov inc fmul dec lea or mov jne insb out ret insb and inc xor pop pop cli repnz sbb test fcoms and (bad) fadds ss and sbb xlat aaa scas sbb addl inc outsl mov dec mov mov enter dec loop xor sar mov jecxz jp add inc mov or inc jle adc dec adc call dec pushf ljmp fwait out popa das call (bad) xlat (bad) ficomp inc adc scas andb adc push or or mov movb sbb test pusha cld pusha pop and mov ret outsl or sub out dec or xchg std lea inc mov mov adc pop add popf mov inc mov dec add sbb adc pop movzbl test je xorb std cli das je mov cmp je dec mov pop lea add mov mov or mov dec lea movb inc lock push (bad) loope pop add testl js push cltd jo push dec rorl pop inc das out mov add sub mov lcall dec mov mov xor dec test mov je call pop mov add call mov pusha mov jo call fistp call adc push or cmp or popa lahf dec mov inc into jg mov dec mov jo fld1 sti push aam (bad) je fnstenv pop add enter mov test inc sete cmp push test das sete inc or jne outsb fld1 clc inc push pop enter lea call push sbb les dec cmp xor outsb xor call inc and pusha xadd jne (bad) or stos lret fdivrp ds pop (bad) cmp lcall ret push sbb scas dec or (bad) jle dec sub call adc jecxz sbb dec call ret (bad) push and call dec add jp jne ficomp dec mov push or xor out jg pop jno inc inc or data16 in stos cmpsl je insl jae icebp call lock push movb movb sbb cltd sbb pop cltd roll xchg pop pop sbb je insl into ret je clc adc adc (bad) fiadd in add decl test sbb mulb scas std lods out daa leave das mov loopne mov lods movzbl les movzwl mov mov or mov mov scas dec mov icebp ss mov push push fwait sbb mov call jbe or dec sbb jns icebp call xlat mov pop pop popa dec arpl jae fbstp sarb pop sub repnz (bad) lahf mov or out sub cmp je dec jle cmp ja adc jg cmp cli out or xchg dec cmp test or sub jmp cmp (bad) cmp jle je cmp jne loop ja xor mov ret cmp cmp mov sub cmp das xor shrl cmp adc cmp les mov dec cmp mov daa adc cmpsb (bad) cld dec idivl cli arpl sbb mov adc dec push sub dec pusha call push push lea dec lea dec cmp sti push add ja cmp pusha add jge jle in (bad) arpl dec cmp sub data16 pop test adc dec inc sbb test dec mov jmp sti cmp dec lea and rcrl cmp ja mov fsubr cmp jle mov je inc jle cmp cli rolb add jne inc mov pushl mov cli push je cmp je cmp jne ror (bad) incl leave inc test inc mov jne inc movzbl inc mov sbb add jnp add or aas dec mov dec mov pop add push add je jmp pushf (bad) arpl pusha sbb clc inc mov add lahf outsl aaa ljmp push jo xor (bad) mov pop stc mov je cmpw je dec push adc mov dec mov out pop cli es xor call (bad) cmp mov dec lea jle fcomip jmp dec call ds arpl ljmp adc (bad) (bad) mov call jae inc xchg or ss mov mov sbb out or jne add sub push and xor in aas push cmp adc enter repz je dec lea add mov jb cmp js repnz call popf or arpl aaa cmp xor mov jo pusha push cmp in imul scas movl (bad) jmp xchg cmpl mov add cli and cli add add mov and cmp sbb and jg test pop and cmpb je (bad) (bad) (bad) in dec mov inc testb jne cmp inc lea inc setle inc test inc cmovne mov sti sbb dec mov and cmp (bad) jecxz add push (bad) mov add adc inc sub std fdivs das jp dec mov add scas jae arpl ror rcrl xchg mov add lret inc jmp cwtl call dec sub loop nop loope shll or add shlb push movl mov push lock cld or mov add pusha add loopne xchg jnp add and add sti (bad) mov roll and inc and pop loope clc in inc or rcll fmull and (bad) call ja ljmp inc sub dec lea xchg dec add jl dec jae mov dec addl dec push das jb (bad) cmp dec mov sbb mov pusha inc rorb loop xor and rclb jae xor push daa push ret or push push jg pop iret xchg or sbb inc cmp ucomiss mov out mov das jne ja or push (bad) xor inc mov sbb xor sub or clc outsl cld pop dec add call lea add or std fstpl sub inc pop dec bt jae or jbe imul sub insb pop cmpb and mov pushf in sti cmp xor insb insb and or fbld fcompl vcvtsd2ss ret adc pop fisttp loop test jne inc ficompl decl lea dec mov call sub dec mov fucomip adc inc push xchg mov adc sbb pop shlb test ja or add or or add mov push mov lret std or test xor fbstp inc mov inc test je rorb adc cld inc mov jne push inc push leave add fstl dec rcll aas pop cld push dec lea push inc movzbl inc cmp dec call std js out jb data16 cltd je lcall mov jne into or cmp ja sub sbb dec cwtl sub fisttpll lahf mov cs arpl xor jo shrl or pop dec lds dec movb call dec push mov ja sbb xchg cld idivb xor xchg (bad) pop adc jmp out xchg add adcl outsl es and xor jbe jb jne cmp in orl (bad) pusha clc jecxz mov pop sub mov xchg pop inc test jne inc das jb cmp in stos clc push std jle inc (bad) dec lea in (bad) pop loope loopne inc pop dec mov push clc (bad) mov push sbb inc mov dec mov icebp rol call add inc mov dec movl jge sub inc and and call call js adc sbb mov call mov inc out ret mov xchg push cwtl jp rorb fs sbb mov call clc pop or mov dec jne jno lahf imul imul pop dec add lock sbb xchg test xor rorb push sbb dec mov jne hlt dec cmp flds sbb sbb pop das jne icebp nopl push test sti inc nop add adc lcall inc lcall add aam dec sub add jo pop scas das fwait aam imul xchg xchg adc adc jne mov (bad) adc xchg lock decl add mov add inc jmp mov enter mov pop aam jnp imul or popa add jae adc dec rorb pop jmp addb nop add mov dec dec mov jmp sbb xor sbbb sysret add xor fldl add leave dec dec and jae outsl push inc movb mov push jmp enter add pop test cmp sbb dec add sahf loopne add mov add or xchg push jne daa lock push ret ret ja inc mov ljmp ljmp and js and sub ret js sbb inc push inc sbb dec (bad) adc jnp dec inc xchg lret xor pop push cmp jae cmpsb fiaddl dec add dec (bad) fbstp or inc mov or ljmp dec imul jmp or sub leave or adc or mov scas push movsl aas repz cmpsl sti sub or xchg hlt jo add mov (bad) xor les leave sarl sahf addr16 sahf mov notl push or aas jns jge or jmp addl dec xor scas movzbl jmp xor xchg dec add nop icebp and xor add ja ret push cmc push jg pop pop jmp or int3 mov cltd xor and sub sbb aaa les jmp push pusha les inc shrb cmp or lea jb cmpsb stos dec pop fmull sbb bound lea xchg jmp mov bound and add sbb insb and adc pop scas and insl pop dec dec mov pop mov jl call dec sbb inc movb and jmp aaa adc sub lds fcmovbe sbb mov inc jne je cmpsl stos mov mov pushf jmp jnp jmp aam aas jmp inc xor jmp mov outsb jno add sbb or pop mov cmc (bad) (bad) cmp movw (bad) jbe cld lret loope xor adc cmp out clc xorl mov jmp lods repz call adc jl or into addr16 jae jo cmpsb or sub pusha sbbb test les mov jbe add push push outsb and rcll dec mov inc nop clc mov mov dec lcall add call rolb dec lea out aas dec lea mov sahf sbb xor rorl inc std push scas and in xchg and sbb enter stc xchg fiaddl mov push or cwtl adc adc (bad) shr xchg call cmp jne mov mov loope stos (bad) pop add scas (bad) mov pusha push mov pop fdivl add faddl cmp mov pop xor and enter mov mov add add and test cmp inc (bad) and loopne dec shr inc add push mov dec shll xor or or fwait cmove dec and inc test (bad) xchg cli sub les add cwtl scas push add jo add aaa sbb into mov lock mov sbb mov icebp and loopne dec dec fmuls test adc ds outsl lods stc call lods adc cmpl lds pop inc mov arpl and dec shl dec add dec pop clc jg xchg lds jge dec mov dec lea (bad) cmp dec cmp dec mov je dec add inc cmpl jne dec lea push and sbb mov iret fdivp jmp icebp dec add call fnsave ss jo sub xchg fmuls sbb in in pop jo (bad) mov fmuls test stos push push ret ror test cmp aam sub sub push add inc lcall and push (bad) sub cmp js pusha dec cmp je jno pop imul and add cmp mov cli je call pushf mov test faddl xchg scas into sarl cmc sub test roll adc lea rcrb test dec mov jo xchg lcall out dec xchg sahf cmp inc testb mov (bad) je add push dec fildll rcll fldl fbld inc push xchg sarl sbb test dec aam test dec test ds movl or dec aas lea rolb sbb adc out ljmp sahf dec or dec cmp xchg jmp movsl dec mov xchg sbb imul loop or jmp add jle leave adc sub add xchg sub xorl cmpl cmp inc test add sub shrb or and inc and dec daa mov sti add jne lock rcrl mov cli jne (bad) (bad) ja cmc outsl adc test dec lea sbb call inc adc jnp push inc ja push dec mov pusha bswap push in jne addl inc xorl test nop leave or js je mov and and in dec or adc stc lock push adc popl or test testb mov xlat xchg jnp jae and movsl cmp jae push and test xchg loope pop inc dec loopne or fnop inc mov divb mov loope mov and aad aam cmp dec mov je jbe in add push push add arpl call js cltd icebp call call ret push call mov jo in mul lock je out test mov test pop cmp sbb or jg mov in mov ss inc aad or (bad) decl xchg inc and jle dec pop (bad) sub push mov cmp cmp test mov push inc rorb mov mov push ret or (bad) addr16 jge xor loopne test sbb adc or xchg sbb test out and or add test test add pop inc sub lcall and std dec inc mov test je rcll test or cmp jne jecxz call dec or jne arpl mov out cmp dec add inc or jmp in nop mov adc std aaa cmp incl add mov adc push rolb jnp xor sub sub pop jmp daa stos mov popa inc sbb mov dec mov push gs mov dec mov sbb mov test std cmpsb (bad) (bad) jle cmp je jg imul mov push cmp je aas loop rorb enter movsb dec lods pop push mov sbb add pop fldenv aad or pop addl sbb mov cmp je jne ja dec lea mov repz je stos push call in or nop (bad) add int3 xchg xor movl jmp xor cmp loopne (bad) je aas jg pop (bad) (bad) je (bad) out call incl or dec mov call cmp popa adc stos add mov call dec mov mov das push sar (bad) (bad) jmp jg gs or cmp je jne pop dec mov hlt dec mov call adc cmp hlt fstl cmp idivl inc pop mov call loope aad mov push jo mov sub jne cmp je dec jne adc dec mov adc loope rorb or call rolb cmp lret sub clc jbe and fmuls adc xchg add loop mov cld pop sub loope call mov dec arpl push pusha mov add push dec mov call loope mov or and movsl movsb jae fcompl or inc incb push or cmp movsb push adc add xchg outsb clc push test cli (bad) push mov inc or mov inc mov jmp pop aas sbb (bad) mov sbb ds scas dec sbb into push inc mov call lock push loopne mov and int3 mov sub nop dec mov ljmp sti (bad) ja fimul jns add outsb fcoms cld jne (bad) call cmp fprem xor dec scas add fisttpll test cmpl setne jmp pop xchg push or fstpl lea leave int3 mov sbb test add out mov adc ret adc shr aas loopne mov xor mov dec mov mov jg add pop fcoml sub jg into in ljmp push pop sbb fdivrs dec in xor add iret sar add xchg jo mov (bad) arpl out sub mov inc lds loopne (bad) xor aad ja jle cmp or cmp ret and aas aaa movb cld out or jmp push jne inc sub inc push add out jle je and mov pusha dec cmp loope jb lcall dec lea dec mov jmp inc add lahf bound imul sub push jo inc add push lock and movb sbb and and out rclb add movb add (bad) or rorb arpl jmp dec pop dec lea call into inc or rolb mov add add mov dec mov sahf decl mov dec adc lock std incl xor jo dec mov dec sti dec add inc test pop jne cmpsb icebp dec mov push ljmp pavgw add mov mov push cmp pusha dec or dec cmp and xchg sbb clc mov cmovs call dec add pusha dec mov sub stos (bad) (bad) aas orl dec and test dec cmovne dec sub sbb call icebp pusha adc sub ljmp and insl mov orl je add repnz test add inc outsb pop test test adc in sbb lret cmp and (bad) adc je push in loop sbb je xor dec popa call fbstp mov cmp dec mov je sub push cmc pop mov jmp icebp xchg out push xchg test icebp dec mov outsl jne (bad) aas outsl inc mov movzwl in loop mov je inc mov cmp cmp add rolb fcomp popf mov std clc mov add mov sbb test std les fbstp inc mov dec add mov push popf jmp push cmp dec jmp cmp je inc div lret push dec mov dec mov dec cmp rorl test jns add adc dec sub lahf jmp test jg and ljmpw adc rorb test adc and loope mov testb je dec outsb (bad) push push and mov je inc out pusha xchg pop enter and loope sub push or ficoml push mov or pop or adc mov cmp push out ret nop dec xor dec adc and or push jg mov insb and inc mov pop std dec or fwait test inc pusha dec adc cmp out es ljmp sbb sbb decl fmuls std test dec cmove dec sub int3 xchg and or and iret decb sti add test add test sub insl or pop adc popa call and inc aaa bound dec adc (bad) (bad) sbb test jmp push (bad) cmc loope inc inc (bad) test push push addr16 jle test adc test mov push and inc fmul clc arpl (bad) jne dec int3 test pop adc (bad) adc adc inc dec lea test jne sbb mov test inc into push imul mov test into push add bound inc (bad) loop hlt and jnp idivb ret iret (bad) testb jo mov mov pop inc lahf repnz lcall or adc hlt add andl arpl inc inc out emms aas xlat roll test dec movl or mov fiadd clc jne daa andl sub push roll xor dec adc xor fmuls pusha cmp je mov inc ljmp (bad) jb rolb push mov fdiv jmp test in jmp packsswb pop sbb adc pop xor cmpsl and jo inc sbb dec adc xor icebp xor cltd repnz adc shr add cmp inc mov inc xchg jmp mov jbe inc jge add aaa xchg fs xorb maskmovq add loopne xor (bad) cmp aas out sub pop into add sub xorb call cmp add jmp andl push sti fdivl jo xor jmp jae fs imul out sti cmp and mov pop call scas test je adc push jno inc inc pop inc sbb aaa dec and test xchg ret xor push jg jmp mov js ss out iret xor jmp jne lret pop jbe fbld add test ljmp and mov cmp je je cmp jne mov lret xor in pushf inc mov je inc adc push movzbl fdivs inc mov jmp inc push cmp adc fsubr insb inc mov jmp mov pusha dec mov inc mov jmp std dec cmpsl xor jbe jmp xor inc and push (bad) aaa add clc inc mov inc adcl jmp test jmp adc pop jmp cli push clc movq pop dec mov dec rcr in push add dec mov movb dec out fbstp or inc add add dec sub adc xor pop movb movl mov movl jb push cmp (bad) fdivrl sub ret call ja xor pusha dec cmp dec je cwtl add dec add dec mov mov mov dec lea add mov push mov call ret mov sbb loop cmp dec mov je sbb je xor icebp outsl je flds add rolb add cmp mov cmp jne call icebp dec pop add inc cmp mov and mov cmp adc iret or (bad) jae loopne and fdivr out push push test js lea cmp mov out loopne test test fwait in push lahf push loopne rorb and ja sti xchg cmp je movb rorb push cmp jne or dec lea out div cmpsb inc seta inc setb pop adc rcrb jae sub dec add fstp sub test dec lock push jne inc movl inc pop cmp je fdivrp xor cmp je add (bad) dec test roll inc pop and or dec mov call cmc xchg inc adc std cmp mov dec arpl cmp jl inc ret sbb pop dec mov add jo clc (bad) out jle test inc mov inc mov cmp lea je outsl cs jbe add inc mov inc and inc cmp cld out incb inc sbb inc and roll mov inc mov mov xchg inc cmpb jp add ja out arpl into frstor std or shr mul pop out cmp fwait mov add xchg push add push das add add outsl jo dec mov call jle ret or sbb or and jmp or orb (bad) ja in int3 (bad) lcall adc dec dec ds in enter shr movsb fsubr fwait loopne ds in xchg call cmp ja (bad) jg dec jne inc movb jmp xchg and imul loopne adc and movsl and push inc fs mov call adc pop jo js pop mov (bad) out out pop jne add mov inc mov jmp or mov aas push add dec sbb dec nop stos add add mov movsb inc out fmuls fucom in inc out mov enter call mov dec mov call or push xchg lahf call sti and test pop dec mov dec cmpl je aaa nop or inc or mov adc mov out dec dec push loope add push cmp clc inc repz jne fistpl dec mov dec mov call lret sbb jmp outsb (bad) sbb scas decb clc jbe imul pop jmp fwait clc pop das in (bad) (bad) jmp pop pusha adc out cmpsb test call out sti mov dec mov mov inc adc add add pushl out lcall call mov dec arpl popa (bad) aaa shr adc mov push cmp inc adcl or lret std fldl int clc dec sbb aas cmp sahf jmp add pop repnz mov call xlat adc jle xlat push cmpsb mov clc in pop and jmp lret ret xchg js movb pusha cmp xor lds dec dec ds add (bad) frstor decl cmp dec mov call inc sbb mov mov call and scas cmp clc or jne add ret or or inc sbb test aam adc pop xor or ja jmp pusha testl xchg lret lea call ret fsubr pop adc mov jmp xchg (bad) bswap mov nop call es xor pop out cmpsl xchg xchg shr pop hlt ja ret add xor pushl inc testb jne cmp lea ret incl ficom inc testl out jne jae mov movzbl inc mov std pop incb call jbe mov jmp aaa adc inc and psubd mov or outsl sub mov mov sub aaa clc (bad) call add sub push or dec mov push inc sbb sti aaa cltd repz movb jmp (bad) xor inc cmp jle test adc dec ljmp or adc cmpl xchg dec add add dec mov mov mov aaa aad and xchg call (bad) (bad) incl adc mov inc pop ljmp enter add test aaa push mov int nop dec sub dec mov icebp aaa fwait sub jg addr16 or add sub cmp sbb cmpl sub pop pop sbb int adc mov inc movl dec mov popa inc nop call add out out sub jae or fldz inc fucomp ss dec pop add fwait jg inc mov pusha dec lea mov incb inc mov mov pop and mov cmp jnp call sub outsl stos xor call cmp out dec mov or push push inc jne popf push (bad) xor pop ss jg mov dec cmovne movsb sub lret mov inc les dec add dec push pusha push mov inc inc and dec pop out sbb or inc push cmp pushl add (bad) decl inc dec aaa dec mov inc mov dec loope loop mov lret cmpb loopne ja jmp dec ds push push inc test jle fadd (bad) std xor into dec cmove test or add test pop jmp (bad) and call adc test adc pop push aaa in pop sti out or cvtsi2sdl add mulsd stos jmp ja push pop or dec movd movapd add or lcall sti call dec mov dec cmp jne pushl cmpsb mov dec mov test jne cmpb mov stos pop or jne mov jno call pop out pop dec lea push dec mov dec mov or jle fiaddl inc mov js lock jge enter inc shr lods pop jg dec mov mov cmp je repz popa dec mov lea add jmp push xorps js xor lcall dec cmp jae dec mov dec mov and lcall adc fadds mov and dec or inc and je dec mov call dec pusha dec sub dec pop (bad) out and dec mov inc mov dec movzbl sti call inc test je test dec lea push dec cmove call cmc push mov sub xor outsl lea push add sub jp inc dec mov test jge dec popa push dec mov testb inc ret adc mov sub out sub mov es test jge jnp mov mov dec mov sbb xlat loopne pop leave add movsd lahf ja incb cvtpi2ps or out es xor rorb call mov test dec lea sub call jmp inc lea or in adc or insl (bad) movsb push xlat mov ret call add xchg loopne aaa iret lea adc jmp push scas jg dec lea mov idivb pop xchg js icebp call mov xchg aaa dec sbb lahf sub test sub jmp add pop fistp mov add xchg roll pop loopne jae fcompl jo and addr16 adc xor rclb or add add ja dec mov call mov mov arpl adc or dec (bad) sbb std add call xchg sub andl add cmp (bad) decl inc js rolb pop pushl inc clc fist pusha dec pop inc test js dec mov pushl pusha dec lea push push dec xor dec or jne dec mov out cli (bad) decl sbb jle dec xor dec or jne dec mov push sub pop mov xor out and sub dec xor cwtl cmp or jne mov mov repz movsl jmp rcrb and sub jg and add pop sahf sub inc les mov sub mov mov pop movsl xchg add js inc js mov je call imul stos aaa push and dec mov pushf jle xor push cli cmp push adc addl adc pop pop dec dec mov dec mov test mov js out mov push dec mov inc jo push cmpsb jns push orb adc mov mov orl test dec jo mov jb mov (bad) fimul ja dec mov cmp ds adc dec mov inc cmp popa sub imul pop adc cwtl dec dec mov sbbb je invd fcoms mov dec mov and mov call (bad) mov mov pop imul mov inc cmpb lea loopne loopne je (bad) add rolb mov div andl xor imul add inc mov adc enter js mov lock (bad) incb add dec mov inc div inc mov jg (bad) incl scas ret mov add xchg (bad) jmp mov adc push and js xor mov dec xchg dec mov pop jecxz or xor dec or cmova cmp push jo js getsec hlt jg dec xor dec or jne mov aad mov cli rcl or jne inc adc insb dec jl xor or rorl test popa mov ret sbb rolb div pop ss popa adc jo pop out idiv sbb ret inc div imul inc mov add js mov dec mov popl xor jns fucomip inc mov insb xor cli sub dec mov dec test je pop mov xor inc mov xor sub repz lea ffreep jbe add jmp rolb cmp sub lcall aas bound push inc mov mov push inc mov fcomps dec js mov mov push sbb dec mov (bad) icebp (bad) xor mov mov (bad) icebp cmp jb inc jo xor into adc add es push dec cmp jne decl inc sub jp arpl jmp or jmp inc or sti je mov fcom add cs dec pusha dec mov push adc dec mov dec js jecxz ja xor cmp mov push cld jmp fsubrl dec dec mov push dec mov mov dec mov adc icebp mov hlt push push icebp xor push insb pop jl mov call jmp xchg out add lds xor popf scas inc xorl inc and push dec and and mov xor dec fstl push subb rcll scas stos dec and scas and inc push push and and andl push jmp cmp inc pop pop test lahf fiadd pop ret dec enter add movups or pop call cmpl jne dec (bad) pushl std stc call cmp je inc mov cmp je cld sbb int mov dec js push je ret jo out push push cmpl incl sbb dec sub mov js dec mov adc mov and mov inc sub scas pop mov bound add jmp push roll iret dec ret lea jmp mov sub cmp decl dec arpl cmpsb add or jg mov (bad) mov ja ficom call call dec sbb xor lea mov inc and and test inc adc mov push shll aas test les push mov adc call or sbb call js (bad) hlt out fild and mov mov (bad) in add jle aaa mov mov push add xor dec mov es ja dec cmp je jg sbb ss call add dec add ljmp sbb adc lods sub pop dec in or or int3 cltd (bad) add mov call and mov call push call add (bad) sbb sbb (bad) loop push or rol inc aas add fs cld add call pop call sarl cmp jne sub inc add pop scas ja jo test jle fsubrs call (bad) jb mov and mov cmovs inc lea dec arpl dec arpl into and or jge (bad) or (bad) sti insb test or arpl (bad) sbb daa and and dec adc pop and sub jg movaps movaps fsubs mov mov inc out (bad) push inc xor inc xor movq dec call xchg push jo jae rorl jmp fdivs sub rolb cld lcall std sub dec mov popa sar dec sub xor dec lea dec sub sahf xchg mov les and jmp stos aaa push lds test test jne lds test icebp dec mov dec mov xchg fist sub dec cmp jb jle clc dec sub jmp sub or jg dec mov dec mov dec test je jge pop inc neg inc out mov mov xor dec nop insb neg mov ss dec lea dec inc adc or add negl test test (bad) je cmp enter inc jge cmp popf inc cs loop mov dec dec mov lock test mov dec add inc cmp jg sub movaps sbb loop sub dec pop and (bad) je loope icebp jle jg sub dec cvtpi2ps jns dec mov adc ljmp cs addsd leave das repnz cvtpi2ps jns dec mov es dec shr inc cmp pop sti loopne dec or pop daa leave push rorb div subps xchg jns dec mov adc dec lea sub pop ficomp in idiv sti fild sbb adc call dec or pop fnstsw mulsd pop aam divps sub fcomp (bad) ljmp das adc clc cmc das adc sbb (bad) lret adc js jg add and jmp rcrb jo xchg out mov xor pop sbb popf sti adc dec mov mov push (bad) jae fcomps mov jo lea add es in pushf addl (bad) aam cwtl fldt adc mov loop inc decl cmp mov subl mov das sbb outsb (bad) (bad) mov dec lea outsb loopne or mov call orl arpl or mov push dec lea adc adc fistpll push dec mov mov icebp fs cwtl xor lea jg mov cmove call bound inc pusha jo pop addr16 rorl loopne mov sub and jmp pop push jnp adc dec and outsl mov icebp call notb das jl push aas (bad) or xchg stc call xor pop das fstps repz xchg comiss call inc mov in mov daa (bad) mov jmp adc mov dec imul pop pop pop aaa and dec lea inc xor imul sub dec mov xor dec ljmp dec mov inc fldt repz jne push push dec inc ret dec out add (bad) fild and dec mov dec mov dec mov dec sub push inc xor xchg ljmp add dec mov dec mov dec add or sub dec pop dec mov or nop out and adc cmp ja pop jle js and adc dec dec mov sbb sti mov cld pop dec mov dec mov dec mov leave cmp ja aad dec lea dec mov inc and pop push dec mov dec mov dec test je cmp rol dec or dec sub dec cmp ja cmp stc (bad) dec std inc ja cmp shr stc mov lds or inc jne sub adc pop cwtl or pop add stos cmpsb push fiadd fildl jne loop scas out mov inc leave js xchg clc out js dec div scas mov in les pop out cli lret inc rclb jne into dec mov shr das dec mov es roll (bad) and dec or sub shr iret punpckhdq loop rorb divb jmp aam and jmp aas dec mov pop clc jge jo fs insb add mov pop leave dec xor fdivrs leave and jmp icebp nop push dec mov pop sbb dec and nop dec mov dec mov inc mov dec mov dec mov add adcl mov pop outsl decb lret push or add sub mov add repz xchg cmp add daa lret dec adc xchg idivl out mov xor cmp fisttpll xor xor pop out subb sbb outsl mov test cmp lea out dec or cs xchg out jge out (bad) pop and (bad) or cmpl push mov test mov out mov cmpl jle pop out xchg stc call gs pop das jmp hlt ljmp dec adc push dec dec aaa inc mov fdivp mov push or xchg das or inc or jmp add movups push and pop sub scas xchg add cli mov lea dec lea cmc jg cmp bound call dec lea pop push call pushf mov mov out or sub add aam adc dec adc sbb in or mov sub add test nop xor cmpl (bad) incl pop inc test js dec mov pusha dec xchg xor ja pop icebp dec mov ret push out jne mov dec xor push dec xor xchg and inc add xor xor mov inc cmp jne mov inc in push xchg (bad) xor jne pop push dec mov loopne loop mov mov inc cld cmpsb mov (bad) mov mov sub push pusha xor cmp dec mov fwait add cmp pop addl mov dec mov ds sub sub addr16 sbb lds cmp cs movdqu cmp mov adc in mov dec mov and roll cltd push movups sahf jnp xchg pop loopne loopne mov pop nop mov addr16 loope cltd mov inc lds pop test cmp inc les inc mulb mov addr16 push or pop cmp aam mov je xrelease fwait ljmp cltd cmc inc mov mov push add cwtl in add push cmp mov adc dec mov scas stos enter call add js mov cltd or inc test addl test cld lock push dec xor inc dec or jne (bad) jo mov dec xor dec or andnps dec mov fdivs xor dec xor mov mov dec mov cmpl dec xor or jne sbb mov dec dec mov ret or mov iret clc ret std dec mov sub popa pop dec jl and dec mov dec cmp aas inc adc mov inc lds add xchg cmc inc ret arpl stos add addl push jg dec mov inc clc xchg dec mov mov adc cld jno mov dec mov repnz loopne sbb sarl fwait dec rorl cld inc adc dec mov loope dec mov addr16 mov inc xchg cmp mov dec mov loopne inc inc mov mov scas pop jl dec cmpl mov es pusha test inc and lds cmpsb subb xor test stos call inc pop enter lods popa push enter fwait loop push test js inc or push sub dec mov pushf cli (bad) jo xor movdqa fs fs mov into and add scas fsubl fiaddl movups test iret inc or cmpb sar outsl insb dec mov add movups xchg addr16 addr16 dec addr16 pusha cmp (bad) push arpl loopne out pushf jno adc adc adc mov orb cltd mov add add rolb addr16 div jg jg out lahf mov adcl leave jp dec mov sarb pop lea push daa jne mov sub pop ret imul daa pusha cmp test cmp push scas sbb inc inc cmp xor cwtl in ds jo or fwait inc mov ret orl cmp sbb pop or push mov dec out jo mov adc push out pusha cmp dec jbe or jecxz jnp rcll fmuls outsl xchg cmp push mov jmp ljmp repz push jae (bad) (bad) jmp pop mov xchg dec inc aas fidivrl iret dec hlt mov popf mov insb pop dec mov pop mov lea dec lea loop (bad) imul inc mov or mov and lcall ret mov adc push addr16 test jne call add dec xchg jne (bad) jne jg xor jl (bad) por add jmp in inc unpckhps or push gs scas cmp sbb (bad) mov mov and mov inc call sub fild mov dec add dec jne testl rolb sub cmp dec xor jnp pop jo dec mov dec mov push adc cld inc stos out addb loop inc pop das push lea popa xor or mov scas mov es inc test push orb mov pop out dec dec mov lcall scas push xor out xchg scas or or addr16 leave leave sbb js cmpsl addl xchg mov int (bad) cltd mov cmp jecxz andl jb rcrl cmp arpl jnp cmp stos (bad) (bad) fildll lret dec mov dec mov mov inc cmpl mov mov dec adc jp lds adc cmovs cli or (bad) fild push call mov call xchg addl adc jmp out shll psllq loopne cmc dec mov xchg dec imul dec sar std sbb (bad) cs sub dec mov (bad) push fisttp sub mov xor out leave loopne je pop sbb dec jb lret mov jne cmp pop pop pop pop pop aad dec mov pop sub xchg pop dec mov cmp jnp mov sub jnp and mov mov dec mov fisttpl cmpsb push (bad) fmul std (bad) loopne into call cs xor in fild inc fdivrl dec dec lea jne adc jne inc popl out incl or dec mov enter dec mov dec mov dec decl dec add dec mov push add loopne lea enter aaa in fisttp test je nop dec mov dec mov dec cmp push cmc hlt call mov add loop mov test dec sbb push add mov push call xor jae jo mov mulb je ds jle dec jg decb dec mov dec cmp jne inc call dec inc cmpl mov adc push pop orl add call loopne adc push hlt aas sar rorb shr into push fsubs decl jmp sbb jg pop mov add add cmovs or or sbb aas push cmpsl inc pop jmp xchg call or insb and fucomip sub jge or pop inc lea jbe or add repz adc sub mov call dec mov add cmp femms nop lcall clc push adc xchg sub push pop sub sub lret (bad) pop cmp adc cli inc xor adc dec sbb push or push push and mov push js pop repnz mov inc js sbb dec jo pop js pop js sub mov lcall dec addl dec subl xor test popf sbbl test std sbb push or call and cld push add lea subb xchg push addl push xchg ret pushf add or cmp rolb pop scas sahf adc cmp inc (bad) mov iret adc or mov mov out or add pushf nop lods hlt loop ds dec mov mov ja js mov mov mov mov jo rcr and je jmp sub jecxz jmp adc (bad) dec mov pop add imul jle clc insb cld loope test dec mov jb mov orb out ss ljmp push dec mov jg mov movsl ficompl in fwait jne cmpsb xor cmp into jne outsb push push outsl push xlat mov repnz push jg pushf stos popa push jbe bound mov jle mov (bad) mov inc out scas pop push mov xchg or out mov ljmp mov dec push mull int3 jb or in movsl aas push add mov xor add in pushl lea adc dec in lahf mov mov lret adc pushl in fistpll or je cmpb testl sbb leave mov sbb pusha aam add (bad) push aam or fs out fldl or add adc es xchg (bad) repz std or mov mov jecxz fwait sbb push mov inc push fmull dec mov fldl mov mov leave push (bad) jp jmp fmuls jbe loope mov mov adc decb mov dec js (bad) std jne les mov data16 mov cmpsl sub out jno add scas scas mov sub push lods movsl adc xor out mov mov jnp pop out popa lcall xchg or call cwtl add add movb std jb js scas cmp movl rcll push jge (bad) and in scas call loop sar or shr mov add movl push or cmp in je dec lea nopl (bad) xor addr16 pop icebp mov test test aaa bound jl inc add add out mov or add inc mov std or push cmpb test xchg xor adc dec fimul pop mov jecxz sbbl pop pop jle xor dec dec pop pusha rorb shr adc push xlat pop sahf inc pop push dec jo out xor add notl sub add into jne sub and add dec dec out dec ljmp xorb iret cli mov mov call mov inc call imul lea sbb faddl mov in or add mov movl lea jg out lea cmpsb add call fbstp dec pinsrw adc cmp lea inc mov add out incb add gs inc test (bad) dec lea and and jae lds rorb insb jnp out out decb imul sub pop mov adc jb sub mov test je cmp cmp ds std dec mov dec mov js sbb repz hlt push add add pop xchg dec cmpsb int3 add incl call mov mov scas jae mov xor push andl mov pop jp lahf test xchg or mov add add (bad) xor mov sbb call and jmp xor inc push gs adc or sbb loop or mov mov push sbb mov and mov cltd mov call sub test je sub and jmp inc add inc pop (bad) dec aam and sar jo or dec out jns jmp popf mov sbb je inc xor inc das mov jb lret pop or call outsb cmp aas sub or int xchg push xor mov mov inc mov je lea inc test cmovne add shl inc test dec arpl paddusw push popf insl (bad) out cmp fs xlat dec mov mov xor sub (bad) cmp cmp add mov and insl xor inc or add add add add adc cmp add aaa add je mov or test xor mov jg out dec lea call inc je rorl pop adc jecxz sbb andb dec mov jmp xor js adc jo subb inc fwait outsb repnz and fcompl push faddl push push or int3 test xor and lahf xor xor mov dec and call aaa mov add rorb idiv mov and dec mov inc orl jmp xor fisttpl and outsb push fstpt out mov loope pop add fmull aaa nop xor jmp (bad) out cs mov call js pop xchg cmp out mulb dec mov (bad) mov test add and cmp fcos adc std nop mov mov ret adc lds push and mov xor or cmp jge cmp jmp dec and inc out ljmp mov dec movl dec dec cmp sbb or loope mov leave add inc or or push call adc je jo adc std pop jmp dec lea fldl call (bad) mov add push add push fiadd add adc xlat fildl dec and mov jle call call cld jbe add jns sti pop add fstpt or in (bad) ljmp and sbb xchg neg adc adc cmpsl in jo adc jecxz lea dec mov call cld ret xchg pop adc nop sub mov adc or loope jns xchg jno popa imull xor cli in add or jg mov jne or dec clc jmp aam ret mov mov xor add rclb sarb jmp dec stos roll fcmovbe cmc dec mov sub add mov lret xor sbb pop sbb call add sarb out mov inc inc and fist dec dec lea mov inc dec cmc lea add mov movsl or in and mov add dec arpl dec mov rol mov dec sub dec invlpg sarl lea sbb bound pop jb call js arpl dec sub dec add inc call scas add nop inc or push decl clc xor jle leave je call mov adc cmpsb mov call sbb push (bad) (bad) mov add mov adc dec pop or fldl sub rclb les lahf (bad) dec mov add jbe call dec sbb (bad) jno lea popf decb add iret cmpsl mov cs dec dec icebp mov dec xlat push or mov subl imul nop inc mov ret fldl scas wbinvd mov fldl sbb and out insb sbb inc mov and outsl addl jbe add pop je test inc cmovne xor stc pxor inc cmp push leave inc cmovle (bad) repz cvtpi2ps cvtsi2ss or repz ja divps mulss enter fildl in paddusw out adc cvtss2sd adc cmc sub and andps cmovg (bad) ljmp aad aas cvttsd2si test mov mov ret cmpb mov mov or jmp push shr inc add jbe fcomi sar jmp aas jbe gs sti pop dec mov popf xchg xchg adc fdiv addps jmp mov adc pop xchg add xchg sub aam leave add sbb addr16 je jb (bad) js add icebp call push adc add scas push add pop cltd mov idivl mov pop mov aad inc mov (bad) fild inc xor inc imul inc test inc mov mov (bad) out inc mov adc cmpl inc mov dec es je xor inc test jle inc imul and ja push sub mov xchg add add frstor mov adc add (bad) lahf jo mov lret adc les cmp add loop flds jmp cmp jmp adc adc leave movb inc add jmp inc sar xchg inc imul mov add add inc es mov ffreep aaa xor adc int sbb pop and jne dec mov icebp (bad) (bad) decl cmp inc dec mov dec mov dec mov dec mov dec mov loopne adc dec mov dec mov inc xchg inc and rorb jno mov adc jae and jb jmp xchg js mov sahf sub data16 iret sbb and add rolb scas js or jne imul ljmp popf push xor push loopne (bad) mov bound xchg cs jmp lods orl pop adc test adc sbb int3 mov cmc das dec mov dec xor fstl arpl xchg xchg bound mov dec xor jbe mov push pop and push inc dec xor dec xor cmovs dec xor cli jl push dec xor lret pop pusha dec xor cmp dec mov or dec xor push xor (bad) (bad) (bad) decl dec rol dec mov dec xor dec rol dec xor dec xor dec xor out ljmp rorb dec mov dec xor jo mov and inc fistp clc dec xor and clc jg fimul into adc xor dec xor (bad) or xchg dec rol dec rol sbb pop imull adc xor dec xor dec sub aaa iret enter or dec mov dec xor jge icebp (bad) mov sbb lret xor dec mov jne dec ror shlb sti cmpsb mov and les push ja mov lds dec rol (bad) dec xor aas adc xchg add mov xor frstor mov push and inc xchg push lock cmpb fisttp dec dec xor dec rol sub add mov jge xor aaa push fbstp or ret add dec mov dec xor mov das mov (bad) std cmp adc lret sbb int sbb ret lahf sub into dec xor sbb sbb (bad) (bad) ffree xor mov rol dec rol dec and dec rol lcall std dec mov push ljmp movsb dec and sbb mov sbb dec not dec and dec xor mov popa sbb dec and call xor bsr lock not dec dec enter stos out jg or mov dec mov dec xor dec and shl inc lcall cmc dec and sub mov dec xor cmp and dec not sbb and push dec xor aas jmp dec xor dec mov jle insb and xlat icebp out mov dec and dec mov dec sub pop clc pop add icebp repnz sbb mov push pmaxsw jns pop dec and dec and bound add in dec not pop pusha dec and dec not dec rolb adc (bad) dec xor dec not xchg ljmp jp cmp dec xor shlb rcrl mov shl mov dec push aad xor dec and ss outsb lea xlat xchg mov mov andb push add mov mov fucomp add int3 dec mov dec xor dec lcall sub iret dec add push in and xor xchg lock and dec mov cmpb dec and and dec and dec xor jbe cmpsb pop jp loop orl (bad) push (bad) cmp inc and dec xor dec cmp jl jne dec add dec mov add pop (bad) je (bad) (bad) popf int std jg or sub push dec mov dec mov xchg jmp cltd inc add cmc lcall and pop xor fiadd and xchg outsb cmp jl mov dec xor add mov sbb sbb in push pusha dec mov and or hlt or sbb pop inc dec mov add adc dec push fdiv add ret ja jge jne add push cmp data16 fs or mov (bad) fisub sub jecxz mov cld push repz mov cmp add push dec add loopne xchg (bad) mov jle inc lea test xchg xor dec mov fdivr fild cld mov movdqu dec lea pop cmp movsl addr16 xor fcomps dec adc and cmp mov and or add movaps adc push std lret mov popa mov enter xor sub gs adc outsb (bad) mov push insl push dec movsb and pusha mov mov inc pusha lods and xchg jae jbe dec jo jmp cmovo sub mov movaps movaps cltd and jnp ret mov movq or add addb and jo test adc sub add xor xor push adc inc xchg mov mov ret cs pop pop fcmovb stos and and dec cmp or andl sbb push testb ret xor xchg mov push xchg andb loope std mov sbb inc mov adc popa ret inc mov push adc js xor dec xor dec xchg mov sbb dec or in rol and sub and mov (bad) and xor dec mov icebp jg jg cmp dec rorl pop dec xor dec mov dec xor arpl aaa insb dec xor dec mov adc xor sbb dec rol or jo (bad) lock les cmp mov mov dec int3 (bad) cmp out std hlt dec xor dec xor pop adc adc in adc xor incl or mov dec mov jno dec dec ror dec ror leave add mov fwait mov xor xor cld pop (bad) xor icebp in push hlt mov das call and push adc mov mov (bad) xor popa adc push add sar add ror hlt mov dec ror jae mov movsl fidivr jbe js daa xor mov mov dec xor jbe mov (bad) loop sbb je cwtl push aad rcll ret pusha call adc sub fdivrs ret ljmp (bad) dec xor and dec rol xchg pop xchg inc or mov rorl test les cld int3 bound loop and js ja pop out rol stos sub pop psllq in add rolb and fisub add mov dec rclb mov lret (bad) es lea add mov dec and dec xor fidivl enter scas mov nop mov loopne push js clc pop clc push dec mov dec out orb icebp lahf cltd lock and dec xor mov xor pop adc mov shr xlat stos cmp inc ret jge not dec mov lods dec mov dec pushf dec xor dec and dec mov xchg call out lahf cmp dec mov adc es cmp jmp sbb notl loop add dec mov dec mov ljmp dec and rorb ljmp and dec and dec xor or aad inc std das dec dec and in je cmpsl pusha xchg sbb fdivp jle inc in dec xor stc fmuls sarb ficompl mov (bad) sbb pusha dec and in (bad) dec jne in mov push push cmp pop mov jecxz iret pop rcrb inc mov pop das push xchg jmp jnp inc cld (bad) jg and mov dec mov dec not dec mov dec and dec pop mov mov dec and adc jmp ja and std mov rol js out aad xor and loop ds dec and jnp fildll sub push and dec push push push les (bad) cmp lret push es movq add add movhps cmc push (bad) cmp movlhps sbb movhps movhps nop mov pop push sbb jb movaps es lds dec and psubq or movhps or pop and movhps call lods orl inc xchg movhps mul roll xor addl lock cmpsl sub call mov pushf cmp movhps and sbb jecxz aad sub jl sub (bad) sub pop cld inc sub inc cmp out xchg shll adc pop out dec lea xchg dec mov dec cmp fbstp dec inc (bad) incl sbb add dec movsl xor inc test je inc mov (bad) out ficom add adc je inc movzwl inc mov (bad) mov ret add add movzbl inc mov add mov mov add ret dec lea dec arpl xor call pop xor (bad) xchg dec push inc add lds mov movdqa sub and jns xor sbb loope mov and adc loope inc outsl aam test or mov lods and adc adc and and adc adc pop mov xchg mov (bad) or adc sbb in call call or sarl jo sub jne jg pushf and lds or xchg loop inc sub loopne mov mov std arpl test dec mov dec mov fisub cmp xlat js sahf stos mov jbe mov mov adc pop sbb jmp (bad) (bad) jle dec mov dec mov dec mov dec mov dec mov dec mov ds idivl push push pop js mov jnp pop cs scas mov (bad) xor (bad) jnp scas jbe fldenv mov dec mov sub sahf sub mov push or mov push sub xchg test sahf sbb gs or shr sub mov add aad or test xchg xchg inc cld dec jle fadds subl mov out xchg clc and in pop mov scas mov popa pop inc and cmp dec mov fisttpll insb and dec cmp mov sub push push (bad) (bad) mov int3 (bad) dec (bad) dec lea lds insb repz xor pop inc sbb rolb add sti jo je mov out jno pop inc les jg daa xor dec mov push (bad) dec mov mov dec popw jle dec mov shrb test mov inc out loopne mov jmp out dec and or mov sbb stos cmovs pusha mov stos test inc cmp xor sti mov ja mov dec xor dec adc push or and mov (bad) aaa rol xor outsb cli dec xchg or or mov dec rol rcll and test xor (bad) xor xchg mov scas js mov dec ror xchg (bad) dec rol adc pop dec lock pop fdivl nop xor ret dec mov and les xor mov xor dec xor dec add clc loope sbb pop pop outsb pop dec xor loopne push push outsl movb imul inc and jl sbb data16 rol xor jle dec xor adc sbb xlat mov rclb jmp fistpll rcl add push cmpsl sbb (bad) cmp xor dec xor dec movsl je sbb jb sbb cmp mov inc cmp enter dec mov xlat add test rclb je xor add sub insb leave aaa hlt push scas decb sbb adc and ljmp dec mov sbb jo adc mov not fwait dec mov dec and out das mov dec leave int and or ss push xlat cmc jo test (bad) mov pop iret test into (bad) jmp jp fwait mov dec and nop mov dec xor dec leave insb dec inc and sbb jb pushf dec mov dec and dec mov pop dec and or sbb sbb into sbb xchg jl mov or int3 dec mov mov mov test fistpl adc cmp bsr fxch mov inc mov popf and dec enter dec mov fstl cmp dec dec xor pop cmp hlt pop cs and dec xor xor sti mov dec and inc dec dec repnz jecxz scas mov add ficom rcrb cmpsl (bad) (bad) enter pop shlb pop dec mov stc dec not repz in dec mov dec and xchg lods cltd dec xor mov (bad) aad inc lods and outsl or mov push and gs dec xor cmovl dec mov decl push jg mov dec and into add dec xor lcall jmp cmp pushf sti dec cwtl jo loopne mov notl jo inc and adc mov dec sbb or mov sbbl loop mov add mov xchg sarl jno mov inc and movb adc sbb sbb push sarb dec mov dec mov (bad) sub push sbb push mov dec mov mov adc dec mov xchg inc mov ret dec mov cld popf call dec push dec shl and inc cmp icebp movsb (bad) jbe xchg and pusha sub inc ss or add mov jg sub add lea test lea mov mov clc mov add leave mov sbb sbb call mov cs icebp sbb or add fs mov inc xor xor xor sub pop incl push and push add leave inc mov sbbl fsubp (bad) sub inc shr pop jo mov push xor mov cmp in add (bad) inc fidiv jne ja movsl (bad) scas and cbtw sbb push add inc push push add inc inc xor xor jo cmp fwait adc mov cmp jg push mov add mov sti add cmpl or add xchg inc (bad) fildll movq inc cmp or and add or (bad) jbe push mov sub add out dec icebp mov and addl push dec jno shll add daa mov shrl test je push and bound sub (bad) xor or pop test inc pop and cmp pop push int push add loop cmpsl or inc popf out pop pop je sbb xlat call xchg cmpsl xchg pop movsb sar es pop or pop pushf jle dec push sbb ss mov or ds fucomip aam pop je sbb in sbb arpl inc lcall sbb jne mov dec xor push fwait dec pop add xchg pop pushf aam and add inc jnp mov (bad) or mov push shlb fmuls call sub jne flds cmp sub xor js shrl orb rolb lret call les mov inc sbbl test jae sahf aam ret sub nop test test lock jo mov in or js inc mov pop adc or inc imul inc push pop lea pop out inc dec mov dec mov dec mov xchg ja rcr jmp dec je xor loop outsb pop jl jge loopne inc stos xor dec xor sbb icebp call xor daa cs xor sub pop cli dec hlt std (bad) xlat test or dec mov dec xor adc push call or lcall mov dec mov dec xor lcall dec xor dec rol dec shrl dec adc jo,pn out xor lea or ret mov frndint xchg inc inc int ror dec call out push sub push scas dec xor or dec fs les xchg cld aaa dec inc movsb sbb mov dec xor xchg dec rorl inc ror out dec xor cmp leave jecxz (bad) push xor mov xchg dec xor xor push (bad) cltd inc dec roll test ret xchg cmp ret push inc inc iret cmp pop pop (bad) mov dec mov inc les push mov inc cli sub xor adc inc sbb xor mov test mov popa sbb js (bad) cmp call xor or jp jecxz xor popa fs rorb sub not inc (bad) sbb test dec divl leave enter dec mov push and pop sub dec jb lods mov push (bad) dec pop inc (bad) push sbb sub cmp stos (bad) rol dec mov push dec jl test push push fwait dec (bad) cmp xchg dec mov dec and mov dec xor dec dec mov data16 shll out mov inc sahf pop call frstor mov xor (bad) dec mov mov dec xor dec mov sbb aaa inc imul rorl notb pop inc mov dec adc xlat add cmpsb push dec and notl mov jmp test popf into (bad) aad push push ret and push test test mov and daa std (bad) push add cltd mov gs call xchg pushf jmp les arpl cmpsl dec sbb in enter (bad) dec pusha and sbb not ljmp insl sub add dec xor sarb push push xchg rclb insl mov adc ljmp cmp dec add pop and adc xchg out dec xor lds add xchg test jo lcall cmp (bad) arpl movd adc pop adc enter mov dec mov icebp sbb out mov jnp cmc pop ss sbbb mov test pop dec mov or sub sbb mov mov mov xchg lcall test ja lds mov dec jno and mov add push push mov xor sub or fldt es push repnz inc sub loope add push fs sbb jbe fs dec add and daa insb mov xorl adc mov fidivr divb rolb jb inc pop dec mov call dec mov push mov push cmp rol test inc mov add dec arpl call xor dec scas mov mov addb out test add data16 cmp aas jae loopne pop (bad) testl incl and mov test ja adc cmp and inc aaa and inc pop cmp and out pushf push push out out test push cmp and lock movsb das xor and push adc incl and js aaa and clc or test cmp and sbb inc pop and bound xor jb and out iret bound adc decl push pop std pop in push xchg and adc decl push aam enter pushf pusha test jg leave mov decl push pop pop xchg push movsb (bad) divb jo jb pop sbb aam cmc js or lods add dec lea inc loop incb je dec cwtl cltd cmp or dec dec xor popf jg dec mov call dec arpl mov ret dec mov call lea mov jmp test in inc in iret xchg mov xor inc add add rolb pop add fneni(8087 lcall jg and xor inc mov inc mov inc mov (bad) (bad) inc xor xor xor xor xor inc mov xor inc xor inc mov inc xor (bad) (bad) pushl inc mov inc xor dec lea xor xor inc xor inc movzbl (bad) lcall dec sbb jns xor movzbl inc lea inc (bad) (bad) pop cld fnsave add inc mov dec pop mov dec mov add pushl in das dec and mov add inc mov inc cmp std inc add add inc mov inc mov or out inc mov inc shl inc sar (bad) jmp sbb out mov inc mov inc lea inc shl inc mov inc xor inc mov fnstsw incl ljmp aad or inc or inc xor inc mov (bad) out jle in or inc xor inc add in sbb xor inc xor shl mov mov sub or shr jecxz shr inc or inc roll incl or inc xor lea inc lea inc xor fmull decb add inc mov (bad) (bad) mov mov mov shr inc shl inc mov inc mov inc shr (bad) (bad) out out cmpsl inc shl lret or mov shr inc xor inc or inc xor inc xor (bad) mov aas shl shr jno fldl sbb dec mov inc mov out cmp pop mov inc mov dec push out or xlat out (bad) fistpll inc or inc xor inc xor inc mov mov movzbl std fucomip sbb aam inc lea inc lea inc lock idiv dec jb loope inc (bad) jb xchg inc mov imul mov nop cmp mov jae mov mov out aaa loope loope add mov inc jle sbb or sbb xchg pusha xor fimul repz or or (bad) jg (bad) mov jne mov mov outsb imul inc or test inc test sbb sbb subb or fwait jb or mov adc and cmpl jns jae ljmp or mov xchg and imul push or xchg popa (bad) jecxz ljmp (bad) je dec and and add sbb xchg cwtl hlt dec fbstp add or xchg mov loope xchg sbb dec daa or or xchg sbb seta or jb aad and bound sbb xchg xchg pop mov les or xchg icebp adc dec shr cmp cwtl jmp and add ja adc or adc test sbb or test loopne inc mov in repnz fdivs inc jo subl mov jne cmp pushf or (bad) in decl dec xor and dec or xchg jb jne xchg sub jg (bad) xchg cmp testb mov test push push inc adc mov and cmp or loopne (bad) or in push jp in sbb cmp cltd push or addr16 adc xchg xchg nop or test fs (bad) pop and jb adc inc jle xchg js divb popl push outsb jmp xchg cmp sbb and fstps xlat jo or xchg xchg insl enter xor rcr and fdivs rclb or mov add xchg xor sti add in adc dec clc sbb or sbb jne jp xor inc mov jmp cmp or adc ja add pusha call sbb jbe call xchg pop xchg pop cltd xor xchg pop andl mov sti inc sub jb fildll imul or push ret mov divb mov sbb xchg test (bad) xor or jg in mov ljmp ret je popf dec xchg mov push or out (bad) jg nop pusha mov popa test test mov or xchg (bad) lock xor and popa xlat orl cmp or and loope sbb mov xchg jp pusha js test ja jnp enter jnp or or cmp push sbb inc xchg movzbl orl xchg or shrl lcall or wbinvd out lahf or aaa or or jb or mov ret std or inc mov sub cli in aaa in or ljmp call (bad) mov out mov mov inc xor xchg lods (bad) xchg mov notl adc mov js mov xor sbb (bad) fild or fild scas xor xor inc stos (bad) out fwait mov lahf inc xor xor xor mov fs or mov inc xor mov clc (bad) adc push adc push jo notl notl notl adc (bad) push sti sbb add cmp scas add rcl mov ja aad std lahf jp mov mov add add mov push jmp mov imul add mov and jae mov sbb in pop or push mov xchg and pusha or imul mov or ret nop ficom sbb or jecxz ret mov sbb push xchg mov push adc jmp jno (bad) push mov cmpsb dec pop and divb add sbb xor xchg jo dec mov sbb stos inc test pop xor jp mov nop add or insb ljmp xchg shll xchg cmp inc loopne aaa cs movsb lods dec bswap mov loope mov cmp add jo movsb push cmpsb das (bad) nop mov daa and fsubrs and dec dec xor or and xor push xor mov (bad) mov xor addl (bad) test inc and sub or jle in inc cmpsb sub dec dec xor mov adc xor and cmpsb sub dec rdtsc push loopne ja sbb sbb sbb dec mov (bad) lock dec (bad) (bad) jne sbb (bad) xor rorb xor mov pushf loope adc push adc or icebp sbb xor scas (bad) or cmp or add sbb add mov fsubrs cmp cmp jne mov jno inc push and ret loope xor imul mov mov roll and cmpsb inc mov and inc or (bad) jge ret ja cmpsb xor mov inc mov std sarb (bad) fidivr inc mov test push pop call fstpl pop in add lock jmp in or or xor mov mov inc lods xor push and aaa lods xchg add mov loopne jo lea jg or xchg and jbe bound insb pop or clc (bad) xchg xor sbb ret push ja pop xchg jp jnp xor jne fs jo xchg push push pop xchg mov std push and inc ret push mov mov inc or mov popf push or (bad) xchg xor jp jno (bad) adc popf sbb loopne lods mov hlt ret popa (bad) rorl mov cmp adc add jo lcall pop outsb sub and fwait mov popf jg add mov xchg test sbb lods inc mov adc mov add push adc or mov test orb cmp xor lods out or dec pushf sub inc dec and das test inc xor push (bad) mov xchg mov mov test mov mov enter inc cmp jg sbb dec mov jle mov inc sub inc mov inc mov sub push inc mov inc mov dec cs mov mov (bad) (bad) call dec shl mov mov dec lea mov inc mov mov mov mov add and (bad) xor mov mov dec xor fiadd je cmp mov jmp mov add cmp jge add mov inc lea dec dec ljmp inc xor movd loopne scas mov or inc dec mov iret popf std scas inc pop add (bad) in push inc push and mov inc movaps insb in je xor insb and ss sti fcoml fstl xchg adc ja outsb pop and sub mov and (bad) jmp leave inc xor and enter push out imul into mov fs std and mov sub push loopne inc imul test mov and dec fidivrl push lcall pxor (bad) jo sbb and outsb push and inc or adc (bad) (bad) add (bad) call inc mov add icebp call sbb add mov dec adc adc mov and adc rol adc inc add nop sbb or pop or div jbe and data16 xchg or dec mov call data16 ds add inc ss lea adc mov fdivs cli inc adc xchg add mov add add push adc inc insb sub loope test rclb or mov sbb ljmp ja inc mov xor out and xchg jmp inc (bad) adc and inc xor xor mov xor add (bad) aas xor inc xor inc xor inc xor xor mov jmp jb lret add cld sbb adc xor ja jle push insb inc xor inc mov dec or dec mov and jae mov adc sbb jo outsb cmp je xor pop js iret push xlat push lock (bad) das sub pop and arpl inc popl inc cmpsl xor mov and dec nop xchg add xlat mov push xor and inc fstp hlt and pop lret push and inc mov cmpsl xor jbe mov lahf inc xor add cmpsb sarb lcall jno add push cmp inc inc add jg push cmp add inc inc inc inc dec cmp jne sbb (bad) inc xchg dec sub mov add aas aas mov in into dec mov cmp mov adc shr aad mov dec mov inc loope or mov pop insb sbb scas add cmp inc xor mov or or lahf or pop add (bad) int push pushf sub pop (bad) sbb sub (bad) jg call lea test mov and cmp jle lock in cmp adc decl rorl (bad) (bad) (bad) pushl add dec lea dec lea dec mov call inc lea mov inc pop add mov and js jmp inc lea dec cwtl inc movzbl dec bound add mov inc popf mov mov inc lea inc mov movsb insb mov jg fstpl dec arpl jg jmp and aaa xchg adc inc xor cmp jmp mov jg stos ffreep add or iret jge add pop mov push dec mov jns mov shr inc shr sbb inc mov mov test mov inc or out dec and shr inc sub push rcrb inc cmp jno test into fld jge adc je (bad) sbb lds call jl sbb roll push sbb sbb roll dec sbb dec shr sub roll pop pusha sbb loope or hlt pop inc push rolb jmp xchg inc mov mov push push aam and adc adc pop call insb mov call into adc xchg lcall fsubrl ja adc call sbb or and jo or aam stc inc pop ret fsubrl adc cld call fsts inc fsubrp enter les call outsl xchg pop daa (bad) sbbl mov xor incl out dec and movups movups mov jecxz je mov mov test aad js test mov mov das jle popa push rorl (bad) cmp aas pushf sub dec cwtl dec orl fadds sar push jo push or add and cmp (bad) fist sub (bad) je cmp je cmp je xor icebp inc cmp inc add or dec ss push jne into (bad) pop lcall mov or lds cmpb and add call inc cmp pop add jae mov lea lea inc lea lcall mov push push lea add daa jmp mov add movb sbb lcall sbb xchg cwtl icebp js sbb ljmp call xor dec arpl inc mov (bad) decl outsb dec inc sub cmp inc cmovle inc mov aaa add dec lea inc ret neg and lea cmp inc cmovae inc inc cmpsb (bad) fsubrs ret das dec faddl fimull xchg inc xchg iret das add jmp movb mov lock arpl inc fildl sbb ja fwait jle arpl push xor movb mov arpl cmp sub movb mov cli sbb dec sbb or push mov popa push sbb adc pop pushl int3 xor dec arpl cmp add or and test xchg xor sbb or or dec arpl cmp xor mov fimul aaa or or je rorl in mov or xor (bad) sahf mov sub aas push xor mov pshufw dec arpl loopne (bad) pushl sbb les inc shr dec add inc cmp fstp std add sub jbe or movaps je or and lcall and inc add inc cmp je loopne xchg jb pop or inc dec inc not push xor inc (bad) cmpl jg in je inc cmp je add mov mov je add je or fsubr xchg sbb dec lea or ret add fwait out clc pop (bad) xor add add inc movb xlat in and add cmp jmp popl inc mov jmp loop mov add add jg mov nop inc mov jmp stos and lahf test scas pop dec lahf pusha sub mov je mov jmp mov movsb or ror jl scas mov add movq outsl lret sub inc mov punpckhdq jg std adc movq sub or fcomi psrlw push aad push (bad) adc fcmovnbe adc or negl in pop clc or or push and les aam packuswb dec mov dec mov addr16 out push pushf outsl xchg dec movl nop add ss loopne add out pushl inc xor or inc mov mov fcmovne inc psrlw inc xor mov fsubl mov adc inc push dec ljmp imul fnstsw rorb nop or or (bad) fsubs ret js or xlat in mov outsl scas pop and outsl mov insb and xchg inc xor inc pusha loop cli jge outsb mull push (bad) outsl hlt or jo mov add cli push lret fldl add repz imul pslld sub sbb mov hlt xchg and pslld jbe (bad) push loope outsl enter inc cvttps2pi je xlat test sti xor scas sti mov addr16 or jmp lods stc and mov jb mov or or popf xor int3 pop in punpcklwd popa add sbb lds sbb jecxz mov lock rorl and pushf fstpt iret in dec in add repnz cwtl js stos add inc por mov dec xchg (bad) mov push js xor ja and inc mov pop jmp (bad) pop pusha inc test jne xor inc xor decl insb dec in xor xor xor pop rol mov adc nop outsl shl sub les pop inc lock mov mov cmpsl pop and loop cli inc mov sbb dec dec add adc cmp xor lahf cmp xor cmp adc stos sbb inc mov or sub push mov inc mov jmp sub popa subb fbstp ja sarb adc rolb or fstl insb pusha mov test inc mov mov pop pop or pop pop hlt dec lea mov push push push add es sbb mov cmp cwtl push sbb jmp pushf adc mov or or mov cmp inc sbb cmp inc cmp adc dec arpl data16 das mov or jmp dec out inc movzbl add add (bad) (bad) (bad) mov jmp arpl inc mov movzbl dec arpl inc or or dec adc in mov sub aam mov movzbl out outsl neg cmp sub sbb adc mov mov push sbb dec arpl xor dec mov mov cmp inc sahf adc out ret or cmp call jo ret adc ret push out insb clc ss push dec sti adc mov je cli mov inc cli js xor sbb and xor rcr mov mov je sub xor adc fistp inc add inc (bad) mov shr rol inc add inc xor inc ror idiv (bad) incl xor mov lea add mov ror mov inc add gs scas sti adc icebp pop push sub inc xor add jle inc rol jmp mov inc add inc xor ror add inc xor pop fmull mov xor ror sbb mov and sti out out cmp enter rclb movsb cmpsl inc mov inc pop add fdivs movsb lds inc xor inc (bad) (bad) (bad) std rol inc add mov inc add inc add inc add xor ror add inc xor jge pop sbb or adc push scas sti and rolb xor roll les inc xor and in sahf loope push pop sub or popa and in ror das pusha inc add inc pusha (bad) sti inc xor fwait inc add inc xor daa jo sar leave jge inc lea sbb cmp lret sbb adc mov sub xor clc xchg aas inc xor cmovl inc xor add ret (bad) sti pushl or int xor inc add xor lret fidivr add xor rorl xor hlt xor insb push mov out mov xor fsubl add stc cld or xor loope sub (bad) xor inc mov or cli aaa int add dec lea fs mov inc sbb add outsb adc xor clc outsl xor loope dec arpl mov loop push ja mov int3 mov add push and xor mov repz xor add ret inc add inc xor mov adc je cmpb sbb push sub pop dec cmp mov test sti in pop and cld pop icebp sbb and movd sbb and jae (bad) fisub jl mov push add call pop and and outsb fs cmp les fstpl inc mov bound cltd cmp outsb adc and jecxz fcmovnb add mov loop adc jge dec test stos out les push jae cmpl mov inc and mov mov jbe je dec (bad) mull inc xor adc fucomp push (bad) add insb call (bad) repz rorl call (bad) loopne movd pop add inc (bad) aas addl adc sub xor mov xor xor inc xor scas fdivs outsb adc mov inc xor xor in (bad) jne scas inc pop fcoml jge inc xor repz enter dec aad xor xor mov cmp jae xor cld in mov mov adc outsl or jp jg xor inc xor pop inc rclb sbb sti sub inc movaps shll add and adc mov mov sbb pop cmp and ljmp enter das data16 inc add cmp add inc sub mov or add icebp inc pop movups movups xchg mov adc adc ret dec add cmp ffree dec mov in mov or inc repz dec jne add in (bad) pushl sbb rolb shr and mov dec cmp jo lar add std xchg xchg dec lea out or add fwait mov dec add addl inc xor aaa adc dec add call jne stos clc out fild in jne daa and pop push fstl sub outsb dec ret mov (bad) repz decl (bad) jne jmp dec aad out pop dec mov dec arpl cmpsb dec lea cmp jb aad mov inc mov dec lea dec and dec mov dec mov dec mov std call clc dec sub inc add dec sub and das stos add add scas dec inc lea inc mov sarb mov inc shr sahf inc cmp dec mov jae lahf inc test je mov add je add cmp cld mov push je dec mov dec mov inc mov decl jmp add dec mov dec mov inc mov push (bad) xchg ljmp dec mov inc mov or insl inc mov push dec ja test mov dec mov pop cmp add jmp pop dec mov inc mov sbb repnz mov jae sti jg lea inc lea dec cmp push sbb jb mov sub inc lea inc lea jae lahf inc lea into in fidivr inc lea ret cmpl std mov insl dec mov arpl aas sub data16 lea dec arpl dec arpl dec mov in decb call add sbb out xchg std icebp ret sbb dec add sbb int mov daa jge mov sub imul (bad) aas or jne test je movzbl test icebp stos clc incl adc inc lea mov cmpsl cli (bad) call inc mov inc mov inc mov inc mov jmp inc jecxz fwait test mov das (bad) inc mov jmp nop ljmp jecxz sub incl xchg popa sbb cmp or adc (bad) out add test add inc mov lahf sar inc mov inc mov add jg roll fldl rorb xchg ret (bad) (bad) (bad) frstor and cmp mov sbb shr inc mov inc mov mov mov adc subb jecxz adc jmp jmp mov inc mov mov and and lds xor popf test sub xor adc mov mov incl dec arpl call push jg or mov call push xor ljmp inc dec push sub inc mov mov call shr inc mov inc mov outsl cmp inc mov mov mov mov mov inc pop inc mov pop cld incl movzwl mov mov mov push add mov (bad) mov or or pop or or or (bad) (bad) mov mov js push push mov mov mov push fwait cmpsl jns or movlps adc mov jmp data16 adc mov pop mov movzwl mov mov scas sti inc adc pushw iret adc pop sbb jg (bad) out sbb sbb inc sbb mov pop mov (bad) (bad) fisttpll mov mov mov mov mov mov or ds sarl iret movl add mov les jge (bad) data16 xor mov inc sub xor in idiv adc imul push loopne addb rcrl dec xchg adc call in pusha and add call jmp inc inc sbb dec sub aas inc mov inc xor inc and and daa aam clc jae jo xor clc jecxz incl shr jl int sbb inc jg shr addl mov sub jne jbe pushl jle add add add test je out ret js jp rorl add std lret (bad) je xor arpl call fistl add in push and js inc add inc sar add into inc mov cmp les dec add inc cmp jbe and loop dec mov test pop movsb push sub rorl mov dec cs ret dec lods clc cs jmp clc dec mov dec mov dec mov cmpsl add dec sub ss mov jp xor fildl jl lcall or shr in inc cmp pusha inc out dec fimull jae test (bad) cltd leave mov je add je or je add mov (bad) adc std add add inc and inc add (bad) cs push add add fmull dec mov fcom mov mov sysexit sub testl jae dec cmp arpl inc lea dec mov pop in jge lea imul mov pop sub adc xor ret ret pop jnp sub nop jmp inc daa sbb jl test aas jbe jae jne leave je push aad dec nop add roll mov jne cmpsb mov mov shr inc mov inc mov scas fidivrl pop cmp jle pop pop add mov push inc mov mov mov inc inc xlat push push out insb arpl fnstsw dec mov inc mov jno rsqrtps fs inc or pushw mov pop pop pop xchg cld int pop imul dec adc in cmp pop dec adc arpl inc mov mov mov mov mov imul inc sbb sbb outsb sbb cmp jb cmp mov imul pop push aad adc out aam cmp sahf into dec cld (bad) call lret mov sbbb jno inc or sbb mov pop sub cld or in dec lea jae inc clc jo mov test fs cli inc shl shlb dec mov dec arpl (bad) dec sub jo mov sub jmp xor mov movsb xchg mov cmp es inc xor test sub loope lea jecxz test dec mov or fsubs add lods push subb jbe test leave pop dec dec mov inc rcll ljmp out js jne std inc cmp jae mov inc cmp je add je add xor sub jle adc ret or aas jnp incl enter dec mov or cwtl sub (bad) dec mov sbb or fldcw daa xor sbb aaa jae cmp inc adc in mov adc lea insl xorb sub add add popa inc gs outsl lcall push push les je ja inc mov inc movzwl inc mov jmp sbb mov mov jg cmovb cld inc mov jmp jmp mov sahf mov inc xchg pop dec or (bad) mov inc movzwl insb paddd add mov dec add sbb pop cld out sbbl addb mov push add cmpsl lret inc (bad) addb hlt add pusha je loopne (bad) std in out jo cmpl sbb or (bad) adc push push daa ja mov popl mov push lock cmp adc clc add lahf movl cld adc jmp push pop adc adc pop dec add ret lds or scas loop rclb sarb jbe xchg xor mov sbb sub (bad) (bad) mov dec shl dec lea dec lea dec shr subl pop je loope rorb cmp pusha dec jne sbbl inc and add push ficompl or je test out into adc add inc push dec add dec xor leave fs testb fisttpll sbb adc xor (bad) (bad) mov fmull dec cmp dec mov je call and xor call lea sub call lea pusha sbb pop mov add xor xor (bad) test sbb jb inc imul pop and xchg mov add and (bad) pop cmc mov pusha mov xor push sbb (bad) (bad) aas and roll inc mov mov mov mov mov inc adc push add jmp sub sar inc and dec mov insb and aam and mov je cli mov jmp cs stos sub xor or inc sub mov pop xor pop test popf sub call inc sub mov sub inc sbb adc mov decl mov mov mov int3 xor ja out adc mov mov mov inc mov push cmp sar pushl call mov inc mov inc mov es shr mov mov sbb mov mov sub imul dec adc (bad) fisttpll mov inc mov inc mov les add inc mov pop mov inc mov inc shll sbb add pop dec (bad) (bad) (bad) incl or or pop mov inc mov inc mov inc mov inc mov scas imul sbb mov inc cmpsb sti jnp mov inc mov mov push dec sbb mov call fstl sahf fisubl or call nopl lea cmc add sbb dec mov jae or add test mov arpl sub and jne sarb cli mov das and (bad) mov inc movups adcb adc mov outsl f2xm1 cli add pop loope rcr lahf in (bad) call sbb leave subl call sbb adc rcrb mov inc (bad) call xor pop decl sub dec add inc and inc cmp add xorl fisttpl test cmp pop popf inc cmp sti sti add outsl out out adc xor add or fild dec mov rorb mov dec mov (bad) out sbb or dec mov mov or mov dec into mov in mov sbb sbb decl sub dec mov inc sbb (bad) dec mov jae lea jl mov pop adc inc dec pop sti mov push je inc lea dec mov mov push inc lea cmp add pop (bad) fistpll sub movsl xor popf xchg dec lea dec xchg or lea jmp add (bad) fist pop add xor test push loopne xchg push sbb mov add add loopne adc inc add add rolb rcrl incl inc sbb das cmpsl ljmp je push and add lahf nop pop dec or in mov out invd add sub and test (bad) enter dec xadd mov xchg addr16 stos and and mov dec mov aad pop fcoms adc sbb dec bound nop sbb insb jb cmovge setl and sub (bad) je loop and sti fistpll adc es (bad) and adc push mov add adc adc nop push adc (bad) jbe pcmpgtb inc cmpsb js prefetcht0 add (bad) push add js and je cmp iret dec pop loop mov ret ja xor in in or test clc sbbl dec mov fcmovnb inc lock sub test inc jne xor inc jge mov bound movups movups adc out mov push jle je decl sti push fldl decl xchg pop add movdqu (bad) shr jne rcr push and dec cmp xchg inc je or imull adc pop and xchg je adc add and movaps loop fwait xor movaps mov out add xchg dec rorl test dec lea mov push inc xor dec cmp jbe mov inc movzbl inc xor dec cmp jbe push andl ja add dec loop rorl xchg sti cmp outsb pop push add adc ja cmpl add popf sbbl push sbb push add xor pop pop push lea or pop push pop pop in out popa ja pop or insb push or jo xchg push inc es push or fldl mov jbe push or out popa ja pop push or xor or mov and adc dec stos fdiv pop aaa push push push inc xor add iret flds push in mov mov (bad) mov icebp push mov xchg xchg lahf add xchg or or mov or sbb push movups enter pop test insl jl pusha jl pop jl push rclb push push cmp pop xchg hlt push jl sbb dec mov dec shr je jl repz or jle pop inc mov std arpl add push adc out cmp add andl aam sub inc dec pushl rorb xor dec cmp pavgw ds lea push add inc and out addb ds dec lea jo mov jl pop mov imul jmp xchg xlat (bad) inc push add sub sahf in sbb push rcrb push add mov pop push and pop xor pop push push pop mov jmp arpl push push or int3 maskmovq divl push push jl push jbe mull jo push pop push push jmp xor xor dec or lock jbe or xor cmpsb cmp dec ss sbb lds mov (bad) dec lock xor xchg jae jecxz dec fstl (bad) (bad) jo test (bad) jne lret jge xchg jae loope and inc add lret add inc testb jbe pushf cmp add mov jo mov iret addr16 dec lea shr inc and je cld dec int3 movb lret ljmp je dec adc push push or or data16 add data16 popa out add dec sbb lret jmp push xor imul inc cwtl sbb dec pop dec lea repnz add sbb mov scas testl call aam sbb mov xor je inc cld leave cmc dec lea dec push frstor and dec test pop lahf push in dec test push cmpb test push dec lea call (bad) das loope cmc cmp xor xorl and mov hlt mov pop mov (bad) (bad) jmp push dec dec mov dec lea loop mov add cli (bad) aas les cmp test jne and jne mov sar mov shr xor jns adc bswap jmp push jmp fild lock and jmp inc mov mov jmp nop inc mov inc xor add add dec mov inc lea shr dec mov and xchg mov cs (bad) (bad) incl cmp je cmp je cmp je cmp je cmp je das xor (bad) aas push orb mov dec mov inc incl popa pop inc stc dec mov dec out rorl sbb sbb adc push rcr (bad) adc inc cmp inc jae dec inc lea lea fnsave jo stos push es lea pop and fisttp and lea inc lea bound lea fnsave pusha xchg lcall mov lahf stos and add fs mov pop aas sub inc pop cmpsl or ucomiss pop jne scas mov fisttpll and xor or dec outsb inc and or pop sbb mov outsl fs push popf sbb sbb adc (bad) rep insb outsl add adc cmp stc inc inc add and into xor add inc inc push adc cmp rorb and add jo,pt push xchg outsl jl outsl or pop and push outsl jbe je stc sbb push pop ja xor add data16 or dec push cmpb call dec add scas stos mov mov inc fmull or push mov push rcll nop xchg shr aas add or add push lret loop inc gs and sbb adc cmp adc or dec and es cmpsb mov mov outsb sbb xchg xor sarb fcomps fiadd add dec cwtl sbb sbb xchg sbb ja gs mov pop push xchg sbb test push gs sub xor pop and pop popa sbb rorb in outsb mov mov adc xchg pop test pop and sbb adc push loope and jg cmpb mov jg adc sub in jge add sub mov or or sbb xchg mov pop xor xor adc dec nop (bad) cmp adc push jmp jo sahf (bad) popf or ret out es mov inc mov inc sub adcl inc push jae jne mov cwtl out mov add (bad) mov mov mov mov mov mov mov sar mov mov inc in adc roll je mov mov pop mov inc mov sub push loopne fidivr mov sbb pop aam pop (bad) daa inc inc mov inc out jl decl and fdivs inc mov inc mov mov inc mov mov mov push jmp in push jo adc incb stos adcl inc jmp mov inc dec lea out push or dec dec lea mov adc and roll outsl jne inc jno inc mov dec mov dec inc mov inc cmp sar cmpsl out mov shrb dec dec pop dec je push cmp fwait inc sub dec cwtl inc cmp clc xchg and add jbe jecxz inc mov std dec mov inc lea sbb idivl inc mov jae add test adc adc mov add or jne add mov mov out mov and lea (bad) incl call inc movzbl inc add inc mov inc mov out ljmp sbb or ljmp popa xor testl out mov pop or test jne movl pop fwait or push mov pop lock sub faddl (bad) push ret and sti dec mov call mov or inc inc adc rcll clc dec jno pop movzbl movzwl sub outsb add iret jo outsb add add mov jne aaa add adcl dec fwait inc and sub mov inc mov push fucomp int mov xchg pop push jl icebp inc mov mov ret data16 inc inc std fdivs jle movzwl cwtl inc mov mov mov or pushf or ljmp xor ret mov inc mov jmp adc scas enter lret mov subl mov xchg add sub stos sub and insl cmp inc add mov push into adc mov pop (bad) out sbb xor sbb xchg test popa add std mov sbb insb and mov (bad) decl (bad) (bad) std (bad) decl pop add dec mov sbb jmp dec mov ret (bad) decl cmp aam lea dec sub inc mov inc and add cli lahf jo pop push and decl pop or fist dec add loop dec mov (bad) ja faddl inc sahf daa lret jge stc cli cli mov (bad) jns cli push je dec mov dec mov out (bad) pop movsb adc or push and lahf jge mov outsl popa inc cmovg mov inc push pop dec lret mov pop out fs lahf dec xchg dec inc xchg (bad) cmp dec mov jae pop inc lea inc lea pop and add or pop and sbb and fistpll inc lea dec mov adc add cmp and inc add nop sti shrl nop jmp cmp or inc add ficom lret das int lcall rcrb insl and xchg fucomp mov dec cli scas (bad) push inc mov out jmp pop test jae (bad) mov jne stos mov inc test jne sarl js pop addl add (bad) mov fdivr call fiadd sub jne popf xor (bad) mov ja sub scas insl add fild int sti negl add lea std dec push loop push xorl clc pop xchg jnp fyl2xp1 call xchg push add pop call out inc mov iret mov clc (bad) incl in adc test mov mov bound call dec xchg outsl mov imul mov dec pushl std (bad) dec mov psubb push or dec sub dec sub inc add and loope cmp jb mov inc call adc push dec mov cmpsl nop test rclb inc inc and lds cmp mov add or fcmovb rorl jg jmp dec push mov or mov dec mov xor mull adc inc mov dec cmp mov inc cmp cmp and mov inc lea aas mov aaa sub adc cmc jo xlat jge imul sub xor movsb sub std mov jb jmp (bad) inc ret add adc test decl inc pop (bad) inc insl (bad) out mov jne xor inc mov inc mov sbb mov movb cltd inc mov inc hlt call inc mov inc mov jmp mov (bad) jmp sbb dec mov dec add loope shr roll imull adc and add mov mov (bad) jae xor dec jmp out push xor (bad) and pop inc cmpsl sahf and daa out ret hlt jo loop (bad) jb or pushf and sub add jbe add daa dec out jns or jns add push test or jae add in ds pop sub adc out cmp mov addl (bad) (bad) push in shr fnsave hlt push adc out cmp cmpsb cmp out scas out mov push cwtl cmp in out (bad) mov fnstcw call out mov sbb test mov dec push and rclb mov add gs mov (bad) pushl mov movdqa dec mov dec out xchg test test in negw or cmp jo lock shl xor pop add pop push je incl inc dec mov in (bad) dec test loopne icebp cmpsb add lea test pop popf adc adc or scas add add test je loop add mov decl decl jbe cld cvtpi2ps dec mov dec shr push and dec xorl push push clc ljmp movaps push loopne test pop andl sub mov movq pop push iret adc outsb jle inc faddl int3 and pop stos mov lea mov push inc xor dec cmp jae dec lea fildl aad push adc test mov push add dec push clc jae and test decb inc xor xchg inc pop fdivr pop testb xor xchg dec (bad) leave outsb and add adc inc pop inc movzbl clc inc add lea sub mov inc pusha ja into cmp or ja out jae inc popf dec push or mov out jae test push inc push or jae cmp inc push cmp sub fs dec push or pop rcr cwtl stc pushf push (bad) jae pop push push mov sbb jmp jg mov call xchg ret jbe or jae ret shll lahf adc add rcrl scas mov xchg dec test jp mov inc and mov inc or cmp xchg and or push inc jo adc and xchg push push mov aam and loope mov push or sbb aam (bad) dec shr push je jle orl mov arpl push jecxz mov je push cmp sbb adc inc xor and cmp (bad) outsl sub add push and jae inc push add enter dec cmp add dec lea ds or aas dec lea or nop ds xor pop test lcall dec lea dec ds out ljmp movsl adc push ds or jnp pop into andl jae inc fmull mov or inc and mul out sub aas cli jae lcall or xchg cld (bad) out push pop ds inc clc jae dec lea std sbb dec ds jae pop je push inc xor sbb loop or decl dec pop inc xor call (bad) lahf mov dec rcll call aas mov hlt mov and stos cli fild das add add inc setb sub and mov sbb inc roll jmp fucomp adc rolb rorb shll sub test jle push and jecxz xorl test or imul add mov test add mov xchg movsb dec arpl call push and ret fsubrl inc jmp call push into add add dec mov out out jb lock sub imul rclb sbb push aaa nop mov mov fistl jo aad shr and rolb das pop pop std out and fdiv movsb push inc mov mov mov cs (bad) aaa pop pop adc sub inc mov mov xor shr call ret push hlt es inc adc push mov add ja rcrl shr inc mov inc scas mov sbb out adc ljmp sahf xchg dec pop pop adc idivl fwait addr16 test popa pop fs ja jl gs cltd (bad) jne or push mov shl mov sub shrb insl pop sbb lock outsb outsl je decl jg sub mov add add inc and mov mov mov inc inc std mov mov jae add test std mov decl divb movzbl sub jne ret lret lahf cmc jmp mov lods lea or cmp inc add (bad) subl pop sbb jl ss cmp outsb jbe out xor xor xor and test mov jno sti iret pop mov jne jae aam sub sub jo dec pop mov inc (bad) cs sub dec lea fcoms xchg iret push xor (bad) cmp int sub sub xchg cmp mov push call push std scas enter arpl mov jne clc pop inc lds mov pop and lret and push in adc loopne cld mov mov imul and jo mov mov int3 cltd outsb (bad) decl add adc mov sub add sub xor xchg lock inc jo (bad) cmp jnp rcr jp sarl call jnp inc mov sbb imul dec pop inc mov inc mov inc mov decl mov inc mov imul sbb xlat jl xchg mov movaps mov rorl icebp out add bound dec pop add push daa shrb inc cs in mov lea add cmc mov jle (bad) cld jg jo pop dec mov inc mov dec lea dec pop adc ja dec mov dec mov dec mov roll incl decl cld inc mov sti imul push inc lea dec mov mov shr int inc cmp dec mov jae jo inc test stos incl jg out je inc cmp (bad) (bad) incl je adc and dec mov dec mov outsl bound decl or dec mov lds add dec mov inc mov fist decl sbb dec mov sub cmp das movq mov (bad) pushl inc lea dec mov inc jnp jnp lea arpl xor daa bswap pusha scas sub sub or mov sub cmp and jmp and jo aam jmp dec shl sub rolb btsl mov bound xor xor adc sub loope out loopne arpl rolb push dec lea dec lea inc add cmp (bad) jne cwtl (bad) incl pop jne movl adc (bad) cld add adc js mov mov push je dec xor rolb xchg and addr16 jbe add sti xchg mov adc adc in js call std dec arpl aaa xor jae sub roll and jb and mov mov and imul cli xchg add xchg xor push in and cmpb andl pop (bad) adc and test lock mov test and cli in xor clc (bad) out leave push leave mov mov add mov insl or pusha bsr add pushf inc call jl cmp sbb js aam jmp mov mov sub testl adc pop add mov subl pop mov insl mulb cmp dec arpl jae cli stos inc mov mov loope and mov jne in lcall and mov dec mov call dec push out pop arpl rorb jne out test jge out xor lock pop lret push pop push inc mov jmp push add fs cli sub dec lea cmpsl dec arpl push pop jp icebp call push lahf cmc dec push cmc icebp push jo in scas cmc xor ja add out pop int3 psubb adc scas outsl lea sub dec cmp scas xor sahf (bad) lcall adc (bad) xchg nop and mov data16 shrl out test aaa cmc pop inc add push in dec push lret call sbb dec xor (bad) sbb push out mov ja add fiaddl add or mov and sub or je inc insl clc mov xor stc xor adc cwtl or incl (bad) divb push divb aad adc jmp mov outsl scas jmp sbb lahf inc xor jmp test lcall dec lea dec mov dec cmp lcall pop dec mov dec mov dec sub dec sub add and rclb jb push mov sti add test pop cmp dec mov jae les lret inc lea and outsb xor add cmp lds cld dec mov mov add pop adc adc pop inc mov or xchg call dec mov inc mov add sbb das pop rol push cmp inc xchg out insl clc sbb jae in lea outsb dec data16 rclb lea pop adc das pop and lea adc push in jg negl lea push sbb cmp fucomp faddl or jb jmp mov and inc inc fildll test mov inc pavgb sbb dec pop (bad) jmp sbb pop inc mov jmp sti ljmp inc mov dec add jmp aaa inc lock or add mov xor inc xchg dec mov adc jne jecxz inc cmp jae and inc enter sti sti or sti dec mov pop cmp aaa jl inc xchg cld inc pusha dec mov dec mov inc mov out mov mov cltd sbb push jl pusha pop add adc jg out movsb adc xor pop or push adc faddp fistp lea sbb and fsubr ficomp daa sub jbe and inc push (bad) mov cwtl dec lea (bad) pushl (bad) ds mov inc mov inc mov inc mov jmp xlat repnz ljmp mov mov inc pusha mov mov jmp adc (bad) inc mov jmp jge dec add mov dec mov in hlt cmp push inc add das and adc aam mov daa call cltd xchg adc dec movsl jbe cmp xor and inc pop (bad) ficompl jl adc pop sbb push mov movsl aad and jecxz leave push mov xor test or fist xor jge dec jbe inc faddl outsl hlt call xor sbb clc fisttpll je dec cmp arpl mov sbb xor add ja add inc movq out jne loopne cmp inc aas js imul or dec mov push aam jmp and dec cmp je add incl inc sbb dec cmp jae fidivrl push inc sbb dec pop fiadd pop dec lea jno sbb inc cmc inc cmp fcomps cs sbb jne sbbb inc add pop inc sbb inc pop mov inc push cmp or add pop cs mov sbb inc in mov fdivl or inc sbb xchg inc add add or add jne inc jae inc or dec sbb add mov or inc sbb andl dec cmp inc fdivl es sbb iret or adc bound mov cmp pop dec mov and mov pop lds mov dec inc or add xlat stos mov pop enter or inc sbb mov call or cmova mov lds mov je (bad) ja or cmp dec jo push cs lret xor mov push pop pxor or inc add pop popa sub (bad) fwait lahf pop out dec and je inc push add cli pop adc inc xorl cs pop add cmp or sbbl inc pop cmp inc inc xchg enter jae pop cmp sbb or xor push pop cmp scas add pop inc push aaa push xorl inc mov icebp lfs lea ja cmp dec cmp jae loop pop push cmp or sbb push les add cs cmp cmpsb jae inc or cs adc inc jae sahf or adc inc ss lcall inc cmp ss push pop pop cmp adc xchg jae jle ficompl inc daa dec cmp dec cmp jae and jne pcmpgtb fs outsl sbb add add call call add inc dec dec inc inc enter mov or mov mov add mov push rorl push je mov and cld mov dec add cmp call mov ret ret leave add mov popf adc dec mov fcom or inc sub (bad) pop outsl jp ljmp fwait sbb ds icebp call es xor outsb xor icebp mov sub mov or hlt adcb or xchg lret and add in mov shr and in xchg repnz dec mov mov add fsubrl pop mov cmp push and add hlt push mov lret test pop cmp mov scas mov adc sarb add and inc mov sbbl pop dec lea mov popa inc xor push enter fiaddl into push sbb mov je inc mov sti sbb (bad) js pop mov test and lret xchg (bad) pushl sbb mov cwtl inc sub xchg enter lds sarb push push sbb xchg call cmpsb mov xlat inc mov mov (bad) xchg push and and out jmp xor test add jmp call add mov lea inc sub jg stc popf dec arpl mov in xchg call dec sub test lahf fucomip cld xchg into pusha in push testb or mov or sbb call aas nop inc das addl and into mov and out cmp add out add sti and paddsb xor iret inc mov sub add enter sub add mov in sbb push mov inc jmp mov enter adc je mov inc mov decl addl or or mov inc mov inc or (bad) decl dec adc mov inc mov jge sbb in rolb pusha faddl scas out aas jae insb and add pop scas xchg loop add inc add addr16 test (bad) call pxor dec shl test inc std add dec pop insl jp ss or xchg inc imul xchg jbe jg lea movsb js lahf dec lea inc mov dec shr and je les fs or inc xchg or inc add test or je in es or out mov je or je dec stos pop insb test nop add popa ja enter add pop dec lea xchg call aaa and cmp dec mov je add pop push or pop dec lahf icebp dec adc loope ljmp and icebp call test xor mov movsb dec lahf icebp call in xchg out pop and ds lahf icebp dec lea sub adc test rorl in jne adc in aad daa movsb cwtl in xchg icebp dec mov dec fs fcoml xchg std cmp rclb push insb and adc in les push inc mov jae pop jae jle (bad) (bad) fisub fcoms inc scas dec dec mov jmp dec icebp and cmpsl dec repz add inc mov add jl scas inc sub xor dec negl dec arpl call and pop push mov leave jb push push xchg sbbl push pop inc sub dec inc dec arpl xor mov aas adc pop fmull sahf jae pop fistpl call jmp pop or mov mov xor and nop inc icebp loop adc or cld add jmp std sarb and sub das sti adc mov mov jmp pop orl dec mov adc mov sbb jnp insb xlat add mov js es adc or xor jo push jl mov inc and sub jne jmp dec mov dec mov dec lea dec mov dec jg pop sub pop or test jne and jne aam adc test jmp ja xor jmp out icebp and jp icebp (bad) jmp or jmp and dec or rolb pop inc lds test mov jmp inc pop dec mov or add mov stc inc dec mov inc mov clc or outsl ds mov dec mov pop dec mov scas fwait adc mov jl je adc mov sub jae outsl fadds pop adc sbb pop pop pop pusha iret adc pop pop pop xchg test jbe pop and in add xor lea jmp jge enter dec mov dec inc std sbb dec mov dec mov dec mov inc xor jo outsb and dec mov dec mov mov dec mov dec and pop cmp push dec mov dec mov dec mov ds ljmp test jl cmp cmp dec mov xchg mov fimull xor push xor in push je jl adc pop inc mov dec mov dec mov dec not stos mov and add push not dec not dec mov push cld jmp dec mov dec and dec not dec and incl (bad) sbb cltd dec xor dec mov dec add (bad) decl decl clc dec mov dec and dec xor dec mov dec and dec mov dec xor dec and dec (bad) fild cli dec mov dec and dec and dec and mov xor dec xor dec xor jnp leave dec andl mov je (bad) ljmp and dec xor dec xor dec mov dec or dec and adc out (bad) mov icebp dec xor aad mov loopne std decl pop rorl aad xor dec xor dec xor dec xor icebp dec lea std loope add mov jmp pushl (bad) repnz mov dec mov dec lea dec xor dec xor out (bad) dec dec xor dec and dec shr dec xor dec or dec and cs mov dec lea dec ret add fisttpll or and jg adc ljmp and dec inc icebp xchg and dec mov dec and xorb jmp inc or aam push cld outsl clc mov lret not dec mov dec mov push jo (bad) testl mov popa cmp inc ret xchg inc and dec mov mov fs hlt ja push and dec and dec mov andl add clc std popf loope adc cmc dec not dec mov jno int out (bad) jg xor dec xor dec mov dec sbb fmuls in dec xor dec mov dec incl pushl int3 dec mov dec and or dec mov dec lock (bad) jmp in dec and dec xor dec xor dec not dec and dec mov dec and dec xor or mov clc dec xor dec xor jb std dec cld pop ret sti mov dec or cmp sbb mov dec or dec add mov rorb in cmpsb sub in dec and dec xor dec movq xor dec mov les mov push imul dec xor test dec lea std dec dec push adc fstl std dec xor dec xor xchg add dec mov (bad) ds rorb iret (bad) sbb jmp mov in dec and lock into std dec and dec or repnz and shr dec or xor aam dec pop dec or dec lea fs inc or and mov dec shr jo dec and dec mov loope cli test fcompl into roll mov jno popa ret rol inc (bad) dec mov mov mov adc aam out cli mov gs mov mov pop and dec je add dec mov push dec inc loope lahf push cmp and mov sbb dec xor dec mov dec leave xor dec xor and push pop or xor jmp fisttpl fisttp pop and push dec jge sbb fisubrl dec loop icebp aas fxch dec and dec xor in dec or dec xor dec or inc addr16 fstpt xor dec or and stos sub stc dec xor dec mov fisttpll rorl dec xor dec xor dec xor dec or sbb lea cmpl mov sbb add mov add mov jmp add push clc mov jecxz dec shr dec mov dec lea (bad) mov and dec or dec shr dec mov dec or aaa clc out mov dec and dec or dec lea dec shr jbe dec and cmc push cmp aas inc dec and xor add adc dec mov aaa cmp mov mov xchg cli not dec mov shrl loope fstl dec mov call jmp mov mov je pusha in mov pop dec mov outsb sub cmp loope std dec mov dec not jno jmp and stos or (bad) dec mov lret xor xor dec and push cli or test dec mov pop divl mov lods (bad) dec mov dec xor and ja fdiv sbb stc or loope dec or nop dec xor mov dec add mov sub enter sub outsl mov dec xor dec mov lret adc dec xor call dec xor pushf dec mov pop add inc pusha dec lea pop (bad) jb loope (bad) sub mov dec ret adc jle into dec mov or rorl dec and dec mov dec shr sti pop cmpsb add dec mov dec or cmp fild sub in and dec lea xor adc dec in or push int3 dec and pop jge fldl ret dec mov jp xlat dec or cmp lods int add dec in adc push mov mov dec or fild rclb dec mov dec mov aas mov dec mov mov insb loop mov (bad) mov loope mov or push decl inc mov cmp (bad) leave pop mov dec cmp movsb add sbb and lock shll lock sbb into loopne and dec cmp lock sub imul mov dec cmp insb mov mov sbb test outsl stc imul out fimull ret scas repz daa dec dec xor xor fcoms add clc dec fwait push lock dec rol rcl add mov insl jb in mov mov addl iret xor dec mov mov add je mov pop mov into aam pop add into dec or cli mov subl lcall xchg fwait cmpsb add or dec shl shrb adc or dec mov dec shr xor cmp cmc dec and mov clc mov jbe dec or out movsl push fwait jae lcall mov jb xchg sahf insb xchg dec push icebp adc dec mov fcomip clc xor iret jge inc (bad) bound mov std outsb sub inc pop pop pusha xchg xchg iret dec mov xchg dec and push pushf cmp inc adc (bad) xor push xchg mov jb sbb dec xor dec and popa ds mov xor sbb fwait clc mov inc inc inc pop mov outsb fisttpl (bad) lds or dec or repnz add mov call (bad) pop aas cltd or lret jmp lock out push inc pop fiadd dec jns ds test xor js ret dec mov sbb jns sbb (bad) lock scas mov dec mov call and push fadds add xchg dec mov adc xor dec clc dec sbb iret fadds cmp cmp inc and dec sarl mov and cmc dec mov fcoms rolb pop sub mov push shr sbb outsb ficompl dec and dec or push cmpsb jle sti js mov push push movsb xchg cmp cltd pushf stos push dec mov jmp push nop xor rolb enter mov pusha ljmp dec daa dec cltd xor call adc fmuls mov lret xor les xor mov pop push mov add mov xor rcll and xchg jmp (bad) (bad) loop mov movsb dec mov ret sbb xor pop int jmp or xchg gs sbb jl jecxz and stos cmp and dec xor cmpsb push mov jecxz xor dec xor mov lahf adc cs dec sbb fsubr dec mov push sti shr dec mov dec inc lahf js mov fmuls loop shl ljmp fldt mov dec shr push and mov addr16 jg cmpsl shr dec and dec mov dec mov mov inc cli push dec mov outsb cmp fimul loop xchg sti cmpsb sub or in xor cmp cli inc dec mov cmpsb inc dec mov push jo push mov add jge loopne test loopne call std and cmpsl mov xchg lds test sbb mov lret mov scas cmp push repnz ret sbb fimull sti iret dec and enter or xchg dec mov mov push hlt dec mov (bad) xor out call (bad) mov dec aas stos cmp dec xor (bad) xor jecxz or or into (bad) frstor push dec mov push es cmp fisub jmp mov dec test fiadd (bad) adc dec xor dec mov fiadd pushl jne and xchg outsb or inc inc fadd std mov jp pop popa dec mov insb (bad) dec or or mov mov in and sbb shrl dec loop pop adc aaa xchg stos out stos sbb js cmpsb dec mov rcr cmp cmp rorl sub mov enter dec and cli cli (bad) cmp dec js mov sahf aam scas dec xchg mov rcrl mov lahf mov adc ficoml lahf cmp loop dec inc pop push (bad) iret rcl push mov scas or inc pop iret add (bad) mov fs jp add cmp and cmp gs mov mov sbb pop (bad) cmpsb pop dec scas (bad) cld mov fwait and mov dec test cmpsb cmp sbb ret fmuls stc test mov test mov cmp lock xor bound jg inc js dec and call fdiv cmpsb mov dec xor mov add shl dec xor fs xor xchg (bad) (bad) cld and add out cs mov in movsl call call hlt pop sbb mov xlat stc dec or dec enter ljmpw (bad) hlt jle dec mov les xlat aas adc gs mov mov dec sarl jmp cmp pop pusha dec or je jbe pop xor movd push push jmp pavgb popa data16 jg pushf add pop or add out sbb pushf xor jmp add or dec and xchg mov sub push pop jmp jecxz mov jp inc dec mov dec and dec and dec and stos jo pop in push jg adc mov mov xor add sbb dec cmp pop lock std xor add and push and dec mov pop xor dec sub rorl scas mov mov ss enter dec xor dec xor test and dec fwait rcr dec xor dec push or mov rcl cmp adc (bad) xchg ret iret dec xor cmp xchg inc push loop es mov dec mov jl dec popf and xchg frstor (bad) repnz mov xchg push jbe dec xor push push add dec cmp hlt ret repnz mov inc and or dec loopne sbb out lahf and in jp xor xorl cwtl jae pop sbb insb mov sti pop rcll xchg orl cmpsl pop add xlat or xchg pop sbb (bad) cmp or push iret dec push inc lahf inc dec cltd dec mov jg not dec mov inc rorl aas and shrl and jge mov in dec and dec dec mov mov jecxz and add mov call aam dec push or xchg hlt dec and dec cltd mov xor dec int xchg sub (bad) jg jg cmc dec xor dec mov aad or dec xor dec mov dec or dec xor pop cmp int3 imul dec mov add std das pop xor ret stc cwtl (bad) cmp mov dec xor shl ss movsl xor xor scas mov add and lds push fs or xchg and addl insb and je dec lock outsb pusha dec idivl or dec and inc xlat push inc dec out pop insb pop (bad) fisttpl jo lds out xchg dec mov test cltd mov mov adc ret sub mov call test pop ret pop ret jo,pn adc sbb xchg mov or (bad) and dec xor rcrb push aaa std test xchg and rorl mov xor cli dec xor xor iret push adc clc cmp clc std adc and dec or dec xor dec popf fnop fnstsw stos dec xor dec dec jg hlt dec mov shrl ret repz inc push push cmp xor cmp lock xor insl dec xor push sub dec xor call dec xor insb push xchg ljmp add dec xor mov popa out movsl dec rcll call fimul rclb decb (bad) outsb or arpl add pop dec pop inc pop js pop jo addr16 fldl or mov mov dec cwtl dec cmp dec mov and ja mov dec and dec mov dec add pop cmpsb inc daa cs loope fcomps jmp dec and dec mov inc cs and pop aas pop not rolb xor lock and aam sub push dec pop sbb sub lock xor mov insb pop ljmp push sarb scas add cli dec xor je adc jo outsl loop mov or movsl xor dec pop ret pusha fcmovb xor je call push outsb fcoml (bad) jmp rolb jmp mov xor jns dec xor dec mov xchg test addr16 jge dec xor or add or sub pop dec xor mov enter out or pop inc pusha dec mov lea dec out sub pop js or mov dec and test roll dec mov decb push ja push dec xor pushf js ja std dec mov dec xor aaa dec (bad) mov dec and dec sub loope inc dec xor xchg test inc hlt outsl js orl lret dec xor dec xor dec xorl and dec xor jo call aam mov inc and pop dec adc jbe xor push insb mov rcl push xchg or add mov mov cmp mov jp lock inc aad ret jae jno mov jo mov insb call insb xor dec push jbe inc cwtl mov (bad) or mov and out push jl jle je decl sbb dec mov dec mov or push dec pusha data16 stos test adcl jne dec cmpl gs and (bad) addb mov xor jg cmp or add ljmp inc lods (bad) fmull jne (bad) jg movl jb or dec mov out xchg je jne jbe mov or dec scas jae shll or pop pop dec mov adc cmp or enter addr16 je and mov adc pop adc add pmuludq (bad) push shrb rolb sarb fiadd push cmpsl cmp inc lea aad or mov dec shl dec lea dec mov dec mov dec add stos adc cmp dec mov dec mov leave xor rcrb jnp scas jle dec mov fnstcw shl mov cmp dec test mov mov (bad) push inc mov test cmp jg or xor dec test xorb xchg jnp pop dec push lock in mov fldl dec xor push and bound incl movdqa or add sbb shufpd push dec adc (bad) jne (bad) mov pxor pushf or cmp or sub out les clc xchg jecxz rclb adc adc mov or xlat scas (bad) pop jecxz dec test je dec add call cmpb add ret jne cmp mov jae inc xor test je mov mov or (bad) decl inc movzwl inc mov dec add test je mov movd inc mov test test mov mov dec push aas testb jne fwait dec mov adc movsb cs add or push test xor or aaa lock jg adc add in dec sub inc add mov and cmpsb mov adc outsb sub inc lea fucom movl add inc (bad) jae lahf inc test je inc cmp je add add je add das add les mov or inc add and rorb imul rclb or pop sbb dec mov (bad) (bad) pop inc cmp ds lea inc mov inc lea adc ja out push lea inc lea or lea inc lea and into jbe cmp inc adc add sbb jae adc add incw vphaddubw loope shl add loopne pushf add test mov dec icebp mov sbb loop and jmp call add in inc dec xor dec xor mov pusha dec push push push sbb loop inc and movsb and push dec jp dec inc test enter inc jp and ret dec xor dec mov int3 rorl adc ljmp inc ljmp sub ljmp mov xor xchg dec popa insl test sahf or add mov int inc mov pop adc out loope call mov dec xor or sub xchg or push adc int3 or and or inc mov and lods and (bad) std andl inc mov sub sub xor mov cmp mov out enter cmpsl imul outsw dec mov movsb mov or xor mov dec sahf push mov call sub out xchg and mov insb dec dec arpl sbb inc inc pop dec xor cmp inc lods dec daa in mov cmp push mov dec and sbb mov addr16 jle and dec xor popl inc cmp add mov scas insl je mov push out jne mov inc or popa mov (bad) xor rcl dec mov dec mov jg jg dec mov dec mov inc adc outsb sbb dec and pop sub jp decb push cmp cmpl inc cmp je mov (bad) mov movsb push fsubrs add movl stos jb imul (bad) xchg and je std inc xor sbb pop sub xchg mov out mov jo pop mov sbb test adc pop fwait loopne dec fisttp arpl mov ljmp iret adc cmp adcl ret aam dec aad mov cmp fsubrs in flds or fcompl and sbb fisttpll push je ljmp xor sub adc pop xchg cmp xor mov mov xor loopne cmp sub xchg imull (bad) std inc add jmp dec mov dec jp inc rorl jmp rol jmp dec mov xchg sti add call loope jnp add loope shr push scas and in fmuls out and cli add in xor jmp mov loope inc (bad) in frstor inc mov or jle dec call insl loop mov and test add jo add lret mov (bad) aas push in mov mov inc mov jmp add or out popf jae dec and call das inc mov je inc (bad) jnp pushl cmp jmp jae xchg arpl ficomp or mov sbb enter xchg cmp cmp pop push and or mov push sbb mov push jle or orl xchg pop inc push add movsb (bad) and mov inc xor adc inc cmp bound pop jmp out sti inc add push and dec pop faddl dec sub dec mov and dec lcall mov dec std es jecxz add and jmp cmp jae ret jns cmp je add fwait fwait dec add je add inc adc clc or sbb dec or hlt adc dec aaa inc mov je pop sbb pop subl ffree or jg stc and inc adc (bad) inc cmp sbb jae or lea inc mov inc lea cmp inc lea cmpsb mov push and add dec sub imul jne ffree inc pop cmp and adc or pop fcomip dec sub jb jmp xor mov mov dec mov lea cmp inc push mov pop cmp jae in test add add je inc cltd fwait dec add aaa or push je dec decl cmp cmp (bad) or fs bound imul and dec cli dec mov inc mov add add jl mov inc sbb xchg dec mov (bad) cmp fisttp imul lds ret jns inc lea inc icebp (bad) das (bad) aaa adc inc lea lea imul cmp aaa mov push lds stos pop cmp push push std out data16 xchg dec lea jno mov push jp mov out mov push cmp xchg inc cmp push out lea adc inc ds xor cmc daa add fdivl aas dec or cld aas pop sbb aas inc mov fmuls dec mov dec mov or sbb push push mov (bad) push and add jg dec mov cmp dec add clc cmp pusha sbb xchg sarl jae inc mov inc sbb sub and adc out out lea insb lea pop and bound push sub cmp mov xor inc pop adc jg cs jp xchg dec lea dec (bad) flds push jno mov sub sbb shrb loop iret lahf mov add lds xor into loop cmp push dec mov (bad) jmp rcrl xor dec mov dec mov push cmc ret dec jbe jmp mov lret xchg mov inc ds mov in xor sbb ljmp fmull pop testb testl adc cli jno xor pop mov mov sti loop mov (bad) dec mov xor out addr16 or jmp dec ljmp into adc arpl js aad scas xlat aam and (bad) dec pushf add iret add fucomip mov jno jno jle (bad) (bad) orl xchg out (bad) incl inc push movl add movsl lahf nop add xor sbb mov add dec inc loop jo xor lods dec mov lahf test mov mov add and dec mov fnop es cmp push dec mov dec mov loope dec mov inc cld out pop bound dec mov dec mov jne inc scas or xor pop dec mov sub packuswb pop shlb or dec xor dec mov ficompl rcrl aas fwait loop jp dec xor test daa jae ja mov dec xor dec xor dec rcrl (bad) mov mov dec add dec xor adc (bad) mov pop mov add icebp sub je jo xor bound shrl lcall mov dec mov dec mov addl lock cmp inc add mov jno inc jg and dec mov ja dec mov add pop and adc into cmp decl dec lea dec lea inc nop xor inc adc mov (bad) jg dec and pop add dec add dec ror dec add dec xor dec add dec add (bad) jg iret dec add dec ror fcmovb rclb ror dec xor dec xor dec xor dec add aad mov sub leave inc dec xor dec add dec add in mov inc test rorb add cmp rcr (bad) fild dec xor dec add dec add dec and rcll ror dec sbb inc aad dec xor (bad) cmovs fbstp (bad) decb ret dec xor inc or lret data16 xor dec jg adc xor dec add fisttpll or iret dec add fild jl push dec add test in out mov dec mov add fimull jl add xlat jne leave dec add dec sbb fst jbe iret fadd sbb iret dec rol dec pushf (bad) xor outsb mov jmp push loopne rol rorl jae daa adc dec rol mov ret mov pop popf mov mov jmp fwait jne push faddp mov div mov dec je dec add rcll add dec add out and dec add lods in sbb sahf in out cwtl xor mov outsb add shrd jo je pop pop stc add mov and clc iret sbb lods jbe inc ja push cmc dec movsl (bad) sbb lret and mov fidivl adc iret fcmove or push (bad) or xor jne in adc int3 jle jg in mov add les dec add out iret in xchg cmp enter out in push push fbld ret xor mov enter (bad) mov pushf jmp hlt cwtl or xor push lods arpl mov and jo xchg add mov pop ret (bad) jnp cmpsl out enter in jbe mov fimull dec loope fadd xlat and dec in dec es fwait mov (bad) lret cmp xorl out mov pushf adc fs mov pop adc sub into mov xlat cmp nop add repz push ror xchg xchg aam dec es xor jb inc fildll inc add or out jecxz or loopne (bad) mov sbb daa or (bad) xor data16 jmp and adc cmp dec add dec cmp xor mov into shlb cs xchg in aaa nop or cmp mov popa rol adc cltd cmp and inc xchg add cmp jae push mov lret xor daa int mov ret rorl shrl stos leave pop and dec add dec scas clc push je jmp aam aam dec add scas mov rcrl iret xor mov sbb arpl pop push iret push push out loopne stos lds in cs flds mov lret (bad) adc out je mov cmp xor xchg je inc mov adc xchg xchg xor je adc test mov in jbe rcrb jg add jnp pop (bad) dec add iret es subb mov into xlat test jae movsb inc int mov aas mull movsb enter xor int ret xor mov sbb push sahf popa movsl clc dec add (bad) push push push mov into rol (bad) jae add popf test dec add imul cmp adc jp pusha push sbb (bad) add xchg addr16 pop dec cmp mov jo or dec loop xchg movl sbb addr16 (bad) jae or mov fs fildl mov add int3 outsb ret inc dec add ss adc dec add mov cmp pcmpgtw jl or sbb ja pop out and cli lahf popa dec ret sbb ret adc (bad) test xchg sbb bound jg popa daa inc mov adc (bad) adc push add or int inc js les cmp jecxz fnstenv cmp or lret dec cs lret in mov adc sub push adc (bad) cmp into cmp pop add (bad) rcrb pop negb push add iret adc and xor pop decl test pop pop xchg out adc jno enter leave lds dec cwtl cwtl dec push dec inc fcmovnb ret jge or dec je lret test enter mov sbb xchg pop jl out mov ror mov sbb mov bound xor sbb or pop dec cmpsl js cmp outsl scas ror loop loopne cmp jbe mov js mov xor out or xchg xor push loop,pn sar add lds mov (bad) cmc add pop shll fwait iret mov scas sbb adc movsb addr16 lds shrl vpshuflw adc test xchg jnp es fcomps sbb cwtl ret fcomps sub daa in inc test push inc loop xor jbe insl or leave or ja xlat push xchg push jmp es jnp rol inc and (bad) or mov enter loopne lret nop add jbe add add push enter sbb js addl mov or faddl mov or in push out cli pop or or add rcrb xor (bad) pop xchg or out mov mov add cwtl dec cwtl jp ret jle xor or and js pushf leave xchg cs aam xor jb les sbb push inc adc lahf enter test and ds in stos jmp rcrl rcrl aam inc mov fistp xor (bad) cld cwtl sub and xchg mov subl add lds xchg xor repz sbb mov repz xchg dec lea mov fwait and cmpsb incb jl pusha clc dec inc ret cmp jne mov in in pusha cmp add imul rol jne in dec push loopne enter js (bad) and adc movl jp push mov ja pushf les jge dec rol dec cmp insb and shrl ret pop cmpsb cs lret cmpsb add std dec jp negl jl adc jns xchg leave pusha xor and lret loope xor inc std mov pop cmc xlat or fs sti mov leave loopne jbe mov ret jb inc enter dec je dec xchg (bad) sub cltd sbb sbb xor mov push cld fmuls mov dec add jo add mov xlat push cmp xor and dec add dec jo inc cld aas xor dec add dec add push pusha pop add push insb xor pop int3 add pop enter sbb jno dec mov aaa inc les dec shrl dec mov dec mov dec (bad) out or mov dec mov xchg adc outsl add push cmp dec lea pop cwtl loopne out js mov mov roll cmp xchg jne and dec imul sub add dec inc mov shr add (bad) or add pop add mov subl mov (bad) or loopne inc pushf fwait cmp test orb mov scas or add add pop cli sar cmpsb add pusha dec lea sbb mov add adc push cmp add sub cmp inc adc mov (bad) dec movl pop scas add push bound loopne (bad) rolb adc and pop cltd mov xor push loopne push push pop add xchg lahf js rcrb out cmp adc out leave dec mov cmp pusha idiv shr inc test clc sub incl stc sub roll incl shl inc mov inc neg inc and inc or dec cmp les ja inc test pop add pusha mov dec inc mov aaa mov ljmp mov add sub or subb push addb or aam orb es sahf xchg xchg jo lea outsl and enter bnd stos ret inc pushf dec mov or stos add sbb inc mov add push fisttp jp pop inc cmp and push push adc aaa adc out add sub add mov add decl je testl and mov add push pushw inc cwtl and sub dec dec mov lods mov test inc icebp ja pxor dec mov dec mov jnp dec mov dec lea inc mov xchg adc dec inc (bad) cmp cmp xor sbb (bad) (bad) stos add and cmc dec cmovbe insl lahf mov ljmp (bad) je ljmp inc mov jne push dec cmpl sbb jmp push fdivrl sub push and or push shrb push scas clc fstpl loope shl push jne adc cmp insl dec cmp and dec adc sbb push sbb shrb add sbb xor into jmp mov cmp lea dec mov xor sbb enter ss and mov sahf or xor dec fwait pushf gs pop rcl lods xor or fwait jmp loope test dec lea dec (bad) out and xchg mov dec shr call dec jno lock rorb test arpl fisttp add sti inc ja push push pusha push jmp jmp (bad) dec mov dec mov inc push add or push or dec and dec sub dec mov inc add dec sub adc (bad) or adc scas sub test aad mov repnz lock cmp jae inc mov or out loopne cwtl fwait mov pop add sqrtps stc xor test loopne unpcklps (bad) in ja adc add or dec mov or adc rcrl movsb cmp aas sbb dec mov inc mov or mov ret or fucomp sub roll pop adc adc fs std fstl adc sbb dec mov enter and sub das xor cmp add sbb popa adc xor lcall xor stos jbe dec lea movq call rorb add call addl divb lea cmp adc sahf add addl pusha fisubr and cmp (bad) jne in dec lea dec sub movsb jae dec push mov jae jae mov sbb test movb je loopne xor inc mov cmp inc jmp dec add roll clc cld pop int3 sub jo cld jmp outsl jo insb ret dec movl inc push cli iret clc decl dec and dec sub add pop jb lea inc mov das mov dec movl pop inc cmp jae incl mov jae incl je inc dec cmp je cmp jg incl sub cmp sub inc mov incl inc add dec mov inc mov or mov mov inc mov dec mov inc sub or mov inc cmp or loop mov inc lea (bad) (bad) decl inc lea inc lea inc lea inc lea inc lea inc lea inc inc lcall add cmp adc loop imul add mov adc data16 inc mov test sbb push pusha clc dec xor call (bad) or xor aas adc stc mov mov rclb push add jmp lock dec add dec lea dec add idivl lret mov or adc arpl push (bad) jno lea fbstp adc lea jge cmp call jae stos inc cmpsb dec mov dec add call std inc lea int3 add jbe dec and inc decl dec and call jne lahf mov sbb jmp shrb movl lcall fs pusha dec rcll push cld add dec lea or lods mov aaa add es mov xchg sti xchg or push orb out mov (bad) xor mov adc ja dec mov addb add int les mov sbb or in inc mov cmp cs mov pushf js push sub xchg xchg dec mov and data16 ja and push in xchg call ljmp cmpsb sub or orb sub je jo or push cld inc es lea dec cmp push dec and jbe jg in inc inc mov jp cmp xchg push rorb mov (bad) pop (bad) data16 lds out lock xchg nop cld cmp or int3 mov movb and loop rcll mov mov pop js pop (bad) into xchg inc and je mov test loopne mov xchg call cmp cmovno mov sub mov xor pop mov xor test and mov cmp dec mov loopne mov (bad) pusha jne jne jecxz mov fstl jno loope cmc ja bound inc ret add jle dec mov mov daa lock dec sub dec mov add dec sub xchg decl fldl push decl xchg shr inc and jno jb cmp dec mov jae and daa sahf cli add cli and and cli sbb adc inc (bad) inc dec dec bound inc nop or dec jae sbb xchg jo dec cmp adc cmpl pop outsb or push xor dec lea add mov adc and dec lea leave dec pop cmp adc or and add in and inc cmp jb iret and repz mov lea dec pop add dec int add add sub lods sahf out sahf jmp cld cld cld cld addr16 and cmp inc jmp nop js loopne cmp (bad) or (bad) xchg js adc mov inc mov (bad) out inc bound sub cmp cmp (bad) outsl loop jae sbb lea inc lea inc lea xor fwait jne sub xor insl std pop (bad) jne sub das sbb and push push loopne sti add pop add sub cmc sbb (bad) loopne jmp incl mov dec jae das pop or sti incl or test jne test je test movb cmp pop mov jne dec mov lods xchg inc mov inc movzwl mov (bad) jmp jb (bad) (bad) lock int xor inc mov (bad) ffreep inc sub mov mov jmp test out dec mov sbbl xchg jmp lahf popf pop pop dec shl jmp es enter mov test inc add call sub dec lea outsl sub outsl add xlat pshufd movd or dec add mov inc movzbl movzbl and mov sbb (bad) sbb shr jle inc xor (bad) out pop inc movd movzbl inc xor jle and negl jle shr sbb pop addr16 rcrb inc mov inc movzbl jnp fisttpl popa pop mov inc into int arpl movd sbb mov outsb add dec inc dec and inc enter sbb adc into mov inc cmc or (bad) leave inc xor movd mov fwait jbe jae sbb jns fs rolb jne xor mov sbb pop insb add insb (bad) int3 push inc push inc repnz ret lock incl sbb add mov mov sti fistpll dec lret movzbl mov mov movzbl shr sbb nop add movzbl inc shl inc or and mov data16 call loopne jo jg mov or das sbb int mov leave sub (bad) (bad) push popf add or and or std and shl inc dec or inc or inc mov rcrl lret and add or iret push test adc and bound or insb (bad) and xlat rcrl jg shll cmp lcall and mov inc movq fdivs dec outsl sbb jo or fistpll loopne jle movaps add vmread sbb les sub add sbb add or roll paddd out mov adc sub int ljmp (bad) and jle dec rcrb (bad) sub cli pop jmp or movzbl or or and andb fidivr push jg inc or inc ror inc xor inc mov decb (bad) movups sub push and xor clc mov and pop sub jl sub jo test pop iret movdqa pop repnz mov data16 (bad) movb call adc add into sub mov loopne jae adc std xchg hlt inc xor leave std (bad) (bad) jge insl fcmovbe outsl sarb stos ss and fimull sub daa or rorl sti ret movsl pusha jbe aam dec ficoml jge fcomp jne out add out test inc pshufw xchg sbb out decl sub inc movd mov or or or ret push sbb fwait mov mov in sbb jg call cmp mov ljmp add enter pop inc push shl shrl (bad) clc xlat pusha mov jg push xchg enter jo sbb jae add inc or scas mov mov loop or iret mov (bad) fwait sub xor mov pop and xchg ret push xchg ret mov jg data16 ja repnz xchg test int3 jno popa and inc mov xchg mov daa jo pop jmp adcl push sub shll pop loopne mov nop loope outsl clc loopne stos xor inc pxor adc inc ret movaps jae or jo dec imul and clc inc popa (bad) loope testl movd push pusha xchg ss out adc sbb cmc ret mov push mov adc jbe or xor inc fcom popf jle jecxz arpl adc lret inc fidiv sbbl inc or mov aaa cmp inc or jmp mov adc pop add jb ret mov shl addr16 xor cli ret std add inc or inc fmull (bad) adc js ja or inc xor mov push and add (bad) pop jne ret icebp mov pusha add sub je mov inc punpckldq (bad) (bad) outsl mov mov jo lcall mov xrstor xor insl inc wbinvd dec add inc fsub sub jo dec mov cmp movq scas loopne imul loopne xchg out mov sub pop insl out iret iret lahf jnp adc fdivrl add or add pusha cmp insl gs ret loope lds mov stos (bad) jno sbb pop adc mov pop loope clc dec cmp loop movd (bad) lret sbb inc mov xchg xchg cmp or call shl outsb cmp xchg sbb sub jecxz clc or xor test shr and cmove outsb dec outsl in jno fdiv (bad) or icebp jecxz adc adc insb (bad) xor mov scas les out aad sahf out (bad) mov pop (bad) jle call loopne cmpsb xor outsl (bad) es clc mov inc clc push pusha (bad) pusha js jg or add push and insl jb dec out (bad) pop xlat movaps pop add sub inc adc inc and dec add sahf push ja add sub mov inc cli enter add and or add fimul inc pop movsb add pop or dec lea shrb and push push xor jnp jge (bad) add rol (bad) xlat cmp push xlat outsl fsubs push and (bad) or lcall inc mov xlat movl adc sub fstpt ds stos adc add jle fsubrl jecxz outsl fldenv push inc movq or add rcr sbb fldl cmc pandn out fiadd fldln2 pxor add loop xor push jae cmp bound iret jo lcall loope pop (bad) jne jne jecxz pop xor out jb out adc xchg in push pop insb call cmp in shr (bad) imul jmp cmp cmc add mov pusha mov sbb xchg push fs pxor jg cmp or scas movq fnstsw pusha xor push sbb aaa push aam add pop cmp fsubp sbb rcr mov test cmp jnp lock outsl lcall lock pminsw outsl mov fisttp cmp inc lds inc pop in fisubr jo jle loop addr16 mov sbb sbb add jmp add mov imul std in out incb dec cmp mov fadd push cmp mov fdiv aas mov repz (bad) cmpsb pop mov or fsubl ja push fdivrl fsub aesenc idivl bound inc nop adc stc cmp add (bad) mov sbb fmul or mov inc cmp pop ljmp pop pop (bad) jle jbe pop push cmp sti and inc aas jle add cmp adc arpl lahf cmp jmp fadd pop (bad) jle std lret cld sub movb add lds (bad) (bad) or add or bound and (bad) lds ss xchg fcoml fdiv pop out add out into (bad) mov fdivl faddl cmp fistpll fdivl notb mov add or sub cmp jl pushf pushf std cli cmp je insb fs sbb jne pushl inc inc movaps movaps movaps mov jecxz sub sub in std sub repnz inc inc movaps sub sub cmp sub sub les ret nop paddd mov mov add inc cs dec decl (bad) lea add incb push call dec and or mov dec lea dec mov mov mov mov cs or dec mov push fdivrl loope add sbbl je dec cmp lock mov call sar mov adc dec lea add stc inc cmpb sti (bad) incl dec sbb dec and cmp dec lea dec cmovne call (bad) stos add pusha call adc add mov rcl test sbb adc pop (bad) cmp stos xor push push pop add add inc leave inc cltd mov jns add enter and sbb lock sub xchg and out cmp dec rcll (bad) rorb pop rorb sub movaps stos mov sti rolb fsubrp add and mov and add aas push mov lock dec mov cmp icebp call aaa adc mov push sbb xor dec mov dec mov dec xor dec xor mov mov mov outsl sub add sar ja or pop add and dec add add lret pop outsl or inc lock sub pop xchg adc inc and sub leave movaps dec mov dec movd dec (bad) (bad) pushl mul dec add dec lea dec mov dec xor dec mov pop dec xor and (bad) lret leave out bound sarb enter add dec mov dec mov dec mul dec mov dec add dec lea dec mov adc mov aaa or stc dec xor cmp inc leave ss push pop in lahf sub mov fidivl das dec mov dec mov dec mul imul cs xor add mov mov dec mov dec xor xor rolb ret addr16 insl add ljmp sub push aam (bad) data16 dec mul push out dec xor imul (bad) jnp sub insl jne dec mov dec lea call mov call movzbl dec mov inc fdivrs dec mov dec mov data16 pop adc push roll sub dec dec cmc xlat dec mov mov sbb lea sti icebp ret out jb or sbb mov mov jg (bad) mov dec mov dec lea call dec clc (bad) decl call inc adc push inc xor push fwait push lea mov lea mov ds popa or test dec mov pop out scas mov push or mov clc ja sbb dec mov dec mov decb and push dec xor dec xor orl or mov push lock dec add fbld stc cmp sub or and dec add mov sub enter je jno gs les icebp pop adc and negl rorb xchg outsl (bad) sub rorb cmp cld inc dec mov out mov leave mov std mov rep dec mov inc or dec xor add jge pop rclb jmp cmp mov mov dec xor adc dec add jp or out jg or test dec mov dec negb clc or xchg lock mov call sahf xor ds loope dec xchg loopne (bad) loope incl push add cld aaa aam push dec cmp adc movzbl mov inc and insl dec mov insb mov pop push inc pop and sub dec jmp lahf fistp adc pusha inc adc mov scas addl add adcb sbb adc lcall inc shr add clc ljmp or str out popa inc mov xor xchg mov sbb cmpsb out outsb or add push out push out cmp mov sub pop (bad) sub adc popf (bad) std enter add test push fstps out adc sbb prefetchnta leave add inc mov out (bad) mov stc verr outsl inc out add inc pusha out lldt incb add jo or call push sbb out push inc and rorb test and in cmp add xor add (bad) nop add pop inc or mov and pushf xchg outsb or loopne fcomi fnstsw and sbb and (bad) mov and dec lea test or or dec lea dec mov dec adc rcrl adc add lea pop or mov add sbb add mov push clc (bad) mov jl (bad) call flds add pusha sub dec lea icebp call push mov outsb inc fstl push dec mov add pop push mov enter adc or inc or outsl aam mov add test movq es mov mov mov lds and lds or inc pop mov inc icebp mov push or cs dec mov dec mov sbb add mov icebp mov sub mov mov and (bad) and je mov cwtl jnp adc lcall mov or lea add adc cwtl mov stos mov inc pop inc loopne cltd (bad) gs and inc daa or pop aaa fcomps xchg inc enter pop inc shlb or ret call or loope mov adc cmp ss pop push and pop mov sub test adc and enter and inc dec and adc and fwait jne adc jbe mov adc ja lock mov inc movd cld jg or movd inc mov mov lret pshufd jo stos movzbl or decl and mov iret stos inc movd add scas jo movd jle roll jle sti decl std inc shr shr inc movzbl data16 out sub mov inc movzbl push icebp iret cmp inc xor addl sbb ret push cmpsb add mov mov xlat movzbl xchg jle int3 lds call push pop lock ss jnp out out cmp push inc pshufw adc lcall in push and inc mov inc xor movzbl or inc mov std lds xor mov inc lock fstpt (bad) (bad) roll movd in dec sub int xchg ja fistpll movl movzbl inc xor shr and shr push (bad) cld sub ljmp rolb mov mov sbb cs cmp lods sbb test xchg int3 jne enter repz loopne (bad) out pop jle andl xchg jo push pop gs mov roll inc xlat inc mov push adc jecxz mov inc push push or add jae cs outsb lahf ficomp sti dec push mov xor xor test pop xor lret jne sbb (bad) mov xchg shrb dec inc inc xor xor xor cld mov inc mov adc mov mov inc (bad) xchg stos or add jecxz scas out hlt insl cli jle popf xor jbe jle sbb mov cwtl into loopne (bad) jne (bad) jno inc mov or and and jmp callw fcoml pop out cwtl mov or sti fwait pop rorl mov loopne mov dec pop sbb jmp sbb je add mov lahf mov add repz mov loope cmpsb rol push or je aad cmp cmp je add lods sub mov sub ret inc xor adc pop add jmp adc inc mov in bound (bad) movzbl (bad) ljmp xorl in scas rorb pop roll loopne jle roll imul push test (bad) call add mov add pusha fsubp mov xchg sbbb xchg xchg out aaa xlat das dec or dec jo lahf mov jl inc cld pop in mov mov adc js rol xor (bad) jno enter stc xor push fistl dec xor jp pop mov or inc test incb roll movsb gs xchg stos movd lds push pop mov xor pop or lods fs push jne (bad) insb xchg adc adc rcrl mov shrl sarb jbe jle dec clc adc sbb or jns mov loopne pop enter adc sbb mov in cmp insb and jo pop shlb and rorb cmp scas aas or sbb sub rol adc xor rcrl (bad) iret xchg jbe lods popf aad and push dec jbe les inc dec and mov fadds stos outsb and movd pop punpckldq xor ret shll lds mov jo (bad) mov les jo dec mov ret mov ficompl js xor insl out mov jle mul adc adc shr cmp fstpl popf mov push sti xchg sbb fwait call rorb jo stos mov cmp xchg jbe fsubl or rcl js fcoms aaa jecxz lds aad in xor fistp bound mov clc insl jne cmpsl xchg adc dec and inc mov dec out jl add and inc mov jle add rcr leave push movsb iret jle aaa repz mov pop add clc (bad) ss mov jno fisttp out roll test jo loop xchg ret sub (bad) aaa int (bad) jo in aam fstl (bad) repnz loopne les repnz xor adc rclb loopne popa pop pop shrl sbb bound push and test scas xchg cli mov cmp fisubl pop add fwait push and add shrl mov or push adc and fild inc mov mov rolb and push call femms xor lds sub mov dec dec lcall not sbb popl inc xor xchg push arpl ljmp shrl fadds push (bad) call inc sbb xchg mov jo mov or ss push out push add cs jle (bad) cli inc mov out sub int mov out sub sbb inc xchg mov (bad) out inc xor adc add pop jge or (bad) aad push pop fnstsw popa xchg mov mov fcomip das jle cmp mov mov sti aas push inc mov inc xor outsb push ja out aam andl sbb mov pusha (bad) fmuls or inc ja lock sbb jo repnz inc inc sbbb inc ja shrb leave ljmp push call add inc jns movsb ss mov inc sbb adc ret inc fnstenv mov jo push inc mov sbb mov shr ja mov test in notl or leave movzbl pop cld stos sbb jle inc mov push push int3 jno std sbb testb mov sti jo movd add inc jo cpuid nop xchg add xchg sub ret in jle lods imul push and inc ljmp pop pop sub adc out xorb dec bound mov mov mov mov aad out fdivs aas lea sbb jle inc pshufw pushf and mov loop ss and push dec cli jle rcr add jae loopne mov cs stos jnp loopne je jo movd pushf andl ret sub push jno (bad) mov jle jne out push pop xor and nop es inc lock xor loopne or cli sub sub es and rcr loope test sbb dec jo cmp repnz xchg ja xor xorl stos xor fwait loop mov push adc mov iret outsl lods aaa inc cmpb stc dec inc mov sub mov arpl mov inc cwtl inc mov sbb and (bad) in ss cltd (bad) sbb (bad) sahf imul ljmp cld les mov das jg ds iret into test inc punpckldq dec shlb movzbl dec scas dec fmul sarl pop adc xlat jne mov int in loope jae sahf sub gs enter cli jl bound and fisubl inc out in jmp pushf jbe push mov orb xor push movsb adc and sub jo in jb dec stos stos dec sbb jns jle xor inc mov cmp sbb ret loopne ss jle xor (bad) or sub add cmp add in pop (bad) aam and ret lds mov push rcrl movzbl jle or movzbl push daa inc orl mov adc jbe xor out dec decb mov lods out lds cmpsb loop mov shr mov test sbb pop xchg push sub out adc lds jo pop xchg mov negl iret jle push fucomp loopne pop gs stos xchg jbe pop aas sub repz xchg orl orl (bad) adc test mov or bound call sbb ret sbb fs adc sti jge fisttpl mov pop xchg test push fwait push out ffree mov dec jo int mov lea jecxz jo imul data16 xchg js jge jecxz mov adc mov mov lods imul ja sbb test push dec and mov ret add dec mov jnp xor mov pushf ret test jo dec mov cmp cmp fcompl sahf in lods test icebp sahf fwait in add test pop or (bad) cmc or jne imul push xchg adc sbb or orb les and or inc out in pusha out or xchg mov addr16 xchg test mov mov mov jns and sahf mov xchg cmp cmp ret int outsb test sarb pusha (bad) loopne push xor inc popa outsl fs pop outsb inc rcr cmpsb pop push sahf (bad) fldlg2 xchg push xor loope cmpsl adc cli pop sub out out sbb popa ret mov out in jb adc loope mov dec test aaa mov mov hlt add mov lds iret xor (bad) in push aam mov mov fnsave xchg xor fdivp dec push scas inc pushf jg pop fcomps pop jecxz inc pop int3 in add inc pop (bad) ret sbb movsb cmp sub inc push hlt sbb fwait fwait mov es lods fwait push insb push ds scas roll jo popf jp lds es idivl xor pop negb loope je or jns data16 cltd popf mov lods hlt inc mov cmpsl jg outsl fs scas dec cmp fsubrs mov mov cmp test ficom data16 cmp faddp fmulp dec cmp bound outsl outsl sbbl aad inc add fbld cld mov inc inc jbe or pandn adc pop (bad) pop rolb fsubrs incb out nop sbb jmp xor mov orl jns ja lds arpl les pushf insl clc outsl mov inc jo adc xor mov out cwtl loope shr cs scas aaa mov mov movsb and mov cmp jp pop xor pop fcomps dec insb fsubrs ss sahf addr16 jns cmp clc adc sti ret lds push stos mov (bad) fistp dec inc fisttp (bad) or testl adc mov cmove cld movsl jne xchg mov hlt add inc mov jo sbb lods pop loopne iret std pushf lret test or xchg outsl jge sbb pop std push pop pop out rorb fcoml (bad) enter dec mov stos shrb pop dec mov imulb in inc repnz sbb inc mov inc pop xor fldcw in mov lret xor sub push cmp repz (bad) fadds inc mov (bad) cltd or fist inc punpckldq mov (bad) jb (bad) fiadd incl cli mov inc mov lock rclb faddl (bad) test inc gs mov inc dec outsl jae fildll jo push movzbl or stos push push xor mov ljmp xchg mov pop ljmp inc shr enter sbb sub push adc adc inc mov xor lock addr16 sub ljmp inc into sbb xor jae hlt push mov adc loope lods mov lahf sti lahf push movzbl inc mov mov (bad) dec or xor pop dec inc jb sub insb or enter std mov inc mov inc inc mov inc movzbl movzbl inc pop jo pop fldl cld inc mov add call sbb icebp adc inc xor inc mov inc or inc xor push mov push insb ret (bad) inc mov xchg add mov push sti mov movzbl scas (bad) adc (bad) out les pushf popa inc shr dec out adc push pop dec inc mov adc stos jo push inc xor iret jo out push es jle adc mov pushf lds mov subb cli stc mov scas stos clc sbb popf jo jg push mov inc mov fiaddl pushf (bad) mov sbb cmp cmp inc mov mov and push in roll mov lods sbb jg inc xor cmpsb pushf jnp or test inc add add sub sbb aaa les mov mov movzbl popa adc mov mov pop (bad) fbstp pop call mov aaa pop hlt jbe pushf sarl fstp loopne in adc inc repz movsb stc inc mov inc mov lds push jo xchg push lock loopne (bad) xor je cmp aas push mov pshufw inc mov into lock inc xor xor ret xor (bad) lock mov es js push xchg xchg cmp dec jb ss movzbl cwtl add movsb out ret mov clc mov icebp jnp,pn sub inc xor push out cltd or xchg or xchg sbb mov mov (bad) jne test mov adc shr aam rol mov pusha cli pop ret mov xchg mov sbb jno add ljmp (bad) dec hlt jle or das (bad) jmp movzbl cmp pop mov in cmp and jecxz or inc xor inc mov inc mov ret pop mov sub out in push inc mov lock loope and xchg bnd stos fcomi out push cld in inc xor (bad) sbb mov sbbb mov std movsl add pop mov xchg or orl sarb jle lods dec xor into stc or xor add xor ja movsl lock xor outsb push cmp mov xor mov cwtl outsl out jae jo adcl aam mov jnp (bad) mov cs enter lock mov jmp shr mov adc bound sbb (bad) pop ret xchg mov cld ja sbb fiadd fs add inc xor push insb (bad) xor movzbl insb decb mov inc xor mov popf aad mov popf imul jl mov xor lds mov and incl inc mov jo incl ret dec es sub and add test outsl mov and mov xor fsubp shlb in inc mov inc inc fsubl ja mov (bad) push xchg (bad) dec (bad) push adc adc out icebp enter mov lds ret jae jle mov sbb (bad) int movsb dec inc xor xor movsb mov adc fisub or pop aaa roll or mov inc mull jo mov rcrb or mov fcomps ja mov adc xchg pop lret (bad) popa incl inc mov add lods mov lods scas or mov and data16 cmp cmpsb xchg faddl cmpsl push out push das in push out mov mov inc mov sub inc punpckldq mov xor mov mov push aas mov mov inc and into loope in push ret and mov xor fisub mov xor adc repnz test out mov mov fsub jmp adc fildl mov popf pop outsb mov out adc inc mov push lcall bound idivl (bad) lret ret adc xor inc or or mov jo push mov inc xchg mov mov or pop jb fisubrl mov inc addr16 out mov cmp stos or and and in movzbl popa sbb lds sbb jge (bad) psubsb jo jle std les mov (bad) jns or or cs cmp mov ja jle shr jo fnop sbb xor imul pop outsl cld jle (bad) add and movd loope out loope push pusha rcrb jle inc mov inc arpl push inc dec pop and inc inc je je mov push iret xor adc mov push cld shrb mov fldl jbe sub adc ret aas mov call or add outsl loopne ret push cmp xchg jecxz mov mov sarl xlat adc inc sbb ljmp lock enter mov adc popa mov dec sbb jo aas pop es cmp lods adc inc mov inc int3 nop shrl adc and push mov mov inc push leave insb xchg lds sbb cltd jle inc mov mov xchg decb inc mov bswap mov inc repz into je mov jne cli jnp rolb es jo jbe mov sub rcr insb (bad) and add cmc jno call loope (bad) ljmp fdivs push mov imul push roll pop pushf ret adc (bad) xor loope or roll sahf pop adc int inc xor jp mov or out inc mov xchg sbb es and scas leave dec jbe push bound inc fdivs xchg lock push shrl add and faddl jae and sbb or ret pusha and and fadds in (bad) adc fucom sbb sbb cmc lods loopne jae sbb adc jne adc aad aaa shll inc or invd outsb inc mov xchg sbb dec (bad) (bad) and inc outsb mov aad mov xchg push fistpll jmp pop jecxz ret xor and shrb xor ret inc (bad) pop in add inc sub outsl pop jb jb rcll (bad) adc pop add stos mov inc loop js loope jnp loop inc or cmp cmpsl fsub jne loope arpl pushf push xchg add xchg cmp mov jecxz sbb pop push out inc dec jo and ja gs fldenv int3 loopne xor xor bound loope inc mov jo dec leave jb lcall outsb pusha das mov es movsb push and push xchg mov mov in (bad) cli inc aas push rol xchg imul push insl int3 inc mov imul pop lds (bad) push push add imul adc punpckldq xchg push sbb clc cmc mov loope fcmovbe loope imul push nop arpl and gs lcall push push and and ret push subl xor and adc mov and push das inc ja pop mov xor push pop adc adc adc mov pop or jno lds inc (bad) lock push rcrb insb (bad) int push mov test xor scas fidivrl mov ss sbb popa pop add ret nop jae push inc push inc ljmp aaa push ljmp aaa cmp jg movzbl and dec in iret pop pop sub xor out sbb (bad) out aaa jne jmp add jb (bad) das mov cmp out mov lock divb cmp cmove push mov inc pop and (bad) mov das punpcklwd ret sarb mov movzbl les ret mov jmp xor jge dec (bad) dec movsl sub in jno ja lret pop pop inc pxor pusha or push call dec cmp mov movsl mov sbb scas sub outsl call (bad) shrb sub or sub push aas mov movzbl inc fistp rclb or mov aas (bad) sti xchg xor shr inc mov popf add movsb pop sarl adc dec mov lea push ja pusha inc mov stos movzbl loope cmp scas rcll shrb rolb xchg stos pop adc mov stos jecxz mov ret push mov or (bad) roll adc lds inc or sbb out cli lcall cmpsb (bad) jo inc xchg mov jle (bad) sbb mov movsb sub addr16 pop call sub ja lcall popf pop (bad) mov xchg add add sbb sub push cmpsw jle xor sti int3 dec xchg insb dec shrb outsl adc jle xlat sbb fiadd call in cs call stos js int sbb inc movq and call adc je jae inc je mov jg or nop (bad) lock xor sub out dec call inc dec outsb js pusha push and sub ja cmp data16 nop jne loop test ja jo push dec jo xlat jle mov inc sbb adc data16 inc inc fstp and in stos xor xor pop jle sbb test mov cmp dec shrb iret inc mov (bad) mov inc inc inc ljmp mov mov les jo incl scas test (bad) xor stos movzbl jo,pn popf push or ret push mov pushf dec aam sbb stos add in lea aad je inc xchg in inc jle in jae push pop push out lock sti and shrl fisttp (bad) call mov (bad) pop jle sub mov mov fsubrs in ffree jnp sbb pop std sbb or jmp pop and lock (bad) lcall mov pop pushf orl push test jl cmpsb pushf pushf fwait pop jnp push adc rsm lcall jmp mov or adc or xor inc dec inc mov jg je ret lret mov shl and jns jecxz jno push lret jmp jo add inc jecxz xlat mov inc mov aam or sarb gs or data16 out dec enter cmp add pop cmp mov sub and and in mov inc call push xor addr16 mov mov call fimul out jo pop outsl je dec js push dec mov xor pop mov mov andb inc cli ljmp mov mov sti (bad) call fdivrl xchg xchg div mov or mov insl cmp mov out xor dec jp cmp inc mov pushf mov dec adc fs sbb (bad) xor in (bad) movzbl adc mov sbb popl sub (bad) out push ffree mov push movsb cmpl (bad) in insb push out ljmp call fsubs sbb inc xchg aam adc pop xchg and fsubp ficom jae insb xor inc mov push negl or or pop popf sbb mov sub or adc push dec sub jae cmp ss inc mov sub adc adc pop cli mov mov shrl push mov lea xchg push dec outsb arpl lret adc movzbl and scas pushf popa adc shll or andl or lods jo push loopne rdpmc jecxz fisttpll and or loopne pop outsb test bound or sub call leave pop mov xorl mov xor xchg (bad) lret (bad) xor sbb xor movzbl or mov or pop mov mov xor xchg lods or js sbb mov inc push or jo lds jno dec inc mov ja sbb xor adc adc sub popa rorb inc (bad) fsubl out inc dec mov cld jb inc cs scas movzbl aas cltd or cmp pop inc push inc enter mov enter sbb test cwtl roll mov xchg cmc push inc cmp loopne jg push (bad) aam insb mov out loop inc xchg loopne mov pop popf xchg ret aad ret add gs mov ret shrl sub jnp jmp inc mov rclb mov mov mov inc mov mov shr divb sub pop inc mov sub shlb rol out inc mov gs adc cmp clc int3 sbb push mov sub sbb jns mov jne dec mov out inc pop lock pushf sbb in fiadd mov dec and inc punpckldq pop pusha jp subl jg out leave xor adc dec push push or fmuls dec pusha (bad) fldenv mov push mov fwait lret loopne xor lcall or test inc mov inc std lret movl jae jo shrl fnstsw ror lds leave shr mov jne rclb inc xor mov adc cmp xchg lret or int3 or lea fdivrs cwtl sarl jb pushf loope jmp sub jbe loope loope jl stc jl xchg lret mov sub xchg mov and bound inc adc std and addr16 mov movzbl out or inc xor cmp adc cmp inc (bad) xchg lcall bound test pop iret imul lret ret adc lods pop xchg cwtl enter adc into movzbl xlat scas mov push mov fmulp (bad) shl (bad) fistpl fisub mov xlat fyl2x push jae out cmp outsb lods or (bad) cmp fsub int in push js adc or mov fadds mov daa or (bad) je sub cli inc cltd mov push mull push clc insl inc int3 lds or inc and push pusha adc clc punpckldq int3 shr shlb pushf lock sub push push add inc xchg mov rolb xchg jmp jo and pop add gs popf xor cmc sarb inc (bad) das mov and mov jmp pop xchg mov jge inc (bad) outsl ja mov aas aas mov addb leave adc or mov bound mov xchg imul jae pop pusha mov inc cmpsb test sti das xlat fs call cwtl mov xor sbb and loope xchg punpckldq pusha lret pxor (bad) xchg fs xchg mov push push ss jg shlb xchg jg dec sub inc movaps inc fwait int (bad) movaps add mov rcrb loopne inc lds inc lock cmp cmpb mov movsb mov push inc int inc lock and sub adc test inc data16 loopne sub pusha bound inc push sub and inc xchg dec add out add sub ret data16 (bad) pop jns addps jbe pushf adc push std test xchg pushf movsb aaa in add inc sahf mov xor add or mov add js popl and js or add cltd lret rclb cmp inc fimul jl shlb or xchg imul dec out xor lds dec xor sub cmp call sub dec sub or xor inc orb sbb pop mov adcb xchg insb xchg subl cmova sub incl mov jl mov cmp sbb out adc aas mov (bad) lock add xor inc scas or inc mov cmp (bad) or push outsl jnp addb movq movq movq (bad) xor daa inc xor clc sbb pop sub rcll ficoml mov popa add test cs js mov xor pop mov roll pop daa adc (bad) add sbb ja idivl movsb xchg mov dec mov adc and push push inc mov and clc sub inc pop and dec push push inc sub sbb pop (bad) or cmpsb fldenv clc iret dec call jne ds dec mov dec out cld or pop cmp sahf test fsubrl add mov out push xlat jo push pop in jle into nop jmp jp push outsb adc pop push push aam lahf jo jle ja mov movsb out xor mov out jle xor add jle adc aad jle cmp cmp aas shll jle fbstp nop xchg jle xchg test das xchg stos push out and adc ret cmc call adc ret mov push outsl inc in call and pop out xchg int inc call call test lret or jl and andb cwtl enter scas mov mov inc xor pop jl xchg (bad) xchg sbb sbb cs test dec pop mov aad mov dec inc xor test fstpl ret inc (bad) push aaa add mov inc mov jp inc shrl shrb jmp or adc iret adc adc call sbb and mov addr16 or sbb mov xor xlat outsb sub mov les mov rcrl inc xlat cmp and cmpsl outsb iret jne bound dec mov xchg push ds or add insb nop inc and add cmc call test add mov int mov fcoms xchg addw jmp sbb js xorb enter scas sbb addr16 sahf aas ret loope addr16 xchg rcll es mov inc and mov cmpb aam inc push (bad) ljmp push call xor aaa mov (bad) insl jo rolb adc fsubrs fcoml in dec test inc daa mov mov ret std lds adc cmp mov inc loope xchg in fildl adc jo punpckldq insb cld sbb cmp call xchg lea mov add cmp sbb mov inc icebp mov sbb loopne (bad) add (bad) outsb add stc sub sbb cmp inc push aam xchg mov mov lods nop in fisub movzbl adc loopne cmp cmp fcomp movzbl das jge mov cmp sbb test or (bad) flds fsubl xchg cmpsl xchg xor hlt aas mov icebp inc mov inc xor sbb xor (bad) push fs insl xorb push out fsubrl test mov or roll pop fistpl adc mov iret jle ret out (bad) mov repnz mov inc xor jg jae dec in repnz mov lea loopne ret jnp xor push (bad) pop (bad) testb sbb mov inc mov mov into pop push adc inc xor arpl loope lods cs xor mov mov rclb rorl cmp mov gs pop mov inc jo (bad) adc mov and push jecxz xor sbb xchg xor jne fcmove jle test push dec adc pop in push aam ja sbb add lea xchg inc (bad) or fnstsw dec outsl and add bound or rorb pshufw loopne mov xlat mov jg stos ss jo decl in mov mull ficoml int3 jo jnp inc mov cmpsb jecxz add and das idiv mov cmc pshufw cmp jno sbb xor test lahf hlt xor lcall mov sbb (bad) mov divl daa frstor inc mov and or jle (bad) jo (bad) mov jo mov pop lsl cmpsb ljmp ds test jo jns jne jp sub fwait roll xor jle frstor cltd sahf xchg push sbb negl dec fild sbb inc pshufw sub out cmp and call js mov in call bsf fbstp mov xchg or xchg fildl xlat push adc mov jmp enter loop add push in in adc adc push sbb sbbl or es jb movzbl xchg adc movsb cwtl sbb add xor ret adc and lock push movd imull jmp loop mov mov inc mov out fldl dec xchg lods outsb mov lds dec inc mov sbb xor lds mov mov lret aad fimul inc xchg mov (bad) cli dec mov dec xor pop pushf enter out jae inc loope leave insb adc push and adc inc popa pusha into add orl mov out jmp popf subl or jle mov in (bad) adc xchg clc notb int3 lock out loop mov jmp xchg inc mov sbb pop bound ss push jo pop ret cmp lods mov je or js in mov cmp and push jg lock daa ret loopne or lock cmp sbb inc (bad) incb fadd pop (bad) jb inc pxor pop ret lds or xchg jle dec and pop push add push mov ljmp iret xlat sub cmc fidiv mov test dec out lock ficompl (bad) jge (bad) leave pop or sub jmp fisub mov mov xor jbe test pop das and aam inc xchg inc cmp les sbb rcrb test xor out push pop lret movmskps sbb sbb inc (bad) pushf loope xor inc pxor sbb push ja jo or lock (bad) push cmpsb ljmp clc ljmp jae xchg inc jbe loope bound mov mov jo int sub pop repz sub dec inc ss das popa inc popf inc cmp pop xchg sub inc shrb push adc jmp outsb mov jb pushf and (bad) in push sub cmp cmp adc lret pop xor insb jmp jmp out (bad) and pop push (bad) icebp jp inc pop fs mov lock out outsb sbb jnp add outsb jg mov jae inc insb popa mov fidivr or pop arpl aas dec pushf jl out pop ret pop ret fisttpll inc push scas dec pop test ss xchg xchg scas aas sbb dec fcoms push push xor xchg add push or in punpckldq push adc fadds test or clc and pshufw icebp bnd jae insb lods cmp mov adc push ret xchg fsubp int xor fdivs test inc (bad) cwtl mov inc jnp jnp xorb ss faddp or xor inc jae inc pusha mov mov dec cmp and icebp add inc in xchg fsubp bound jp and adc xchg and (bad) aam push clc sub jne fsub add out sbb lock repnz loop jmp test mov mov bound xchg rcrb rolb test dec ror rorb push (bad) jne sub cmpl ss ret inc ss mov sbbl sub (bad) clc pop dec pop push ret sbb pop dec inc mov int3 adc push push push and add fldcw es pop ret jae adc mov lcall insl movsl out (bad) mov test push mov mov mov pop xor xchg lods xlat dec mov jmp int stos adc fisubr mov inc xchg ss adc mov cwtl cwtl mov push insl (bad) les movd ret cmp imul jmp loope popa cltd ss or fwait addr16 aas push lods push xchg cmpsb inc adc mov sub adc or sub add push cmp add lods dec cmp xorl test dec jns add inc pusha add sti nop jl mov xlat mov cmp mov aaa ret mov sbb lcall cli ficomp outsb inc lds in sarl xor das push xlat xchg scas fisttpl sbb imull pop sarl xor roll xor and sbb js push pop mov and sub (bad) aam movsb xchg adc cmpsl in jns sarb fidivrl leave les add fbstp lret rep adc pop mov loop inc xchg inc sbb sbb inc jle lcall aaa ficomp add popf cmp dec inc (bad) mov jle out jo idivl xchg mov rclb outsl in cli mov shr push xchg out in popa cmp inc add call mov out xchg cmp push ret xchg test enter xchg iret insl jb inc mov outsl icebp insb out cmc neg movsb or fidivl mov push xorb out out push shr es scas add es mov in and jno jno jae out inc cltd movzbl or movzbl and pop ficom js inc test or and test lock fs mov add cmc ret inc movzbl add sub sub (bad) jg stos test dec rorb out ljmp rcll xchg adc push sub shlb xor lret or pop inc dec push inc movd and push jo out push ret arpl add jle sub fnstcw ret pop outsl pushf loope pop aam adcl or idivl adc adc inc ss das (bad) push les fstps pop cli pop (bad) pop movsb fdivrl jl dec xor fmuls push lcallw pusha scas sub push les fcomps aad punpckldq push popa or icebp pop inc xor les repnz pshufw dec mov mov enter and rcl (bad) push (bad) outsl out imul xor in jo fdivrs adc cwtl lock ss ss adc add ret sbb in push outsl or pop ret inc sbb adc lea lea mov push jae insb xchg xchg cmpsl xor outsb punpckldq dec dec iret xor xchg test ret inc dec fs xchg popa xchg cld xchg mov test call push test xchg mov imulb insb xchg xchg loopne jae and cmp addl inc (bad) sub inc jo ss mov jnp sahf or and mov mull mov ret into lds clc mov (bad) scas sub stos mov in xor lcall adc push ret insb fidivl mov push xchg fildll ljmp mov mov or repnz push jo lds jp push jg xchg sub xchg sbb stc jo fstps mov inc ds xchg mov test mov or or xor es jo add or outsl add lret or adc test jae and inc push sub push movsb mov jnp test lods sbb ret mov insb and out (bad) pop shll divl push mov fsubrs and or cmp xor out aam pop inc sbb mov ret in in mov pop shl inc push dec fcomps (bad) sahf ss ss dec fadds mov pop xor lret ss lods out inc adc pop ret cltd xchg mov jae dec sub fldenv std movsb ret fisttpl sbb (bad) jmp xor sbb data16 add cmp dec cltd pop sbb dec lret bound cmp arpl inc lods push ss (bad) pxor movsb fdivl mov xor mov ja push shll (bad) pop (bad) (bad) xor sub popf jmp adc jb jmp data16 push sbb and push popa inc mov and inc xchg cmpsl push into nop xchg fist inc das fstl xchg push in dec fcmovbe frstor inc hlt sbb (bad) out adc (bad) out sbb jp pand fsubl jmp (bad) aad mov iret mov or (bad) jo out adc mov lret insb clc pop inc mov jmp fmull push incb out inc scas or pop mov dec add sbb inc push xor fidiv (bad) aas shr insb fdivs cmp mov fs pushf cmc out cmp cld testb pop cwtl mov movsb loopne fadds sbb pop xchg jae pop fstp inc mov scas dec cmpsl push test xor out push sarl pop rolb mov inc mov or test in sbb test mov inc xor mov mov inc adc inc shll cmpsb jmp aaa outsb mov aam jecxz shr roll and (bad) xlat and lcall psubsw xchg lret (bad) call aad inc mov out dec mov mov lods popa mov pusha jg inc mov leave sbb movb aad ds sahf or (bad) push outsl (bad) int mov sbb jecxz inc add ret mov jle mov xor mov std inc (bad) out push (bad) xor lret movzbl push jne out fwait imul push (bad) sbb mov xchg daa jb cmp dec std push rcrb cltd sbbb inc xor inc dec mov mov adc inc xor std inc mov push mov jae mov pop inc ss adc ljmp and movzbl inc cli outsl xor fldl fld (bad) mov mov inc shr mov inc mov movzbl je sahf jmp mov adc jp inc inc pshufw pushf lret (bad) jbe inc sti mov jle mov add sbb push test iret sbb gs inc xor jmp inc mov adc jo (bad) inc mov test (bad) cs sahf inc dec xor inc mov adc cwtl loop call int3 xor mov mov test lods pop outsb push or call xchg out mov jo mov mov add xchg add cmp lcall scas (bad) lock mov mov inc ret jmp inc adc sub add dec cmpsb test jle mov mov or push mov adc punpckldq jge mull inc insb icebp (bad) and in enter out cmc stos lock xor mov adc addb or ror mov xor jecxz mov mov fildll add or mov pop sahf lock pushf arpl mov pop dec pop jo ljmp (bad) mov inc xor inc mov xor inc dec adc sbb xor xor (bad) xchg icebp paddb xor cmpsb and test jg mov xor push sub ret (bad) xchg xchg mov push (bad) jg daa jp lods or incb sub fwait sub (bad) in xor sbb or mov add cmp and loope addr16 inc mov jle mov cmp mov and lods sbb push mov cmpsl jo sbb or shrl mov or inc aas pop lret test inc mov (bad) cmc or outsb addl dec gs gs xor ret jo adc pop sub rcrb iret movzbl ret cld stos movzbl push push bound jo stos rolb ret loope cmp das adc mov out inc xor stc stos inc xor enter mov jne mov xchg inc inc mov xor sbb leave sub dec fiadd lret out rcrb movzbl sbb mov mov adc lds jbe adc jne sbb adc mov inc xor jne pop mov inc mov (bad) xchg inc inc add dec out jmp or pop jb mov mov xchg xchg cmp or lcall add rolb ret popl sbb or dec cmpl sti gs icebp inc mov sub cltd fcmovnb aam cmp pusha leave sbb mov in mov cmp add jno adc xchg inc inc push shrb push in jae mov push fstpl xor rol xchg sbb mov pop or adc add inc mov sbb push sbb hlt mov push jo popf xor mov pop test mov mov sub clc inc mov (bad) rclb into add jle loopne add pusha andps pop or fmuls stos mov bound push or pusha and xchg out in leave aad stos xchg jg rcrl out fisub jle push mov nop rorl mov inc jo sbb addr16 adc negl sbb mov pop sub rcrl mov push push or (bad) cmpl push sti fs mov xchg mov push cmp in incl pusha add inc sub jecxz mov insl jo sub out test xchg out divb pop call outsl cmp loope jecxz outsb add fnop xchg loope les icebp inc es push inc mov jno jge mov pop inc mov inc pop loope mov test out add fs sub inc loope loope imul add or inc movsl mov out xor fs test outsb out push lea add out sub cmp icebp and dec jae adc test push and into mov ret nop or or jo xor fcoms pusha inc popa ljmp dec rorb add je xor adc fcoms in pop cwtl xchg mov xorl pusha or shl sahf ret mov adc xor call mov cmp xor movzbl adc and push jmp jo adc iret aam enter lods cmp or rorb (bad) mov (bad) xor rcll push popl sbb pop pop xchg jnp (bad) xor lcall pusha ljmp jle popa dec inc xchg inc test insb in popl arpl lock xor mov mov data16 jge add pop test out sar xor push sbb sub fimul mov outsb negl fimul movzbl inc mov or gs shrl shr punpckhwd (bad) sbb jnp add aaa inc dec es pushf or lret inc mov movsb sarl frstor js lds mov rorb or ss rclb lahf bound fstpl shll pop fisubr jp ret mov cli jo cmp or arpl test jno jne cmpsl cwtl loope icebp jp fs ret lock dec push stos lds cmp push xor xor and (bad) adc loope sbb cwtl jge jo or push (bad) in adc mov adc fld arpl sahf cmp jnp pop jmp outsb cltd xchg pop movsb test inc lods rcl into cmp inc call jecxz (bad) fsubl dec mov movzbl sbb add adc and into mov mov es mov out out and or sub shl sarb rcrb mov outsl cs mov rcrl in add aaa mov ljmp in ret out pusha mov adc pop dec pop aaa (bad) jnp loopne iret pop rorl or mov es and jns or pop aaa or sbb sub mov xlat adc sub jbe push outsb pushf test sub ss mov loope mov cmp loop pop into popa push subb dec stos fmull cs cmp int3 rorl cltd cwtl jmp loopne pop jne adc test xlat mov sub xor (bad) std xor mov shr push ljmp out push sbb pop fsubrl rorl sbb sub push push push int3 dec jo xor and add inc push push pop sbb pop ss xor mov in xor inc mov inc xor ret sarb sub inc sbb mov repnz pop and test punpckldq shlb (bad) ljmp out aas mov jne push ljmp scas stc out jmp cmpsl push popf jb cltd mov inc lret mov inc mov jo and mov inc push call inc pop xlat aad and adc add scas mov inc jo xchg jae sbb sub xchg mov mov leave pushf je add psadbw enter or cmp inc and push (bad) js ja inc mov incb mov cs xchg dec mov dec fadd xchg mov movzbl daa gs stos mov fldenv and jle pop jge in testb movq (bad) mov sbb cmp loopne push adc nop (bad) sarl orb push jnp adc in loopne orl test adc inc scas call (bad) nop lret es and mov fs lock dec and dec inc iret movsl sub pushf and adc sub pusha out rcrl leave pop das fsts sbb jo sub sub sub jnp call loop xor or in call xlat push xlat ss decl out dec mov outsl fidivrl (bad) scas jle push push iret stos inc xchg xor mov jo icebp mov dec pop inc lahf add pshufw push xor jle xor lahf jle or sub call mov jle cmp loopne insb daa sub call mov stos jl cmp dec sti pop std loopne int ds dec sub shlb lock xor clc fstl or stos popa mul rorb addl mov pop inc movd sub adc std add pop lods mov sbb mov stos cmp and daa or pusha addl mov aad lods fwait xor and pop add sbb adc jne sbb jp mov add jnp and mov pop (bad) les mov or push jb push leave sbb or aas pop sub aam mov repz adc sub aaa into (bad) jae dec stos fwait stc push mov bound push mov popf andl mov pop add jecxz cmp les lcall (bad) sar mov addr16 pop sbb sub xor subl push mov cs mov das decb out mov call jg bound mov faddp add aas stos in jne or lcall out jnp sahf pop and sbb ficompl pop lahf jp rcl ret mov lods push xor add sbb fucomp adc dec mov rolb push call push mov clc enter sbb popl sarl cwtl fnsave addr16 pop rcrl insl inc es call cwtl fmuls push xor mov jbe lcall fcoml xor jo mov inc push or in push je addr16 cmp push cmpsb test out bound dec lcall pop mov or add xor push popf add jge sbb pusha xchg dec loopne ja dec rcr je sub mov pusha mov push sub fnstenv sbb add leave push pop and mov das dec (bad) sub pop (bad) repnz ja aam xchg sbb or cmp sub push xchg add add popa pop add cmp or push sarl mov sub addr16 or adc rclb adc adc or xor out je adc push inc or ret int jne inc mov xor arpl xor mov xor movzbl (bad) mov enter (bad) dec cmp ss xchg jb sti loope mov movzbl xor and jb mov rcrb std adcl cmc (bad) sbbl clc jo scas movsb push push fildl sarl adc mov dec lret lock dec push jg ret push xor lcall inc mov inc jb leave sbb add fstpl pop clc inc rolb out push into xlat add mov sbb out lahf inc inc or movzbl cmp jmp movzbl sbb mov inc in pop ljmp mov inc mov adc or repz sub push scas dec add ljmp enter inc xor adc add outsl lahf dec loopne mov inc ljmp dec push push sub bound aad notl ret or dec sub or and add xchg inc ficom mov xor add and inc or xchg insb cld int frstor pop fs add and dec cmp enter daa add test add sub stc sub data16 addb sub or mov mov push rcrb stc rcrb inc stc dec add pop pop popf adc mov enter es mov adcb jg or xchg pop push sbb sbb lock ds lea test push mov adc mov outsl or pop pop inc or mov les dec and mov dec lea icebp (bad) rorb add lea call inc loope test addb add das xlat in pop sbbb lret pop loopne push mov xlat xchg in call sbb or pop add adc add test das test icebp adcl das sub mov outsl stos andl outsl loop fsubrl stos outsl pop jo jnp push adc xor (bad) jnp jl mov or sbbl push dec or or out pop jg xor ljmp jnp pusha push pusha (bad) sbb mov mov or out jp adc inc mov addr16 xor ljmp rcrl leave jbe cli push jbe and insl xchg inc call and in cmp push dec cmp or mov jmp cli leave add inc es leave les and push stc popf (bad) and lea push jl loope out jo inc outsl add and add rolb jb dec fs mov fcoml outsl jo adc pop loope pushf and xchg mov jle jle ret popf jle lods cmp cmp add xchg adc mov xor xchg mov mov stos mov sbb nop js pop imul push out pshufw xor add inc push movsl lret jns lahf lods mov inc (bad) psraw add push out aaa push movsl cmp dec sub scas push daa insb ficoml adc loop jnp mov dec stos xor stos mov xchg lret sti ret inc adc xchg sbb lods int push xchg ljmp popa lret cmp ret mov (bad) loopne xor insl rorl movsb call bound cmpl fidivr xor mov xchg ret call jno cmp and pop or and dec cmp xchg push (bad) int mov adc inc cs xor nop rorb shlb cmp pop or mov outsb les mov jg inc ja jmp push outsb jbe jbe cmpsl clc inc punpckldq into or test push mov dec dec push pop mov pusha pop inc inc in stos jae dec mov jo shr les push enter inc stos mov cmc mov mov mov sti daa and and sbb cmp mov cmp and int addr16 add ficoml insb lret push pop push push mov xchg out rcll outsl neg addr16 push and pop aaa inc or bound aaa rcl (bad) rclb loope cmp inc sbb push popf mov in mov fnsave or hlt or lahf add (bad) xor fistl pop mov sub jp leave push inc xchg bound dec inc pxor dec cwtl lock push dec pop dec mov pop mov rcrl fnstenv inc jo jg mov jecxz push pop or rorb xor or and xor (bad) xor cmp mov call pop pusha cs or sbb pop out outsl dec jle sbb push xorl and mov xor jo flds imul sbb fs inc lcall faddl mov and inc xchg shrl pop push push xchg sbb and xor bound insb (bad) arpl ds js jno inc mov repz (bad) decl lahf jecxz push mov lock inc test mov cmp xor jnp pop les (bad) xchg push ficomp mov xor cwtl mov pop mov arpl call sarb inc xorb mov or adc pop add jo lret cwtl mov xor mov je adc loope cmp aad xchg dec mov xchg pop inc xchg shl and mov sbb dec push mov into pusha add cmp (bad) ja and ljmp sbb dec inc in mov ss bnd enter mov jo xor or (bad) outsl mov movzbl adc inc mov (bad) lret inc mov mov ret js adc movzbl push hlt mov cmp jmp add inc mov push stc das repz cltd pushf and mov inc xchg and pop gs mov sub ret mov (bad) into xlat outsb lret push jo dec ret push sbb (bad) cmp movzbl inc xor cs movsb rcrl sub pushf adc lcall dec jno pusha jo aas mov push adc xor fsubrl mov out mov push dec dec xor cmp dec pop push mov sahf xor mov out inc xor xor lods into adc addb cmpsl leave mov inc pop aad lock ficompl xchg pop sub test mov loope jo pop arpl cmp sub movzbl outsl mov xchg mov je pusha movzbl rolb jno add mov inc adc inc pop adc mov aaa inc popa jo adc jo mov jo inc inc adc xchg mov repz cs lock lahf rolb repnz xor sub or xor xchg jo mov test dec push mov inc dec add or lret loopne sub int3 jno imulb adc insb inc add lock inc push or inc mov mov and cmpsl es subl mov sub jb mov mov pop das icebp es sub xchg xchg xchg cmp call adc jb das call jmp hlt and ljmp sbb ret mov add jmp xor outsl in movd adc ljmp mov rcll decl or out inc xor movd adc jecxz lret mov (bad) or stos xor or cmp popf or int jb movsb loopne mov inc mov mov mov pop loopne push mov or jae pusha push jo sbbl ljmp cmp add pushw repz mov pop adc test jmp shrl pop push test pop or push mov dec test in add in push or lock lock inc dec push mov xor xor dec push pop add jo add enter loope dec mov mov les cwtl adc push jp or mov rol rorl dec je es add dec mov dec andl mov sub add mov shr rcll bound adc ds xchg cmpsb and sbb pop ja (bad) cmp cmp negl (bad) fistpl rcll inc xchg jo mov es test inc xchg sbb mov mov mov xchg jo add mov into adc and pop addr16 test mov adc inc xor insb push jge fcmovnu out iret fldt call push mov ret mov push js add xlat inc roll xchg rclb (bad) push mov and pusha mov and outsb cmp jo push hlt xchg out xlat sub subb movsl dec adc mov mov inc mov pusha rolb stos subl mov jnp xor mov inc imul fsubs adc pop sti rorb fdiv sbbl (bad) lock mov mov mov inc and stos cmp test sbb mov and js and fs push sbb out test call inc mov adc icebp mov pop pop dec outsl mov jo pop pop (bad) (bad) xlat jns push les insb aad (bad) sahf loope mov subl mov sbb pop pusha and fcompl popa sbb inc sbb jge loop lcall enter lock popf jo lds ret daa or in and mov fdivrs inc int3 pusha dec sahf and enter les mov mov daa bound out movsb lea add scas and sbb sbb mov btr insb ret out fild shl inc add ds push flds cltd sbb idivb or adc pop aaa mov pop (bad) pop and push push xchg out popf movl inc and inc mov sub mov ret mov push sbb inc inc mov inc mov sbb inc mov or out push sbb adc call mov cmp rcl sbb add jns outsb mov ds lds dec mov jg test rolb insb sub lds into push scas shll push imul add cmp call mov xchg cltd mov xor andl push mov (bad) xor mov or andl mov inc mov xlat out inc push and mov or mov fst (bad) and fbld in movzbl lret mov movzbl or inc dec das rorl add out cmpsb adc jo loope std adc or xchg sub jo sti mov inc scas in jo add cmpsb sbb jo and cwtl ljmp and or pop shl enter lcall pop cmc xchg mov push popa nop rcll cmp pop push pop lret sub sub xlat pop sbb or add add scas aas push inc inc pop sbb mov mov and mov rcr mov push sbbb sub lret sbb and adc lahf xor out mov inc inc mov outsl jp xchg movzbl sahf add int3 (bad) fs mov sbb adc clc nop fidivrl mov mov pop out xchg lret pop adc ja mov out xchg cmp jge xchg stos rorb test xchg fimull std pop loopne iret xor xor (bad) ficoml fadd add adc or adc adc push push decl push daa sbb aaa mov lds cli inc outsb inc aam shll in ret or xchg inc mov pop jo pop es mov mov repz pusha and fild xor mov jb adc ja xor adc cmp mov call call mov in (bad) or sbb in cs mov fmuls outsb jae negl rolb stc mov test mov dec stos and adc push add orb or xchg dec scas sub rolb mov ret outsb dec outsb sbb mov and lods xlat out rolb hlt mov loope push mov and and xor cmp mov rorl inc int3 js lock movzbl inc movzbl xor mov lods dec inc mov adc clc xchg inc mov inc lods mov mov lds into xor es adc and or scas inc mov inc loopne push xor and adc cmc lods rcrl repz cmp inc jo inc test push addl jmp mov insl cmp sub xor inc mov xchg fmull cmp fimul xchg mov xor mov or inc in push mov ret ljmp or mov push add bound sbb andl xor pop and pusha leave ljmp dec enter aad xchg or andnps mov cmc aaa jo rcrl cmp bound mov xchg and shrl and mov sub sub cmpsb mov add xchg cmp cmc xchg jnp pushf call dec dec mov ja xor lahf cmp (bad) jmp test or add and pshufw sub jge loope leave mov push aam (bad) inc mov mov rorw or fcoms je stos icebp push addr16 or fs int3 and imul cs and jle sahf pushf or cmpl fsubs dec jle outsl and test sbb or mov movsb out movl jo loop cmp sbb pop psrlw adc or cmp je mov inc inc imul rcl sub inc loopne xchg shll pop add cwtl jecxz test cmovno cmp negb lock add int dec aam movsb jb sar fmul mov pop leave push sub fldcw and movsb pop sarl lahf jb cmpb and test addl lret loope mov sub lret sub or add out sbb mov testb loopne mov insb or out (bad) xchg (bad) or es je jne jb divl sub xor push push xchg (bad) sahf and or mov out jp xchg insl mov mov into sahf mov into cmp push addl out push imul xchg popa sub (bad) jb iret mov loope into rclb int3 cmpsb xchg cmp ror sub adc movzbl mov jle neg iret popa stc jmp jmp mov test rcrl out fadds push orb adc fdivrl mov test das ret inc mov addr16 sbb add in push popa mov fsubrl (bad) inc lcall push fcoms lret or pop adc add shlb jae mov xchg pushf pop or inc into popa adc push fmull add (bad) loopne rorb xorl inc mov pop ret jnp inc pop xor mov out lock push inc (bad) dec imul into push add test (bad) push shrb push push jle sbb shr sub mov mov mov cmp shr jg (bad) cmpsl popa xchg mov movzbl or mov clc loop jnp mov ss mov adc xor popf or mov mov movzbl adc dec sub mov cmp sbb mov push sbbb bound jbe bound lds xor ja jns cmp movsb jecxz lock nop imul rorl sbb (bad) in adc loope scas roll adc or rorl out sarb out popf pop xor rcrb and out movzbl or movzbl lcall or dec jle xchg movzbl sbb bswap pop pusha cwtl jo mov dec mov int mov adc jne cmp movl adc or ret or (bad) les push mov sahf xchg mov mov (bad) pushf jnp xchg add jbe out rcr or sbb outsb sbb mov jp enter mov cmp jle outsl mov mov pop imul mov xchg push push jo and inc xor or xchg insl lods push out add aaa in shll (bad) inc push test inc in and dec pusha adc cwtl and mov push sbb and cs push dec pop notl jge push mov adc push inc lock pop push jo dec inc and aas aas imul into lock imul test jg mov dec aam je pop loope sbb xchg adc movd ret or push (bad) fimull adc fisubr or sarw fcoms pop inc js das mov js aaa inc push dec fwait test mov push or aas push xchg sarb and xchg add xchg lret cwtl or fwait push and jo sbb loop insb push xor and mov or js push mov adc lea fs and push ss add insb aad test jae xor mov mov ss jnp in sub data16 and inc ss daa and jnp lea sbb jl ljmp psrld or js addr16 cmovb inc xor inc inc punpckldq mov insb out and pxor insb push inc ljmp out sbb pop add lock loop mov xor inc icebp negb push fdivr notb notb outsb jg jp mov insb fidivr pop dec mov mov push ss ss outsb (bad) jnp or pop push sahf loope push mov int3 fmulp pop dec pop cwtl pop lds and dec xchg add mov lcall icebp cld and dec sub jg push sub cs push jge xor inc lret fcompl inc (bad) xor scas inc jae or xor in aam push adc fs xor jo dec xchg add cltd pushf jmp jo adc insb cwtl jnp out mov sarb sbb scas pop mov xchg fadd inc jne cmp mov mov xorl or fcmovnbe rol cmp out inc and jo es bound mov jo sbb sbb ja adc (bad) enter in cltd inc in out lahf mov jae mov mov pxor sub xor leave stos imul mov jno bound loope inc sbb jae ja outsb xchg xor jb js mov pop les jae push or pop jnp pop add and add push sbb into mov arpl rdmsr inc orl movsb push popl jne push sub es fsubrl call dec or in adc cmp xlat adc insb push cmp fwait insb in mov sbb push mov in inc inc jle das push hlt cmp inc push les xor and cmp jno,pn jb test leave fsubrp lea inc cmpsb sbb xor xor add mov and (bad) adc adc xor cltd mov daa dec adc xchg adc in cli outsl ja inc cmp scas shrb addl hlt and jnp push (bad) mov cmp and ret inc ret inc je xor mov xor mov mov int aam mov inc push or sbb and out inc outsb jmp roll std lret add mov cltd jb cltd and cmpsb sbb adc xor loope in adc add sbb xchg mov or roll inc mov mov jl iret sub xor adc lret mov in gs aam add aam cmp push mov pop dec pop hlt dec adc lds mov pop sub cmp xchg sbb outsl mov push cmp (bad) sbb add mov add aam xchg (bad) popf adc in fisub decl mov sbb add mov cld inc daa rorb into and fldt ljmp mov push inc pop inc leave ljmp xchg movsl cmp jbe stos mov in mov sbb jo decl add imul xchg sti cmpsb inc mov fwait imul jmp inc lret sti mov daa in xchg or and sbb loop push inc cmc dec das mov movzbl mov mov roll popf test sahf xlat pop mov pushf mov adc jae aaa xor pop push push or add fdivrs pop lods jecxz movzbl test pop xor rcrl add add jmp push xchg mov out jge adc cmp jle jo stos add jo (bad) ljmp or test cmp daa ds dec cmp mov mov jbe sbb mov ret push jge (bad) fidivrl sbb shrl pop xor or fstps push cmp dec push mov add mov add sub sti push cmp mov xchg sbb mov or inc mov push push adcb test roll loope fs jge cmp (bad) fcoms test scas sbb pshufw jle adc mov mov or dec sar push sbb in nop xchg mov sub into loopne push call or punpckldq fcom iret pusha xor pop fxch or pop inc jo mov inc into jo fmull push adc in adc push pop mov dec xor mov jo pop xor lock xchg fistpll and jmp enter and push (bad) enter cmp insb pop mov push dec (bad) mov jne jo mov outsl loope lret cmp xchg int3 or push lds ljmp dec scas (bad) jnp or and ja mov sbb sbb xor cmp into dec sub jnp mov sbb inc (bad) mov (bad) les mov inc cmp inc sub mov and push sbb call dec ret jbe xchg pop push push ljmp push push adc sbb int3 sbb sbb insb icebp daa mov cmp adc dec sbb sub jno add insl adc (bad) mov adc inc gs mov mov xor leave jmp sbb lahf (bad) addr16 (bad) es push mov (bad) jo cli pop jg cmp mov lret out gs addr16 rorb outsb in xor and jnp mov inc and or push (bad) inc rolb ds xchg add ret iret or or scas inc cmp cmp sub arpl mov mov sbb xadd sbb cmp cwtl sbbb jle add clc add (bad) sub add (bad) leave lods mov mov (bad) mov sahf cmp xor push inc mov sbb mov mov dec lret mov inc test ja inc shl (bad) cltd inc test bswap cmp xor mov cmpsl cmc cmp es cmp or enter xor sbb push xor push cmp call sub arpl xor xlat test test shl cmpsb or mov dec imul cmpsb sbb lock push iret sbb dec push es in xchg push lcall sbb imul mov sarb pop inc inc mov sub inc mov nop and lods scas fwait scas sbb out enter jl hlt jg out mov mov push call cmc loopne jnp,pn fstpt (bad) inc mov ss cmp sbb ja push (bad) sbb jae and pushf jae lock push mov and mov sub and icebp inc inc xchg mov or je leave or or xchg adc jecxz cwtl lret mov xchg mov hlt dec cmp push movsl cmp dec mov lods fisubl enter inc pop push ffreep icebp movdqa pop enter ret mov movsl jne popl cmp or mov cmpsb lret (bad) je xchg mov inc pop cs add pushf lcall cs andl xor xchg jmp rcrl in and sub addr16 daa mov cmp and push dec jo push add data16 jg testb shrl push xchg pop js rolb pop xchg addb (bad) hlt jo xor push andl xor inc xchg cmp push sbb jg add dec xchg inc fisttpll and push mov jge or pop cmpsb sbb mov fwait and cli jae test les insl lock mov mov push inc mov gs sarb xchg jmp mov ljmp pop (bad) fcoms (bad) add jo (bad) adc into pop pop cmpsb shr sbb push push ljmp jl scas sbb (bad) xchg imul sub mov adc mov (bad) into inc adc dec popf inc xorb xlat inc inc test in sbb dec and cmpsb lock jae inc (bad) xor dec mov outsb inc or xchg lret xchg ret add adc or int xor push (bad) push popa pop mov test mov js inc mov mov mov mov cmp xchg xchg mov js xor mov sub mull cmpsb aas pop mov inc pop and scas mov movsl pusha mov loopne nop arpl ja mov inc movzbl push dec xor sbb push mov in dec xchg xchg adcl xchg rcll les add sbb loopnew (bad) loope and or mov dec pop cmp roll mov and xchg testl mov sbb repz icebp outsl rclb xchg mov ret adc ja insl out iret and adc or test sub out xchg jae xor iret or pop jo jno movzbl sub cmp ret or shlb inc les shr fmull xchg mov adc data16 ljmp cmp imul cmp clc sbb mov sub xor adc push dec xor cmp fwait xor sbb mov xchg hlt cwtl mov mov out fwait lcall sbb adc pusha (bad) sbb push stos iret stos rcl popa mov stos sbb inc fstl pop es mov mov pop xchg adc jo push dec popa cli fmuls (bad) clc pop adc mov (bad) pop adc or mov xchg rcll lcall add inc inc push add pusha dec push inc cmp fucom inc out mov fisubrl xor rorb xor shll (bad) ljmp inc and (bad) or pop sbb fimul into cmp rcll dec dec inc cmp rcrl mov orl cmp enter pop push dec sbb lret add dec sbb je pop sbb xchg (bad) jne jbe sbb add xchg adc (bad) bound inc mov ret xchg and xchg jne insb decl or mov enter xlat imul aas xor fs cmpsl add cmp inc mov out inc pop cmp jmp and push push mov (bad) lcall (bad) add xchg dec jo add adc adc mov rcl and add sbb inc ja (bad) sti dec push and inc daa push lcall (bad) xor push (bad) decl and je stc cs lds loopne mov and stos rorl or outsl cmpsl sbb mov and fild jo jne mov outsl inc movswl loop sub inc movaps movaps xchg loopne (bad) cmpsb movaps les cmpb inc add lds test pusha push add fisttpll add adc add cmp adc dec and dec mov mov jg and cmp adc clc (bad) pushl push xor hlt cmp add dec sbb dec cmp xchg dec mov add and inc pop and push hlt sti pop daa xor movq mov mov call mov mov inc and dec add subl aad pop sarb pushf mov inc mov incl or movzbl adc ja ss jle jle or inc push inc push cmc movsb mov aam ja into inc or movzbl out pop sbb test cmp lea push lds (bad) outsb rol arpl mov and into roll sbb ja ljmp sbb sub sbb dec jb aas push adcl xor lea xchg or lds push std aaa out lret adc inc xor (bad) mov add insb test fadds mov sub sbb xor cli nop mov pop cmp fs (bad) out ljmp pop inc movaps dec das mov jb mov dec push cmc sub dec mov rorl dec lcall cmovl and xor dec xor dec fwait sub sub dec pop or test mov pop les ret inc dec lea cli arpl mov call stc push mov cli fwait or dec mov dec mov out sub fldl dec add jecxz stos xchg loope inc add sub dec mov dec add ficom mov call shll dec mov pushf dec mov call lahf fisttpll mov mov je pop call (bad) mov dec lea lods dec mov call dec loop call mov or dec xor sbb cmp mov dec xor jg add mov mov mov dec xor jnp out test adc add pop add aaa mov pop add fwait test lock dec adc loope or inc or dec xor test aas sbb mov hlt dec es rorl and and icebp dec es movd out test lret add incl sub icebp sub jle add mov icebp inc xor mov inc xor icebp movzbl jmp jmp inc mov inc shr insb and sub bound outsb add xor cmp push and mov (bad) in sub adc movzbl cs cmp ja inc mov mov out sti inc mov push jmp push imul mov (bad) fnsave movzbl dec mov inc xor ljmp push dec add insb and inc scas xor cmovl pushf sub daa add shll (bad) movq mov adc popa push (bad) test inc pop (bad) adc pusha and xchg pop sbb sub pop mov add add or rcrl inc mov and add sbb repz outsb fcoms (bad) jb and scas mov pop roll xchg (bad) fmuls sub dec mov arpl dec mov cmp dec mul adc jmp inc or dec inc out inc test dec xor xor iret std inc ljmp inc cmp inc test ljmp dec add dec xor enter jne (bad) pop mov pop out icebp or or (bad) add mov xor mov aaa dec add decl or scas (bad) push ret adc pusha dec and ljmp loopne and inc call sbb pop adcl and dec mov (bad) icebp lds dec (bad) leave or push sbb jnp jmp or mov and (bad) call and adc add pop test or or inc ja call movsb pop sub push mov lods adc sub or xor rclb sub mov add cs cmpsl pusha and xchg jle cwtl or cmpsb add or push sbb dec lea xchg cmp clc sub shll dec add add lock push lea rolb (bad) jno mov xor xor test inc incl stos cmpl add insl add mov pop mov fwait mov out inc xor inc dec jle xchg cmp dec adc dec push dec fwait roll jnp push mov jo stos shlb outsl mov adc inc xchg mov dec xor cmp xor push push pop ss enter das adc test inc mov cs pxor sbb in sbb or inc je shr aaa pop xchg and (bad) inc mov inc fcmovb out dec cs mov jle rsm sub dec inc (bad) inc pop je add xor mul and or (bad) fistp out scas xchg out jnp pop jg (bad) or xor push pop (bad) (bad) imull dec ret sub xlat mov and out add mov ss mov inc xor addr16 rclb (bad) icebp mov cli push mov inc scas loopne les jo and std int frstor movsb xchg adc adc pop jbe mov sbb sbb popa xor sbb jno adc pop adc add fwait stos sbb jo mov and and xchg inc sbb sarb negb out rorl pop stos (bad) inc add ret add aad jmp decl mov inc mov and aaa icebp add jle and shr inc pop lds cmp and jmp pop rolb and add outsl sub lock sbb inc movzbl jnp cmp jle sarl mov xchg les divb sbb pop push xorb dec pop add jo pop adc ja inc movzbl and aam and inc cmp subl cld outsb mov push add ret or xor sub sbb jg insl in mov xchg movzbl inc xor ljmp adc push aam push lret popa xor loopne bound insb mov sub lock inc mov movzbl loope adc ds testl push bound pop inc xor roll lock fsubrs jecxz test pop (bad) aad sub addr16 mov push adc in out fistl dec dec and rorl mov pop push mov mov aas mov sbb mov bound sub loopne outsl (bad) jbe arpl dec shl add or xchg add sbb dec or lret lret lds in inc xor mov ja sbb sbb mov jb or xchg mov sub push loop (bad) adc push and pop aam pop xor inc sbb xchg movsl call cmp xchg mov daa pop or aad jnp pop mov (bad) jns mov out mov arpl bound inc mov xor xchg mov push aam pop out push adc outsl mov jo call and cmp dec inc out out movsb xchg aad or dec push mov roll or test push (bad) mov or lods aam test loope sbb mov xchg pop movsb push nop mov pop push adc push out xchg pop sbb (bad) incl pop arpl mov lds jo out jno popf jg (bad) imul mov jecxz sbb test inc mov jnp aas push xorb push loope mov cmp mov aam roll insl cmp xor and lret sbb mov xchg xor enter inc mov xchg xchg or inc mov adc or sbb or movd adc and push std and inc sub and push popa lds lcall xchg sarb fcomps (bad) rorl movsb call mov xchg lods out jne xor roll pop jae pop xchg xor push jl (bad) pop lret cs add out popf or or cmp stos (bad) popa mov cmp cs and cmp out (bad) mov out xchg add push cmc jecxz bound cmpsl shr inc xor cmp jb pop rcll inc aaa lods rcrl clc loop or xchg inc iret dec mov dec mov or (bad) adc bound jno std pushf jecxz les lcall sbb push gs test and sahf daa iret ret pop cli mov jle inc mov cli push add add xchg addl push js nop and sti pop out cmpsl movzbl inc push mov inc mov les popa adc sbb inc dec xor addl inc mov xchg imull cmc adc xlat adc jo dec (bad) repz inc int3 mov inc adc cmp push inc in jl mov sbb loop insb jbe fwait (bad) lret dec (bad) fnsave call sbb cmp dec out and add sti and and cmc stos mov cmp xor jae loop push fisttpll call pop sub call mov roll adc hlt mov inc mov add ret fmuls push fisubrl dec pop fdivrl pop add cmp incb sub mov adc mov and movzbl sbb sbb insb or insl and mov movzbl add mov mov cwtl mov jo mov dec rorb mov sub adc int3 or fadd push pop ret jo rcll (bad) or xor pop xorl and subps pop xchg sbb addb xor mov mov pop cmpsb test pop jl clc and pop and dec enter enter pop push inc add jmp or in or push sub pop movzbl (bad) jbe inc mov inc xor inc mov inc mov cmp mov dec mov loope cmp movzbl push push out xor arpl xor dec lea or mov (bad) xor in insb mov inc pop stos jmp mov mov icebp pusha or inc inc (bad) movsl mov test pop lret pushf jnp loop pop adc push pushf cmp into lods mov xor loopne or pop test cmp out movsb or pop push adc lcall call jo stos sub scas lret jo add adc int idivb jb or (bad) jle sub cmp scas jmp pop push push call sbb inc in push (bad) xchg outsl pushf repz mov call jle mov xchg sub data16 mov xchg fnstenv out (bad) sub or cs test addl xor pop or or inc inc leave dec mulb call fisub xor nop add iret add das call call fild xor cmp call add jo mov lret sbb cmp jne fmulp mov pushf xor add (bad) enter pop negl imul fnstsw inc mov cltd (bad) jmp dec cmp fs test int3 push addr16 adc out sbb dec cmp jo bound test add sbb xchg rorl mov dec jno mov push loopne xchg sbb push and mov inc (bad) push push imul orb jb pop sbb adc roll xor sbb lahf inc and xchg adc lea mov ret mov sarb sub outsl xchg outsl push subb outsl push push rolb or test sub xchg lds out iret cltd fdivl test and out or (bad) or sub pop and lock mov and rorl setae add sub out imul and xor insb push leave es sub add or fwait nop rolb sub outsl cmpb xchg insb mov cwtl xorl add xor push dec or and roll and int ret je ret fldl2e pop sub or test jb out stc ds push add dec xchg test xchg lds add add (bad) dec flds test xor and andl pusha add or mov fwait xor xchg and jo clc adc data16 push ds test adc sub leave xchg ds adc imulb xor pop sub pop mov pop sub adcl xor movsl test call fidiv hlt and adc ds ret mov sbb xchg sub adc jbe mov xchg and dec inc ds pop adc and sub fsubs sub in flds xor aaa or sbb sub lods and ds and bound dec pusha mov add cmp sub and inc shrb sub cmp in push jge movsb cmpb xor sub jns xchg cmp xchg and test adc aaa dec (bad) mov mov mov popa enter and icebp mov jecxz aam add push cmpb (bad) sub inc movd inc mov push flds js lds pop jle mov xor movsl data16 cmpsb mov xor jb mov mov das pop cmp arpl pop jge out adc add pop hlt mov fist sbb adc andl xor cmpsl mov scas add pop ret mov movzbl cmp xor mov mov mov mov scas dec cs push xchg push (bad) lods mov clc movzbl push scas dec mov sti lcall cmp loope pushf loope decl mov jmp or or cmc lret pop fdivp inc mov mov dec loope movzbl in fisub psrlw js loopne jae adc mov push fldcw (bad) mov lock js scas jnp pop fnstenv xchg pop (bad) or add mov lds mov (bad) and push mov sbb inc adc or das outsb inc out rcl adc xchg adc pushf pop imul pop inc rcrb pushf incl add cmpsb in or sar mov xchg cmp xchg mov dec mov sbb jo outsl adc xchg mov mov (bad) fimull inc shlb jo fsubrs sbb jbe aas push ret out pusha jo movsl shrl movzbl inc xchg inc movd (bad) jne idivb inc in jg in xor iret (bad) xlat mov int iret or out movsb pop pop jae mov mov or loop pusha dec movzbl sbb mov mov test inc mov ss xchg dec add (bad) sets loope scas dec mov (bad) xor cmp xor mov (bad) bound loop or xorl xor mov cmp test roll push pop xchg xchg arpl pcmpeqb outsl lret mov fsub add dec rorb mov mov int mov mov cltd dec pop jns decl mov ret faddl pop leave icebp jmp inc mov rclb aad xor jne shr clc xchg adc popf loope mov mov addr16 jno fmull jo mov xchg in hlt and adc dec out add ret loope jl mov inc mov push adc rol jnp sbb and sub jnp xor cmp std or xor add loope inc pop ja ffree in or sbb pop push inc fcoms outsl in inc pextrw scas push dec jo sbb adc lret sub in inc ss rclb stc jae mov or mov pop inc mov es lods decb mov popa push pop sub pop shrb jle cli dec movzbl sub xor mov mov gs scas mov sbb xchg mov popf mov jo sbb scas fistpll call movzbl add loop repz and das push shr inc mov sti sbb dec jb in mov push test sbb insb jecxz into push mov push xchg movsl in dec add add cmp sub sbb mov xchg pop mov and inc movd test sbb (bad) adc or jo mov xlat cmpsl aaa outsb bound pushf (bad) mov mov xchg cmpsl (bad) jo xor pop cmpsb out enter push rorl scas dec dec fstpt icebp add or push scas imul xor inc punpckldq push xor mov test test push in andl sbb sub shll scas into sbb cmp cmp (bad) mov mov ucomiss subl pusha xor adc (bad) ss iret aad rcr fnstsw (bad) out aam test adc jge and push inc movd xor pop add jle or and xor cmp or repnz xor lods mov ret dec push mov xor pop sbb adc pop push pop cmp lret (bad) into pop xorb out push mov sub and mov push fnop and aaa fsubrs pop or jo addl aam ror mov push out dec stos loop adc fistpl or sub andb cmpsb xchg cmp push jecxz sbb mov fisub bound xlat lock push int push mov add sub in mov inc shlb jmp xor ljmp inc js test mov bound sbb orb out sbb xchg ret js inc inc push lock jne jp cmp cmp xchg cli and inc movq movaps add xor pop pusha inc movaps scas mov mov ja pop jge sub adc add mov aas adc sub xchg lds or sub data16 inc mov cld adc jo lcall in or mov sbb xchg enter imul or enter std mov and push popa cmp push enter and and loope xchg mov call xchg or aas loope outsl scas movsb ret jne pushf scas test pop sbb and repz shl call icebp or xor scas or jo rolb and test and pop push mov lret rcl and rorl xchg mov inc call nop or push or scas rorl hlt inc push scas sub dec mov dec mov dec call sbb bound mov decl inc fs dec add pop pop ret nop (bad) (bad) decl lea cmp ja add cmp dec lea cmovne neg std decl rorb or dec test dec mov jmp xor cmp aas dec jmp andl fnstsw push jmp nop add mov and cmp cmp add pop add int3 dec mov mov cmpsb dec mov sarl lds test pop push (bad) out mov add cmpsb seta les ret movsbl test je adc sti adc fisttpl mov pop ret movd cld lcall gs mov call dec mov dec mov dec or jo test cmp inc xor mov call dec cmp dec mov jbe dec mov dec sub sti (bad) in pop call dec cmp je and xchg pop inc mov add (bad) xor call je,pn or outsl in sbb adc (bad) call adc cmp fmuls call out popf pushf jge call push sub adc mov jmp outsb les push into popf mov adc sub (bad) in bound pop inc cmc das adc ds adc adc pop testl sub outsl loop xor add icebp mov call (bad) call gs jb test (bad) (bad) jmp jle gs (bad) jo aaa cmpb jne push dec rolb fisttp lahf je add push mov fisubrl mov mov decl call dec test (bad) je cmp aaa imul jecxz cmp adc cmp mov mov je and lea adc add lock adc loope ljmp pop and lea ss jmp adc adc mov jg sti sbb mov push pop pop cmp add nop std (bad) mov nop or add popf cmp and and push das aas mov decl mov dec movl mov in inc mov xor lret test jne rolb incl jae das dec lea movzwl add ficom sub leave pop je rolb add call loopne adc adc sbb (bad) jne dec mov add or dec movsl cld add dec fwait mov lcall sub cmp mov xor sarb mov mov mov dec mov jbe into dec sub call iret mov pop dec pop pop ret adc inc shlb mov iret jo and pop jne sbb std out push orl add fildl jo lods nop xchg aas mov das and into mov dec mov je rorl mov (bad) sbb call push lea mov jg sbb push adc mov lea dec mov push rol aas pop icebp call mov mov and pop dec jge xchg mov inc outsl ret jmp ds sbb test adc aam dec sub adc dec cmp je mov jg lea sub sti (bad) (bad) (bad) cmp dec loopne mov inc and test je inc test je inc cmpl ja xor lock sub dec add jmp xchg std orl adc mov mov sete int (bad) pushl mov adc call xor xor and and nopl add add cmpsb sar xlat jno add ss pop lock ffree pop inc fs pop ret jae sub xchg jbe jge outsl adc jno jmp loopne ljmp pop pcmpgtb dec sahf inc push xor dec sahf sbb add xchg cmp cld in adc add adc add stc push jae hlt dec jg pmulhuw jns xchg aam les jns gs movsb sti es test jne fidivr psubsb add jne nopl or pop dec mov ret ud2 das (bad) cmp rcll xchg mov jmp (bad) leave dec and call mov jnp add jge ja into call pop add adc xchg jecxz repnz je (bad) mov ret popf jnp cmpsl and dec mov mov call outsl jo dec lea inc std jl fisttpll xor xchg lea shlb cmove aas xchg scas pushl popa jg dec mov call fmuls inc fmuls dec add pop adc xchg fmuls sbb adcl out dec mov sbb iret call mov mov adc leave mov mov fnstsw or pop dec or dec jno cmp int3 je fadd scas sub and je imul and push dec mov lock ret mov outsl dec mov add stc emms or add and push in jg or inc push cmpsb push lock stc sub (bad) out insl je jle cmp (bad) adc lahf mov ljmp loop and (bad) and (bad) outsb add imull xor mov push adc (bad) out mov or sbb inc cmc into jne ret cmp push push jg cmp or push jle in xchg cmp insb insb lock stos push movups data16 adc add lcall cmp xchg sub mov pop test stc and ja arpl and mov stc and scas or xchg mov jne mov jb jle cmp lea les push insb in cmp jae les stc inc adc cmp jne mov jne popa je mov add adc mov mov test dec cmc out cmp or xchg jne mull jg stc sbb je (bad) jbe arpl cmp jl fstpt test sbb jae,pt jmp inc (bad) adc jle out aaa cmp jl xor mov in inc xor inc fidivrl popl je (bad) fstl adc cmp bound mov and mov cmp or inc in inc xor test (bad) jle lcall ret dec addr16 or fs decb pop or cmp sbb jecxz mov pop or fisttp popf cmp sarb stc adc popf sbb mov mov lahf adc mov loopne xor andl (bad) mov stc sbb sbb lcall (bad) lahf daa dec je stc jl rorb std lea sub cmp cmp cmpsb and adc test mov inc aaa add mov cli cmp jae xor out mov xor lock flds sbb scas lea fwait or inc jbe outsb sbb and fsubs and das sbb pop in nop pop mov fwait outsl mov ss inc das jmp andl out je jmp add repz jne cmp adc sbb outsb sbb imul cmovle pop addr16 xor cmp sbb push faddl or jae jbe or and (bad) pop das cmp js xchg in xchg and xchg mov enter das sub aas xchg icebp leave and out or in insb enter emms das rcrb insb dec xchg stos (bad) or invd or fsts dec sbb out dec rorb fsts jge xor or mov cs nop icebp or xchg hlt das or xchg movsb outsl out mov loope out fs fcoml inc or jg or bound mov stc out sahf or or popf out inc dec mov inc or pop jb pop iret daa adc nop out lcall bound out cmpxchg8b movsb aaa out stos cmc (bad) (bad) fucomip (bad) cs test out bound ret inc out mov inc out sahf or fwait test nop jo out bound lock nop call pop sub iret out fstl out shrb push add out test push dec out lods outsl and addl pop mov inc out movsb ja (bad) xor mov or mov cld (bad) fild fwait nop fadds inc push or sub pop out fnop xor or frstor jne out je out adc sub (bad) out mov ds mov pusha adc cmp mov jmp push fmull mov sub dec aaa sbb sti lods jl cmp loope out into inc adc popa adc sub sbb daa loope arpl xor pushf xor dec bound scas jmp fisttpll aad jne clc cmp lahf nop cwtl dec and lahf loope les lahf cs popf inc in push cmp mov xchg loope mov loope out test pop sbb lahf pop pop out rol inc (bad) lahf and pusha subps cwtl pop sbb int3 xor addr16 or nop or pop cmpsb outsl ret ret jo jg lahf cltd pop data16 call (bad) out sbb fmull cmp ja test mov loopne jnp sub or movsl out sub out sbb lahf push int3 or xchg add rsqrtps pop cwtl or push jnp test dec incl popa pop push fsts push add aas loope push outsl insb enter pop adc popa enter push mov jne das sbb xor sbbl and mov out aas mov mov jg pop lahf inc ss inc lahf sti aas mov nop xor aas dec prefetch or scas or and fsts scas ss ss mov test push pop xor dec mov dec mov mov das add mov dec (bad) mov lret inc idiv jg or push inc push call dec lea dec mov sub mov dec adcl and lea push push pop cmp pop pop jae push pop adc (bad) mov and icebp call add ja je dec mov mov mov inc sub dec loope daa dec cmova dec mov cmp jg (bad) pushl inc xor test je inc mov inc mov inc jb ret (bad) (bad) (bad) decl inc movzwl inc mov dec add test je inc movzbl inc mov dec lea out out incl movb dec mov call sbb or xorl add fistl dec mov inc mov inc xor inc and lods cmp add enter (bad) in dec lea incl pop cld dec add jmp dec add or lock mov dec ror xor inc cld jmp incl jg mov cmpl inc mov jne movzwl mov add pop jne inc mov mov lret jmp popf mov (bad) aas aaa leave andl aas out cmpl jne inc movzwl mov je add adc and shr jge cmp mov sub out (bad) jmp out pop add add dec dec push jo mov movzwl mov scas add sti pop jne inc mov and xlat sbb (bad) repnz adc fsubr xor ja addr16 jmp nopl pop jmp mov add scas pop jno sbbl sti add mov scas call add pop aas dec btc xor or je inc add or mov pop or aad add aas roll and push mov clc mov inc adc jns dec mov and dec cmp je (bad) xlat mov cwtl mov mov dec mov inc and std adc fistp mov dec mov and cmp std dec inc or testb dec mov dec mov dec mov das (bad) mov mov dec mov add jne dec sub dec mov call push loopne and dec cmp jne aaa fsubr mov into pop inc pop mov sub icebp jmp lcall (bad) ja mov out pandn jle fwait jmp inc pop test sti mov mov or test mov jne test je inc or pop daa inc repnz push cli call inc dec movl jnp out (bad) mov scas test je lea dec shl dec idiv dec decl rorb rorb jne ret xor ret mov mov push int add (bad) popf sub inc pop inc xlat pop decl je dec mov pop call lahf ljmp jbe dec mov lret jmp mov sbb icebp push xor (bad) mov sbb dec pop dec add mov adc nop dec (bad) loopne xor dec add loopne xchg outsl mov dec les xchg pop sti jg dec test je cmp je sub mov cmp jbe add out decl or call mov cmp arpl jge push jb dec mov jnp sbb dec (bad) cmp (bad) xchg push aaa cltd add jg dec (bad) popa (bad) fimul sarb test je mov gs jne cmp je add mov and pusha loopne cmp ss or mov mov dec lea dec arpl dec add jmp mov pop add pop pop mov jle out int3 (bad) mov mov jo dec inc (bad) jmp movl sub (bad) or cmp xor jmp aas setae cltd sbb shrd nop mov add mov shr adcl mov inc push das jmp add xchg xor jmp out dec decl push insl and out pop push sub and in inc pop ljmp mov aad (bad) push and fildll out fild popl lea sbb js sub rcr mov dec mov or lods (bad) je dec jae mov mov inc aam mov mov xor call jmp clc jne push inc sub add jmp add lea dec cmp je out (bad) jae testb jne jmp aas or mov sbb dec lea clc scas jnp fld1 cmpsb or xor clc pop inc add sub dec sub dec mov push mov add repz stos lods adc add scas or je (bad) pop bswap push das mov sahf pop in loopne pop movl mov mov sti or daa dec cmp je (bad) dec pop push mov sti jmp cmp jno (bad) pop dec lea or xchg (bad) xadd dec call jmp add add outsl flds out sbb lcall pop add and shrl mov loopnew adc test jne test jne jno push cmpsl mov push popf jmp sbb mov sbb sbb dec pop add or loopne cmp xor lods unpckhps push (bad) addr16 out push inc mov lahf mov jl xor inc add add and lea je mov add sbb inc and mov inc (bad) mov and inc out lock push (bad) sbb inc add inc jl pusha movl rol cmc outsl out mov call add or incl cmp loop cmp loopne or cmp add nop push push or sbb cmp ljmp pop push je test jle les inc mov add adc pop jmp scas lahf sub mov dec push fdivs lret jne (bad) incb outsb lcall sbb (bad) je mov stc ret mov rorb dec cmp scas cli out dec lea (bad) or (bad) adc in test rclb lea out mov inc mov mov cmpsl add sahf outsl mov (bad) bswap and rcl mov iret sbb sbb mov mov neg xchg popa inc cmpl je movsb lods jae enter inc push out mov sbb test jne sub inc mov in sbb inc add dec jo mov jo pop mov jae push repnz out pop inc fwait add jo lahf sub gs (bad) out (bad) mov call call call sub daa sbb fucomip adc scas add hlt add nop addr16 insl sbb ljmp xor jg in inc mov (bad) cli cmpsb or int insb xchg decb jns clc cmpsb push and xchg dec mov mov add add add ja xchg mov call cmp outsb jne int3 call jg mov clc jb (bad) jg pusha pusha loop decl in je or decl lea inc mov shl add add jmp sbb and sbb dec nop rorb cmpsb jg adc sbb push mov push imul add jmp nop dec mov dec dec jmp call add leave fsin push add nop test lock mov loope pop call dec sub dec mov cmovb xchg aaa (bad) sbb movl clc (bad) aaa sbb xchg pop call nop dec or lock add sbb les push mov inc add xchg pop and xchg arpl (bad) mov dec lea dec shl dec lea jmp fisttp jge mov push sub pop inc dec dec add dec cmp je xchg out int dec lea mov ret or aas mov inc xor jmp dec mov jmp outsl clc adc adc push xchg inc out outsl jbe cmpsl pushf (bad) mov push cld test jle xor sub js dec lea sub cltd dec mov jg (bad) cmp stc pushl dec xor call bound mov or sbb dec mov cmp dec test (bad) or mov mov fidivrl xlat sbbl push mov (bad) das or and lahf cld in lret bound call push sub add adc lods out add inc cmp test mov dec movl sbb jnp lea sti sub sbb inc dec out inc adc pop scas xor mov in outsb push addr16 lea sbb cmp lods push mov lea inc scas (bad) jo mov (bad) mov mov aam ss or cwtl test or jbe cmp aas or or inc mov call and out mov out or mov jp incl ret (bad) int add lea ss lea fld1 sub (bad) incl mov mov sub and jne loopne push icebp incl rorl dec mov add nop xchg test xchg mov scas adc cmp adc in mov add sbb mov jb call inc adc xadd call push int3 sub or aas fcompl xor mov call scas inc std (bad) jo inc lea or loope shll insl add sub xor (bad) (bad) fnstsw add int3 jle add dec arpl sub dec lea lahf push adc dec add dec lea iret dec add sti jmp mov mov jbe xor mov jmp or and cld out pop lea ja sti imul aas mov (bad) out mov add nop or clc add mov dec mov sbb fisttpll sbb test lea xor jmp ja or rorb cmp je add imul cmp jne dec and call add lds add test jne or outsb ljmp and pop testl shrb mov xor (bad) loop pop insl dec mov pop xor fmull sbb cmp repnz jg mov xor or dec lea inc jg clc (bad) dec mov cmp jbe fbld add incb jne dec lea (bad) jmp outsb test mov mov adc fs test hlt inc inc mov pop cmp and clc mov mov aas pop push pop adc outsl xor add pop pop dec jmp nop jmp inc fadd adc mov mov add jmp jmp inc sub dec lea inc test inc mov adc add xchg cmp add int cmp jle inc cmp push or arpl jne fistl push adc mov sti mov xchg add sti sti loopne movl jbe (bad) adc nop pop add outsb insb push ljmp adc jl xchg add in xchg fucomi push inc mov (bad) mov std (bad) decl leave jmp jb dec mov shlb pop nopl push xor inc or or jae jg mov and cmpl je scas or (bad) push add push jo jne jmp (bad) fisttp cmp in cmp je dec sub icebp aas ss add xchg rcrb cmpsb mov xchg pop xor dec lea adc lret inc mov dec cmpl fnstsw mov cmovne inc pop push aaa cld cli popa popf je jmp dec lea sub mov bound andl sub roll lahf lds mov cmp fucomip inc dec mov inc xor cmp dec mov out mov decl dec cmove cmpl ja push arpl dec fcomip sti clc add jmp dec sub pop popa sub dec test dec mov std fucomp clc jne adc test mov cmpsb faddl cltd cmp lea jle loop flds (bad) daa cwtl cmpsl sbb lock or out call andl std adc xchg sub inc adc add dec add jmp (bad) pop push pusha stos mov adc inc ja mov inc mov rorb test or mov inc incl jecxz mov movsb mov jb jne pop cld xchg nop iret lahf mov loopne xchg jg lret shld mov je imul mov and repnz clc incb add adc leave add imull mov add jmp sbb lret lcall rcrl ja (bad) std fdiv (bad) (bad) jmp repz insl mov adc jg fisttp cmp je push psubusb test add insb xor add in outsb lods lea shrl div add jmp adc pop and ja jg stc movsl in nop dec mov ret adc fidivrl bound xorl or or mov mov add jae call jg jo fnstenv mov cmpl push js mov sbb movsl or jne loopne pop dec push addr16 jno in mov call jo jae aam pop xchg lea push sarb lds xor sub hlt idivb jmp mov pusha out ret pop jl sti mov nop jl test fcoms xorl pop (bad) sbb fsub push inc mov jge popf push jmp icebp adc and cld jnp pop es mov jge popf mov (bad) inc push and cmp lret push fidivrl call ja (bad) and test mov (bad) fimull outsl imul test arpl mov test cmpsb (bad) mov popl insb leave jne enter inc and test mov xor jmp cmp push into sti scas out gs cmp jae repz bt int mov das mov push lds adc packsswb jne orl pop mov lret mov packsswb or out gs fisubrl push psubb pop insb clc into lea call rolb jbe adc das fild (bad) (bad) sub cld (bad) cmp cmp ja mov repnz add add dec add jmp dec mov jp xor je jnp mov mov xchg lret mov jmp jle jmp inc pop mov rcll jmp dec (bad) jmp decl cmp mov jmp (bad) xor dec sub leave push sub fidivrl lahf cmp jle push jg mov dec mov inc mov cmp push sub mov movl mov dec adc xor cmp inc (bad) mov ret dec ret fsubrl dec and sub xor ja out call xlat call call or ret jge ds dec mov inc add repnz xchg clc mov iret sub cmp je or hlt lahf pop les ret call or pop das jmp arpl pop add aam aaa loope scas mov dec fnstcw jmp and stos pop aam outsb sub test jl call scas dec ret pop sti pushl cld push inc mov dec mov inc mov xor mov inc mov scas pop and add add jle pop pop and dec lea fisttpl inc (bad) (bad) fmuls pushl adc adc pusha xlat std fist dec and icebp dec mov call dec cmp push call movb in dec ds adc lahf test fwait pop mov call aas test mov negl mov stc dec mov jle cmp mov or cmp pop inc mov cmp mov je jg adc out sbb (bad) bound stc sub fwait mov out je xor mov cli xor popl mov xlat push fisttpll mov cmp push mov (bad) jg fist adc add ja add je cmp stos sub jbe mov stc fucomi or fcoms pop ret cmp sub test add stc pop or jg adc mov call adc dec in add stc pop or mov stos ret cmp mov inc fbld push in jle fistp pop jbe (bad) outsl icebp (bad) mov stc or jo fadds jmp stc xor rorb test sub (bad) lahf cmp (bad) mulb jg lea pop je cmp jne call lcall out outsb mov je popa adc stc or xchg jg std outsb (bad) adc loopne mov pusha xor addl andb push jg cmp out mov mov inc jno je cmp pop out jne cmp gs (bad) mov or popl push sub (bad) test xlat sbb or arpl inc roll mov sbb mov mov je frstor jg outsl je jo loopne add bound add lea aas pop mov pop jbe jg push or mov dec cmp enter push jnp aaa cmc je jg inc je push jne push mov das add lahf push je sti fstp fnsave inc push je inc or push mov cmp mov jg lea add out cmp jmp and jg bswap fnop fisttpll add sbb lea cmp xchg gs mov stc adc cmp icebp mov mov ret lock les pop ja in je int test jmp stc stc sub int fadds jmp mov cmp je je negl test fisttp je fmull loop adc push out ja cmp je add mov stos pop push je insl lock cmpsl or test ss xor aam mov stc cmp xor and ja inc leave pop or or cmp mov das jne bound gs cmp jnp sub jmp and xor inc popf or (bad) sub call mov stc inc pop mov sbb sbbl test mov test mov sbb lahf mov insb test les in or les push das add sbb subl and data16 dec pop add mov jmp ja adc lret sbb push les test stos sbb add rcr push pop out dec (bad) call cmpsl (bad) je dec lea decl mov pop cmp aas or jne fcomps call dec sub sbb pop push fstpl pop je fucom rcrl or sbb jg dec mov roll pusha and adc sbb rorl sbb cmc cmp dec mov pusha inc orb out dec std iret cs je xor sbb and mov pop je dec lea dec mov dec mov call inc fsts incl xor inc mov dec sub dec lea push cmpsb xor (bad) mov lea dec lea aaa call out psubusw adc mov xchg dec add jns push mov (bad) push incl jmp xchg mov push jl jmp leave (bad) iret cmp lret dec mov pop pop adc adc sbbb lcall jg mov je (bad) mov pop jne cs dec mov add call out cmp orl int3 mov loop sbb mov jg or mov prefetcht1 call inc in adc mov push dec jmp outsl lea fstpl lea dec lret jmp cmpsb dec jmp ficom add inc pop scas cli outsl mov and sbb stos out mov mov xor movl inc cli cltd and or (bad) xchg mov dec repz mov loop (bad) mov sub (bad) xor inc dec mov ret data16 and clc sub lret dec mov inc mov scas daa mov or dec mov inc movsl mov addr16 inc jo incl je cmp inc outsl test add rolb and mov mov mov sti (bad) (bad) push push repz xor or inc call lea dec arpl fcomip or pop (bad) je out xor lret arpl mov push cmp mov dec mov call jne test pushl out enter and aad pop lea inc std out adc cmpsb sub ljmp lret sub lock stc jne mov loope dec movl call xor jmp ss inc jbe lret test dec mov shll (bad) call mov flds mov inc aas sbb aas inc add fldl inc mov out mov ljmp mov ja gs inc (bad) mov inc mov xor cmp (bad) cmp (bad) jl adc dec mov dec out call mov inc xor test call lahf or xchg jb or fnop aam pop dec lea sbb sarb mov inc shr push adc iret push out push or or loope push dec cmpsb sub push xchg jmp xchg inc and inc mov mov sbb jg call addr16 je xor stos loop or sbb dec (bad) call push lds (bad) (bad) dec jmp mov adc pusha call mov push (bad) dec mov mov inc in xchg inc adc lahf sbb in adc sbb xorl mov call in lret mov push xor rcl sahf xlat out dec xor pop leave je call hlt faddp adcl push inc je test jne fs out call out or mov call call inc xor mov mov jmp cmp ret pushf push push xor sub add mov (bad) ficompl push inc mov mov mov cmp nop mov mov cmpps jne out dec dec inc not icebp xor cmpl je call or roll or jp or (bad) in pop popf ljmp fist popaw inc mov add divl jecxz mov je inc pop inc movl jne test je test jne or inc mov mov dec sarb dec mov push bound out dec cld jmp mov dec mov call mov dec mov or mov inc lock aaa popa stc call outsb scas add cmpl decl test test test pop in rcr push inc mov dec lea lahf xchg in in inc or inc jb push adc xchg daa dec xchg (bad) je mov mov adc out mov test je adc add or lock pop inc mov outsl push daa mov add jne or xor sbb dec mov inc call xchg (bad) jmp mov call test jle call mov mov or dec cwtl dec mov jl sbb cltd mov daa (bad) out fistpll dec mov dec mov push in into cmp jmp lahf in inc mov push add ja (bad) lods outsl call dec cwtl jmp sbb cmp aam mov es dec in mov inc das or pop sub arpl inc fcomps mov dec mov jmp xor loopne lock test mov cld imul mov mov cld and jns or sbb jle call add test sbb outsb test dec add dec cmpl aad lods push jmp out roll mov add dec mov inc lock adc (bad) (bad) jg inc add lea sub and jne mov xor shr movsb clc ljmp add mov push xchg loope mov cwtl jmp (bad) mov add shr lea dec arpl dec lea cmc jae pushf fdivl out fs cmp repnz mov aaa xchg sbb jbe mov shr data16 add push lcall loop cmp inc call test inc aas in fildll test dec dec arpl dec add call test push inc mov jmp sub in mov dec inc mov stc call jmp pop (bad) jbe je xor dec or rorb aam call je cmpw jne dec sub dec ja std ja or dec lea call jne lea aas cli jne dec mov iret hlt sub add outsl dec mov call (bad) jmp sbb rorb dec outsl jge arpl jo jg fs shr call fistpll mov jne push adc or rorb dec xor lret dec pop push adc (bad) pop fstpt dec jno cmp add adc inc push mov jmp pop into mov cwtl jnp iret js aaa jne call jbe jb sbb mov jb jmp or fildl jmp sahf frstor sbb js jo dec mov ds xchg pop jl scas dec loop or jmp and mov add aam cmpl push adc inc push or sbb rcr dec mov dec mov enter leave pop iret xor dec lea mov dec pop call cltd outsl mov cmp fsub jle add nop mov jmp xchg push (bad) jne test jne dec repnz dec push ljmp adc and fmull hlt mov mov add jmp jg (bad) iret and inc mov adc inc pop dec lea and testl cmp dec mov arpl lea push sbb notl je sub sbb call dec cmpl push adc jmp ret scas rcr lea push inc negl fisttp mov adc out cmp inc push inc mov das (bad) gs out dec dec mov std jg int (bad) dec mov dec mov inc mov fiaddl dec xor pop xchg mov ret ficom call dec arpl test pop (bad) fist ret dec mov xor dec test je das (bad) decl dec add leave call (bad) je push (bad) mov mov aad or inc mov dec call cmp jne movb test add add pop sbb dec pop sub fisttpll scas bound inc mov fsub mov scas (bad) out (bad) jmp mov cltd call adc call mov push call mov in testb adc (bad) xchg add mov xor sub add test (bad) pop and fist pusha lret enter and cmp or add ret mov push ret mov pop and add push pop shr cmp fild jbe pop jne cltd into std jns aas jne sub mov and inc or loopne inc sub data16 jge incb clc sbb xchg jno or jne je pop loopne or or jnp rorl aad push ja dec mov call cwtl push add ret xchg xchg insl push jnp mov jbe outsl fidivr dec add jne push add jne push pop jne jns lret jbe xchg ja and cmp out fdivrl mov push jne ds test mov jne loopne or inc jne (bad) jg mov inc or add rorl adc mov adc mov in jmp push je dec nop dec or and (bad) lcall add popl cli add mov aad rorb pop loopne (bad) ja and mov pop add mov ffreep sub adc clc decl jb cmp dec xchg fs insb mov and aaa xchg inc mov insb fnsave mov dec lea sbb cmp je js mov add out ljmp inc call cmpl je iret push xchg pop and mov jge push (bad) and movl and test or jb fsubs cmp ja ja dec mov int3 dec or (bad) decb leave mov jg in je or dec cmove dec mov aad xor sbb dec (bad) mov sbb fimul jp add push or and dec testl mov mov ljmp jle ljmp rorb rolb sub inc imul stos cmp fs mov sahf jnp (bad) jo xor push fdivs mov push mov xor inc (bad) enter ja dec mov dec cmp xchg xchg sbb loop les js orb dec cld aaa (bad) aaa ds or sar incl sub dec sub inc imul out mov jae push inc mov (bad) adc nop out mov sbb xor sbb add cmp cld push mov jmp mov or mov jge rcll cwtl push pop inc ffreep or dec lea mov call jo cmp int3 mov cmp jmp ret orl psadbw jge mov test xor dec out psubsw adc jb cmpsb popl jne adc cmp (bad) jmp jne and jne call ret sub fs stos fadd mov call nop adc dec enter (bad) fld1 es (bad) (bad) jmp scas mov pop pop or add ret and sub inc mov fimul into xor call mov mov call loopne aad aad pop test cmp add xchg ret das not and adcb movl inc mov dec lahf mov test je and or mov and aad cmp jg rcrb push cmp jmp popf std icebp scas fsubr sub addr16 jle or pop dec push add mov movl std je mov lret test dec (bad) (bad) clc sete movzbl sub test je or add (bad) (bad) decl test cmovne mov and cmp je and test call test cmpl inc mov mov faddl rorb sbb add push add ret roll mov sahf xor pop lock xor mov jmp xchg jg inc mov sub adc mov lret leave xor push mov hlt jmp lock cmp jo int3 push arpl jmp divl cs movups cs mov les add xlat cmp jne and or add test loope push add dec mov and jmp pop arpl jno or ja aas adc cmp jne das add mov add dec jmp sbb fidiv call mov push mov cmp enter push xor inc push jmp jbe sbb adc mov add fsub (bad) jmp mov xor incl jmp aad cmp jg fidivl lods add (bad) sub dec dec add adc loopne fbstp call out ja cmc xchg rolb push inc mov xor popa (bad) sbb inc lods xchg xor (bad) pop pop adc xor or pop test fldl cld rcrb call jne dec fwait dec mov je std decl test inc es xchg in xor ret aaa push lds ljmp inc dec mov fstpt or sahf jo jbe je,pn mov dec add ja rorb pusha mov fmuls stc dec mov adc ficom dec add decl mov cmp inc mov inc call add call ret inc mov jne jle in test ljmp stos addr16 or je inc mov dec mov int cvtpi2ps cld pop xchg addl shrl mov or add fldl cmp dec test adc into mov inc and jmp cmp ss sbb jmp add cmp cmp cmp push stc loope addb fcoml or mov sub jbe add pushf sbb xchg out or adc sbbl pushf aas (bad) test fucomip aam sbb xor popl add loop scas mov and xchg or in (bad) jno loopne sbb fsubs loope inc add xchg push int (bad) jg aas xor mov add adc push xchg xor push (bad) mov mov and pop pop adc les cmp jl pop sbb lock jne sub sub sub add call (bad) cmp (bad) xor sti mov add mov mov stos xchg jae test fs cli je test das adc or icebp js (bad) jg mov test dec mov jne mov xchg inc and add pop lods dec nop cli adc inc call (bad) mov mov jmp ds das call inc xchg jmp xor es mov pop pop cld call add add push imul push mov ret popf fwait adc scas popl inc mov sub mov aaa xor cli push sbb xor rorl cwtl add gs in inc outsl adc add mov jmp rcll mov nop ljmp mov and jmp movb dec outsl popl loop lcall or in and jb add nop cltd iret lahf out loopne or sbb clc add or or lds dec push cld aas jge mov add adc push incb cmp fs push sbb mov dec adc mov xlat mov movsb setnp mov adc sahf dec mov dec mov inc or add ret test cmp hlt add fmull pop sbb test pop addr16 cli decl dec dec lea dec mov pushf jg mov lret rolb shr dec mov (bad) (bad) (bad) decl shl dec sub dec add dec sub dec cmp inc movzwl dec mov inc mov cli jnp (bad) jne jb dec mov mov gs call adc test clc xchg add test push mov out jmp leave (bad) (bad) mov lret aam mov call xchg sub popf (bad) call jmp int3 and fwait imul ret jge add sahf in cmp (bad) xor std xlat and call mov xchg (bad) mov (bad) (bad) ss leave cwtl scas lahf cwtl in add jmp dec add jmp out pop lea inc mov call aaa int3 bnd jmp cmp pop ss jmp mov loop bound mov or mov sub or add mov and dec fcomps rolb aaa or ficompl shrl mov and push les mov or mov jmp lock pop cmp inc cmp test mov clc mov add xor cltd sbb adc or sbb mov in inc xor inc xor dec mov jg (bad) jae popa xor dec mov (bad) add inc mov adc mov shr test mov je jl add add lea je jmp jmp cmpl jne popf xchg dec mov dec test jne dec test jne nop mov or fstpt movb icebp sbb inc cmpsl cwtl mov mov popf fcom arpl add adc test (bad) mov fstpt mov (bad) (bad) call jmp cmp dec (bad) fwait push add test dec pop jne inc cmpl clc xchg lea xor lds into jae push pop fadds dec mov sbb loop mov fimull lock test dec mov je or decb xchg dec pop ret mov add js lea hlt call lds test dec lea inc push dec or test addr16 add dec lea dec mov jp stos xchg xchg jo add jl out fist sub jnp lods and adc mov mov inc xor add cmp and imul jo mov jne adc lea sbb aam add es inc push jmpw mov rcll cmp std jl mov loope mov and cld movsl in test popf push aaa std dec mov jmp cmpb cmp arpl andb jmp jae das jmp inc rorb in out mov cmpb add jl mov add icebp mov call mov push repnz cld adc ret or adc int3 std jge mov xchg adc divb adc mov sub fist dec test je add or call mov jne and xchg or mov mov call orb es scas aas repnz and call dec test dec mov cmc je orl cmpb out push lcall jmp jns jge sbb call add mov dec mov add call mov mov cmp subb sub jb cmp jmp jmp fstpl or je add push jl sbb mov in mov push jg cmpl iret dec lea xor ret xor mov ret add inc cmpl insl loopne mov rorl or push inc and xor jg mov dec movl js add movsl test sbb mov mov call aas aad les adc inc sub jle (bad) mov rolb cltd push jmp lock pop pop push inc movl out jmp add push xor dec inc call pop dec or adc js adc gs mov cmpl (bad) dec lea aam js xchg dec test push sub sub xchg in aas push sbb outsl jmp sub ja pop cwtl adcl and ret iret rorb test lahf jo fnsave aaa jle push test mov jne in outsb imul sbb shlb mov call sti repz (bad) jmp rcr call xor mov (bad) inc push inc movsb cmp jno insl sub pop out inc push jmp into pop mov cmc inc cmp mull cmp out pop mov push jbe js adc mov gs or sbbb push dec sbb or pusha addr16 sarl movsl dec mov dec mov xchg es mov (bad) loopew aas mov lahf call icebp add test jg adc inc mov call pusha cmp bound sub call je inc cmp je adc jo or xchg fwait mov mov inc pop aas mov je and (bad) (bad) aas cmpsb je movsd repnz movups or jg mulps adc ucomisd jae unpcklps (bad) ljmp mulsd dec mov fidiv lret fidiv push fs jae mov daa (bad) sub inc and xor mov cmp adc cmp or xor mov das inc adc lcall cli push ret aas jmp adc dec mov je lahf rcrb jmp loopne or loopne icebp cmpsb sbb shr ror test or rorb cmp xor mov cmp loop adc popf fldt call fwait mov jmp mov jo ret shl fcomip pusha xor inc mov loopne adc js mov (bad) faddl mov jmp lcall sub jle pop in push push js jl popf jmp push push cmovns or ja ret imul cmpw je dec lea adc push (bad) test je and das je add arpl mov cli add (bad) jnp nop mov pop test adc push lahf dec adc xor ljmp imul ds dec in xchg mov ljmp xchg push add decl mov inc and dec mov cmp cmc dec movl lods in lods in (bad) dec ss pop jae mov das test ret test in dec aad shlb out sbb enter inc out imull loope adc test dec mov test ljmp mov mov in dec pop mov inc push xor lock aaa stos out sarl add cmp jo or jmp gs mov mov aad shrl mov jg test outsb and clc ljmp jl nop inc mov call jmp cmp xchg test pop scas jecxz and push or out (bad) adc (bad) (bad) sbb leave push imul adc adc aaa dec mov dec (bad) mov or aaa push mov mov add xchg jmp ja pop dec pop cmp inc aas push pop popf sub add mov call call pop xchg jl xor cwtl insb pop call mov inc pop push mov inc jmp ja dec mov dec cmp repz adc jo push xchg test pop push pop je cs aam cmp xor jp (bad) fist mov jne jmp call and cli inc mov dec fcmovnu cmp ret call test add cmp jg mov ficom cli dec cmovbe (bad) out loop add mov jne dec arpl push call je xchg xchg scas das jne js cmc adc movsb imul inc lcall adc adc add ja sbb adc and mov (bad) xchg cmc push enter push je shrl jne fnop jb in add leave (bad) in repz ss (bad) jb mov add cli sub ret dec imul cmc roll fs test in loope mov dec into sub scas test xor and in cmp into bound clc rolb fs scas xlat stos cld js dec test xchg in clc or outsb mov jmp cmc jno dec pop jge inc test jne dec lds decl add add leave je and push rcrb jmp nop inc decl cmp jne cmpsb jae mov movl lods pop dec dec es lcall cmp je mov or pushl inc mov inc call test je jmp lods fisubr fld mov add fcomp jg xlat mov add pop pop (bad) in jb,pt adc outsl jmp rcrb pop cmp aam add (bad) jmp jp xor push stc roll dec lea jg jmp xor and xor inc mov test push xchg mov lea in mov or subsd or add call rorb jmp mov rcll insb xchg pop pop mov clc mov cmpsb (bad) pop popf call xor ficomp ret sub ja cs fld movsb daa dec repnz test imul out push push and jmp cmp loopne sbb mulb xor inc xor or std fmull test js mov fdivrl cli inc add in outsb test inc outsl sbb je lds mov je fidiv lea fwait inc mov shr add xlat mov ja dec lea lea inc pop or lea add xlat (bad) pushl mov call xor out js stos pop adc mov pop icebp xchg mov ret jge sub mov dec mov call mov std cmp jle movzwl and mov out and or jnp cmp test sbb fs pop adc (bad) stc lock decl movl sbb test loop rcrb add dec xor jmp addr16 cmp testl xor stc xchg jo je push data16 and xor sub cs cmpsl jge xchg add mov and or roll aad xor dec adc sub xor inc mov in and cwtl stos popf xchg add push xchg mov cltd call push inc fdivl xchg xor ret or push inc mov ret fwait jle je mov inc mov stos dec lea shrl inc inc jge iret add icebp lds sbb fadds mov inc xor adc or and dec mov inc jp rolb lea decl cmp mov dec lea aad (bad) jmp mov inc lea dec mov inc mov inc movzwl pop push neg pushl (bad) in dec mov dec add inc movzwl pop je dec arpl sub (bad) push rcl inc cmp dec lea inc add das (bad) (bad) (bad) pushl test inc lea dec lea jne dec mov inc mov dec mov inc mov dec mov jmp inc add dec lea dec lea andl roll add mov inc add inc mov pushf insl add divl fwait or xor adc je in out mov sbb jmp inc mov (bad) incb and arpl mov dec arpl cmp sub jg fist dec add movzwl dec je sub in (bad) incl dec arpl dec add cmp dec lea das je or je inc (bad) (bad) (bad) (bad) (bad) (bad) pop add lds dec mov inc mov dec mov inc mov dec mov pop std aas fsubr cmpsb fsubrs lret add testb jge movl push pop inc lea out (bad) (bad) mov lea add add lea mov mov xor fild icebp fisttpll push xor movl (bad) data16 sbb inc mov cmp and mov mov mov mov sbb cmpsl nop dec loope sbb cli (bad) xchg mov add loope pop cmp or cs mov fist inc call dec mov sbb into call lret (bad) fistp sub in shr nop mov xchg loopne js ljmp call jmp stos in dec and mov sbb or inc je mov je jo mov and mov repz xor loope cmp ss push sahf imul add jns repz or push cmp add mov in bound nop adc dec (bad) pop add mov add inc pop out add stos xor pop push add fsubl cld push out adc add cld adc or add and jecxz dec in sbb add dec fsubl mov jmp ljmp and push cmp pusha test popa fadd cmp call adc inc mov mov loopne mov lea jb or unpcklps cmpb dec sub mov or addl lock dec test je adc adc rcr pop mov call jmp fmull unpckhps sub pushf call lds stc cmp lock mov mov pop inc ss and sbb repz call into cmp push ror (bad) out jle je jg add test inc xchg jmp pmaxub fwait dec mov cmpsl add mov jmp decl add xor dec add dec cwtl dec add jmp inc add cmp (bad) cmc out pop je add xor mov cmc xor cmpsl pushf movsb scas push ds dec pushf xor add pop adc rcrb jmp (bad) call mov sbb (bad) mov (bad) push orl sbb les call scas aaa mov cmc roll jns mov pop mov and inc pop ds rcrb in mov push cmc decl push jg mov and leave dec mov ficom rorl push orl pushl adc je cmpl dec mov insl jne je,pn or and bound addl cmp je call inc adc adc add pop ret or or adc rorl or andb jg call jmp outsw mov fdivl xor movsb push jb mov pop out mov in pop in enter cmpl stos add dec sub cmp xchg and test aad lea call out inc mov inc ret or sub dec or dec mov lea fdivs rolb sbb out mov adc fidiv jmp adc or jnp adc dec mov negl xor (bad) les call stos punpcklwd fimull inc and mov xadd jp bound ss mov xlat ret test stos jle clc dec arpl dec add jo adc pop in sbb dec decl jge push movb push add dec test je or mov cli or (bad) je sub adc test dec jno call inc mov dec lret decl cmp jne aas add pushf loopne js and enter mov or test inc sub pop or add es es inc xor or inc daa sub inc shrb out in lea and dec iret ljmp and dec lea add push xor in rolb push cmc decl adc sub pop faddl add out sbb shr enter and incl (bad) sub jno out inc (bad) jg call rorl pop jge adc test jge ss sbb orl add push xchg cld ljmp xor dec sub add dec cmp jne dec jle jmp (bad) scas or mov call push mov out jmp cmpsl and ss xchg or in cmp imul les movaps in hlt or inc push int test fwait or fsubrl lea ds or movl jae inc xor (bad) ja shl ljmp adc fcoml dec lea cmpsl add in or dec mov add mov pushl lea dec add sub and mov mov dec mov dec mov inc or sbb pop sub sub call ret dec mov call xlat mov dec js (bad) nopl jmp sbb adc iret negl mov inc lods xor into je push ret test xor sbb outsl xor inc test dec test add inc shll je popf cmpsb je jo lea add inc mov mov mov out dec mov dec cwtl (bad) loope mov call insb cs icebp and pop add jns subl test scas or add ret out sbbl loope call mov loopne rcll push and fdivrs cmp push mov xchg rorl test inc mov or sub orl fild jecxz xchg mov pop mov js mov aas fwait es xchg movsl mov dec mov lods mov rcll inc mov inc movl dec test pop dec inc movl out or xchg test sbb sbb jb ret mov mov or aas iret add mov lds test mov orl pusha add cld pop insb loop add fwait je mov xor xchg sub leave cmpb inc mov xor jo (bad) cmp out jne rcrl in ret or jne sub jo add dec lea inc arpl jge ret cmp mov inc pop inc test jno pop stos aam test add std mov leave mov movl js xchg cmp loope in push mov sbb dec fcompl jmp add adc adc je xchg scas (bad) decl (bad) dec outsl ret or sub dec mov call dec cmp xlat scas cwtl jo jle jmp xchg les and pop xchg mov dec inc dec pop jg and int3 adc mov jnp movsb and lcall pop inc mov mov mov xchg mov fs adc sbb xchg adc jo add in xor push sub gs xor repz xchg (bad) jns loop xchg clc pop scas sub xor popa roll scas in mov ret (bad) stos jle hlt mov sub popa xchg js lea jb xchg popf in sbb sub xor and and test sub xor mov adc ret sub faddl (bad) (bad) aas push bound mov movsb arpl decl daa int3 in add stos stos add pop in ja sbb fild xchg sbb lahf movsb popf dec jmp add lahf lea shrl or sub stos mov (bad) cwtd cmovb scas cmp dec mov dec mov je xchg push or and and mov andb sbbb jo sbb decb testl movl dec mov jecxz push push dec mov cli call push outsl inc lea dec push add mov jecxz jle lds in dec add jecxz in pop sbb or jp and (bad) pavgw mov mov stos neg mov mov loopne (bad) mov dec cmp negb jmp mov call add movsb sahf push or int3 je mov sbb mov mov add into fist ret mov mov jnp or ret jne or popa aas jmp jae popf icebp call aam (bad) (bad) aam jmp enter pushf push cmp mov xor xor jmp lahf xchg pusha add mov (bad) pushf cli push jg add sbb push pop jg aaa inc scas mov inc testl and sub jns js pop cmp jg mov jae aad push jg and pop sub je xchg xchg jl jl sbb pop cmp pusha clc jg aam (bad) jno or mov jg push jg and (bad) or cmp jg and out and mov cs mov adc xor dec cwtl rcll add add fwait sbb cld xchg jae je sbb in test in adc es jg jbe add mov adcb mov sub sarl hlt add leave sub sub inc and lds jg cwtl jno fiadd and ja mov pop jg xchg fistp xchg add in fsts add jne (bad) sub push sbb xchg int3 dec mov cmp fwait dec xor add xchg xchg push test pop and dec mov and mov clc popa loope in adc or push or lea push lock jne ret inc or pop adc je or add (bad) fnstsw call dec arpl dec cmp jecxz sbb cmc mov je mov sbb xor sub add mov pop jno data16 lcall dec pop cwtl sub lea je add mov lcall ja out fist dec mov je mov stos sbb shl push push mov pop inc and inc pusha xchg sub addb inc cmp orl cmp clc dec lea sub mov mov cmp push dec call (bad) xchg add mov and cmc mov dec mov inc pusha add jnp (bad) xor sub cmp shlb adc jnp idivl adc push inc cmp je xchg stos enter mov idivl call dec mov outsl mov test dec xchg add loopne xchg je sbb and fwait adc ja mov or push mov dec mov dec aam and fwait rorb dec mov call and int3 aad jle adc xchg dec movl jg jne pop mov pop fildl or xchg adc mov mov sbb jno mov jp jg or xchg popf repnz mov cmp aaa xchg insl mov repz call repz sti inc xor xor add cmp cmp inc xor jmp add aad fsubl movsl test lcall mov dec mov call dec sub dec sub dec cmp lahf loope jne (bad) lret jmp sbb int scas imul ror pop dec aam add xor sahf insb aaa mov fcmovne jmp push pop add add and and dec mov dec je dec aaa inc jo mov mov je (bad) or call inc (bad) jp inc mov inc xor outsb out lock mov or add shll inc adc add add clc dec mov (bad) mov movl xchg rolb mov (bad) fistpl push pop out je (bad) (bad) and dec mov arpl mov push rcpps dec lea punpcklwd ds test mov call or cmp je adc mov or jp aam xchg jle scas or pusha leave ret xchg outsb out pop xlat jmp test dec xchg (bad) sub test mov nop sbb inc cmp roll (bad) cmp xor in gs addl jmp add and mov mov and dec sbb and in (bad) cmc mov fsubrl adc test enter (bad) lahf cld dec dec mov add dec mov decb test orl rclb dec lea inc xlat sbb rclb dec lea push or mov xchg (bad) jmp adc inc mov mov call sbb test and mov xchg fstpl dec test jne cwtl sbb das fsubr jle mov scas or push popa in push mov cmc xchg adcb mov add std (bad) xor mov mov cmp inc xor jmp mov mov push mov cld repnz push lock aas xor addl test (bad) js xchg fimull outsl in call mov jb outsl dec cmp sub sti add cmp and mov mov out pop mov pushf xor scas iret cmpsl inc mov (bad) xor add mov push inc mov nop sub pop pop or xchg or pop or mov jbe cmp xor lock fdivs inc push push pushf jb ljmp lods xor adcb dec mov sar add xor fcmovnb faddl (bad) jns xchg enter dec xchg lea inc push mov mov xor ret call jbe in pop push and bound fisttp int mov dec mov inc push push sbb dec iret mov lods jo lock add imul and and dec and adc mov pop outsb or cmpsb push mov cld mov dec mov xlat sbb jnp dec arpl cmpsl dec add dec cmp cmpsl sbb jne outsb pop outsb or or popa xchg cs je out pop add cmp shrl mov add dec repnz inc pop sub sarb stos pop popf aad lea dec add mov xlat in dec adc mov dec gs mov inc cmp enter jne stos dec rorl popa leave mov jne mov rolb adc mov mov call lea add call and cld std jne dec mov mov lahf and cmpsl xchg sbb jmp cmp adc test movsb mov cmp mov int3 loopne mov push dec jmp das jmp add mov xorb adc pop enter dec lahf int cmp les mov test or cli xchg and adc loopne mov sbb loope fadd dec xchg call test fdiv bound aad je clc pop inc sarl ret cmp jo in mov call int push cmp add dec imul dec out sub faddl addr16 add aam je js cmpsb pop and mov xchg rorb and cmp and test or mov sub js loop scas out dec call add pushf setg scas dec ror cmpsb sbb leave jg jns or shl test nop into adc scas out and sbb je pushf mov lods pop push add inc shrb sub pop je mov and xor cmpsb xchg loope sub or jp push adc sub movsl movsb repnz ret xor sti movsb mov sub or call ffreep push cltd imul (bad) jmp and jmp jo or xchg rdmsr sbb ret inc mov jecxz or (bad) sub scas sbb cmp jb iret or dec jb cli cmovp in nop pusha pop cli scas push xor sub icebp add xor fwait mov adc scas or nop fsubrl push rcpps movsb pop dec jo iret inc adc or xchg push dec into decl mov jg cmpl decl push and jmp decl gs or push xor add dec inc xchg or out xor inc gs dec (bad) push and lahf pop sbb push sbb and cmpsb cmpsb nop adc mov sbb outsl lret cltd jl jo and jle jl fistp xchg mov jbe daa fild xor xchg and and or mov in loop or and bound or jecxz shld add sub aaa and andl inc sub cwtl fildll inc test out jg jge pusha pusha jo sub test pop stos pop test loop sbb xchg adc inc xor adc in bswap lock jg pop push mov jg jns sarb test push adcl xchg mov xchg std jmp push and dec jg mov sub and stos sub adc popa repz push fistpll mov dec test jg mov test inc jmp and or ja test sbb imul and in inc inc jg jbe lcall pop scas setp or inc inc add mov cltd pop movsl js jno adc insl lahf add xor cwtl jne mov lahf adc (bad) or test cli aad in pavgb adc test adc sti daa adc xchg xchg hlt mov pop cli cmpsl rol and cs push push sub add and inc pusha ror ret pop add add mov dec sub inc adcb mov cmp mov lret ret scas leave cmpsb add add enter shr mov (bad) pop xchg add and xor je inc pushf fild pop pusha test jg mov dec sahf xchg mov dec pop dec mov nop mov inc outsb popa gs prefetch loope rorb dec mov iret adc or (bad) ja (bad) xor add dec stos inc mov and int3 adc test (bad) nop adc je adc add pop or push mov dec and jnp test fwait add (bad) sbb mov call jmp and sbb orb add adc sarl adc push push sbb adc test pop or fwait enter cmp or jno xchg sbb loop jb sub pusha sub stos pop pop nop pop loopne call lcall xor fwait xchg jo lea shl push cmp lods jo sbb jl xor dec mov jl orb testb cmovo std mov push sub xchg add aas and add inc push sub push or mov xchg push push and call sti pusha pop xchg dec add jmp ret inc cmpsb push ja rclb jmp xchg adc or stc jb ljmp (bad) aaa loope jmp add jne loop orb je xor cmp sbb cmp stos pop or sbb or push sub rcrb or (bad) adc push xchg mov or lahf xor xor pop ret lahf pop dec cmp jne xchg adc dec imul enter nop mov outsb push das xlat outsb add inc adc add rorb (bad) (bad) inc lock add mov addl icebp pop jmp and roll les push or sbb push jnp fsts xchg jnp ss or or mov add daa sub outsl inc jmp or or ljmp dec and fild das adc loopne xchg test int dec mov and add (bad) daa nop jo sahf (bad) test loopne push add add and das lods dec ret lahf iret pop pop gs daa xor outsl add add push jo test and rclb jg pop cmp xchg push inc mov fidivr mov insl mov and ret jg and (bad) cmp sbb cmpsl mov push jg sahf dec or gs inc aaa cwtl rorb jg pop pcmpgtb add mov inc cmc test and test ja lods adc jg push pop insb mov call and adc or xor negl sub xchg loope dec movhps pop push jb or pop inc push mov cvtpi2ps cmpsl fwait dec cli movups insl movsb mov in fwait xor xchg inc dec pop fwait xor pop dec cmovns xchg pop jbe punpckhwd dec sub push outsb addr16 addb xchg stos es popf call or dec or push cmp rolb popa or test (bad) xor and cmc cmp (bad) cmp adc mov out or jae cmpsl push dec add jns imulb ret mov pop cmp add inc pop mov sub inc cmpsb or jg add mov movaps movsd rorl je dec int3 inc mov scas addb xchg add or roll add dec dec popa in or and sub jp push addb adc icebp fistp push mov call xchg fistl pushf je movsb dec inc ljmp inc xchg and sub cmovb lock sub add xlat lock add mov repnz movups or add je insb sub dec and mov inc cli (bad) pslld dec mov call sub push mov pop mov jmp add shrb jns add popa mov or inc data16 sub and dec push mov outsb ficoml add sub adc dec ret dec inc arpl lock cmp popa lea and and xchg xor (bad) jmp mov stc je cmp sbb push subb sbb pusha call and pushf mov (bad) jb or xchg add addb jmp mov lahf stos lock subb andl test jae xchg adc and test adc xlat inc nop loop push in jmp stos mov mov push jmp jg lret add mov dec lea insl stos cli decl dec xor (bad) incl jbe inc push ret je inc in cs ljmp mov add lcall jg xchg inc adc sbb cld dec sub sar rorb xor mov or inc aas adc inc movl jae daa outsb aam add add dec mov sub (bad) dec arpl loope inc and cli scas ja lds test dec dec stc mov sbb (bad) dec lea and dec lea dec (bad) sti mov pop add inc add mov mov or dec test mov or mov inc mov dec mov dec movl int3 pop xchg pop stos mov xchg cld je dec lea movl push and icebp dec mov call (bad) scas (bad) or and roll and dec add dec mov or or xor popf push mov jle rorb dec cmp jb add pop push mov mov adc pusha dec call push (bad) or movsb dec cwtl dec add and stos mov dec mov dec fbld mov dec mov inc xchg shlb cmp cmp pop dec mov call cmp loope xchg dec mov pop clc scas jo (bad) enter and rcrl or push mov scas aas add aas popa dec mov dec mov mov adc mov hlt sarb inc sar push pop dec mov das test add dec push add icebp loopne inc pop xor and lock movl jne arpl lahf dec lea mov scas fdivr mov test or mov add arpl js jg dec mov fisttpl test call (bad) push mov jo jns call jmp or fistpll lods and sub dec mov jmp pop sbb mov je call out fcomp (bad) mov mov call mov jmp js sub or out cmpsl pop dec jmp aaa (bad) inc lahf pop mov add dec lahf test inc scas xor jmp leave add push jmp (bad) xchg mov test jle mov cmp add std add stc sti pop mov sbb (bad) jmp cmp je jle bnd inc lds adc mov adc fildll (bad) mov add fisubr cmp mov ss dec xor test jne das inc mov sbbb das mov add dec jbe dec mov dec mov aas cwtl incb jecxz movl dec dec call mov out xor add (bad) sti cmp test or push mov js test cwtl xlat inc pop inc or dec push ja fidivr iret je or sub pushf mov mov mov lock mov jnp icebp cmp add jnp (bad) sbb je mov outsl cli jmp icebp xor add dec lea dec ljmp and loopne test bound mov sub sahf cmc (bad) cmc jg ficom inc dec loope test dec arpl movaps call inc add lea dec test cmovne cmc pop sbb hlt into cmp xchg ret (bad) jno stos into fimull je iret or dec mov lcall shr pop cmp (bad) sub jb int mov out mov fiadd ret jg dec mov dec mov fldenv mov dec repnz lahf sub inc mov dec mov mov mov stos mov mov or inc roll (bad) loopne fadds adc adc adc inc mov dec lea dec stc out aaa hlt jg jae dec mov dec mov loopne dec mov dec sbb mov je or subb dec jmp call dec add decl inc mov inc xor jmp test jge adc dec mov jnp scas cmp icebp sub and (bad) mov adc xchg (bad) jle out cmp cmp test ja cs adc jmp addl cmpsb mov fcoms sub add xor adc jmp mov jmp cli clc cmpsl daa jg les call (bad) (bad) cmp dec or cmp mov je cmp xor (bad) je cmp mov mov out cmp pushl pop ret dec lea push mov rclb push sti push scas scas stos call mov and cmp (bad) dec pop addl add jne sub lock js sbb xchg ja adc pop out outsb jbe arpl dec add jmp pmulhw or inc or jg out push pop pop jmp lret rol adc mov iret push push adc lcall push add mov mov and mov push adc pop push movsl xor jo iret mul out pop mov je test mov repz push inc mov in call pop jmp mov call jne xor sub fcmovnu jne sbb inc mov xor test or dec jo frstor call add call test inc test push mov movl inc mov and mov jns outsl push scas cmp fs call mov out scas push inc mov loop clc jo jmp fs mov pushf iret xor add out sub jmp or sbb inc mov adc stos movsl add nop dec xor (bad) loop cmp add xchg rolb xor nop flds (bad) dec (bad) aas inc test jne dec mov dec mov or bound push and cld and push or inc jno packuswb test mov (bad) addb pop or fisttpll mov cli push inc mov add mov (bad) jmp iret decl int sub (bad) aaa lea mov mov and testl jb es inc adc js pusha jbe mov jne inc je clc pusha sub mov sub push push je dec mov test pop pusha dec mov jne jmp shrb loopne jge or xor mov iret or pop push jmp jbe push aad mov sbb into jg or sahf data16 (bad) lret stos (bad) pop and lahf rcr push inc mov pop test je dec cmp sbb (bad) pusha dec mov je or jbe fucom in push stos in inc push push xor jmp ret push mov and and movsl mov jae sbb push mov leave pusha scas test rcr pop movsb pop sub dec mov jne jne jbe pop mov dec rolb mov mov lret xchg inc js pop dec mov sbb js push jo shlb popf xor jne sbb pop dec call (bad) (bad) mov push push out push inc mov jns pusha push xchg jmp add adc ljmp sub push and cwtl push add stos inc xchg into gs mov inc andl or lcall xchg add cmpsb push mov pusha and inc jo lahf ja inc lods cmp push loopne add mov mov incl fwait mov jg xchg pop or orl jne adc (bad) mov pop bswap inc sbb clc clts (bad) mov arpl push inc mov sbb push push cmpsb pshufw or push dec out packuswb mov dec (bad) xor and cmp setle inc jo push inc jo push sbb inc inc mov jo jno adc adc add or or cwtl add pop cs or pop mov mov bound into mov test sub push icebp or (bad) ljmp fildll inc pop int subb aas inc pop andl call incl sbbb xchg mov fild mov jge dec mov and cmpsl push push fidiv or adc into inc das mov call test jne testb je imul fist loopne or jnp lock insl inc ret jge add outsl inc sbb fdivs pop std inc adc rolb inc adc jmp ljmp inc add push je mov mov mov (bad) call push enter push dec in lret sahf mov jge test adc mov add test lock rcrb adc jmp mov (bad) testb lret je push pop pop cwtl aad add cmp jmp lea (bad) call xor fbld pop ds bound scas setns or out push inc mov add jmp lcall subl add sub inc call movl pop inc mov xchg sub sbb mov mov mov jne adc out cmp pop pop mov inc pop dec iret cmp in loopne cmp inc test repz add add sbb mov jg mov popa mov ret pop insb pop push addr16 push imul inc mov jb scas mov test (bad) outsl or mov paddw mov and xor mov mov mov bnd (bad) cmc out out jne mov test mov mov (bad) jo push pop rorb (bad) jg mov pop add adc xchg cld je addl das ds fstpt sub cmp or add mov ret jb cmp adc jae push lcall test jle cmp aad mov and inc dec sub adc popa stc and fsubrs pusha pop add xchg jbe insb dec mov push inc mov xchg call daa dec jmp movsb mov adc mov movl jae scas mov (bad) (bad) call dec cwtl jmp pop outsb ja mov push inc mov pop mov and loope mov sub dec mov aas dec inc cld dec xchg sbb mov js (bad) fucomip or mov jne push pushf cmpsl inc mov inc inc mov dec rorl fdivrs rorb add test mov pop roll test jno fwait xchg sub push jp dec (bad) fbstp cmc jmp pop inc call int3 adc decb inc cmp cmpsl inc inc inc int3 popf test cmp out xor pusha sti cmpl xchg add add mov pop mov pop adc pop ja inc pop jbe and ljmp mov dec mov jno mov je stos rolb pop leave je orl jns mov sti mov and rorb test xchg jl daa popf cmovno lock movsl dec jecxz ret (bad) mov call and call hlt mov outsl adc decl and jne mov mov aaa push lock inc or dec mov loopne mov les rorb or and xchg mulb mov lds ja lods sbb sub or std (bad) cmp call dec mov call (bad) sub test mov add adc add push pop ljmp pop (bad) xor lea pop aaa into mov out adc add aas mov shr ficompl dec ss aaa pop push xchg and adc pop add loop roll rolb jl push mov mov and (bad) stos mov add adc loopne mov stc push (bad) incl adc add iret das (bad) sbb (bad) lahf data16 loope mov pop jmp (bad) movntps adc jo mov mov cmp mov rcr jae cmp add test je rorl add inc sarb fisttp ret sbb sub mov daa fisttp dec inc adc addl mov js (bad) xchg mov and adc jl pusha or mov mov clc dec inc xor enter adc mov fcomp lock mov pop add adc mov call je mov std add test or jmp mov pusha aam dec lea cmp sub pop xor dec mov into outsb cli icebp dec lea cmp sbb add ss and mov rol or add adc xlat rcr mov dec mov aaa inc fadds xor xchg dec shlb sbb daa aas sahf call push add outsl mov inc dec xor jmp orl mov or fstpt ds sti lods sbb loopne test cmp rorb les (bad) lock adc dec mov aas push xor xor fnstsw mov call into pop stos jle cld push mov inc add out sbb mov faddl mov rol insb (bad) mov jle fstpl loopne mov aaa add fbstp jno mov sub inc mov or xchg call in pop ja adc inc lods xchg out jmp insl (bad) mov add clc inc rcrb iret fcomp (bad) jecxz add out add pushl adc jo sbb (bad) sbb push sbb loopne jnp addl ds (bad) in xor dec and movl or pop or insl or mov mov xorl sub ss jne cmpsb std fisubr push testb jne clc daa dec mov sbb add push data16 mov lea aas sub or inc outsl mov cmp add iret and pop cmp aaa (bad) je dec mov dec pop rorb inc roll pushl call or jo xor js vmread sbb outsl (bad) xor or inc adc mov or iret enter cmpsb inc and pushf je and jb lea inc cltd jbe add jmp sbb call (bad) mov mov je dec mov rolb pushl dec mov sub lahf clc icebp dec mov sub sbb xor arpl pop pop inc (bad) inc fdivrs lea dec outsb sbb add jmp adc inc aas mov xor cs jge pushf jne cltd pop repnz inc mov jo aam jmp stos mov scas jg mov dec and je mov or dec cwtl xchg aas lea pushf jg das inc iret mov fcompl cs ret xchg (bad) mov inc xchg xor call push push xchg call hlt cmpsb and dec mov add cmp je dec mov pusha mov sti dec push cmp add js and mov sarb fucomi aam adc ret pop (bad) lea dec inc bound in pcmpeqd (bad) lods dec mov mov mov adc xchg add pop add add call sub cld pop xchg pop add cmp ret data16 call cmp je call and out js rclb cli add xchg inc and xor mov inc and mov adc add lahf inc jl dec fwait leave dec xor leave mov dec mov dec out adc or xor icebp test je add or cmp popaw jmp or pop lahf mov cmp test pop adc push xchg jl xor stos jne dec ljmp push rorl dec inc add cmp bound or jmp dec push ret mov inc mov inc dec imul push sbb (bad) push out imul movsb mov jmp adc cwtl jmp fistpll inc lahf or xchg add cmp leave std xchg add jmp pop (bad) daa shr dec js addr16 and pop mov or push mov call fdivp daa sub adc adc (bad) cmpsl inc push dec jo popa loopne ror dec mov dec mov adc fstpl enter call pop (bad) jg decl test sbb jbe in ret adc push jo out pop das xchg subl mov cld addb std cltd cmp lock cmpl es lahf cmp ljmp jne mov cli pop (bad) jae adc or xor mov rorb sbb and (bad) stos incl dec mov mov cmp pushl sti insl je push and add call clc popf sti icebp call jle call js mov arpl loopne pop cmpl or adc lods and add pop sub jl dec cmpl scas sub dec mov adc mov bound jo packssdw movl add popa add push pop push in jo add lret add jp scas and pusha scas or dec movl clc add test test test testb jne xchg adc test pusha push inc mov pop sub ficom or mov call pop les test out mov xchg and test adc mov inc pop adc or push or add sub in dec mov hlt (bad) pop out jne leave dec movl loopne scas adc in pusha das or call pop jb fiaddl je (bad) jg adc lea mov and cmp dec ja fstpl rcrb std (bad) incl mov mov lock pop dec movl call mov adc lea lock test mov mov jne pop test and cmp je icebp decl inc and and dec add dec mov inc in xor les inc imul cmp xchg add inc and mov nop sti sti decl and cmp push and xchg xor mov dec mov cltd xor push mov dec mov rorl pop fimul inc xchg in cmpsb lret inc push jno lds clc xor add ss dec add icebp jmp jo ja daa in in in mov test pop jne inc (bad) jbe (bad) sbb jb clc mov adc out jne or mov mov test add adc cltd xor js or es clc mov call test or inc in push lods dec mov call jae mov sub fs cmp mov cmp push or and add gs into mov inc xor inc mov dec add les sub decl inc cmpsb fnsave inc in call add push dec adc adc cli jmp add pushf pushf or pushf mov testb adc pop pop (bad) xor call and adc je test out gs push xchg sbb (bad) (bad) inc imulb adc ljmp call (bad) jmp sbb jecxz dec jmp ss jns out xchg aas inc ret call movb inc inc jne or loopne cmp dec into (bad) out lea jmp ja or lods inc and cmpl inc add test push dec lea mov inc adc inc mov jmp (bad) pop test xor mov fadd cmp stos inc mov lods cmp pop xor xlat sbb mov and psrlq jle in xchg pop push and inc les pcmpeqw dec dec cs mov jge mov xchg jecxz test call xor icebp lea inc add aas jo and call mov mov out jmp and aam jne mov mov (bad) std test or and cli call jmp call fdiv (bad) (bad) jmp pop out (bad) cmp pop ret clc cmpsl xor adc jmp adc add sub sbb mov add xorl mov fsubrl bound test ud1 fcompl xor dec call (bad) jne xchg jmp add pushf call pop les mov call in jne hlt dec inc clc jmp sub dec jne and (bad) cmc pop pop adc jp (bad) hlt call xchg mov std iret jge and add sub in je or mov adc faddl xor lahf sbb add movlhps jmp pop mov (bad) mov dec pop dec call xor fdiv mov sbb cmp sbb js xchg xorl cmp and sub mov dec divl scas jne sub lahf sti cmpsl fidiv adc popa call ret inc pop cld push lea movsb push aad (bad) dec test jno loope je pop daa iret lahf mov call dec daa jo mov sbb inc mov inc dec dec inc adc movsb dec mov call cmp je jbe inc pop add test sub hlt fs rclb cmp sbb inc sub mov call cmp loop lock inc xor leave cmp lahf inc cmp or cmpsb fmull adc jmp jno (bad) je cmp mov inc inc loopne stc mov adc jo jecxz gs aaa loope loop lea into call mov add test adc cli popa (bad) out lahf inc mov dec lea inc test jne lahf xor jmp pusha lods das push mov adc inc push pushf and shr inc add inc mov sbb (bad) jmp sub (bad) je lea dec cmp jb stos jo hlt add mov sbb xchg test shrl dec dec add jmp cltd (bad) mov adc call aaa std (bad) decl dec mov jo jo nop push lock mov inc mov jl xchg loopne test dec lea (bad) inc cmpsb int je add xor (bad) inc andb inc mov and adc mov pop pop dec sub int3 dec das or push cltd xor add push in jo outsb cmp scas add add mov dec iret (bad) dec add lea lahf aam in scas loopne xchg inc scas add sbb push clc imul add jo imul (bad) dec nop jnp mov adc decb cld or (bad) pop or out sbb mov or push cld dec dec or (bad) cld or loop and test jg pop dec mov push rorl mov hlt dec lea (bad) dec mov scas and mov into or shll cmp push sbb cmp sbb ja (bad) ja mov je cmp jne inc (bad) cmp push call add mov or addb js sbb push add xor mov std cmp dec pop xchg insb aaa adc dec mov jl dec mov push (bad) fild cmp adc sarb je dec mov add ss sub lock cli dec lock stos incb mov xor dec call or xchg cmp call and jmp push adc outsl pop or sub jne (bad) loop mov es roll mov pop mov mov push fstpl cmove test xchg push add clc xor add pop adcl and lock sarl subl and mov add rorl mov loope dec pop ret xor or dec lea dec cmp mov stc sbb int3 lods mov or sbb dec pop rolb cmpsb dec cmpl je daa pop lret fnstsw lcall dec mov call (bad) inc js test ja add sub jg rorb ret or test jne dec mov or mov dec mov or subl pushl (bad) je mov test jne add add inc xchg lret aas cmp cmpsb test mov dec mov dec lea cmp cltd loopne mov popl mul push push add cmp add inc dec mov mov mov dec mov call aas andl pop dec cmp jne mov movl addr16 fidivr adc adc xchg lea pop cmc sbb sbb movl mov es xchg jae sbbl pop inc add sub dec rclb or je pop ret pop dec mov (bad) ds cmp test icebp fstl ret add cwtl sti (bad) idiv loopne lea call imul faddp aas gs dec lea adc xchg out cmovbe rorl rcrl ret jmp pop sbb loop adc xchg fcmovnb add insb cmp jne loop pop rorb dec mov dec mov jo push xor clc jns out dec aas jb mov jns out cs jbe cmp imul testl daa xor int3 sub cwtl insl test mov sub mov shrl inc stos ret adc pop je and (bad) je and lea inc jo sub orl and in pop push push or dec sbb sbb adc xor cmc mov das cmc test ja pop sahf lret jae inc or call aad inc js jmp add divb cmc xchg ja (bad) dec add add insl (bad) (bad) dec cmp imul test push mov call lea (bad) arpl cs mov mov insl cmpsb jae fstl nop push lods sbb mov cli subl (bad) ficom xchg mov mov cmp mov cmpsb sbb jmp xchg out (bad) cmp push pop cmp xor lcall jmp imul call adc mov cmp sbb xchg pop das sbb shrl les jne or push add pop lods ja aad scas incl cmpsb mov imul jne leave std dec test je test dec arpl inc dec shl call cmp (bad) sub mov ds dec shl dec lea fisttpll ret movl inc jb incl scas dec sub dec mov push lock add decl dec cmp jne xor outsl mov xchg pop shlb sbb aam notl ret dec stos pop nop jno test pop add and mov dec xchg call mov mov js ret inc adc inc rolb clc scas incl or adc inc jo mov dec mov dec aad and into popf ljmp rorl mov call push xorb add jle inc test rorb aad (bad) and pusha clc (bad) jmp loopne push jo lea xchg xchg je call addl mov nop dec mov dec cmp or idiv adc jb cwtl and xchg xor mov call outsl lret adc cmp jne mov sbb mov xor xorb dec fcomi jnp lock xchg mov or hlt jecxz loope mov push movl dec movl jne js mov dec mov or aad mov sbb icebp mul mov xchg je jle shr (bad) pop and lds dec aam test lock mov arpl mov popf dec imul jle movzwl cmc mov das mov dec mov sbb push or jne pop mov or (bad) jl sub test pop mov jne out cs test or push int3 or add push xchg movsb pop ret jg mov lea call add cld adc add dec mov js pop aas adc jne adc mov movl adc add fwait add mov push sbb mov or test push cmp cmp sub lods ja call and add dec push das mov inc aaa inc jne pusha mov inc or fs popf and inc iret sub roll idiv and dec push in and dec pop dec jmp es imul adc xchg or cmp cmp call je call dec arpl jmp sub jmp pop pop xchg sbb add inc dec mov call jmp xchg popa push add lahf out shl adc fisubr (bad) ret and jne add loop jle pusha inc jnp cmp (bad) sbb xor aaa jmp fsubrp lea sub mov pop inc jne fild adc jmp int3 and push insl popa aaa stos xchg dec cmp jmp pop mov (bad) jne push sub sub lea jns push dec das outsl testb jne mov jmp cli (bad) ds dec add add xchg sbb lcall rolb add jne popa push pop icebp add push and cmp and das add sub call test dec and sbb mov lds or and dec pushf mov push add inc inc and popa adc add mov dec mov cmp sub insb into jge pushl jo movl cmp gs iret add cmp les jne mov sbb adc in iret adc out mov call add je dec fnstenv add aad ss adcb testl icebp test je mov jb hlt incl jl mov jne mov cmp lcall pop loop test idiv daa decb jne je mov and subl sbb fistl adc mov mov ficoml mov mov test jne test je mov and std jg incl inc je or sub enter dec les pop push jmp inc push mov dec mov inc scas xchg jbe je mov and mov aaa fstl call pop jmp popf loope lahf dec jns outsb subb adc xchg mov add enter and xchg dec or sub inc test mov jmp (bad) scas out shrb xchg jnp loop (bad) (bad) lret jg mov mov test cmp xchg push sub dec cmp je shll dec mov inc mov or cmpsb call or (bad) cmc push call dec (bad) or scas mov pop (bad) out xchg jbe pop loope mov mov pop mov dec test je dec mov clc pop outsl dec shr mov jo dec pop stos sbb inc mov inc sbb sbb sbb xorl inc inc and loop inc mov inc xor mov add call insl adc mov (bad) sbb fdivrs mov mov (bad) sub add sub in hlt scas cli decl test je dec mov mov ds movb mov jne add (bad) sub je jl mov lcall add inc mov inc test mov dec jb cli mov je pop mov loop mov dec cmpl outsl mov scas xor xchg jle xchg dec xchg roll or sti sbb sub clc dec sub call cmp pop cmp jle pop pop lahf cmc (bad) out and imul mov or inc and dec pop adc adc jmp daa add lea es adc push fbld dec and outsl lcall xor movl jbe aas cmpsl pop inc mov or xor addl add push mov and jle loopne add mov mov decl aaa arpl lea rorl inc test jne fiaddl gs out mov xchg test inc cmp mov dec mov jne dec call and cmp jg arpl test in add jmp pushl arpl inc mov int3 lock iret jns iret mov jmp cli adc in push call add mov stos js ror clc cs addr16 and call sbb les imul movb sub mov cmp cmp je decl push jae or and arpl inc pop add add jne outsb ret xchg lret andl aam scas sub cmp sub push js (bad) push dec add dec mov mov ficom ret call (bad) je dec mov dec cmpsb mov or mov mov lea or mov int into add test (bad) movsl dec lea aas out subb dec mov sub addl mov mov (bad) pusha inc loop daa fild push je outsl sub sub fldl fstps faddl pop lahf adc add call dec cld add std lcall jne or mov add mov sub (bad) fild dec mov dec lea dec (bad) jo icebp je dec mov mov sbb es pusha loopne insb and push push push out je sbb mov mov xchg adc mov adc aaa pop nop in add aas mov mov dec mov test or jo mov xlat sbb add inc inc mov mov imul mov clc pop jg je xchg dec sub dec cmp push jbe mov inc mov mov or scas jmp call dec pusha pop js jle mov loopne call xor add mov and in ror je mov mov push and adc (bad) sti rclb push push data16 outsl add test loop and pop dec std mov dec inc cmovbe mov adc dec out lock mov sbb outsl cmp psrld fisub adc mov push jae pop jmp mov mov xor call mov push jae dec mov mov sti mov pop cmp jbe daa add popf cmp add add std (bad) cmp loope add add mov inc js or jne mov shll pop inc inc fcoms or inc jl pop scas inc push push and jmp movsl iret cmp fnsave mov das pop jo xchg popa jmp pop mov inc mov pushl call and jb mov cli cmpsb or sub inc push dec sbb pop addr16 jae pop jns add mov sahf cmpsl ret pop mov shlb inc pop xchg ds push inc fisttp or add out fidiv mov adc mov adc flds test push lea std add iret ja mov js nop pop scas cmc out lods sbb inc mov mov push sti ljmp mov add or pop lds sbb add aas add and (bad) (bad) fdivr adc idivb ret or push mov cwtl loope pusha fcomps in (bad) cmp dec mov ret mov adc dec pop mov ja mov jle mov or xor pusha jnp inc mov push cld call inc sbb push adc inc pop out mov jb sbb adc je fnstenv mov call xchg hlt (bad) mov sbb or dec je iret adc add adc jl xor jl (bad) je adc mov inc pop add (bad) cmpl xor mov call push scas xchg pop je cmp subb cs inc push test iret dec inc enter mov jbe add mov imul fwait ret inc xor icebp adc test fld pop jb lea mov pop fsubrp cmpl je sbb das push aas inc and call icebp pop mov and jbe ret test or xchg dec mov out pop sub enter push xlat test sbb fnsave pop sbb jae ret (bad) das xchg cmp mov dec bound pop push push or push stc jb xor loope pop sbb sbb in rcrl jecxz pop test xchg cmp mov jmp pop nop jg pop sub sbb jle inc inc mov sub add dec mov add das jmp subl mov xor lret xor sub mov rorb sub sub (bad) jo or cmp insb loopne dec jne add add js dec xchg orl mov or inc lods mov pop nop stos mov inc pop mov test mov or mov js aaa adc dec inc js mov mov mov decl sbb adc fadd inc xchg mov addr16 pushf jg jb pop out mov les fistpl fwait adc (bad) mov iret iret ss (bad) jmp adc mov aam push jmp adc xor iret in loopne add dec jne call dec iret and jne xchg pop je lods inc dec sbb push adc and es lods shlb mov insb push aas push mov add xchg jns into cmp add xor sbb test fcoml insl or stos scas mov jno or dec pop std dec cmp lea (bad) and clc mov mov mov call push adc test sysret out and sti loopne out mov mov gs (bad) fimul je stos hlt test test dec dec mov test inc push sbb je fiaddl adc arpl and push mov cmpsb push je call mov stos cmp mov call fldl and push adc call add test (bad) mov loope call jmp xchg jno daa or pop mov lahf lcall mov add mov mov pop call jo or cmp adc es xlat or ret loopne push arpl adc cmp or inc into or and inc mov js,pt fwait decl dec sub mov cwtl jle add nop out js imulb adc jg das in out out cmp inc mov js xchg (bad) ds mov mov call mov mov por pop push jo sbb (bad) incl fcompl add pop mov or mov rorl jo mov push shll sub cmpsb bound sub jne xor idiv fist add shl mov or subl mov loop cmovne call dec shrb xchg loopne call jle js pushl mov in jp lahf push jne call lods add push mov adcl and adc lock decl je hlt fcomi mov or rorb imul mov inc add jmp rorb stc push pop cmovns and push sub pusha out (bad) icebp pop lds addr16 dec mov mov insl sti jg aam pop add outsl call mov ret call stos arpl sub sbbl push mov dec jo decl cmpsb sub xor into (bad) ljmp ret jecxz pusha rol ret jmp inc pop add and pop mov out xor outsl xchg (bad) xor test je addl insb clc add (bad) notl mov inc rol cmpb psubb roll mov lea nop dec lea movb fisttp fwait and cmp (bad) (bad) jg mov dec in popa push lock js sub jmp cmp dec adc (bad) mov jb cwtl sub add jge call lea add (bad) sub (bad) rclb mov xor cli cli in dec movl cmp arpl mov je rorb mov call sti sbb or jo cmpsl cltd cmp and add test dec xchg in jo jbe jne stos dec lea ret iret jo mov pop adc mov shr test (bad) jbe cmpsb call icebp imul sub mov add cwtl push scas add or inc pop dec loope add or loope jne movzbl sub (bad) popl outsl add fdivr adc cmp inc (bad) lahf fbstp adc in sub fdivp mov jmp scas addr16 jle or inc or push dec add jg mov jns addl movsl sbb or push pop pop and mov jo mov mov sub inc mov rorb push inc mov cwtl call or pop pop push jg shrb call movzbl add push push push mov iret inc mov and test maxps sbb pop adc add push cmpsb mov dec lea push in adc cmp lea scas repnz out (bad) into and adc je clc jg rolb inc and xor into sbb test xchg pop lock jge jne and daa je and ret sbb xor pop jne incl mov dec (bad) aad mov outsb stos fcoml and xor dec xor icebp xor clc adc test push nop sti pop or ret rcrb pop fsubr sub jmp adc or mov pusha mov popf jge mov outsb mov orl push cwtl or outsl push mov out daa imul push out andb mov fdivr jle popa pop clc jmp rorb popa fbstp mov push pop sub insl mov inc mov fmull je mov outsl cwtl stc dec dec lret push lret fnsave inc mov loop lds fadds xchg mov mov das push or mov addr16 sub mov xlat mov push cld call int3 ds inc push sbb mov lahf push mov push push inc mov out call mov xabort jg mov mov je test jne dec test je aam movzbl hlt or test jne imulb in out cmp cmp push xchg js mov inc (bad) sbb loop jmp in ret mov mov adc add ja dec loop or lea ja (bad) fidivr jmp (bad) (bad) pop push fisub and push pop (bad) ret fldcw aas out push aaa pop loopne nopl stos or jmp mulb dec lea xchg pop das test stos ret mov das iret cmpl mov movmskps push inc mov out and movb pop mov outsl test or push ficom test mov (bad) fstps fimull stc (bad) (bad) fistpl (bad) (bad) mov pop and jecxz cmpsl (bad) push mov sub nop insb add adc in sub leave xor inc cmp add adc xor xor scas xchg movl sarb mov fucomp xor ret call adc add nop scas jo ljmp fcom rcrl push dec mov pop inc xor sbb mov js xor pop adc or daa push xorl out mov sub dec cmp je adc xchg mov decl incl xor dec mov movl aam inc pop lea cmp inc lcall and push sbb inc and ja dec mov dec mov mov inc sbb loopne (bad) dec dec imul call cmpsl push je and cld fsubrs push adc jne jmp aas fbstp rclb mov dec mov dec call or or enter enter dec add cmp jne inc cmp add leave dec lea dec mov mov test je cld decl test clc cmp jo rol aad je push dec mov mov sahf (bad) and fsubrs and push adc mov dec mov adcl stos testl (bad) xor or or pop inc mov mov insb and jmp popl ds (bad) insb fnsave adc (bad) jle add jmp iret and icebp jnp xlat push adc add and stos bound and aaa mov popa dec ret mov je push jecxz and xchg inc xchg sub mov jns out jl push inc clc inc lock mov add jnp lahf dec mov cmp fbstp dec xor fcoml into dec mov je add mov dec mov call (bad) cmp je fmuls call jo jne (bad) (bad) rorb call sub add push (bad) push dec in into clc sar pop repz scas orl shrb cwtl add cs jg or fldcw testb dec mov jne popf jge xlat call jne sub pusha xor in sbb fwait cli imul and jmp xor fdivrl call adc cwtl rcrl call dec mov es adc (bad) lea sub hlt or je mov test dec or cmpsl decb mov leave pushl cmpsb in or inc dec inc movzbl inc not (bad) sbb inc and je rcpps cmp push jne lret pop incb je cmpw inc dec icebp xor outsl or popw popf test into add jno mov jg dec lea mov mov test je inc mov (bad) (bad) decl je inc mov and cmp sbb and add inc mov loop mov mov inc or inc test cmovne inc and sbb loopne je test cmp test push push jg,pn test loop fidivrl or adc incb nop inc test je ds sbb hlt inc js scas push sbb mov dec imul outsl movsb (bad) (bad) jl (bad) incl mov les adc arpl add (bad) push cs add push jl fisttpll je add jle xor sub or test dec (bad) xor jecxz adc jmp mov sti adc dec js pop adc iret arpl xchg daa lahf mov pop repnz (bad) call cmp outsb ljmp orb test jb push jmp dec jmp sbb ss adc mov int lea inc mov and pop sti add dec inc je mov sbb xchg xchg (bad) jg jg ret or fwait outsl ret add mov xor repnz jne xor mov test and dec pop pop ret sbbl pcmpeqb xchg test mov dec je push mov decb sbb sub sbb call dec push dec and stos cmp arpl call ljmp adc sbb out inc in sbb push sub outsb mov cli push ret push loop ret arpl in xchg or add std inc adc stc cs mov or add popa test jne fidivrl jge bnd jno jnp movsl aam push or or scas adc iret mov mov adc add (bad) mov dec daa nop or sbb lea dec lahf (bad) inc aaa and iret lahf test je mov shll imul pop pop xchg test inc lock fist jg icebp clc add scas test test add xchg mov mov bound les pop dec mov or dec jg dec (bad) es xor dec mov dec mov or or pop push rolb les arpl cmc pop dec mov jle dec push rcl (bad) pop lds mov rorb mov (bad) cmp jbe out add push inc mov mov and out les push (bad) loop dec jmp jg or cmp jno (bad) ficom mov add cmpsb ljmp int xchg inc add pop je xor call in or sbb out fisttpll sti add inc cmpl lcall dec and dec add xchg or lock (bad) mov repnz cmp call stos cs add test dec pop add dec mov call test (bad) fisttpl cmp jne test call lea je ja ja je cmpw je mov ret add push decb mov aaa mov sbb movsb call icebp data16 add adc fcoms out lds dec mov adc rolb adc test push aam daa push jmp (bad) pop je sbb push dec icebp test push adc mov test cmc dec (bad) jmp adc jl inc test adc adc call shll rcr push dec add call loope sbbb mov psadbw bound (bad) jnp test cmpl jne pop outsb test mov mov call pop inc or add inc inc test pop out out das je (bad) je dec cmp jbe inc jbe test (bad) adc dec add dec sub pop leave jge mov and das mov add sub xor call lds jno test fdivrs test jne movb pushf pop fwait add inc nop std call (bad) mov mov push cmpsl je inc mov dec iret sbb call dec je icebp xor mov fs inc mov add jmp sar lock adc jmp mov mov push push dec sub sahf xor mov pop and jle pop jmp or stos dec mov (bad) dec mov repz mov fisttpll or add jecxz incl sbb inc mov lock mov mov sbb dec xor lock pop inc sarl lea leave (bad) dec fwait call and xor das mov sub das ret xor pushf aam mov dec mov into or cmp dec imul sub (bad) xor addr16 mov sub es aas add xchg jge mov jno inc push aad pop add clc sahf insl push ret out bnd push xor jmp inc xor push data16 js xchg jmp jg xchg sti mov je jg sbb jne sub jb and mov sub mov cmp cmp dec pop add incl cmp je pop mov add sbb sarb call dec jne call in adc fld1 jbe and mov adc adc bound mov call jae xchg int3 test inc mov aas aas rcr nop xor dec mov call mov jne shlb add push and and orl movsl mov dec lea call bound inc push cmc in add dec lea call mov (bad) mov mov dec mov jne jmp fisttp pop pop movb sub je movzwl (bad) (bad) pop incb or inc add (bad) jne lret inc mov out mov mov add inc loope call cmp lea outsl mov mov movb (bad) jmp pusha pop add mov sbb adc (bad) dec pop dec mov call dec add inc mov inc or add sbb or dec iret dec dec or mov cmp cs mov xor mov jg xor dec mov scas (bad) aas jmp mov dec add dec cmp dec cmovb rorl dec mov add push adc pop jbe add bound (bad) les sub loope pop add pushl loopne add push stc iret call aam pop dec lea call out out xor mov je test sti dec lea cmpsl mov pop pop out inc cmpsl xchg loop push xor std mov mov pop dec sub dec sar dec jl xlat clc sub inc test push mov mov lds inc pushl push lea imul dec lea dec cmp mov iret pop xchg jae aad call scas mov mov dec mov xor call and clc xchg push les mov xchg mov (bad) xor dec mov call dec aas lods add call jnp lahf shr das xor inc xor and mov inc cmp clc dec ret das push push in mov loop dec mov inc lea js and or adc sub incl lea dec arpl adc lea dec mov dec add dec loop test and call lea dec mov dec cwtl dec add dec mov and je loopne jg dec sub dec mov adc xor incb dec mov xlat inc pop pop mov test std add sbb incb ja jo inc mov stc cltd test (bad) dec mov pop inc mov mov in push mov and movl and call addr16 mov push add js aaa iret ja or je hlt lds movzwl (bad) aad decb mov (bad) cmp jae xchg dec lea pop pop pop adc ret nop loope or in push add shr inc loopne (bad) cmp cmp sub dec mov dec sar inc mov out (bad) jbe sbb aad rorl icebp in or call mov jae and add jns mov lcall xor out pop dec mov stos sub push sub or mov dec mov mov inc cmp mulb es dec mov call xor icebp into cmp (bad) sub dec add dec add dec cli out fimul dec mov outsl jne dec lea call (bad) jecxz inc sub add push push dec dec rolb add (bad) sbb lea dec jne dec mov je out sub out dec mov (bad) jg clc aaa fldl call cli dec sub dec sar (bad) jo sbb inc mov dec cmpxchg rorb lock inc and stos hlt (bad) hlt call mov ds inc (bad) out fidivr lock sub dec sar pop or (bad) aas push inc jne dec mov dec cmp dec movl xor (bad) jg mov dec lea dec lea and cmp mov jecxz cmp mov dec lea mov dec mov mov pop cld fidivr push adc dec cmp ficom add xor ljmp jg lea dec mov call dec mov add je dec fstpl js add jbe outsl inc decl jne inc clc or call enter aas pop add xchg mov sbb xchg mov dec mov dec mov jmp outsb mov cli call push mov test xchg dec arpl dec lea fld1 mov pop inc pop jo scas push je int xor dec lea lret adc neg sub inc dec mov push xchg sub test jne dec add jmp aas jle fisttpll cmp sbb and or jecxz and mov dec sahf xor mov dec cmp jne cmc out out scas mov call sub dec mov sub lea mov outsl xor mov push cmc pop push or jmp sar aaa add dec mov inc mov dec mov dec lea pushl lock jae fiaddl inc sub call lea mov pop xchg call add mov stc add (bad) out pusha adc push call ja cmp lea or out push adc inc call adc lea mov call cltd mov sarb ret call jmp mov adc push movl enter inc std (bad) call sti pop inc int (bad) ljmp add lret je (bad) mov outsl loop cmp dec mov test je pop mov push add pop popa mov or mov cmp je call dec inc xlat inc or sub mov add jmp mov orb xor inc jne decl (bad) adc mov dec mov dec test je icebp xchg rolb mov xchg and jae xchg mov cmpl lahf jns into push lea daa jecxz pop mov or mov call lret arpl data16 ficomp sahf bound aas into sub sub or sub fdivs dec inc inc cmpsb (bad) int adc adc lds jbe add and xchg testb cmp enter shll out cli add lods call adc out leave dec hlt (bad) lahf fild jmp pop jo add push cmc je test mov or out or (bad) inc mov sbb rolb inc cmp outsl jmp pusha aaa jnp inc mov sbb jne or pop jp cmpl int pop add test cmp daa popf and popf add jo ret lds push pusha test mov in xchg pop adc dec add cld mov movl push or adc xchg lea cs daa push sbb pop dec mov dec (bad) and add pop add stos or mov mov shlb dec cmp pop inc dec mov mov cmp sbb mov rcrb les movl outsl dec mov inc mov (bad) cmp cmp jo add test add dec or leave paddsw outsl call add test and jne push and call stos in push mov inc xor les adc mov (bad) fnsave push mov dec adc mov or ss lret or pushf pop adc or je ja call shrl fisub jg sbb shlb push pop sbb mov xchg out mov dec adc divb (bad) js loop call popf mov pop popf adcl dec lea cwtl jb (bad) dec mov jg in fdivs repnz lahf mov cli fnstcw dec ret sbb dec bsf jge sbb mov pop mov cmp or fcoms jbe add int3 fldl shrb je jb adc incb xchg mov xor scas (bad) scas mov lds dec and test inc xor push push dec lea dec push add fs or lock jne sub scas fidiv mov jo call mov mov jns adc push mov out dec stc add test jle cmp jae jecxz movzwl sub cmp ja dec mov or insb dec bt jb wrmsr (bad) fdivrs add pusha sbb in dec icebp mov aam call enter test cmpw cld scas ret add movl add pushf nop mov mov sub dec das icebp out or inc and inc push xchg or inc inc inc mull dec dec lret lock fdivl aad adc mov inc or in addr16 cs pop stos jb inc imul and jnp mov mov test sbb daa add mov loope bound int sbb mov pop pop xchg sbb call inc mov sub notb xchg pop rol xchg sbb loopne and cltd mov and test sbb and std pop push lds sbb add sbb sbb adc (bad) loopne cmp sbb inc stos mov outsb clc orl rcr je sub or mov lods mov pop mov js inc and mov test jle cmp ljmp mov shl in add mov dec add jmp jg cmp dec jmp dec add testb je mov mov cmpl jne inc mov inc test je inc paddb mov lea pop fnsave ret add fwait dec mov sub or xchg sti (bad) mov cmp sub stc mov je mov xor adc push add test cld fisttp cmp ja std cmp mov (bad) push jmp jne mov pop adc rol push pop (bad) idivb inc jne je jmp es mov data16 or (bad) loope xchg push or cwtl inc fs or cli push jmp lahf into mov cmp adc mov (bad) out (bad) jle jmp ds mov add jmp mov pop inc pop adc test push enter mov fist adc sbb sbb sbb (bad) out outsb or aas hlt push lret fild cmp addr16 inc cmp bswap xor and push popa cli (bad) and add movsb ret nop sbb cwtl pop xchg cmp push or xchg test push inc pop xchg sbb ret dec mov movzwl pop test scas decl je icebp iret cltd stos (bad) jg outsb add mov add cli and test or enter add jo mov sub dec outsl cli ja in iret adc out je movzwl lock sub (bad) push push cmp cmp je add mov (bad) aam je add fldcw fwait rcrb ret dec mov sbb push ret je sub mov and cmpsb dec sub jmp int3 out orl dec lea jmp fisttp les sti lea call test insb (bad) into mov stc sub adc fwait jae jne loope mov in xor jmp call loope test or sbb or sbb stos fsubrp mov jmp call movsb es xor dec mov or ficom call or mov jmp int xor inc pusha add in fmull mov fldt adc cmp adc fild ficom dec mov rorl repz add (bad) ret data16 lock mov inc mov mov mov mov jg mov je mov shr dec decb lret pop mov repz (bad) mov cmp je mov mov pop jmp mov mov or sub add (bad) mov shrl add scas mov (bad) add cld xchg test add mov inc or mov cmpsb aam push and xor cmp jl decb inc dec cmpl push sar jne dec cmp jb ja out mov push lahf jne mov xchg xchg push pop test jne xchg mov test mov jle je or (bad) mov dec pop out out ficom daa dec mov or cmp je cmpsl mov cli out scas mov cmp insl dec mov rorb popa and cld ja dec test jne xor jmp iret adc mov mov jne jmp dec mov adc and out into jge pop js call dec inc jmp rcrb cli (bad) mov jmp lahf mov add pop inc adc adc jb fsubrp loope xchg pop dec lea mov dec dec pop in sub mov add cmp xor aad and fisttp call in or ret sbb adc mov and inc les es adc xchg test cmc inc and aas jno orb into das add inc arpl jp mov (bad) cmp cmp ret loop push add and xchg incl jbe (bad) mov add inc mov dec mov inc (bad) and cmpsb push shlb or or lock sbb push orl jne pop aad add cli out cmpsb xor test sub pop jo test add dec mov xchg sub sub (bad) cmp cmp and add add es or or push je loop je orl aaa loopne fs mov (bad) jne dec mov dec mov mov and (bad) je dec xchg arpl cmp jo push sti mov xor ret lret dec mov aas mov mov mov dec mov dec mov sbb jle mov dec adc pop push mov xlat mov dec mov je psllw mov lock ja fcomps hlt sub or inc xor jmp and push cmpl sub dec adc ja jbe xor test insb (bad) je inc mov das inc test jne jl bound roll mov mov inc push fild fidiv dec cmp insb or push jo scas orl orl cmpb cmp out cmp pop ss push (bad) xchg sbb je inc test jne sti fisttp dec js mov xchg sti mov fwait inc or push aam popa xchg call dec mov je dec mov push je inc pop mov jo cwtl pop mov xorl js mov mov das push cli lds mov jb je or cmp dec (bad) js jecxz mov sbb negl scas jo fisttpl push dec test dec cltd jo out je cmp add imul inc js mov mov add rorl dec pusha das test outsb mov data16 imul sub imul sti pop movsb jo mov dec mov jmp cmpl mov inc jb cmpsl fwait cwtl lahf inc xor add mov fucomp pop (bad) mov inc xor add dec mov fstpl and adc je mov jo pop xchg dec mov sti addl aas dec mov jae repz out pop dec mov xchg xchg mov test dec inc sub fldl int mull add jmp or (bad) jp xor out sahf arpl incb pop add sbb jmp mov mov adc adc add clc xor xor mov pop dec mov cwtl verr movsb mov adc inc xlat jno cwtl jno dec adc inc js mov and xor gs scas mov (bad) xor jno std int dec xchg add and and sbb iret clc and push test dec mov test test (bad) daa push cmp and out jo mov push mov mov imul psubsb aaa jl jmp add jmp sub dec out outsl aas inc test xchg rolb js push ret dec lret mov sbb lds jo mov pusha push cmp movsb push movsl cmpsb adc (bad) sbb dec push add mov inc mov in inc (bad) mov sbb jmp scas or in jle mov xchg andl je inc arpl int3 and icebp inc jo int out mov adc mov jmp dec mov xchg popf andl ret dec adcl popf jge cmp imul pop pop or add fild inc (bad) ljmp mov xchg dec mov inc pop int3 cmp inc seta xlat out cli incl clc sbb xchg rolb jne push pop fadds jnp lea in mov (bad) xor push push ficomp dec mov test mov rcll pop int3 or out lcall ja dec cmp jb ja test call adc movsl fistp add icebp test jne mov inc pop inc mov pop inc call and je jns jge adc jo adc cmp outsl dec movl pop enter mov test inc add ss popa push inc cmpl and hlt mov mov push inc adc dec imul inc dec jg shl mov test cmpsb xchg dec xor or or aaa adc nop pop sbbl push cld popf add test xchg dec mov aas incb lahf lret rorl dec and add insb leave je dec lret out (bad) outsl dec mov rorl je fcmovnb add jge dec dec mov mov sti jle movsb dec push int3 out fstpl je jmp inc or leave cmp jmp outsl pop orl in loopne lea pop adc and or push inc mov pop pop (bad) icebp push mov add add je into inc cmp in roll (bad) fsubrl stos cmp pop sbb inc add mov mov mov mov jecxz pop add dec test cmp ja dec mov dec dec mov dec mov xchg add dec (bad) ljmp inc test punpcklbw jg test dec mov push mov xchg mov inc lods mov sbb sbb mov xchg test data16 (bad) mov mov add lret dec mov movsb fildl int jg nop out jo (bad) or js push jmp cmp out cmp in dec addr16 icebp out aaa jmp mov pop js or dec mov outsb jmp mov or roll dec pop sarb pop jo pop push adc mov loope dec xchg sub movl sti mov dec mov dec mov inc int3 frstor jo or sbb pop rcll adc js sbb and and xor jmp adc cli scas fist adc (bad) call dec mov dec (bad) cmp mov loop mov push inc mov add cmpl mov pop pop mov push inc mov ljmp xchg (bad) fild divb jae jne into fcos push pusha mov test jne test pusha aam add push push xchg aam adc pop adc scas dec mov call ret lock in cltd mov jp call jmp daa pop mov sti cmp into jge xchg pop subl (bad) mov (bad) negl clc fstps shr dec imul outsl and adc sahf xchg adc sub mov insl and inc mov jmp cmp add incb pop mov imul adc lret add and dec mov les jp inc cwtl mov sub ret les add jb lcall lret outsl sbb adc mov sbb jp jo inc movq push pop mov mov pusha inc in push inc mov and cltd js xor mov movsb add ss call sub mov outsl mov cmp je cmp je aas cmp loope jae inc inc push inc mov add add push inc mov sub js xor iret xor out call sbb or fucomp pusha pop call (bad) pop add movsl loop inc mov mov pop sbb (bad) sti call pop call xor lock je les sti (bad) int3 or inc cmp je (bad) dec shll in xchg or (bad) jo mov hlt leave shll push cmpsb dec pop call xor fstl jo mov add adc jo lcall outsl jb mov stc nop je mov cmp je cmp and pop je hlt inc jl es decl mov jne outsl unpckhps jle inc add jne outsl popf sbb fnsave leave insb and aas pop add mov dec xor jno push inc mov mov and call js andb fsubs pushf pop mov loopne jmp ret cmp inc pop add aam addr16 dec mov je fwait out mov pop imul and push jno mov enter cmp inc mov (bad) jg and dec mov dec mov call out rcrl sub ret sbb aad iret pop ret das push lds jmp popa das (bad) jne and cmp push dec adc je cmpl popf lea pop fsubrl push mov call jmp jbe mov fisttpl dec cmpb mull in call xor jg loopne in sub jmp ja out and dec adc stc or inc add inc adc xchg je outsl fwait push mov fstl call jo fldt (bad) and jmp jmp xchg rorl jmp insb and mov scas (bad) jmp (bad) lock mov (bad) idiv lcall rcrl inc js mov dec mov mov movl ret mov loop (bad) (bad) call pop adc mov mov mov incl sarb push pop lret push sbb fnstsw sub inc jno cmp add jne in mov dec pop add cli out loopne xchg ret test and jne mov or and jbe incb cld daa mov sarb pop fdivl push inc mov lret xchg inc sbbl bound and mov je in sbb sbb cmp scas cmp aas add sarl shr sbbl mov pop or mov daa jne and or mov add add add mov pop push testb loopne rclb je out and (bad) aas in stc adc aam call inc in test cmp movb clc add cli jg push insl and add call add mov adc inc fiadd shrb push popa dec mov inc loopne fstl jle enter inc pop rolb pop xor mov call nop xchg push xor jle dec inc pop ret dec lea add inc dec push jb je dec mov jl or and clc and dec mov aas pusha mov lea xchg sarl adc and dec mov call lds mov stos ja cld mov add add add test aam push xchg dec mov lock push pop or xor push inc enter dec mov and cmp aas jle lock sbb mov adc sbb les adc in inc iret sbb call jmp push lret call pop nop jae push mov int inc sbb add je call decl test inc lea loopne into pop adc mov stc test and inc shl stc mov push cmpsl add sti add or fsubs nop or cwtl jmp dec cmovs pop dec push ret push mov jo fnstenv dec mov dec and sub sti inc fild je inc pop call andl jne fs xchg push orb scas jmp lods jg pop gs jmp adc and mov in push or aad test jne out lea pop shrb pop add add jl fild movl mov jo pusha xor dec movl or je dec lcall jno jmp add adcl into cmp loopne in inc or jo cli and adc gs adc (bad) ja (bad) xchg repnz mov cmp in lahf mov add mov mov je cmp (bad) pop xchg decl in movsl insb and insb ret xor inc je mov cmp dec jo dec and (bad) loope sub test (bad) cmc dec and js dec mov sbb scas rorl push cli lcall mov lret jmp fcmovnb clc (bad) add push out call jp ss mov add pusha jle add mov adc dec pop cltd fstpl add jns and add pop ljmp mov data16 or push ret dec mov jns adc dec cmp test data16 xor add call mov (bad) dec cmp inc adc push lahf sbb xchg (bad) out fcompl scas imul add mov mov and ret inc pusha or add js push pop ss xchg call cmp je mov inc lods xor add pusha inc in or mov cmpsb aas (bad) xchg icebp cmp call cld pusha inc mov cmpl inc cmpsb pop adc dec mov or push (bad) xorl pop jno jne mov inc and call (bad) xor out mov mov stos jae lock mov sbb pop adc fisttp pop cmpl outsl mov daa push sbb orb push add inc and je arpl add test or mov adc dec mov je dec xor push add je mov and mov aam aad cmp inc and call popa inc mov call out or push or jo mov call lds jg lock jle add cmp and mov call ljmp mov jmp add rorb std push pop dec mov xor mov jae and pop adc dec data16 inc xchg or add lcall inc jl adc cs push add jmp lods jmp aad jne and (bad) jmp jg add arpl decl mov dec mov jmp mov inc sub cmp je cmp pop inc mov sub (bad) loopne mov call and fwait pop es dec rolb jp stos fwait subb mov mov fisttp mov aas call incb je movzwl push pop dec lea or pushf push hlt mov jne (bad) in lea pusha jne sub and mov xor add mov ja and inc mov mov adc lds lea jnp (bad) jmp mov cmpsl mov jo inc test inc lock orl xlat xchg shll and mov adc je dec lods je,pt (bad) cmp outsl xchg mov out xorb xchg mov adc sbb insl mov ja sahf outsl lea add push pop push std dec add sbb add sub mov dec outsl cltd stos mov fmull mov jo mov xchg sbbl lea icebp jbe repz lods mov mov xchg inc negb xchg pop add pop dec mov pop cmp mov xchg adc cmpsb push arpl test jne in dec cmp ja test test add or (bad) xor movsl or adc sbb mov pop dec cmp (bad) cmc push shll hlt mov mov xor fiadd das scas adc mov call add jne cli pop xchg cmp xchg in iret and int3 in inc mov call bound js sbb (bad) push dec pop push xchg aas scas xor ret (bad) push sar mov inc movzbl je cmp jne and sarb jl jbe stc test faddl xor sub dec add loope and cli inc and (bad) add enter popa mov pop sub mov jl inc fbld push icebp cmp or or push sbb mov add leave lock mov call mov je sbb dec mov push and dec mov call (bad) lcall push mov dec mov or and jmp push add pop xor loop dec sub clc cmp rorl lcall cmpsb (bad) das sete adc imul pop adc in ss loopne aas (bad) test je mov mov jnp mov inc jo arpl test sbb sub rclb test cmp dec popf cmp inc (bad) mull je cmp subb mov dec push add push adc inc sbb inc or test ret cli sbb sbb fwait or adc sub test push inc call ret jo or lea adc sub cmp inc lahf add pop pop push dec mov dec and iret (bad) test je mov in ljmp roll push dec fistpll loop mov adc je dec insl ficoml insb nop int3 movsb jg dec push clc and dec mov adc dec mov fist pop dec test call dec movl (bad) imul add jne mov cld xchg (bad) imul sub cmp adc add jle je cld add or lods test add add or mov xor lret lea bound (bad) and arpl ret mov cmpsb mov into rcrl and call pop pop jae (bad) or mov out cmp clc mov sbb call xlat mov mov out inc xchg int3 iret call addr16 sbb scas mov jmp jb outsl pushf mov divl jl adc cmp jne popa sub mov aas mov push repz push xchg orb arpl inc add adc sar popf mov add jmp rorb sub cs sahf lds mov xchg loope das repnz dec rolb xchg mov scas or add push daa mov mov sahf adc push pop push inc je insb mov cmpsl sub int3 pop sbb add leave repnz jl push loopne and xor xlat push and out pushf sub aas inc mov test jle test or ja in and add mov mov adcb sub sbb dec outsb sbb xor jns ds mov out jns xchg test addb mov fimull aas cmp (bad) insl and call xchg mov cmp mov aas dec mov dec mov les test xor aam (bad) mov push push add rorb in jmp sub xor cld aas call dec cmp je rorl add sub inc jge cwtl inc mov jo loop dec ret dec mov cmp dec lret loopne mulb clc jne call cmp sub adc sub push leave add fld1 scas or aas fisttpll mov push xor or leave (bad) ficom jmp ljmp add out lea or lcall lock lea rorb shl dec (bad) loopne xor movl std pop sbb (bad) (bad) decl cwtl push push (bad) sbb add enter push clc mov dec lea xchg call mov mov cmp leave jmp shll movl (bad) mov test jne mov pushf dec dec jl jle ret add pop jle jmp inc dec pop cwtl test (bad) (bad) adc icebp ret mov xor mov test push rcl jg dec mov dec add icebp pop aam stos mov movsb lea call cmpsb cli fcoms loopne add mov jnp xor mov jne pop add mov or mov cmp sahf adc inc or jg pop or dec mov aad fistpll test mov (bad) stos or inc pop dec (bad) adc push aas sahf inc inc jo test popf push sbb mov inc std add je mov pop ja mov push add add push pop sub ret dec add adc jmp push dec adcb arpl call jp insb out ret push and ret or add add (bad) inc mov jns mov iret jge xchg mov push insb mov mov dec inc cmc mov ja call mov sub dec rorb jno fs mov jb add pcmpeqw push ret inc xor jne push mov or or push rcll and call adc adc lea jle aaa call inc push cmpxchg lea loope and or imul gs adc (bad) mov jbe call adc pop mov push jl or push or inc dec fs (bad) (bad) push jp xor jne aam stos aaa sar adc or sub add adc jmp jb and loopne rorb jg xorl dec adc push xor or sub push push adc in (bad) fwait add inc or adc movl cmp inc jo inc (bad) loopne mov and (bad) in dec mov inc testb je inc pop fwait mov inc xor test nop add inc push or out and xor inc dec or push pop jne add movsl and ficom inc aas loop adc mov fisttp mov sub inc sbb add push ss pop mov lea mov mov jne mov mov cmpsl popa and add cmp pusha inc les lret jnp xchg xor push and std push add dec sbb cli jo sub ret add mov or ret mov data16 addr16 lahf mov or inc mov jbe jae inc rolb jb push pop mov mov leave pop jg adc ret push push outsb js mov aad sbbb test mov inc fsubrl cmp adc and sbb xor rolb lea (bad) add jl jne push add dec mov inc in mov lods ds stos aaa loope push inc add inc add call inc sbb add pop sub mov out scas mov jle (bad) lods les sbb adc mov (bad) mov dec pop adc inc les lret xchg sub roll clc je mov ret sub out movsb (bad) (bad) std jne loope ss cltd pop jge sti addl sbb and jo adc or pop (bad) mov inc clc lock orl sbb inc mov out inc cmpsb in adc out mov nop jne add call ja cs adc mov inc add dec jl inc das pop mov push mov mov in cmp movsl bound and push insl in inc lcall faddl lahf push mov aas mov je xor cmp mov andb pop sbb mov icebp jnp addb adc ret sub sarl shl mov dec pop mov mov dec mov incl mov cmpsb lcall lock and adc or decl aad pop add sbb (bad) and call test lret rcr and dec mov dec xor jo add stos sub xchg cmpl adc jo mov fmul ljmp insb jne push sbb ret cmpsl inc jns mov decb mov mov inc call test cmpsb mov imul andb fiaddl cmp ja into aam push push dec mov cmp mov push push inc (bad) outsl int3 cli push or adcb out bound stos dec dec outsl mov cs mov outsl (bad) mov cmp jno or pop mov stc call test outsb jne (bad) cwtl outsl lahf adc sub add cmc movsl roll xchg add add mov lret (bad) (bad) std (bad) jge xchg test cmp ss mov pop loop mov lock xchg xchg push stos test dec mov lea decl js mov call mov insl cmp add and push rol jo fcos (bad) push inc mov movsb popl insb jmp adc jge cld fs roll test test int3 mov and cmp daa lret popa inc bnd icebp aaa pop dec lea xor xchg xor sbb pop (bad) xchg bound jno sahf pop push jge loopne adc adc mov inc pop jmp pop jnp add clc or pop jne cwtl jne adc inc sarl mov and je pop je inc sbb and ret xlat adc pop mov push iret inc test sti and dec mov pop jmp add or inc pop jne adc xchg daa je sbb pop xchg mov incl enter es xchg cmp adc jge fwait in mov and ficoml jne arpl sbb and leave pop loopne mov jo push mov dec cs outsb test fcos aad mov mov movsb mov add rorb mov rcrb enter jg lods repz and std inc inc loopne mov jmp scas inc xchg mov mov test addr16 pop fcoml sbb call sub sbb xor mov mov add mov sbb lret push push push sbb xchg sbb mov sbb xchg sbb imul and add pop icebp (bad) mov (bad) (bad) fcoml pop push cmp pop adc push jo jg ljmp (bad) cmp cmovnp mov add mov add cmp js add ror cmpsb imul jns aam icebp (bad) or xchg xchg mov adc jle inc mov adc jmp lret xor dec popf jmp adc nop scas xchg jge sub ret xchg cmp shll decl jbe in mov mov sub mov fsubrl std call aaa jbe inc fist push mov xlat mov dec push adc xor addr16 adc (bad) aas xor push adc push push sbbb sarb rorl push arpl ja sub rorl popa and (bad) dec lea orl mov pop cmp adc pop or es test dec scas sbb and push adc pop push mov sbb add pop in or call test jne test je pusha pop add jg or scas push inc pop das jecxz dec in and je xchg inc call icebp add dec mov xchg sbbb xor sbb mov adc ja pop and ss or mov (bad) hlt mov (bad) or add xchg lds mov mov (bad) or cmpsl fs out or sbb lcall fdivl mov out fidiv mov ds in sahf into daa adc sub mov fistpll shlb xchg mov cmp mov and cld call repz mov mov dec or or xor clc hlt popa add js xor lock pmaxsw inc mov data16 jnp lods adc add ret or pop or mov rorl stos les sbb stos ret pop push pop add mov xlat mov pop cmp cmp jae les inc mov (bad) addr16 add lea sub int3 pop iret loope ljmp loop inc xor call adc add xchg jo or mov (bad) outsl insb in adc bound ret xor popa idivl add mov fstpl pop adc out xor les cld aas push imul dec mov dec mov mov lock mov inc mov sub insb dec mov je cwtl loop inc dec jle fiadd mov ret stc cmpsl and add sub inc test inc cmp mov dec clc or inc push dec mov and or inc mov lahf or leave mov push mov or je outsb adcl ret pop add scas add add adc clc fisttp stos in push adc (bad) jne adc std sub add test jbe pop pop ret jge ret shrd mov pop adc xor lcall adc pushl call mov movsb dec sub pop jg pusha lahf sub adc cli fisttpl fcomip jg (bad) loopne (bad) test je cwtl push ljmp pop orl ret es or test je in (bad) (bad) or dec clc sub (bad) jg adc inc cmp jnp jne sbb mov ret fcoml push or push jle and movsl adc inc add test lcall std inc pusha lret aaa je ret xor cld sbb add jp dec les js (bad) je inc sbbl mov jmp out push or add int3 outsl rol andb in and sahf mov in lds mov pop test dec mov orb dec mov fdivrl add adc inc mov inc dec sbb test dec cmpxchg sub test or add adc enter mov jne clc out and test je mov and test xchg pop cli out loopne or add or aaa gs jnp jg or iret cltd and or and xchg ss js leave jne test jne popl xchg cmp mov dec add mov (bad) mov or leave add or clc push pop cmpl and fsincos add or negb pop dec mov xor call clc cs setne jmp xlat pop mov jns or notl subb (bad) dec faddl out out jns mov dec lea (bad) jae shlb test and call xor test jae mov incl test inc test lret cmp popf jae adc inc mov shr sbb lea out xlat addr16 pop ret loope test mov pop fmuls loopne arpl add std not aas xor dec mov test adc (bad) aad ljmp cs mov rolb dec add push clc or aas cmc faddl roll aam mov jmp aas inc xor push xchg mov mov jbe pop cmp pop sub cmpb xchg lea inc adc (bad) mov mov fmull rolb daa and push ja fwait aam test mov addl mov jmp clc xlat cmp xlat jnp (bad) jne mov cmp inc outsl addb and fadds and dec add decl decl (bad) decl sbbl mov pop out mov ret mov call ret xchg dec pop movl pop in test adc xchg mov pushf sbb adc lea dec sub call pop roll test les jmp add mov xchg ljmp inc mov test cld fild jne add or inc add adc sub sbb test dec mov adc mov call adc push jne dec cmpsl gs or and ljmp mov xor movl loopne ret inc inc add add add inc call adc lea pop js jl enter cs ficomp lods dec or call or insb xchg mov add sbbb pop test push add sbb leave mov and inc test jne iret or and or jmp xor inc or adc jl rorb mov les (bad) out out movsb inc adc push and lcall mov jne inc push cmp es mov (bad) pop jb data16 icebp lcall dec mov dec mov jmp dec inc (bad) fildll mov mov call sub jo mov inc (bad) call and push aaa cltd jae int3 rol rol es test pusha test jne jne ss add mov sub xorl xor fild mov xchg sub (bad) (bad) jo fcompl call dec push shrl push ss cli sbb add ljmp loopne dec or push push ja call outsl nop call xchg (bad) and inc jmp sbb mov (bad) xor sti out jnp stos push fs xorps adcl mov pop push dec pop sti scas outsb sub mov sbb pop daa cmp mov je add aas loope mov roll add xchg push stos inc je iret dec mov push push adc popf add push pop (bad) fwait xor lock movsbl divl ret jne call enter jne pop scas and push inc inc xchg xchg xchg add movb ja add jbe,pt pop ret xor mov fcos adc fmull leave les or aas fiaddl dec mov jmp mov pop xor cwtl jbe aas sahf icebp adc aad cmp inc xor cmp aam mov mov and sbb mov addl or sbb cmp adc inc xlat mov and or (bad) mov add sub inc cmp mov jne test je cmp adc inc cmp nop and inc ljmp mov call push nop loope jns pop rcl hlt call lret lock mov sub add popf push cmp cmp je outsl add ret add sub lahf je cs ljmp push add inc sbb ljmp jbe dec mov jo mov scas pop cltd fdivrp (bad) add push sbb rorl or or and jne jp es (bad) mov dec dec cmp je jle cmp je cmp jne mov sbb incl mov xor dec mov rorl adc adc dec mov rcrb ret xchg mov mov test je mov aas adc jle sti jmp mov out lcall pop cmpb je mov inc push mov and add jae incl and call jmp call jmp or xor sar adc call mov mov call dec (bad) loopne daa ds jle add mov jmp (bad) imul mov add inc or ret jle lcall (bad) int xchg xor arpl pmullw bound mov or mov and and xchg mov pop aas iret push movl or inc push push xor outsl clc sbb lods xor adc fdivrl adc (bad) mov pop or std push outsb lea call mov (bad) jl xchg addl pop jno jae mov mulb mov or mov test and mov xor nop mov adc call pushf jmp lds daa repnz xchg sbb ss mov cmp outsb in pop and add fstpt pop mov cmp pop fstpt xor pop push pushf std outsl call jmp mov je xor jmp dec push shrb (bad) lahf mov mov adc mov pop adc lahf idivb add loopne jne lahf cmp adc aaa pushf mov jnp call jge ret sbb sbb loope aas sub xchg xor jb or cmp jae cwtl ss mov aas add je mov jne mov ret mov in dec enter nop fmuls xchg aaa pop (bad) fcoms and inc aas pop cmp jg (bad) push or mov je mov xchg xor out call ret mov mov (bad) out add jae mov stos daa out int3 xor fldenv lahf mov outsl sub or adc and call pop cmp mov jo xor cmpb mov lret call add dec and sbb mov rclb add add rcl adc rcrb sbb loope mov add call pop add orl mov jno jne call popf mov jg and push and push pusha adc mov adc mov dec outsl inc push pop je out or es pop push imul icebp dec xor adc outsb pop sbb mov jbe call cwtl loope mov mov cmp js sbb add pop inc add push add sub call pop and test cmc mov ret add or xchg or jb setb xor outsl cmp gs (bad) lea int3 add insb jge fildll mov je (bad) adc fcomi lret (bad) pushl je call aas dec test js pxor repnz cvtpi2ps lock (bad) divsd add cmp repnz fiaddl cvttps2pi je scas call stos pop mov jl pop aaa push cld mov cmp jne mov ljmp ljmp call (bad) repnz arpl lds call sub inc pusha cmp fstl scas xor jo fdiv mov pop xlat add imul inc push push add clc push test sti fidivl ret popl add int3 inc sub and mov mov aam jbe ss adc pop dec popf and jge cmp aam xor pop loope call inc xor cs dec cmp outsl (bad) cmp mov jnp dec cmp stos fisttpll mov pop cmp jg mov je orb ja dec mov call and pop fdivrl adc sbb subl ret mov mov jne jmp mov mov stc call jo test and and pop xchg lds out add scas mov mov and orl sbb cli or add decl call cltd das fs sub inc ret insb mov (bad) lahf into jne (bad) (bad) or call cwtl jecxz add pop sub lcall (bad) mov call cmpb jbe push cmp hlt push lea repz dec mov call add lds add cmp xor movups cmpsb mov mov inc inc jbe mov lahf adc or pop pop sub ds inc nop shlb aam outsb shlb dec mov cmp dec and (bad) xlat cmp mov or call mov and adc pop sahf in push inc mov addl mov mov xor mov inc test icebp and lods pop stc cmovl js pusha dec mov dec test je or jg (bad) jne dec mov inc mov jo loopne fisttpll je pop pusha adc js xor mov add test inc mov loopne inc divb sub push scas jge ret nop jg mov sbb dec mov gs js dec mov je inc jo mov xlat std into jno mov push jno or outsl dec out fwait mov mov movups (bad) (bad) fistpll jo test je ja cmp mov mov dec mov pop and je or je test jmp ja cmpl je test je sti inc icebp or test inc push fwait ja (bad) je inc mov fisttpl test movl push push jo lods arpl fist leave je mov test clc dec push mov cld cmp je push pusha mov xchg or xchg xor insl add (bad) aas enter je mov dec mov mov (bad) out rcrl inc (bad) inc pop dec mov loopne inc hlt rorb push inc jo ret xor xlat inc shr je inc sbb or dec mov dec mov dec mov scas in push adc (bad) movl sub sub mov lock mov pusha into scas inc mov adc jnp lret ja loope mov cld dec mov inc std and mov jmp xchg test out sbb dec out dec adc clc jbe inc pusha push dec dec pusha jmp ja dec mov jmp aaa shrb fwait pop rolb push add jnp call inc mov sub aas jne adc addr16 xor je orl shll lds sub loop cmp add pop jmp out cmpb aaa nopl add rorb pop dec mov jmp add dec mov aas push pusha jmp dec das pop push movq icebp jg stc (bad) (bad) incl xorb push popa sbb pusha inc mov mov add rorb and rorb adc xchg mov inc inc push mov icebp or adc dec mov imul add insb outsb mov push dec leave push test adc xor dec cmp dec sbb mov push push or push js mov gs (bad) jmp inc pushf shr dec mov fcomps cs xor push xor sub xlat out addr16 inc xchg inc jo jb jo dec sub je lahf ds adc enter dec jo dec mov inc mov clc lock je add adc ljmp jecxz adc adc pop cmpsb fldcw jmp sub std dec mov jmp insl pusha jmp push dec cld add dec dec mov xchg lret dec adc add mov test jne sub rorb inc dec mov dec setb xchg or mov lea test lock jbe test mov xchg dec mov rorb inc add bound test dec mov out xchg sub dec inc das jmp sub mov nop lea jbe add insb (bad) je dec pop aas and aam pusha add mov pop jne loopne push fadd inc jo xor jp ds movl jl out jno mov jmp pusha je inc cmpl lcall add xchg pop cmp sub aad int3 or or push jo test movsb xor add jo sbb inc arpl pop sbb sub dec cmp and dec cmp jne jnp xchg (bad) cmp rorb je subb out adc dec mov sti insl adc sub out mov sbb aad outsl je cmp inc jo inc jbe out hlt xchg imul and pop cwtl xor inc pushf (bad) and sar roll dec cmp mov inc or jmp push cld dec mov jmp jae dec int3 leave jb outsl jl jmp pop dec mov xor xor adc inc and dec mov fsts inc addr16 pop cmpsl ret mov outsl lock add ret push cmp aad or pop pop mov or daa push add dec rcrl mov jmp mov inc pusha jmp jnp scas pusha push xor stos leave mov mov add cmp push dec lahf subl lea test mov pop adc les xor mov call mov inc adc push cmp loope fsubr sub das sbb add add mov xor dec jo pop test fdivs mov jmp or push inc and lds jmp jmp outsl push cmpl xor add pushl push add sbb (bad) decl orb pop mov dec mov call xchg cmp sub ret mov jmp scas dec cmpl stos test lock lret inc add or call cmpsb mov mov xchg shll inc fisttp mov sub lea (bad) pusha out pop push call je mov mov (bad) xor jle test imul (bad) lock mov jp loopne sub sub add dec ret add inc jl std dec mov aaa test jne jmp lds dec mov andl mov or jns mov call rol les out (bad) cmc add sbb loop (bad) mov push push dec je pop jmp iretw stos adc out fld1 cwtl inc orl int daa cmp jne push scas dec in shr inc cwtl mov rorl iret mov mov push cmp inc inc test adc add mov inc dec dec dec adc dec sub dec cmp ja xor mov (bad) add es or add mov cmp mov sbb loopne or mov flds and mov mov dec adc push mov sub sbb mov jge sbb or dec jmp rclb call das or mov sarb and mov add dec insb sbb rolb pusha sbb xchg lret mov es icebp or mov dec lea ret sbb lds test or inc fwait and add or jg stc test jo xchg sbb sub jbe add decl push inc mov pop not xor add adc mov inc mov or outsw (bad) sbb add mov jo test aas cmovs fcomps addr16 mov mov cmp add dec pop jmp adc std xor pop insl mov ja adc cmc adc outsl dec jmp jmp out ljmp sub cmp sub fmull xor rclb adc arpl jmp adc cltd nop pop mov and shr jne aas jmp subl xchg std mov mov mov xchg pop addr16 sbb push pop ret insl mov call mov inc adc data16 mov or ja pop aad (bad) cmp jmp stos inc dec and fstpt das aas mov lahf mov add sub push mov (bad) ja call mov xchg in or inc and cmp adc pop add ja incl stos stos stos stos mov inc mul xchg call xchg xchg cmp dec lea adc stos bound mov add lods ljmp sbb inc and stos push adc sbb dec mov mov jb rclb dec test and adc cmp shl sbb inc roll xchg test pop mov dec adc jb cli mov les mov jmp add mov cmp push stos lea (bad) popa cmp call or inc ja jne aam es ja call jmp mov or mov mov popl lock (bad) xchg call mov add in cs mov (bad) and mov mov sbb cmp push xchg std lcall adc mov mov lock fimull jne in mov stos and jg sub int push cmp jle xor call lret ja mov lcall test fdivrl or lret ja lods jb jl ret add adc out sar ret aaa fs jmp loopne adc adc adc push jle mov fisttpll mov inc mov (bad) fstp sbb inc add inc sub inc mov (bad) mov add stc pushl sub inc cmp jle inc lea movswl inc out jg (bad) cmp jle sub inc mov mov leave jns movl add inc cmp je inc cmp je inc cmp jne inc cmp je mov pusha jmp jmp dec add int3 xor cmpsl xchg inc mov fisttp inc mov jmp scas aas push inc cmp mov add test xor lcall jne test movzwl movzwl (bad) out (bad) xor dec and add xor sub push and mov mov neg mov sub mov add inc dec inc test je inc cmp (bad) mov cmp mov sub ret jmp (bad) call fistpl mov push lret sub inc test jne xor jle ficomp adc push pop push dec cmp loop push inc aas mov dec lea enter test je jge pushf arpl cmp mov mov pop adc add jmp jg fcomps pop ret push inc mov stc call adc add add pop mov incl mov dec mov mov (bad) (bad) mov cmp aad cmpsl pusha push mov aas jmp adc stc repz adc and push in push add popa outsl xor mov adc daa sbb inc mov movzwl inc mov mov jg and dec or inc push movzwl call (bad) jg test je inc movswl mov icebp inc cmp jl add fmull mov cmovge inc test je movswl add xor test add (bad) sti js mov cmp mov cmovge enter sbb jns mov inc pop add mov or cs ret jmp pop pop js add inc pshufw mov test hlt and cli cmp ja rolb mov sar mov mov inc cmovne cmovne adc fcomip inc cmovne fwait cmp lea jmp push inc pop xor or mov out add insb and xchg dec call cld add cmp mov inc adc pushl loopne mov call dec and mov cwtl sar inc mov imul add inc icebp out fmull mov mov sub sub cmpsl xchg dec movl pop pop add pop mov and call (bad) and call push jne sub subl inc adc add mov mov sarl mov cli lods js adc xor ret inc xor cmpl mov test xchg es inc xor das sysret or divb shr cmp ret loopne adc std lahf pop cmp inc movzbl add movzbl xor dec mov ss aam incl call or inc jae in mov adc insb loopne inc out pop add inc lds jne sbb ficompl dec outsl jecxz sbb jmp call movsb rol push or add push inc andb jmp pandn icebp add mulb jo popa add or nop addr16 or (bad) mov subb push ret daa or xor call sbb mov std and push stc stos call mov in je cmp xchg loope std and or call mov jnp call jmp (bad) pmuludq mov xor xor adc mov repnz arpl insl push test push push dec mov inc pop mov mov inc movsb add (bad) dec mov aaa sar add jno (bad) call ret add cmp decb je cmp in dec mov sub push mov adc xor or add cmp or or push incl mov xor in mov mov jne pop test xchg decl mov inc mov inc test je inc mov mov loop js mov push jne std or inc test je pop inc cmp inc mov pusha incl or lds lods inc mov and sarb adc test inc lea cmp ja clc and nop xchg arpl add xchg stos sti lcall add inc cmp ja dec subl movsl cmp adc adc mov inc xor inc mov dec lea ret adc and cmp jg sub and sub push jle mov cmp lods sets and dec (bad) mov sti mov mov cmp je out mov incl int adc inc call icebp mov lret lret lock pandn pushl xor pop pop je cmp fnop incl (bad) incl and mov sub inc or push aad (bad) lret cmp cmp call jle call mov mov in movb jmp repz shl and inc or inc sub mov test mov out movsl sbb cmp mov inc rclb dec mov outsb add sarl cmp jmp mov or rcr mov or je sub inc and jmp adc sbb dec inc mov and call inc fdivrp mov nop aas cmp test (bad) aas xadd jno icebp sbb cmp ja into les pop sbb je (bad) decl xor sbb sbb add dec add jmp add rorl aaa jmp andb cmp inc cmovo jmp xchg and xor mov add nop dec mov mov test adc add xor cmp lds mov cmp (bad) push lods adc sub dec lea xor cmp jnp lds push inc mov fstpl xchg push outsl and in pop mov and inc adc push inc adc pop add mov nop inc mov (bad) out jmp dec lea dec mov inc cmp inc cmovbe inc mov inc add call jecxz (bad) incl ja mov pushf push jmp orb stc jbe outsl lret mov jno adc add mov std cltd inc mov xor inc mov mov mov or dec neg dec add mov inc mov jmp loop jmp jg (bad) jmp mov jg rorb (bad) push sarb jg inc lea mov jmp jmp outsl test jne push outsb push cmp dec push xor add mov decb inc mov test mov jg ja cmpsb sbb int3 add mov ds lea stc enter and mov popf inc jge inc jmp dec or aas or test or cli ja xor inc mov dec push mov lahf lock or xor inc mov mov into inc sub incl or add call cmp or clc std ja xor push (bad) xor mov mov dec jno xchg pop test push sbb inc pop scas and sbb ret sbb mov add adc xor jae stc sub xor dec in clc dec ja test mov jnp inc hlt js lea mov mov mov subl lds jmp push sub and call icebp inc fmuls push inc mov add call dec push (bad) ja sub dec mov dec mov out inc sub push ficom int loop (bad) out mov ss (bad) repnz (bad) jmp inc enter out cmp les or movzbl push leave mov mov pfrcpit2 sub fcomip std out sbb sti pushl add scas decl xchg ret inc cld fldl ret inc and addl popa mov fcmovnbe aas sbb and inc mov jo rclb mov pop jge mov (bad) push cld push adc jle inc and add je popl inc mov test je mov mov data16 mov wrmsr leave and shl or or lcall je and inc test je or lahf in addr16 add sbb or and lock cmp out int3 je fnsave or jmp mov and push inc test inc and pusha ret daa push adc pop sub ja je imul add sbb rclb inc test je inc inc sbbl shl xor (bad) loope lock call test stos or sub jmp dec in or inc cmpl sbb test push dec lea inc inc jp inc es sub daa fwait cmp dec push sub mov add dec ljmp in pop rorb ret push ja xor (bad) fdivr ja xor call jmp nop jne out test add add test out js dec sub hlt and lock adc (bad) inc jb xorb je inc movzwl cs das push rcll sub scas ret pop lods adc jbe pop and lods inc pusha push sahf lock test or in out xor inc stos je movsl xchg jnp pop sbb add xor pop lods inc loopne lcall (bad) sbb data16 stos sub dec rol pop je inc movzwl scas inc neg test loope and rol sbb insb (bad) pop sub daa test out stos ret enter lret push jo movsb xchg or or cld add pop jb neg mov in inc pusha jnp in mul pop jbe in add cli add (bad) jae add jae lcall xchg cmp add in movzbl es mov cmp mov out mov cmc pop ljmp xchg xchg loop jp mov rcrb push test scas xchg in push leave mov cmpl std lret lret and sub fsubrs stos fisubl movsb and or out jmp xchg xchg mov pusha xchg cltd or mov cwtl movsb sbb mov and or inc out stos cs mov xchg andl cld push sbb and mov dec lods cmp les dec incl mov lock mov dec lea stos add loop (bad) fistpll popa test ja test (bad) push dec mov mov pop out add inc mov sub rcll movzwl aam push in cmp fisubrl out sbbl fisttp xchg push (bad) ja pop dec mov dec mov inc movswl mov pop xchg add inc add sti ljmp and inc imul call es (bad) aas pop sbb inc and mov call mov inc pop int3 push inc push inc les (bad) sti aas adc xlat test jne call mov push and push insl inc and sub xchg jmp cwtl and insb adc (bad) hlt mov dec cmp (bad) out bound push pop test lahf out inc hlt add adc xor mov mov jo out movzwl mov decl test mov and fwait call movl mov mov pop add rolb cmpsb test adc mov mov adc in lods inc jmp jmp add xor mov push sub sbb jbe jge pop add sub and cmovns pushf dec lea inc mov lret in outsb xor sarb fldl or add pusha iret outsb out (bad) jg inc mov jmp cmp je add je push je outsl pop je lea or test call out or sbb push loop mov jo ja loop pop std scas dec dec cmp je add mov mov add jmp movsb mov out insb and add iret push mov popa loopne inc xor mov aad mov jmp and mov xchg in push jmp push xor out lret and cvtdq2ps adc in or dec add mov push sub sti je lea scas ja lea push pop mov outsl xchg mov jmp jle add xor push cmpsb and cmpsb mov cmp xchg (bad) lret add jle lea sub xchg mov inc jo pop pushf int mov (bad) jmp add lret clc add adc mov inc lea ljmp cmp cs inc xchg add ja outsl cli mov xchg rolb sete je test je and or je test je mov push dec sub dec (bad) jbe mov inc add mov or add inc mov in push loop icebp jg or test jne xchg je popa jo mov inc mov sbb mov loopne jmp add jmp add in push sbbl adcb push les sahf sbb lods jmp xchg jmp lea (bad) push pushf call and cmp push (bad) cmp js sahf iret dec mov inc mov call dec sar call push subl test add add lret lods bnd cld pop inc pop dec lea dec mov mov test inc and cmp clc dec mov dec loope mov sbb subb and orb inc testl pop js add enter adc mov xor push add push cmp jge mov jbe cmpsb xchg or test push ret jg or mov dec mov inc hlt jmp lock adc mov call (bad) xor push jg ret lds adc je scas sub jo (bad) incl cmp add xchg mov sub sbb jne mov mov je inc mov mov mov inc mov inc mov test or sti add mov in inc and inc and (bad) (bad) fildll and and and inc test movb sar movb xchg popl movups je orb cmp add or out (bad) je movb sub or sbb rorb (bad) inc add test movb data16 sub and add push lcall pusha mov ljmp add push insb ss or sbb (bad) incl cld std lds mov in hlt rcl add call sbb nop push or or loop add adc out dec or push xor aaa or stos xor mov or fldl pop mov lcall faddl push mov inc mov in aas inc xor movb mov inc mov es jne pushf sub jecxz dec rolb and (bad) mov dec mov das aas jne adc add out cmp nop dec and and call iret std xlat movl mov pop or pop cmp adc sub add push and dec andps jne push icebp cmp test pop push std jmp cmp ret movsl xor adc mov sti xchg les test cmp xor test jl lret push xor mov mov mov lock add (bad) insb jb (bad) adc pop pop pop pop inc adc add (bad) decb incl cmp adc jae mov xchg stos aaa pop or shr push nop mov sub mov rorl add rcr rolb and dec adc sahf pop int bound lea mov test mov movsb mov dec add test test jne dec pusha adc sub or call dec push add adc jnp inc icebp push movb xchg dec mov lock mov mov adc xchg pop nop mov pop jb xchg or adc xchg add call mov inc dec lea or add add dec add (bad) and mov mov jnp push sub add jne sarl or inc addr16 pop jne cmpsl inc pop push mov rorb out pminsw inc or inc inc nopl loope inc adc inc popf pop jl add pop sub mov std mov pop jl sub icebp sub iret and push enter mov mov jmp jmp dec or mov out adc cli jae inc lret mov dec inc out mov xchg xor dec in loope icebp pop pop cmp inc cmovs sub jb mov pusha inc test add shrl sub and or pusha test dec dec sub or inc pop jmp scas mov xchg xor add adc and movsl add js add je outsl enter jno push add inc and adc negl test dec or vunpcklps inc mov nop fiadd rolb push cmpw adc test pop add aam je dec inc mov and je adc movzwl add add inc cmp jmp insb dec add loopne jne decl xor mov xchg add add je sti add cmp jl mov cmp dec or jb mov and and or add sub push jge and xchg push and (bad) (bad) fwait insl call xor test mov push arpl out xchg arpl daa data16 aaa jl cmpsl imul mov movsl dec add cmp iret mov dec pop dec jb jo push inc lock cld ljmp mov jmp xchg or mov icebp jne movb sbb clc inc test mov adc dec or or push fidivrl or push es popa adc sbb cmp add mov dec add cmp inc mov jae add test ret inc das adc inc test inc mov loopne notl jne mov adc decl sub lea movzbl jecxz mov dec lea inc mov xchg dec inc mov mov add xchg push loope (bad) js fmuls mov insb pusha addl pusha das inc mov ret call jmp ja and push xor aaa adc jne (bad) jae inc mov and inc setne xchg adc mov sub mov ja xor (bad) (bad) hlt call dec arpl dec add jmp xchg lods xor and pop or fnstsw inc imul add mov aam (bad) rorb test popa inc sahf into or jge divl fcompl jb and out negb and mov shll fsubl push icebp or sarb jmp and arpl inc pop or aaa data16 push lds sbb in int3 add xor stos and inc mov ret mov and sub pop and jp enter fstpt fisub int3 xchg and fcompl loop loopne out and or dec inc xchg xchg scas mov push jae and pop add xchg data16 xchg iret iret inc xchg and push sub cli and cwtl sbb and or lock out fucompp cmpsl sub xchg mov inc test jo cwtl sbb and and mov sti sbb repnz xchg and push cwtl mov and add arpl lods sti and adc out or test je or out inc push aad psrlq pop daa adc pushf sbb sbb out inc cmpsb and int3 sbb js push inc aas xor xchg jmp mov jge mov dec and cmp out je or data16 jnp and cmp inc add and push xor sbb mov roll loopne (bad) inc pushf and cmp pop sbb xor fstps inc rorb jno jae inc and int3 add sti lods mov nop ja cmp inc inc or mov xor push inc jns mov fdivl inc xor (bad) mov jmp bound pop inc or das mov pop aaa rcl pop inc xlat cmc push imul inc xor cmp ja dec mov ljmp jmp pusha sbb lsl mov fsubrl cmp mov pop js fisubrl add dec inc mov fdivrs hlt push stos xchg stc pushl jo adc mov jo lea aad sub mov mulb popa (bad) xor imul push push lea jmp adc jmp xchg xor jo movsl dec mov jne test out or test or mov or adc adc (bad) incl clc mov push xchg sbb (bad) decl dec mov dec mov dec mov dec mov dec lea dec and mov sub inc lea dec sub daa clc inc cmp jb cmp shl clc cmpsb inc mov or xor inc cmp dec and decb jmp loopne mov jns pop faddl sbb hlt inc mov nop orl push mov add add jo pushf sar pushl mov mov and out and inc mov inc mov inc mov inc mov mov inc jne jne dec lea mov subb jmp or enter xor jmp ja adc or rorb loop dec add test pop adc pop leave mov bound push popa cmp adc imul cmp insl mov push and outsb int3 sbb sbb push cltd cmp and and (bad) xchg adc lea (bad) das cmc ljmp fs dec sbb xor das cltd fwait in nop lds cmp mov das xchg bound popa out add das xor add nop ret das gs cmp push (bad) ficomp ret push cvtdq2ps sub jae loopne pop jne pop jmp fs pop pop adc or and adc fldcw sbb xchg sbb mov xchg xor push and cwtl cmp andl out mov push ja out int3 call jae adc xor fs sbb das add and das jo or sub hlt xor fnstenv test jne sub sbb bound das test ficompl dec cwtl mov out das cltd sub jns das arpl enter das test das dec sbb shll add jae sbb sti cltd fwait insb add mov cwtl mov das div loope fcompl into sbb fldenv arpl mov das (bad) movsl pop cwtl cmp aaa imul xchg test daa dec das insl adc cmp sub mov and sbb insl inc adc cmp and ja das insl mov (bad) fcompl das or pop xor outsb xchg sbb jnp das mov repnz sbb dec mov out sub int3 fstpl or movsb adc cltd add cmp jge adc pop push into or xor popa out das leave add das cwtl cmp sub ja xor mov into (bad) add outsl rcrb stc icebp (bad) ljmp ret int call idivb mov xlat adc xchg and adc jbe dec push jmp cmp cmp inc mov in push jae pop jge adc xor jg inc xchg push dec sbb jle iret cmpb sub or call sbbl add and lock jl out xor adc push insb sub lds rdmsr mov outsl sarb push and adc adcl mov pop xorl imul dec adc (bad) or shll fisub stos push cmpsl adc xchg sub leave (bad) sbb (bad) sbb add out add ret adc push mov (bad) pop lahf (bad) icebp ret arpl mov push inc mov adc push and mov dec leave dec add stos and adc push pop dec mov cli sbb push test mov js das push inc add jo push and cmpsl mov or stos mov inc call mov je push inc call call mov pop js sbb dec xchg cmpb dec sbb stos sub fadd sbb inc mov push ja and add add call push sarb test jne push js jo xor push call pop dec mov inc sub push cmpsl pop jmp sub ret test xchg and pop jne test jne push sar inc test je sbb push test sub push test jg or inc in mov and outsb and mov jo add sbb into inc andb shlb xchg pop repz jo inc pop fldl add inc aaa add testb je outsl (bad) clc sbbl inc pop addl ret out or call push jo int ss dec lret ja mov push xchg mov mov cmc movl mov mov dec mov or daa or or inc jl es test or gs pop jle push xor jp push outsl mov add sub call roll add iret dec mov dec in or add mov iret add dec sbb sbb mov xchg push loop mov pop dec mov inc dec xor mov add mov (bad) inc jno jmp iret mov push seto stos pop jge inc mov and add scas add dec mov mov xchg ret mov inc cmp add (bad) flds jae,pn push inc rcll jae adc out ret ret add add jmp outsb mov jmp mov js jp or xor je sub cli divl add jne call popa sub xor mov hlt sub xchg xchg pop mov iret loope xchg xchg add push ljmp call pop jmp test je mov xor in pop je add xchg call add and inc cmp arpl add dec lea call adc mov setae clc and mov or and push add fs (bad) (bad) mov xor je jo mov fiadd add adc add or call pop add call push adc mov jae cltd cltd xor or add dec aam lods push out push orb jg call inc mov jbe pop (bad) bnd mov mov std xlat daa arpl aam xor xor sbb mov call mov jne les test arpl mov or xor add mov mov fnsave or out pop add std mov cltd movsl pushf aas adc cmp rolb mov mov dec mov mov xorl push std cmp (bad) out and xchg jns (bad) mov sete shr and xor out inc (bad) or jb cmp (bad) outsl pop inc daa jle and cmp (bad) in inc add daa inc mov mov xor out repnz mov push call loopne jmp push je sub fimul inc push sbb or inc mov call xor ja mov fnstsw iret or add pop inc cld test mov bswap sbb sti nop dec call mov or mov call lock jb ss inc sbb sub xor xor mov pop pop pop lock xor mov ljmp lods data16 test mov lcall ja cwtl hlt mov mov (bad) xor dec test push sbb iret mov push (bad) incl push jl mov inc addl inc addl lea js add ret inc mov xchg test push int clc test jne mov xchg inc push mov xor inc and pop inc jo cmp dec mov mov inc adc dec cmc pop aad stos cmpsb add inc sti lock sub call cmp mov dec adc inc xor push ss dec mov pop add lods push lods incl test jle addr16 adc jmp setg jbe int3 adc cmp es push in bound pop or (bad) mov movsb xor es xor sbb xchg inc pop or rclb pop inc ficomp mov iret xchg test cmp loope ret mov jne adc cld push (bad) lock and xor ret mov call dec icebp mov jmp (bad) ljmp inc pusha dec sub rorl adc or lock lock stos test (bad) adc test mov aaa rcrl call push imul add test add push cmp shrb sbb decb fadd dec cmpl xchg push in je in mov push shlb (bad) sub pop shlb (bad) sbb mov mov or jl call push adc dec sarb jl mov or test sbb scas jne cmp dec inc xor pop pop ret test cmpps and in add sahf jne xchg lods dec push out pslld jmp repz addl inc add push and jmp inc pusha enter add orb or dec cwtl mov je add jle test jne fisttpll mov lds mov leave ret data16 test jae or dec ljmp cmpsl sub mov das pop push lahf or call stos test or aas mov call pop fmull adc push inc mov cmp pop jmp inc movsl mov push mov popa loop popa cmp orl imul sub je in push test mov add inc add and test xchg xor dec mov dec adc (bad) add xchg sahf js cld je aas jno out adc sub jb xchg push cmc test or inc or mov sbb imul mov adc jg in rolb lock inc ret pop sbb cmp push mov call push add pop test jne dec inc xorl scas or xorl cmp and in stos or pop ja push in xchg les push es pop jmp jns xor and and test mov dec sbb sar rcl out push (bad) mov stc inc cmpsb xchg adc in cmp cmp loopne sbb mov inc pusha fs pusha mov or jmp add (bad) fmulp dec idivb dec pop (bad) out pop sub in sub inc jp (bad) dec mov aaa xor ret nop add add pop (bad) push add cmp aad gs addr16 les test subl push roll into dec lea adc cmp andb inc cmovg aas inc out dec lea sbb enter sub in cltd and pop inc pusha dec and and xor and and push jmp push sar outsl call or lock xor pop add mov xor lret dec xorl mov scas xchg pop dec mov or add lods mov dec pop mov add xchg fst incl add in mov xor lcall dec dec and mov xor jle movb inc sbb call popf std jno arpl lea inc mov ss and push push add mov mov add dec mov pop adc push and push (bad) xor mov xor inc adc sub ret dec inc fidiv and inc mov leave inc call mov std pop inc jg mov (bad) fcos adc (bad) pop sub add inc sarb je stos and je rolb scas jecxz inc arpl in or adc push (bad) je in add je push add pop sbb add jp sbb dec mov pop add add imull xchg add xor adc imul push sbb add adc dec cmpsl mov je xor (bad) mov push loopne xor adc add daa mov test pop call jmp incl add in cmp jp lock loop add sub pop adc mov xor sub pop add inc mov in test dec xchg stc call out dec repnz add call mov nop ja mov inc xor testb lret dec mov inc cmp xchg jne inc repnz mov dec ret (bad) ja icebp je jne push or add je inc pop and jno ljmp (bad) mov pop into sub fild aad inc bound cmpw jle aam mov fimul pop push aam loopne mov dec add add clc imull divb das jne arpl add inc push pop push push fdivrs inc shll jle,pn (bad) adc jmp (bad) ja call inc test mov out sarb mov pop in sub pop fnstcw mov sbb or enter (bad) jne adc mov dec jecxz push loop sbb (bad) jg fnsave sub mov push cmpsl mov outsl call lret sub pop xor jmp scas lahf (bad) xchg adc inc aas xor lret movb test add sub loopne push cmp sbb push sbb push add adc insb jns push xor dec out sub popf or pop and dec scas ds inc xor out adc adc rorb dec mov scas or mov jl jnp sbb inc sbb (bad) je stos pop inc xor sahf loopne mov fimul push pop and sub test cmpsl (bad) in xor dec cmp aad dec loop ret movsb xor ret dec test or dec push add fwait es pop and pop scas jle scas jns dec mov call xor std mov call pop add test mov push push popa (bad) inc adc pop cmp psubsb add xchg mov outsb mov sub call pop push mov and cmpb loopne fist js (bad) jne loopne inc add xchg inc or jo pop jnp arpl aas mov cmp xlat and xor nop (bad) pop add das dec mov dec mov add test (bad) mov out push movsb or adc shr cmp subl (bad) pusha cli mov add or sub sbb add sub and adc cmp lock dec les pop add mov dec dec roll add lock push (bad) fiaddl jne stc das dec add xor sub push outsl cltd aas jle add cmp and in out repz pop mov jmp out das xor xchg imul scas pop addr16 cmp dec jl pop cld sbb add je dec mov (bad) std sbb push pop inc subl cmpsl mov dec sbb sub and je inc cmpl sub ja mov inc adc cwtl inc mov push xchg mov (bad) xor xchg pop sub cmpsb cmpl xlat sarl jge dec (bad) loope (bad) call mov mov and out xchg pop js loop shr or je sbb mov mov dec loopne add jnp add pop push jg fs jge dec (bad) mov mov push adc and pusha jne loopne call in cmc (bad) ljmp xchg adc arpl sub xor outsl call jmp jne addb push popl dec add mov call ljmp je mov and cmp das mov pop dec sbb mov andb mov test push inc dec add test inc cmovs jmp sti dec dec aad out mov (bad) jo fdivr std call adc lcall push pop adcb (bad) js push cmc cmp cs js push add dec cmpsb cmpsl jne or mov dec xchg or jg sti adc call testb inc icebp pop or test cmpsb mov add dec mov arpl jmp (bad) sub cli or add dec arpl inc sbb in push fcos es adc jmp mov dec lea movsl xor mov push pop aam and push lds out js xchg ljmp ret dec hlt (bad) cs pop adc jb lods mov and and call mov pushf mov dec call adc jmp jp push mov xchg (bad) and ret push and (bad) sar push idiv adc mov jne mov add adc push cmpb or jns (bad) int fnstcw jmp (bad) incl je xchg call call mov out cmp adc inc call jmp mov movsl jg sub add mov lods inc add inc push cmp mov mov dec cmp jb inc adc fisubrl clc mov lock or push and sbb lcall xor (bad) and adcb outsb js test je add js jno arpl sub pop push (bad) jbe je or pop (bad) idivl or or inc pop test cmp lret inc push sbb or xchg mov icebp mov mov out push jns aas adc iret aaa adc pop fs push pop (bad) setno rolb cmp pop adc imul add mov ret test push lea or and (bad) dec sub push jne outsl dec dec ja mov pop jae shr xor add outsb js shr push xor (bad) mov inc xor inc mov mov adc add add add iret dec mov mov mov fucomp pop hlt push ret jne add inc jb fs jne sbb push push pop cmc pop enter or jecxz fcmovnbe inc aad push aas cmp push sbb test nop mov out out (bad) cmp incl jne inc mov jo add jmp cmpsb decb scas rclb jne call xor hlt shr sub pop mov (bad) mov inc pop ret adc and lahf and add jmp jg pusha and lds into push inc mov call cmp lea add mov fucom call push cwtl outsl xor dec mov mov fwait je mov adc andl mov arpl dec mov les cmpsl das or jne dec test addr16 push jg lea dec mov mov mov outsl jne pop xor in pusha cwtl lock pop je cmp jne inc jle mov push jle adc push push das (bad) call add sbb es or mov pop ja and add push jmp xor ret outsl jmp dec jg scas push sbb xor aaa adc dec mov insb and lea je jg adc icebp call pusha testb mov push xor into push push addb icebp out mov pop jne jo lea pusha mov inc mov mov mov call les mov xor or inc xor mov fisttp shrb and push orb pop adc ja test fbstp jne push mov iret adcb loope dec add ds addr16 call inc and punpckhdq addr16 inc xor push lock test inc and (bad) mov pop fwait in cmp mov cld sbb call call inc outsb push mov add je sub loope addb inc mov fdivs in dec or mov and sub les aam fcompl xor (bad) mov xor cmp ss loopne jle push inc popa out jp repnz call mov mov mov sbb call arpl add cmc pop adc adc pusha arpl cmpl cmp push ret cwtl je inc add add dec adc inc icebp call daa sahf jecxz jne pop cmc sbb add push and arpl je call and dec ret lahf rcrb fs dec das mov lahf ret fmuls and add lahf or jne xor call arpl xor leave sbb adc inc mov and mov xorb clc add push inc mov addl jne test arpl outsb add sbb (bad) rorl add out outsl sub imul test pop push sub fcoml lds add mov mov aas mov int das cmp je sbb test or or je push sti xlat call (bad) xchg test aas fiadd dec mov std insb dec pop add aas pop cmp mull testl (bad) decl sbb sahf inc js lea movl lret mov cmp and mov pusha cmp mov rcll mov or aaa bound (bad) mov and jo lcall push inc lea mov mov jne div (bad) mov test jne inc mov inc or and inc mov push negl test or (bad) jae jmp lea out pushl inc mov dec lea mov dec mov dec mov dec mov je insb and push test (bad) or dec addl add fild adc call mov mov inc andb mov incb inc pusha lds ljmp mov mov and or test jne xchg arpl xchg jle dec incb mov dec mov push adc orl mov je loopne xor pop and xchg add sub inc cmp icebp (bad) decb mov jo inc jl mov mov xor and xchg inc push rcrl mov xchg ret popf add pop leave cs frstor lds pop call outsb gs jmp jmp jg lea fucomp or (bad) inc inc mov loop je dec subps pop cmp mov sbb daa cmp pop (bad) or and pusha mov inc test xor inc mov dec push test or jg cmpl jne add cmp subl inc xor or adc scas inc lock dec aaa movsb call repz pop ds hlt dec adc je xor fs or pop frndint or btc lcall jo xor fldcw adc mov push sbb loope xchg xor inc mov jae mov add in and lock mov xor fwait pushf aas sbb xor mov xor sub cmp dec push mov add shr cmp movups (bad) out (bad) outsl cmp mulsd pop (bad) ucomisd jb subsd dec push adc ret cmpps cld or inc pop inc sub sbb lret js movq mov or jo es sbb or xor pushf and je scas cmp sbb lret jbe mov cmpsb mov fisttpl add and repz push outsb or dec and fisubrl adc lcall inc mov (bad) or pop aad roll pop and mov mov jle pop mov fs icebp rcl mov add ja shrl jecxz mov pop add fild adc add push roll leave sbb test cmp cmp dec cmp (bad) movsd push mov sub add sbb loopne lods dec fnop orl adc std mov clc jns ret lcall add cmovbe dec lea call cmp test leave inc enter adc add cwtl add mov mov dec mov xor bound dec mov aam mov xor hlt mov jne incl mull stos mov call adc sbb incl sbb mov outsb sbb mov fisubrl mov ret mov and dec add sub mov test dec pop (bad) sete rorb test cld std sbb add dec mov call test aas (bad) xor xchg sbb mov incl push jmp jl inc pop jb sbb sub (bad) adc fnop maxps sub push arpl push lock pop cld cmp mov jl (bad) (bad) (bad) jg add lock loope inc cmova or rorb icebp dec cmp inc aam push sub dec cwtl push inc jge out repz adc scas dec lods pop sbb les pop push mov mov or shrb lahf sbb cmp jmp mov sub gs inc jb mov scas inc scas sub popa outsl dec mov inc sub jg shrb adc sbb pop (bad) (bad) xor jne call jp in mov iret cmc lods sbb aad lahf mov call cmp lock mov inc adc add fnstcw add dec cmp pop jne add or les mov shrl push incw mov jbe lea sti push lahf sub or mov cmp sub ss cmp or sarb add lods aad call mov nop xor (bad) push cmp lahf pushf loope adc bound aad test jb lock add lods jg (bad) loope orb or jnp dec out pop btsl jge and adc mov add cwtl xor xchg sbb das xchg andl out loope sub je adc cmp shrb fisub cmp call cmpsb or repnz dec rorl ds pop clc (bad) fcomps adc jl sub mov stos add fwait inc call jo sbb ret nop mov sti cmpsl lahf int3 sbb sub jne call cmp add iret mov ret das mov scas mov call push ret mov xchg mov scas imul dec lret mov or dec (bad) add call mov sbb inc cmp mov add jg xchg push je lock mov add idiv adc or fisttpl call call or add ja call jae mov xadd push loope (bad) or call (bad) daa jle xchg call mov jmp dec mov cmp add outsb sub mov mov xchg adc call xchg fidivrl loop leave ljmp xor call sub fcomip call ljmp out ss or xor jp inc in ret jmp jo cmc mov lock inc mov out sbb aas and je pop xchg negl pushf cmp jo ret call xor psraw stos sbb push mov jp push (bad) jmp add in add dec lea and dec cmp stos lcall xor dec (bad) ljmp add mov sub inc sbb pop (bad) jmp push cld cmp push test dec add sub je sarl sbb cmpsb mov call jae jg (bad) dec mov jne mov sbb push add mov mov mov sbb mov inc pop (bad) mov and cmp jbe stos pop leave dec cmp je xor movzwl or cmp jne dec das cmp jne (bad) (bad) (bad) jmp mov inc mov dec lea dec cmp jb dec lea inc cmpl jne inc mov insb mov inc and rorb je xor adc or dec cmp rsm (bad) jg cmp shr push mov add dec add inc ja nop mov and or (bad) pop cmpl outsl cmp and jne mov dec lea dec cmp jb jb inc push and jmp decl add add dec in add dec mov js pop test sbb popa or sbb cmp and mov ud1 add xchg in pushl shrb ret mov jecxz aad cli add test iret or fadd dec push test sub clc mov fldl rcrb cmc aas and addsd jmp add aaa (bad) cmp jle sub aas (bad) push add mov je cmp or ret cmp add repz dec mov adc pop loopne movsl in in sbb arpl das (bad) cmp xor clc add mov jp test outsb inc call mov enter sahf jl fdivrl sbb jl add idivb and ret jl and icebp mov call out (bad) and call outsl fild test pop je cmp sbb loopne push pop rorb push cs jmp dec mov inc sub test adc jmp loop iret mov xor jmp das cmp out scas push mov sbb (bad) jmp push ds call push imull (bad) jmp push (bad) into jl cmpsl aad push cmpsb jecxz aas (bad) jne push jmp adc test dec mov add and cmp pop (bad) out decb mov push add test xchg cmpl jne dec cmpl in test add inc dec jg cmp pop inc xor jbe adc mov xchg dec mov lods pop add je iret dec mov pusha fadds push and loop (bad) mov dec test jne dec mov inc mov mov push call pop je and mov pop dec inc jmp lret push push enter dec clc add dec mov movswl test das shll je dec add mov cmpsb jg mov push negl pop mov or pop cld sti mov sbb dec cmp ret test push popa add fstl pusha jle loope ja arpl jmp xor (bad) cmp inc cmp adc (bad) sbb mov sub inc cs mov cs test push das out sbb cmpps jg push dec mov lds rolb sbb xchg shlb cmp inc mov dec mov dec mov dec mov dec mov (bad) mov pushw cltd call shlb fisttp or jne je jg test dec mov jne jo mov movzwl mov jmp add inc or dec clc aas adc adc xor push inc mov inc cmp unpcklps cmpsl or cmp push push sbb adc jne or lea inc mov sar dec xor movhps sub mov inc cmp jne shrl push jg dec add jmp jg mov add add dec pop pushl dec cmp mov jne inc test jg out xchg sbb roll inc mov dec add inc sar inc out pop (bad) inc out sbb and inc sub inc mov inc mov (bad) lcall inc inc shl inc and inc cmp inc cmove dec mov stos (bad) cmp jne or (bad) decl fsubr cmp (bad) icebp (bad) jne dec add dec cmpsb jne sbb sub loopne add xchg add mov pop stos mov push mov jbe mov jne sti (bad) lcall mov (bad) loopne inc cmp dec xchg mov dec mov mov mov lea (bad) fmuls inc sbb lock xor call jbe and pop mov hlt mov inc xor mov inc mov xchg sti sti or mov push ds mov popl cmp pop add mov inc push xor pop (bad) (bad) mov adc call add (bad) loopne sbb mov cs adc aas dec out call cli (bad) pushl leave call pop paddw push add (bad) fdivrp (bad) jmp int3 fs pop imull dec mov adc dec mov (bad) mov jb dec mov mov stc call inc daa sub xor mov add unpckhps adc test mov or sahf inc stc push aaa hlt mov dec pop push and sar mov bound lea add inc popa mov dec add addl out sub (bad) cmc push add out xor sbb es adc iret mov cmp rorb insb push pop mov and fistp sbb call adc push mov add mov inc and and test mov mov inc pop (bad) adc dec shr inc xchg pop mov js add dec jg and dec adc adc cwtl sub mov scas push aam mov cmpsb ja jne dec (bad) dec (bad) cmpl addl mov jmp xor pop xor cmp sbb xchg in xor sub sbb pushf push fwait xor sub add dec pop dec mov mov js cmp adc add adc rcr and inc sbb mov mov mov push in int add pusha xor pop or sub rorl jle dec pushf add in movsb icebp dec shufps decl add add pop test pcmpeqd pop pop test je jmp orl jl inc mov mov dec push out (bad) pop call dec mov int3 inc enter bound adc mov adc jg cli incl mov je lea call add je das ret cmp dec and lahf lcall stc outsb jb (bad) mov mov mov movb lahf push sbb out dec mov call mov int ret jb in push and sub adc shr xchg push mov push cmc loopne mov add sar adc push push add lea call mov inc sub inc (bad) (bad) jmp or or outsl scas and aam dec into dec mov mov add call or ja call pusha or test je (bad) loopne ja call dec lea dec cmp jb adc dec add dec lea shl (bad) dec loope push jecxz call ljmp xchg adc dec fdivrl mov mov cltd and mov dec mov dec cli (bad) mov jmp scas out mov mov adc out (bad) call xor inc std pop pop jmp mov dec or pusha or jmp dec push cwtl outsl cmp ja loopne out aas fmull call and call cmp pop in sbb lret call dec std aaa cmpsb lds xor shl inc adc dec mov les dec mov dec and inc mov in andb lods lods jns sbb mov inc mov jne or fsubrp mov decl call jmp les jge (bad) test ljmp fildl dec add mov xor dec mov add dec add call ja cmp ja jmp das cmp je sbb and inc mov xchg mov je inc insl pop dec mov sbb pusha out inc xor les dec mov (bad) lds test sahf (bad) jmp loopne pop out fildl xchg add mov inc out rcll mov pop cmpl sub dec or (bad) lcall and adc push dec lea or into aam ss push les pop jno xor inc dec pop sbb dec loopne inc and popa ja (bad) dec dec sar dec imul dec sar dec sub dec mov dec mov and dec sub dec mov dec mov dec sar and mov ret add push lock lock movl jne xor push shr call out inc cmp je cltd or repz add mov rol push add jmp sbb jp mov cmp jbe and (bad) xor mov testl mov add xor popa pusha call clc in add rcl and jno add dec cmp inc sti mov adc std dec mov ret jo lret dec int3 sub dec pop push adc test pusha lahf inc leave sbb lahf outsb sub fcoml lahf out mov scas orl dec sub cmpsb orl mov aad xchg push test cmpl mov andl sbb sbbb inc orl and inc pop jmp push mov pop ret add addr16 add jle mov cmp je loope sbb or jae in lret cli das or lea sbb xor dec mov call jne call sbb mov pop inc cmp je or ja stc ret ss sbb lret test ljmp push (bad) incl push jmp shrb fwait loope add mov outsl jmp aas push sub sbb inc sbb push cwtl push add dec mov call xor test sub add adc jmp and outsb jne aaa mov push mov ss dec mov mov call xchg sub inc js loopne jmp mov or je int3 arpl cli dec adc je pusha inc mov or xor or push sub and imul ja outsb out inc loope test nop ret xor xor jge loop iret mov cs cwtl pop cmp call mov mov jecxz loopne incl inc adc sahf rcrb mov jmp mov mov call jne pop push cmp dec cld sub rorb call outsl clc test inc mov add mov and call jmp add jmp sub xor jns (bad) (bad) daa adc pop and aaa psubsb call (bad) pushl adc jmp mov (bad) push add xlat call add add stos jle mov sete sbb xchg paddusw cmpl cmp xor bound call mov je mov jne jno sub jae inc mov cmp dec jbe decl call mov call cmp incl add dec test jne (bad) pop inc loop push push je (bad) std (bad) cmp fsubs sti add ljmp loopne inc lea add icebp add adc or out in cmp adc dec mov pop rcll mov push popa add ficom xor loopne mov or dec mov sbb rcrb into test mov (bad) mov and mov xchg fsubr les jne push or or dec mov scas dec add mov dec push jp jg inc add xchg push xchg pop inc and inc cmp call cmp sub fdivrp cmp mov call call jne (bad) cmpsl mov and jle cmp and jecxz or mov outsb iret xchg mov imul popf insb mov call lds sub sbb mov in jmp ja mov call sbb xor add cmp in pop iret xor or ss mov cmp lcall push call call mov dec cmp push cmp test xchg test sti mov dec add add decl (bad) not and and jg push mov cmove dec lea sar pop mov inc fiaddl rorl add sti dec cmp jbe dec lahf jo mov cmp push aam mov das and call push cmp dec fmuls in data16 xchg add inc dec mov jmp nop jg loopne hlt lea cmp call fcmovnb paddusw xchg mov stos mov shlb fistp add sub push xor icebp lcall fdivs sbb sbb sbb hlt pop mov sub in sbb sbb aaa jo rcrb cmp aad je popl pcmpeqw push lret add mov sahf jo or adc cmp sbb add leave push jmp cs lods adc or xchg lea xor enter inc dec jb and inc push cmp and inc pusha or sbb fidiv test mov adc add mov call adc lock int fdiv fcoml and adc hlt mov inc aad jo test add sub push mov adc add xor xor rcll cmp mov enter dec cmp lds dec push mov or sbb out addb (bad) fwait mov cmc push add repz push push out and push imul pop xchg cmp add mov das mov das xor or inc addr16 sbb and decl mov mov jge xchg leave push dec xor call sbb std lcall jmp pop pop sub cmp addl mov xor dec push mov (bad) sub cmp inc and mov fmuls mov sbb call mov loop inc sub sub pxor pop and jns adc add add dec xchg jb push mull sbb jb cs outsb leave enter sbb icebp or scas push das add aas jo inc out movl stos call call lea andl mov daa add cmp jbe test fwait or std dec mov pop gs aad aas ja lea (bad) cmp add adc dec mov lret adc jae cltd cmpsl and cltd inc sar lahf cmp je pop jle add jle cmp fidivl test jg adc ja je jle pop jbe rol mov fadd cmp out jmp lea ss add pmaxsw aas outsl cmp adc inc out sbb ljmp stc inc or mov inc push dec cmp arpl prefetch std cmp aad add je jle hlt cmp movups pop mov out (bad) bound jle and jg mov stc sbb loopne clc fnsave stc mov mov (bad) leave outsl cmp jbe shr jle xor test or sub sub inc mov test xor test je ja lret loop ror roll pop cmp ljmp inc ret inc (bad) cmp cmp lret aas jg add test jae and mov stc (bad) xor push xchg aam (bad) iret inc push add xor jne jo push push xchg cmp fcomps stc mov mov or xchg les lahf jg cmp lock mov pop add out xor or jne sbb inc das cmp inc adc mov cmp fwait xor inc bound mov test outsl inc adc cmp (bad) scas cmpl ret mov add ret sbb jge pop fmuls test aam ja pop add je lea add jo add inc push nopl (bad) dec jmp stos xor cmpl scas cmp emms inc mov cmp push sbb aas cmp sbb sbb mov push adc (bad) mov (bad) jmp sub push add cmp out xor scas jo orb pushf enter pop subl test js cmpl dec jo,pt stos inc and push incl and pop mov test (bad) push xorb push adc test movhps push dec mov mov push mov fdivr push ljmp pop addl frstor sub push dec push out inc dec cmove les orb cmp pop inc std arpl adc add adc push mov cmp mov je ret inc call xor testl jae mov cwtl test out insb lock mov (bad) jne jne,pn addr16 fbstp sub enter adc scas mov sbb addr16 mov sbb into or aas pop push pushl jmp ud1 mov adc and push ret outsb test call or add add cmp dec push scas addr16 jo out fucomi mov outsb test and dec pushf hlt sbb cmp ret push xor sar lods sub inc push adc sbb sbb and popa or gs and ret sbb jg cmp (bad) jge sbb pusha in or mov sbb aad psubusw fiaddl add sbb or xor xchg lcall push push xor les bswap dec fdivrs in jae and xchg inc push cs cmp das icebp fcos ss popfw aas pop rcrl xor mov mov xchg push rorl jno hlt dec incl rorb push sbb fwait jne inc movl jge mov dec movl or sub add call sub and (bad) call mov test je cmp fld1 cmc idivl adc jnp lcall push adc (bad) xor test pop adc sarb loope rdtsc ret and les dec inc mov inc inc sbb call jg jp lds test xlat sbb int mov pop aad sub dec fdivs mov in ljmp popf mov je dec mov call mov push nop jbe adc aam nop lea frstor sbb adc add outsb sbb xlat push add mov std pusha jg xchg jmp out mov movsb fucomip mov cmp dec lea test adc mov dec arpl orl adc mov ret dec lea inc insb pusha or call jge int3 mov mov call dec cmpl add mov sub stos aam decl cmp mov dec dec mov dec div dec sub out mov dec mov call push popa pop adc dec xchg (bad) cmc loop test mov jns jnp mov inc dec lea pop fistl xchg sbb mov ja dec mov mov adc xchg pop sbb xchg jnp sbb sbb adc mov xor out jmp add jl sbb inc into inc mov add adc and mov and sbb fsubrl out enter xor sbb scas sub and inc add add (bad) addr16 mov sbb push pop add inc pop jmp fmul les lea xchg sbb cmp nop mov adc xorl inc lds or cmpsb stos fcomp pop cmp call mov sbb in pop jne test cmp pop inc xchg push inc divl cmpl push push lock arpl xorl loopne or cmpl jle stos mov mov sarl cmp mov data16 cltd jne sbbl test aam cmp and jnp cmp jne out fldenv orb ret ja cmp pop lea call dec sub add sbb sub inc fsubr lea in je shrl jo add or add fnstcw add dec lock inc xor dec lea mov ljmp inc call (bad) or xchg sub in into lcall push inc mov out add xchg fsubr xchg lods sub scas lahf pop pusha cld aas cmp push xchg mov je testb add dec movl jne dec add inc and add push push jbe js jg ret xlat dec or or push notl test inc pop neg add inc jne add out dec sub xchg inc fdivr or (bad) (bad) jmp or mov inc mov jmp pop outsb adc outsl jo mov sbb cmp out add pushf pop addb inc mov in cmp inc pop inc andl je loop ja sbb roll xor decl decb roll aaa sub add nop sbb add subps mov call adc mov mov dec mov stc dec mov (bad) pushl orl xor test inc cmove inc mov call dec lea sbb add out adc xor inc popa add jmp push sub stc call jg mov dec sub and mov test dec cli (bad) decl loope mov pop sub mov test test (bad) hlt jne test xor addl pop jmp ffreep loopne or sub loop or test mov pcmpeqw inc xor jmp adc call pop (bad) and and adc mov inc mov fcos (bad) test adc cwtl mov add std je call ret aas push sub lahf aas and aad mov je dec mov ret inc inc std or daa mov pop dec mov jbe incl jbe lcall mov xor movb inc add ja mov add mov inc mov mov or lods dec add mov jmp adc sbb mov mov and adc cmp nop mov add mov xor int3 push std and mov adc mov aaa push push mov add cltd cmp dec cld scas call gs sbb pop in out (bad) mov dec lea loopne,pn xor insb je sub aad inc and outsl or sub iret (bad) movsbl outsb cmp xchg push imul inc movzbl dec sub test mov lea lea je cmp emms insb test je dec cmp push test jne inc cmp ret call jo mov jmp pop (bad) cmp xor inc add sub inc rorl xchg popl sti cs inc test je sbb adc int3 xor dec mov sub mov pop inc clc mov pop lods fistp dec lea insb and aad clc imul or call dec and pop out push movzbl inc movzbl fnsave push inc dec mov inc push mov cltd scas imul pop sub mov mov mov std mov dec cwtl dec cmp jae dec xchg cmp jae mov add movb insl clc (bad) mov (bad) mov jmp sub scas pop js rorb dec cmp outsl pop adc jb out loopne cmp test pop cmp jne clc dec mov cli adc mov inc loopne or out fidivr mov (bad) shr maxps outsl clc decl cwtl inc mov iret add inc mov and inc sar pushl clc add dec arpl dec push inc sub shl inc or cmp inc mov jne stos (bad) pop mov xor xor inc mov adc inc mov jmp add cmp jne mov adc cmc mov clc or mov lock push jo push mov jg fistpll mov add inc mov sub rorl adc and jl out xor test cmp inc mov inc setge inc cmovge jb loopne pop inc lea fcompl add out fldl mov nopl inc cmp mov jg andb sbb cmp jnp mov inc test dec lea movb jne cmp mov test xor out jmp outsl test cld cwtl dec add cmpsl dec cmp jne nop dec sete decl inc add cmp jne cmp cltd jo fstpt ret xchg and or pop xor mov ret push xor dec mov fadds dec push adc and inc pop sub jg dec mov inc mov mov es add or add dec pusha mov dec fadds sub dec jmp inc dec xor mov into aad pop xor jge fimul test popf and ret lods xchg xor and out in jmp push ja incl cmp je cmp jne and adc sbb jmp or mov ret (bad) call call (bad) mov leave decl repnz adc not dec lea sub adc sahf inc inc add add cld mov pop xchg in (bad) or mov adc pusha stos mov test leave inc push pop rolb mov test adc jbe inc adc and clc dec mov inc fldl call cmp jg fcomip aas ficomp dec mov jl mov jae shrb jne cmp bound add test movb dec mov inc movzbl fs minps jl,pt out js and jno inc xor xchg cli incb mov and dec mov pop jns jmp repnz mov sub shl fmull ret cmp jg sarb scas mov push in jae loope rcll adc mov jbe xlat sahf jne or mov rcll test decl jne dec test jne dec mov dec mov jmp jo dec mov loope mov movsl fnstcw cmpb je (bad) pushl push mov add xor movzbl inc mov cmp mov add pop pop cmpsl mov jo cmp adc sbb je decb orl adc push aad pop enter movzwl inc mov dec mov inc mov add stos scas addb cmp sbb popa inc add push mov jle scas test je je push adc ret movsb lahf ja add pusha je mov dec sub dec arpl dec lea int3 je add sub decl mov cltd not xchg (bad) push add and adc das incl insb add jne jbe xchg cs cld sbb or shr (bad) (bad) (bad) (bad) pushl rorb loopne dec mov dec mov dec add dec cmp jb dec lea dec add jmp dec mov cs dec test dec lea cmp ret ja rorb loop cmp lds clc dec mov mov add add xchg nop add lea push inc pusha lock call cli fldl mov jge add out jo inc call test (bad) dec mov call aad jp sbb lea mov cmp dec mov push add roll fstps jo ret sbb jge adc decb adc add outsl jb mov dec lea cmpl lea dec jle fsubrp mov call add sbb out and movl and dec lea cmp daa adc mov in adc add int mov add out loopne ret fisttpl adc sbb push or inc outsl mov mov inc push lea add lahf or in or xchg add sahf or jbe add jle sbb inc call std (bad) (bad) outsb add add add dec mov mov mov inc lods or xchg pusha out pop jmp roll sub cs ss iret jnp and xchg jp xor lea fdivr fstpl cmp cmp jne mov push cs and mov out outsb call rorb xor add ja je dec cmp je add inc mov pop dec ffreep fbstp push rcrb dec mov call dec call aad call mov add cmp inc clc dec movl jg mov dec mov mov or and mov jle dec lods call dec clc dec add xor test push orb jae or xor pop jmp lock push jmp dec mov mov cmpsl mov adc cmp mov (bad) lcall inc mov nop dec mov inc ret jae mov loope push (bad) adc push fdivrp lea or mov std pop xchg call jmp decl jle out popf mov dec mov aad dec mov fiadd jp pop into call adc adc cmp jae sbb pop pop jmp pop movsl mov dec cmp cltd jo or lea ds mov push inc clc push enter imul clc lods mov pop and dec mov sbb dec mov fcomps adc stc call (bad) out les fdivs lea mov sub (bad) (bad) mov sub push mov cmp pop fcom xlat jg dec call push lock jne push adc pusha push dec cpuid call pop and sub inc and jg add mov je movl hlt lret mov push test fcomip sub inc xor sbb add mov inc sub cmpb fs jns js mov ficomp jle call add lds dec mov inc sbb add or cmp es fist sub pop or sahf xor jbe sbb dec mov dec lea mov jns push or call jg fldenv xor sbb (bad) je add test jmp pushf mov scas call hlt out out orl lret fs call call xor sbb mov xchg inc nop add ret call jmp incl inc (bad) mov dec adc loopne iret test pusha mov add arpl sbb flds jno cltd js addb jo inc sbb ret sbb insb adc nop cli cmpsb es or call iret adc sub xchg mov push inc or dec (bad) adc arpl dec pop mov dec jl dec or out jmp or es pusha inc sub movl or mov mov sbb add in outsl xchg and mov or std cmc add call je or add incb pop sub mov and loope clc sub aad dec pop cld aas jmp dec mov dec lea dec mov stc add add aad or mov dec test jmp push insb repnz add insb and dec mov dec not inc pop rolb testl cmp decb dec clc dec arpl add out dec inc rolb dec cmp adc xor fild iret sub inc add (bad) jg fisttpll add (bad) dec mov jg xor inc cmp cld jmp mov jg dec cmp jbe add idivl dec icebp ss mov sti inc cmpsl add loop mov stos (bad) fwait mov dec add inc outsl stos loop sub inc aam cmp (bad) fist je clc add and fist adc add or aad mov adc scas arpl cwtl int3 adc adc dec jmp iret loope mov ret hlt in inc call adc add inc pop addr16 cmp je mov xchg mov aaa mov int3 decb test or add sbb popa js je cmp jg inc jl inc xor adc add inc cmp dec fstpt decl (bad) fcomps aas roll pop je out lods add cmp loop rolb mov jl add testl mov and jne into inc and jl and mov inc not inc and mov rolb icebp inc fwait test add pop or add cwtl mov sbb dec lea push icebp add dec mov push and dec mov and call jge xchg rorb movsb mov les shrb (bad) ljmp mov inc movsb or mov bound test aas setne inc mov dec mov shl mov sbb jp xchg adc jg or and push test mov or je or stos test call inc fadd scas inc je pop out icebp repnz call pop jb aam mov test jne mov mov js adc je inc push sbb pop pop mov orl and and dec insb js cmp cmp cltd cmpb test cld popl (bad) jmp incl mov push push decl fdivrs or pop pop sbb add adc and mov testb je fwait add cltd mov cwtl lock push adc or je push or inc (bad) mov scas xchg test inc (bad) fild fldt add mov dec scas xor jg add (bad) xor mov decl mov add sbb arpl adc and sbb xchg and jnp mov fnop xchg inc jge lock inc jle mov mov add fdivl bound (bad) test insb pusha xlat sub mov xor outsl xor push lcall push lods adc mov pop ja pusha test jne add aam push add dec fild pop mov adc add clc add pop cmp push je jge out scas mov sub (bad) or aaa add xor dec xorl cmp popl and incl faddl dec mov sarb sbb jbe push adc dec push pop call dec sbb sbb lock ja movsl mov dec jmp popf and mov or ja and and call (bad) ds adc dec lds cwtl sbb addl dec (bad) fs xor pusha (bad) sbb add and adc dec lock add call pushf sub mov inc jmp lcall and mov pop das sbb shll dec mov out inc inc pop push sbb out or or popl fcmovb add xchg (bad) fmull mov add mov out mov not dec les daa mov dec shl jbe mov or sbb push mov bound push dec test je mov adc adc (bad) jb call adc mov add jecxz adc adc sub xchg sbb xchg xor pop cmp jmp cli add ret mov mov xor mov sarb inc rolb xchg rorb adc pusha push rdtsc hlt das test add mov cmp adc ja rorl inc add in cmp xchg call cwtl roll jg add arpl ror sub cmpl add inc and pop fnstsw sub cmp inc cmp je testb add adc call jmp mov pop jb fs test test sbb sub aaa cmp enter push aam subl sbb je add cli (bad) jge cli je cmc sbb push dec mov inc mov and ljmp (bad) jne dec mov dec test jne dec mov imul mov dec lea jecxz dec sbb xchg das repnz call loope sbb call je test mov push ret sti or pop cmovbe and sub jne jmp stos fild je dec orl addr16 ffreep test cmp testb cli call dec sub jmp (bad) xor lcall add stos dec mov into orb inc and xchg mov push imull xchg jg test add bound aam mov mov adc outsb dec mov inc xor and es cmc adc add es out push pop test and dec lea dec mov inc jmp std cmp cmovne punpckhbw fadds in push dec test je or test repz jl pop add test jmp dec mov lcall add inc inc cmp jne dec mov xor cld mov es xor loop sti mov (bad) call or dec mov ja mov dec add arpl nopl dec jmp or dec mov pop pusha call add rol movsl jle bound inc sbbl andl stos add mov test jne sbb and sbb les test adc dec xor mov test je and dec out (bad) ja iret dec lea dec mov (bad) mov idiv xor cmp jne dec data16 mov call add aam and dec sbb or dec mov xor mov loope repnz inc or cwtl dec add dec jne mov ja mov aaa inc add fimul and mov and jge xor add std xchg inc and dec mov orb fsubs (bad) sbb dec mov loope icebp xor js inc mov or cli or jmp test in jmp das mov sub pop fnstenv xor aam and cltd and imul mov or (bad) stc jmp or sbb adc push out fidiv loope dec lea (bad) gs xchg sti sub movups push inc mov adc pop call outsb sub cli mov je inc testb mov jb cmp sub call ljmp add test frstor mov jne xor xchg testb je hlt es dec cmpl push mov ja movsb inc lods pop xor push pop add push sarb test daa sub je ja test mov xlat (bad) int cmp in sbb lahf cmp dec je pushf cmpb je jbe into fnsave mov mov cmp pop orl pop call outsl adc or cmp sub leave lcall and dec mov dec add call jmp andl aaa dec mov jae gs jmp mov outsl imul or adc mov push adc xchg inc fnstsw and enter outsb outsb arpl sbb out (bad) and cmp dec gs or sub gs fmul push sbb aas jg fwait jle mov (bad) adc insb outsl jae inc jo cmpsb test scas push or inc adc jmp loopne lahf mov push xor call xchg push enter das push sub mov mov or (bad) incl or jne inc cmpb fcmovnb inc cmpl fdivrp jo jne cmp (bad) xor testl call and add xchg call pop add cmp push cmp cltd and fcoml jne pop mov test mov or cltd mov inc mov and out mov add test cs hlt cmpl or xor insb loopne pop iret adc xchg in jg jbe add test negl stc call sahf je mov mov jge dec lea fstpt pop push or jne call or cmpsb and or pushf and out or fidiv adc mov cld fwait mov scas fsubrp aaa idiv decl jb adc dec cmove ja aaa lock add int dec sbb dec sub testb pop inc cmp add test xor rol mov dec add in ljmp enter mov inc shr test mov dec rorl mov cld out daa push dec sbb ljmp pop xchg std or ljmp and push (bad) jmp inc and adc mov inc shlb call sbb scas ljmp (bad) xchg ret inc test scas cmp jne jmp fbstp jno,pt push je mov xchg mov adc fimull dec add jp jmp call int3 jmp mov out shlb andl test out clc sub sbb add gs repz pop pop lea (bad) jmp push call (bad) std xor mov dec add xchg ss dec push mov mov push cltd idiv dec lea mov xchg dec mov and aad sub movb inc adc push or aaa add out wrmsr (bad) dec fcoml mov loope js cmpl inc pop das and xchg jb mov xlat add aad je mov pop mov inc shr cli inc into dec pusha rorb loop rolb out push adc call xor pop push pop (bad) lock xlat ljmp jbe push stos pop scas clc push and flds nop test (bad) (bad) out xlat adc adc cmp scas add or loope jnp (bad) jmp inc mov out mov push ret cmp test xor cld sbb lods je ja mov stc adc jno je xor aas sti mov stos cmp in sbb ficompl jmp mov or cmp xor adc je mov cld xchg and add test js movzbl loope (bad) pushl fst push add or movzbl test je cmp je fcoml icebp cmp je dec mov mov sbb pop pop ret test orl sub and mov (bad) ja fwait lock ds call rol xchg ret or nop adc jae aaa push push fsubl mov in mov movl subl je dec test je dec movl aas mov jo inc push jg je cmpb js sti jg xor inc dec dec mov call movb xor pop inc std dec cmp jo push add dec xlat icebp adc xor pop inc into push sbb arpl dec mov dec mov xchg ror dec push cld dec jb dec add or mov std mov dec cmp dec cmova dec mov call push (bad) decl push add cli add dec mov (bad) cmc dec loope push push add bound pop in jge adc pop dec lea adc mov push and dec sti scas ret xor dec mov pusha call clc xchg sub repnz loopne pop sahf imul dec je xor sbb pushf sbbl loop cmpsb add ret (bad) jb loop test adc inc xor dec fucomip mov mov adc pushf test add cmp pushf rolb pop jg mov out push lret push cs sbb mov (bad) push insl push and adcl dec rorl (bad) dec cmp ja dec cmp icebp sbb (bad) je dec add dec sub jbe xchg and aaa mov cltd pop sbb cmp (bad) add mov dec add mov dec lea (bad) aas push add cmp je ja cmp ja addb ret loopne adc test dec lea (bad) jne dec mov dec mov repz sbb call mov adc or mov add test jae xchg arpl mulb inc dec mov call jmp cwtl das dec mov sub ffreep andl das sbb je or inc mov inc sbb dec xor pusha lret inc mov enter mov xchg out jg out mov mov xchg es mov lock cmp test push add adc adc adc lds dec push lret ss mov xor push push sbb inc std add adc xor mov jle sbb push pop iret push inc dec mov pop pop stc daa or icebp call jbe mov repnz xchg jb test cmp enter sub call cmpb adc dec out iret mov push ja dec jl mov cld popa scas and (bad) call or inc jle xor je std rcll dec mov push andb mov jno bound sbbl je test push out or mov (bad) jnp adc fist mov data16 rolb je or stc call popa ret or sbb dec add (bad) dec lods dec dec sbb addr16 xchg push push mov sub cmpb dec mov (bad) mov std inc dec jmp dec mov jmp xchg incl (bad) pop inc mov (bad) sbb int3 je outsl sub (bad) dec test je (bad) je sar jo jnp je add (bad) cmpb adc mov call movsb clc enter mov and (bad) pop inc pop ret into mov and out xchg scas sbb push jne jmp int3 loopne lods clc jmp nopl mov add sar jecxz aam mov call (bad) je dec mov dec mov mov ja sbb nop push mov dec test je (bad) lret pop mov (bad) mov rcr pop iret pop aas loopne out mov je jmp push (bad) es aas outsl cmp je stc movsl je repnz test add js dec cmp je out mov jo dec leave inc mov (bad) jne add fsubs aam (bad) or adc popf loop pop dec mov (bad) lret rcrb jmp je repz dec mov pop jecxz mov dec jmp mov jg dec mov xor jbe jns dec dec mov inc push rolb je add sti mov cmp mov je xchg adc pusha bound mov dec (bad) fcompp int3 andb popa fs dec inc pop mov movsl sahf lahf add and mov push into adc or push ja inc (bad) ja aaa flds dec xor outsl (bad) mov (bad) ljmp inc mov pusha mov xchg pusha xor add xchg sub mov (bad) cmp stos jae call pop adc mov or dec xchg or xchg or pop xchg push les cltd xchg or push fldt xor iret sahf and sbb add (bad) dec add add scas sub add jmp add fsubl loopne (bad) stos dec arpl mov pop and push or and bound adc add push cmpl mov pop adc sub mov or or or and pop add pop aas add leave rcl lret pop aas xor sbb lcall sbb sbb ret add aas out mov lock pop mov lods scas (bad) call mov sbb inc inc lahf maskmovq testl rorb cmp push add test pop adc push cmpb push std (bad) adc out xchg push pusha dec cmp ud2 cmpl (bad) out incl je dec lea call fld1 dec repz jmp shll push out jne inc push jg mov nop push or xchg jg in das inc dec mov inc mov test js push sahf mov dec add pop dec mov movsl jbe adc std daa mov push pusha jmp mov jmp mov sbbb pop sub xor push leave jo xchg xor int xor nop dec popf pop stos adc add sbbb or xchg gs or xchg pop adc test or sbb pop jns pop cmpl cmp cld ljmp mov fstpl jo mov add and (bad) (bad) add dec out roll call or cmpsb lahf pop incl cmp sbbl mov adc fwait cli (bad) call push and sbb adc inc pop mov call and pusha loope sbb add shr (bad) push pop or ficompl inc or dec pop dec int3 adc cltd pop dec pop fldenv push adc and push (bad) aam sbb or jmp fs cmp and adc adc lret (bad) fisttp adc adc cmpsl sub out es pusha xchg stos fadds in aaa je pop popl (bad) and cwtl cmc push (bad) push jae std inc fnop (bad) (bad) call mov loope jae or and or imul sbb call jmp adc adc pusha dec loop pop jb push test mov push jg ret adc ret sbb into push push cs pusha dec fstps sub mov (bad) pushl xor or xor cmp add (bad) dec or cwtl push adc imul push add push icebp mov sbbl loop sbb pop loope xor mov mov (bad) mov std fisub cmpsl jmp inc cmp sbb addl fbstp outsl dec mov or inc jno int3 pushf popa sub or mov cmp xchg mov or dec cmpl push push jge adc dec call repnz sbb and dec rcrb je pop jl inc scas ret repz dec push mov fsubrs adc rcll jmp and jmp loope jmp pop jg lock mov jnp and inc jne xorl dec lea andl or and inc and xchg (bad) jmp or add mov dec arpl dec add jmp jmp mov jbe cmp jbe dec mov addl cltd push dec pop dec lea adc fbstp aam add push ret movzbl pop mov sbb popa cli mov test scas mov fiaddl stos stos pusha push dec ret icebp add push mov add shr outsl jne or ret inc inc sbb inc and jmp sub rcll shrb arpl les lea sbb adc je rclb lea add jo (bad) adc sbb push sbb fistl cmp rcrl or inc push or incl call mov mov dec and and out xor aam mov inc adc mov sbb fisttp bound or dec add sub inc sub push movlps dec and jbe pop add jns jmp dec adc mov jp arpl push icebp and scas mov mov or pop dec cmpl je and inc js adc push or aas cmp je cmp jne dec xchg and (bad) ja and adcl (bad) sub cmp je mov xor call pop and add sbb sub repz dec pop inc sub (bad) dec mov je aaa mov cmpsb loop mov rorb inc cmp ret shlb stos jne lea ljmp je cmpb add jne dec or mov arpl insb out movsb xor rcrb (bad) jbe je sbb call out mov subl es mov (bad) jne adc mov xchg aas das sub aas sbb push mov insb lcall subl push ja movsb cmp adc fidivr inc xchg test sbb push scas adc xchg ret xchg inc inc xchg fisub loope movb push dec pop dec inc scas loopne pcmpgtw aaa rclb call (bad) mov add ljmp add inc mov sbb or add mov jne or clc test jne mov lahf lock dec or ja pop dec add add (bad) shrb jmp add add sub dec cmp jl mov je add pop pavgw test daa mov jo sub mov or js sub pop mov jnp test jmp insl push mov sbb std or inc add call roll stc cli push sbb inc cmpb sbb mov in pop pop jmp or cmpb daa out pop jo mov add je call imul push add pop je or pop jne inc cmp adc sbb pop sbb xchg inc cmp mov add push mov mov adc cmc or das sbb nop mov out clc xor mov dec cmpl outsl adc inc xor mov pop pop stc movb add adc (bad) sbb mov lret dec mov fisubrl call int3 adc (bad) test jmp sbb adc nopl call pop jnp shr or jae jle out lock or mov add add out and pmullw jo xor hlt xlat test enter mov add cmpb std adc loope or call ret xor adc pop add mov and cmp je bsf and paddb sub sub pop and mov js xor jmp cmpl fnstcw decl sub imul mov (bad) movb sub movl ljmp insb and (bad) call fsub sahf cltd (bad) mov test xor ss pop cwtl std sub jmp push movsb aas aas push dec mov pop lcall inc jle mov jmp xchg pop test inc nop jmp add (bad) iret aam les jle xor movsl pop ss (bad) mov ljmp xchg add pusha movl jne add adc xchg pushf jmp cmp imull add dec mov and add jno sbb adc cld push (bad) mov mov call or jae push loop test pop shr sub daa jmp jae (bad) adc jne jo int3 add jg cli popf lods pop call lcall cmpsb mov rorb jne xchg inc inc (bad) aas cmc test je jne add data16 jg jno add inc rorb sub mov aaa rolb jmp sub je dec jg sar cmp testb jno or cli je in add xchg call mov jns fcoms ss xchg add mov leave jle aad (bad) icebp mov lea xor jmp adc push jo and je outsl jg sbb cmp xor xchg dec notb jae cltd dec aas in mov lahf xchg aas lock mov mov push push xchg nop pop jo in test lret std lods clc (bad) (bad) jmp hlt mov jne add aas cmp aaa jl lea mov popf shr or stc call sub pop in es dec mov in cmp jae scas mov mov das ds mov test test pop dec inc push ret lds push jl mov push into mov add jg cmpl (bad) pop (bad) mov lcall sbb (bad) push rorl test (bad) inc sbb movlps faddl mov mov fs (bad) push sub orl cmpsl call inc mov rorb dec dec out loopne and or inc mov sbb inc iret inc rcrb test push add movl lret xor test or orb lds xor movsl enter sbb jo pop nop pop or xor hlt cmc ljmp adc mov (bad) sbb dec mov test mov cmp ja push cld inc js lea les (bad) ljmp lret out or sub dec cmp dec cmovbe jne dec add lock sar dec mov dec lea call decb test sub arpl lcall pop inc xor adc inc femms mov push and mov push insb enter je pop cmpsb fs addb jmp outsb xchg xor hlt fwait push popf dec fcom dec pop adc scas ret sub jnp jae adc or fimul arpl jg mov lods (bad) mov jmp gs jg mov xchg xchg aas mov mov call adc xor lea dec call stos call test les sub call mov add repnz mov call aaa inc cmp cmpb add or repz clc xchg nop pop inc movzbl imul decl mov dec shr dec jnp and decl inc cmova jnp inc cmpb dec lea jne and jg mov push jb call add inc push loope mov movb je adc jo pop pusha stc call test or js mov mov popf ret mov mov adc decl test addb test je loopne dec lea xchg imull sbb mov repz pop dec bt enter bound (bad) scas ja hlt dec inc movzbl dec lea dec (bad) inc test pop xchg rolb test jne cli cmp lock adc cmp (bad) decl add and inc rorl sub (bad) xor inc addb das aam fdivrp inc js into jge test je and sti inc dec fcmovbe dec mov xlat pop adc test out add divl test xchg xor into push and scas ret js roll mov dec add mov add jmp (bad) or or imul inc imul and test out sbb mov incb adc cs out leave gs xchg je mov pop push incl call negl test add cmp lahf (bad) adc add imul cld or addb or addl add add cltd lahf inc jo lcall mov jmp lcall testb mov cltd lret inc iret sub adc sets pop (bad) aaa add cwtl repz lcall cwtl std pop push cwtl std (bad) or insl jmp push pop faddl enter push sbb sub dec cmp jne and pop std and dec sub adc jmp pusha js orb jl clc pusha es std pusha enter movsl push jp sbb cltd jnp add push jmp cmp xlat dec inc and popa js push xchg iret mov outsl xor or mov xchg out or mov dec mov inc mov dec shr call pop mov and jmp out inc push jne sbbl out (bad) call repz out jle jne lock jne int dec cmpl fld1 mulb pop sbb inc es addl jp add mov js out add imul mov (bad) adc movzbl dec mov sbb addr16 push je pop lods push jle inc xor testb cmp sub dec mov test je pop cmp pop dec add (bad) dec sub dec cmp jae fdivs and cmp jne push je dec sbb push iret aas mov ret out jae cmp jbe mov and pusha push push std push dec bound mov test stos into mov mov xor call clc sub fcoml cmp jae and loopne push lea push hlt out rorb dec mov push cmp lock fisttp andb ja outsb mov mov aaa fwait cwtl jp adc add aam or rcll leave lret outsl sub shll es push or test inc sub or mov dec mov dec mov call test aaa in mov mov jo cmpb or jne (bad) stos dec sarl ljmp clc cmpb jne dec cmp ja add lea jne jmp mov je dec sub xchg adc mov mov roll adc jmp adc fucomp and xchg orl add mov jbe mov lock (bad) frstor mov dec cmpl dec hlt pop dec mov dec mov jo inc call dec lea incb iret inc add pop add fadd mov add xor enter pop xlat jge inc xchg dec mov inc mov xor mov dec aaa dec inc mov sti jmp inc and jp jb imul sbb inc jmp scas addl push mov jo mov pop add call jmp dec out clc lea divb ffreep smsw mov lods ds adc stc dec mov cmp mov mov add call adc lock (bad) test fwait push dec fwait mov mov decb inc fwait add jmp lgdtl sbbb or or cmova mov xchg jmp dec mov popf jmp call sbb pusha movsb aam dec jl lcall orl jb js cmpps jmp adc nopl rcr mov dec adcl jmp scas pop stos leave lock cli call test (bad) sbb arpl out dec cmp ja and incl mov xchg cmpl xchg mov pop aas loope (bad) out add sub mov clc mov sar aaa lock setne dec cld xchg ret je popf pop add fdivp fwait push push je je fwait mov xchg and pop pop (bad) or je push sbb shll movsb inc adc fadd cs sbb fidivrl test push jmp out xchg cmpl ss sub pop clc inc seta lds push je in add leave pop sbb dec mov cld (bad) jb cmc dec test mov dec mov call push xor mov dec shrb aad ret cld outsb mov cmp nop flds add pop (bad) fldl2t ss incl pop or add (bad) jb and shll out cli xchg sarb ljmp iret jno or pop les call mov mov rcrl push jmp stc gs or test (bad) aaa adc je ja dec mov call inc xchg and ja je sbb fldl sti jno mov jno dec lea ss mov insl mov lahf int3 fnstcw adc (bad) fdivrl movsb add outsb sub add out pop cmpsb dec adc mov adc add (bad) out mov xchg (bad) (bad) decl (bad) sbb mov mov push or jecxz dec loopne lods pop and insl clc arpl jne or inc adc mov imul ss lret pop js jne push or cmp push pusha scas push je addl cmpsb iret pop dec mov cmp into cmpl jnp mov and movl push pop pusha js enter sbb mov push or jb push xchg outsb jne jmp dec loopne push dec lea loope dec lea ja rorb (bad) (bad) jmp pop mov loopne add rclb add inc sub pop xchg and (bad) movl je hlt lahf stos pop pushf cmp ja dec mov inc pop or mov push pushf sahf jge push das outsl test mov negb mov (bad) adc inc mov cmp cmp icebp je stos jb call pusha (bad) xor inc sub and cmpb in cmp je orb dec in add or stc lret stos sub xor add mov rorl scas and out jbe mov movzbl cmp mov add dec mov dec sub sti sbb ja mov inc enter decl nop push test ds xor out jmp mov sub sub shrl das ret jb insb inc sub (bad) dec cld (bad) std or and mov inc sbb jmp jg mov dec mov jmp clc ret imul or repz lea dec arpl mov inc inc test test sahf daa sbb jmp ja add loop test jne cmp mov sub test mov push (bad) pmuludq dec mov jne dec dec (bad) xor int mov aaa je jp in sbb xchg dec ss cmp bound int3 pop dec scas test scas inc jbe cwtl imul mov into jp pop movsl negl cmpb push add jp push add int adc invd push dec push dec mov call sbb xchg clc push sahf xchg lods jmp jmp push push or adcl inc insl xor push popa sbb cmpl or or out or incl hlt pop jl push mov mov clc mov (bad) decb jmp or sbb adc shr dec icebp dec add ja gs leave cs mov jo mov dec add add mov repnz jmp adc adc mov cli cmpl adc xchg xor xchg clc jb ret arpl mov addr16 sub clc ds test daa jge enter addl dec mov sub mov mov sbb mov (bad) xor jmp fcom mov inc push jmp inc add ss adc or mov pop add cmp cmpsb fdivrp outsl add dec lea dec cmp ja xor add outsl mov cmp cli call and add jmp mov clc jmp xchg out jne jmp and and repz mov (bad) jmp ja xor sbb dec dec cmpsl jmp xchg mov inc mov xchg mov push (bad) xor (bad) jle mov cld cs xor clc call mov and and aaa adc std test pop rclb push sbb push pop inc lret dec sbb fldl ja dec sub call (bad) je les xchg call pop ljmp mov out je movsb jecxz punpckldq xor or scas cmp add data16 xor ja inc jbe pop ret push and cwtl (bad) orl sub dec loopne movsb loopne je test mov cmpsb test push add lds mov popf or dec out mov ss lea inc push adc dec test jae (bad) ja movsb test push jmp mov inc fwait add daa inc inc icebp and jne fdivr (bad) jmp jb mov sbb maxps in bound cltd arpl mov adc ret jle stc push xchg fwait mov or mov lahf iret hlt (bad) dec inc inc lret mov inc mov call je xor cmpsb mov dec int3 or mov add xchg in (bad) fldl shlb add enter lods xor nop and jmp dec inc rcrl aad cmp fcmovnu xlat dec mov inc js pop les loop (bad) pop cwtl pusha jne mov decl fucomi and inc movzbl dec mov (bad) out jbe dec add je add mov dec lea dec cmp jne dec lea cmpb je dec cmp push jnp pop and or (bad) std ret nop dec add sbb dec mov cmpb je movb dec add dec sub cmp sarl hlt pop out or cmpb jne daa cmp mov int3 dec lea mov dec stc dec mov jne jmp inc xor mov ret jmp dec lea adc ret fld1 andl mov (bad) je pop mov or push pusha cmpsb enter and add xor cltd pmuludq adc add test gs cmp je cmp jne fnstsw ja call (bad) dec add movzbl sbb aas jnp icebp cmp je mov inc add or jp dec lea call je and or jl (bad) lea or ja mov faddl orb mov adc cmp (bad) aam js call test adc dec push push push push mov add cmpb jne pop jo add mov or sbb cmp mov call andl sub lahf sti mov call pushf das dec movsb fwait (bad) xchg push out call mull jmp push shrl nop mov jmp inc pushf cmp (bad) (bad) decl jmp mul shr imul dec shl sub dec lea push adc cmp jbe dec mov dec mov dec mov nop nop std sub mov or mov mov sub (bad) dec and dec mov inc setne call cmpb mov add negb movb clc push mov mov aad or outsl ljmp push or or je dec test dec mov je or mov je roll jl fisttpll mov punpcklwd inc xchg mov dec mov dec cmpl xchg daa xor sbb outsb clc outsb add test inc and xor call cmp sub (bad) lods mov loop xor adc mov xchg insl mov inc or idiv adc lock mov incb iret pop stos xor pop or and jge adc test dec int3 add sbb test mov adc sub push les pop leave push cs mov dec mov aad sbb push sub rolb callw xchg mov jg mov popa call jne test fisttp test out roll sbb (bad) fwait mov sbb call cmp inc sub cmp cltd cmpsb enter add push mov cmp pop inc jmp jmp sbb pop dec jmp jg and test pop std test sub mov or push jne mov inc inc test je and jl adc mov jne subb push inc popa add inc jg cmp cmpl and cmp jne jg mov sub mov call aaa sub cmpb (bad) ljmp or pop aad pop pop mov push test (bad) ss stos mov loopne lds xchg inc enter loop and dec sub test in sti inc push dec movb sub ss rolb scas or pop xchg sub and cld inc add outsb cmpl mov inc and lods (bad) jg (bad) sbb clc jg cmova mov add call stos lea call push insl push ljmp mov call add in arpl ja sbb dec mov movsl (bad) call cmp push pop iret dec sub enter inc (bad) sahf sub lcall stc add sar jae enter dec cwtl ljmp ret pop call aad or out stos mov adc jmp add sub sub (bad) push mov cmp dec pop push sub xchg icebp (bad) out push cmp cmc pop mull dec lea sub push mov inc mov mov sbb sbb dec arpl (bad) loop movl dec lea push cmp dec pmaddwd sbb test lea xor add loopne jne inc or das sbb dec add mov fdivrl jmp dec pop prefetcht0 outsb inc cmp or loop std ljmp mov xor test sete and enter idivl das or xor add add adc enter ds jle jmp push cs pushf push sbbl popa push dec push add pop cmp mov fcomip and inc dec mov inc mov inc dec push inc xor inc or hlt or ja sub inc test dec add das jg add xchg rorb dec add test mov cmp or test sahf or push cmp jmp lea ja or lea mov and dec lahf sbb aas sbb jmp jae adc push push rcr ds cwtl fs (bad) decl xor js pop jmp mov imul inc inc jo ds js mov jns add jmp daa adc xor or xchg inc outsl xchg in (bad) outsb jmp dec or sbb inc rcrb bound call loope jne es lea dec mov dec lea dec lea jo loope mov shl or push jl jbe sbb aas pop push cs push cmc fild or or or push xor add nop das mov pop and es add imul adc jbe (bad) mov sub aam aas adc sub movq jae dec jg pop pop jo pop adc inc icebp dec scas lea inc mov cmp jbe cmp push hlt xor ljmp scas xchg rcll sbbl fimul vmovups shrl loope or pop sti ret ss sbb mov mov jge pop and xchg mov inc adc adc cmp xor notl add decl jmp xor pandn mov xor (bad) pop lods mov js inc jge dec dec (bad) dec mov or (bad) movzbl stos loop je add pop xchg mov (bad) xor movsb jb loopne cli add add mov call (bad) out mov inc xor dec test dec mov je mov or sar cli add dec mov dec mov call lock jb sbb hlt movsb and xor mov test popa jne inc add mov xor and pop pushf subl push jl xchg xchg int into sbb call scas or and test xor xchg jmp xchg or call xor pop inc mov pop in fsubr pop fbstp lcall icebp mov rolb mov test adc ja sub add bndstx dec push xchg push ss test faddl and sub lea dec hlt pop ja add push add les out out lret loopne cmp add outsb mov mov mov pop inc sub popa inc adc sbb arpl mov arpl push std mov adc jmp jg pushf xchg dec lea cmp aad or mov popf sti push add adc (bad) jmp pop add or mov inc xchg add add mov mov mov stc inc call dec mov dec mov idivl add ret add sub xchg or dec mov or xor in lret sub or int3 call sbbb ret or push scas or int mov outsl mov fwait mov mov lret inc call subl add xchg mov mov roll pop call dec inc adc mov inc je jp call sub leave je call push sub jbe or jne and out xor fld1 add shll test je fmull cmc jne lahf cmpsl xor sub pusha out dec jb add (bad) and jbe loope (bad) pop lds mov or sub stos loope add sub (bad) jmp add mov add ss or xchg sub out and inc mov call mov jbe adc lahf outsl (bad) mov orl inc mov mov and cmc inc and test mov ja jecxz lock sub mov decl add cli aad push and and lock subl je,pt cmp sbbb push add add pop push fisttpl add sub add rorb data16 xchg jne dec mov daa call incl cmpl jne ja dec mov adc test mov jg int3 and cli pop (bad) or adc pop std call testb mov push pushl andl in push stos out or dec mov arpl cmpsl out adc aas imul dec mov (bad) je push push add out push cld scas cmpsb inc jb mov inc cli frstor out jbe divb cmpb out pop addr16 dec mov fwait mov dec adc shll call inc movb add mov mov test nop dec mov mull xor fimul sarb dec mov mov outsl dec lea or insl fld1 or mov ljmp cmp mov int3 and sbbb (bad) inc adc je mov insb inc loope inc inc adc int bound sarb lods test sbb mov xor adc jbe mov jb dec test or out pop xor xor cmp cmp push nop jmp fwait xchg fsubr mov (bad) jmp int3 cmpxchg rorb les pop cmp pusha pop shr test or jmp hlt dec cmpsl jl add mov les and mov call push pop cmpsl ficom sbb lea movsb and lock add jp mov test cmp jo enter insl lock adc and sti mov fstl xchg in mulb ja cmp bound call jbe movb incl out pop push jmp rorb jmp out cmp pop push or pop inc shrb add and adc dec and pop out sbb adc adc push fcoml and add and inc add call and inc sub xchg outsl test je movzbl (bad) jne mov lret mov outsl sub nop adc outsl pop xchg ret sbb sbb call stos cs cmp insb or add jmp lahf dec adc xor push mov mov pop add xor (bad) ja les call adc fild lea inc mov dec push jl and lahf test mov lods shrb mov test inc mov dec mov xchg dec mov or jmp mov dec inc int3 imul xor dec test rorl loope dec sub add cmp cmp lea inc sub dec add jmp push fcomp scas pop mov xor mov cmp jb dec cmp pushf mov call cs push ret jne jbe xor repnz andl in clc movups loop mov data16 scas ljmp lds into jne jmp or mov dec sarl icebp inc mov test icebp ja ja dec mov je dec mov inc and inc pop loop call (bad) mov pop in lods lds jle andl lea outsb dec mov pop inc inc je test mov add js cmp xchg test adc std outsb dec mov cli dec mov call cmpsb jne emms and inc mov sahf pmaxsw jg dec mov call test dec mov je cmp push xchg or cli and push sub sti or push andb xorb add mov lea inc call dec sarl mov dec mov rcll dec scas test lret dec mov adc sub and dec pop jge test pop mov inc or push jae sub xchg je mov inc jmp sub inc mov icebp cmp ja repz dec mov call clc out (bad) aas xor jbe add dec mov call in dec push add arpl sbb mov mov mov cmpb je call jmp mov je ds lea loope cmp and add lock call je andl sbb scas jo shr test push fs mov test test sbb outsb sub mov decl fildl dec mov dec mov dec mov dec mov aad jecxz dec lea sbb and adc ret or and in (bad) incl xbegin je jp mov dec cmp je sbb call jg add xchg and adc push adc adc fsubr jmp jle iret fstpl aaa cmp push call cmp out add jns test out ljmp dec xor xchg jge rolb xor sar cmp dec mov je jo dec mov and pushf std adc adc dec mov je cltd (bad) adc call dec sbb fbld sub add test adc dec nop add inc addl add rol add ret add pusha jmp dec outsb js outsl loopne inc mov into or push cmpsl dec lea cmp dec test loopne scas cs loope jecxz,pn jle mov dec pop icebp mov pop or arpl sub jno mov call dec xchg int3 adc dec cmc outsb cmpl call movl into add fdivrl jb enter cmpsb addr16 ss sbb sbb addr16 pop leave shll mov mov dec dec (bad) dec jecxz pop lods and mov inc sbb outsb or adc dec mov jmp fisttpll test xorl push arpl fnstsw call mov adc dec cwtl lret jns xchg xchg cmp xchg and in mov fwait nop dec nop mov inc or test mov loopne cwtl inc mov call lahf xor inc pop rorb mov into push mov jmp push cwtl cmp sbb orb jmp pop push dec popf fdivrl mov push sbb adc lcall sbb adc leave leave dec pop lods adcl jmp adc adc iret and jne fildl repz cmp adc jbe push lea sbb out cmp adc adc dec inc push fcompl or scas sbb adc or push add and pop lock ret lret mov in outsb pop inc adc fisttpl stc pushl je bound mov fbld or call mov (bad) je arpl mov pop test dec imul push orb inc popa xchg push dec mov jg sub insl cld adc incl sub adc sbb (bad) lea and je incl add out (bad) lea neg das inc inc inc adc xchg call insb js (bad) je inc pop fwait in sbb jle lcall nop and sub dec inc mov jmp dec sub loopne in inc fsubl in fisttp xor mov add dec in js xchg or mov (bad) (bad) bnd jmp sub dec inc cmpsb movb jbe call mov mov stc imul push mov adc ja,pn decl lea pop cld or negl int pushf mov mov fldl loope into dec in or (bad) pop icebp movsb sbb (bad) leave sbb wbinvd ret pusha lds cli cmp inc add dec mov xor push dec movsb cmpl mov or jg fcompl fs movsb imul mov inc mov call mov call loop sbb ret test je cmp pcmpgtw adc outsb ljmp cmpb xchg ljmp add movb add dec inc sti jne cmp pop push xor pusha add and jbe sbb xorl test jne sub jno sbb pusha mov lods and cmp stos fiadd cwtl mov mov push push cs mov jo (bad) jo lret xchg adcl sub xchg jo imul sub adc out pop adc nop inc test je negl jo jmp aaa jo sbb je or mov aas jne mov cmp xor mov sbb mov push roll sub ret dec mov fwait cld dec mov pop pop add jle leave inc mov cmpb and movzbl test clc adc test call scas ss sete inc and sar test push add test jne xor hlt and incl dec test jg sub cmp (bad) loopne adc stos jmp fimul add mov rolb adc inc in jle (bad) dec push loope loopne cmp clc add test dec mov std dec lea cld jg (bad) dec lea inc mov mov inc imul jecxz sar imul sar sub inc lea call fldt inc mov sub mov call insb and nop lds les out insl out ljmp out scas lea inc add dec xchg mov das dec adc jb xlat scas or push xor (bad) pop inc fnstsw setne inc xor test or adc in or xchg ret (bad) je ljmp push je jmp jle cli jne ja (bad) dec push push jno call cmp in pusha add clc adc call les add or lahf call movhps stos push mov sub mov (bad) jg dec call loope and jmp jge cmovl inc push add mov add cmp pop xor add js (bad) sbb pop mov je (bad) loope add jbe (bad) and mov fadd add add mov lahf pop jo js,pt add lcall and imul pop xchg nopl lcall and xor jp add (bad) imul pusha mov scas inc std call ret inc outsl jg xchg sbb mov lds mov inc shr xor test lret inc and call push mov pop jne test push scas cmp push aaa lds (bad) (bad) cmp test out pop pop adc add jne ret ret cmp ss or push dec xor inc test pop dec mov mov add mov dec mov call jbe test adc rcll nop sbb (bad) outsb lods test aaa xor mov mov orl cmpsb hlt test outsl xor pop and ljmp lret jns call orl ret cmp in sbb xchg cmp xchg sti cmp add adc jmp cmp sbb mov xchg test push inc cmp add out mov inc outsl dec push inc inc jo cmp sbbl bound and adc shll inc dec or add dec cmp pushf pop inc add dec test xor pusha cmp test xor cs add jmp cmp data16 dec test inc (bad) fistpl cs mov (bad) mov (bad) mov cmp call inc sbb out jmp sahf mov bound popf call loopne test jns call fidiv lcall loopne jmp jne add test push or pop call sub dec dec aas faddl dec mov data16 xchg movsb pusha outsb lahf push popl out jmp mov cmp test jmp or mov stos or jo push clc ja or push scas bound mov dec mov (bad) mov test call jmp inc mov ja pop and inc mov dec adc and aas inc push ret mov sbb leave adc jns mov xchg shr aaa or popa out jmp and sbb dec js or rolb popf mov or add bound and adc push add xor xchg add (bad) call dec or into push sbb pop sbb push adc lds out mov (bad) lock and dec shll adc pop xlat icebp inc rcrl jb outsl jp xchg (bad) cmp jmp adc jo decl push adc addl dec mov dec mov dec mov dec mov call push rcrl rorl ret loop pop push aas add dec test je testb jne mov test xchg dec out clc inc and and jb (bad) decl sbb push dec test xchg rolb inc or jne aas adc add sti dec jne pop jmp cmp jg rcrb or insl icebp add loop lret jge cmp add jne cmp add inc or add test rolb mov and lret cli jle add inc sub push pop add pop dec jmp push cmp mov adc inc sub adc xchg push les test add add popl xor jbe inc and push sbb and inc sbb push in ljmp pop sub (bad) pop mov je icebp adc sbb adc jl mov push dec jmp mov inc push jmp stc pop (bad) pop test xchg push inc adc jl xor adc call je dec lea lcall xor pop ret xorb dec ss cmp dec sub dec loop fnsave or idivb adc test je test jno or xlat mov cmpsb test push subb pop loopne ret pop xor push faddl adc pop jl jb add popa ret or lods adc ret jo iret test jo add (bad) lock mov dec andb sub data16 mov add es inc mov fcomps nop sbb test or or add xor iret pop cli into scas push rorl lea in pop (bad) cmc call pusha shufps ds pushl mov fucomp das (bad) out call or test movsb xchg call jmp in in sub and xor add gs or cmpl nop sub jmp dec hlt paddd int3 call ret je add stos adc mov sub xor cmp in rcll aas icebp call mov (bad) lods sbb add push or or jmp (bad) xor cmpl and sbb pop xor setp unpcklps faddl clc mov mov call fbstp fucomi adc add inc sbb add mov (bad) ja rcrl cmp dec mov cmp dec lea sub cmp fdivrs sub dec cmp jg dec jne lahf adc (bad) pop dec mov mov orb fmuls enter jle push adc lahf add popa push pop xor ds hlt pusha fild dec lea jge fbld and call fmuls or mov sub loopne (bad) decl out cmpsl (bad) dec aaa mov dec cmp jg dec imul mov mov jmp incl push ja push sbb fdivrs sbb call push dec (bad) mov test gs pop mov fdivp gs xor jmp pop pop rcll aas cmp or inc mov cmove jle push dec mov lock inc mov shr add lea add lea inc call sub xor mov prefetcht0 xchg add jns adc ss in mov dec mov insb orl outsl dec lea (bad) decl in cmp dec or inc or xchg and mov dec adc (bad) je inc jp jmp xchg jb cmc pop lock cmp inc fsubrl call add (bad) je mov popf and out lcall mov inc mov es orw mov (bad) jne das jge hlt das inc mov add (bad) inc (bad) jg push (bad) icebp call mov add (bad) inc xchg add inc testl or pop test jne (bad) fisttpll outsl test dec mov je or push xchg (bad) (bad) mov cmp dec mov dec mov jae dec mov inc lea dec add or jae mov cmp jne movzwl jbe mov aas rorb setne inc add call stc iret (bad) call test testw mov add popa adc sbb ret nop or add (bad) leave (bad) mov dec xadd mov jb jbe mov pop testl mov out outsb ljmp jb add test shr cs inc fadd dec mov loope or sub fadds or mov mov and dec popf sbb mov xchg add clc arpl or aaa push cmc mov dec (bad) popf incl (bad) sti xor shr cwtl jne ja xchg or dec lea jnp (bad) jl (bad) (bad) jbe dec mov cmc daa ljmp call ss rcrb mov (bad) incl lahf dec (bad) fistpl adc or add aam mov cld scas ljmp cmova jmp pop mov mov aas add call mov call test ret sub inc cmpsb fdivp jmp fdivl sbb adc mov sub adc pop rcrl daa scas inc push inc push ja or fisub aam call movzbl sbb push sbb ss movl mov test adc sbb movl pop mov mov push les jne je movsb dec mov (bad) inc rol je loopne,pt sbb inc mov xchg dec mov push xchg js and adc cltd dec leave je cmpb je mov sub leave dec sarb cmp and jne jmp adc in inc clc je (bad) jne add in dec loopne in test stos add or test stc mov (bad) jle add fimul xchg and test jne das mov mov push js sbb rorb shrl push mov pop test jne call adc mov call clc pop or fdivs lea clc rorl call and popa pop sbb push je ret lret test cmp ljmp mov icebp dec sbb push rorl call dec fdivrs mov mov stc dec lea xchg arpl loopne mov adc test pop add test xor cmp test xchg mov je xor dec cmp mov loop adc push xchg cmp outsl and add cmp jne add test fcoml call movl xor or popa test rorb inc and and test iret and inc sbb clc (bad) inc sub dec xor pusha clc clc call pop push cmp das cs outsl cwtl popf mov das dec mov call scas mov jne lock sahf cmp (bad) and dec (bad) xor lret push pop pusha and sti dec (bad) imulb test pop dec mov movsl fwait les (bad) ja ljmp mul or imul sti dec sub imul out mov cmp jbe mov rolb jg jmp inc stc into mov jo (bad) lret call pop ja test lea inc add call cmp xchg mov jmp popl incl int3 jbe push (bad) fistpll sub rcl or dec int dec lea mov add jp jmp pop bound xchg leave add mov cmc dec lea sub cli popf rolb add add out (bad) decl call inc decb or rolb mov jmp and inc jmp and aas rclb add dec sub mov dec cmpsl (bad) jg shll dec mov jmp movzbl loopne test xor call andl test hlt inc mov shl shr push cli (bad) (bad) jmp out cmc stos or sbb jae (bad) dec insb xor mov sbb push js jnp xchg push xor pop mov jmp dec cmp and bswap gs xor dec jl ja shl stos dec mov mov inc or jne xchg jle jle dec stc mov sbb popa sub fidivl sbb cli loop dec adc cmp je sahf mov add push lods mov (bad) (bad) (bad) xchg hlt (bad) or in pop sar push inc mov fs fadds stos push mov and cmc cmp and mov lcall inc mov and fildll and mov dec add lods dec int3 jb dec hlt out out add jno adc mov nop or sub scas dec les jo cmp call lods mov (bad) dec pop dec loop lds cs mov rol push xor jbe aas or je add jmp mov dec lea push adc sub ret ret (bad) (bad) out mov js xchg popa sub mov mov dec add push push mov dec stos call push clc jg fmuls (bad) test jne dec test je xor daa dec test je test jne subl lret jo call pop fs add mov or femms and cs imul push and mov xor lds push (bad) and inc and xchg add cmp sub (bad) rsqrtps dec pop movzbl pop into mov test jne mov leave inc adcl clc loope jne (bad) (bad) iret sbbb movsb dec push sbb cld into inc jge mov pop add testb mov mov sbbl or stos adc sbb cmp cmp inc inc es jbe test or xchg or add inc and sbb sbbl mov inc mov dec pop and dec xor mov or (bad) add daa mov call popf dec cmp out xor cmp add mov xor adc movsb pop push or js cmpsb sub cmp lret cs je and test mov fnop int nop xor psadbw cwtl dec gs rolb lcall das das (bad) icebp sti sbb inc mov dec arpl inc inc inc fwait cli xor jmp inc push test (bad) xor aam mov call inc lock dec jnp loopne test mov fwait movsb fildll jne inc jmp call fwait and popa xchg daa out sub andb sbb sbb icebp mov mov sbb imul hlt or test dec mov sub test ljmp xor dec mov imul lea sbb sub cld std pop sbb inc add inc cmp movsl dec mov dec inc mov xor into clc sti (bad) mov add movb and mov push pushl mov out sub sbb mov xor call loope (bad) adc lcall mov decl mov call sbb sub xor inc shr sub adc dec lret xadd jmp je cmp outsb dec into or pop out sarb adc mov jbe mov cs fnstcw adc in incl or pop sub adc mov outsl mov test test movb add scas mov test and pop into dec mov or (bad) mov mov push movsl dec lea mov or mov ds inc add jmp add inc out rol push jnp sub mov xchg lock xorb movsb (bad) dec or cli sahf inc lcall loope aam xchg sbb push (bad) mov push scas ss movsl sti add js gs dec gs nopl (bad) mov out mov aas push (bad) popa shll and or out in push test adc call mov jne xor push aad mov jmp sub jne rorl mov mov or outsb jmp dec inc sbb jns decl mov fild sbb addr16 or fwait mov jl dec mov aaa lds sbb inc call dec mov dec add mov sub loope pusha scas push sbb sarl in cwtl sbb aaa lea aad ja inc call cmp xchg cli pop mov dec dec mov dec shl adc movsb sti push add scas loopne (bad) fs mov enter pop add lahf jl sarb mov xor call gs scas lret ja dec mov punpckhdq cmp adc out aam test and inc inc mov jge push or mov add adc inc sti and jo outsb ret ret shlb (bad) iret or add adc (bad) notl mov inc mov loope fidiv outsl insl call aas cwtl call jmp movsl and loop mov aas jmp sahf and aas das cmp adc pop hlt rorb inc cwtl sub test sub adc add cmp and jg aas add test mov and lds push add test mov and adc std insl cli mov fiaddl cli add mov (bad) cmp and cmp je out ja ss adc test je inc icebp or mov in call packsswb jl stos dec hlt dec pop cld inc rorb push dec divl xlat mov dec mov or jo shrb lea pop fldl push or xchg out add sbb lock mov and fist dec mov dec mov and hlt jg cwtl and repz add dec movl pop orl mov cli adc add inc lods xchg js adc rcrb inc mov int cmp mov mov mov xchg mov int and pop cmp test mov pop push rorb or cmpsl add test es push dec mov call je pop and cltd cmp roll (bad) mov inc xchg in inc mov add ds lea inc (bad) decl pop inc jns in xchg xlat dec lea dec shl adc ljmp test add addr16 call mov test lea cmp jno push getsec mov sub inc mov xor rorl adc rorb fwait lahf dec mov mov dec mov call mov dec test lea int3 pop mov cs add sbb leave pop outsl sbb lods mov mov test dec insb inc push pop iret mov jno aam ret add test mov (bad) loope lahf test xchg leave and lahf call das mov call jl les pop ljmp or sbb add out cmp rcl je rcrb rcll je mov xor adc mov arpl and jnp stc call into lock jp insb mov mov mov or mov orl loopne xchg hlt dec add dec lahf jne shrb test rcl inc ljmp les dec les jle jecxz xor (bad) mov or dec inc fsubr push cld (bad) incl jno jo dec int jno cmp fadds movsb fist sbb jecxz push lea and add setbe pop pop je je mov sbb test dec xor inc mov or jne outsb xor pop push jo xor sti pop xor pop xor call incl leave fsts mov jae test daa stc call add mov add add adc das imul rorl dec sbb xor dec test mov cmpsl test push and add add (bad) negl dec mov (bad) enter je fs popf mov push and dec lea pop jae std mov mov push mov jmp ja xchg dec (bad) outsl adc das xlat and or or pop and imul icebp inc dec popl clc cmovb inc mov cmp imul (bad) out or pop call mov call sub add inc cmp dec push adc jg loopne sahf out mov and push add mov mov dec lea dec mov inc lock dec sub dec sbb mov test pusha (bad) dec mov mov and or or test xlat andb dec lea or movsb test sbb aaa adc out push dec mov call xlat jns (bad) dec rorb (bad) lock adc pop test jne and adc push xchg btr notb dec sbb mov aam scas test xor jle nop hlt repnz mov mov adc jmp add sub es aad cmp dec jne ret movsl xchg call out mov pop outsl sbb inc sbb mul int3 add mov addb movsb das adc or mov ret or fisttpll div jnp jmp mov pop push xchg xlat es adcl sarb xchg es mov jmp push clc fnstsw adc cmp mov je cltd push (bad) cmpl je fs and inc pusha or nop or add outsl mov xor inc test test push inc push xor mov je inc mov dec and pop push add rolb ja movzbl dec call sbb insb int inc mov inc cmp ja call dec cmp mov xchg aad fsub jbe pusha add adc out fisubrl push and popa out cmp lds das test andl add into cmp and adc outsb andl inc fsubl out push xor push inc mov (bad) cmpsl stc incb jb cmp adc lods add outsl (bad) clc dec fcompl roll (bad) push leave sub int3 and xchg mov inc mov imull or in call dec scas xor imul call inc push scas and bound push dec addl cs mov mov xor call push cwtl call ja inc jne cmp jg call enter sbb xlat in push gs lret xor inc (bad) cs mov mov cli call push xor jmp ret sub movzwl clc pop adc or les dec test call mov cmp push in xor test insb je jbe jmp and loop mov popa outsl inc or sbb das adc nop fild movl call mov decb roll jo es and or jmp xor sbb xchg xchg mov negl and mov fcomps out (bad) (bad) jmp jbe,pt shll fcmovnu bound mov fsub fiadd mov xor sub mov add jae (bad) call loopne lea mov cltd sbb dec mov add dec jo jl jne in jl adc mov xchg push out mov adc jl mov pop jns jl icebp ret jl outsl mov push push jl (bad) pxor add jl lea stos inc cmpsb loope jl or aas loope mov xor xchg sti push add dec mov rorb lret mov jo sbb adc inc xor pop push ret sub je push adc ficoml mov push push mov ja adc sti inc test je test leave call xor and push push mov out pop adc ss cmp mov sub ja out rcrl push call add es dec mov (bad) sbb xchg mov sti push xor sub xchg sub loop dec pop ja in stc call out aas test jne repz fnsave xchg lea sbb cli or enter sbb fwait je sar adc sbb aam jbe inc out imul das xlat out dec pop or push or jne shrb xchg popf mov dec out xchg sbb pop sub pop mov cmp outsl sbb cmp push mov (bad) cmp push lahf add sbb add outsl jge adc sbb sbb inc push cmpsb and sub or outsb int3 aam push mov cmp or outsl shll sahf or or fsub fidiv push pusha in outsl pop and mov ffree test push call push cmp cwtl cmp mov dec rolb pop imul mov sub call or mov xchg outsl movsl push mov outsl cmp xor scas lods outsl js lock cmp sub outsl ror in adcl sub or push movsb outsl bound lock adc and outsb orl add sbb outsl inc ss or or xchg jmp push pop outsl daa imul outsl mov xor fildll popa ljmp add jl lods outsl mov dec pop into pop mov shr outsl in adcb mov aam sti jmp frstor push in outsl fldenv mov push enter call leave push test fidiv pusha mov mov inc ficom add xorl cltd shrb and rcr outsl push outsl mov add divb xchg or adc or push jle pop insb insb call in xlat mov dec sarb adc ja sbb fidivrl sbb mov mov xchg and pavgw jo adc sub cmp and test push push sbb stc add mov jo adc or loopne sbb mov dec mov inc mov push mov jno inc sbb mov test aam add jmp jmp je hlt mov jge out xchg jp lock dec cltd push lret jae cltd scas leave cltd push leave jns pop cltd jae jne lcall loopne addl pop int and jb lds ret inc gs adc pop jb jb lods sbb mov push jb jl scas (bad) and sub jne jle dec sti sbb inc pushf test push sub and adc and push lea xchg test sbb jb sub adc dec lds fsubl ret inc orb bound xor cmpb and stos popa xchg lods andb push (bad) call adcb mov push mov loope andl dec fadds xor mov push adc stc push jecxz (bad) das jns jecxz into sbb add adc (bad) sbb movhps gs push out jg jecxz push sbb stos xlat push pop (bad) jg pop push sub mov add mov jg and sbb adc mov dec pop inc pop rol lret ret inc in dec adc (bad) out je add and lea das dec std je dec add cli push adc ret inc sub sbb or fwait and (bad) fmuls dec mov incl adc inc lea dec lea mov dec sub inc cld pop frstor add xor add dec add jnp cmp mov insb call cli lods (bad) (bad) jmp (bad) xor lock dec mov dec mov jne ret scas add std inc scas xor sub cmp ja dec lea mov ret pop or pop sub jae cmc add add clc xchg dec mov call test jne (bad) and add clc (bad) ljmp or call add call or es ret xchg or add lea cmp cmpsb dec test and insb jo and pop test call adc in sub sbb pop pop pop call jmp mov in cmp push pop dec mov sbb je stos add and pop mov inc std daa sub nop mov imul les xor aas sub popa into decb das and dec lea movb adc dec jne dec sub data16 xor mov dec mov test je dec lea into ljmp jmp or shrd mov and cmp jne dec lea dec mov sbb push sbb mov call je sub incb rorb call push je les add sub add jmp dec mov xor jmp xchg sub mov dec loopne push push and dec mov dec mov inc (bad) xor mov movsb inc test or push into aad dec mov call mov mov cmovs je pop test movb jg test jo inc fbstp dec cmp jae push mov call add dec loop ret insb (bad) pop dec mov scas fwait gs xchg cwtl inc icebp call lods js sbb aas xchg pop add pop pop add and dec add (bad) jmp inc inc mov addl dec test je rcrl or jne shlb mov loope fld1 sub (bad) adc pusha jno dec mov (bad) je hlt xchg add xchg xchg jo daa int3 daa mov jb inc sarb out jl setbe popw jge icebp call data16 push sbb mov adc pop jb mov pop shl jne add jmp mov fld1 cmova add mov fmuls push lds (bad) aas mov mov mov ljmp pop dec mov je dec cmp adc add add inc and inc (bad) mov sbbb cli mov dec push mov add fwait (bad) sub ret xor ret out ds mov bnd jp add cmp ja inc mov add mov in jmp data16 sbb add pop je mov mov push inc addb xor dec fiadd dec shll jmp out adc or sub cltd or xor add mov dec sub imul call and jne inc jne dec mov (bad) decl ljmp jb dec cmp ja inc cmp cmp fdiv je dec add in dec sub test std lret rorb add dec ret iret mov lea push (bad) (bad) jg dec and dec test jne dec mov dec cmp ja dec cmp jb dec mov (bad) (bad) (bad) decl enter mov dec mov dec sub dec lea dec cmp je dec cmp dec mov jbe dec jg (bad) decl jb dec cmp jb dec mov dec add inc jne dec mov dec fdivrp mov pop pop pop ret dec add and xor in or adc fsubrs pop jg jbe sbb pop adc rcrl jae dec lea push (bad) decl dec sub xor call jmp nopl cmp xchg add jg mov pop dec cmp je mov sbb dec mov dec mov jb mov mull (bad) lock adc addl clc mov add xchg push cmc jmp dec es xchg xorb push dec adc and data16 lds jl or mov mov jmp lahf xor jmp xlat mov sub adc xor cmp mov and xchg lods inc or dec mov fstl add jl incl dec mul dec mov dec shr (bad) sub nop nop mov fadds outsb nop cld arpl sub push mov jg add jbe inc cmp jne inc popf mov ret inc movzbl out (bad) incl (bad) je inc lea inc cmp jbe inc or mov jmp mov add xchg sbb mov (bad) pusha outsl push xchg je push adc sbb test je (bad) int3 pushl pop lahf inc lea inc add roll inc cmp jne fstpt adc je xor add fdivr mov add xor (bad) je inc lea sub inc adc sub and leave sub stos pop aas add inc test lahf adc mov xor and test cmpsb out ret pop or aas xor xchg ret in sub sbb ja dec bt jae aas push add push fisttpl int icebp pop and inc mov dec mov adc rorb sub jmp das inc lea movsb and aaa pop cmp jbe inc cmp pop out loop popa dec jnp cmp dec mov je dec pop inc movzbl (bad) out mov sbb enter js inc cmp jbe lea popl lea jmp iret idiv call sbb jg mov add jmp add adc or repz out psubusb in jg xchg rorl jne and je fnstcw jne roll jecxz incl movsb and inc out clc inc popa xlat pop and test je lcall mov (bad) xor ja inc sub ljmp pop jnp cltd add xchg dec cmp fcmovnb jg jne mov ja dec lea dec arpl rolb fnstsw scas dec aas add pop cmp sub pop inc mov push (bad) dec mov dec sub ret dec add outsl sarl inc or jne insl pop dec or push dec cli or inc sub inc xor dec mov sub or mov stc ja aas incb adc jns arpl dec cmp or mov add pop rolb jbe and mov pop jne pop sarb cmovl add jg or inc movzbl enter out sahf bound adc loopne inc add inc lea jbe jg out or mov leave xor clc dec xor pcmpeqd xor add mov jbe pop lahf xor imul aad lea and dec lahf and mov fistp ret mov or jl mov dec outsl iret jl pop sbb pop je enter dec push inc cmp jb push leave js imul decl (bad) shrb loope rolb add fbstp inc ljmp jbe inc scas jae int push cli add or cmp fidiv js push test mov mov ret decl mov inc lea clc or jl insl cmp sbb xor imul imul jg dec arpl dec shl xor dec add xor sarl add enter add inc outsl xsha1 cmpsb mov sub leave pop inc iret or outsb int3 add mov outsl xor and mov inc imul inc outsl ficom je jo inc xor dec mov out add jne jmp dec leave dec cmp out (bad) ja dec shl test jo dec arpl in lret outsl ret pusha sbb aad add fdivrl jecxz add or jbe jo pop call jbe popa loopne mov xlat inc (bad) lds pop call ja movl daa imul shll cltd cmpl dec sbb xor nop or out call push mov add nop nop cmp mov add jle cmp add mov sbb or aaa add stc loopne test stos sub sti cmp std mov pop add je jg push adc out iret push adc jne imul push adc sub stc add test or cmp lock (bad) data16 adc outsb dec pop fidivr (bad) adc test stc push idivl mov test ret cmp arpl decl in add jbe cmp pusha jne leave add mov push lahf add into sub popa sbb lea in mov je mov cmp pop je dec (bad) fstl adc test adc cmp cld popa daa pop (bad) ss mov mov ds pop sbb cmp clc push adc add or (bad) pop cmp sahf es fnop popl xchg stc test adc sbbl je aas adc and or test inc jg xchg adc sbb xchg test rolb mov lods add jne cmpsb (bad) fs in stc add es adc addl mov xchg jae cmp fwait cmp fwait scas cmp fstpl sbb push ss minps jg je mov insl pop dec inc aam out adc jne repz js outsl js jnp dec dec and (bad) pushf fstl cmp in xchg sbb add ja sbb dec and add paddb call cwtl pop xchg enter push cli sbb in loope repnz cld cwtl sti adc jge mov sbb push (bad) mov es xchg jbe lret lahf shrb inc sbb test jge sbb mov push inc jmp sbb ja pop adc inc push adc inc inc cmp xchg mov enter push (bad) cmp inc jl sbb adc into sub leave inc inc adc test (bad) xor pop cli jg lock call test sti add adc test mov push cmpsl xchg in in out test push sbb inc aam fwait cmp mov inc push stos and push inc cmpl jg stc outsb test or incb jo outsl adc pop dec test insb insb sub adc frstor mov xchg jno mov adc mov out mov lds test inc aas cmp invlpg cmp or jns (bad) test cmp test sub pop push inc enter mov stc stos mov or test das xchg fwait lret je cmp dec adc adc int3 mov test jl sub rcrb test aaa das insb sbb negb stc mov into xchg test jno cwtl and pusha arpl push adc inc push and cmp out scas adc or sbb rorb cli cmp test test das scas dec ja mulb pop dec (bad) adc fstpt jecxz fnstenv out cmp sub push mov push (bad) jo stc jecxz adc fsubs cmp daa addr16 adc push stc cmp pop (bad) pop les test inc mov cli jo pop test adc mov jg bound cmp fsub in or test pop or aaa and cmp inc xchg punpcklbw xstore-rng cmpsl pop testb mov jbe jns xchg jae bswap push ud2 add js push inc out pop negb cwtl mov bswap xor dec xor pop flds cmovne mov add mov xor sub rolb mov mov je push push xor mov push cmp sbb add xchg dec mov call sub je into roll and mov or pop inc cmpsb mov add dec in ret vmread psubd xor sub mov dec and nop jg call dec sbb push and inc push icebp fild dec mov jne push cltd mov je js arpl jle lcall mov call in sbb test inc cltd add jb mov mov add outsb idivl dec mov aas dec push xor je jne bnd mov idivl cmpb sub sbb pop pop test jns nop mov push mov pop mov dec mov call ret dec test insb scas ja sbb call je ds adc adc jle ret mov lea ds sti add adc je andl inc daa test jne mov dec jbe std cmp je fisttp fucomip jae test adc lock arpl xchg push push (bad) cmc push jmp adc fidiv notb fs mov addl rolb push dec aam cmp jo pop sete test je push lea add xchg xchg mov ljmp jo mov mov js inc mov fimull jp or xchg stos add iret dec pop decl fiaddl je mov inc mov inc cmp adc lret add cmp cmp jg jle adcb leave jmp (bad) out add cld (bad) lcall je lea inc cmp jne add mov dec mov jg js ja dec mov inc and cmp add sbb cmp mov (bad) xor and sbb nop loope cmpsb pop xor xchg inc mov pop (bad) or lock (bad) jmp ret (bad) xor sbb jmp iret dec sub loope andl mov mov mov pop and sub pop add call sub mov and cmp mov push cmp mov adc mov call pop add pop pushf nop in (bad) (bad) jmp dec mov mov push movl xor setnp ja cmp mov dec mov cmp cmp call pop jo mov mov ljmp mov lock test (bad) (bad) jg shr dec lcall dec cmovbe sahf and addb mov sub movaps hlt ret mov rorl dec mov pop or add insl mov add cmove sbb sub xor adc pop rorl into mov or jne jl add dec cmc cmp je or mov call push or add orl lods add jne xchg fmuls jmp dec mov dec adc rclb mov in (bad) ss mov call movsb push jne sbb std orl pop addr16 dec mov dec mov outsb je mov sbb push js sub movl pop sti push inc lds les call adcl inc adc insb or das lret sbb add adc mov test and das fldl mov add fs mov or out test sbb mov das lods pop das push or test inc mov dec mov je pop hlt scas push jnp dec mov scas dec xor jmp clc pop mov jae push mov call mov sbb adc push adc call mov fnsave push pop inc call inc pop ret data16 (bad) scas mov pop ret nop dec mov call out xchg dec mov call cmp cmp sti push sti dec push pusha mov xchg outsl and push add sbb xor dec sbb pop adc xchg jne sub inc add and decl add mov movsl loopne lock jae jo rorl xor jne jmp pop std test and pop dec mov je push jne jmp sbb out pop xor sbb and call or add rorb xchg add inc mov inc or dec mov je cmpb je adcb sarl je addr16 inc pop cmp cmp add cmpsb out movups call mov (bad) jne xor inc lds adc cmpsb lret insl dec mov loopne,pt add rcrl aad (bad) dec lea xchg sub cmpsl inc sub xorl cmpb and mov or fadd pop pop inc mov push aam adc dec mov dec mov dec adc and dec mov dec xacquire movb and push add clc inc add (bad) ret (bad) stos bound mov mov inc and pop scas loopne sbb cmpsl lock std (bad) xor ret dec clc test jne daa and out sbb mov sub jg pop mov dec shr dec mov test psubb add aas push pushf (bad) hlt sti addr16 push add js setb xchg xchg mov inc mov sub adc ret push stc (bad) decl pop or push sub fidiv inc sbb add pop adc or rclb fld1 (bad) aas and sbb insb adc leave mov add mov fisttp jb mov jne nop inc cwtl fwait and fcomip adc and xlat js xor cld cmp mov ja idivl mov pop ret sahf arpl mov test xchg add cmp xchg add mov xor add inc inc insb or jg add add xchg fiadd inc setne cmp lea or test push jp dec jp xor push (bad) test dec lea mov cmp call inc test je jmp aas fmuls pop xor clc fistp addl add sbbb subb jae push push mov sub in pop add dec pop inc test je jmp jns mov pop mov call xor xor jmp pop std fidivr inc std inc setne cmpb jne inc test jne mov cli xchg sbb cli (bad) xchg mov fisubr std add dec je cli in pop jb test cli cwtl fwait sbb xchg cli in push push or jg adc daa push aad les or dec mov jp push and mov inc cmp mov mov and (bad) ljmp and je test jne movzbl clc inc roll add and pop push pop inc dec sub les pop popl push dec mov dec jmp xorb gs bound cmp aas mov or jne test fcoms and bound test add or inc repnz push shr test dec cmpl je pop add sahf adc pop inc je lahf dec mov js clc dec mov xchg cmpsb add add add orl jno into aad push arpl dec mov dec mov dec or test mov and jg mov cmp mov cmp push cmc ja mov call mov add std into dec mov je mov je cmp xchg sub mov cltd and les sub mov rclb fdivr pop jnp pusha cmp (bad) je dec lea call pop jo inc je pop fdivs fcmovbe cmovbe je mov pop and xor push jmp and pop lahf ja mov add add iret push push arpl shrb inc cmp je dec adc shr mov dec mov or cmp jne adc repz pop mov dec test jne add jge jmp xor call dec jb ficompl ret pushl cld xor iret mov dec lea cs jp call mov add push jno or jne call adc inc mov dec add ja call or rorl and fmul lea outsb xchg pusha jmp inc jbe,pn dec jmp fbstp pop fwait test dec out scas lea gs cmp lret aas call (bad) jge add dec aas das nop nop nop xor loopw and incb sbb jae pmaxsw fmulp sbb mov inc push mov nop inc push sbb ds push sbb push fs cmp nop inc push sbb mov fs mov sbb pop dec ds fs inc cs pop mov and setbe add and pop mov ret ret push xchg leave bound xlat bound pushl inc mov add ret jmp mov dec mov dec (bad) mov add movl sbb mov call mov pop lcall fildll mov (bad) decl movl jmp (bad) jmp (bad) loopne psrld mov xchg cmp adc mov pop xor dec ljmp inc or mov (bad) (bad) out sbb inc add (bad) call (bad) adc ret aad lea aaa jb pushf xor add inc mov xor adc xchg add mov ret add dec or or add into fstl dec add xor pop je adc ret rorb or cmp or dec push imul pushf (bad) mul push imul js mov stos dec imul push mov dec mov dec lea mov sbb push scas or repnz dec adc movd xor in and xchg add (bad) (bad) inc mov rep and mov inc mov inc mov movb inc mov (bad) pop or aam fisttp in dec add call (bad) fbstp dec imul inc pop outsb inc mov jmp dec inc dec cmp shlb or inc cmp inc mov mov fnstsw aaa cmpl jle pop adc roll rolb outsl sub roll jmp outsl inc mov inc and inc and subl inc shr inc shr inc cmp inc mov test xor mov mov dec jne push out or or sti add inc mov shl jmp add loopne mov int3 inc sub cmp lcall and push dec mov (bad) (bad) pushl test and add dec add dec cmp jne dec add dec inc aam incl cmp jne sbb ljmp in arpl lock cmpb je (bad) mov dec add inc adc dec xor add inc inc add movl loopne jl xor sbb popa push dec mov loopne stos add call pop arpl adc std or repz fsts cmpl jbe sbb xor sbb mov call mov andb pop adc and inc mov addr16 in lea push es mov je ss jns inc push js sbb fwait in or inc imul cld jg call imul dec mov test je jp inc aaa inc add sbb or adc and xchg cmpl cmpl (bad) dec cmovge mov xchg in roll mov inc test xchg imul jne adc xchg call (bad) lock sahf pusha jmp sti fiaddl pop scas inc mov psubb call into dec sbb call int3 das dec ret mov sub imul and (bad) (bad) out or mov mov mov mov cpuid mov mov push lcall mov mov pop pop pop pop dec sbb xor push and lock dec shl mov (bad) (bad) (bad) mov mov xorps xorps xorps xorps xorps xorps xorps xorps popa (bad) (bad) decl pop rorl lret rorl pop fmull pop in pop out addps addps pop mov inc push dec jne dec jnp nop fild popa mov (bad) jbe inc mov or sarl adc mov mov outsl aas or out call rclb int3 lods call dec sti cmp subl xchg push and cmp rolb dec or or stc adc jbe lahf adc push mov pop push inc mov int3 clc push sbb and shr add pop cmp loopne push mov xchg inc mov mov out mov push add or fisubl push mov mov inc mov inc or clc mov call mov lcall mov shl inc and fwait add loop ss inc mov xchg (bad) jmp pop cs inc cmp mov je cmp aad push jbe push xchg mov jg gs inc cmpb je inc cmp jle subl incl lea jle inc sar js mov pop call jb adc adc inc cmovl out sbb jmp dec roll imul aad add jmp (bad) xor lret lea je dec jg dec arpl inc std push lcall adc addr16 xor and pop mov mov cmpsb call xchg call and sarl inc mov jmp lret inc mov inc sub mov sub decl add inc and aaa pushf shl dec shl or and dec or dec or jmp xor push rcrb dec mov dec mov xor (bad) mov add dec mov pop icebp jno dec sarl push scas inc mull (bad) fnstcw xor inc subl adc sub or ljmp add inc mov xchg add xchg inc xor inc mov push pop inc mov inc and je mov add inc jp (bad) mov incl jne test jne or jne xor or into inc aad adc jne inc test aaa dec mov lsl add mov add test fbld sbb jne jmp loopne pusha inc mov xchg push sbb mov fbld inc call and add (bad) (bad) (bad) out incl rorl vcmpsd or cltd inc idiv cmp je ja dec je and hlt (bad) jmp cmp je cmp je test aas popf hlt jmp mov cmp mov or lods mov into jmp scas mov lock jmp mov inc in clc adc dec add cmp enter jmp jbe mov push xor in rep mov lds test js shrl shr cli mov movb jne dec add std adc (bad) cmpb je call dec rclb cmp push (bad) mov and nop in cmc es (bad) and cltd or xchg xor cmpsl enter hlt dec mov cmp sti sarb ss and and and jae push push sbb xor pop mov leave mov (bad) mov jp les xchg (bad) push into popf and lods xor (bad) xor xor and and push data16 pop dec pop jbe xor insb cmp adc cmpsb insb outsb insl and xchg int xor sub xor cwtl outsb (bad) nop dec int dec cmpsb jno dec xchg insb adc xchg mov mov and aam lret xchg dec je gs mov or and jl and add insb (bad) xor and and movsl push jp mov maskmovq negl add stos pushf adcl inc loopne and out mov ja outsb jl push fsubs xor and sub jle into sbb xchg mov xor daa addr16 push rolb xor cmp add loope xchg daa sbb sbb sub dec daa inc or sbb push dec xor dec push fmull call arpl notl dec adc and jmp push add sbb cs sbb dec leave dec add add insb stc aas fwait cmp dec dec daa dec dec mov stos mov daa lret sbb sub dec or lods dec dec push or ja or dec lret dec push or add (bad) cmp or xor out and inc cwtl daa cmp addl pop inc push sbb mov add cs (bad) jg inc data16 jl jns je inc lds sub pusha je jne inc push push push insb or jmp pop dec add cmpl popa cmpl lds jmp jmp (bad) lds or or loope lds mov mov psubq lds repz inc movzwl popl flds std decl test sbb cmp adc iret incl stos inc push jbe jmp adc rolb decl adc loope inc mov inc shr inc inc out mov or jle inc jge dec lds cmp sarb inc cmovg mov out inc dec dec and movb repz push inc (bad) pop pop (bad) jmp mov lea dec lea xor xor (bad) (bad) decl jle dec mov dec mov call je dec or movsb jae out cmp dec cmp jne dec lea push clc (bad) lcall enter mov inc cmp je add or lea iret aaa push outsb add adc inc mov ja add xor je xor sbb xor das test push (bad) mov in jg dec arpl je dec icebp pop rcr mov lahf dec inc in mov call into stos fisttpll or mov arpl out inc mov jmp out bt jae mov into jo jge or jmp je push jmp in dec mull (bad) jne adc fmull and mov rcrl or rorl mov (bad) xlat adc mov stc call cmp je ss and cli and fistpl xor sbb add jne dec inc jmp cmp jne scas push inc icebp iret add jecxz mov pop jmp mov ret mov jmp cmpl jg jmp sti mov mov lods adc sbb push mov mov movl jle je dec push inc mov outsl ljmp setg add rcl subl pop jne inc je cmp test jg mov das or lock sub dec mov cmpb add cmpl jbe xchg add mov fsubrs addl add cmpl and adc inc mov popf xor adc mov push mov mov sub add movl mov dec mov inc sarb call and add (bad) pushl or inc inc cmp jne cmpl pushl dec adc lahf add test femms mov sti jmp addl xchg adcl jb mov sarb adc rorb pop lahf lods xor sub ret nop test std dec inc mov je inc mov inc cmp je addr16 add test roll or dec clc pop jno das sbb inc dec mov inc mov into fstl test (bad) pop jne pop or lcall lds sarl dec inc inc cmp jne inc (bad) (bad) (bad) (bad) inc add enter cmp (bad) decl lret jle inc mov inc mov shl inc test sbb inc mov inc movb popa jmp xchg enter sub rorl mov mov out and out dec not inc lea dec mov mull decl cmp jle movsbl dec mov call ret (bad) je dec and std jge inc inc std incl mov dec inc dec add call push pop je inc add jmp jne mov jmp ja adc (bad) popa dec (bad) ljmp in and add jne jae mov jb outsb ljmp (bad) dec lea (bad) rep movl lea les pop cmp orl leave jmp fstl jmp or enter pop or enter push in in and out pop nop inc push sbb (bad) mov push sbb xchg sbb dec ds push (bad) mov outsl pop fmulp nop inc push sbb sbb outsb push sbb dec ds push (bad) mov jg mov nop inc push sbb sbb ds sbb push push idivb out (bad) (bad) enter mov mov orl outsb pop orl dec ds sbb in and mov fs inc push scas mov inc push sbb dec inc push sbb push or jbe push idivb xor and and and sbb sub es push (bad) add push psadbw pusha pop (bad) (bad) mov enter xchg xchg and and rorl enter mov pusha pop (bad) (bad) mov enter xchg xchg and and rorl enter mov inc cmp push sbb pop xchg pop xchg fs inc push inc fs inc push ss mov pop sbb divb jg (bad) cmp ja dec lea dec arpl (bad) dec add jmp mov (bad) mov sub sub cmp ret ret lea dec mov dec lea sar rol inc fild add sub or jl add jle aas add and jg sar mov dec mov inc movzbl rclb cli dec je fbld clc or rol dec adc mov je scas and or ret add jbe loopne dec mov inc xor inc mov cmp and sbb and mull loop call aad mov je cmpl ja mov dec arpl clc inc mov dec mov jmp sahf push pop ret adc (bad) jg sbbb dec mov inc cmpl jne addl xchg add mov negb addl (bad) xchg push cwtl xchg das js je popl jo pop dec mov dec lea jmp cmp inc adc clc (bad) xor repnz mov call push addl or dec out sub (bad) adc dec cmp inc mov incl dec xor mov mov insb adc or jmp pop (bad) outsl orb imul stc xor cld mov mov add call call addl dec outsb adc lea cmp ja mov add xor jg out ja lea dec mov cmove incl inc rolb mov mov xor sub inc test cmovne ret dec lea adc push push add shl insb or dec mov jmp push inc add add dec and sub aaa dec arpl js add dec lea dec mov test arpl dec lea movl add call jg inc or and inc in adc std ljmp cmp dec mov movzbl cmp je cmp je dec test add sbb sti pop js mov cmp push dec fisttpl push add jae lea xor jmp cmp jle jmp lahf lahf cli out clc (bad) dec cmpb jne insl dec mov call js jge (bad) incl dec sub dec sub xor roll ror ss dec sub iret rol add xor or (bad) outsl mov dec lea stos clc mov cmp sbb dec mov jle sar jg aas popa sarb add testb (bad) je cmpb je outsl push cmp inc mov mov jle dec mov inc inc dec pop dec cmp jne inc sbb (bad) decl mov or dec faddl stc cmp dec mov out xor dec bt jae cmpb movd adc jl xor push push test arpl inc nop xor outsl inc dec test dec lea jmp jg mov je or add sub out and inc adc stc ret mov pushf mov mov out jg inc dec pop pop mov add sub xchg dec push jge jg hlt outsl xlat lea inc and lea mov xor fstpl mov jp or inc adc or push outsl icebp es and mov and jne adc jg fnstcw call (bad) dec mov mov add mov dec mov ret jbe je xlat mov aas ss jle pop ret popw pop mov cmpb out jg les out dec mov cmpb je or add mov rolb dec mov mov dec bt jae xor cmp jne cmp sbb mov sub lahf imul clc fldl mov cmp xchg (bad) jne sbbl (bad) jmp add mov movzbl sub cmp fiaddl lret mov mov ds cmp dec lea decl dec cmp jae movzbl cmp jne dec mov loopne test xchg test add cs inc cmp jg inc add aad and mov add push cmp jle dec je popa shlb or sub add inc in cmp mov push popl mov add mov call imul and cmp (bad) rorl dec arpl and std dec mov mov dec xchg cmpl stc or xor pusha clc jg or lea cmp ja jg or orb add out fcompl sub iret lea cmp ja out cmp jmp (bad) jmp jo lahf xor mov jmp cli out fidivr and add cmc inc mov sub xor pop leave (bad) stc dec lea push or adc mov test pop clc ret add ds je imul ja mov inc (bad) mov dec pop je and mov pop xor test jns sub add dec mov dec pop mov je (bad) dec add pop jne cli sbb mov lahf sub jg ljmp push mov cli daa jbe movl (bad) call lea cmp setbe and cmp sete or movzbl ret mov dec mov push dec adc push lcall sub and and cmp mov or sbb adc dec mov sub and (bad) mov jmp jne xor jge cs dec mov test dec mov js (bad) addl cmpsl fild ret shll dec dec cld pushl lea cmpl ja jmp cmp inc pop add stc call pushf mov add loop push das sbb cs cmovs das mov jg fild out pop inc add getsec mov jg pushl dec mov dec mov insl dec lea inc mov dec cmp ja icebp outsb xchg jmp or pop pop jecxz or out loop xor clc dec call add clc test inc or add dec add aaa adc test jne dec or and mov add push clc loop mov call xchg jae jmp (bad) lahf cs in and pop popa jmp rcrl mov add movl loopne jp sahf or (bad) fisttp jne xchg sub sub ret nop jg clc decl movsbl cmp je cmp jne dec lea pusha mov icebp call add (bad) jne test pop sbb in lar dec lea call inc push movsb call inc pop push outsl pop scas je sbb lock inc mov adc push mov icebp call repnz push mov sbb repnz inc mov add push jmp jns cmc and and (bad) addl xorb jb lea inc mov jmp mov and cmp je inc push pushf scas inc mov inc movl add pop sub and cmp je fbld cmp je data16 test sbb divl test dec mov call fist sub clc xor adc je mov clc xor test xor inc or out inc rcrl cmp jmp jle dec (bad) or xchg inc dec push push push lock dec je outsb push jo fdivl dec mov mov repz incl mov adc subb incb jne adc cmp dec mov push sub cmc mov jmp cmp je jo test jmp in enter call mov addl or cwtl inc shr cwtl mov jne out dec inc xor jmp aad outsl das fdiv ds jg mov sbbl cmovp mov test push lock add push mov js mov lods ljmp jne add inc cmp jge dec arpl cld mov dec dec mov dec lea inc movl add inc mov movl pop fstpt mov mov (bad) cli or add mov jg cmpsb je dec adc cmp inc cli in popf mov lar test or jne stos test cvtpi2ps mov dec lea pop and jg adc push je cmp paddw movzbl cmp je cmp jne dec mov pop std jno pop inc pop icebp xor adc mov (bad) cmpsb inc je out mov cli imul jo mov popf and je test emms sbb cmp insl lock mov sqrtps fistpll pop sbb mov lahf scas icebp and insl je icebp sub mov pop cs cmpsb gs out decl xchg ret sarb jne or add in adc lea inc ja call adc int3 out adc pop daa mov cwtl sti loopne loopne nop dec test pop cld icebp call dec daa ret lds test push test ds mov cmpb je cltd leave pop cs or mov rcr (bad) adc (bad) je jb mov xchg pop das pop inc daa jae lahf lock lock int insb shr out cmp inc movl sar daa (bad) jmp cmp jne xchg in cmpb pop negl push lret vhsubpd call mov jne inc inc mov loopne ret fsubr dec pop jg jmp push mov cmp mov sub bound out jg js push inc mov call cmpb cmp dec repz dec dec dec mov andl cmp sub loope push lock mov lods sub or push and sub and sub popf add and push xchg (bad) test stos cmp inc stos (bad) push call sbb xchg sbb mov push push xchg dec mov mov jo adc push stos mov add add sub cmpsb xchg xor outsb pop mov push jnp inc inc xor inc pop call (bad) jmp sub (bad) push ror loopne cmp dec sub and push into pop pop pushf inc or outsb jb mov imul sub jmp pop jae push pop push dec mov in popa arpl (bad) jbe gs jns lret movsl add sbb sar mov or cmpsl pusha dec call mov movsl mov in test jne dec popf pop fnsave lahf cmp data16 sub pushf sti cli je test dec and repnz (bad) int3 pop cwtl fistl xor std std pop adc push in xchg jmp rorb or jb js add test mov dec (bad) jg les inc test daa mov movsb pop dec cmp je cmp fist imul inc add lock cmpb mov mov mov mov cmp xchg cmp add sub dec and xor (bad) aam cld xchg add mov or stos mov push push cmp mov test in add mov add or mov adc inc add add inc inc aad pop or int3 xor call xor jns lock sbb dec sbb add das jo cmp loope xchg push es xchg ret pop xor jb mov call loopne sbb jne pop xor cmp or int cmp inc roll jmp pop movsb aaa xchg lea inc adc fcoml fbstp add dec mov les mov aaa xor xor xlat push inc popf mov les add orl data16 stos dec or mov inc movzbl flds add ss mov icebp adc adc push in test popf jae pop jmp or in xor xor push xor or adc (bad) mov fcomps mov clc mov mov sti pop adc clc jmp push cwtl jb xor sbb stos hlt rclb aaa jmp icebp fsubl push popa nop lcall jmp test xlat fs mov jo fidivr sbb sbb ret sbb jo loopne push out jg push xor pusha mov xor enter cwtl fadd cmpsb xchg call test loop out popa pusha push mov imul maxps jae mov adc sbb fisttp add mov (bad) fidiv mov rolb sbb mov (bad) xor or mov insl je sbb andb and ds test rclb xchg inc gs ret jo (bad) call push adc lea sub pop imul jne inc jne andl mov jo add dec cmp mov sub call bound xchg add outsb mov das outsl mov arpl fdivl mov add (bad) cmp push les dec inc inc xor sub scas aas adc jp cmpb test add pop pextrw and addl cmp out or mov cmpsb dec push push or repnz subps sub loop adc popa out loope cmp (bad) inc psubusw cmp push and arpl adc or add pushf fldenv js pop pop adc mull movsl or das mov lds push push add addr16 xchg je jmp pop cmp mov (bad) call (bad) ficom dec mov call shll dec adcb fdivs jl and call inc mov fldl test orl arpl shr pop adc movsb lock or jle xchg jae (bad) pop cmp xor mov cmp cmp je in pop mov xchg sub testl adc xor adc sahf (bad) adc pop aas movl aas sub dec xchg sub test add lsl (bad) jae faddl pop sbb jg inc pop ljmp (bad) aas (bad) lea pop je cmp je jle cmp jne scas add cmpsb jo (bad) movl inc dec jbe sub cmp daa xor cwtl pop mov std jo cmc and shr cmp or xchg adc mov cmp cmp fs mov ljmp sbb dec pop mov clc pop pop jmp inc jle ljmp ja test xchg xchg lock (bad) xor dec mov dec lret dec cmp adc mov out ret aaa adc pop cmp jne subl ficompl idivl adc bound test addb (bad) loop ja jae test cmp xor les sub sub mov clc inc pop rcrb je and sahf jmp mov je clc cmp je mov cmp push jl dec sub mov inc sub inc jo clc or mov mov aas and movsb jecxz mov mov int3 jle mov adc jg sub enter cli dec jne out add cmp xor repz add adc xor les push or call clc jg mov dec mov push add mov xchg inc test je inc pop adc cmp je (bad) out arpl cwtl cmp mov rorl and pop nop sarl fs ret sbb cmp adc push cmc (bad) xor out or sbb in je movsb xchg movzbl in mov jne repz mov cwtl repnz or lock mov inc pushf js or dec test fwait js pushl inc cmp inc cmp les add mov jg (bad) xor mov jmp das js je dec xor call sub loopne xor call dec js inc fwait or (bad) std inc cmpsb pop (bad) sbb add mov or mov pop and add push push call addl mov stos pop add adc adc aas adc mov sbb push jle mov je roll add jge fs out dec mov clc adc pop sub push and sub call jae lcall sbb jne mov sbb scas fildll je lds loope sub push data16 pushf adcl loopne clc stos add mov imul mov jne popf sbbl je adc mov call int3 push mov jmp fist ljmp movsb dec lea mov add inc (bad) pop inc mov xchg mov adc jae and mov call hlt das out cmp pusha insb out jge pop test mov mov lahf jecxz mov movsb outsb lahf pop push add rorl jecxz in out jb je test pop jmp into add dec or sbb push jo xchg pop pusha jb and xor ss pop xchg ss sbb icebp jg sbb dec lea inc movl mov mov jmp mov sub je test cmp insb and inc or xlat rolb mov inc sub inc (bad) int pusha inc loopne jg jnp mov jg mov call out jnp adc or ja pop movsl mov mov dec arpl dec or xor lahf js inc add mov mov cmp push push lahf je test and lea cmp ja sub scas and mov sub adc aas pop or xor jge jge sbb pop dec mov stc scas les shrb call daa dec mov jmp mov and (bad) xor iret icebp pop mov sbb js inc movsb imulb mov ss cld dec sbb inc and ja and dec mov call and lret fstl jg pop mov das test je inc stos dec inc mov mov arpl aas pop sbbl adc in mov insl pop pop out xchg pop lea sarb fs shrl cmp stos push mov dec lea cmpsb and jl sbb jns (bad) add jo les jmp imull sub cmp ja sbb push add (bad) jg sbb adc cmp jg inc or jg mov sbb and mov or cwtl das and popf add rorl (bad) (bad) jg sub mov sub dec arpl dec shl dec add cmp mov add cmpl adcb emms aaa add movl or add loop rcll mov xchg call jmp rol in repnz je ret xchg test and out pusha ja call out pop loopne (bad) cs test fist test pop mov test jne adc jge loope dec adc outsb call push lea jns xchg aaa xchg das add sub push inc jle in dec add jnp dec iret cmc mov add jbe mull popf push es sbb test dec enter jle iret dec lea dec out fmull pop je mov cmp xor clc or jmp je loopne sbb ljmp sar loopnew xchg inc test dec lea dec ds push decb xor scas inc sub test cmp or dec mov fcmovnbe arpl cmp jg lcall pusha enter xchg call jb jbe mov dec fisubr fisub notl or mov loopne and dec fs jnp cwtl into (bad) subl enter xor inc stos (bad) mov push mov (bad) ja push pop aaa adc xor cs nop ja sti fwait jo jge lea in adc (bad) mov xor xor mov pop inc add popl out cmpb mov sti add je je or dec inc or pop cmpl or pop jo in int3 cmc sbbl jmp mov sbb fnstcw adc dec and int3 and movl jle (bad) incl or outsb sbb aaa cmp add sbb (bad) mov xor xor out in mov sub push sub imul popa cmp setbe mov ja xor jl call jnp clc cwtl inc add dec cmpl cwtl jmp and sub inc sbb rolb sbb je mov push jae xchg ret hlt xor rcrl das dec call mov sub iret fcoml xchg jmp gs push and sub (bad) cmc out adc int idiv push out std pop jne xchg adc fcompl mov jmp pop add daa lcall hlt orps ud2 dec mov ret sbb sub outsl and pop add stos sub jno pushf add bound std out test inc or inc jb jg imul sahf aas mov sub jns fstpt mov or mov jmp mov jnp add loopne aas mov je fildl jmp cli pop lea inc mov inc mov mov test jnp call dec je clc out (bad) ds mov inc mov mov mov mov mov daa jbe movl fidiv sub jae call inc add (bad) outsl push push add test das imul or ja dec jnp loopne mov mov ret aam sub popa adc out fucomip cmp (bad) inc adc adc and xchg and outsb je xchg jb add mov jne mov dec jl call fild sub mov shr mov enter rorb or or dec mov inc cmp je (bad) and mov inc cmp jne sub call mov inc cmp jne (bad) mov mov je addr16 inc leave cs inc decl inc xor iret mov add cli jbe movsbl jne lea mov out mov pop xlat (bad) incl sbb sarl mov add push inc rclb lea movl or dec adc insl arpl test mov (bad) jbe test vsqrtsd mov xor mov xchg rorb jmp and and leave jne mov fwait setle (bad) jae rcll mov or jmp (bad) and push xor push sarb call insb sete inc or fbstp cmp arpl push test je jmp aad mov mov clc fld1 rcl push je mov jae fwait xchg add dec sub cmp loopne call add dec jne cmpb je cmpsl arpl mov jne add pop jecxz je lds loop jp add aaa cmpl jne mov jp or mov push push dec movl xor fistp repz cmp lret dec sub fwait decb inc mov dec mov adc lds and in and inc add push sbb pusha add incl sbb cli cmp push lods xchg cmp loop push dec jb jg inc fstl scas push je decb test add add imul addr16 imul jl mov out aaa loope test dec jne or inc je jae int imul dec scas ljmp add cwtl mov or pop sbb movsl inc push int shll jbe mov repz call flds and jne or je jmp iret cmp scas (bad) (bad) sti pop cmp jne movl or out je dec mov mov outsl sar add sbb mov addl adc clc inc adc sahf ja (bad) dec sub inc mov dec push push negl mov or and call inc (bad) sbb test pop inc jne add add fisubr jmp dec inc xchg push sbb fistpll fs inc test je pop rorb (bad) psraw mov shrl sub sti dec shlb jmp add imul rolb xor mov push scas mov inc jne push mov in push rcrb inc xor call mov call shll cmpb jne movsb push test pusha fldl les pop out in lds lods push jae imul clc fwait (bad) testl outsl je out imul mov je cmpl inc add mov and or call jo lea cmp jbe je sarl hlt insb je jne jnp mov in pushf sbb hlt add icebp push pushf push sbb pop lahf test js inc inc mov roll mov add lea dec dec (bad) sub movl (bad) mov xor lock sbb inc aad lea xor sub jge ficompl dec in loopw pusha mov cmc dec (bad) jp in shr out rorb adc jae or mov dec rcll (bad) mov repz jne and pop jne mov mov mov addr16 or inc fsubr icebp out sub xor sbb mov call pop pop or mov orl jmp push data16 sbb (bad) mov add (bad) jne mov add rolb xor jmp cli cmpl ja dec lea xor jecxz arpl dec add jmp out sbb out (bad) jae jmp ljmp cmp je xor je loop ja or xchg or cmp in inc sbb add mov xor jl dec lea (bad) xor or lret sbb int fisttpl dec inc inc add jle lods sub out dec jmp inc mov sbb jmp inc jmp sbb js adc je push cs push mov inc xchg jl sub or ret push pop fimul je jbe scas pop push mov mov dec add scas pop jmp mov jmp mov add test cmp lahf loopne mov daa jb lahf sbb mov test lds or mov mov jbe dec cld pop into jle imul xchg cld jge sar sub add xchg loope mov pmuludq in pop mov add iret or test cwtl xor fidivl popf xchg out add adc cmpsb outsl xchg jg cli ja dec lea adc ljmp add dec add jmp js sub clc ret icebp mov hlt pushf pushf jo ds push push jmp push pop scas mov (bad) call nop mov movzbl cmp je cmp je pop mov cmp out je testb je (bad) decb push mov push or jne adc mov jp lcall mov mov mov lea cmp jbe cmp jne (bad) scas ss dec mov jmp adc push or rorl pop mov dec mov sar push adc sub test stos cmp inc mov adc or push sbb into stos adc in js lea or inc hlt cli xor xchg add sarb decl adc dec add jmp dec mov mov cmp ja sbb andl clc xchg push lcall or cmp ja sbb outsl add dec mov add loop test jne cwtl cmp push int and sub in addr16 (bad) sbb sub and je cmp inc adc loopne jmp dec xor and or es cwtl jnp jb lods fdivl fcoms (bad) aas inc add ja dec lea rolb je jb sub push dec and push ss jae and daa fisubrl or std jmp scas mov outsb test pop out test jmp nop repnz add (bad) call xchg aaa push add mov je xchg (bad) jmp outsb je or push mov xchg jmp dec js adc push adc inc inc cmp dec sbb pop gs dec ret add test inc in mov (bad) leave jae cmpb clc aaa hlt dec add mov test je mov cld popf mov push decl loop je and (bad) mov push dec add iret xor add pop xor addl lods dec and mov add inc mov jae adc aad ds lods sub out mov test imul push inc mov sbb cmp push sbb push jmp lahf mov dec adc mov add daa aas xor das stc jmp lea loop mov and adc jmp leave jbe jae out push add add dec mov call sbb jbe push inc xchg (bad) push cmp bound xor add mov icebp sub and iret mov mov je fbld scas out jbe mov sub iret or pushf adc and (bad) sti cs lds ds lahf fildll adc dec dec insb out xchg add mov push sti out cltd or pop xchg add pop (bad) testb or lret fbstp repz or xor and add pop or aas daa mov cld jg (bad) decl mov cmc cmp je test je cmp dec arpl jl and jmp jl dec add xor jmp das mov sub dec (bad) out jo adc or repnz add ja test inc mov jae jmp mov jmp fsubl xor addb mov dec mov dec (bad) lret push dec lret sub push mov (bad) pop scas add les movzbl cmp sti pop cltd mov cmp je frstor shl je daa je mov adc mov stc outsb jne dec lea push sbb dec add rolb mov mov std add push test minps dec add dec add inc inc jne ja inc aam movzbl inc sub roll mov cltd popa dec arpl mov ds mov lea dec lea cmp je test je adc xor or fstps dec aaa or ds std pop scas inc mov xchg je or bound mov in (bad) lret shr cltd in mov jne sbb pop insb jmp aas xchg push xchg dec add rolb dec lock jmp xchg mov test leave (bad) push nop xor jmp test sub xchg les lret mov and incb cs ret xchg loopne ja sbb add mov insl xchg cli sbb cli dec lea mov inc mov call jno ficomp mov or loop movsl and add or mov (bad) mov or inc cmpl je fs mov pop jle lods add push aam jecxz sbb xor test push cmc and cmpsl jne jecxz and adc pop xchg mov or sbb pop mov (bad) push xor pop and fstl (bad) fbld mov (bad) das pop mov mov jle mov into push in lea pop fs (bad) sti mov or cmpl jne or dec clc leave push pusha jae sub (bad) loopne push jo jle hlt push (bad) dec stc mov mov sbb push mov shr add test xor ja scas pop add rcr xchg hlt pop mov in dec arpl rorl test daa sub je roll dec lea inc mov ds nop mov add pop pop add cmp adc je xor push lods dec int into jo pushf xor adc add fisttpl test sub js in sub mov pop pop test ds je or inc jb jmp sbb cs (bad) negl je push sbb call inc icebp je je xor sub mov dec shrl fidivrl ljmp cmpl dec mov (bad) mov test je (bad) and push in inc dec mov cmp aaa cli inc mov dec mov dec sub push sub cs mov inc aam rorb ret dec mov dec je ret cmp and mov jne dec mov int3 adc loopne pop dec mov in cmp dec mov je inc mov inc inc inc lock jg push je xor pop inc ja imul sub and js cmpsb jne add cmpsb cmp cmp fnstcw loopne mov (bad) aaa add imul push enter adc and xchg inc ds mov ljmp out jl pop xchg je sbb sbb cmp jle sbb fbstp add jmp dec lea inc bound lea inc test jne jmp inc and add stos movsb pop and sbb je,pt dec lea and popl jmp jo jg aas data16 adc std inc mov sbb mov daa je add fs mov mov add xlat adc jno fadds or xor xchg aaa adc cs adc pop push cmove fcmovnu icebp pushl cltd push or out cmp ja je xchg cmp mov imul cwtl jo std jnp test mov push into lds les sbb and pop je inc pop sbb jbe inc jb xchg or and lret and test pop out jle jmp andl in incl rorb cmp xor into sar pop cmp dec mov je cmp leave pop cmp je mov int3 push shrb dec and add lds dec arpl dec mov dec (bad) adc jo add push ret jmp dec scas (bad) js push inc scas xchg pop inc xor les pop add xorl pop les into sbb and jbe jno (bad) jmp in push mov cmpl jne sbb push ja flds cmc (bad) decl xor sbb mov pop add ret jb mov inc add and fimull call adc aam inc xor mov rolw jl enter push (bad) flds outsb cmpl jne cmp jne or xor mov and lock js xchg pusha pop jo imul (bad) std dec mov call es ljmp mov repz cmpl je dec mov xor mov jnp dec bound xor dec mov loop xor sbb outsl cmc dec and out js jmp push lods das data16 out and call loopne xor jb nop fcoml adc loopne (bad) mov sbb mov ja jmp sbb jecxz and test inc lret cmp add xchg ds pushl add test decl je gs aaa add jp scas sti jmp jb xchg hlt cmp bound jmp data16 lds lahf push xor scas roll pop push fadds jo jbe ljmp mov inc mov mov and inc mov in xlat mov call xchg loopne cli jp xor je lret push inc pop pop scas adc std mov inc js je mov aas xor fmull push adc test gs aas dec pop pop sbb or jo sbb add test add and inc xchg mov jecxz xor adc xchg jo popa dec lea push in and test out pop or mov sub out rolb imul (bad) jno test push gs adc push lahf pop inc js popf push adc repz pop ret (bad) mov mov lock lods ljmp (bad) test nopl sub mov mov mov ficomp adc ret push jecxz out lea add push cs lock cmpw jne or incl dec cmp inc addr16 inc inc sbb in mov ret (bad) pusha add sub ret mov (bad) es cmp insb ret out lea push out rolb in dec ror fldcw pushf or (bad) je xlat or sub add dec cmp add add cli dec mov loop inc cwtl xor adc sbb dec lea dec lea and nop aas ficoml fistpll ficom add (bad) dec dec add std (bad) mov sub dec cmp inc mov rolb adcl cmp xor sti ljmp je dec mov dec add jmp (bad) xor adc faddl cmp sub sub movb rcrb sbb sub ljmp jge (bad) dec in and or pop inc popa lock inc mov dec push pushf xor dec cmp or into or adc or jge loopne fucompp dec ljmp lahf inc testb inc push mov cmp and je cli fistl add jmp ljmp or flds xchg mov push loopne jno cmp sbb xor adc add (bad) sbb ja or inc aam les inc or je add (bad) inc rol aam sub inc or inc jbe pusha dec test loop fcomi adc cli xor rdmsr test enter sub and dec cmp (bad) out pop inc and dec test dec mov je mov jp aas loop call jo call pop mov pop adc ljmp mov test jne inc cmp ja mov or inc sub loop movaps adc dec mov or fimul dec lea adc inc xor mov movsb out xchg lret push xchg mov (bad) out incl test jne add inc lea cmpl and dec shl pop lea sti arpl mov sub dec mov dec mov add out and cmp jge mov ljmp call orl adc jae lahf xchg bound add add (bad) jne jb scas or clc and jnp xor xchg lea or jp test les push insb push dec or (bad) out sbb out dec jno add pop roll push ret mov fisubr and adc xchg xlat add loope outsb add inc ss in mov adc addr16 in inc mov dec cmp inc push sbb popa pextrw add adc rorb jo jg or and mov mov movb jno xor mov test inc xor call xor or rorb pop pop add (bad) cmp out inc push mov std adc lds dec test dec mov inc lea out pop movsb mov inc and mov popf or (bad) mov jl sub (bad) fild xor js pop int3 inc mov hlt inc cmp je and cmp pop jl test frstor les cmp test outsl add pop mov nop xor std add cmpsb add cmp (bad) jmp pop mov pop cmp rolb jmp xorl pop popa jmp jne sbb jecxz movzbl lea cmp ja cwtl sbb xchg mov out clc call arpl cmpb jne insb and dec arpl iret cmp cmp repnz or cmc xorl aas aaa xchg sub push lcall inc mov mov cli mov sbb and addl sbb aad jle and lock mov xor push xorb push jmp out ss adc cld push popa insb mov sti (bad) or and add xchg sbb xor xor sbb jb sub outsb cmpl mov int jo insb mov push fwait and adc fstpl fbstp inc lods xchg sbb adc sub jmp or popf arpl sahf test cmpl lea call push popa test inc pop cli je pop mov loope sahf andl int3 dec je jecxz and and adc js mov xchg fstpl test adcl push xor ficomp xchg addr16 (bad) subl add sti sbb insl sti das (bad) icebp mov lahf mov mov jo nop sbb bound (bad) and dec mov inc lods pusha cmp ret push leave jmp fisttpl arpl or push sbb adc xchg sub sub sbb add cmp xchg out fucompp xchg adc jns in jg nop addr16 sahf insb mov mov inc (bad) xor sahf or imul inc adc adc es and fdivl mov adc inc mov inc cmp out xchg cmp dec cmp hlt push add dec sub dec mov jmp addr16 (bad) out adc add mov dec mov call add (bad) adc in call adc mov push add rorl ljmp dec sub je dec add jmp test dec out incl add inc test inc jne jmp (bad) adc test jg mov jmp fcomps add test out enter gs das or add push in dec scas inc and mov mov scas scas inc push leave jno xlat or jg or cmp ja jmp sub sub ljmp (bad) mov xchg dec mov movzbl dec sub dec cmp jle inc cmp jne addb (bad) (bad) jle pop jne cmpb jne dec lea adc pop and movsbl sub shl mov dec cmp je cli inc movzbl xor lea cmp ja jg push cs jmp (bad) jmp jp lea add cmp (bad) dec jo or lds adc shll jo push pusha loope fs lahf (bad) je add push lods rcl ror sub je nop and mov rclb jge rorl test push sub sub xor pop cs repz jne xor loop call fmull sbb inc (bad) push push (bad) adc je xchg mov push add adc ja test xchg je fimull cli leave inc ret dec cmp mov cmp xor adc insl cmp jno adc je,pt ret movsb cmp ljmp aam inc or mov mov incl jbe add jne adc xor jne jg stc cmp test or add lock xor test add cmp jne dec pop outsl add and ret mov adcb test adc adc les inc jbe add jns or test jg mov roll les inc mov dec mov repz jp rorl ret jne or and cmp je cmp (bad) ljmp seta setb inc sub inc movsbl inc and and xchg pop lods int je add out fdivrl negl add cmp lods cmp push sbb dec cmp rolb add fs mov test sbb xor lea fiadd dec lea loop fcomps xchg and call jno loope rolb scas shrl jno and jecxz jno mov push pop jne cmp push or arpl dec xor inc scas mov xor mov in push add dec pushl sar pushl (bad) jmp adc cli cmpsb push cmp jne sbb fldenv push add pop fwait aaa lea aas xor mov cmc xchg adc jbe jmp addl iret mov stos xor xchg jg icebp cmp test add push jne dec mov rorl cmp test mov fnstsw mov jmp inc je fiadd cmp cmp arpl mov outsl dec add dec lea movaps or repz mov lock mov rol jg test mov pop inc mov call and test jne mov inc cmpl fdivrp and je lea dec orl cli out sbb push jne dec lret adc inc dec inc out push aaa xor add and cli outsl (bad) stos call and (bad) jne xor add jmp clc and xor add jne push inc add test shll adc sbb addr16 xor mov arpl mov jnp sti mov adc je dec cmp pop xchg inc and mov fildl call or ret xor test xor movsb pop ret or xchg jmp shr jle jg jae fs dec test je (bad) das jne fwait mov and orl jne (bad) sbb mov repnz lds jmp scas dec push orb push je les enter incl cmp je inc add jmp inc mov cmp mov add inc mov dec add push hlt incl add fstpt dec cmp je decl jg call add jmp dec mov mov adc inc lock jne inc cmp add lea xorl aad add pusha or mov test jg lret add or ds sahf cli arpl inc cmp arpl leave inc add dec push rcr cmp pop inc mov jge mov dec pop or lret adc (bad) jne dec (bad) sbb lea outsl jp mov push je inc mov dec mov cmp jne fcomps shr sub ja and jnp adc (bad) and js scas ja lea fmuls das ror jmp cmp dec call popa push in fcmovnbe mov loopne adc mov dec cmp insb clc xor mov cmp jne je,pn scas sbb add (bad) sbb or std ja es mov outsl popa dec mov adc mov fist call roll aaa dec hlt cmc mov jl scas add xlat xor and scas jmp mov mov jne lods mov xchg mov add adcl (bad) cmc je xor sbb popf mov test add in cmp ja inc mov sahf dec arpl add movsb push sub into xor invd and imul mov leave mov add jmp push mov mov cmp scas xor lea aad sbb pop add jmp (bad) movsb sarb add cmpsl (bad) sahf xchg loope dec cmc jmp shlb xchg cmpl testl jo enter aaa inc ret fld1 sub sbb mov jne jmp nopl jg jne mov and fs cmp sbb sub sub lea and add and xchg inc fwait dec jg jmp dec mov xor cmp pusha inc sbb dec fmull call mov add xchg sub push bound cmc and cmpl jne mov dec cmove jmp push jg dec mov add add inc inc cmpsb mov std push scas lea push lahf xchg pop cltd dec test mov call sub shlb jbe mov cmpl adc into mov (bad) mov cmpb jne adc and loopne mov jmp mov sbb jmp out sbb les dec mov rolb sub pop jmp in or adc mov ja nop or cmp loopne jnp mov or adc push frstor loope cmpsb mov mov xchg jp or jmp data16 xchg mov mov dec and enter ucomiss jle xor cmp push pusha (bad) loop add xchg out sti std scas mov jbe cli pop jne enter into repz or inc mov adc xchg roll ret das (bad) lahf popl (bad) jmp arpl mov rolb pop ror jg inc pop cmp dec mov dec mov je inc mov cmp dec adc lock movl das add dec mov adc add mov mov mov push ret dec shr dec cmc call mov fldl out dec test sub cltd sbb (bad) push inc sub cmp ja jno mov loop push mov lea (bad) hlt (bad) lods pop lds dec fwait popa inc aaa shrb lods arpl mov ja decb mov add fsubr jmp nop les xor mov add push adc jl xor dec scas lea dec lea les or jecxz xor test sahf (bad) lock lea scas nop add mov push xadd pop push cwtl jmp test inc jmp (bad) je mov movb add jb movsb sub call add dec mov mov jo bound pop push xchg pusha push sub mov or out and xchg and jne sahf dec enter lahf shrb sub dec addr16 and mov xorl add add cs jo shrb loopne inc pop or out sbb mov or cmc xor or mov call adc sub mov imul ret mov adc or mov pop pop xor xor mov lea in rcll out scas ss pop pop adc test adc jle lea inc and out mov xorl test and clc and jae outsb add xor arpl or out arpl mov ja push inc mov fs cmp add (bad) jo mov jmp mov je sbb adc add fiadd mov popa xchg push call jb movsb mov fs pop je popa add jmp xor mov add and lea adc je inc mov icebp lods fimul jmp fisttp pop pushl les xor cmp ja dec cs loop ret add jne mov jecxz (bad) jne (bad) jo pop jo in sub lock call sub or test mov or mov movb dec mov add test add add (bad) jae adc faddl add test roll bound add (bad) or dec adc aad or dec mov out cli cmp fadds movzbl sub jmp aam roll sub test js loop test addr16 test loopne inc pop mov add negl add xor fadds pusha out test sub push inc ret jbe push push adc pop out push clc pop out sbbb cmovnp jne and mov imul jne test dec pop or in pop mov sub mov xchg and sbb mov ja push push testl (bad) sbb jmp mov scas push dec mov test inc mov loopne dec mov call ds inc fist cmp movl mov pop dec mov (bad) jmp je cmp je inc inc into icebp call sub adc jmp mov clc test je daa ja shlb add lods or cmp test sbb add (bad) fimul and xor mov jnp iret dec mov or mov call inc test dec mov dec mov rolb je cmp jbe xor xchg jo pop adc lds adc aad add cs std mov cs or pop adc jne and aas inc lcall call lahf add fistp nop or pop pusha decl sub dec lea js inc xchg popl dec idivl test mov dec cmp inc mov loopne test cmpsb pop inc subb insl add into subb mov push jb in inc pop nop push jb push outsb cmp add scas jae addl inc mov incl inc out in lea add and clc mov dec add dec lea mov idiv xor dec cmove out dec sbb dec sub je dec add mov dec cmp xor sub ljmp test fildl cltd popw addl sbbl aas enter xor inc sbb aam test add adc lods test cmpsl (bad) add add jb mov jg dec mov pop jne push bound xor sub addb (bad) sub sub bound sub xor xor xlat ss fdivrl push cld sbb cmp jne jmpw mov mov daa roll push ljmp popa int andl or test and inc push lock sbb mov dec lea jmp push sub xor insl jnp (bad) and jp adc stos stos stos adc notb or mov je pop xchg mov bound insb ret add fisttpl mov adc push jne jp lds sub cmc (bad) (bad) add loopne imul aas xor sub sbb ret lahf jg ret incl cmp dec mov je movl lock (bad) jmp dec mov dec arpl dec mov dec test je sub iret bound or das cmpsl xchg mov das inc and and mov mov ret (bad) add lahf lcall inc mov and rcrb mov cvtps2pi or cli es jns add mov and aad jbe popf sub mov mov orb push inc pop pop pop (bad) mov jmp inc iret push cmc rolb add dec mov xor addb add cmp adc aas adc pop dec mov inc xor dec mov inc cmpl and (bad) cmp dec mov dec mov mov adc aad adc push je std inc add inc cmp setg jne rorl dec mov or data16 xor xor call popa daa shr pop cmpsb dec lea jae dec (bad) or cmp push les add xor roll mov and nop fs mov pop outsl adc ljmp sti or mov cs aaa jb sub push mov cmpsl lock cmp jne cmp jne orl jo leave add scas out andl add or cld (bad) push jg pop (bad) sub jmp dec jno sub dec jg or add dec imul es or add call sar dec xchg fist push inc add (bad) aas inc (bad) xor dec mov inc cmp je (bad) push cmp (bad) dec mov repz (bad) pushl stos mov (bad) cmp jne inc movzbl sub cmp cs fdivr ja dec mov add mov adc je jecxz in mov jmp dec lea std incl mov lea movl dec mov movl or inc mov mov dec lea movl add inc fild dec movl pop sub and adc aam lods (bad) mov mov add dec sub jg jnp mov je daa push aad dec shr dec and jbe lock lea add mov cmp dec mov dec inc inc loopne dec add (bad) cmp (bad) decl jge pop dec lea dec mov je (bad) (bad) icebp mov jo lods inc decl pop dec lea inc xor xor cmp loope test ret add ja jmp call enter sbb outsl cmp mov lock test je in ret lea sbb pop (bad) lock fldl add (bad) jb add (bad) adc repz icebp call testb imul jl fild fwait add jne xchg or lea jbe or dec iret inc je hlt sub jns bound ja adc cmp jne les cld out sbb movzbl dec lea sbbl mov adc mov dec mov je mov cmp dec mov jge int arpl dec sub add dec (bad) push hlt add mov je mov pop sbb mov cld push outsb stos imul jmp cmpb jg cmpl inc pop jmp dec mov arpl dec cld movzbl out rcr sarl dec lea push dec mov nop dec movl sbb dec mov dec lea pop jl jle dec mov or sarb (bad) pusha mov mov out (bad) or and mov je (bad) iret (bad) jo or test dec arpl addb jnp outsb js imul test dec cmovle dec shl dec (bad) std add add mov call rorb push jbe adc and and xchg jecxz je sbb mov and sub js pop mov pop incb mov dec mov inc adc add jg xor test and lcall std jg add inc setne add jmp jo (bad) sbb sbb ret mov icebp call jle js insb iret test movl ffreep sbb je add cli jmp xor scas mov and jmp addr16 jmp add dec add sbb push movzbl or jbe cmp je jmp in daa add mov clc add inc sub dec mov sbb test je jnp and leave je inc (bad) mov and cwtl mov add or stos xchg xor adc mov stos mov mov lods cmp adc xorb and test gs aaa pop add cs jmp pop mov dec mov test je dec test jno pusha sub test sbb aad cmp adc call pop mov (bad) push test dec lea and out out pop sbb call pusha int3 std aad test popl addl add out and jne sub xchg sti dec mov std add push imul and popa fcomp sbb inc popa dec mov fs mov test je pop jmp adc outsb int3 call dec dec loopne add mov mov push rclb add dec (bad) or shrl bndstx pop xchg adc adc call cmp mov sub inc ret mov pop scas mov xor inc push ret decl or call clc mov and jne dec mov fcos adc ret xchg dec jbe adc xor (bad) es (bad) call lahf inc jp or mov imul add jo fstl fsubr stos xor call ljmp call sub pop dec mov jle xchg pop out call fs xchg ds call jae cmp pop les je and adc jns (bad) jne adc iret scas decb ret sub cli decl inc (bad) cmp mov sub dec lea std jmp sar fcos adc jmp dec cmp jne dec lea jne pop pop jmp cld es xor jmp mov pop dec cmpl mov lock sti add mov pop push ret iret movl mov push adc and (bad) lret or insb or mov outsl (bad) xor (bad) imul sarb ret pop not dec mov cltd sub clc outsl clc xchg adc je and (bad) out call inc mov call call cmp (bad) mov call je sub dec mov (bad) fildll lock dec xor mov dec xor dec and dec cmp je add not iret fadd xchg mov sarb push out dec mov or xor nop mov fdiv xchg aad dec mov popa insb fisttpll sub inc inc ljmp call xchg jmp push loopne cmp jmp dec dec mov dec movsl mov push call in idiv std mov outsb mov call (bad) cli out fmul xor xor loope add or jo adc out sub (bad) cmp inc mov pusha add mov call divl or call pop sbb add mov call sbb inc sbb lea or xchg (bad) sub and adc pop (bad) and adc call clc ljmp subl mov cmpl je movl repnz adc lock nop dec lea (bad) fst lea je dec mov or insl lock aaa shrl paddsb jne xor jns inc inc (bad) adc push push das in movsd inc movsb mov add inc mov adc out or add call mov les pop dec mov jbe jmp js incb mov jl push inc fwait cmp mov cmpl ja adc or dec mov add inc fucomip jbe movups dec mov xchg jns add adc out jp sbb sbb push jmp adc cmp mov or sti lcall add nop movaps xor movaps inc and in or lcall cmpsb pop inc xchg mov sbb (bad) add push scas jnp loope sub xor wbinvd or sbb mov mov jmp (bad) hlt nop dec mov lds enter dec xchg jg dec arpl loop test mov mov push add nop dec mov inc je cld dec cmp jb dec daa inc add js inc rorl (bad) lea jecxz jle shrb icebp jne fld1 jno pushf jne aad dec adc adc fisttp xor dec shl dec enter and and call mov or and xor add in dec call jl xor adc test repz lea and push aad sti je sub and jo inc les add add test es add push adc mov add mov bswap add pop add sub cwtl and (bad) mov add dec lea dec and (bad) fist ljmp fldl sti and cmp jb std (bad) (bad) out pop xor mov add dec mov cmp dec mov jb jmp dec add jo lcall iret cmp dec mov push cmpsb mov adc test add push call xchg call xchg decl mov mov ja cmp cld jmp jmp jg decl mov cmp jmp jae fbstp mov flds dec cltd xor call icebp push pusha lea call inc (bad) pusha outsl jae ja adc sbb je dec lea aaa mov add call inc scas cwtl dec lea add push mov add and call and ret incl sub movl int3 mov es incl dec cmp mov bndstx test sub jae or (bad) sar ljmp sub test sub dec shr dec lea inc std rsqrtps add mov mov mov cli dec mov dec add add mov call mov (bad) mulb adc cmpsb cmp inc data16 lock mov inc loop push ja push dec mov jbe cmp outsb add dec add cmp neg sub jne out jg push or push or or movl js sub stos and cmovge inc jmp mov sub loopne (bad) pushl pop cmc icebp sub leave add and cld aam movsl dec mov inc mov jno or aaa inc xchg push test mov call cwtl pop cmp jno movzbl (bad) fcomip or or or inc movzwl das aas add jne dec mov dec or dec cmovs js pusha dec add dec xor push inc mov nop mov push ret cs mov dec or sub dec shrb ret push andl cli or inc movzbl inc test lea mov addr16 imul fsub sub movl call adc and call mov cmp std add (bad) ja cmp cmp add add ja cmp in pop adc jl xor mov jae adc adc mov sbb sarb add shr dec cmp cmp push inc mov (bad) ja cmp out fsubrl xchg or push jl call popf sub mov mov shr sub xchg push jne xor call pusha xor test outsl int3 sub nop mov aaa inc dec (bad) je cmp ja or dec adc out call stc ljmp ret mov lock add test xor out sbb shr adc stos pusha imul add sarb ret dec pop inc loope add add loopne push push add jb push std mov mov and xchg pop mov mov mov outsl jecxz sub add movl imul dec movsb ja push fimul lea incb es lea std jg inc fimull mov dec sub repz stos aaa (bad) fisttp jmp movb inc mov adc mov ret or lcall xor dec hlt add aam dec add mov mov gs (bad) clc dec cmp je dec mov call lds icebp sbb je call cwtl push (bad) call jmp out add jmp lahf aas loopne std out adc lret mov mov and inc inc inc and and addr16 stos push mov loope push into stos lahf daa stos jne mov xchg (bad) pop (bad) jo cmpsb sub loope sbb test push xchg add movsb sbb adc pop (bad) (bad) mov je sbb mov (bad) pop or pop negl cmp fbstp je inc call mov inc pushl add sbb xor add inc xor xor or mov ficompl test in add pop jmp ror push aas or pop jmp lcall ret push sbb int3 sbb nop dec push mov mov xor push cmp (bad) scas divl cmp int3 idiv (bad) jmp adc imul jmp loope call pusha mov (bad) (bad) jl fstpl adc nop call sbb fs test je dec mov lds nop mov jmp lret aad mov call pop push sub test icebp dec loope fisttpll fmull ja,pt adc dec jmp inc mov mov mov jne loopne xchg dec or pop ret mov sbb mov dec mov je mov data16 sbb call mov jmp aam mov les mov call mov ret mov sbb pop and (bad) or pop pop pop or je mov aaa adc jne jmp mov cmp lahf enter mov dec test jne jge and dec add adc dec mov arpl push adc adc lea aam decl outsl popf mov dec mov jmp jg mov test cli add mov add mov call rorl call add js mov iret sub add cmp or test pop adc (bad) insl nop mov jne sti sar ret movl sbb pop call jmp bound add out test ffree add pop ja xchg dec dec adc adc mov call (bad) pushl insb add inc cmp add xor cmpl je ret xor call inc cmpw sete jmp je xor sub jmp and cmpl mov adc lea movzwl test je sub dec lea dec std add decl mov dec cmp dec mov ja and dec dec mov dec fmuls jne pop (bad) fcomip (bad) adc and into call clc or ja (bad) decl adc cmpw jne dec mov call dec arpl jge mov pop inc push pop cmp decl ret sub or ret sub sti je je lcall dec mov dec mov call or and adc mov mov pop movsb add xlat std cs mov mov inc cmpl negl push dec arpl xchg dec sub dec add inc add mov push add adc rorb inc add je jmp or xchg or sub or dec mov xlat xor push or (bad) jb sub pop jg adc ss add (bad) or xchg int3 lahf or hlt popf mov inc cmp inc adc ljmp mov lcall dec in es arpl dec add inc shrl jle sbb testb arpl add ljmp cmp jne addr16 nop das scas outsl insl (bad) or dec test push arpl pop ja dec cmovne in aaa into (bad) in int3 lahf scas and aas sbb dec jno mov add in jns add or jg arpl arpl mov rol call lds sbb scas cli inc mov (bad) pop dec dec outsb clc push bound dec arpl fmuls mov sbb leave inc mov or sub mov or cmp dec mov jb inc add jo testl loop out xchg jne jmp jns xchg add mov (bad) xchg pop mov or inc test jg or xor add push dec cmp dec and jb dec sub sti orl dec sub dec sub dec adc pop icebp ret addl push xor mov jg call nopl arpl push xor das add scas incl inc push and dec mov mov adc es les (bad) fdivrl xchg ja dec arpl dec mov jbe loopne sbb pop inc das in sub leave ret pop dec mov mov or sbb lds mov ss push pop pop inc cmp outsl mov inc adc sub dec js sub adc add scas or inc and les idivl les inc or and push or sbb dec (bad) les test inc ret mov sub and mov adc dec mov mov aas mov mov dec mov pop cmp out mov add jne mov mov adc dec mov les pusha mov push adc pop pop and xchg and arpl xor insb jle test pop add or push outsl loop dec dec mov push cmp nop subw jmp dec cmp jne push inc xor inc out sub add dec mov cwtl loope shrl call sub call jne test xchg cld xor sub mov and test cmp jne sbb mov pop loopne cmp dec push lret push push push sahf fmuls outsl sbb inc addr16 and sbb enter inc movl xchg dec mov push xor jl cmp and adc jo stos daa xchg push jmp cmp pusha std imul lea mov stos call dec or call mov dec pop cmp mov push inc jnp dec movl pop sub imull call loopne addr16 and lahf fild mov pop dec lea jp adc jb jl movl pop out sbb mov lret mov push pop dec mov mov mov aam loope add pop inc and dec mov pop jg sbb dec inc and call or dec pop dec sbb fprem1 cmp cmp mov fldt cltd out sbb outsl push jns add fildl or jno mov (bad) (bad) jmp jae scas hlt incl sbb adc fist dec mov jmp (bad) xor ljmp or sbb pop inc or mov nop js std dec mov pop inc push mov jo mov fnstsw mov movl add sbb mov scas fbld adc test addr16 cmp decb (bad) jae jp or out add loope out or add jae repnz fmuls sahf cmp pop int inc int3 sbb (bad) or test or mov (bad) adc lods mov pop and dec mov cmpl add mov fnstsw and dec push jmp dec pop add push or leave addr16 xor shrb dec cmpsb (bad) (bad) mov inc les dec roll inc mov pop push adc push jnp jge push aaa xchg lock mov jne inc push insl mov add js movsl inc jo add jmp call add mov test je rorl fstl pop adc call cmp jne push jmp ret pop outsl lea xor call adc mov jo call imul call add out mov mov fwait test je mov jo jg xchg std or (bad) sti xchg dec lea dec mov out pop adc add mov cmp cmp xchg dec lea fbld add or std hlt scas mov (bad) je rclb add xchg (bad) sbb mov outsb and outsb popa das test xorb mov test or mov ret mov push add ja dec mov dec cmp ja cli dec or cmpsb ret enter xchg jg (bad) jmp add push lret test das mov loope dec mov call dec mov mov jne (bad) shr cmc out lcall sub dec cmp dec cmova dec lea in call dec mov dec sub mov call in mov adc lret (bad) mov add jg xor lock fsubrs pop dec neg dec and dec mov jmp into pop test stos and fwait dec mov add xor cmpsb decb and cmp lahf pop push xlat pop dec cmp jae adc mov jmp jae jno int add dec mov call mov inc mov mov or int xlat mov rolb cmp mov jmp aas adc cltd inc idiv inc mov test jne (bad) sub cmovne (bad) lcall lea dec arpl inc mov dec lea dec add dec lea test inc mov jle dec mov (bad) mov xchg aas inc lea inc sub cmp inc mov inc cmovg add dec arpl rcr std (bad) cmp dec lea dec mov dec mov dec mov add sbb dec cmp jne jge cwtl xor (bad) pop ret inc mov jmp das pop inc (bad) sbb add dec and dec mov rclb idivb mov stc push sbb adc les popf add dec pusha dec mov call call sarb xchg pop adc xchg push pusha imull es test and les clc out lahf (bad) mov loope in test sub andb mov fisttpll dec pop sti adc jmp cmp ret mov pop mov fistpl and push in dec mov dec push sub cld sub decb dec test sets mov and mov xor fisttpl (bad) (bad) cmc mov rclb decl mov jmp dec arpl in outsl mov xabort dec or xchg jmp or mov mov and pop dec pop pop cli dec cmpl mov fdivl pop add mov dec cmp comiss add inc test jne inc cmp jne inc mov test out scas mov adc mov cmp add leave add mov decl je inc mov and xor dec cmpb cmpsb (bad) cmp popf pushf add lahf sti or movl aas add inc aad mov in jne mov std test aaa fadd xorl lods mov push mov call xchg dec arpl inc mov dec add mov jne adc inc mov xchg cmpsl rclb mov jne jg pushf mov movl and sbb (bad) ds mov dec mov mov or loop lods or push adc pop outsl xchg jne scas fistpll mov xor jmp sbb ficomp les inc dec cmp rorl mov add mov scas add fldl mov insb psrld jl sbb cld lcall mov movw pop sub mov vmovss cmp adc enter lcall rcr lret xor cmp dec or push leave adc lea adc cltd lahf jge inc shrb test fisttp jmp hlt and test jmp je loopne add cmp cs add test or decb mov add jge lcall sub (bad) jne cmp jne andl int3 or cmp add je fdivrs notl add movl sbb lea and inc and test shr ja mov popl cmp jge jbe incl dec arpl dec mov inc cmpb dec mov mov mov sub inc mov sub inc mov decl cs mov inc cmp push aad jmp inc lea inc mov fidivr push inc movzbl mov test outsb and push dec cmp rolb ret adc adc cmpsb mov fcmovnbe testb call push inc movsbl cmp dec mov dec mov loope mov dec mov dec test rorl gs ret mov je jle inc adc je push jne in push pop roll jp add test bound fnstsw and lock adc adc lahf mov cwtl mov (bad) mov add aaa in pop cwtl lahf ja mov stc out out testl andb test outsl lahf or scas mov ffreep add mov imul pop ret std mov int3 sub loope push stos inc mov into xor mov add lds xchg sub popa jnp outsb test mov jo and call mov aas out or test idivb jle out out jge cmp pop inc mov mov push mov sbb cmp ja shrl pop jne or paddusb idivl dec arpl dec cmp je ret rorb std mov xor add sbb shlb add push cmp std decl sub xchg movsl fdivl pop aam jmp (bad) loopne bound adc jecxz mov inc out jmp cmp stc inc adc std xchg sti pop pop cmp add rolb cli std mov sub mov ss add jmp ja nopl mov mov std or add pushl ss mov addr16 add movl clc xor pop iret jbe push shrb lds lret iret (bad) mov stc sub call sub loope xchg xor inc cmp je ljmp push xchg test sub mov fwait mov insb sub push push stos jecxz rcrl adc (bad) aas mov mov mov je and sbb stos or cmp test mov cwtl lahf or add sbb add add adc mov xchg add cmp jae push aad jno lret add ret xchg mov dec mov add xlat loopne add sbb sbb mov dec mov jmp jo adc cmp ret sti (bad) incl jbe cmp (bad) mov mov cmp out scas xor dec adc lea rdtsc xor js push mov mov mov dec mov inc pop and pop or xchg mov call jg (bad) jmp dec mov ja (bad) sub jmp mov lea dec jmp push and mov ret jne jecxz add sbb adc xchg push cmpb add mov push jmp mov inc xor mov dec or inc in xor push call fildll push pop adc cmc das negb cmc clc (bad) ljmp fs add aad inc adc pop das sub (bad) jmp dec arpl je dec mov cmp je cmp jbe push adc push add inc xor movl push pushf sub and add mov dec dec std (bad) jg inc mov jne lea mov test jne movzbl mov mov hlt test je setno movsbl inc call dec and cmp nopl call inc lock add mov loope addl out std pushl or scas xlat dec add dec cmp ja dec mov sbb ljmp inc lea cmp mov jbe inc scas jne sti arpl lea jne pcmpeqb test xchg inc add pop dec xor jno decb jle div dec pop dec cmp jae inc mov lahf test cmp mov test push and mov mov add jne fcoml arpl add sbb es roll sbb loope mov neg inc xchg add push adc in pushf out call cmpsb pop cmp stc ljmp xchg test mov pop outsl je out sub mov leave jmp out (bad) scas fcomi dec popa movl sub adc sub sbb stos add sub sbbl adc xor pusha pop icebp xchg insl push fisttp push sahf je dec mov jns dec mov dec lea loope push je fbstp in decl inc rorb dec mov dec mov fiaddl adc aam ja push jne dec mov push call ja,pt ret bound (bad) dec mov pop ja rorb push pusha (bad) jne or xor dec aad cmp cmp dec mov mov call sahf dec jmp outsl mov call add inc mov mov add lods mov jmp rorl (bad) sbb sub cmovs mov fcoml lret jne sar ret nop adc adc pop push daa into dec push (bad) jmp dec lea mov mov out xor je fs ss and cmp je jns and jne cmp sbb flds dec flds dec movl (bad) adc fldenv mov scas hlt jmp lds mov nop inc mov call rorl je cmc cmpw mov nop xchg cmove dec jne mov cmpl and lock xor inc incb movsb xor icebp cld je dec lea jmp je xor mov pop or mov call jo mov xchg out mov and add popa ljmp orl idiv clc add clc add les (bad) dec lea stc call jmp dec lea out pop inc inc iret lea mov outsl loopne mov popf sub pop adc call add fnsave scas fildll mov call mov nop inc mov pop cmp xlat inc lds call jp dec lea call call add lock inc jo mov fs leave je (bad) dec xor or dec add inc movzbl test jne mov lea xor mov movntps in adc inc add mov out jo,pn pusha mov call cmp mov jmp dec mov pop stos fs cli jne nop inc jmp sbb lahf jbe dec push ja mov call icebp add stc jl and (bad) call mov call mov xor mov call out dec xor jbe call push xor mov push (bad) call mov pop in ret call mov insb mulb cmp inc pop add clc jg jne je dec lea dec jmp mov dec mov dec mov call mov cmovg dec arpl inc out hlt rol add sbb sub xchg imul clc popa jmp mov pop dec mov dec mov dec mov data16 lcall arpl sbb mov inc movzwl dec shr or fucomp rol js or jmp and and idiv jg ja mov or pop push cmc and inc add inc cltd rclb jae sub jg inc mov dec lea sahf xor dec (bad) outsb test dec int3 xchg add inc and test stos jnp and dec fidivr cmp mov pop dec add ret (bad) cmp xchg into aad mov or je pop loop mov mov rolb xor mov pushf addl add inc aam mov push roll shrb or sub inc and (bad) mov pop dec arpl mov mov lock push and outsl inc and nop call adc xchg adc push mov shrl lea stos cmp dec mov mov xor dec or call lock outsb adc call mov mov cmp jl pushl in incl add inc movzwl cmp (bad) mov jle sub dec mov dec lea outsl lds or mov jg enter cmp jne sub jmp mov xor rcll loop call (bad) insb lea test mov jg loopne and adc mov sub testb jae cld add inc or test jo push mov leave inc mov add scas mov jmp pusha jo pop inc mov fist and cmp jge mov mov cmp jl test movl mov incl adc dec iret (bad) es pop dec cmp jne xor int3 inc adc divl mov testb cmp inc or and xor into sub pop xor jne test jne jmp mov jmp arpl jg jmp cmp sub pop lahf sub mov (bad) dec arpl (bad) cmp lret dec push mov mov call dec mov mov dec adc popa ret push push outsl jns mov mov cmp pop or add pushl and mov mov sub jecxz xor cld pop insb dec add jmp mov xor and incl dec lea dec sub call or inc test jg xorb outsl inc test xor fnstenv and sbb lret mov push jmp cmpl dec mov mov (bad) incl mov test je dec arpl dec mov sbb dec ffree dec es mov lea movl add add jle jo mov add movq rorl jne dec mov aaa icebp cld dec mov adc pop mov adc call mov ret pop lahf popa call out ljmp lea outsl cli aam xchg call sub cli mov mov hlt sbb mov jg pop jecxz and mov sbb (bad) jmp pop sub inc daa push incl int (bad) dec mov inc mov jle jae sbb pop add inc mov xor scas and adc push roll rorl (bad) pop jmp cltd or or add test (bad) jo test adc loop push add dec push mov je inc test mov dec lea jle jae mov flds movl enter ret sbb cmp adc cmpl je cld (bad) dec mov imul mov sar sub lea cmp jne dec mov and pop pop inc add dec aaa jmp out (bad) clc inc cli inc movl stos mov add (bad) decl lea inc mov mov inc mul shr sbb push (bad) cli add test jle push (bad) sbb and ja sbb sbb cmp jne mov push es mov push or test push je and mov les jne ljmp xor push xchg loope (bad) pushl jg dec test sub mov jmp rcll jno (bad) stc xor add cli outsb jg fisttp jne test adc sub pop outsb fld1 add lock je int3 add mov sbb ja push in pop dec cs test rcr out and popf cmp jns jg outsl (bad) mov dec or fs mul aad orl xor movntq and jle cmp jle sub and aas sbb sub pop jmp cmp outsb adc les jne sti mov inc push mov adc cmp jge pop push and es fildll ret clc (bad) (bad) jmp inc or (bad) sbb or popl adc inc sub shrl aaa push mov lea test (bad) enter push andb iret nop (bad) outsb arpl jmp mov adc popa test jg jbe mov test dec arpl out sub pop ffree or push xchg or or add js sub jl fs (bad) push or push xor xchg sub xor jg push or and dec mov inc cmp je sbb mov or push add mov xor maxps mov or pop mov mov sahf mov je pusha (bad) pop mov fdiv aad sti enter and push and sbb jo mov jnp adc (bad) lcall fildl ret inc add inc test dec es je cmpw dec inc sbb jmp or arpl inc cmp dec cmovge movsl push mov lock mov test xchg je dec push rcll dec cltd mov inc and inc mov inc ja mov mov dec mov dec mov and out decb dec mov dec lea dec mul xchg (bad) (bad) (bad) incl dec lea dec add dec sub add dec test inc mov dec mov je dec cmp je inc test outsl jo in je cmpw clc dec sub dec cltd xor mov add and rorb clc add dec add inc add sti jmp dec mov jmp test jle dec mov mov xor ret jo inc sarb xchg pop add xchg movb dec fisttpll dec pop jl add sti mov loop test lahf inc test jle xor fstpl or cmp incb sub adc mov mov sbb je push pop dec lea movb dec cmp jae dec sub sti xchg orb call adc cmp and adc mov lea jecxz pop xor inc pop pop (bad) je daa icebp aas lock bound jmp inc mov mov ljmp adc loope dec mov jp (bad) push cld movb hlt mov out jo outsl jle xor js hlt or mov add or sbb dec neg jmp and movb popa clc loopne pushf push outsl inc mov and fwait (bad) sub test orb mov shll movsb sub (bad) mov fild (bad) jne dec lea (bad) pop aad inc (bad) out outsl fdivrs add mov mov clc or (bad) adc imul inc mov mov add push inc mov add pop repz imul sar sub mov fcomip lcall cli pushl dec or cmp cmpsb inc cmovl inc lcall rcrb movsl cmp jge dec ret jae fucomip rolb or mov mov jle cmpsb sub clc mov and or inc mov or mov inc lods pop pop add (bad) jmp (bad) decl add test je popa mov mov movl add incl jne jmp dec lea call mov lds aad mov cmp ja movl mov js pop dec int3 push add push out adc repnz mov pop call popf loope ljmp (bad) lcall nop xor cmp xor fistpll js or mov mov xchg inc fiadd test jl push and outsl sarb push mov mov xor incl mov jns outsb inc decl sarb insb test test fidivr and add mov inc sub into push rcrb mov mov dec mov sbb or jmp loopne pusha pusha (bad) ret js mov call aas sbb push iret test jne sbb das add and inc adc mov lea pop inc out hlt cmp sbb stos add decb imul or pop lret pop adc orl sub mov pop mov data16 packsswb cmpb xchg and xchg add hlt les push add mov mov popf add lret pusha or xchg rorl ret mov add mov jle pop std inc add inc test inc cmovns add loop je inc cmpl jne dec pop incl dec arpl inc cmp xchg shlb (bad) pushl or stos sarb inc cmp sub sub jecxz adc leave lea clc cmp aad and das mov ret add inc lea add inc or test (bad) (bad) incl inc (bad) dec shr dec test mov jne dec cmp je mov jle inc mov dec sub push cmp mov test cld push cwtl mov in mov add add inc je ljmp inc inc inc cmp clts jmp stos (bad) mov subl rolb jno outsl mov xor insl sbb fbstp cmp sbb iret sub aaa sbb dec sbb mov sub pop inc cld cmp inc xchg outsl insl jne or push and fwait movb ret add dec cld jle inc sub and mov je jge add roll add pop push and iret js (bad) out adc dec lea movb jg mov incl push pop inc das nop mov roll jns out xchg pop test aaa hlt xor fnsave jae and aaa sbb or sarl loopne fdivrs sub (bad) fistl push push push jo movd xchg pop aas out (bad) call and sbb jmp lcall je fnstcw pop adc jle fnsave jle nop inc (bad) (bad) jo roll lret adc fimul ret inc pop (bad) jne dec cmp std ja cli outsl dec lea je cmp jae out (bad) fnstsw pop std popa inc push or jg outsl sub inc movswl or inc lea incl jg mov inc or inc jge (bad) decl mov mov neg or shr inc or inc enter sub mov fisttpll test ja mov and cmp je mov add incl dec mov lldt fldl inc push sarl ss and mov incl mov movb movb inc lock les xchg lcall xor dec mov inc movswl dec sub lea (bad) and daa decb xor inc test pop push std lea push sti pop imul cld test and mov jmp aas and add inc movswl test jmp add pop adc adc ja pushf inc mov ja std (bad) test jne jne jg and mov lds clc sub add out dec mov fcmovbe or call or sarb xor pop add nop lcall out sub fiadd lret ja,pn jmp xchg jg mov and shlb je ja daa or call out setnp dec cltd mov std cmp je sub ret push mov lea sub push xor adc movsl xchg cmpsb pop ffreep dec test js pop pop jns mov ret shr pcmpeqd cmpsb jle loope dec shl inc js sysexit rcrl loop les pop loop loope dec clc pushl lock jmp jae out ja mov test js lea mov sub cmpsb jbe je hlt mov mov dec add test cli shr inc push sub (bad) fild mov lret add pop icebp and jmp aas orl lcall fwait je jmp mov ja fdivs push call push mov lea push test adc movsl mov lret push call mov aas pushf outsb jle movswl sbb mov cwtl push mov js mov sar mov ret mulb inc test out or icebp add or test aam rcl jmp push push jne ja ror pop jnp pop movb fist mov shr mov dec data16 cli out cmp or xor jmp scas add (bad) loope iret pop lods arpl push imul jge das mov mov xchg sub and jmp jge inc out xor rolb pop lds (bad) mov and das gs test sub add addr16 call mov mov je pop test add and xlat call dec jns xchg aas ds stos jp icebp sub and sbb sub xchg inc incl mov outsb xor mov mov scas movsbl lcall js xor mov test or hlt dec inc (bad) mov and pop mov out or jg aas or and sub pushl dec lea je cmp pop ja loopne push and call movsbl pushf jae test add std leave jne mov lcall add jo mov add pop and popf out sbb inc or (bad) dec lea out add or xor inc insb pop and movsbl test mov inc mov je loopne or mov add rorb push xchg add ljmp add icebp (bad) ljmp ja mov jbe ret dec xor call mov pop jmp cmp jae (bad) stos or inc mov ss test outsb call in mov aaa loopne ret call inc test adc test mov movzbl fistpll xor es and mov dec add adc cld or mov test out (bad) fwait jno call xor daa jo jnp push cmp xchg jmp repz add je xlat jb xor test cmp fldl pop inc mov mov and push xor pushl dec lea decl inc clc mov pop mov arpl dec mov adc add call jg call dec mov xor add sti popf sti je inc mov je or je lahf adc mov inc cmp je dec testl pop dec xor pop inc jno nop in cmp lods jae insb sbb add pcmpeqb push (bad) adc (bad) mov add mov enter aas ret push inc lcall and roll mov lahf inc jmp cltd pusha cmpl rcl mov jmp inc push jo insb jne loope mov sbb inc popf jmp lret adc or sub push in outsb cltd sub sub xor mov aad cmp int3 add movsb mov or mov mov xchg outsb push add test imul add add test pop out and inc (bad) mov call jl add je mov call push jb mov mov fs jne sahf mov mov ret jmp adc jmp pop mov push out or pusha call in adc pop push mov out adc ds jnp dec mov fdiv pop cs cmp call jge pop adc inc adc push and jmp and jb push addb jmp pop pusha mov jo (bad) shrl cmp lock jle and loopne and test inc loop (bad) sbb jae mov pusha sbb mov arpl outsl stos out mov hlt outsl push push inc cmp adc cli (bad) fsubl push sbb test je inc (bad) or mov jns loop push add push or js (bad) aaa dec mov inc xor jmp sar les adc das je scas jmp jmp repz cwtl add xchg adc xsave pop decl mov fucomi ljmp mov mov decl add inc cmove add pop shr lret mov jmp cmpsb addb fstps std cmpb je pop lcall imul sbb out and add data16 leave fdivl sbb inc mov adcl or xor pop (bad) jmp xchg xlat loopne int3 std ret mov jmp or in inc fadds pop inc sbb adc ja test jmp jmp jo test jne adc add fsubr mov xchg add stc push or sbb push xor sbb adc call lret sub lea int3 xchg ljmp mov mov jle movzwl push pop es ror stc push or movzwl jb shr push and jo or ja sbb negl divl in clc (bad) jnp (bad) mov int3 roll jl rcrl pop lahf or cmpsl or xor pushl fildl clc decl cwtl lea cmp jl mov call inc add inc fldl les pop pop mov add js dec cwtl xlat jle ss out aas jae mov inc cmp jg aas scas fild mov inc movzbl mov dec lea dec lea inc test inc mov adc add inc movzbl adc or push int3 mov add fxsave or and test pop xchg pushf mov shl mov dec lea mov test or hlt mov fild (bad) cmp rorb dec mov xor jmp dec lea dec arpl dec (bad) (bad) out pop shl dec lea dec add mov lea mov div lahf (bad) incl packuswb aaa adc ljmp inc mov inc mov fnsave icebp add ret lret rcll aaa push popf call dec mov inc mov dec shr inc and (bad) (bad) add jae pop test jne dec lea dec cmp jae inc mov inc test jne ja aad dec (bad) ljmp loop dec imul outsl ljmp clc jmp nop inc mov (bad) jne dec sub mov fild add inc mov dec mov loope cld push pop js push inc dec mov xor mov mov sub dec stos mov dec cld inc inc adc sub out (bad) fistpll inc cld dec shr and dec xchg fimull (bad) dec lea inc mov out mov dec lea inc aaa dec repz jne dec mov dec sub dec sub (bad) clc jmp jb out push mov das popf out adc push sub lahf push add jg sub cmc mov mov inc mov imul stos xor loopne inc mov pop mov clc add xchg xchg imul dec cwtl (bad) pop sub mov xor cmp jle mov cld ja roll (bad) jg call (bad) pushl orb sar dec cwtl dec lea dec mov lcall push add mov dec roll mov jae outsl call clc add cmp adc jbe ljmp inc lea cli (bad) (bad) incl arpl inc mov shl inc bsr inc mov xor inc sub inc add fild imul test (bad) outsl pop inc mov inc cli orl and stos jo test sbb sbb stos push adc (bad) loope mov insl jg mov movaps add inc xor inc aad pop fistl inc jge and and xor daa or sbb fisttpl sub stos jbe xchg jl mov sbb sub (bad) and add sarl dec mov inc mov dec testl push sarl or inc jle lret sub inc loop cvtsi2sd dec or into or and test movsd cmovns sub into std decl pop or test mulsd leave mov or jne ret jbe test rcll mulb cs mov loope push fsubrl mov out (bad) fbstp add loop add jo mov cmp jl mov push ja dec mov dec arpl sti fnsave out sub pop lds xchg inc mov out add add mov out jg jmp mov sub jg jns jmp jo pop sbb adc push out mov lcall clc sbbb adcl ja mov add add pop add inc mov sub or add mov dec das add inc icebp cmp je mov movsb and test mov xor cmp (bad) cmp loope ja and cwtl mov push mov inc pop dec cld lock clc push call or cmp psubw sbb fldl sbb call int3 sub popf stos push dec dec rorl jg enter cmove outsl xor rorb lock lahf add mov inc and adc jne jo xor clc out fbstp jnp and inc test je or jle (bad) ret push cld pop add lcall dec movd data16 in rolb fdivl push jg dec or cmp (bad) fcmovnb mov movapd inc xor idivb ljmp dec xorb lea dec mov push and dec cwtl test pusha out divl sub je or (bad) cmp dec lea jno divsd lea inc mov mov lret jg xchg fimull ret lods enter out xchg sub sbb adc cmc aaa lret ja add and xorl fdivrs jge icebp add jmp mov in int3 ja pop cmp movl fucomp outsl jb bound loopne (bad) xor inc enter fnsave add add je add fldl jmp lock movl lods pusha outsb rorl sbb fbstp jmp aad inc dec xor sarb pop ret inc push xor or xchg xor mov add pop call xchg popa mov cmp lret pop jne das inc pop int call fdivs fildl iret mov js add jl cmc sbb cmp outsb adc psrlq inc cmp (bad) cld cmp test adc fcompl fidiv insb and sub jae and mov incl pop xor push test sub pop adc test je out dec xchg jnp or dec pop xor jno movb ja xor push pop dec mov nop push inc or and test outsl mov add xchg push lods jae fdivr mov jmp daa sbb adc xor jmp xor test push add sub inc imul rorb cmp xorl mov mov lea and je (bad) cmp lods cmp mov setg xor out incl test je cmp jg loop (bad) insb sub inc and add mov push pop jns out mov leave jle popf inc test jle jle cmovle sub (bad) std and sub sub pop popf push cmp test sub pusha lret (bad) sub jo jne loop imul aas rolb jnp mov fs stc sub std decl sahf rolb add xchg lds lds pop push inc test pandn clc mov and xor in add mov pop add mov jbe imul sub ret cwtl cmp imul clc outsb add pop inc setg jne inc mov adc test test jg cmpsb ja (bad) je mov and push dec mov call xchg jo ret into call movsl cmpl pop pop mov dec and fs add add neg push sub (bad) sbb xchg addb pandn cwtl std cmove mov push fistpl mov clc push adc inc pop (bad) out mov jmp mov in or testb mov jp shr mov dec adc adc push jae popf sub popf add fisttp insb xchg xor cmp cmpsl cmovle jnp hlt test insb push add or adc jecxz pop dec loope outsl mov bnd movsb and loope sbb adc jmp mov and jmp cmp shr popa mov or cmpsl sbb mov cwtl inc inc jno push decb push and je mov dec fiaddl jg (bad) pop test add test sbb orl add test lock mov sbb cmp test (bad) dec out mov orl out adc loope loope test jnp mov call sahf mov dec add mov dec or jg mov call dec mov or xor mov or (bad) (bad) inc mov call adc rorb mov test out mov inc call inc mov jmp repz call pop (bad) dec mov jl sbbl clc popf pop sub cmp or (bad) jge mov sub xor add dec (bad) pop fwait bound or dec push or ret jmp aas inc inc cltd (bad) call aaa inc clc loopne mov sub mov xchg inc mov fdivs mov xchg test imul jl jg jne pop popw and mov push or lcall mov push dec xor loopne jno dec mov sbb jg data16 (bad) ljmp cmp jl inc xor dec xor int scas jmp inc mov movzbl jecxz clc add jmp ja dec cmp je mov cmp jg cmp dec lea je add jo out jmp adc cmpsb push and jmp and inc hlt fnstsw dec cmp je inc xor jmp jmp mov xorb and add mov mov lret sub roll leave outsb lret frstor pop adc jp je xchg cltd jne cmpb cmp push pop ja mov sbb mov and mov stc jae bound pushf pop shrb testl mov mov les mov in mov arpl jecxz ret call mov call or ret cs cmp adc jae jmp std cmp hlt (bad) call pop adc mov push mov mul push cmp insl mov cs adc fnstenv xorpd xchg sbb sbb mov jb or jmp mov xorb (bad) jmp fisttpll js dec cli mov dec faddp js cmp (bad) call loopne jl dec mov sti test loop loope cmp xor mov jne push jg mov (bad) jmp dec cwtl push jno mov jle cmp push pushl call out mov jmp and add call or dec push int3 jo add sbb jl jmp jecxz sbb sub xor adc icebp mov clc pop lret out mov mov jne stc cmova jmp in jl push int3 xor aas cmp cmp jne test jne jo jnp loop test arpl ja or mov (bad) test jae xor dec inc inc ljmp movl repz jmp les jl call cmp pop sbb clc add popl lods ljmp add in imul jmp jg jmp pop out mov (bad) arpl (bad) lock inc pop inc xor inc movsb cmp sbb mov mov add jle push ficomp dec adc in sub lret cmc xor cmp jmp mov testl insb and mov into push jbe fisttpll clc dec cmove and jne pop cmp cwtl in int mov (bad) out mov in mov dec lea call jg cmp mov push and sbb pusha cwtl stos jo lds cmc pusha cmp mov mov sahf inc inc mov jmp or xchg dec sub and (bad) push mov stos jmp jl adc mov inc mov jae aaa xchg add pop out pop cmpsb mov sbb jmp or iret lea xchg add stos mov std push adc test add adc add dec xchg jmp inc jmp es push (bad) xchg cmpsl jl mov frstor push pop add inc mov or dec inc fiaddl lret fcmovnb repnz add pop or add xor js fwait jmp and or jge mov jmp xchg or dec rorb test push sub mov mov push push mov xor sub jnp xchg shrb cmp ret pop insb jp jne and adc mov push decb jae adc lea jmp lds xchg jg push pop int3 je sbb daa je dec mov lock pop jns sbbl add mov aad dec lea or pop jecxz gs ret push fdivrs sub xor cmp jecxz mov or sarl subps addr16 incl inc (bad) (bad) (bad) out cmp gs scas adc and sbb lahf mov jbe jmp sbb ret pop je sub dec sub push clc pop lahf mov rcl mov pop cmp mov nop (bad) mov mov (bad) pusha mov push mov jne call cwtl sbb push (bad) lea hlt imul inc cmp add lret ret bnd dec adc dec aas movsl mov jo imul or jle cltd mov or inc mulb icebp lahf mov inc xor jmp jg ret xchg xor mov dec lea inc cld lcall dec arpl mov sar cmp jle jle cwtl and dec aaa lea dec lea jmp jg ss mov dec lea inc mov sub inc (bad) (bad) (bad) call ljmp mov inc mov inc mov dec add dec add shl mov inc or mov cld inc mov es dec sub sti dec shr (bad) cmp decl jl add test inc mov je adc dec sub dec sar jmp jmp inc movl stos pop lods ljmp lock dec cmp dec mov jbe out movsl dec cmp ja dec ja jecxz not dec lea pusha xchg data16 je enter cmp jmp arpl (bad) add mov xor test je jmp aad push (bad) out or mov dec cmp ja ret tzcnt add ret (bad) out xor iret rol lcall mov dec arpl cmp je (bad) pop loop stos jb pop sbb cmc jbe (bad) cltd call mov out es ret movl dec lea dec lea or dec orl in out and and out loope iret std jmp add dec mov pop adc out decb or sbb call or sbb push call lcall mov adc fisttp iret std pop xchg (bad) adc iret sbb or loope push and ret loopne test (bad) dec fdivrs adcb cmp sti fild lahf cmp jg dec lea fnstsw mov dec (bad) jns cmp mov dec mov jne mov sub jecxz mov dec add jmp mov hlt shl inc aam call daa aam aas sarl or shr add cmp cmp jo mov je dec adc dec (bad) (bad) out jg mov shl jae jp add rorl dec sub aaa jge sub stc add add dec cmp jge mov mov pop inc jmp push and iret dec dec pop pusha clc aas loopne sub jns or or out outsl js arpl in pop addl cmp mov inc fdivl mov or and mov and jbe jg mov sbb (bad) jg adc sub mov dec mov dec lea ljmp dec arpl (bad) xor aas inc mov dec imul dec add dec mov jle add orl cmp jg cmc (bad) aas add ja jle dec arpl add je mov xchg mov call cmc aas jmp or stos jb dec faddl arpl dec lea mov xchg mov push add dec sub call xchg orb mov and iret or sbb mov movl lcall pop and jns dec arpl inc pushl int mov inc cmp jge mov hlt std dec mov sti (bad) dec dec arpl xor inc lea cmp setl add call loopne add rorl xor xchg dec cmp jae dec mov nop cltd test add dec cmp ja dec lea dec add mov add sub dec (bad) xor jb jmp dec (bad) clc cmp jbe mov mov dec in dec mov dec pop gs jg (bad) (bad) push movsb mov dec push dec imul dec add dec add dec mov incl sti incl inc cld dec shr dec cmp ja dec inc mov ja test jle inc jnp jge cli cld dec lea je jmp jb jg xchg jg sub mov jne mov add and xchg inc mov and add mov mov and psubd pop mov dec mov test je dec mov add test je and sbb psrlw je dec mov dec test je div ret add and call test loop insb dec int3 cmc pushl sti jne pop xchg cmpl popa ret (bad) jge dec mov adc cmpl jne insl sub fild loop out add ljmp xor loopne xchg mov mov call cmp je dec (bad) or pushl cmp pop cmpl jmp rclb push int (bad) call jmp mov shlb dec jns loop xorl inc sti mov inc adc mov movl sbb scas mov (bad) (bad) mov test incb dec or cmc inc lea cmp jle jle loopne xchg sbb ret rorb mov test stos sbb fcomip jle lea clc dec lea pop rcrb cmp jne aaa jge jl add arpl jne inc and dec lea je sbb lds mov mov inc mov aas mov dec jp shl mov mov clc (bad) (bad) cld inc mov inc mov inc shr dec cmp ja inc add inc clc or inc cmovne insb loop mov call jo ja jbe movsl iret movsl cmp roll cs xchg dec arpl mov inc sub jne dec lea (bad) (bad) decl rcrl lea dec lea jmp dec cmp jae xlat std (bad) icebp dec sub mov rolb leave iret dec inc pop subb sub (bad) sbbl cltd push lea dec lea jmp inc mov adc sub or ja call cmp (bad) ljmp shrb wrmsr cs push sub sbb std outsl (bad) push sbb dec mov cmp dec arpl dec lea jo xor add jmp jae inc mov ret call push cld loop sub dec sub dec mov ficom and (bad) jg and loopne dec cmp ja dec cmp jbe dec mov aas nop lret sahf mov xor enter ja dec sub cmp ljmp fstl ljmp dec incl adc rcrb popl xchg test mov mov mov sub out xchg jmp add out call les (bad) loopne inc arpl (bad) adc pop jecxz and lea xor lea mov inc (bad) aaa cld mov inc bsr inc xor rolb clc or (bad) jg adc xor inc sub shr or dec shl (bad) decl inc mov shr inc lea inc shl inc or dec or sbb cmc inc and inc adc or sub xlat jae outsl das je mov (bad) mov roll loopne mov mov push inc shr adc (bad) mov lea inc dec fs jae pusha (bad) hlt mov mov add jo ja decl enter jmp xor push push mov inc lcall xchg addr16 shl sbb arpl mov sbbb ret dec or inc jecxz call rclb or jg push inc mov shr inc push mov cs lret enter call push (bad) sahf inc cmovne jno inc xor repz bsf inc mov or pop imul inc int3 ljmp (bad) mov leave inc mov inc setne scas stos pop std aas inc inc adc inc inc lea push sbb mov inc sub mov push sbb xor dec ja (bad) mov repz int3 pop aas lea fist push sbb out shl inc cmpl add add mov mov xor sub fadd add dec lahf cltd jmp fs (bad) mov ljmp (bad) ja movzbl test mov je dec dec movzbl dec add inc lock jne push cld and cwtl sub dec add adc cli scas adc rorb call jge mov inc (bad) mov and test je das sbbl adc adc mov cmp inc mov cli call loop insb dec inc xor add sbb xchg movl inc mov int3 add fcomps aas add or push sbb pop outsl cmpsl faddp add adc loopne add mov movzbl mov fcomps dec mov jne adc insb jo mov jmp xchg sbb jnp or and pop jge pop push aam mov mov push add movl lcall add xchg nop incl xor and sahf dec out or and dec test (bad) adcb mov mov call mov dec cmp jb inc (bad) mov mov lock out dec cmovne mov push xor sbb ja or das ds test mov dec mov insl scas into dec mov xor orl dec test inc mov je cmp loope cli (bad) je xchg pop mov mov cmpb jne jmp jg cmc mov add ret dec dec sar fildll fisttpll push jbe dec mov inc mov jg dec sub dec jp call jg dec cmp andl mov dec (bad) je and mov fbstp rolb jae,pt (bad) das ds jo imul loopne into jbe call mov xor aas iret loopne loopne mov jg xlat dec mov aad clc es lea cmp cmp and mov inc push cmp (bad) fimull repnz mov call les std jg sub dec mov je cmpb jne jmp nop fcoms mov das add jb ret mov cmp fcmovnb in pop push inc mov adc cli incl ja mov add mov and and inc rcll sub jne in mov icebp and cmpsb jbe inc jl cmove xor xor xchg cmpsl ja mov mov flds adc dec sbb (bad) xchg (bad) xor mov add sbb cmp pop xchg sub inc mov call mov push outsl (bad) and xor notb sti sbb (bad) call pop add popf outsb je popa cmova pop dec xor (bad) incl mov dec lods mov loop xor pop fbstp (bad) (bad) jg (bad) dec add cmpb je dec add dec cmp jbe movzwl inc xor loope inc mov pushl out push aam mov xchg sub pop nop idiv (bad) call cwtl dec add cmpb je inc ja,pt mov mov aad mov das dec movl adc imul pop ds loopne in add je add lcall out or adc add idivl lock nop nop jmp pop orl ds push sarl and gs out pop push sbb into mov inc addr16 mov push sbb pop outsb pop dec sbb ds jge inc push push (bad) aas dec out xor and idivb das xchg enter jbe push and push rorl push (bad) cmpsb pop out pop push sbb into mov inc sahf mov nop inc push outsb pop dec nop inc push sbb cs roll jg push sbb into mov inc sahf mov inc inc push outsb push sbb (bad) jae inc (bad) pop or inc push (bad) movsb ja fs inc push fmulp mov inc push sbb sbb ds sbb push push mulb outsl out into mov cmpsb xchg xchg and outsb out (bad) inc orb fnstsw add nop mov adc mov fcoms cld decl mov dec lea call fisttpll or lds scas dec jo mov fwait ret add inc push push mov divb add xchg insb int3 popf fnstsw call dec imul sarl test dec pop xchg mov add and mov lret add fimul xor jmp out ret je pop dec movsb sub xchg fmuls call pop shrb mov shrd sti cmp xor inc fptan fnop inc test inc js adc gs aad cmp add dec movl pop ret aad mov cmp (bad) (bad) fnsave sar adc (bad) je dec mov dec mov dec mov dec mov mov adc sbb adc sbb and out pop loope inc ret call mov mov add and jg adc loope,pt add sbb adc sub das adc mov cs das inc or add scas movups add mov or and jge mov ret sbb clc pop add aas dec cmp ja call nop dec add ret jbe ja clc adc dec xor add dec mov clc rorb clc add mov rorb mov stos sbb xor jbe lret dec pop xchg pop test and nop pop add aas cli pushf add andl call in sbb sar imul jmp or pop ror out (bad) insb pop mov stos pop inc into adc cli inc cld xchg aam cmp pop jae inc sub (bad) adc je inc cmp jno (bad) outsb pop std sbb movl mov jne ljmp call jmp dec and jmp inc add clc add fs (bad) mov cmp push add (bad) jne fisub std fist add mov jmp out aas sub lahf out dec mov mov outsb pop stos jne out xchg mov cmp loopne cmpsl dec dec cmpl iret cmp dec (bad) xor mov xchg pusha fwait dec mov mov mov in cmp mov xchg inc ret pop mov cmpsl inc std lcall stos mov lock cmpl mov rorb test addl xor std fistp mov (bad) xor call pop and dec sbb rclb add clc cwtl add push call jmp mov addb cmp das jg and push call iret je dec mov xor call call xlat xor jnp jmp cmp dec pop shlb cmovbe dec mov fs in decl in jne adc enter jbe sbb (bad) mov jecxz cmp dec std and jb aas cmp aaa jb outsl dec mov lods xchg mov xchg add and call jns ret loopne add scas xchg arpl sbb stos mov jno add nop sub pop push inc jno nop insb or outsl les in call loopne aad adc lahf push push mov mov dec lea out ljmp add jne xor xchg xor pcmpeqb xor aam sbb add mov jne out sbb sbb mov incb pop adc sub adc (bad) aas push pop int cmp jne mov mov and inc inc jmp jg mov push fbstp test jbe mov jmp and inc adc movsl sbb lret and xor mov dec adc lods xor push push dec xor push pop or (bad) rclb clc jne sbb mov adc jmp mov lods push loope inc aas cmp jne xchg imul movsl outsl dec (bad) ja mov mov mov cmp add and inc outsl (bad) and push dec cmp psraw loopne std dec mov push xor clc ljmp lret xchg les push fs call add fld1 xor push popf aad adc fimull and fisttpll dec cmp sbb and cli fbld xchg mov mov and (bad) inc call pop (bad) outsl test ja and or xor mov idiv or push aas sbb mov shr and inc add and or ja or cmp ja add xor ret mov and lahf das out jge jo push outsl pop inc (bad) (bad) aas inc mov inc and inc cmp jne out add pop incl add in loopne add sarb mov mov insl inc push neg int3 test pop and iret sbb cmp add push mov pavgw test je dec cmp jne jmp lahf cmp dec mov je dec mov add sbbl je dec (bad) call cmp fwait test daa test dec or sbb cmc xor call jg repz cmp lock dec lret fsubl push add mov add jg (bad) mov pusha mov cmp mov pop fnsave scas sub call mov inc cwtl out ficom out mov dec push mov decl cmp je dec lea dec sbb lea dec aaa ret (bad) inc loop dec add dec cmp je ja dec lea and xor ret dec cmp dec xor jne dec mov ret pop add pop out pop add je fildll mov add and cmc dec cmp pop mov js dec fwait xchg inc dec add dec into std outsb add jne je dec movl mov xchg mov sbb pop aam jbe jne pushf je jmp cltd cmp dec mov add loopne nop dec cmp jae add sub ljmp dec mov dec mov add dec daa aaa dec push mov loopne hlt call idiv aaa movsb fmuls pop and dec mov dec mov inc (bad) out rorl cmp xchg cmpsb call je mov (bad) xor inc ret or inc add add sbb or in mov pop inc rorl (bad) out out fcomps push jmp xlat dec lea jne jbe call dec sub ret sub outsl jbe sbb inc cmp (bad) decl mov jne xlat pop push scas je call xor mov call sbb into sbb or push (bad) sbb es xchg orl addl adc push ret scas xchg shll jge dec mov or adc or mov pop jmp cmp xchg push scas je xchg dec lea cmp dec mov add cmpsb mov add lea dec cmp jb loop or dec cmp mov sbb dec lea jmp jae inc push dec adc sbb orl push mov xor cmp out sbb mov call add add test jmp rcr dec jae add or (bad) jg adc dec lea call jmp (bad) popa mov push pop outsb (bad) sbb and sub inc xchg mov mov jmp nop ffreep dec mov rorb jecxz adc xchg ret jne flds adc je (bad) fs pop pop jmp or mov xor mov je dec mov icebp call icebp test insl and call clc or xor add pusha dec mov call mov xor jmp mov prefetchw or or fisttp arpl jg pop jmp orl pop jg std sub lea xchg mov inc cmc test arpl push or int mov arpl popl std mov add je dec (bad) adc outsb adc mov ret mov out mov lahf loope out test ret je xchg call push divb jmp (bad) mov adc pop add xor call outsl outsl sub (bad) and xor add cmp (bad) adc dec add sbbl and xor mov movsl and (bad) rep sbb pop jle add adc daa adc mov xchg add xchg js sbb je add repnz jg je cmpb mov jne cmp jne cmpsb call call (bad) sbb dec arpl movb sarb add fldenv xor call bound mov aaa icebp call push (bad) call push push inc icebp call std mov xor call inc fcomp ja incl je call dec lea xlat inc decl adc jp lahf jmp aas cli lahf add dec cmpl xchg pop loope fwait mov call push (bad) or ljmp mov (bad) mov dec mov je cmp rol cmp movl add jmp aam inc in leave mov call cs les jo dec movl (bad) call jle (bad) test lock mov inc or push jo clc cmp test dec mov call movl mov dec cmc xor mov ds int3 push cmc fwait js dec mov sbb push aam fdivp movzbl xor xchg (bad) pushl xor add adc daa icebp pop (bad) into int3 cmp dec mov stc call push xor and dec pcmpeqb xor or js fldl xor das cltd lea pop in mov fdivl sbb pop adc add pop scas sub call inc imul cmpsb push pusha push push inc mov std dec mov call es jno jp xor orl cmp std (bad) pushl dec mov mov cmpb je or mov dec mov call or pop nop cmpl sbb add std pop inc mov or add add arpl rcrb and ja dec mov call sbb out inc mov imul add aam mov pop cvttps2pi or add and add scas fcoml add jno daa fmul dec cmp adc xlat dec sar test test jne bound mov xchg or cmpsb lock add in or ret ffreep stc pushl adc je fwait add int3 testb je add inc xlat ds jmp sub and mov call adc xchg out add jo jmp (bad) sbb lea call push push aas lock dec add jmp pop jg mov xchg jecxz and sahf xchg in inc cmp jno xlat mov dec test jbe pop call add or (bad) icebp sbb mov test lret pop stc addr16 sub sbb fidivl ljmp jle xchg outsb testb dec lea dec lea add daa adc mov movl pop dec decb icebp call mov mov in test mov in daa cli rcll nop cmp jmp aaa lea push ljmp cmp add je jmp inc sbb mov and shrl adc pop inc call jmp test dec mov stos and in out and inc addps mov xor subb pop rorb dec mov mov or dec scas call xor call loope inc mov dec lea inc mov ljmp or call int3 aas imul movsb and idivb aaa dec cmpl jnp xor add scas scas pop insb and (bad) adc add fidivl pmaxsw inc jbe add fsubr mov xor call jmp or inc sub mov jge dec mov call add dec clc sub adc sbb mov mov test fadds call and fld add call push xor add cmpl sahf shr lcall mov pop mov (bad) lock call jmp cwtl in mov xchg push adc (bad) lock jb cmp pusha dec mov call push xor sar (bad) mov pusha (bad) push cs mov call (bad) call mov xchg pop sub or xor add lock mov call and imul pop iret jge mov inc lea inc jg rorb (bad) pusha pop pop add fidivr add aad xor push dec dec sub mov lea shll aaa push test and (bad) cli (bad) fist mov and add dec shr jne test fmull inc or mov cmp jo dec mov mov cmove xor call fisttp popa push call rol je sub pop aaa and fstpt incb fcoms hlt jle test sbb add shr mov and inc push dec outsl stos mov call rcll or adc pop inc mov mov dec mov je je (bad) movq call push lds mov inc test je dec fisttp adc jmp cmp stc call or adc adc movsl lea inc xorl je sahf shlb popf xchg jecxz sbb das dec lea sbb iret inc and call fist inc sbb call iret je and push sbb dec mov (bad) xor movl inc add cltd dec mov lods arpl cmpsb ud2 (bad) into xor inc jne mov jae or pusha jle or xlat in xor je ja sbb mov mov jae (bad) scas mov lret add dec sti pop push cs iret lea dec adc out call adc nop dec mov jb dec cmpl je push add cmp jne lods xor fcoml jmp add cmp lea jne jmp nop xor in sarl or jne cmp arpl jge shr fdivrs xchg dec inc cmove cmp adc dec call shl call decl or jns mov inc mov xor dec jecxz (bad) decl sub dec shl dec mov call mov stos jg out ds sti lea add dec mov dec mov inc mov jecxz fbld add add inc mov dec test in out lcall push dec mov call dec lods jge xchg sbb sbb push jecxz mov shr mov (bad) call or mov jbe jns sahf push cld pop and loope add mov dec ja sbb loop cmp mov push jbe mov jg lea out mov jmp xchg inc xchg decb stos leave int3 (bad) mov and push push out ljmp (bad) je cmp jae dec movl dec pop mov xor out dec cmp jne addr16 mov adc dec mov bound test repz (bad) popa add mov call lcall dec lea (bad) ss mov xor cmpb je or jo fwait out mov push imul insb or mov push mov jb std enter dec mov jp std mov lea (bad) (bad) cmp iret jmp jae jbe dec mov dec mov dec mov jl sbb call cmp add ret push mov out inc lea (bad) push dec arpl dec lea rorb cmc add mov out dec mov pop dec mov call (bad) decl (bad) je mov inc mov xor inc sub dec lea dec mov sbb mov dec add sbb xor jg jnp inc mov jmp mov call outsl cmpsl cmp inc scas sub fwait cmp aas jmp and movaps xchg shlb hlt cs inc movsb pop dec mov in scas rcl sub nop pop ja and adc xor mov xor jmp scas inc ja,pt adc sub cld push pop pop lea pop push add add (bad) push xor mov adc or adc sbb call test cmc mov jne push jne cs mov mov mov xlat jg nop and je rorl je aas mov outsb xor mov loop adc add and cmp sbb in sbb sub mov inc fstl imul ja add je xchg andl mov leave imul push jne xchg jge adc adc jbe mov sbb or std mov (bad) jmp clc add and inc inc add inc inc add or outsl fcomip in pop pop mov call out test jle inc mov lock mov subl gs int3 jg call push inc cmp sar arpl and or mov call sub in pop pop rcr je add call mov psllw leave call sbb mov inc push aaa cld sbb sbb or adc pop jne mov and cmp je inc adc mov mov adc ljmp je (bad) (bad) call mov comiss call pop stc adc mov cltd push aas or fsub push pop icebp call std (bad) pushl je mov test je mov test jg fnsave and lock add dec enter inc mov pop cld cmc rcl pop jg icebp call daa or cltd or rclb mov je lahf decl mov xor mov aad std daa xchg mov call nop xor push mov decl xchg clc adc iret negl call fldt mov adc (bad) jne call inc pop data16 dec call jbe jmp iret aad sub sbb adc and sti es inc (bad) je call dec mov mov call adc jno pop call adc call xor call outsl das (bad) test clc clc dec mov call jg xor dec sub inc decl clc pop nop test pop or loopne jg dec mov call test pop inc mov call loope daa lret in nop fidivr (bad) int3 je (bad) incl add test jne and or rolb jle addl int3 jg ja push xchg push sbb (bad) inc add cmp test je testb pop cmc inc or (bad) dec mov inc outsl test jne test jne xor pop into xor adc sub xor jge fsubrl and mov jnp lea pop add arpl adc int3 andl and or mov out inc dec daa push pop mov pop call mov fsubs xchg ss jb ret push dec daa xlat and dec mov (bad) or sti enter add ret jmp insl dec aas xor xchg lea mov rcl cmp fld1 mov movsb pop jl xorl cwtl jae inc mov cmc js,pn mov xor fcmovb mov clc std ja imul add out cmp je sub cmp sbb sub jle je cmp mov jae fadd add adc das or shrl nop or mov and (bad) sbb (bad) aas not inc test jne and xor inc or mov aas ljmp faddl dec (bad) jecxz pop mov pop lods add movl mov (bad) mov sti dec mov das mov lret sbb jo add ret pop xchg xchg ljmp scas or iret iret add add lret lahf pushf sbb mov or sti add loopne mov dec mov aas or idivl ljmpw adc mov add iret setae add (bad) mov test add adc jne imul or mov inc mov mov je test mov dec lea jmp movl mov dec dec mov (bad) mov call sar mov call insb sbb jo mov jg or sahf jmp inc add pushf dec cs std inc or inc clc fisub jg xchg xor std aaa sahf aad mov dec mov call push xchg arpl jp dec mov sbb inc add cli jns mov dec mov inc movsb clc jae xor inc jge inc inc out pop cmp push out je mov xor sti call outsb dec mov jne scas push sub adc stc inc call cmp je mull movb rclb aam repnz lea dec jg jno cld gs cmpl cmp incl movl (bad) jo cmp jbe mov xor dec test je inc mov adc adc mov mov xor jecxz fs or fcoms cmp dec jp (bad) or inc loopne lea jbe mov sbb adc call fs cwtl and pushf mov push jl push inc or fildl adc or jmp addr16 mov clc bnd fdivr jmp add cmp jl cmp mov outsb pusha sbb pop dec push call (bad) dec sub adc mov dec mov stc call xchg ds jb mov lods call adc adc addr16 orl push and call daa mov fist daa dec jmp clc add cmovle jmp test mov mov and dec dec test je pop mov adc je ja icebp mov xor outsb js xchg cmpsl dec test sbb and mov mov xchg mov std adc call mov mov add cli es call dec mov enter cmpsl aas hlt xchg cmpsb sub sbb jne or sub outsb in sub or outsl repnz add orl aaa fmull sbb pusha xlat call lock icebp call (bad) pop dec adc sub pop adc adc push loopne push rorl push call aaa sbbb inc mov (bad) sbb jne fmul mov inc push xor daa and jb xchg divl pop cmp xchg mov sbb jno xchg nopl pusha sub jno data16 andb jmp in sahf scas xor and jmp std or rcll cs fcos jmp jmp sbb mov gs lock jb fwait push loopne rcr xchg and jne adc jge adc and stc addr16 fmuls or sub jo cmovb jo mov inc pusha je es push xchg xor outsl call xor imul fs dec fwait push inc lock inc sub cmp dec (bad) lea sub sarl pop test add cmp pop hlt push mov pusha pop cmp mov addb ja or lahf lahf dec mov mov iret dec adc add movd das push ret adc sub add test cmp and test inc jne scas mov xor in dec jnp cmc cwtl add out dec (bad) je or aas xor pusha cmp call add mov jmp and xor jne std cmpsl mov jno jne dec cmpl dec adc ret icebp xor mov mov lcall push mov pusha jg sub mov (bad) fmul call jle test inc je and aas inc inc or test cmp adc loopne adc jnp jne or scas dec mov decl test mov call call repz dec sbbl je movzbl test jne jmp or lcall cmp mov dec lea dec add fnsave sub cmp inc incl mov (bad) xchg jno pusha xor (bad) push cld and movb jmp insb jle js pop arpl xor ss cli mov lds add jbe fdivl push mov xor xchg loope mov adc cs cmp (bad) addl jbe call dec nop or mov add (bad) or inc cld cmp ja call push (bad) xor call or add cmpb insb dec test pop mov dec les mov mov or ds mov dec sub push fs (bad) (bad) outsl or rorb add xchg jno aas pop inc rolb insl jl rcr (bad) aaa dec (bad) je call mov jne dec out and shr xor mov dec adc fisubr ds mov cmpsl adc pop lret pusha xor mov inc adc and xchg mov add jp (bad) je call (bad) (bad) jne cmp ja jo test mov aaa lea cmp jbe or adc test pop orl std (bad) (bad) icebp je cmp jl cmp je cmp mov dec lock fldcw ret inc inc mov mov inc aas je mov (bad) mov sti xor jmp mov pop outsl in mov pop jne testb hlt sbb (bad) insb jo dec and dec cwtl dec cmp je mov mov idiv adc or pop imul out incb jmp call cmp setne lea call insl xchg mov sub fwait jg dec jne je jbe test jne push pop test jp jge mov sarb inc push stc addl add adc inc aas mov aaa imul aas xchg std jmp call cwtl call jo mov cmp sbb lcall outsb add jmp mov iret cmp dec mov je jg adc cli xor and lea push fistpll adc and fs jg sahf int inc insb nop cmp jle call or add push (bad) call lcall mov dec sar dec add popf sub decl dec idiv test jg movl pop cmpl stos cmc jle mov jne loopne ljmp test and in test popf subl mov dec mov aad mov shr idiv call dec mov dec imul dec sub imul mov int sub call (bad) outsb lods and adc js outsb dec arpl stos cwtl ret std out sub add (bad) (bad) xchg xor xor adc mov push popf std cmp push push sahf xchg loopne add ret inc dec cltd dec idiv mov dec scas mov dec pop add sbb cld inc js (bad) mov stc dec lcall fistp sub out pop test jne clts loop aas xor dec mov jne test je in fdivp push adc cli call adc add push and sub and rclb repnz pop push sbb jl adc and nop rcll stos (bad) add add jmp mov (bad) jmp cmp mov pop cmovo inc arpl mov mov lods cs aas stos gs mov lret cld push ljmp dec arpl dec add pusha ds mov add jmp push cmpsb fimull popf pusha jb addr16 xchg pop (bad) and dec inc out call aas xor adc adc out sub sar add js dec mov inc push ret test js jl out mov inc adc and adc in cmp ljmp mov sar out iret adc lret loopne pusha aad dec mov jne jmp pop (bad) incl fisub dec cmp call dec sub call in xchg in imul incl insl mov dec mov (bad) call insl xor dec mov dec shr dec cmp jbe dec sub dec mov ds adc (bad) ficompl mul or sbb xchg lds inc inc vmread mov call push sbb call push test jne jmp (bad) xor jmp cmp incb imul movsb movsl addr16 mov mov (bad) xchg hlt cmpsl and enter and mov int3 sbb mov sbb and dec imul push inc push into dec adcb loopne dec add arpl (bad) pop xor arpl cmpsb ret dec add call or std or sub dec cmp pop dec cmova push ljmp lret addl cltd mov add fwait mov mov rorb scas test scas (bad) call inc dec cmp je cmpl rolb xchg jo cmp push add xchg lea lcall imul cmp (bad) lar ss jmp pslld imul repz popf sbb sub outsl or cmp add hlt sahf insl mov adc pushl inc add xor aam or iret xor jmp inc or loopne pop decl clc cmpsb xor stc call jno fwait inc ret je xor pop std jmp jg lea call sub (bad) ljmp xchg sub test (bad) call dec sbb and sbb movb cmc sub cmp lock inc (bad) aaa nop mov xor (bad) pop data16 neg mov jmp cmc pop psubd das (bad) lea push popa ret sbb mov add sub sti add sarb psrld call sub dec (bad) ds lock lea jg add or mov es jle (bad) call call mov sub scas (bad) pop mov fdivr xchg mov jecxz dec jle je mov fldl arpl mov mov adc ja inc mov outsl inc add daa shr inc mov movl js mov call orb inc fdivrl dec mov icebp jp sbb in out adc stos pop mov mov dec mov je dec fldcw and lds je loope shll sbb je dec lea mov out mov fimul inc lods test mov call fist dec lea xor dec mov call clc mov sub shr scas mov (bad) xchg icebp rol push inc dec mov cmp fcompl call inc ret adc lahf jmp dec pop pop inc pop daa call mov sbb or js clc or dec cmpl jb or out imul xor ja icebp mov call lods and loope or jne sub cmp fstpt xlat mov inc rolb add xchg or arpl and les insb sub pop ret fwait imul jecxz call push test je jmp (bad) and popf adc cmp addr16 les call jmp push sbb and inc test outsl ds cld push lock jne mov cmp jg mov das jbe jle mov adc push call test test bound loope inc fcoms and lds xor sbb pop mov call dec lea icebp dec sub iret push lea call cmc out adc call xor cmp icebp cwtl lahf fs lret call rcl or and mov dec lea xlat and jne lock cmpl jg pop sbb adc xchg out pop jmp mov shr js call lds stc call mov fucomp decl or inc mov dec add addl inc mov std std dec incl jb pop lahf mov dec lea jmp faddp sbb add mov sbb dec dec mov call je out jle mov xor (bad) xlat cli jmp or movsb cli repz xchg or pusha and add shrb test dec xor and xchg mov push ja (bad) fwait mov xchg outsb dec xchg ret adc and adc pop stc stc stos mov pop inc mov out mov push faddl xchg push clc movl or lds mov pushl stos ljmp inc or sarb ja inc aad (bad) repnz sarb or pop ret cwtl sub inc ret jmp js,pn lret xor cmp xor cmpsl nop movl jo ds (bad) lret call pop xchg cmp mov lock imul dec inc sub rcrl lea stc call xor jne mov cltd and ljmp fs jae fisttp or pop mov loope call and shl inc shr mov dec mov jnp popf ret jne (bad) testb jne mov inc or jg movsb or xlat loop add sbb clc xchg and ret neg lods sub sub lea push lea add roll pop jne dec jne dec (bad) aaa inc icebp mov cmp dec adc out add jmp sti jns dec out loope mov fidiv mov call xor sub mov lods dec data16 xchg add and movl sbb mov daa andl ss mov inc sub pop add sbb jg sbb mov dec lea lret ja xchg jnp dec lea repnz arpl mov inc popf push mov test pop push xchg stos cwtl cli call and mov test jg lock inc addl dec loop arpl jg call scas push lret nop push enter push add or pop (bad) (bad) mov sub add ja pop sub call and outsl mov arpl in jne dec shl mov loope push (bad) call mov ss js call pusha (bad) lock insb cmp inc mov insb test or add jg call inc pop cmpl add shll mov test je mov mov nop pop mov or cmc add xor pop pop mov xor lret scas or xor jo dec add xchg lock nop cltd imul out jmp (bad) sbb xchg rorb rol add sub or loopne or jae dec add (bad) jno or sar adc arpl dec arpl dec rolb push dec cmp lock test js mov adc mov imul ljmp call jnp das jne neg cmp pop add rcrb jnp adc (bad) scas adc es dec mov pushl jg cmp pop dec mov mov into add dec cmpl mov adc sub adc sub add (bad) test mov test dec mov mov cmp mov std call push add dec mov dec mov outsl incb pop ja cmc add sarl lret jl dec negb divl test cmp xchg pushf dec inc sub call cwtl dec aas das dec mov push ss or outsl and jecxz rcll pop dec (bad) mov xor outsl (bad) decl add int3 ja and dec mov jne call decb ret mov jmp iret sub je dec cmp orl pop and (bad) (bad) call push out or ja sbb je dec inc scas ss add add mov sub shr ret call jle add sbb das hlt les pop je rcrb adc dec mov outsl lcall cmp adc add je mov xor orl mov inc xor xor xor mov lcall jg mov add inc lods mov call xor sub std cltd add xlat dec mov push adc in out idivw lea and dec jo cmpsb aas stos jle call movl (bad) mov add mov rorb outsb sti pusha icebp add call xor pop rcr mov loopne mov or push pop ret mov push add add setg pusha loop sbbl jnp dec (bad) aad (bad) ss xchg push into inc dec leave lret mov cmc sub sub mov (bad) jmp xchg imul xor push cmp mov (bad) outsl mov rolb pop dec lds hlt xchg test jg mov ja push bound fnstcw add loopne sub call orl fmull add jb cmp adc push lock jnp out sarl call or jns add xchg mov or cmove fadds inc or call pop adc es pop test dec test sbb not and aaa out mov sti sahf stos aas je cmp mov add data16 orb push hlt push add fstps pop sti adc or jmp cmc fistpll test setne mov push (bad) (bad) inc insl mov cmc mov mov mov push mov mov mov divl addr16 xor adc xor fs mov cmp pslld sub adc cmovne xor icebp sub sbb mov push xor jmp adc test inc pop push cmc inc jne sbb mov ja sbb adcl rcrl clc or jmp fsubr lret sbb loopne icebp xor dec setne xor mov nop das cld std pusha fcomps sub adc sbb jo das jmp adc int3 mov je adc push ret call aaa sbb stos sahf incb and add dec mov inc mov dec mov dec mov loope lcall sub call lock inc mov dec mov xor mov aad test inc mov js adc cltd inc outsb push adc call pop (bad) mov jne or aad iret lock jmp pop aam inc sub leave icebp sub dec mov dec jg in mov cmp insl dec lea and jmp xor mov mov ja stos (bad) call jno aaa jo mov out lea mov jge pop fisttpll pushl xor inc out push call popa (bad) gs adc dec cmpsl (bad) jle jle (bad) jmp mov dec add popa call test sti aaa imul sbb push call iret jo adc cmp cltd jae xor jmp popl mov bnd sbbl jnp es jne mov inc lods jle sbb sbb mov dec lea add addl or add xchg push nop popa jmp adc and pop dec adc enter cmp mov inc add dec shlb mov dec call test dec mov or popl sub add mov mov clc cmpsb gs call dec xor decb inc inc cmp push or (bad) mov fdivrs push ror call xchg cmp inc inc xchg lcall cs cmp inc xorl sbbb call add or sub nop nop push xchg xor loopne in je cmp adc les push inc and push loope lcall out inc inc ja into add es ret pop or iret jae pop das dec sub (bad) xlat add jnp stos xchg nop add into jo inc shrb mov mov mov dec and sub mov jo adcl dec xor xor das (bad) xor xor add cmpl jnp jmp or mov adc dec (bad) and adc or sbb jg les push in dec mov je sub cwtl and je cmp stos stos add jb inc push add call lds orb jp pop dec (bad) mov dec lea sbb outsl scas loope adc addl or xor or gs dec mov ss ja call jne dec lea pop out mov and dec push dec lea outsl or inc or jo push sbb scas lock jle lea dec mov pop fwait movsb call je call js mov sbb push shrl xor call pop sub jne,pn clc mov jmp jo adc hlt clc mov psubd (bad) mov cmp cld test add outsl dec jl orl jno call loopne jnp test je lea jmp dec xchg loope daa incl jne pop dec lea dec cwtl jo pop bnd dec stos (bad) mov imul dec mov sbbl sarb rcl scas dec pop lahf outsb andb je testl arpl jne nop insb data16 scas jne and std jnp (bad) adc push mov pop stc call xlat pop pop daa dec sub loop sar jnp mov sub stos icebp and inc adc loope sar and push adc jmp mov inc mov jmp insb out iret insb sub test pop push add loope test and push or mov push add inc and add aas lock (bad) incl ja andl add jp and jne push add add jge stos aad js jbe jne mov dec mov pop cmp dec sub mov pop jge or sbb call pop rolb repz ret jo pop les (bad) mov outsl testl xchg sub and sbb mov pop add pusha dec dec test inc mov sbb sbb adc adc inc rclb gs scas mov sub adc mov dec imul inc cmp dec scas and (bad) das mov sub (bad) jae loop mov dec das inc xor jmp mov or nop add and inc test lahf imul enter out dec fs roll pop into mov scas mov or jbe dec aaa scas pop sahf outsb or enter ds and inc fiadd cmp ds inc pop scas scas pop ret out add pop lahf add jmp jg iret out xor pusha fbstp (bad) push push adc ret dec xchg push mov loopne or push and call or pop in cmp das and int push sub jae das sti imul dec and adc sub clc sub fwait adc sub pushl mov outsl dec mov movzbl cmp mov je cmp jecxz loopne cmp je jbe dec lea add fdivrs jne dec add dec mov loope fist push or pop adc cmp xchg jmp test jne jecxz (bad) jb or mov or (bad) das cmp je call pushf add push mov cs dec xor call roll call test je inc and (bad) cwtl leave push addb rclb add in ret push and or adc mov bound mov add ret je call ret mov dec lea icebp decl or test push dec lea cmp mov add add sarl inc js (bad) (bad) mov loopne dec shl add dec or inc test js dec add dec mov add adc push sub fwait ljmp and loop lcall push mov mov ljmp ret or mov dec mov pushf test movl push ljmp not popf pusha data16 and xor dec add sub pushfw inc ja in lret iret dec or pushf mov dec mov call sbb mov call mov (bad) sub xchg mov and cmp idiv jmp je jbe cmp je cmp je cmp jne dec mov xor fnstcw jae fadds pop test push adc sbb push test push add adc ja mov push ret nop xor pop call out aaa ljmp mov ja lock jne dec mov dec lea (bad) je divb sub rolb and xor add or mov call (bad) cmp inc mov je and cmp ja dec lea movzbl dec arpl pop add push lahf dec mov dec dec cmp incl mov and cmp dec cmove dec add inc test jns nop shrl mov pcmpgtd dec jg pop dec and dec mov dec lea sbb sti add decl mov jne jo jb push inc mov jg movzbl repz rcrl jmp test js jnp movzwl jmp inc lahf add jge pop adc add ret mov stc jne or aas ja je cs inc sbb shl dec or daa test stos sbb sbb imul fiaddl add incl dec sub shr jecxz inc dec mov push or mov frstor fldenv sub call cmp std or lret jmp (bad) enter and add test dec mov call mov sbb (bad) add stc clc sub jmp cmpsb and dec mov push add mov push mov sub jmp adc in in add test cmpsl sub or ss push jp mov pop pop aaa hlt incl mov mov add je inc psubsb lock sete inc and mov je dec mov cld sbb call inc call addr16 inc test dec arpl js jl or mov call and pop adc mov (bad) pop call jmp xchg push dec inc aaa jge sub je test inc or push xor push jno (bad) in inc and call xchg mov mov rolb add inc pop pop (bad) mov (bad) and or or mov clc adc jg and cmp jae jl je,pn jo jle add js mov (bad) (bad) std out jle mov and and rolb std decl call sbb gs mov inc gs dec (bad) and mov repz (bad) xor call out sbb jmp pop sub mov jl pusha jecxz dec gs push mov js decl and add cmp jbe inc test subps loop inc add inc xor pop inc fwait sub adc addr16 xchg mov jg add mov dec mov dec mov dec loopne lahf cli mov jmp sub loopne xchg and (bad) (bad) dec cmp inc cmc jge mov clc inc sub insl ret mov daa pop jne push dec scas andl popa jmp add mov dec sub jmp lret cmova jns and sbb add sti or xor mov aaa cmc call mov lret sub sbb call push sbb sub aas push add addr16 mov jmp jo dec mov dec add adc test cmp and adc je cmp je jmp fwait cli pop dec ret and pop inc jne incb mov add jbe inc adc fwait and jb xchg sub fcom jecxz mov inc push dec (bad) mov jg dec pop mov lcall pop je dec les inc movzbl shlb dec or test js (bad) ja and je mov mov dec mov sarl push (bad) add xchg cmp daa cmp or (bad) push in adc and sbb std mov jg test data16 je dec test (bad) inc cs repnz dec not dec add inc movsl pop inc cmc adc jb dec test mov lods inc dec dec test je cmp dec lea jmp hlt iret inc push jmp daa faddl push push test je movl daa mov dec pop mov mov mov lock xchg dec mov fsubs scas mov out jne inc fldl push sti add xchg add js xor adc ja ja call decb test outsb ja sbb xor sub test xor in jo in (bad) ja jmp mov stc dec mov cli push adc call xor sub inc sub add shr dec testb sbb (bad) decl inc inc je dec mov add jmp cmp inc and sbb add shr aam add es jg je ja mov lea add dec dec mov jmp call call mov in mov mov out mov lea call fsubl cwtl inc jge shll adc dec lea lahf sti mov test mov rclb je mov dec lea dec les (bad) (bad) cmp ja je dec mov je outsl dec cmp jb pop dec cmp mov adc mov dec and out pop fs jne pop je dec mov jge aam xor leave jmp pop sbb inc clc sbb sti sbb add dec mov pop inc clc dec mov jbe mov mov dec xor and rorb ja fbstp mov jmp xchg dec add test sbb cmp in mov jbe adc addr16 cld aas push cld dec lea call add and scas out sbb call pop sbb call call inc call or mov or rcll sahf dec leave leave mov fadds inc rorl or xchg jo dec and leave je dec mov dec cmp ja jmp out pop push scas popl jbe test inc outsl (bad) jne (bad) adc and out call push loope inc cmc sbb rol dec mov call cmp jbe dec lea dec mov dec mov dec mov dec mov add pop adc mov mov lock dec mov addr16 or jmp sbb sub push hlt nop dec lea es xchg out mov sbb das rcrl xor mov xchg nop nop vprotd pop mov sub pop clc (bad) fimul lea dec add dec nop jmp outsl fisttpll dec and leave je inc loopne jae mov fsubrl sbb sbb add jmp (bad) enter adc add cmp imull and dec lea dec or clc push (bad) (bad) lea dec lea dec mov mov dec sar mov lea dec add dec sub (bad) (bad) (bad) fbstp push dec mov inc mov jne dec mov dec sub dec cmp ja dec sub dec mov cli es fdivrs mov mov pop dec inc add add jmp mov jg daa (bad) and lock lea lret jmp add jbe jns je jae loop (bad) (bad) decl mov add cmp je cmp sete movzbl dec add jmp mov sbb lea movzbl test pop mov dec sub dec add jmp lahf dec cmp je jp ret add jmp je jo mov cmp ret sub aas cmpb jne mov push cli out fimull popa or xchg stos (bad) out ja test jle dec cwtl dec add loope add mov arpl call sbb lea mov sub loopne mov es jne cltd sub jmp jb jg adc call adc arpl mov add shll adc pop push outsl push push dec mov dec ja (bad) (bad) (bad) mov and insb dec mov outsb outsl jne mov jo arpl sub push inc sbb dec mov dec mov cli adc insb and and dec lea enter (bad) (bad) pushl jb and and arpl outsb jne dec mov add insl (bad) (bad) pushl gs popa dec mov outsb and push dec mov and dec mov pushl jae das das dec mov push loopne mov fs pushl jae mov and dec and dec mov dec mov dec mov dec mov xchg sti ljmp dec mov dec mov cmp lock sub add inc sub les mov lock mov lea test fbstp pop dec aam adc mov mov jo mov lds je xchg push cld jg call movb fld1 pop mov and mov fildl jne or add add or and std dec sbb pop or adc mov inc ds mov inc and ss call xor or (bad) call cmp lea inc mov jle add cmp idiv and add push pusha inc call pushf mov push aas jae ret sbb inc call mov ss call call cwtl in lea outsb lret inc mov cmp lock add stc call call dec (bad) add popf mov call mov (bad) jne call lret push add ret call fsub sbb inc sti jnp in sbb push ss movsl fld1 addr16 mov pop psubsb xor lahf call or pop jl pmuludq pushl negl xor sub ror jnp adc sbb add adc orl nop inc cwtl das mov adc call rcr movl or dec cmpb push lds sub adc dec mov scas dec mov lret ja sar mov mov jne dec inc je and adc mov mov mov rclb mov dec shl xor pop adc fwait clc outsl loop adc mov jbe dec cmp std dec rolb decl inc imul add test mov rcrl or leave jmp (bad) out mov mov imul pushf (bad) scas mov inc test mov add inc mov mov dec mov mov mov dec mov sbb pop dec adc or pop dec das mov std and dec or inc or das push into fadds stc jp mov aaa enter and loop dec xor inc sbb inc and loopne fs dec mov push dec jo dec add add dec mov popa cwtl cmp (bad) ret push dec sub (bad) call dec mov dec cmp lret je sbb lock outsb mov sbb cmp dec mov mov je ja dec incl mov sbb add inc inc add iret dec mov dec mov dec faddl lds ja aaa scas dec mov inc movb sub adc adc (bad) cmp cmpsb sub jne dec cmp add cwtl test jne adc mov out and jnp dec mov dec shr dec imul dec mov dec and adc lret lods mov mov call ds add dec out movb jp test jne jnp cmp pop in add ja jae push or iret daa pop (bad) xchg adc rcrl dec mov xchg sbbb ljmp dec dec shrl stos xchg (bad) jmp add dec sub lds loopne out imul cmovb dec test je inc mov jbe in dec lea mov dec cld dec mov dec add in add nop out or int3 inc mov push and loope lea rorb xchg mov inc inc mov pop je cmp lret dec lea dec shr dec add (bad) fbstp fwait dec lea aad cmp dec cmovb dec test je jecxz loop out sbb adc adc scas pushf inc adc dec mov jmp inc iret pop pop mov dec sub dec lea dec shr dec mov lea mov add aam cmp in call fsubrp call adc inc mov push (bad) leave fs mov inc outsb movsb cmp or les lods sti dec mov call or mov mov lret iret dec mov call or or push out call cmpl xor dec mov jmp loop scas push adc call dec add dec sub dec ds mov (bad) loope ret iret xor rorb out mov jmp mov push inc pop jecxz jo jmp rorb push jecxz dec out push jae (bad) xor lea out push dec loopne fcoml add cmp mov dec adc adc pusha add dec cmp push lods mov inc xor (bad) lahf jmp pop int3 inc pop inc cmpsl rcr sub cmpsl pop push cmpsl mov mov icebp call jmp or mov dec add outsb adc aas (bad) dec pusha cmp jmp adc push mov call fsubrl or and orb jmp mov mov push push call int dec call insb adc sbb jbe int shr or add xor push xor pushf xchg sub sbb inc vpunpcklwd cltd adc adc and cmp or push aad fisubr lret call call mov (bad) jb or push sbb sbb xor sbb nop add int3 adc cmp in adc mov pop ret mov mov push push jnp jmp sbb sub cmp pop aad lahf pop sbb cwtl cld mov inc enter fstpt sarb add lahf sub lahf xor inc movzbl js (bad) aaa cld sbb je test cmp je test cmp je loopne push cmc lods mov call dec xchg (bad) (bad) out aaa sub cmp je rorl sbb (bad) ljmp ljmp or add lea dec cmp inc outsl or ja dec mov popl dec fisttpl pop jg icebp ja push and add add cmpsb and xchg clc popa mov adc das jne insb dec cmp ja lock arpl push and cmp add std mov dec lea pop and mov pop fiaddl cld or test ss mov inc test test cs ja pop std cmp jne cs add xor or ds xor mov cmp push inc (bad) out push add dec mov fdivl movb xor jg sbb dec mov movb shr scas push rcl mov dec cmp jb (bad) loopne ljmp cli dec or test or add mov add aam mov sub and ret xchg sbb loop (bad) aas out push mov lds scas iret decb inc adc mov test lods dec lea test arpl jae sbb inc mov lods pop inc sbb fldenv dec lea arpl dec or andb les add add pop pop jne popf sub dec add and and (bad) jae cld and or pop sbb inc shlb fadd add mov ljmp xor xchg add jmp jae jo push rorb sbb jp dec lcall xchg rorb dec sbb cmp ficoml add xchg mov inc movzbl xor cmovno jge loopne fcoml jg cmp ja js jne into loope add test push add outsb or and sbb lea decl push add inc mov (bad) (bad) fsubrl sbb adc inc mov jne dec mov dec add xor pop mov subb xchg pop subl mov outsl push bt jae jne push mov pop outsb mov dec lea push lds and outsb out lds decl je mov mov fsubr orb cmp jb jo popa les test sti enter pushf mov and dec enter inc aad dec dec sbb fdivrp sub cmp mov mov pop mov test xor rorb inc arpl ja movsb sbb pop cmp add jmp jnp dec and movl add inc mov cltd push dec push sbb or add clc jge test xchg pushf mov addr16 (bad) cmpsl jmp mov ja and add push and cmp test sbb jb push mov arpl clc pop adc jne arpl xchg sti mov mov call ret add insb dec mov (bad) mov pop dec xor jne dec or jmp into das mov adc xchg add (bad) pop shrd mov inc inc push lods pop pop pop add dec lods ret mov clc ss sub lods sub fimul (bad) jne test push sub inc shll xor (bad) add aas addb or dec mov pop pop out jo das push mov arpl stc (bad) jnp loopne lss mov xor xor sub jmp fadds (bad) insb jne stos mov add (bad) outsb dec or das xchg adc cmp (bad) dec lea xchg repz and aaa jl sti shlb test cmp pop mov push and incl lea dec cmp ja push cmp test clc (bad) decl dec inc sub and jmp sar or inc cmp jne xchg (bad) movsb pop testb test or std out mov sub jmp test and aad adc adc aad jbe pop das cmp add jne dec cmp jb xchg (bad) leave dec inc inc add sub adc out leave test pop mov out jg pusha jge ja in jae ret jo jne outsl xlat lds add divl aam push stos cmp push pop push xor shll in mov inc sbb dec mov jne hlt popf dec cmp hlt rcll mov hlt push das jne dec test jl test sub dec les mov jne adc or jmp cli inc jnp in xor mov imul jae scas add mov cmc inc lret sbb lcall pop jge pop dec ret sub add mov sbb jne adcl pop push (bad) jne xor ljmp or cmp push std pop mov jmp ds pusha jae test andl test jp insl inc (bad) daa jae imul dec imul xlat inc jbe pushf xlat leave xchg test pop outsl jb inc inc sahf dec rorl (bad) dec loope push inc dec pop dec (bad) pusha xchg push xor xlat or xchg inc out or push aas or push fisttp jmp test jmp loop das mov inc mov cmpsb push lods fwait call mov dec lea into mov push arpl jmp add fisttpl pop jmp bound pop sub fs ret adc dec mov and and pop out or movsb push sub or mov in stos xchg imul pop scas imul aam xor icebp repnz (bad) mov add js xor loopne (bad) dec out adc mov lret cmpsl in and dec fisub jmp dec popa mov gs xchg popa mov sub push popa cmpsb xor adc xchg int3 gs mov inc xor push pop push jo test dec lea pop push dec mov shlb jae std fnsave int3 les stos jmp push dec imul std or (bad) dec pop cmpsl jo and dec and cmpsl sub out rorb dec pushf cmpsb and ljmp lcall (bad) out and or pushf jmp dec popa in lock dec in int3 xor mov xor subl adc and pop and cltd and iret jg ret jb and jle jmp mov push inc dec lea cltd jmp dec mov les mov ja fcoml dec mov je enter lea dec mov dec loope shrb (bad) pop push jl pop icebp jne decl xor inc xor dec xor aam std aas enter add in dec add pusha imul (bad) je or push push adc sub aad ljmp outsb out mov jmp jae add mov jmp fcoms push xor jmp inc adc mov call orb cld jne pusha push cmpsb pop adc inc push popf add das sbb pushf test mov adc mov loopne (bad) call mov dec mov inc test je dec cmp outsb test pop dec std or pop inc loop xor mov jae dec push dec pusha cltd fadd pop jne mov int3 rcrl mov pop sub push add adc push and push aas pop outsl push mov clc lds es and add stc icebp jae mov sbbl adc adc add pushl rorb sub dec add movl popf add cmp jne popa clc cmp insb sbb dec xchg add add bound mov inc (bad) dec roll jg lret je fsubrs sub or or cltd je fadds fistpl or mov cmpsb orl outsb dec lea dec insb sbb sbb mov js cmp pusha (bad) xchg inc mov xor mov or xor xorb inc dec shrb and mov mov xchg stc cmpb lahf stos fist out dec cmp jb pop push fucomp test sahf mov add mov popf (bad) mov addb clc inc divb jne mov add leave jno movsb sub test mov clc xchg decl or mov inc mov rorb test hlt (bad) jp dec (bad) push cmp dec rcrl inc ljmp ret push cmp ret (bad) sub mov loop (bad) xor movb adc das stos test inc cmp sar jae loopne lahf jb test or aas and cmp sbb cmp jne push mov incl xor inc cmp jne lret mov mov push hlt sbb jmp fidivrl testl test fistpll dec cmp jb pop dec lods les call mov dec push arpl imul hlt dec sbb cmp imul test adc cmp adc aad rcl in pop sbb jne xor lea xchg in dec mov dec shl dec sub ficom out pop cmp test add inc clc mov mov rolb lock cmp or cld sub jbe xor enter pop and inc inc inc or cmp sahf sub cwtl xor aas push rorb xchg call or xchg sbb lret pop add jmp add dec sub dec lea mov dec cmp dec cmovb das xor or ds mov call icebp inc lahf cltd mov cmpsb aaa push inc xor fsubrl fnsave inc or movb repz faddl fwait aas mov (bad) xlat pop cmpsl adcl push xchg lods xor orl or into call dec fwait mov and sub fsubrp cmpsl call jmp or or dec dec je or (bad) dec lea js xor rcrl popa dec add xor and call mov imul or cmp and pushf cmp inc pop lea sbb test imul imul and je cmp dec mov jmp out ja xchg sub cs and pop test xchg jmp mov push jge (bad) cmp std mov jmp mov jmp mov cmp subl rolb or notl call cmp lods and push int jmp pop out push push insb and sbb addr16 jmp and jge pop cmp jne ja jecxz fs and lcall in dec shl dec sub inc test dec mov fnsave push or stos int mov mov andl clc inc mov add jmp inc loop dec movsb imul mov xchg loope loop andl dec testl dec lea sbb dec sbb or cs jge or inc sub jno adc dec pop adc add addl pop bound xchg jmp js pop dec add sub loope pop xor loop flds jo and mov js add sub les cli call jg mov adcl shl inc mov dec sub (bad) (bad) (bad) jmp cmp sbb push mov dec lea sub bound aad xchg add rorb add lds or out push push cmp (bad) cmpsb mov pop popa push sbb pop in pop or dec xor mov jp sbb xorl test inc cmp or xchg push mov pushf je dec pop jmp or inc xchg inc leave dec (bad) roll movsl in (bad) jb,pt mov jne mov and or xchg test dec mov pop sub call dec ret std and cli dec mov dec mov gs cltd mov and dec push stos pop sar aas (bad) idiv decl in aaa dec mov dec mov mov (bad) pushl dec mov fisttp jbe dec cmp dec mov dec cmovae dec addl mov mov hlt dec inc dec pop daa xor cmp jge aas dec and dec ret mov dec or (bad) clc call sbb adc sub xor mov dec mov nop mov push dec mov push aam xlat pusha arpl out test jle or stos pop pop aaa add xor mov fadds fcoms jmp mov out push mov test je dec or jmp xor jbe pop aad adc fisubrl jo call clc call rcr pop call adc lcall push dec mov dec add dec lea nop push aas xchg mov adc bound push xchg sub mov jmp or test push push sahf andl mov orb fs jo imul scas sbb mov cwtl jle cmp jl jne xlat dec into or inc xor jmp push cmp jmp jmp push or push ret fldenv or andb dec or sbb orl test ror pop adc enter jle add pop inc and fsubrl leave jmp sub ret inc lock lret inc cwtl (bad) push scas or (bad) or ret cwtl ret adc dec pop mov push inc mov and dec lea test push add ja,pn adc jo and mov mov in and in cli inc ret inc mov popf jl (bad) (bad) mov fs jmp push bound mov popa push and ret movlps lea dec push push fs push or mov adc push sarb mov mov js or jmp add inc push cwtl sbb ret sahf adc add fwait or push pop pusha test mov out movsb nop jo dec cmp ja scas jbe lods test or pop add dec andl xlat xchg fiadd jmp xor aas sub cltd arpl jmp xchg or xor js jp cmp idivl jo and xchg cs lods push lods andl fsubl cmp icebp xchg int3 jp dec mov jmp or sbb cmp sbb aaa arpl movsl movsb inc movsl jmp outsb xor fadd call movb pop mov inc in (bad) roll rcrb sbb rcll mov nop dec lea and push jmp fimul test fcoms nop add or lods dec pusha push inc (bad) xor inc add fistp dec mov dec mov movzbl cmp je sti xchg dec cmp je je outsb jnp sub std or cmpsl stc movaps sub add les pop dec jmp sub cli and test sbb inc std incl dec mov dec mov dec lea addr16 scas add xchg cmp adc hlt out (bad) out xchg inc movzbl dec mov inc cmp jbe mov inc and jo test mov add mov add cld sub test add js fnsave out push add mov out mov or test scas jp mov or sub inc push and mov stos xchg dec bt jae lock lea push add jecxz jmp test stos (bad) (bad) fnsave sub jae dec mov dec sub dec not and je cmp mov cmp jae dec cmp je (bad) sbb add inc mov fnsave inc leave jae adc xchg les test test adc ret mov fadds iret lods adc cs mov mov mov dec xchg push incb adc jae ret mov ja dec lea or into icebp jb test sbb adc jl pop add into adc dec mov gs incl add push cmp inc mov dec inc add add icebp imul inc loope or and dec dec inc or std ds jnp xchg jle jne test lea fsubr orl (bad) adc out cwtl popf sub mov dec lea dec cmp (bad) sbb out ja rcrb test or test jbe push aad xchg les flds jo ficompl mov mov aaa mov jae mov jg dec and dec cmp je cmp xchg and or clc fwait sub jmp loope js iret adc xchg lds jae (bad) stc mov add ja mov fidivr mov inc sub adcb arpl cmp sub mov sbb mov and xchg push stos mov dec lea cmp jne xlat sbb ret or fsub fmull sbb adc sbb outsl cli pop push or ffree jne movdqa add imul and jge mov adc sub pop aad sarl jl pcmpeqb sar por pop lret sub out pop movl xor je movzwl adc bsf inc cmove inc fsubl dec cwtl dec popa jmp lods pop das mov add aam dec leave ja adc mov and xor (bad) movzbl inc cmp inc hlt aad fbld std adc and pop sbb cmp test adc mov dec mov or or bt xchg leave jae add xlat xchg mov add (bad) jae dec mov dec push add not inc and and push js ja mov out jle jae dec cmp add mov (bad) jae andb xchg xchg test (bad) std lret sbb and and xlat sub (bad) iret push outsl mov xchg or nop add imul xchg lret addl and adc jae test lret (bad) mov loope stos add pop repz and xchg icebp cmp test xchg or dec inc sar xor mov jmp adc sbb push cmp add lea adc cmp push out subl scas fsub bt jae aam sub dec not movsb pop xchg loope and sub push xchg ret or cld xchg mov loop xor cld add ret in add shufps insl data16 shrl inc arpl fs lahf lcall xor push out out xchg sbb sub mov xchg inc aaa sbb stos imul xor rolb or mov aaa or or lret push out cli cmp cmp sbb repz lods add movsb aas dec mov test inc movq hlt mov jmp inc movq outsb mov or je je sbb sub adc insl mov fldpi daa incl jbe loope fldenv xor pop into jge les ret adc or cld pop add les enter bsf cmove sub adc adc push cld sbb movl dec mov jmp add movq mov outsl lock mov into je mov fistp inc por sbb ja outsb int jmp add lods xor je inc movzwl mov les xchg and adc cmp jecxz mov in sub cld je insl adc xchg sub xor lds fsub (bad) aaa call jae and jo outsl mov mov jae jae push dec and push and shlb cmp enter pop int3 bound push pushf mov int mov iret push push int3 inc push mov push jb dec shlb mov insb icebp sub jae into or push dec jne out or sbb jae add out ret xchg adc (bad) xchg dec mov pop rolb adc add inc add pop jb fwait adc ds inc cmpsb mov push xor mov adc rorb fimull test or lea int cmp sbb xchg sti add push scas ds es push dec adc inc xchg cmp outsl add fmull cmp shr xor test test movsl dec jbe ljmp add imulb add sbb push dec fwait (bad) fist dec bt jae mov loop rorb test adc add (bad) ja mov ja sub jae dec mov dec sub dec pop pop push cmpb pop pop mov bt jae dec orl add sub clc call test and inc les xor (bad) adc xchg ret push pop addr16 adc xor (bad) add pusha dec lea dec mov ljmp ljmp ljmp notl lea stc sub rolb jo cmp lds xlat inc stos aam inc adc and dec cmp xchg or je sbb scas shll sub jae dec sub in fwait or aaa ret xor ja rcrb cmpsl sbb inc aam push into jne jmp jno cld jmp inc mov mov or lahf cmp test fs mov or jnp dec mov jae cmp pmaxsw add das leave je inc ret decl dec mov dec sub dec not inc and (bad) pop std pop jecxz lea movzbl xchg vmovups cmp sbb sbb cmp pop mul mov rcrl cmp sbb vrcpps lret adc xchg sub jp (bad) nopl shll push pop jl add mov roll aam mov or cmp std sbb sub dec add inc js das jne inc mov add sub or push (bad) mov xor pop and inc fcom rcrl dec xor mov imul sbb sbb push jne mov inc push jbe das je xor jg mov aad call ror js rcr sbb adc dec mov dec psubsw push lsl dec lea inc cmp scas ror mov mov sub add dec sub adc fisub xchg test adc dec mov xchg fadds mov int3 or test jo mov (bad) cmpsb ret roll inc xchg add dec push lea shlb test cmpb dec (bad) mov push push rol test rorb add and push test push sub sarb sub sbbl lds (bad) fnop sti sub test mov js mov xchg jp pusha add or cmp adc pop cmp jmp lcall cmp jmp pop push jle pop icebp (bad) dec jae or inc add fimull test bnd sti (bad) or int3 jae ror insl ja jle jae adc pushf cmp dec mov sbb or roll inc rcpps leave sbb xchg adc test test xor sub popf jae mov inc popa and lret mov jo or push ja xor (bad) xor dec fldl je js mov mov adc or jmp aaa je je test addr16 sahf pop and je mov out jbe jmp adc lds sahf scas outsb dec enter xchg jae in ja lcall rorl (bad) into fcoml or sbb inc or xlat mulb into adc push xor cmpsb pop push jmp xchg aaa sbb frstor or call add mov inc push dec cmp loop popa (bad) test jae adc cld pop mov jle mov inc and rclb es pushf xor xor mov out mov inc mov mov iret and outsl pop cs outsb push cmp push or jae jae or jg adc add out jmp xlat adc ret jle fwait xor out sti dec push fwait mov pusha out mov xlat cmp cwtl sti sbbl inc adc jnp pop int3 cwtl cmp xchg pusha sbb jnp int3 jne adc sbb push adc dec add xchg shr and stos add aas arpl add mov xor sbb jmp in das (bad) pop inc into cld jl sarl pusha data16 sbb lea pop popf mov fdiv das pop xor jne lock sub jae dec mov jmp mov cmp and xor je mov sbb cmp mov nop stos ret aad nop mov adc das or add mov xor or popa popf jo popa pop inc or pop add xchg testl jne test or je add add or test stos orl stc loopne mov sub aam push xorl ja sub jae stc shlb stc mov cmpl fdivl cmpsb enter add sti aad ja and jae jo jp mov sub mov cmpb loopne sti incl xor fisttpl test (bad) jmp sub test dec test loopne sbb mov cmc pop aam jge cs xchg lahf leave ret mov movzbl and pusha pushf imul bnd jge dec add pop or cmp jae jb (bad) movsb pop mov push or je sbb dec int3 jae pop or or xchg repnz inc js dec lea or repz inc out dec xchg xor adc jmp mov je fmull sti insl jne xor out xor xor and ret shlb jge adc divb stos jae rcrl inc je pusha repz arpl aam xchg mov xorb and (bad) les out clc mov cmp or aam adc sbb mov adc out and scas ss nopl push mov dec leave jne jne xor mov hlt adc xchg dec adc out cltd cli outsl loop jb jecxz cmp js push addl jmp or imul add adc mov lock enter enter cmp cwtl sub adc push loopne sbb inc adc call es sbb jnp je dec inc lock inc jne push inc cs lock addr16 in dec jnp mov rolb ja and mov inc loop or xchg std in daa or les pusha dec jl adc mov push xchg jl dec stos xchg mov jge idivl movntq jae and mov jo je into shrl and push mov cmp shll shl ja (bad) push jo je jae push cmp inc or dec arpl mov xor je xor dec sub add iret mov (bad) pcmpeqb fild adc and jecxz sub por lcall iret mov ret dec add and divl xlat loopne gs jno je lods pushf jae xor fbld (bad) (bad) xor xchg add inc sar cmp into xchg xor jae xor fnstsw sbb jmp jmp or and push cmp ffree hlt pop mov rol and add scas fildl movsl je adc ffree add pusha repz shl icebp pushl inc and or ret inc in cld mov dec add jmp mov xchg movsb inc jae movq adc aas mov je dec je adc mov sbb nop adc lret jmp xchg enter jnp addr16 xlat jl outsl je je stos cmp out pop jnp push pcmpeqb mov icebp adc lock push add jmp xor add sub sub mov inc hlt (bad) incl in mov dec sub dec lea dec cmp dec cmovb dec (bad) out and daa nop dec mov call sti fbstp add dec mov dec add push pop jmp (bad) fcos (bad) mov (bad) out std dec sub dec lea dec shr dec add dec mov pop dec cmp out stc out cmovb dec addr16 dec dec clc mov enter jmp inc adc mov push push rcr out dec mov rcll lock mov call adc inc out rcrb pop xchg push xchg icebp pop mov arpl cmp sbb xchg fisttp nop sub pop inc movq mov notl or adc (bad) out jmp pop jmp pmovmskb xor je inc movzwl dec rorl lods xor mov (bad) out nop movq outsl fnstcw pusha ja fucomp pop (bad) pop je ret icebp cmp movq call lds out addr16 ret out xor rcrb repnz orl adc out (bad) (bad) call jmp jae call and into push pop sub call cmpsb je sbb mov mov in mov and lock dec orl or int lods adc sbb mov inc xchg ffreep call cmpsb shr push test mov (bad) lcall xlat fld1 jl inc cmp outsl jle fstp and or outsl sbb lds movq sahf jnp jb inc jmp jecxz into xor mov sbbb xlat mov mov mov lea cli mov lock dec (bad) cmp cmpsl test push add dec mov jmp add dec mov test adc jmp xchg mov jmp pusha daa sub cmp jmp push aaa loope inc loope int3 push cmp call loop arpl dec pop dec jmp xchg (bad) int3 insl (bad) cmp add mov push faddl jno dec mov cmp jle add leave jge test mov add mov mov dec and dec or dec hlt mov xlat mov shr inc (bad) (bad) jmp outsl loopne and fistp in adcl out adc mov adc bt and std les dec lea jge (bad) sbb popa jae,pt loope nop loop mov cmp sbb and dec jb cmpsb clc fdivl dec cmpl orl push pop dec int3 jae popf pusha lret or xchg aaa push jg or cmp add dec mov (bad) mov jnp inc cli dec mov push ficoml lds jne or scas xor sub sar sbb daa mov push lods cmp dec cmc mov cmp incl iret (bad) ss es sbb xor (bad) adc ret je out fistp loope pop (bad) mov decl test ja xchg or je add je roll sahf imul push inc jo dec or imul rsm aaa adc int3 push adc add add xchg cmp sbb cmp cmc fdivl jne jae clc add push push into mov xor frstor pop cmp insb lret cmp and or rorl dec test push int inc xor cmp jmp add xor out cmpsb or pop and sbb jae xor pop insb inc inc add add dec scas jecxz divl daa pop add dec dec daa ds int fdivl adc push push cmp int3 outsb pop in outsb lea sbb cwtl ja sub jae enter mov scas sbb push add cmpsl pop clc pop test insl es test repnz out and pop scas inc xor insl push nop push push test mov roll (bad) jno outsl rorl mov adc inc jo pop jae adc jle jae sbb xor cmp xor dec dec pop rcl mov add xchg jmp and add in pop out mov fwait test pop jo cmp adc and and mov inc and sbb movzwl bsf outsb int3 (bad) mulb inc stos outsl (bad) je sbb adc cmp jmp mov dec call mov enter adc or inc daa sbb push cmc mov add icebp scas ljmp push cli mov std das jne add or test out (bad) push call decl jne dec mov jmp mov cld das xlat pop das push fs adc pop (bad) das scas or decb aad gs int3 icebp or int3 mov jnp mov pop rclb xchg mov mov sbb dec inc ret pushf sub (bad) fiadd out pop sarl add jns or add andl rcrl add hlt mov add xchg mov je leave inc sub or sahf xchg xor xchg dec cmp addr16 fldl2t int3 mov aas and stc add push inc cmp sar jae and jmp add andl sbb mov inc adc jbe leave and pop into mov jle jmp cvtps2pi sub fwait adc fucom ret mov adcb out dec pop cmp mov jmp lahf cmp xchg cmp push sbb ret push pop mov hlt xchg mov int3 xor cld pop outsl mov scas fwait cmp xchg inc (bad) mov mov mov cwtl lds pop mov out popf dec mov out movsb xchg stos jecxz add inc cmp in ja aam jmp cmp fsubrp rolb insb or daa adc sbb xor fcoms je,pn outsl pop push adc ss jmp mov push sub push jmp mov into adc movsb xchg mov dec push cwtl mov sub jne adc and jo nop fiadd bound ret xchg mov jmp test ret jl,pt mov jmp lea inc cmp (bad) add xor fdivs loop or dec mov pop dec sub das jne notl lahf sbb test out rcrl push jg cmp inc adc dec mov movl lret pop mov jle dec mov sbb test clc jmp mov jne xchg ret mov mov add idivl mov pusha inc dec lock xchg jmp inc pop mulb dec mov jle mov and push adc pop (bad) mov loope movl sub add mov dec scas lds ljmp dec mov dec mov inc movsbl dec mov out adc sarb sub fimul cmp jb push test fisttp sub inc (bad) jae add dec mov fild add (bad) push inc movaps or mov (bad) and test fcmovb ss imul jne inc mov iret inc inc cmp add test mov popa (bad) mov add in xor in xor add jmp ja fbstp std lret int3 int3 or pushl lea add inc inc pop imul (bad) out movsbl rolb rolb les lea faddl pushl push inc jbe inc movsbl jbe cmp inc inc decl stc mov inc lea fistpll add dec mov jmp xchg dec lea fwait sub inc jnp in cli inc fwait test std movsbl inc lea popf dec arpl dec add xchg inc lock mov dec cmp ja lea dec lea ja jg inc ljmp mov jne aam mov or cli (bad) call add pop push hlt and jp adc bound xchg addr16 call test sbb jbe push ret js adc call roll lea add addb mov jg lret pxor inc xor inc xor xor fldcw jne lret xchg add pop and mov je mov push hlt dec xchg add add dec mov jmp sbb jg inc mov jne inc mov mov dec repnz adc cmp fmul jo push test sbb add cltd sbb ss xor lea push mov lea fild inc cmp repnz cmp aaa sbb je mov rorb and cltd sbb jbe jmp sbb mov fdivrs sbb lea sub dec arpl mov daa arpl jmp outsb mov push xchg mov add adc daa inc mov jne cmp mov daa adc xchg inc push icebp mov xlat jno sbb movsbl lock ss and cmp lea call pop push aas cltd or divl mov fwait mov (bad) lret xchg incl (bad) call fist jmp dec mov lcall add ja jle incl cmp ja dec lea dec add sbb xchg ss xlat adc out sub pushl jl add notb mov incl inc sbb cmp jbe cmc decl push dec cvtpi2ps js and insl out lcall montmul cmpsb add inc loop (bad) fisttpll ja inc cmp sbb (bad) pop (bad) push dec cmp repnz mulps jae xor adc jmp cvtsi2sd addsd comisd jbe jnp (bad) sahf pop jbe inc inc js or lods in aas mov je testb jne adc cmc addps in mov clc adc jbe jg call or sub test jmp sarb lret xlat cs or mov adc push sarb mov jne ret inc mov call xchg xor cltd pusha adc dec aas lret mov nop and inc insl mov sub pcmpgtw push sub mov or sarb lahf xor inc ja subb pop ja addr16 and test jecxz inc rcrl ret mov icebp aas sbb in sub test insl mov jnp xchg inc adc es andb cmp add sbb (bad) mov mov icebp lea leave les loope dec fdiv aaa mov jbe inc or les pop mov push push aad adc mov bound fidivl cmp es mov jb dec and notl cs rorb cmc pop push lock jg cmp cmp inc inc inc add cmp mov mov test js (bad) pusha xchg add dec arpl es jg (bad) adc mulsd fdivl xorps dec lea xlat scas adcb xchg out test dec mov addl call or inc push cld mov and mov push mov outsl mov mov roll (bad) mov mov (bad) pop movsbl inc lea (bad) mov stos inc faddl loope iret fnsave decb add lods enter call push sub adc inc sub aad outsb rcrb arpl add mov les dec insb jg xor in movzbl (bad) jle lea push je dec daa cwtl dec push mov outsl add mov loopne mov jne cmp loop inc adc shrl mov pop pop sbb xchg icebp nop faddl jmp fdivp xchg outsl into adc jne and (bad) or ja adc pop dec jae (bad) lock sbb nop dec mov arpl fmuls vcmpsd inc mov sub inc shlb dec jmp jae (bad) dec icebp jle iret dec add testw outsb call or (bad) popa mov ffree call test mov nopl cmp jl or xor mov (bad) out clc dec lea movapd divsd jmp or dec clc enter jge shr and dec or repnz cvtpi2ps test lret fnsave sub or adc add and les aas pusha je in inc test rcl xchg call inc mov and inc shrb xor test addr16 int ret in xor lcall (bad) or test lahf dec add fs sbb (bad) pusha or mov call sbb xchg lret jne jae jo lret add adc lds mov xchg mov popf add sbb sbb pop (bad) sbb xchg xor test jl xchg add jne inc add imul xchg (bad) jmp inc aas and leave pop shlb xor pop and fistpll add cmp je dec dec subl dec mov aaa adc imul loope lret repz jg ret popf add jae or adc or rcl xchg jl arpl push jae cmp test out aad pop rolb sub int jb cs lock inc comiss stos cmp ja cmp (bad) jne mov ds dec call shl test sbb add dec imul js sub lods jmp mov add (bad) movswl fldl or inc movsd enter jmp mov jne arpl mov sti jne add mov mov pusha fadd xchg aad int3 add ficompl mov arpl inc test mov cmp mov xor dec lea lcall dec cmp jb dec mov loopne addl lock push fisttpll inc cmpsb add dec arpl out (bad) call sar and dec mov lea mov jmp lds jbe push jmp fdivrl mov jnp insl loopne inc adc adc adc es loope cmp jnp mov mov xor cmp clc popf jp arpl or (bad) mov in sub leave aas div jmp cmc add add xchg in mov and dec mov lea mov lahf jg xchg jmp fimul add xchg mov decb fdivp fsubr xor out sbb incb test icebp mov dec mov dec lea (bad) aaa fisttpl mov pop (bad) jno test dec cmp ja push movsb mov testl pop dec mov jns test cmpb mov jnp dec (bad) outsl jle jmp dec out loope ds or mov divl mov push mov jnp (bad) dec test aaa push fcomip jne inc int mov dec mull pop jae repz jmp test icebp push add ds jae sahf adc sub xchg insb sbb inc loop sub dec lea mov sbb and dec or push std cmp dec cmovb stc inc cmp mov cmp or push mov xor mov decl idiv ljmp scas dec test je mov fstps mov pop add fisubrl stc mov sub inc push inc mov pop jmp jmp movb mov (bad) incl (bad) fldl pop idivl jne add in mov shr inc mov dec mov jmp std jl push loope jmp push mov add mov jge add cmp dec cmpsb shrl dec idiv mov dec add dec lea dec cmp dec cmovb dec test je or mov call xor xor lds push sbb jmp push push jae dec sub dec lea aas ret out dec add dec mov jno and dec cmp dec cmovae push cld sbb adc push int3 and es lea dec push mov and mov dec lea rorl dec sub dec lea dec cmp add and out into cmp add push test fs push push div pushl (bad) dec add dec mov dec sub dec lea mov idivl dec cmovae sub (bad) clc test insl mov sbb insl cmp adc call call lcall mov subl or adc addl test adcb and cmp and sbb js es lea mov pop aas adc outsb inc (bad) fnop je push cmpsl setno (bad) pop mov sbb arpl lcall pop setge addr16 into push jnp mov mov fldcw push into dec pop enter push cmp addr16 adc mov xchg rol sbb lret dec adc out fiadd push dec mov xor jmp ljmp xor add dec cld lcall mov dec mov dec mov dec mov dec mov (bad) decl dec mov pop xchg cwtl inc fistp sbb cli (bad) out pop xor test pop iret cmp ja cli (bad) mov out xor (bad) dec lea inc lea je dec (bad) ja mov fdivr ja lea dec add add je rcrb rcl jnp jbe,pn aad fdiv or stc jne,pn std jg lea movzbl sub cmp dec inc cwtl test (bad) incl icebp inc test dec mov mov jmp dec mov inc lea sub dec int test ja dec int out push or arpl or or cmpsl sbb dec xchg cmp ret mov fcmovb mov insl adc sbb jmp hlt jmp xor and in xor sbb xor loope (bad) neg incl ret add dec add in or ret inc mov jecxz in cmp jne jo fucomi jne push rcr sub jle (bad) movaps mov mov sub test jnp pop add jnp sarb xlat adc aam add mov cmp inc js inc adc jmp lea jnp lea inc cmp jge stos decl or movl fmuls cmp inc out or mov jmp std cltd ja cltd cltd sbb inc repnz subl xor inc lea push cmp aam xchg out jbe cmp mov lods mov mov ja rcrl mov dec lea and or rcrl js add jmp faddl incl jp ss inc inc lea cmp mov leave js xor or movups cmpsb lock into add cli xor cmpsl mov mov ljmp dec cmp repz add (bad) movsd dec mov mov enter lds call sahf sbb adc dec cltd aaa (bad) lahf cli cmp rorb and dec or (bad) sbb jmp outsb out sbb (bad) jl pop xchg test incl adc cmp sub dec lock xor icebp sbb inc std sbb add sti mov (bad) jg dec shr inc and dec or pop shll push push (bad) mov loop inc hlt outsl xor dec sub dec mov or clc out call add loop mov jmp sbb incl mov pop ror add mov lahf add jns lahf add inc rorb mov sbb xchg shrl mov inc lea in lds mov dec mov mov jg sub dec mov jmp jb pop repnz mov add xor in pusha in pop cmp negb mov nop mov inc xor cmp jg jmp popa jg xor lcall xchg dec inc jae fwait sub sysenter test sbb movsl (bad) or test adc in mov xchg movl and cmpl or shll cltd sti mov mov push or or push fstp enter inc ret jb and xor jmp daa in (bad) jne push pop push out out pop add jmp adc les pusha dec mov adc inc adc test add inc push lods enter jmp cmp ja rorb test dec neg xlat sahf push ret out clc dec mov jns inc mov aas inc cmovge mov jmp push stos ds add jmp (bad) repz sti mov xchg lea dec lea lea daa (bad) fucomp mov or fildl cli stc or dec add jp push lea ret mov andl arpl (bad) aas dec arpl sar and dec mov lea add push push jmp add sahf fwait int3 jle sbb fild pop inc jge mov inc mov cmc inc mov dec and mov rcll push inc mov inc ja mov cs push jmp sbb out xchg je lahf inc mov mov (bad) out js out add jmp incl call sbb dec arpl repnz divps jmp loope lds (bad) outsl mov lea out dec add dec fist dec dec lea dec int ljmp (bad) dec test je call push inc ja dec lea inc movsb lock mov mov sub or dec test je inc in mov or dec push jmp sbb stos ja mov inc mov inc mov aad lcall stc (bad) call fisttpll adc (bad) notl pop or mov call jb sbbb adc xorl divl dec sub mov mov jmp psrlw mov incb rcll (bad) and sbb xlat inc incl data16 dec add dec sub dec sbb dec mov dec inc movsb loope cmp inc neg dec jmp pop inc ljmp add cmp loopne inc icebp push inc dec adc pop xchg add enter andl pusha mov jae and (bad) lret sarl lret out rorl cmp dec adc and pop sub add shll cltd sub pusha xchg fnsave lock dec add push cmp and dec je fwait cmpps lret adc dec dec mov (bad) sti dec xor stc push push xor test push adc add call mov mov or xchg call push (bad) push inc xor cmpsb bnd dec mov jmp (bad) nopl mov jmp (bad) adc and dec cmp (bad) jae cmp dec loope cmp inc sub cmp or sub out inc cmp sub movsl in sbbb adc popa adcl (bad) mov push int3 sub jmp lsl pop cmp jb dec cmp dec sbb mov mov jb and push fistpll clc incl pushl add das nopl nop dec mov dec mov dec mov popf stos fwait add xor stos mov movb mov dec mov movzbl adc fstpl add adc fnstsw inc movsbl cmp jbe push clc cmp ja add mov sub add dec cmpb call rolb jg dec lea dec sbb xorl add add lods popa jae jo out sbb inc cmpsl push (bad) aaa xchg mov or icebp sbb fwait dec mov mov orl popf adc mov lea xchg or and mov sbb std das jecxz xchg gs inc sbb xchg dec mov call jnp mov push jnp dec mov xchg adc insl movb jmp iret mov lea adc inc loopne cmpsb cli movzbl xchg push xchg orb mov dec add add (bad) imull dec mov inc gs mov incl sub mov inc aad decl pop add lret ja pop loop (bad) (bad) jg inc lea mov test jne dec mov dec sub dec mov dec mov dec mov icebp xor outsl adc dec arpl pop test dec mov je inc cmp rorl ja aad mov rcr inc sub mov inc (bad) fild mov dec adc call inc movb inc mov sbbl pushl or jae cli jne movl popa mov jmp nop into jb jmp rcl mov repz sbb add fsubs pushf (bad) add dec jo ret call mov dec add dec mov aas movsb (bad) add inc xchg jge adc jle jmp xlat push jbe,pn (bad) dec dec mov dec xchg push jmp rcll out mov add out and push je and outsl adc mov loopne ja cmp dec mov fdivl sbb xor in adc jne mov pop and out mov or jae mov mov dec push dec sbb mov cltd add stc xchg dec xor sti shlb jmp mov mov in inc mov fistpll je dec mov dec add dec cmpl inc je dec dec lea aas add adc cmp inc icebp fild dec cmovae dec cmpl decl test xor inc xor push mov add leave and or out outsb stos (bad) jmp unpcklps or sbb xor ljmp mov add sub lahf aad add dec mov jmp dec jge add test dec mov add inc dec mov pop stos sub cmp add dec push cltd clc cmpsb loope adc aam test or xor (bad) jl push (bad) add dec mov jnp ja sub dec adc adc add inc cmp sqrtps (bad) sub (bad) jb add es jmp adc lahf hlt es aad pop dec lea cld add add fldcw arpl jl into icebp jge mov stos ljmp mov in xchg add cltd mov fs call call faddl ret inc and dec cmp jecxz dec dec add dec jo add scas inc and call xchg ds mov call jmp mov shr xor ljmp pop and dec and inc mov inc lea sar push ja (bad) mov or sbb je or out inc lea inc add (bad) out dec inc mov inc cmp jbe popa mov jbe sar inc lea inc cmp ja data16 and push int3 pushf jae push dec inc inc or adc inc cwtl sbb es inc lea jne inc out imul inc enter cltd mov pop inc adc sub fwait jmp or sahf xorb jne mov push mov and les sub cli jnp das cli out jbe jg xchg inc sbb mov shr cmp cmpsb xor xchg or dec cmp ja jne sbb xor or dec incl (bad) decl inc and xchg pop add dec mov add cmp jg push fcompl sbb imul cmp adc push sbb cmp jmp dec inc insb or mov dec dec sub jmp xor enter fldl inc adc orl dec and mov sbb sub sub (bad) push outsb fiaddl rcl rcl fidiv or ret sbb scas xchg loope lcall cmp testb es push les roll mov xlat outsl and in sub or sahf or insl or ret cmp dec pop add and mov mov call in add test pop inc or out out lret outsl push xor push sub jmp or xor gs pop arpl mov cltd push stos std mov sub sub xchg sub mov insb inc enter clc add mov push mov dec lea pop rcl aaa in stos xchg lea sti or xchg push adc test xchg imull (bad) fsubs push je je mov push nop inc nop xchg inc sbb dec add test inc jb inc cmp and jmp (bad) (bad) mov cmpsb (bad) stc bound into sbb and sbb jge fsubl jae (bad) mov (bad) incl jae orb ds (bad) out dec mov out add add pop inc ja out add dec jns or add push mov jnp inc mov inc shr dec fwait mov xchg repz or pushl adc ds mov inc mov and dec scas imul orb mov mov daa stos pop stos or mov dec cmp fidivrl (bad) call cmp jmp add mov inc adc and sbb jo test (bad) pushf and pushf mov sbb ja push pusha push jne sub or lds enter xchg jne and dec jno fsubl cmp aaa mov imul fwait add pop outsb sbb ss nop clc inc or or subl (bad) inc sbb lods or sbb sub aam pop out mov push shll inc scas cmpsb out sbb imul push and cli ja loopne cltd adc push outsb inc mov or sbb inc shr inc or inc dec cmpsl inc idivl ss sbb mov loop inc or outsl jecxz or and sbb adc data16 fstpl pop repz inc mov adc (bad) jne or pop loope lea movb ds cmpb mov ljmp sub ret aaa nop pushf nop pop insb stos addr16 xor and loope aad push pop cs lret mov nop leave push inc sbbl xor cmp pop ret dec mov add ret and daa sub push cmp popl pop or mov out sbb iret add aam dec das dec push jnp cltd mov pop dec jmp std or popa adc jle test test xchg inc inc pop nopl leave sbb push push inc call cmpb shr or rcrb shll and nop jno sti cmpsl mov cmp clc dec and sbb jbe in in daa aam fnsave sbb xor popa add add cmp adcl sbb pop lcall out sarl mov xchg add (bad) (bad) nop leave or inc gs inc cmpsb push adc pushf cmp inc add pop bnd sbb mov add leave scas add and jnp dec lret or jnp cmp and scas add xor popa ja out mov sbb push call dec out mov sbb adc (bad) mov in dec inc int3 cmp sbb and rcr rcrb gs int and jmp pushf and add mov add call cmp repz pop fs (bad) ja lea jmp call mov mov jmp mov cltd xchg and pop je sbb jp sti loopne and cli cmp mov test test bound mov adc mov js jmp jmp mov cli nop and add sub ljmp add dec mov movb mov xor bound fwait popf sti mov movq sub (bad) fdivr clc dec mov inc movq icebp pop inc push or flds xchg test adc push mov lea stos decb test inc movzbl cmp je mov test jecxz (bad) mov std sbb fimul (bad) dec not addl je fstl mov aas pop je inc je decl loopne aaa roll cli pop jbe ud1 mov aad cli loope cmp je xor ljmp mov mov push mov sbb mov movsl jne mov test jbe mov roll or test mov dec cvtps2pi cmp dec (bad) (bad) out xor scas mov je movsbl cmp idiv jmp popf aas mov dec sub dec not and lcall in sbb dec cs dec movsbl cmp cmp in sbb incl je sub push popf xor mov aaa push inc jae fwait xchg fisubl (bad) out jo enter lea inc movzbl inc (bad) (bad) test push insl roll mov jmp mov pusha xchg rcrl jnp cmp push je xlat lds clc ss xchg aaa je push subl inc jns push add pop add test mov je aam sti ljmp es lea dec cmp dec mov je shlb test xor push add push (bad) mov cmp dec decl dec mov dec mov (bad) mov push sbb push bound pop jae je (bad) (bad) lcall or mov test lds fmuls outsb jbe push add dec add pop loop shlb sub or jbe sub sub or pop sub cmp dec sub sti pop ja adcl (bad) (bad) popf sbb add inc mov xchg lea inc test jne mov xor adc (bad) sub loope xor fldl2t dec cmp ja dec sarb movl or lock xor add mov dec or dec push out adc dec mov call inc movaps dec add sub inc pop mov add ret pmaxub jb mov stos (bad) jmp movups ror addr16 push int3 pop pop sub and fdivl mov lds jmp pop inc jmp dec adc ja xlat fisubl test je repz (bad) incl bsf inc cmove dec arpl dec lea dec cmp je sbb adc clc aas stos push add (bad) call inc setae inc or je cli push jbe cmp fimull fiaddl push cmovns lret dec cmpsb decl cwtl test je adc outsl jb sbb add btc mov inc adc add add inc sub mov push sbb scas dec xor add add test mov popf imul js inc mov fnstcw dec add cmp out jbe js push add test jbe fstps push add push add push mov sbb pop cmp mov push push je pop rcr into xor add push pop je sbb add add fnstsw push or test movzbl outsb out or or je xor xor dec or or js dec or mov or js dec or fucomp dec mov or add inc or xor jbe fsts dec or inc or mov jae dec lea inc push lds (bad) aas mov adc sarl sub dec add dec add out mov cmp jmp decl jmp adc inc and dec cmp pop inc push rorb test idivl add add je outsl jp jae je add test sbb movq incb adc xor neg roll add movups sbb xor int or adc mov insl pop sbb fdivrl adc or adc dec or movups (bad) mov and adc inc or movups fcomip out pop or adc dec or push or jg or pusha or das jo sub insb les sarb mov pop (bad) incl pop add dec add dec cmp (bad) mov mov dec sub dec lea inc je adc je add add je add sar add mov add dec movzbl or (bad) or stc inc mov fwait (bad) out decb mov cli mov divps inc mov movzbl mov push std into in fidiv decb incl out mov mov sub rcl push sti or jns scas jbe ljmp xor mov push sub inc jle mov je adc jnp lea or icebp adc (bad) ret sbb mov (bad) decl and mov mov add and leave cli fisttp fucompp add lahf dec mov dec sub test jne inc movl dec insb cmp pop mov add jmp pop add xchg ret addb js inc outsl and iret mov flds push adc inc add mov and je add push iret and (bad) jg xchg pop fldenv xlat lret test je inc movzwl cs incl inc bsf cmove dec cwtl dec add xor fsubr adc mov lea and dec mov gs rcrl rcrl pushf rcrl add pushf xor std out inc and jmp (bad) jmp fbld inc lea (bad) incl inc mov cmp jbe neg sbb and add sti mov out push movzbl inc shl cmp inc add inc lea inc cmp jle adc lea sub ss inc cmp les push inc cld (bad) cmp add shl inc lea inc movsbl inc add push cmp cmp lea add xchg inc adc ljmp mov call shl cmpsl inc add inc lea jbe push sti mov imul shr mov dec lea test jne inc adc jbe cmp aaa dec inc cmp jbe inc sbb repz aas shr inc or inc cmp mov bound jecxz pop mov mov dec mov jmp add xorl adc adc jmp jmp push js test mov lea clc xchg or in cmc (bad) ljmp out sahf loope and shlb jmp xor loop aaa mov jmp jmp stos mov mov mov fbstp xor adc jnp pop jne mov jne test loopne sbb in add test add lea rclb adc aas add js mov inc lea ret inc add cmp aaa fcomps jae xor insl xor sahf mov xchg mov or push mov or mov jl sbb std inc inc lea fsubl or icebp jne or cmp lea xchg mov lret or push inc sub cs cmp add ja shl inc or inc lea loope inc mov inc shr and clc shr push mov or or cmp cmp ja push jno jecxz inc mov shr adc loope jb or mov pop add sub adc mov test cmpsl jo and popa out sub and call sub jmp out repz jmp outsb or aaa add or add dec call cmp sti fiadd dec lds mov xchg icebp (bad) (bad) stc add sbb or sbb xor popa push cmp fdivl dec mov jmp mov add stos add jmp fidivrl sub xor insl mov lds pop ja dec mov ret xorl xor fs mov push push or leave and ret jge xlat inc loopne push mov jmp jae popf jnp or sub or jmp subl sub addr16 mov dec push push add iret imul pop callw (bad) stos and jp jb das jne aas aaa push cmp dec (bad) adc mov ja jne jmp ret sbb dec stc mov or test inc mov inc test (bad) jbe out je aam inc mov dec mov add adc dec mov dec mov dec es (bad) decl adc pusha fmuls cmp (bad) sbb lar push add jne jmp sub das mov bt jae cwtl jno dec mov push inc mov mov add fnstenv sub (bad) lahf je mov adc ljmp sub dec add inc mov adc stos ret adc dec mov pop loop xor into jmp mov xchg test je mov inc cmp dec mov jne dec cmp ja lods and jno jmp and fdivrl adc lret mov add push sbb test (bad) jae and jmp out aaa dec cmp mov push fnstsw loopne repnz or jmp ret xlat adc mov imul lods sub push stc sub or mov mov das jne dec icebp (bad) adcb test adc pop fsubrp out or pop jbe cmp popa sub and xchg jo adc loop or loopne xchg nop pop add jmp mov pusha mov inc adc call lea sub in push add in sbb push adc add adc inc xor out add add data16 add adc test ljmp movzbl jmp pop xor dec sbb fbld repz mov add fs lret pop sub push push lds and push xor mov jb cmpb sub cmp je mov sub ret dec orl add inc and jg push aad dec mov push test rolb and sub roll and dec (bad) out cmp movsb inc jecxz mov ss adc ljmp and call dec dec lea dec mov dec and adc lock sbb ja dec add dec cmp pop pop jne adc ret nop dec cmp cmp inc jle icebp ja adc add stc dec add jne daa (bad) and sbb loopne (bad) call shlb inc pop mov mov dec clc add fist dec mov inc jmp add call aaa subl mov jl push mov dec or je out dec inc inc adc dec test dec mov fistl pop jb cmp lock or in xchg xor sar dec or mov xchg mov jmp out dec test jne call fildll jmp (bad) je fiadd sti xor sub xchg and movsb mov dec mov dec mov jmp dec mov jmp daa push sbb push add stc jmp cmc add insb dec cmp (bad) (bad) lcall enter mov inc mul dec lea shr imul inc lea mov outsb cli lret mov add xchg ja aaa and xchg jno or cs add ja bound mov and pop add ljmp mov xacquire add dec idiv (bad) std into popa test ja stos dec mov mov dec mul dec xchg inc ljmp cmc add out mul mov dec sub inc mov std lcall inc mov inc mul shr inc imul shr inc lea inc sub inc mov loope clc mov sub or loop jg out jbe mul and les jmp imul or push mov xor testl mov inc add cmp jmp fisttpl sbb cmp jg movsb jle add sbb and push inc add flds dec (bad) lcall cmp rorb movzbl inc mov inc add dec lea inc pmaxsw pushl adc addr16 add adc xor or ljmp dec add mov cmp add mov sub out cmc mov mov iret sub inc mov jmp outsl inc dec mov das movsl cmp add shrl fist aaa dec xor scas ficoml cli pushf or inc mov fstpl les add add adc out gs inc add inc mov sbbb mov enter cmp mov jecxz mov loope mov imul lds dec sub pop loope xor in jmp jecxz sbb xchg mov gs inc jecxz sub sbb xchg pop add push lods inc sub jle fwait or in or sub ficom in mov mov xor mov add sarb sub inc add push jnp sbbl aam inc lea xor (bad) lock out mov lea adc outsl jo ret imul imul add mov mov lea push add and inc mov mov mov sbb sub push or ja jg add inc lea pop push unpcklps inc mov inc add xor push pop aaa lock or jmp std or inc mov or inc or dec lea inc mov pop or push or sbb inc mov or cli or xchg or inc mov push sbb test loopne (bad) pop inc int3 mov shr mov imul shl out call inc mul mov or or or in inc imul or (bad) mov fistl xchg cwtl add dec lea jg inc mov mov push aam sbb out lea nopl mov in dec lea add mov jmp mov push sbb cmp jecxz inc sbb add andl sbb xor mov or xchg inc andps js add inc lea xor inc icebp add mov mov inc add mov push inc out lcall push inc mov mov movzbl push inc mov inc mov (bad) aaa nop add dec mov repz or add mov lcall sub push add and mov xchg ja or out dec pop loop cs hlt cmpsb imul or cwtl gs jmp rorl add pop ja (bad) ds inc mov mov mov mov daa lds clc aaa out adc inc mov inc lea aaa add ret std push add inc imul aaa cld jo xor rorb cmp outsl sub inc xor imul inc mov or pop or xor notb or adc inc mov jmp sarb (bad) mov push mul dec sub cmc aaa lock fs data16 aam add and int3 inc sbbl ja add mov lock mov and inc mov jmp rcr sahf add dec mov pop je jmp pushf sub mov test loopne xor add xchg adc or fucomip mov dec jle jbe adc jmp mov add jmp (bad) push fldenv sub out dec adc xchg push out xchg fistp mov or sahf scas xor push pop push add adc dec outsl call (bad) cwtl mov lds call add incl test jne cmp jbe mov rorb add inc arpl (bad) repnz inc into or mov dec jmp push pop pushl dec mov call dec mov dec movl xor dec add add pop fild mov mov inc and fmull add pop pop add enter pop push cmpsb sub pop inc mov dec mov call or rolb call cmp and adc sbb sub adc scas decl icebp dec cmp mov inc mov dec out idivl mov dec mov dec mov call or out mov mov add shrb out fmuls sbb cs je xor mov sub decl dec cmp sete lea ret outsl sub jl dec mov daa iret call shr je cmp das sbb push jge dec adc dec mov daa dec mov shlb xor jae push lds pushf and sub fmul dec mov push aaa inc pop iret inc mov test push nop cmp mov scas add push inc mov js dec push loope incb jmp rorb mov inc adc lcall dec push adc pop dec mov dec sarb mov mov add data16 iret mov nop sbb decl std (bad) jne movl js xchg cmpsb dec cmp xchg mov dec push push outsl mov dec ret das (bad) sar xlat dec cmp je dec mov cli mov into push test mov xor and mov call cmp shrb je popa add push (bad) inc hlt cmp inc adc mov fs dec add adc or in cltd lret pop sub mov adc push shlb add adc inc loopne sbb fistp dec outsb loop add push mov roll push add (bad) jg adc movzwl dec arpl dec add jmp stos mov clc adc push (bad) decl hlt mov mov mov adc dec mov je xchg js hlt jg movb dec mov dec push lea dec mov out test inc sbb add mov (bad) incl add outsb or es and inc test je dec mov dec mov pop inc rorl inc push (bad) mov mov lds dec and dec shl pop xor (bad) decl jne dec mov dec mov dec lea dec cmpl outsl jmp sbb and inc inc add call or pushl sbb add dec mov dec sub inc mov dec mov inc cld ja icebp movsbl test dec sbb scas ret dec pop jg add cmp ja in (bad) scas xchg (bad) ljmp mov inc mov (bad) cmp cmpsb mov pop jmp decl in je inc movsbl mov jle mov inc sub push mov xor call mov inc lea dec mov pop and or dec cmp jb add call insb nop fwait ds ret aas add dec lea dec lea jb pop loope cmpb movq movb mov sbb js jg mov dec mov sti sbb fimul clc cmovns fucomip dec cmp jbe (bad) mov dec and dec cmp jb je ret mov lds sti and fdivr inc sete inc or jne je add cld push ret dec mov sbb cmp test dec out cmp scas dec inc sbb or incb ja rcr je add dec lea fstl sub push xchg jae jle pop jne add stos repz lea loopne fistpll icebp mov repnz je int3 cmp xor adc out sbb pop negl mov inc sbb sbb cmp insl or (bad) lea pop add jae jp or inc dec pop add push sub push jb cwtl decl (bad) dec dec pop dec mov inc and push add cmp adc rorb (bad) mov lea movb mov mov jb out cmpsb push ljmp dec mov popf jmp adc and dec mov cmp xlat or je push add icebp add xchg mov dec sub add jmp dec cmp jb fisttp mov dec mov decb jo mov movb xchg dec mov fwait out fucomp push add movb aaa dec mov outsb outsb sbb fsubl movb (bad) mov (bad) shll dec add gs pop ret stos or call xor mov mov pop (bad) or aad (bad) cli mov fs jb jmp insb scas mov add mov fwait arpl pop pop push sub sbb adc inc (bad) cmc sbb push mov inc or das adc add aam xchg inc movb pop incl cmp push dec and test or jle pop (bad) jg inc xorps inc movsbl mov push dec cmc dec mov dec cmp dec mov jle out loopne decb inc and test sub jl clc add lock orl lea dec cmp ja sti pusha adc push sbb pop sub aas je sti mov into dec cmp ja pop sub fs test sub inc and shrb rcrb sub js jp dec sbb mov jmp test jne pop adc leave xor out sub adc xlat push fbstp (bad) inc seta inc fdivl jne mov test inc jmp or lahf arpl add aas adc pop or inc movb inc lea outsl clc incl mov or dec cmp jb call mov add dec lea sbb add sub xor rolb insl add and icebp std or and outsb add add bound fisttpll cmpl cmp jbe int pop xchg loope (bad) in test idivl adc cli and xchg les mov inc or jne daa adc pop dec mov dec sub dec lret gs mov imul adc inc sbb mov mov fisttp mov sbb or clc (bad) inc repz add lea add inc int mov xchg push mov mov inc or jne dec dec xchg aaa in add jns sbb add mov cmp inc or pushf push xorl (bad) aas fidivr dec dec cmp dec mov dec mov inc mov imul mov mov test dec dec inc xchg mov jo lcall loopne iret les and orl xor (bad) (bad) add jne adc je je cs aaa leave aaa add sbb shlb mov dec sub inc mov pusha cmp in dec jb sub mov cld aas cmp inc seta inc test jne cld es jne (bad) scas add out andl mov std mov dec push (bad) and sar ljmp dec and dec shl dec add dec cmp jne pop ljmp lea dec mov je add dec mov dec and mov je dec insl add outsb sbb es dec pop or inc xchg test dec imul loope push insl push add (bad) sub in aaa push or sbb mov (bad) jno xlat shll mov dec pop stc ja add dec ja add je loope mov pop movb mov inc jne dec fmuls push pop sbb test cld add sar inc and dec arpl dec mov xor push mov dec cmp xor cmp (bad) ss push add sbb jp cltd adc pop sbb loopne xor inc mov xchg sti daa jmp scas call mov stc cmp je adc rcl pop flds lock psllw pop hlt add jmp por pmovmskb nop sbb inc adc jg jmp dec shr dec mov movl and sub idivl adc mulps scas pop jmp inc cmp pop je gs cmpsb mov andb add xor cmp add pop icebp mov mov bound icebp push fldl pop ficompl xor dec lahf cmp (bad) dec mov inc xchg add aas outsl and xchg sub cltd or add mov dec mov jp loop dec cmpsb pusha ret loope je call add add pop jne pop pop in pusha dec pop les xlat xlat sti sbb push push leave out (bad) mov out xor inc xor add fdivr inc inc imul and movups jbe cmp sbb test xor sbb (bad) (bad) jmp xor inc and jmp nop movzwl bsf inc cmove mov call lea dec test pfrcpit1 outsl sbb enter les inc or jg sbb call jbe mov lea dec neg inc and dec lea lcall sbb test je aad jl dec cmp arpl (bad) jae fistp mov je test cltd jg inc mov je adc into lds jae cmpsb adc add inc mov je add arpl adc pop pop mov je jns adc pop pop pslld mov movzbl adc inc mov je scas cmp or test add push or test pop jne ja or or or test dec pop or idivl adc addb les test sub fbstp nopl dec mov dec lea mov cmpsl add inc fild addl xor in add ljmp dec lea in aaa and dec cmp inc movups jae fisttpll in movlps icebp add dec ficoml int fstp je lsl add dec add mov fnsave push adc or inc aaa inc in push xlat dec push adc inc setle sbb outsl sbb inc movups ret add nop addr16 xor adc xchg and std add jbe push or cld fdivr fldl pop pop and inc pop xor fdivr faddl je inc je inc push pop push cld fdivr fcoml pop pop pusha pop adc pop jo hlt fstp inc adc sub jb lea jl jg fdivr fs roll int3 dec cmp ffreep and dec mov mov and jl decl not dec add jo cmp inc mov jbe (bad) jo dec mov je add je add xor out mov push je xchg adc inc mov push add fbstp and dec add or (bad) (bad) je or mov cmp sub and sbb sbb inc xor jae gs xchg jbe sub insb cmp mov mov pop cmp inc mov push cmp inc mov dec fwait add cmp cmp dec out sahf out cmpsb cmp dec cmp pop cmp xchg shrl pop ja jg mov rorl (bad) or lahf clc xchg (bad) jmp add shrb add test or lcall mov xchg stos rorl jg loop push xchg or inc xor (bad) call jne test jne les fcmovbe test mov mov xor test stos out mov daa dec mov push and dec lea lcall rorb xchg (bad) dec mov dec mov dec mov call call lds add dec sub jmp adc pop xchg or dec dec out mov jo (bad) out jmp jecxz lcall xor mov xor add sub je sbb je (bad) sub mov ljmp jmp into dec sub dec shr dec mov inc adc sbb in mov call outsl (bad) ljmp add or fiadd xchg insb sti sbb dec cmp je add mov inc sbb mov outsl push icebp fsubrs dec dec mov adc xor lcall jno dec cmp dec mov icebp mov das pushf loope test test scas ss out outsb outsl lret or dec mov cmp sbb and xor pop mov cs push push pop push scas stos adc sbb sbb add adc dec mov cmp push dec cwtl jbe pop push push or push inc adc add push inc mov pop inc rcr fisubl fimul test xchg or movzwl loop into xchg (bad) lea test adc imul dec cmp mov inc or je rorl dec mov out repz (bad) fiaddl loop push adc cwtl movzbl dec cmp xor test add bound dec mov sbb loopne call pop (bad) cmp stc mov add cmp adc cli add in push cltd rorb cli pop js xor adc (bad) cli cmp dec je pop lea dec xor xor (bad) cli push aaa loope mov or cwtl add dec xlat test push mov adc xor cmp mov pop mov out and dec mov test ss lcall adc fsubl mov push dec mov fimull cwtl add rol scas mov xor lock add dec add inc mov mov push fwait cmpsb insb and insl xchg cmovne je xor movlps fldenv stc and addl inc inc jae out or je add loop mov je or je sub mov xchg mov lock pop ret jns dec sub xor inc sahf or add push xchg nop add (bad) jae jle push jle or adc push inc pop enter xchg inc sbb sbb out out pop je dec pop dec sbb out out pop inc sbb sbb pop je jmp dec je mov cmp lock loop dec add dec cmp je (bad) ffreep aaa negb dec lea (bad) dec add and dec cmp inc mov or lock xchg lcall dec jmp (bad) inc fstp inc incb xor add je shr call mov push add pop adc inc sub ret or cwtl mov and adc or or sbb xor fldcw xchg jbe cmp adc inc mov (bad) out lcall adc inc mov je add je add pop adc out sbb inc mov sub push sub ss adc sub ret ja bound icebp jb inc mov clc cmpl jmp add mov pop inc cmp daa add inc mov outsl ljmp mov movsb dec arpl dec jmp push lock dec js xor aaa inc movzbl decb or sbb adc jo mov lret dec popl cmp icebp sti aaa fisttpll sbb das jmp and xchg and inc inc mov lahf loopne mov scas (bad) sbb push cld dec mov sbb dec and (bad) ja mov call ficom dec mov jmp add jg push xor data16 imul inc and push inc test jne,pn in pop inc mov inc inc movsbl ret or adc xchg lods loop pop addb wrmsr lds mov mov dec rcrb push or scas jg (bad) or push pop pop jg jp js (bad) lock mov dec cmp ja pop mov call jl (bad) aas dec mov dec mov adc fadd xchg push popa jnp jg mov push and inc movb dec notl cmp xor cld pop dec sub shl adc outsb sbb ret jmp adc movsb repz clc sub leave je mov add jmp sub and decl cmp lds call pusha test ljmp mov xchg dec add dec mov dec add add mov pop pop jmp mov mov or enter pop paddsb add pop mov ret adc pop rol stos dec jle xchg loope js cmp jmp (bad) adc out out call (bad) out nop push loopne jg mov dec mov dec and sbb inc fwait dec jbe lock sbb rcrl je push add dec test jne jg stos dec mov jns dec lea movb inc mov clc sbb inc add inc mov push add aas dec sub push sbb jg dec sub jmp imul xlat jmp cld jl (bad) icebp ja mov nop ss mov dec mov dec push loopne mov dec or adc fist dec sbb dec jmp inc add clc neg inc cmp (bad) call dec lea mul shr inc imul mov std xchg inc mov inc sub sub add or adc xchg push orl xor mov mov (bad) dec lea or pushl and mov push pop out mov dec lea inc mov inc lea sub inc mov cmc loop jg dec mov dec sub dec add dec sub jmp dec orb out lock jmp and and (bad) (bad) pushl adc jg mov repnz inc mov dec add sub inc mov (bad) je sub sbb or mov mov cmp sbb or mov test data16 out dec sub push jg add jae and adc mov iret out jae and and bsf push ss and (bad) fbstp loop mov fsubr push jmp mov mov inc mov call inc lods js div inc subl (bad) jl xchg aas or fmul lock mov mul dec lea inc mov lahf xchg incl jmp fs lea inc sub inc add decb xchg mov lea into add inc mov ret jg clc inc lea dec mov and inc mov inc mov dec mov movzbl dec lea push inc lea sub imul dec dec sub or scas call (bad) call jb scas ja push inc mov call mov mov lea loop ret inc mov shr pop icebp (bad) incl aad cli adc add mul inc mov inc sub shr add inc mov mov js outsl in sub scas inc add mov adc roll fldt cmpsb sbb jbe dec and sbb mov daa inc mov inc lea inc ret sbb mov arpl and cmp mov cmovne (bad) decl fiadd pop xlat adc inc mov ds (bad) dec (bad) mov inc mov movzbl cmp sbb cmp inc mov jmp aas mov inc mov lahf add pop or das enter nop ljmp sti aas dec mov push mov add xor and mov pop adc test lret je (bad) dec add or mov dec add dec lea mov roll decl pop add mov fnop jmp shll add add sub dec test je dec (bad) fbld (bad) ficoml add jecxz inc lea dec cmp scas fcomip out dec mov inc decl test sarb cli inc sub inc sub rorb jecxz sarb jg cvtpi2ps mulsd addsd sub sub (bad) mov pop ret seta dec bsr add dec xor sar add lea fist mov lea push pusha fimul mov mov dec mov dec mov dec shl inc add dec hlt jmp sti mov rorl ret dec mov psrlw rorl mul pop and decl decl (bad) mov (bad) jg jne mov push shl dec sub dec shr dec lea paddusw and and xchg cmp lds cmp add jmp cmp cmpsl mov push inc adc and jbe cmp faddl push jbe cmp inc jbe cmp fs mov xor cmp roll loop add dec lea xor inc sub (bad) (bad) stc or inc mov dec arpl dec add inc jmp cmp and pop jl (bad) out push js add add dec arpl add adc inc sub aas lock cmpsl ret icebp or leave jne mov cmp pop xchg dec arpl sub es and sub fistpll dec lea dec lea dec add dec add ja (bad) add dec shr test jne test jne sar les fucomi int imul imul shr inc imul inc inc sub mov jle add jmp add cmp int3 out dec mov mov jl jns xorl add mov jecxz or cmp and rorl adc aad dec xor and roll mov cmp sbb lahf addl xchg inc add and cmp push mov sbb ljmp sub pop pop pop lea jns stos jp jmp dec sbb pop stos mov inc push in dec lcall cld add dec mov dec dec jae dec cmp dec cmovb cld or mov pop mov je sbb inc sbb lock nop cmp lea jmp aaa adc sub ljmp call push out js add mov dec cmp repz push out xor ljmp dec mov dec add dec add dec mov or cmp pusha ja jmp or or xchg pop add cmpsl pop lods mov and fimul sbb xchg and loop cmp lea xchg fcoms out (bad) mov dec push imul push push push pop (bad) dec add dec mov mov mov inc mov pop dec mov testl dec mov dec sub dec lea jmp pop cld xchg dec mov dec sub ret dec cmp (bad) stc inc icebp and push out mov les dec mov mov add pop adc jnp push test mov call add dec mov dec cmp dec cmovb mov xchg xor shrb inc (bad) dec mov mov aas fidivr sbb fisttpl test and lcall dec and dec lea dec add dec mov lcall scas adc (bad) dec cmovb out jge cmpsl popa pop cmp adc mov push les jmp mov push jbe imul push out dec aas int push xor fcoml mov pop loope insb sbb push cli jmp gs stos pop add clc push jb push mov addl mov das pop out mov add xlat and dec pushf clc out ja lock mov and in sub repz mov inc imul call outsl mov mul inc cmpsb imul mul sub mov popf lret inc sub pusha cli adcl icebp (bad) ss dec lea fild mov inc lea dec lea cmp inc mov decb push fwait or inc mov lea mov pushf inc mov inc movzbl inc jge mov mov inc movzbl mov xor pop add cmp inc mov (bad) incl sbb lea inc mov jmp inc xor jmp pop lret ja jmp out aaa sar (bad) xor inc and aam cmp je add add je add adc call or je jp dec in adc gs and adc fs sbb or dec cwtl outsb jbe pusha jne and cmpsb mov imul add mov jnp cmp inc mov sti add pop push push movzbl sub jne jmp clc jne out or dec shr dec adc dec lds clc inc mov dec sub (bad) ja xor roll je sbb mov decl mov js lret andb pop shrb inc aaa scas dec inc mov dec add cwtl or lock dec lea or out jle push add loope inc jecxz and lea dec ret call rorb adc and dec sar adc adc dec cmovb fadd hlt cmp mov shr mov es test push dec sub adc cs icebp out out mov jmp jmp int clc jl inc mul or dec arpl mov mov dec imul dec cmp jae dec mov dec pop cmp jb (bad) (bad) decl dec sub dec lea dec sub dec lea dec cmp ja dec mov dec sub mov cmp jbe dec arpl inc subb test (bad) (bad) (bad) in inc lea js inc cmp jg inc cmp jle lea dec arpl cmp add dec lea call ffree add movb dec lea outsl clc push add lret icebp pop mov inc subb dec push jge decl dec mov jmp inc lea (bad) adc xchg or sahf inc lea inc cmp jbe ret std scas sub inc cmp jl lea inc mov mov cmc je push lcall dec arpl call lret inc test movb push add (bad) (bad) mov add mov dec add inc sub cmp jg sti cs pop or cmpsl jno inc mov jmp call push std pop sbb idivb mov xchg and jb pop dec mov jmp stos jle outsl push stc inc shr inc imul neg rcrb and jbe pop sub jl adc push je lea and dec mov fst aaa (bad) or inc mov rolb push pop jl mov aad lcall inc mov mov mul shr out std scas push ljmp out inc mul mov mov jge sbb mov xchg pop inc mov inc jmp cmc (bad) out out call inc mov lea lea inc mov add dec lea pop sub or fs inc sub inc mov lea call inc mov lods inc mov push (bad) ja sbbl mov sbb fist mov ss mov jmp (bad) mov and add mov out cmp cmp lds xchg pop dec mov ret bnd lock dec sub dec lea outsl dec lea jle cmpsb loop pop dec sub mov idivl mov rolb sub dec ds cmp ja mov dec push movsb loopne mov xchg call sbb mov or mov mov jg push fsubrs add stos xchg jl mov movsb sti out outsl (bad) jmp call jmp into jbe rclb in cmp pop pop or xlat mov cmp cmpsb add testl call inc int3 jbe call test or sbb imul mov jmp mov or mov shr imul mov in jbe inc fist into adc add lods add dec mov add icebp outsl (bad) add movzbl inc mov lock aam adc or mov testl shr fcmovnu push clc decl xor inc sub mul mov inc mov mov popl or (bad) out js inc lea adc mov mov xor xlat inc lea push loopne incl fs mov add xor or mov lea testb std dec cmp inc mov or inc mov push out (bad) out sub insb and add inc mov sub pop jmp add add mov inc cmp ja or xor rclb mov jmp xor pop jmp decb ljmp jmp jg add test jle mov jmp rcr adc dec mov jmp push sarl add dec mov jmp mov cld jecxz and inc iret dec lods aam mov jle lcall and dec cmp dec cmovae dec or pop (bad) lea push push jno,pn popa test mov sbbl dec test jmp addr16 cmp pop imul jmp push ja ret add cltd (bad) outsb aas and push xor sahf repz insb out cmpb sub cmpsb xor ja orb lea faddl xchg inc aaa pop mov roll sbb mov lahf or nop test outsl movsb scas xchg in adc push or insb mov je add test test jmp lret mov lock adc pop and movsl lock mov ljmp mov inc or lea data16 shr dec cmp aad iret je add mov scas in cltd mov enter mov inc into cwtl mov mov and dec outsl mov out insb pop dec js lahf pop inc ds cs pop pop add aaa jbe mov sbb or xor jmp pop xchg pop jecxz outsb (bad) mov shr dec add xor lea dec mov xlat or dec cmp dec cmovae aam fdivp sub stos lods adc sub dec jne icebp sbb dec or ret into mov dec jecxz pop ja imulb bound jecxz popa add mov outsb or add xchg or imul add or mov jne or sbb sti dec incl hlt dec sub dec lea dec cmp xchg outsb imull mov (bad) je mov mov fwait mov xor inc jge xchg jo das into jo sbb loop jmp int cs stc aam push xchg or jmp pop nopl add clc outsb ror gs dec add loop xchg popa xor pop push dec sub dec popl fs or dec icebp cmp adc hlt je shrb lods push pusha cmp pop leave loopne (bad) sbb pusha or mov clc jmp loopne adc add pop push or inc add fcompl movsl add add jmp jae into pop aaa or jmp dec cmp cmpsb lods pop call sti xchg jge add push push push sub aad dec arpl inc mov cs jmp pop dec sub sti ljmp bnd add inc movb js fstpt or pop mov dec (bad) jne popa mov pushf dec sbb or cmp or dec pop mov dec mov je call fadds mov adc lea jmp flds cld inc mov mov inc and fsubr sub and push jmp jo stos add sbb lret mov cmp cmp ja orl inc dec mov dec lea dec mov dec aad or cmp xchg cltd or push push mov pop lea dec hlt sbb or mov add mov cs jle sub dec lea dec add dec sub dec mov scas add cmove mov dec cmp pop ljmp dec mov dec mov call and push mov push or jmp xor xchg stc arpl mov mov mov popa add xchg rcrl adc into hlt repz call pop pop jo jb (bad) adc jle add xor cmc inc jecxz mov mov or jmp inc push aas mov orl inc and mov push sbb mov adc push mov arpl aam sub dec arpl cltd mov lahf addl pop add nop cmp mov je call inc test inc mov je add inc (bad) jmp mov loopne inc cmp jae (bad) je sbb je fwait fwait mov dec add je add fwait sbb je movb mov mov out inc add movb inc mov or add or jne or xor adc iret or or mov inc cmp or inc lea mov inc lea dec inc lea (bad) dec add add sub inc lea lea and add adc scas jnp xor aaa or or add xor or out fnstsw call ja lret xchg and cmp xor jo jne sub or cltd pop decb arpl lcall push xchg stos rclb incl dec cmp je add je mov je dec sub cmpb push cmp call dec out lcall jo movsb cmp lock and fstps dec mov adc pop dec mov dec cmp mov test incl sti ja mov dec mov inc (bad) shl outsb call cmp xor jne sahf std jg xor inc decb dec std jne je out into decb cld jne fmuls push jne loop sti and dec lea jne fwait cli loopne lea jne ljmp sbb gs roll mov fucomp loopne mov push add pop xchg mov xor push loopne mov cmp aaa inc sub cmp outsl mov inc (bad) sbb pop mov or cmpsb add lcall addr16 addr16 and (bad) cmpsb push int pop ja xor mov push fnstenv cmpsl or xor call ret adc or dec jns adc insb call sub cmp push dec mov rorl dec mov (bad) arpl push in and add jl pop xor cmp inc faddl ljmp push jg arpl cmpb test (bad) out adc sub inc sub dec mov dec sub inc and or pop mov and lea xor outsb stos gs cmp ror fs cli cli cli lds data16 ljmp insl dec mov dec mov or fsts dec lea enter arpl jmp pusha sub cld dec lea ljmp dec xchg and dec cmp je xchg or pop enter dec lea aaa data16 flds jno mov jno jne push enter lea ficomp and dec lea xor (bad) cmp adc mov dec lea and out lods jecxz sti and dec lea adc cli and icebp jmp imul jo enter dec mov and mov outsb add iret fnstcw mov sbb and je dec adc mov or icebp call sbb (bad) dec or addr16 pop les or cltd addl cmp mov fcoml add adc addl adc sbb jge cmp dec sbb orl adc mov andb mov cmp sub jmp into dec jle adc adc pushl dec mov jmp sub jg add hlt (bad) lcall lock lea movzbl mov inc movzbl inc mov jmp ja mov inc mov push (bad) (bad) fbstp cltd add clc add mov lea dec cwtl dec add movzbl addr16 out aaa jo add ja add adc in int3 fldl or jns sbb int3 sbb adcl sahf add add outsl sub ss jecxz inc sub aaa add dec cmp cwtl cmp adc push sub jmp data16 cmp ret add add inc es dec ret push call clc pop das mov inc std aaa icebp jg jns inc sub mov sub lahf add int3 adc dec cmpsl lea loope push add pop (bad) incl add je jmp xor mov and mov inc sub jge adc rcrl scas and add push add mov pusha push add cld inc dec lea jmp repnz jl das or sbb mov js outsl mov out cmp mov ret popa inc jno pop and sub and xorl inc (bad) sbb cltd and xor fabs repnz push xor mov dec clc add add push mov and mov rolb aas or int3 cltd sbb push dec int3 fs mov mov test enter inc inc add outsl sbb rorl cmp lret mov adc dec inc mov lret xor push movsl aas jbe mov sbb mov and mov aam dec dec mov or loope jnp insl xcrypt-cbc cmpsl aam sbb out enter dec mov (bad) incl add mov popa out popa cs and xchg mov pop sub inc and out cmp pop sub aad dec pop inc andb daa stos (bad) or or inc stc add cmp sarb test jmp outsl dec cmp je dec mov dec lock mov dec test je dec mov jmp loopne pushf dec mov dec popf dec add test rolb inc push xor cmpsb mov sub sub xor cld lock dec mov dec stc dec lea dec cmp ja dec test incb (bad) adc add inc or orb adc dec mov xlat (bad) insb mov xor (bad) cmp aad incl cmp ds and test cmc popl loope iret cmp or imul inc clc out decl dec add dec and ret aam dec subl mov sarl add ja mov mov jo std pop push push sbb and fcompl dec mov sub inc mov dec std add ret mov and and inc inc cmp or fsubrl divb mov test sbb cmp ja dec pop divl add sub cs inc mov add dec mov inc lea lea dec lea dec pop ja popf mov dec inc mov ja add outsl sub decl dec lea movb movdqa sti pop aad fisubl adc fsubrl and into adc xor or xor adc cmp add xchg sti mov cmp je mov push inc xor dec das inc add clts into faddl in xor adcl jo or enter dec cltd or and or data16 mov cmp inc lods (bad) xor in add clc mov iret dec mov (bad) incl dec mov dec mov je inc lock test je (bad) dec mov (bad) xor inc lock rorl xchg xor inc sbb loop fisttpll sub dec xorl mov dec lea dec inc and aaa adc dec and dec sbb dec mov idiv aaa dec mov dec lea dec mov add jg je imul pop dec dec add aas dec mov mov adc movb push lods addb jge mov arpl je push outsl mov dec lea inc dec cmp (bad) scas stos jecxz and into lea sahf add mov (bad) mov movsl aam xchg push adc dec cmp jb jo (bad) mov rolb push inc dec push add shlb mov and ljmp mov dec and dec mov dec mov dec lea jo xor jbe inc add dec mov add jmp inc add sbb push iret pop jae dec mov je shl outsb in je lahf inc ud2 leave or pop jo ret cmpsb imul outsb lock jae lds testl fcoml incl add pop dec mov insb or push add jb dec popf inc or jle test and aas je arpl or in je dec mov lcall fdivs push and je rcr in incl pop dec pop pop add out pop std rol dec add fmull loopne call shrb xchg ja dec mov xlat push sub pop movb pop push out out dec dec cmp ja sbb add ficom mov dec and jnp mov inc and cmpsb lcall mov loop cld das clc dec mov inc sub mov dec cmp dec dec add ds or mulps jge add je sub pop jbe cld lods sbb pushf aaa dec sub (bad) mov into dec mov lea lea cmpsb (bad) mov cmp jb clc dec lea mov hlt push or dec jge xchg dec add sub inc mov and sbb icebp cmovge lock pushf or aas repnz fmuls xchg call xchg (bad) mov or mov mov inc cmp xor rorb jne xlat sbbb or inc sarb dec xchg int3 adc jle setle ds dec shrb dec push or cs adc dec mov ja inc dec add int jo sbb mov jne scas jae mov or clc or enter fisubrl and test push inc movzbl rorb addr16 jg inc ds mov mov test xor cmp xor cld dec lea mov jns or add push cmp push cmp and or stos popl sarl test dec mov aaa fst sbb jne inc jne or jne jmp shll sub ss lret dec and test loope hlt inc xor aas pusha push int3 es movsl dec mov sti jg jae dec cmp ja cmp mov call dec sub enter cmc dec lea dec ret ficoml mov repz adc mull inc mov adc aaa inc add mov xor cld inc jmp dec mov inc xor lea or add insl jge push ret repz or fs adc out dec and sbb dec shl sarb les test lock dec addr16 xchg adc xchg scas dec clc mov cwtl mov xchg jb call lcall push inc sar loopne cmpsb rorb in bound push popa add fsub sbb rcrb movb or lock movzbl pop sbb or adc loopne sub push inc fcoml dec fucomp pop jmp cli pusha add mov je in inc jp add iret (bad) lock add test inc ror push out dec jle mov push out test add inc jle add add inc jle cltd mov cmp adc adc testl sti jle inc mov mov fimull jno dec mov movups je mov xor jecxz mov mov jge gs adc push adc and or cmpsl xchg pop jg adcb dec xor adcb inc xor (bad) (bad) xor add jne push inc cmove mov mov clc dec rolb xchg ret aaa cmc cmp fimull test and add jbe loopne push lock dec cmp out (bad) jg jl and add mov dec cmp inc mov je push adc inc mov add ss inc sti es add cmp (bad) out dec out mov add add je jae mov add ss push adc call je pop outsb xchg xor or pop je or scas sbb or test or or je add ss adc cmc scas jnp or test mov or test pop aad out dec or dec repnz push pop push roll cwtl push mov lea ljmp orl (bad) (bad) mov add sub out add pop and cld icebp mov jne inc push pop mov or je or repnz call or jns inc movlps add ret test test and adc adc mov ss icebp xor dec add sbb xor push push xchg rclb icebp xchg loopne push push icebp or addl roll pusha xchg icebp pop sbb out sbb add mov icebp sbb sbb push rolb mov sbb not or inc mov psllw mov dec or inc mov mov xor xor adc mov or jae into sub xor mov icebp adc xor aad adc or inc mov pop or inc mov inc xor jge or mov fmulp push or sub push fwait incb ljmp mov rorl andl adc push sbb inc mov dec and mov pop and jmp adc call (bad) pop sbb jle add repnz rcll adc data16 jg cmpsl and dec mov inc cmp (bad) faddl lds mov and pop call inc lods mov lret icebp xor in ljmp sbb inc and inc add add push add jecxz push aas mov jmp fistp cmp xor jmp dec (bad) and add inc shlb mov shrb pushf or inc outsl (bad) mov push gs stos lahf adc dec cmp or iret iret pop add mov lahf xor mov lahf jge cmp icebp add rorb outsb push adc mov scas rorb test push xchg add xchg lahf cli popf jecxz mov scas lahf ljmp lahf lret or mov lahf add mov cmc pop or lahf icebp adc xor push and (bad) rorb mov imul lahf scas adc push mov add jo lods lahf xchg adc fsubl adc icebp add ljmp lahf call pusha lahf enter inc mov or cmpsb mov mov fildll rorb sbbb js lahf add pop mov mov dec add shrb aam (bad) incl and add rorb xchg sbb add (bad) cmpsb jb ja lret (bad) (bad) ja pop dec and (bad) jmp incl arpl scas xor roll cmp xchg pusha mov inc mov dec mov cmp fucomip sbb outsb fild pop pop inc and jo sub push push add inc mov cmp or inc push jnp push jmp jo lahf inc aas nop or popf mov dec dec adc aam repz mov dec mov jmp and fidiv in and repz xchg mov mov inc mov dec mov dec das jmp mov aas stc add jg cmp cli sub fisttpll add mov and movsb nop jmp pop scas fdiv les dec test je push add test inc in sub push cmpsl and iret mov push sbb je andl add lea pop (bad) cmp out dec dec dec test adc mov jns dec lea (bad) loop and add popa xchg dec push pushl es lea dec sub jmp and add ret mov sti repnz jmp add orl add call sub dec add dec mov dec sub adc add push sbb mov dec add dec mov dec mov or or jmp icebp aaa cmp push je pop rcll dec mov and sbb outsl and je call dec mov add sub lock rolb fisttp repnz (bad) lcall std cmp je dec mov dec lea dec cmp ja lret inc (bad) (bad) (bad) jg mov jg mov jne decl out jns dec lea movb cmpsb lcall xor mov lea dec sub jmp ja sub in jo jmp movsl pop clc ret icebp mov je test or scas dec cmc dec fisttpll test adc add (bad) testb dec cmc sub sub gs dec call mov dec mov jns dec sub push xorb neg cmp add add aas add mov dec lea clc outsl sub js adc cmp push inc lea jbe adc adc incl inc mov inc movzbl inc mov inc add jnp std aas mov xor add inc mov test loop cld inc movzbl dec lea jge inc lea fdiv mov mov dec sub jecxz mov dec insb mov mov mov mov call push add mov je or out add pushf mov or push mov dec add pushf push push inc sarb and push mov and mov mov xchg inc pushf out mov mov cmp xor test push sub popa xabort dec mov jmp add jecxz mov ss call sub sub (bad) or jne add inc aam xchg add ja sarl loop lea pop sar mov shr imul (bad) shrl icebp inc add (bad) aas cld (bad) xor jbe iret fiadd add sbb clc lock inc mov inc lea dec lea sub mov lock lock fstl xchg pop inc lea pop or mov cmp or (bad) (bad) stc call aad sbb sti (bad) incl adc push push inc in call inc jge mov lcall dec pop (bad) inc scas lock push test inc push and mul mov cld cmp inc sub shr add xor or out add cmp jo lock lea test pop shrl cmovne ret lock mov pop inc mov das rorb mov pop mov mov inc mov lea inc rcrb sub inc mov dec add xor inc mov or inc mov lcall add bound decl cld (bad) (bad) out dec mov jmp xor add jno push and cmp dec add dec mov decl mov dec cmp dec cmovb mov or movsl jl decl addb and push dec jbe pop dec fwait out rclb mov (bad) dec dec lea dec shr dec add dec mov dec mov adc xor cmp jp mov call jbe dec lea jmp and shrb inc das pop pop mov pop psubd mov adc dec mov dec cmp mov sub fadds dec sbb bnd pop add or dec mov add pop flds jmp sbb mov ret cwtl mov dec fadds out dec adc nop sbb gs pop dec lea rorl cli and inc sbb dec mov pop jl adc and push jle or paddsw pop mov outsl add cmp jmp mov call loopne arpl dec mov out mov push ret pop insl sbb addl icebp ja dec mov dec sub dec cmp mov iret dec lea sbb cli ret add jecxz pop (bad) mov pop and pop sbb sub sbb mov (bad) stos fmull in dec and imul add dec sub dec lea pop insl jbe out int dec lea mov inc mov jle xchg mov fldl data16 xor pop jmp and jbe repnz sub in fimull or and in ljmp add in pop jg mov inc lea inc lea sbb lret inc add xor and jmp add rolb je dec mov add clc incl loopne repz mov dec lea je out scas in jbe nop mov xlat aas add adc sbb jle and movswl imul add and push or xbegin rolb add fildl stc or inc mov dec arpl dec add jmp and or ret test add inc je add add add rorb xor test jne xchg inc lock mov enter add test jne adc bswap test out rol call rcl and (bad) mov dec shl dec add jmp push and pop add and clc mov jecxz add daa mov in sbb dec or xchg test sub data16 push mov add xor jmp jg (bad) (bad) (bad) mov ja cmp fs mov pop jmp add adcb xchg (bad) lods sbb adc xor aad pop in push xor idivb rorb sub or mov pop (bad) xor (bad) fisttpl cmp lods addb or push sub dec lea jmp sar insl dec lea dec cmp dec cmovb mov loopne adc push or jbe ja pushf mov add scas daa enter pop xchg and shrb jmp cmp add pop mov aad add decl lea dec cmp dec cmovae dec xchg int mov mov push dec and call mov mov xchg or xchg fadds and xchg jmp push cmp add test lret notb mov rolb bound rcrl jmp ja push cmp jmp add and inc daa faddl ret jbe mov movsl jmp or fistpll dec add sub push loop ss popl inc mov loop sbb push xlat inc inc sar inc test mov (bad) loope lret bound jg loop fs inc sub loop call add (bad) loopne adc ljmp xchg decl push aad add loope and sbb stc movsb dec or sar out loop mov and mov dec lea add pushl lea inc mov dec inc mov ljmp sti pop add dec xor add outsb idivl dec lea inc mov or add add (bad) incl jecxz lock jmp scas scas jle pusha les sub dec lea mov and out dec mov dec mov in dec lea aaa adc inc in loop arpl popf mov sub dec pop test bnd inc and fcmovbe (bad) decl pop cltd sub adc call add add in (bad) ljmp mov stc clc jl inc jmp sbb sbb fisttp dec dec enter incl cmp xchg incl (bad) decl lock out inc incl out (bad) out cli clc adc xchg mov jne inc cmp jbe fs mov neg inc cmp jl pusha test cli incl inc mov je inc lea push push sarb adc test in push rolb sbb pop out cmp jg or (bad) jne addr16 inc xor jno inc mov jmp lock movsb sub (bad) inc shr inc imul mov mov inc lea lahf ss ss lea push mov add inc mov push dec (bad) and jo mov adc jmp add enter (bad) push ror sub inc sub xlat mov add push clc inc mov lea sbb loop bound (bad) rorl adc or (bad) xor inc mov and aas popl dec lea dec inc mov add inc fldl jmp inc add inc mov inc jmp ljmp iret sbb inc mov push mov dec or inc push rclb mov jmp push adc xchg adc outsb std or rcl add xchg sbb jmp icebp cmp aad dec enter lea clc sbb loopne hlt iret aad xchg lcall mov dec sub dec cmp jb push scas hlt lock lea push and xor out rorl ljmp jl sub adc and lret repnz rorl xchg dec jmp sbb mov lds lcall ficomp inc or jmp outsl insl mov in call or mov mov adc add ljmp or (bad) (bad) call jnp mov pop mov mov test sub inc pusha lock (bad) out loopne mov add jnp fcompl cmp jmp sbb sub pop std rorb mov lret jbe ffreep inc lea dec lea imul adc movsb lret fs test ljmp mov sbb lock movsl loop mov cmpsb enter lock xchg inc movzbl fisttp inc add dec je xor inc jo rol hlt jb outsl jno shlb inc and (bad) loopne shr stc jb add adc sarl movzbl push adc mov xchg add cmp mov pop push mov nop les insl pop jmp mov dec inc jo bound cmp mov mov pop pop sbb jmp insl or jae leave jo jmp ja faddl dec xchg add pusha add fbld mov jmp (bad) aas je insb (bad) (bad) push sbb or popa insb pop js lret inc add xor jg in das mul pop lret fdiv jmp cmp jmp bound inc rorb icebp sub loope and add pop sub rorb lcall jle push jo mov pop xor adc add cwtl adc xchg dec mov fnsave fsubr movsb imul jmp aaa dec add test loop sub dec mov dec mov dec sub dec lea lret loop cmp lods cmc dec add dec mov call les mov jecxz lds or and roll aam sbb aaa dec push mov dec add sub sbb sub std fcomp or movsl dec sub inc cmc adc leave dec pop sub rorb add add dec lea push or and sti jmp jbe loopne (bad) xor fcmovne xor add mov jmp ret cld inc add jbe pusha push sbb aam lock and xchg mov rclb push adc dec add xchg add add fmull (bad) cmp add cli fwait stc push sbb push pop ret mov mull dec testb repnz fld1 sbb sbb lret enter cmpsl call in cs jmp call push sbb ss cli outsl inc (bad) sbb mov pushf push adc mov cmc sbb loop inc (bad) test dec mov (bad) icebp mov (bad) pushl in jmp push xchg fdivrl inc or or (bad) xor add or call mov dec lea dec mov out sub xorb test ret mov call sbb add dec add sbb lahf dec lea push inc sbb cmp mov inc cmp mov push sbb icebp insl js loope incb insl fwait push dec lea mov dec rolb bound mov xchg cmpsl xor cmp div push sbb aam push mov cmp fwait cli inc pop sbb jmp xor in test (bad) fldenv (bad) daa int3 add imul ss jo in subl mov add enter dec xchg negl imul push pop pushf ljmp popf mov mov arpl mov mov lahf inc adc ljmp (bad) xor mov (bad) jmp jecxz (bad) cmp jmp ret and loopne mov sbb adc sbb stos sub add jo int3 adc mov clc or add aaa out sbb push push arpl jae jmp mov mov or jno inc addl push sub pop sbb daa lret call and mov mov jae addl and add out ds sbb mov jmp xchg scas push stc mov (bad) incl jl jecxz rolb shr jbe push push push mov shr orb fisubr add pop xor fcompl xor sub jb ss and test inc cmpb inc lea nop mov inc cmp fistpl sti sti sti sti sti rclb nop dec or or adc mov or and cld leave gs inc jo inc lea cmp sbbl aaa xor adc or xchg adc fistpll clc jge and add sub out dec loopne cmp sub pop inc push push decb pop pop cmpsl incl popa push xor js jne dec add out sub add add add or clc out and jne xchg dec sub test shlb adc or je xor bound ds mov fsubrs aaa sbb loopne jmp subb sbb shrb adc fsubl sub or add sub icebp addr16 adc push cld jne into repz rorb jp adc and and fsubrl clc dec (bad) int sub adc inc stc jne fcoml sub pop add out cmpsl sahf dec ja les adc call out xlat decb call fidivr mov jmp sahf add (bad) fmull add lret or rcrb push cld pop sti dec mov dec fnsave sbb dec lea jmp add add (bad) sub js lea sub mov je fs jmp inc and in data16 mov loopne jo xor int3 (bad) jo cld incl lea inc add inc cmp jle aaa push dec arpl push jne adc sub ret fnop jne mov inc add cltd and adc (bad) sub sub je jae add add je add add je dec sub inc mov lret jne cmp dec dec lea jnp int fwait sub push dec mov dec (bad) ret and mov dec sbb data16 dec mov xor aaa or add adc inc sbb sbb cmp mov (bad) (bad) or (bad) mov xor test dec lea jne jg popa rorl jg xlat (bad) fcoml popa rorl jnp xor jg adc dec lea jne adc popa rol adc popa dec mov dec call fwait dec sub dec lea mov ljmp inc in loopne (bad) push adc loopne add out (bad) call fs or es ja pop lea push repz (bad) mov add xor jo jecxz adc add xchg andb xor stos stos cmp out xchg mov decl ret mov push outsb mov xor test out rcrl push fsubl inc add sbb enter jle dec inc cli hlt push insb out (bad) cmp int3 les aas or push sbb mov mov dec mov fisttpl test clc dec sub dec mov sbbb loopne add (bad) decl imul cmp dec cmovb dec test je sbb inc and (bad) (bad) (bad) hlt jns faddl jae (bad) shrl iret sbb outsl xchg pop inc (bad) mov fcmovbe addr16 push les rcrb dec mov loop rclb daa je push aaa (bad) data16 mov mov adc jb,pt push sbb imull ret jmp ss jmp in leave sub mov push dec or shrb stc test scas push sbb out arpl cmovb dec test mov test mov pop dec xor sub imulb lret sbb push cmp pop push add dec add dec lea sub icebp (bad) dec sbb xchg or ds dec out mov (bad) jg lret inc test movb jns inc xchg lea jbe adc call jno inc rcll cwtl mov mov call jmp call push and fsubs subb or arpl inc dec in push inc adc mov sub add int3 (bad) add ja xchg (bad) cltd mov add cmp enter inc leave stos jno adc and or pop jno js pusha inc mov (bad) fidivr and cmp ja xchg ret mov mov call mov or (bad) jbe popa dec jo adc jnp or xchg roll lods (bad) add mov fsub jle enter fildl add rorl int sbb ss sub fadd or (bad) je aaa adc and jnp sbb mov lea inc (bad) stc (bad) pushl movzbl mov jmp mov inc mov push addl (bad) inc add add jge call add adc jne or xchg stc mov lods lea pop jb nop add lret inc cmp add sub in mov mov dec int or xor ret push xchg stos or xchg sbb mov xchg sbb pusha imul mov jmp sub sti push sub arpl cmp sub int3 cmp idiv pop xchg dec mov dec lea jmp (bad) pop pop mov sti fistpl dec mov dec lea outsb ljmp mov cmp pop add mov pop iret fisttp mov dec lea mov add mov int3 aad jg dec mov dec lea and js out and dec mov and repz jge stc and out ret das pop xor fcompl sbb xchg add cltd fwait inc dec push cld xchg icebp ret pop mov inc andl ja add and and dec add fildl xchg xchg rcr mov rorl icebp aaa adc inc and call orl dec sub fimull icebp dec sub adc dec sub pusha add sub out loopne mov dec mov dec mov dec mov (bad) je push call dec mov dec cmp dec cmovbe jmp nop dec test nop loopne (bad) mov mov pop sub jmp test je sbb enter ret fcmovb incl mov nop mov inc icebp andl mov dec mov dec (bad) imul hlt out decl in test je in cmp dec cmovbe (bad) (bad) inc jmp nop dec lea inc cmp je dec mov dec cmp jne or adc cs pxor or adc xchg clc xchg push dec mov add add (bad) scas inc outsl call push and jns cmp je or ja lds dec pop loope add bound add dec cmc rclb sbb push aas adc out add movsbl jmp cwtl bound hlt out icebp pop push jo sidtl inc add (bad) aas push and mov dec cmp jb gs dec mov call xorl push cmp cmp inc adc ss jae adc outsl pusha xor dec cmp dec cmova pop mov (bad) jmp cmp adc dec or xor daa xor xor sbb or das (bad) call add mov xor cmp je adc sub push (bad) popa or das inc mov das dec outsb sub inc loope inc mov jg ret cmp jno das cmp shrb jae sbb hlt sbb enter fstp hlt shll rorb cmp jae inc cmp or and inc add dec add sbb sub decw aas push mov jae dec mov jae leave clc pop jecxz add push dec lea call jg sub inc call push and inc adc call lahf lods sub add push call ljmp sbb jnp (bad) sbb std mov rorb adc pop push fnstenv xor sarl dec pop gs je dec add std fist dec mov dec mov call inc jb jl movzbl inc mov arpl dec fadd and adc or jbe add shr (bad) jg arpl sahf xchg add out sbb mov inc clc sbb daa call roll cmovae std pop add and inc add (bad) (bad) (bad) jg loop lea dec sub inc movsbl dec cmp dec lea ja inc or cmp fmull loope mov jne jmp add aaa loopne mov dec mov call dec (bad) hlt mov dec xor ret ja dec add je inc sarl js mov jne test adcl dec and jg test and or sbb (bad) jae dec sub mov out mov in push nop ret (bad) ja test dec cmovne and insl aas adc dec mov pusha mov jnp cltd jnp mov pop pcmpgtd sub aas cmpl sete mov enter dec and setae dec cmp ja dec je inc sbb sub popa cltd adc or mov sbb dec lea jne stos sbb lods faddp sbb or leave add daa adc aas xor orl xchg and pop pop nop dec scas fistpll cmp rcl push push mov dec mov fbstp outsb lret mov ja call movsb aas and dec lea insb add adc mov fild and dec outsl out jbe mov push pop mov (bad) dec cmp inc inc pop sbb pop punpckhbw mov call jne dec sub or or rorl sbb jg or inc popa add jno (bad) mov inc add fucomip out (bad) scas or mov dec mov arpl fisub test or or or mov sbb mov mov rorb cld mov fidivl dec sub mov dec call jns dec mov movsb push mov jl jne aam jge lret fisttp imul push dec and mull movq dec imul push sbb jmp pushf scas std loope (bad) pcmpeqb dec adc fidivl jmp (bad) loopne repz ret mov ret dec xor out mov (bad) call in mov adc mov cltd rol dec push cmp add test xchg out xchg setp ret and ret lcall ror jp inc and sub adc ja dec lock loope inc dec cmp ja xor sub dec cmp test call pop jne dec sbb or pop push adc call imul pushf stos jne push cltd jnp icebp mov cmpsb mov out (bad) call (bad) push xchg dec dec iret ljmp jb js dec mov dec aam sbb push cmp call nop adc sub jae pop scas nop lock pop sbb sub dec mov xor pop or add dec adc adc add mov or pop cld cmpl lea call cmc jg inc mov dec mov dec mov call sbb stos sbb push xadd test jle mov xor sub call lds aam leave adc dec lea lea call clc push call jg or dec mov cmp ja dec mov inc or inc adc mov and inc lahf pop dec mov or mov lock nop ret pop xor add dec mov stos add jae mov sub cmp rol loopne mov movl cmp loop fisttp push es add cmp or fcoml inc jg push pop dec loop add push dec push pop cwtl add or dec pop decl fwait push inc jg xchg sti pushl cmp ret sub mov dec cmp jae dec mov jmp out stos stos (bad) aam sti je inc fstps or decb (bad) mov or roll push add sbb pop das out sbb stos push mov movl dec outsb dec ja call int3 adc xor cs das xchg dec cmpl add dec sti ret inc aas sbb sbb dec mov cmp das movsbl add add pop xchg das xchg dec and loopne int3 inc rorb cmpsb add add sbb adc aas xchg xchg sub dec inc loope mov jne jmp bndstx bound or inc sbbl aas cwtl (bad) jg cmovno jae dec mov inc cmp test incl dec mov pusha loop cmpsb jae dec pop (bad) ds xchg shll mov mov mov dec push jnp (bad) xchg mov pop xchg mov add add cmp ja fmull repnz add aad inc insl sbb jg js pop ret movzbl mov jbe arpl xchg lock rep flds sti fld1 sub or call pusha and (bad) nop add or mov fsubl add rol (bad) mov dec lea or dec lea dec cmp ja in and xor mov xor mov mov ds jo and clc push add add scas out push jmp push ficom push rcll psubd xor in mov xor ret das or mov mov out iret inc inc dec or push pop loop cmpl inc orb loopne adc inc out xchg sub pop jo and ja in movl in pop sbb pushf push out sbb or mov decl out dec xor (bad) jmp cmp pop loope sub dec add arpl add bound inc sub cli ja (bad) daa or nop dec mov out dec cmp ja dec push loope ds or pop loope lea or cmp jle xchg imul movsb sti jg call dec mov sbb fsubr push enter pop xchg xor mov incb aam pusha test adc pop inc ja xor and insl mov aas add or mov fsubr clc jge xor push dec mov mov loopne pop cmp fnstenv mov lock bndldx fmuls (bad) dec cmp sbbb psubq in sysret cmp test mov shlb call stos lahf pop sahf push daa mov pusha fld1 push movsb add insl pop dec (bad) add stos mov cmpsl push xor push add pop or jg mov mov call pushf or adc cwtl popa and call dec mov and arpl roll xor (bad) jge rorl adc and fadds outsb stos xchg inc mov or mov inc add movups dec cmp ja cmp or (bad) imul inc or xlat cmp scas add jo lods daa mov sbb add mov outsl inc inc imul popa (bad) rcll add dec lea or pop mov lret jo dec cmp bswap mov xor mov (bad) jne gs jns sti mov pop cld add add cmp mov ret xchg cmp or and or lcall fs sub add out pop jmp add and pop push or (bad) jmp and mov xor cmpb je (bad) (bad) out dec mov cmp sete dec add call subl stos dec nop jl mov loope pushf xor mov cmovge ret nop test in nop maxps dec mov mov lcall jle inc mov call add xor push cmpsb xchg jge inc out call mov xor call (bad) ja test and cmp mov pop adc push call rorl mov adc movb and ret inc icebp bound icebp mov jmp mov mov dec mov inc mov and call lods sti movsl (bad) dec addr16 jne dec or push aas (bad) sbb leave xchg cmp fdivrp jmp movzbl mov jmp outsb iret jbe fild dec iret je dec test je cli dec mov sbb enter mov sbb orl outsl pop roll mov sub jmp fdivs popf and xchg cmp jg inc sahf add imul icebp jg adc nop dec sub dec cmp je xor dec dec add nop jmp add pop pop jae je enter adc icebp incl cmp jb daa sub ret mov aas push loope in push popf jnp or les and out insb lds rolb rorb ja fxch dec sub aas inc in fcoms pop or rorl mov je aad call cli notl insl pop pop pop pop dec lock mov jbe pop push xchg mov jo clc leave jg pop and dec dec (bad) mov mov dec add addr16 lea icebp je arpl ljmp fcos xor mov dec mov cmpsl les jmp or sub push xchg inc sbb xor or or cmpsl add insb jbe rol roll jae cmp iret and xor aaa in in add pop jmp shr pop adc das in jecxz sarb pop lock add icebp or lahf lea inc adc bound xsave loopne add out ja inc inc adc add inc out adc sarb mov sbb add sub pop mov iret sub dec mov dec add push std pop cltd mov call ja jmp or xor push sbb inc mov mov push fisubl and dec mov inc movb call (bad) fisttp mov sbb (bad) js lock cmp (bad) (bad) lcall jns push dec cmp dec lea jbe dec lea dec cmp dec cmovb dec lea adc sub dec cmp incl (bad) jge pop dec add pcmpeqd lret dec cmp dec cmova rcr mov and mov subl pusha xor out push push bound aas into dec mov pop jae or mov call add in jnp das mov rorl xchg pop sub call mov lods and mov inc mov or or inc add add clc inc sbb jns adc outsl jnp sub int roll inc fmul add jmp lahf sbbl mov adc dec sub into inc flds mov jae dec sar jo sub aad mov jne add ja mov fmull ret adc cltd loope fisttp arpl cli sbb dec pop sub rorl in sub push rorl jge xchg dec push jne mov inc push (bad) push call add dec stos (bad) mov bt mov mov push mov je mov pop dec sbb addr16 and out (bad) arpl xor je clc outsb test and pusha sub dec xor test aaa ja xchg jbe iret jb mov call cmp jbe pop mov inc hlt jo loop or push loope dec (bad) in dec call add mov push mov sbb mov ret adc jbe lahf mov call lahf push push stos (bad) pusha jg jmp das sub cli sbbl add jl mov loope gs xchg xchg pop (bad) out (bad) dec inc dec test je out jns (bad) dec cmp jbe sbb mov push push movsl or cmp jne lock int3 loope cmp cmp xchg push or scas mov lret out orl pusha xor (bad) cmp add push fmuls xchg scas cmpb ret dec cmp jp enter sbb fisttp jns jae adc loope icebp stc orl cmpsl addr16 mov in dec add scas sti ljmp stc push (bad) cmp rorb cli arpl call in push orl call add std dec mov dec mov lea jmp adc mov add or mov scas xorb sub (bad) aas inc icebp or xlat mov fmuls (bad) jb or scas sub cmp sahf mov push in add inc mov xchg xor cmp test (bad) mov mov call cs push jge in call call push dec mov cs jne orb pop adc adc jae popf pop (bad) lcall push insb cmp lret aad mov dec cmp dec mov dec cli mov ljmp lret rcrl mov jbe je and inc cwtl sahf jmp neg ds mov loope add loopne sub ja (bad) (bad) ja incb je rorb insb repz or fldl xchg movl movsb jno xor and loop aad loope sbb cs das inc nopl mov mov xlat dec sub pop in adc xor cld mov cmpsb xor daa mov dec lea arpl icebp ljmp (bad) int push stc jle dec mov add (bad) mov das jbe xchg mov (bad) jmp into arpl cld inc imul adc push cmp (bad) call sub dec cmp xadd (bad) ja jecxz add push out mov dec add dec mov call fcomps stos add lahf jo sbb jno push pop cmp and popa mov or out mov iret cmc push pop inc decl dec sub dec mov dec mov jmp adc cmp lock dec cmp or push or xchg test arpl cli xchg jg adc cmp dec mov xor push xor pop sarb cmp mov (bad) sti lahf xor or pop insb inc sbb inc sub repnz pop pop pop sbb push xchg inc aad inc lret dec ret add decl int xchg lcall (bad) ja dec orl enter cmp jbe mov jae inc pushf insl call sbb stc mov jg sar dec sub psrlw lds dec lea dec add dec xorb lea lret hlt jb mov je out insb add or out sbb and int je dec push leave call loope cmp cmc cmp ja dec je dec test jne and dec incb sub data16 je call push lcall fsubrs bound mov jmp setns fdivs and fwait xor fsubrl or (bad) mov inc jbe adc call mov inc loopne mov dec sbb pop pop fdivrs xchg adc in jo movsb cmp cmp call adc mov xchg or dec mov dec mov pop dec sub (bad) dec cld jg dec cmova dec cmp ja dec lea sub ds cltd mov in pusha xor shr pop cmp cs xchg dec iret leave dec icebp rcr lret adc lock rclb dec rcll out leave call and mov mov out dec pop iret dec pop sub fs cmp test sub push inc fwait outsl dec mov incl jl test cmp xchg shrb rclb mov jmp pop dec sub sub jno imul push call shrb pop je mov add repz (bad) call dec lcall cmp add mov test js jmp inc cmpsb insb dec fwait dec sub xorb rclb dec sub jmp loope add loopne push xor dec sbb icebp or call repnz sub and dec sub stc cmp push rorl call mov add outsb enter adc sti fildll adc mov in cmp dec mov or or call test pop mov cs or pop out inc loopne add fistp dec mov jne mov add adc dec mov push jne mov mov int3 or sub push lock push jg ret and inc and inc out push lock xor stos sub int fldl lock je mov inc dec popf arpl nop aas jo loop sub dec mov popf dec add test clc cmp ja fsubrl sub dec mov pop dec sub dec add dec cmp ja jb mov or or xor adc push push call adc dec (bad) decl movsb jg dec lea dec lea dec cmp ja jmp int3 std dec sub dec mov cmp call test mov adc dec sub fistpll jmp adc and dec mov dec cld lea dec add (bad) jb dec dec add sub sub dec jle push sarl lea inc dec scas xor mov int3 cltd sahf lods ljmp xor mov inc xadd sbb inc and jg push cmpsb call add sub inc adc inc lods test xchg test (bad) push push mov or out loopne push xor dec and dec mov in adcl fld1 mov jle mov idiv call dec loop scas jg inc lahf aas dec mov lahf push dec mov dec sbb mov enter or dec cmp ja dec lea inc push pop and pop ja jg adc xlat out movsb dec mov call add scas popl add rorb in fdivl push (bad) ja inc mov push sub and mov add mov shr push add adc (bad) in jae push lock jp push call cmp dec cmovb ds and lock call mov push sbb jae loopne add sbb sub xor pusha call fdiv movsl push push pop or aas mov push jo inc paddsw arpl sbb lea inc loopne test xchg or call cmp je dec test lcall mov stos sub jmp sub inc mov jg or mov dec mov push fidiv out js mov dec (bad) fwait loopne add xor sub sub fidivr ja mov mov add das dec mov call (bad) jg cmp sbb cmp dec mov or inc out jo jae mov rclb je in enter lea dec add dec add dec out mov and and test sbb and inc idivl sub add push pop (bad) int (bad) lcall dec lea mov rcl (bad) fnstenv fcompl pop jg xorb lods or je dec cmp je (bad) cmpsb push ja dec add dec fsubrl dec lea je mov cmp sbb jb gs add lcall inc mov ja jge arpl dec cmp ja sub call xorb mov lahf inc mov sbb jg call lock test lods aas mov outsb mov xor call or (bad) hlt xor xor ficom dec mov orl push xchg imul aas cmp jbe in jbe flds xlat dec push and and adc dec add and jmp mov iret add into call sub xor or adc neg sub outsb cmpsl es iret push push xor inc inc mov push into and es adc addl shrl pop cltd mov pop xor cmp mov add sub mov or mov cmpsb or dec add or inc push or (bad) call add and leave mov mov lret scas dec add dec ss jo rcrl pop xchg or sbb mov leave pop cltd pop fildl jnp mov push pusha pop scas scas imul rorb jnp aas jae pusha out or mov cmp sbb sbb add aas bound dec mov add rcll loope pop cli xlat push pop scas mov pop rorb enter pop mov and dec mov push xchg pop imul rorl (bad) cmp ror nop insb xchg das and movsb mov test add cs mov dec das jae dec and xorl jo jge mov mov jmp out lock jg jbe adc inc stos mov cmp push cmpb sub (bad) xchg or cltd pop in xchg sbb ds and lret or into nop in mov pop dec movsb add ret push das sbbl add jecxz inc mov (bad) das lret mov xchg into maxps fldenv aas pop sbb gs out push push das daa fwait cltd rcr xor ja nop clc or or fcoml aaa cli jle ret mov cli dec xchg sub out add mov test ss iret fidivrl or xchg sub dec aam or pop (bad) adc pop pop add movsbl adc push addr16 call sbb out inc ret jno sub pop shr daa add sub das pop jae pmuludq mov pushf imul pop add scas popa and push das sub stc ret outsb mov das jb mov vcomisd je sbb inc call sbb sub sar cmpsb decl and add lret dec mov call dec mov loop jbe cmpsb pop mov mov xchg cmp jmp mov subl lea dec add dec mov call stos mov cmp inc je call stos mov sbb dec jae,pt cmpsl cmp inc jmp adc and add out jge dec push shll scas fsubl jnp push cmp icebp call call call sti pushf jae loopne leave jl pop xor arpl adc repnz push or aad dec mov es call sub sbb mov mov (bad) popa (bad) sub test mov jbe dec addr16 cmp fstpl mov fmull sub lea into jle iret jmp fdivrl dec nop ljmp pusha inc push sub pop add add push sub aas adc int3 vmovaps cmp dec sub (bad) das call call pusha mov add mov add insb ss sub enter fsubp test frstor shrl mov or cmp fsubr ljmp jmp pop les cvttps2pi sbb jae ja pop cmpsb leave pop add and sbb xlat or rcr adc mov dec lea lret cld cmpsb sti out test adc adc or dec mov dec movl add movb mov dec mov push sbb xor jmp ja roll shlb xchg adc inc (bad) dec mov pop dec mov dec add jmp push addr16 movsb leave xor aaa les add inc adc pop xor movsb (bad) nop dec sbb js and ret shr mov shrl stos jmp enter mov dec lea lcall je dec cmp je dec mov dec mov dec test dec mov dec pushf std push push pop adc mov dec mov dec movl add sbb cmp jp mov xchg add jmp mov xchg rcll xchg adc es fisttp jmp pushf add add push sti push push inc xor pop pop xchg xchg or das lea neg sub outsl lea push rcr dec call push les add sub jmp ret daa out scas adc mov dec mov into inc pop dec jl fcompl ret pop (bad) cmp ret fldlg2 scas out loopne neg cmp add adc (bad) xor or bound and jae lea in lret pop (bad) sub pop (bad) fnstenv mov jmp rclb mov cmp arpl call gs mov mov decl pop nopl mov mov shr xor (bad) (bad) (bad) ljmp mov insb add mov dec add dec cmp jne dec movl or pop pop ret dec mov aam inc xor adc lcall cmpsb add (bad) incl je fsubr call cmp je fistpll or and lock shr das mov dec or call mov jne cpuid cmp jne test jne dec (bad) fucomp (bad) cmp pop push mov call jbe outsl ja fdivl adc xor cmp dec mov call adc jl popf adc ja add setl bound cmp mov je dec notl popf mov xor jns and jl (bad) push sbb cmpsb ja fld1 inc xor sarb ljmp mov sub sbb sbb mov cmp mov push or adc push es mov test pop mov cmp mov sub mov das mov fnstcw addr16 int loop sbb ret sti jecxz push pop dec mov in out add loopne repz bound in lea pop nop pop add pop aas notb sub dec mov iret ja divb pop mov mov dec (bad) hlt outsl sub shlb dec call add mov psraw sbb jmp add cmp pop inc pop mov cmp daa lods dec (bad) fimul mov xchg pop pop dec sub xchg adc cld dec or mov add sub jmp ljmp and jge push mov and add lcall das xor sub es adc outsl das dec mov and mov dec mov mov std cmpsb mov fmuls clc add je inc dec lea dec mov rorb xchg (bad) dec adc dec mov mov mov call lcallw push dec add dec sub dec add je (bad) out stos pop arpl fbstp mov dec xor (bad) (bad) (bad) jmp decl in lea dec sub dec cmp je dec mov dec mov dec mov daa jbe fucomp int3 sbb test cli shrl (bad) hlt fld1 rorl dec mov jbe mov call shlb adc lea ljmp mov call push pop pop dec push inc adc mov ret sti inc xor xor and add or pop adc mov sbb adc xchg jb test mov fmull or adc dec mov in (bad) sbb aaa popa mov inc repnz sbb fmull inc fs add sbb arpl dec sar pmulhw add xor ret shll or inc movzwl inc adc enter inc or pusha add sub or push sbb pusha add fcoms dec xchg jne adc pop addl sub add xchg mov addb dec mov dec mov dec mov dec mov stos mov push rcrb cli mov incl mov dec sub sar dec cmp ja dec cmp sbb adc lock add dec mov inc sub sub add (bad) decl (bad) je dec test js ja inc jne fdivr sub (bad) cmp loop insb bound push or test lahf jmp call into mov jmp lcall andl dec cmp jne dec cmp je ret fdivrl shr out add jmp sbbb jmp jg pop push shr mov (bad) out out out mov outsl mov dec sub dec add push je ja jmp call mov jmp ja rorl sbb out dec inc mov add pop sbb jb dec or cmp jg dec dec cmp ja add adc decb movb decl xor je dec mov dec cmp jb sub cmp dec sub dec cmp inc setne dec sub (bad) (bad) push setne inc and dec cmp jae inc test je dec cmp dec lea dec lea je ja dec mov pop cmp mov out mov and lahf dec test je ja xchg test test popf push inc mov bound imul add add dec mov dec inc (bad) ja cmp mov bound dec or decl dec xorl or mov mov cwtl fwait int3 inc cmpsl adc das pop sub scas test dec lea dec adc (bad) jae mov add dec cmp ja adc xor test sbb ret (bad) jmp aas out mov call jmp dec mov call mov push adc mov add fistl mov adc movsb inc in mov dec arpl int3 cmc les inc dec push inc add sub in add je add fwait xchg or xchg aas aaa dec sub out (bad) pop jnp dec test je inc orl je rorb jmp dec fisttpll mov jmp jae or mov jmp dec lea call dec adc fs sqrtps dec sub inc popa scas and lahf outsl lret sub cli cmove mov rorb push dec mov fidivl sub mov fistl xor iret dec bound add add call inc mov lahf xor push (bad) cltd dec inc pop inc int xor call dec sbb adc xchg mov add dec sub dec cmp lock popf decb pop and ja mov jo adc jne fisttp inc ljmp pop ret mov in sub loope lea outsl repz or jne mov jle push dec mov (bad) jno jge push mov test jle xor sub sub push lock dec mov jne out xchg lock or dec mov or add (bad) je dec test jne or les orl jmp movq or and loopne adc adc in sbb sub inc das xor inc mov dec mov jo or rol aas jne and inc add xor add nop outsb ret sbb mov out push and mov outsb sbb sbb outsl gs mov inc mov push loop push xchg jo roll xchg or test mov dec push mov scas lret cmp je push dec cmp push decb xor call repz add cmpl ds add mov aaa or mov pop or aas or (bad) jg add dec mov dec sub dec cmp ja (bad) std mov lea dec sub mov dec cmp jle adc (bad) (bad) (bad) cmp jb dec sub dec sub je dec cmp je dec add dec lea mov imul aam sbb pusha cmp cli in and jl (bad) mov outsb xor pop sarl cltd or loop pop popl out fnstenv xor addr16 adc or adc mov jmp ret insb loop and mov fisub or ret xor mov add lods cs stos xadd add jae mov add jl push dec mov cmp je dec mov stc dec mov dec lea xlat (bad) out ja je dec cmp dec mov je dec mov inc add pop adc inc aad xor cmp xchg mov ret sub aad pusha inc adc movq jbe (bad) pushf jmp dec mov mov xor push adc lahf aas and cmpb mov jmp dec push fdivr mov je lret dec mov dec mov je sub mov push sbb adc dec xchg je das and dec dec mov or fnsave ret (bad) push pop mov dec mov dec ds jmp mov cmp nopl mov mov push xor sbb fwait mov fwait (bad) out (bad) dec sub dec add dec cmp je lcall icebp dec mov call pop jg das dec mov (bad) stos lds add xor (bad) jg ja pushl je dec sub dec cmp dec cmovbe call icebp popa lret arpl jno es jmp and std iret and push push add dec lea pop ret cmpsl pop lahf iret inc cld outsl (bad) clc rorl (bad) call dec and cwtl pop dec cmp push or enter negb jmp icebp sti lea mov out xchg push xor inc sbb ja ss mov xor call jg xor sbb aas fs mov dec leave fldl hlt dec lea cmp cs cmp js paddd in or cmpsb dec or push jbe stos sub cmp rorl push or xor cmp aad jno jg inc stos aaa push aad out mov orl add std decl cmp inc and dec mov xor imul test sub pop (bad) push sbb sub xchg pop call sub sbb add nop adc das je push std sbb or cmp ret xchg cmp lret sbb push (bad) jno aas dec and xor ret xchg sbb xor mov stos mov or jb cmovno iret sub sub dec scas cltd iret daa sub test adc cmp mov and or clc (bad) or in (bad) decl adc jecxz mov mov (bad) hlt push inc out jge insb icebp incl cmp fldl push adc shr bound mov movq dec adc mov call in and or ja pop dec mov pop popf sbb xchg mov or roll mov xor fistpl dec push (bad) push jbe call mov movsl adc lock popf stos adcl pushf dec pop nop jle push cmpsl aad push aas es jge mov or mov and call ja cmp xchg aas sub pop or jp out or push dec mov imul fiaddl loop add orb inc and (bad) (bad) out ja jmp lods pop or call xor or out ret and pop dec mov inc or ret jp mov imul dec add inc add or shll out pop push xchg and sahf jg push adc and jne push ffree add xlat insl into adc popa xor popf sarl popa push ret js les xchg cmp nop add stc inc mov cli std call pop out sub or push inc mov dec sub mov dec mov dec sub mov cmova dec cmp mov and shr mov adc pop int3 jo adc call ja inc mov push negl sub dec cltd jne cwtl mov pop cmp add mov mov adc stc in (bad) cmp mov push mov dec and out push hlt ja sub int lods clc sbb (bad) lahf jae mov dec sub dec sub dec test xor dec and jge cmp dec leave ja dec adc pusha dec mov lods ret xlat out enter call or adc in (bad) adc lea adc fsubrs fs push cmp mov sub shll aaa adc fwait jecxz fsts xor and cmp sbb ss scas jnp adc pop rcrl dec lods dec outsb (bad) enter mov sbb mov arpl adc adc sbb add xor icebp cmp jl bswap dec mov cld jo or sbb pushf (bad) dec or aaa lock cmp dec cmovbe nop dec mov push inc mov xor fisubrl call loop sbbb xchg adc ja dec inc call and test push mov dec push or out dec movb inc inc push shll or dec mov loopne inc call xor test dec mull xchg btl loope lock push outsb fwait hlt cmp dec setge dec cmp ja shll decl dec cmp (bad) inc fidivl std jne clc mov jbe adc shll jne mov jne int3 jno xor out push leave jo or insb sbb ss pop mov and and cmp push in mov push loopne fstpl rorl inc outsl mov dec cmp lcall push lret cmp jae inc push orl scas mov cli emms xor sub xor dec lea jle fisttpll test hlt mov call xor rcr sbb call ja mov dec mov test jne dec cmp pop lock divl scas cmp mov add pop (bad) (bad) fidivl jge out or (bad) lar jmp aas dec mov dec push jne mov jmp adc sahf inc mov lock add fdivs fdivr pop in pop dec lea dec add dec add int push rorb call inc or jo pop pop mov in cmp add cmp or jge pop push test xor decl loopne sahf lea dec lea dec cmp (bad) cmp ja sbb xchg and loopne aaa mov in out add int3 es mov clc dec rcll pop fucomip mov call xchg call (bad) out call out mov je dec mov dec lea mov mov clc mov out test dec cmp jb cmp je or (bad) imul inc push decb push add mov jnp jmp jb dec mov call or mov dec cmp in jecxz sbb les push lock jmp aas aas push mov icebp ja popf repnz jmp (bad) jmp popa idiv test js dec cmp jbe dec add pop jae sbb sbb add jmp insb push dec roll xchg and cmp seto add cmpb jmp sgdtl call mov (bad) int3 or gs and nop dec fwait aaa shlb dec mov push dec lea sbb lock les mov call sub popa lods mov dec sub dec cmp sub inc clc xor inc adc loopne pop dec mov je mov test sbb dec inc mov dec test je dec test outsl sub dec lea je outsb dec dec mov ret jnp call pop add pushf or lea dec add dec emms lods sub ljmp fisubl or int push sub loope fs pop cmp (bad) jnp pop ret fbld jo imul ds aas add lcall ret xor add mov repnz outsl (bad) lock call mov jno fcoml mov xor jbe cmp jle add fildl and cmc inc xor ja dec loopne ret call add inc cli decl add jnp movb mov inc mov dec mov in dec dec cmp pop loope addl and mov scas mov addb das pop mov movsb outsb outsl xor mov adc in pop cli xorl (bad) out cmp dec lea push sub fs or jbe icebp inc adc and inc lds (bad) aas sbbb stos inc xchg dec pop mov inc aam sbb dec loope add mov (bad) adc sub decl (bad) ja dec lea dec mov lock lea or lds mov mov add add push dec (bad) cmp daa dec enter pop push movsl in adc sub sti fmul and insb insb jmp xchg xor mov std ds jbe push xchg lea jno ret aaa ret mov idivl add (bad) dec adc add and mov jno or inc pop nop sub ret adc loopne dec inc add add inc dec fldenv ucomiss aas push inc or mov pusha rorl das test nop pop (bad) setne (bad) cmp adc or das pop test mov cmp xchg aad push pop nop push dec jmp leave pusha arpl inc dec test or btr (bad) cmp aaa dec outsl pop (bad) loope (bad) loope icebp loop outsl jmp notb icebp dec mov sub or or dec jne add sbbl aaa roll push bound sarl and push adc mov or mov cmp call movl xorl sbb push icebp stos sub es dec nopl ror and jno add notb add pop or adc adc xchg jp dec daa sbb dec bswap sub push dec fs test sbb ss lea adc fisttp mov jmp xor push into lret sbb ss cmpl cld inc dec mov mov fcmovnbe mov enter jae dec push loop mov into jbe rol fnop loope inc and call dec mov inc pusha ljmp dec mov sbb je adc pop pop stos lahf and or fcoms je test rcl sbb mov test sbb subb rolb and mov push je test push loope fidiv lds cpuid dec (bad) ja mov je dec mov pushl mov push ret divb mov jg sub loopne mov icebp call ja addl pop adc call (bad) fbstp dec mov stc call (bad) dec mov jne lock out mov call mov dec mov loope mov icebp mov jne push jmp rcl (bad) dec mov jne out outsl and jns call ret addr16 jl and test sub adc aaa push fistpl test pop sti fadds popa mov imul dec mov jne xor adc enter push dec mov dec mov (bad) jne scas call and cmp sti inc or or mov dec or dec adc xchg mov mov dec mov cmp je cmp xor mov sub adc flds dec mov add cmp jge shlb das pop adc neg ja or push fnsave cmp mov fisubl inc mov lahf adc push and and pop mov jnp mov test mov add jns adc dec out (bad) sbb lahf dec lea push daa aas or mov adc cmp aas xor dec sub jmp popf adc data16 test push stos jmp pop sub mov or std inc decb out (bad) (bad) (bad) decl dec lea dec mov inc mov inc and dec mov dec shr dec add dec rorl out (bad) (bad) (bad) jg mov nop dec lea dec lea dec lea dec lea inc movzwl dec lea movq (bad) pushl cmp jbe dec cmp mov jle fsubr lret dec cmp jmp mov jg fwait je dec lea dec mov dec loop (bad) fild dec add dec sar dec cmp jle inc movzwl inc cmp ja jmp out (bad) outsb adc inc adc dec mov dec mov pop out pop cld (bad) out in dec and lods addl out aas dec add dec sar add call inc mov mov test nopl decb loopne dec add popf jmp sbb inc jmp (bad) fstp mov cmpsl jne dec lea pop imul mov inc dec mov jmp inc add jmp mov dec mov xchg inc push or aas dec cmp jle std dec mov jmp dec jne dec cmp dec mov jle push dec mov dec int add jg add dec shl dec lea dec add lea dec lea fisttpll sbb inc stos mov dec mov iret ja mov sub pop dec mov jg popf jne push cwtl adc dec lea dec mov sbb push ja aad test dec lea lock insb dec repz lea enter cld pop dec add test dec mov inc jnp xor lea sub incl rorl stc dec mov dec cmp ja jmp fistpll mov sub scas out sub sub jge sbb mov jbe mov dec shl jae xor mov dec je ret mov dec sub dec add dec sar into mov aas imul jg lea roll dec lea fild add add lds dec sub dec mov inc test pop clc jmp fisttpll adc cli lock jbe sbb test adc loop shr test push and nop test cli add or push mov jo fistpll mov je adc (bad) ja (bad) sti add jmp mov decb add cmp aas add cmp jae mov lods add rorl jbe add mov cmp dec mov iret xor call aad aas add (bad) jbe dec lea (bad) out ja sbb sub push add ja dec cmp jae data16 addr16 inc mov add aas push push add jmp nop (bad) aas insb addr16 and aas dec cmp dec cmovb dec cmovae inc cli out in decl inc ljmp sub fnstenv popf dec test jne inc dec lea dec mov dec sub dec mov push dec cmp (bad) sti stc add mov decb dec scas add dec sar dec mov fistp out je dec mov movb add in add dec push cld mov add fisttp add (bad) incb pop adc push mov mov addl fs fdivr jmp sbb aaa clc cli push ret lods dec aaa pop int3 or hlt das out ret call test idiv lcall aam inc push inc mov call fsubr lea adc push int3 dec adc in inc sti cs mul in sbb dec sub pop je loop (bad) stc (bad) incl jno movsb sarb fdiv (bad) stos pop std (bad) jmp add movzwl mov mov adc inc adc fdivrp fs pushl lea dec cmp dec mov jne jmp dec dec cmp je (bad) (bad) or sub sub call dec add data16 fbstp mov sub movzwl mov fbstp lds jmp aas out dec mov addb decb inc push cmpsb test fucomp adc inc dec cmp jne lock cwtl inc rorl ret dec cmp (bad) lcall jns dec lea dec mov dec sub dec add dec and ja (bad) decb dec mov dec sub lods add push roll and xorb mov insl sbb push xchg aam sahf inc ja mov test inc rorb stc add stc add jecxz push je std dec add pop ja loop jb insl or jae sti xor mov xor sbb call pushf add and mov (bad) jecxz jbe add daa xchg lock (bad) pop add dec inc jns cmp test or into mov pop and dec sti or xchg cmpb notb xchg push and mov dec cs dec fldenv add fldenv jb sub and and or mov outsb or or rclb loope testb sbb adc test add pop dec mov les rorl mov sbb jmp mov sbb lret push hlt pop sub sbb add mov mov dec mov inc dec out inc pop pavgb mov aad push pop xchg orb fadds pop sub add punpcklwd dec mov dec mov dec lea call out sub sahf and sbb and and sti or sub xor or out dec sbb (bad) jne jmp das or insl sub dec mov jne das pop std cmc decl dec sbb sbb mov xor push sbb cmp dec cmove xchg push jno mov mov cmp or mov fnstcw and mov add mov or in xor das into clc or fs push ret call mov adc or (bad) mov call adc fwait add call mov lahf dec dec lea cmp push jb jns out ret cltd add dec mov xchg pop jo sar test jne jmp pop mov inc xor cmpl inc jo cmp xchg rolb cmp pop xor and inc adc inc sbb ret or or mov or xor setle dec adc mov roll mov fucomi add inc punpckhbw and leave inc cmp and mov mov dec jns (bad) fdivs dec fldcw inc mov call and aas dec xorl dec mov (bad) and xlat mov dec dec clc push arpl fsts pusha dec inc dec adc nop xchg sbb sbb (bad) or scas dec sbb (bad) mov or mov (bad) decl cli mov sti pop pushl cwtl cmp xor sbb or jge fbstp inc cmp roll push jnp jmp icebp call test sub xor enter pop das cltd dec dec fs adc push fisttpll in orl rcrb gs (bad) pop icebp call xchg or lea js pop insb nop xor xchg out fs dec push mov mov test dec mov pop aaa hlt jg mov dec mov call nop add dec add call imul sub dec lea dec mov dec leave and pushf cmc popa ds jmp inc stos mov ret call push lds and jecxz inc (bad) in sbb dec mov dec mov enter xchg sub dec cld je dec fnstenv xlat dec mov fimull cmp je out pop cmp je dec mov sbb mov jne push dec cmpl (bad) jne jmp pop pop dec mov dec mov sar out leave jne dec mov jmp dec mov dec mov adc add rorl sbb test pop dec (bad) out jp pop dec jl dec mov dec mov dec test dec mov je ja in adc or mov scas mov push cmpsb (bad) (bad) out es or dec mov inc mov inc mov inc mov mov outsb inc test inc (bad) jmp dec push nopl orb inc movl subl mov iret cmp adc cmp ss mov adc dec mov pusha sbb mov push je inc cmpl jne testb or shrb rcll bound decl mov dec cmp lahf scas jae out ds fs fwait test mov pop fstps dec mov test jne jae roll aam (bad) (bad) mov cmpsb lods out decb or pop or or lock cmp ds pushf adc das fistpl je push jne dec mov xor and rcrl gs xchg jne inc and inc push dec pop mov dec mov lea cwtl das inc aam cld adc pop dec xchg or inc ret pop mov inc mov into fst sbb or jno xchg rorb or jmp dec mov cmp sbb dec mov inc aas iret lock mov or dec test je xchg inc (bad) (bad) pop ret xchg dec mov adc xor inc pop out loop add dec xor push sbb into icebp jg pop pop sbb int out stos or pop cmp cmp pop jle lods mov inc inc in cmp jmp jmp cmp ja cmp insl (bad) jne jmp fimul jmp (bad) adc xchg cld mov mov mov jmp shrl loop xchg add pop cmp shr (bad) addr16 addr16 arpl sbb and aaa xchg dec enter mov popf jae jecxz ja dec xor or dec ficompl inc mov pop adc mov sbb je add repz xlat addr16 inc mov and or sbb js ficomp or je test je (bad) loope movsb adc jmp xor or ljmp fidivr test inc mov dec mov gs into lock jmp orl (bad) data16 pop sti sub clc or pop or add rol jmp ljmp loop (bad) jne dec jmp and mov sbb push jmp mov inc mov test divl mov (bad) sbb inc push add sbb test jge dec cmp rcl lock push addb jo das jl dec cmp je dec push inc fwait xor jle inc cs stos ret rorl cmpsb pop sbb push xor mov test jne pop fs imul add jne (bad) or add pop xor jns jae jne dec mov int3 push mov je sbb sbb fisubl dec jecxz cmovae pop lea dec cmp xchg (bad) sahf push int mov dec inc add xchg lock or xor xchg je cmpl jne jnp loope arpl or push sbb adc or (bad) das rorb inc dec mov push stos inc mov inc sbb cmp cmpsb push enter dec mov push aaa or jb lret hlt outsb aaa dec or cmpsl xor sub push adc dec sbb xorl aad cs mov or lret push rorl bound fcoms jmp fcoms dec dec or rolb adc outsl push jmp ret jg arpl das ljmp mov push sbb sbb cmp sti dec cmp je dec (bad) jg sbb out maxps nop aad jmp pop jg sbb repz or cmovns cmp xor sbb adc mov adc ja lahf (bad) xchg jne jb jmp scas pop js mov mov mov and jne sub push mov ret ret or sbb fisttp (bad) std addl jmp iret popf orl repz aas sbb scas jg incl lret dec mov dec mov dec lea aad dec lret dec cmp adc mov stos lcall adc dec mov jge ret mov testl ja xchg ljmp scas (bad) sub pop sbb mov jbe loope decl xor dec lea call rorl movb sbb jge pop gs and pop xor jns ss adc dec mov call xor push ja ret stc mov dec cmp je call les imul push and nop mov dec or aam or inc movsbl cs test outsb pop inc xor je lds adc xorl xor jg lea pop xchg call dec std pushl (bad) xor dec mov dec mov call add mov dec mov dec add call call pop fld1 push xchg and lahf repz cwtl add addb fldl2t sbb push ret add hlt (bad) sbb rorl lea loop pusha outsb into push adc orl call inc cmp pop (bad) mov pop jmp push lea pop xorl mov popl mov std cli xor mov pop fdivrs idiv call add push add sahf out mov in std ljmp or loop push enter mov mov pop jge push cmp fcomps jmp (bad) (bad) adc aas and rclb fst lea inc clc dec xor dec mov mov clc jmp xchg jne pop dec lea outsb insb fs jmp daa sbb or lock psubsw mov jmp das mov and lret mov (bad) fldl call dec test je and inc sub outsl call pop ficompl add shr (bad) sub sahf dec mov loop rorl fist ret jns add call add push add mov xor popa bound jp addr16 ljmp (bad) (bad) idivl dec and dec sub add repz stos xor and pop pop fisttp mov imulb mov cltd (bad) fnstcw shlb lea in (bad) sti and cmp js dec dec dec lea std mov lea or fisttpll test mov (bad) cwtl add lahf aas sbb dec add dec mov mov lea dec cmp jbe imul enter add inc mov enter ljmp lea inc cmovs mov fadds je dec mov cmp ficom jl call rcrb inc iret pop cmp out (bad) das sti out dec mov clc add call dec enter loopne jge jg push lcall fadds cs lock dec mov dec arpl jge push lock mov push xor cmpb shr xchg dec aad call testb dec lea hlt je dec mov add (bad) fidiv fsubr jle jbe and xor ljmp pop mov fld1 pop and incl pop outsb ret and ret call add dec inc adc xchg lea les subl adcb cmp push leave stos and arpl pop stc call les mov call (bad) je testb xchg mov pop push (bad) push add shr (bad) jg dec inc add dec lea inc mov jmp mov (bad) std (bad) call jmp pop das call outsb sbb cmpsb je dec and jmp (bad) jg ja mov test js sub je cmp je mov dec outsb sbb push mov inc aam ret jmp and pop mov sub sbb scas and (bad) in and jmp call ret data16 (bad) in mov or add jmp pop cld iret jmp and out mov sub cmp jb jmp jne in (bad) jmp ror mov sub aam cmpsb mov arpl mov movl dec mov inc call xchg fldl call mov sub inc inc push dec inc or fidivr add enter inc cmp jae lock add negl pop scas jge call sbb xor call out mov mov outsl jp scas jbe xchg lea fld1 inc pop fistl fld1 mov push pop inc int3 and loop iret icebp cs (bad) call out jb (bad) lods nop lock dec mov dec mov call inc push mov call movsb imul inc mov add iret faddp inc fld1 mov (bad) (bad) call aam or cmp xchg aas les call les movsb lahf hlt scas fwait cld or add push lret das sub xor out jle jp lods (bad) call adc (bad) idiv call movq out ss add or insb rorb ficomp fnstsw add sub sub out leave cmp mov and test dec data16 test jmp inc inc mov push call loope into ss mov dec ljmp (bad) cmc jmp adc pop push fsub push mov (bad) cmc decl ss xchg push dec in (bad) sbb call adc cmpl popf adcl add sub into cld or mov pusha add or mov cli mov (bad) out pop push call xor test jne call decl jnp jo xchg je in lahf dec imul fwait pop cld mov (bad) mov sti scas jg call add sub loop sub pop cld mov add pop leave std (bad) mov push sbb faddl stc mov jbe add dec mov push inc lea inc out push or fnstsw xchg sub pop inc xor add mov or fcoms rcll push inc and xor pop push pop mov out pop or call or dec adc mov push hlt sbb xchg hlt mov rorb mov call (bad) out or out sbb scas pop and orl inc sbbb and loope lods sub dec mov pop jmp (bad) push jae inc add lcall flds pop (bad) mov (bad) pop (bad) lds add add daa dec adc sub cmpsb nop aad adc jge in mov lock jo inc mov iret mov add pop and loopne pop sbb in fld scas pop push mov loopne dec das cwtl pop fsubs pop pusha pop mov add push int3 inc aam inc or mov mov or arpl add data16 pop scas pop add add cld and popf out or and mov sysret add sbb popa or outsl das (bad) outsl fadds and notb or sub sbb popa out xor mov cmp daa add sbb mul lds mov das rcrb in pusha pop inc pop (bad) mov sub rcrb or pop mov add sysret (bad) in test jge std add xor loope xchg test sbb lock pop js pusha or add mov or mov fldl jo iret adc cmpb and mov fildll add mov data16 adc jg sub insb add je insl add (bad) (bad) ljmp add imul jb outsl jb insb outsl add outsb outsb arpl (bad) (bad) (bad) ljmp je je insb add addr16 je jb popa fs push popa je out (bad) out add add jb gs bound outsb add js xor stos test pushl arpl je add cs xor jbe jb (bad) out outsl xor add es add outsl add addr16 addr16 (bad) out out xor outsl outsb push pop insb gs insb add pop arpl jb outsb je lahf or popa mov or addr16 pop leave nop gs adc fistpll jne jle int3 (bad) push add ror lcall (bad) lcall add popa jmp cmpsb imul rorl stos or mov push pxor pop (bad) pop xor add aas jnp xor call inc loope test (bad) jns push adc push mov inc and ret fsubl dec inc dec push push and arpl jbe fs jnp clc and imul sbb pop add dec dec push sbb pop xor cmp xor out mov gs or and sbb mov ja insl jb insl and jae add pop and sub mov (bad) xor sub inc je insb sub clc and mov and and insb idiv mov mov popa gs add push idivl xor insl or (bad) fnstcw out aaa or sub in jmp or add and and adc fdivs add and (bad) (bad) incl add imul sub push outsl outsb jb arpl cmp xor xor sub insl frstor outsl sbb insb (bad) adc (bad) popa jb insl jae cmp loopne jge add (bad) aas insb outsl bound je jb gs pop loopne pop and jmp jne insb imul into es pop add mov popa fs outsb outsw and push and scas jne jne adc test in sub outsb outsl outsb arpl sar popw into insb je aam outsb popa jne push xor jne and and and adc nop fidiv inc cmpsb gs and cs add cmp and mov es shrb arpl setnp fs push pushl jae jo test xorb adc or cwtl imul inc sbb dec push sbb rclb outsl int3 (bad) (bad) jmp xor outsl jb jae outsw jne and add decl lcall in (bad) or (bad) mov call pop (bad) lcall sub dec jmp add pop mov xchg or vmread xor dec add add jo jae add andl sar add outsb outsl ja std ret cmpsb ljmp add and jns je gs jo jns lahf mov inc sbb outsl je insl jne je lock pop push std bound insb insb outsl ja lcall fimul jns outsl (bad) jb jbe insb jne jae add or scas ja cmovnp jae outsb and outsb popa insl testl and push test gs std jg or daa arpl outsl outsb and je jb xchg mov xor insl add mov insl popa and and jge outsb das sbb pop fs popa jb popa jns gs gs sahf sti jg out xchg dec outsb arpl arpl gs imul incl pop jne gs popa jo and jae push cmpsl sbb das jae outsl addr16 dec js divb imul dec inc int3 sub daa dec arpl rcr (bad) popa arpl push sub mov out outsl dec jno xor xchg std adc insl popa jb gs pusha xchg gs jne fnsave jo jp and addr16 and jae (bad) popf loope outsl jb es jne insb gs data16 jo loope popf and outsb and lock sbb outsb and mov add push gs imul cmpsl fs dec mov lret call outsb jae arpl imul popa js xor push add psubsw jns push dec dec and std lahf movsb and (bad) add idiv loop idiv jb xor roll mov dec xlat xor daa xor and jae (bad) xor add sbb add int or mov mov addb (bad) sahf std push lcall inc or lock and and shr sbb xor cmpsb push sbb inc lahf xchg aaa dec rolb and ss xor or xlat fs or jae fs fs cltd fadd jae je call pushf dec inc push xchg and movzbl sti jg add mov insl and jne insl push pop (bad) neg daa (bad) or jne insl jae cmpsb lock mov and bound sbb jb xor jg xor arpl jo pop push fs das xchg xchg aas iret and ja ret pop adc or outsb imul jno outsl and and jo rorl or ja push (bad) popf xor xor jbe sbb push sbb push add push (bad) and shrl and add (bad) jmp gs jb arpl add das das add mov mov jo outsb imul and ficoml imul (bad) fcomps push jb and dec and sub jo cmpsl outsl xor insl jb insl test insl popa cld push cmpsb dec (bad) cs add outsl loopne or bound insb je cmp xor and xor aaa and imul adc and and popa (bad) (bad) ljmp js ss ss inc inc push sub or jne aam lds cld arpl jo outsl outsb fwait je or and add adc je sbb addb sbb incb popa (bad) mov inc cmpsb xlat sbb jb (bad) addr16 fdivrl and mov add (bad) idiv dec xor (bad) jne inc add cs (bad) xor rcrl add xor fs push and rclb insb insb add js dec or andl dec enter jo and (bad) daa and jae (bad) add and dec add mov loop inc mov cld pop lret mov xlat pop loop inc dec popf add jae sub outsb inc sub out add xchg syscall add test mov xchg pop xor repnz add call jb jb and ret sbbl test pop jo xor or test fsubs push imul pop push push in adc add push mov popa jbe bound imul cmpl jb fisubrl cwtl aas divb jo imul sarl insb lock sub sub add js arpl sub fdivl add outsb je xlat jb sbb dec in mov jb xor or (bad) popa data16 jae nop pop push gs fdivl cmp inc (bad) mov adc pop nop inc xchg push ret sub inc or adc shlb pop test jg pop xor roll or fdiv pop mov ds add ret in aas mov add aas scas pop aaa test jb add jnp ds pop or mov insb mov jg pop push sub inc push insb into pop fbstp and pop (bad) mov add outsb imul lock clc add sub and (bad) jmp jo sub out or sbb push lods aaa divb jecxz popa lahf inc (bad) incl adc arpl mov jg push push or sbb dec lahf in jae inc mov pusha dec and adcl aas fildll shrl jg xchg shrl arpl push pushf add cmp push (bad) aas je popa xchg aas test jmp mov aas popa cmp imul lods (bad) (bad) (bad) cmp cmp push cmp je push cmp jne dec cmp push insb cmp stos add ljmp push cmc mov pop dec push push dec dec dec push pop or push xor sub popa sub sub dec inc dec and inc cld mov fs jne je js movups sbb and sub test in cmp xor or outsl xchg and jb jb iret int dec femms cmp fdivrs push xor cmp inc in jp shll outsw jb fcos and cmp dec inc dec inc inc mulb mov dec imul (bad) jnp jo pop cmp push dec push inc xor adc je icebp dec test cmp neg sbb and gs and loope fsubr jbe popa jbe xor push rcr (bad) push jb (bad) xor popa jne outsl cmpsb insb arpl es mov outsb and pop aaa je fs jb outsb je jecxz ljmp sub cmp insb dec outsl jb adc fbstp jb xchg jnp sub cmp jns bound and imul sti movsl jne movsl (bad) adc and pop push pop arpl push out or inc mul ljmp gs sbb cli in mov (bad) fldl jae je jo outsl arpl jae sbb (bad) (bad) fbstp inc push push and jb sub sub insl popa jae and js push xor mov xor inc enter jmp out lds add xlat add and insb gs xor outsb test jnp ljmp (bad) pop adc mov adc and in fiadd test mov data16 xchg mov xor andl leave jo or mov aas dec inc ljmp xor std out shrl xor imul fimul pop add aas les pop arpl je insl and push xor lahf movsb push xchg ret jmp mov jne add stc xchg mov push arpl movsb lahf (bad) inc dec dec mov and mov and ljmp aad sbb inc sbb and (bad) insb lods ljmp pop insb and lods jle push lods popa xor out es adc jne and adc push sub mov mov lret and insl outsl fs lcall cmp or adc push push rorl popa jbe je test jb sub roll sub push jnp add sbb push sbb sub or fstpl xchg or (bad) fsubrl inc adc mov and inc and jb mov dec nop mov dec ret fisub ds jb push mov lds lret int3 and dec xor cmp int3 pusha push imul das sbb rorl stos cmp mov jb insl arpl fsubrl sbb js sub insb popa jns imul cmp cltd sub add and sbb sbb pop and inc or inc (bad) addr16 shrl cmp and sbb fdivl (bad) add jle hlt maxps insl and (bad) push inc push push mov daa movsl cmp mov (bad) clc das and and and das popf icebp insb pusha daa cmp insl push fs gs and insl dec scas adc fs aas xor jbe imul and sbb insl inc sub int3 mov and or insl push dec push inc inc inc push (bad) adc ss and daa lock and and insb popa into lock inc aas and int3 push fsubrs je fwait int and push dec push push andb call pop sbb arpl mull pop cmp dec pop nop add mov mov inc and inc inc fcmovb scas pop pop or jo arpl xchg pop and or enter ss rcrb (bad) (bad) sub and dec xor and push in dec inc das pop lods add pop subl and mov xor insb insb pop ss adc dec and jge cmp cmp sub enter xorb dec dec dec inc dec xor adc cmp xor adc flds xor and in (bad) pop mov (bad) popf add pop daa push daa jo pusha or loopne jmp add cmp push aas outsb das sbb mov jae jo (bad) push (bad) fisttp jae xor xor mul cmpsb xor cmp or sub ss dec das stc insl loopne cmp jbe data16 fwait mov cmp mov add sub (bad) ss test push dec adc movsb jb cmpsl add movsb mov lcall clc pop xor dec push add dec add arpl imul or add xlat jne add jb imul add or fiadd dec jne gs and ja (bad) jg xorl call jns outsl adc cvttps2pi (bad) (bad) bound jb jno imul fdivrs imul adc add insb inc gs xor or and push imul daa jne and and add cmp sbb xor xchg inc sarl and inc out mov sbb inc sbbb pop iret jno adc inc inc or cmp cwtl or add ljmp idivl dec ret ljmp lock mov fldl jl mov add outsl testb orb pop sbb jo or jae in add or fstpl jae push add jnp xor arpl add fsubs add outsl mov ja adcb scas or xchg add add (bad) (bad) (bad) incl add push (bad) xor movsl hlt xchg movsl xabort xchg test pop mov mov cltd (bad) (bad) (bad) (bad) out idivb lea pop or (bad) or mov ficom enter mov (bad) (bad) (bad) ficom cmp nop lock lock pop add add loopne,pn loopne test into push roll push out sub sub sbb mov cmpsb bound jl out lcall in pop mov mov lcall add mov pop mov inc rorb (bad) (bad) (bad) decl xchg out xchg out sarb adc mov es jg mov into inc leave inc pop leave (bad) (bad) (bad) decl sbb outsb das in das (bad) in inc mov test mov inc sbb sbb std (bad) (bad) (bad) lcall pusha and inc and fidivrl push push add add mov (bad) (bad) (bad) jmp fwait jbe pop in sub pop ret ret lds and sbb cmp jp (bad) (bad) (bad) (bad) cmp mov (bad) out pop out fcomps jle ret inc ret cld inc jle repz add icebp add (bad) (bad) push adcl rcrl in in pop push pop mov pop xor mov call stc loope or jmp scas xchg scas fist jae dec jae bound push (bad) (bad) (bad) jmp imul push aas sub sbb or adc xchg arpl push divb push xchg inc jmp gs (bad) (bad) incl jg pop loop pop popf xor sub sub aaa iret clc mov or adc adc (bad) (bad) (bad) decl das jmp mov pop mov push adc or and pop ss dec ss lods mov mov fwait (bad) (bad) (bad) lcall fistp cmp es es cmc mov dec jg dec int dec (bad) (bad) (bad) (bad) jg push mov ljmp sbb sbb cmp je mov (bad) (bad) (bad) lcall inc jb jb cs inc ja ja sub mov mov sub sub (bad) (bad) (bad) pushl mov pop movsb movsl add add movsb jbe xlat dec xlat in dec jbe adc popa mov (bad) pushl dec cli into jge fisttp push fstpl fstpl xchg jno mov lcall mov xchg mov mov cmc cmpsb mov imul add (bad) mov sub cltd sub inc loopne pusha mov (bad) (bad) (bad) inc and and pop jecxz cmp inc repnz sub sub in mov or mov (bad) incl inc lret lea jo jo fldenv scas fisttpll in jb in jns jns ficom jmp addr16 cwtl mov and and mov pop fimul adc mov insl imul mov sub dec jnp in sahf in in xlat cmp cmp push in xchg push lds xchg clc (bad) xlat bound xlat lcall push adc xchg adc bswap mov (bad) (bad) (bad) (bad) fnstenv adc leave adc add or or push add cbtw sbbl pop lock pushl js lock aad mov jecxz xchg jecxz mov pop repz incl sbb pop rcrb addb mov in jle aas and (bad) (bad) (bad) (bad) fistpll test dec fsub dec jo std or or add arpl jp jp fbld (bad) (bad) (bad) ljmp pop rcrl ja xor scas inc out arpl jo xor xor in (bad) (bad) dec sbb rcrl in out adc adc push std mov gs mov aam dec sbbl and adc xor es xor ret mov das jno das ret mov loopew xor enter push xor dec or mov gs cmp cmp xchg push push stc cmp (bad) (bad) lcall repnz popa popf (bad) popf jecxz cld jp leave inc leave hlt inc jp daa out lods out mov decl out xor sub sub out movsb xchg movsb xlat xchg out cmp mov sbb (bad) (bad) ljmp cwtl sbb daa rcrl sbbl data16 mov push (bad) (bad) (bad) call (bad) jle test push cmp out out stos cmp xchg sahf sbbl inc lret lret (bad) (bad) (bad) (bad) mov sub imul imul inc cmp push cmp cmpsl sub jns push jns mov cmpl sbb lods aaa lcall xchg dec cmp cmp fs (bad) (bad) lcall push fs rorb call and and push adc in (bad) fistl call push or sbb or cld mov mov insb dec mov imul lahf js pop out pop lahf mov lss popa outsb mov sub icebp cmpsb icebp xchg cmpsb les (bad) test jb cmp (bad) (bad) (bad) inc mull mov pop mov xchg aad push xor xor mov (bad) (bad) decl inc lds jmp jmp pop outsb ficompl ret scas mov add mov mov (bad) (bad) lcall fs icebp insl shrb rcrb xchg loopne fcomps (bad) mov stos mov lods (bad) (bad) (bad) (bad) mov cli lods repz or or pop repz mov and scas ljmp (bad) (bad) jge mov addr16 and sub sub sbb outsl or (bad) outsl lock (bad) (bad) pushl mov sti mov mov outsl dec pop lret xchg mov insb and jo cmp (bad) (bad) lcall icebp or push (bad) push out jae fs repz and and mov and jl call lret pushf call arpl xchg ljmp popa (bad) (bad) (bad) lcall jg jg fsubl pushf xchg xchg fwait xchg test stos nop stos fistl (bad) (bad) mov inc jl es les les sub stos in stos int3 nop jecxz fdivs fcoms decl syscall (bad) add add cmc add sbb adc cmp sbb cmp mov push (bad) (bad) decl pop push mov stc scas imul shrb mov xchg pop cltd (bad) (bad) (bad) pushl pop call push imul daa not mov fsts cmp jmp (bad) (bad) (bad) fidiv jmp in mov push mov and xor xor rolb mov test cmp test orb pop xor repnz repnz xor pop mov cmp (bad) (bad) lcall and and sub and and xchg fistl (bad) (bad) pushl ljmp mov mov push jp add popl pop (bad) (bad) (bad) decl clc adc fwait sbbb cmp cmp sbb jne jne fisubl (bad) (bad) (bad) incl xlat test push (bad) push adc test add mov (bad) fcompl pop pop ret (bad) sub (bad) (bad) jmp lret mov push mov pop ret cltd ja mov pop push sub adc jnp inc lret inc (bad) lret jnp sub (bad) pushl cld test or (bad) popa fcmovbe insl sub dec cmp cmp lahf and push and (bad) (bad) call or adc add cmp movsb (bad) xor or and inc icebp (bad) (bad) pushl sarb iret push mov mov lods rcr jl mov test pop or (bad) (bad) jmp pop or or or push femms or or or add (bad) (bad) ljmp push or or add push add pop add add or add (bad) (bad) incl push add or add femms add or or or add or (bad) (bad) jg add pop add add push or push add add or add (bad) (bad) incl or push add push femms or add or or add pop push xchg and ud2 or add ret add das (bad) (bad) (bad) jmp or scas addr16 cmp dec movsl jg push push mov fwait stos flds (bad) (bad) (bad) lcall sahf add ss fnsave cmp divl or call adc stc movsb dec cli das popa inc push insl lret (bad) (bad) (bad) (bad) fisub jnp adc push subl dec (bad) sub cwtl (bad) (bad) (bad) (bad) cmp pop inc cli pushf add rcrb data16 mov (bad) (bad) (bad) lcall lcall or add xchg sbb pop out fcoml mov adc fdivrl adc or cmp stos js aas sbb roll (bad) (bad) (bad) lcall (bad) int3 jle frstor pushf xchg rclb (bad) sub fbld arpl cld and ljmp loopne sbb add in test icebp add std xchg xchg mov addl (bad) incl das sub sub mov jae clc mov jb sarb (bad) (bad) (bad) call les outsl cmpsl (bad) adc mov in mov cwtl cmpsb mov (bad) (bad) decl adc aad stc mov pop loopne ss push inc sub into sub (bad) (bad) pushl cmp jae dec cmpsl (bad) cmc pop pop outsl dec addl cmpsl add push addr16 xor push or mov inc je movb outsl (bad) jle jnp push (bad) (bad) (bad) decl movsl dec clc movsb rclb icebp sahf xchg adcl pop inc repz (bad) cld lahf (bad) (bad) (bad) lcall in inc push and in add hlt leave test xchg cmc popf cli xchg fcoms jle and push movsl pop (bad) (bad) (bad) pushl mov cmc jg shld mov mov dec shrl inc jle test sub jo (bad) (bad) (bad) ljmp mov xor xchg icebp sbb sbb push mov inc call jge (bad) (bad) (bad) (bad) call repnz jp fwait xor rcrl sbb fisubl dec repnz (bad) mov (bad) (bad) mov decl clc mov xor sarl inc lahf ret shl mov (bad) incl sete adc icebp xor jno add inc in xchg jmp das cwtl dec mov (bad) (bad) lcall adc xchg (bad) jle dec icebp loop (bad) xor mov int3 outsb mov movsb aad (bad) (bad) jmp ficompl sbb xor call pop and (bad) (bad) decl xor push pop lcall and outsl test into lods jg roll (bad) (bad) lcall (bad) fstpl rcll sbb stos movsl mov lahf cmp imul push out jle mov (bad) (bad) (bad) jns test mov push out sbb push (bad) jbe inc ret jge add xor shrl in in and andl cmp test ret cmp subl inc (bad) (bad) (bad) (bad) cmp sbb inc repz inc lock sub dec insb shlb dec std mov push pop out lea or sub ficompl xlat dec push cmp test movsl jmp mov jmp push or pop sahf jne in pop xchg push mov mov push clc mov (bad) (bad) (bad) (bad) cmp jne hlt (bad) jb sbb fs lods sub xor insl insb xor push mov popa (bad) (bad) (bad) jmp repnz xor jne sbb mov mov add inc mov or (bad) (bad) lcall mov mov dec mov push pop xchg cmp jns jne mov scas aas ljmp idivl hlt jle dec and push mov cmp inc mov aad mov (bad) (bad) (bad) (bad) cmpsb scas repnz or imul clc jl jb pusha dec inc loop int3 or imulb cwtl (bad) (bad) (bad) pushl mov mov movsw out (bad) out push hlt mov mov out (bad) adc std sar (bad) decl hlt push leave imul rcll loopne push jle scas cmp ror (bad) (bad) (bad) push jecxz fwait rorb stos into xor sub repnz cwtl or into clc lcall sahf jnp icebp jns call outsb add push push out addr16 out repz or mov (bad) (bad) (bad) incl into cmp push test add lret mov inc adc (bad) and (bad) (bad) (bad) lcall dec pop gs jl cld xchg xor inc rorb lret inc or mov out cmp idivl xor jmp mov add clc outsl mov lahf fsubp mov fist cmp div adc inc mov stos daa mov push lea stos ds stos and into xchg mov testb jae stc rcrb pop dec sbb dec std and mov (bad) (bad) lcall jo push btc int fwait lcall jb jne mov outsl sar (bad) (bad) decl add add mov pop lea out or xor pop repnz popa mov mov push sub insl sbbb (bad) jne cmpsb test clc cmp add (bad) (bad) jmp add inc mov mov outsl out adc rol test cmp mov pop rcrl push in popf mov push cmpsl push mov mov jecxz cld (bad) test sti push pop inc js mov dec dec push (bad) (bad) (bad) (bad) cmp fcoms cmp dec fiadd push xor and (bad) addr16 scas (bad) (bad) (bad) dec dec nop (bad) mov xor inc dec ss push mov dec inc in (bad) and cmp push fwait (bad) (bad) (bad) (bad) jg daa fildl sahf cld mov push pop lahf ret stos or rorb mov (bad) (bad) incl cmp cmp fst jp test jne xchg xchg insb aas mov jmp (bad) (bad) (bad) jmp jmp int jnp mov rcrl xchg pusha aam cli add add sahf es mov dec aam xchg ja mov add jp lock (bad) das test mov xchg mov dec jne adc or jge bound jbe divl (bad) xchg xchg mov inc subb pop pop (bad) (bad) (bad) jmp sub push test push add shll and ljmp xlat imul lcall sbb xor movsb adcl mov pusha cmp leave data16 data16 (bad) (bad) decl outsl into sahf mov fcoml call outsb adc xchg test cli push rcrl (bad) (bad) (bad) lcall pop fmul inc mov mulb cltd (bad) xchg movsl lods ljmp leave push lcall ljmp in je xchg pushf in lock stos sub frstor adc (bad) (bad) (bad) (bad) fldt mov test xor dec popa mov fwait scas movsb addr16 sub (bad) fnsave push in push bound movsb out sarl cmp mov in xor mov (bad) (bad) (bad) ljmp lods aas xchg roll lret mov sbb jne sbb mov adc jno and ss (bad) (bad) (bad) pushl mov cmp push por fwait andl rcll mov pusha (bad) (bad) (bad) ljmp dec pop (bad) dec lcall xchg mov mov (bad) negb nop push cmovle mov aas (bad) (bad) (bad) (bad) sti out nop fwait inc or pop mov mov xor fadds in push or add add (bad) (bad) (bad) sti mov and sbb mov lea nop repz cmp into (bad) (bad) mov and xor addl and mov adc mov mov and inc adc inc (bad) xchg dec (bad) (bad) lar add add repz outsl js jl std (bad) (bad) mov in mov xchg cmp xor xchg xchg (bad) (bad) (bad) jg mov dec or jbe popf mov push aas xchg dec fldl rcrb cld fidiv lds sbbl pop arpl repnz (bad) (bad) (bad) incl addr16 xlat stos jbe (bad) leave jge pop inc lock aam scas pushf movsb jb mov xchg es (bad) int3 xor (bad) (bad) jmp xor sbb and daa mov or pop mov (bad) cmp mov jecxz test add and mov push mov iret shr stos sti inc dec xor (bad) stc add cmp test mov cmp mov push ror or in pop xchg inc pop (bad) (bad) (bad) (bad) jmp sbb orl inc out mov fneni(8087 xor or and ret (bad) call lods bound enter aad test gs or cmpsb mov call fnsave mov mov dec add push popa xor sbb adc mov push xchg into push sub mov inc push mov mov movsl clc jl test (bad) (bad) (bad) pushl cltd idivb (bad) push repnz fisubr mov vandpd xor add add (bad) (bad) (bad) jmp test out (bad) sbb stos stos out jbe lcall (bad) popf mov (bad) (bad) dec leave inc cli jge xchg cli cli adc mov leave sti lock lods in mov aam pop (bad) (bad) (bad) jmp scas ljmp movsb mul jb xchg fwait rol jne mov loope std sbb (bad) (bad) (bad) call es ss jle aas inc cmc div add xor pop push movsl movsl hlt sar (bad) (bad) jmp in stc icebp icebp or jno xchg stos fcomp jae xor push sub add xchg mov (bad) jmp and ret ret pop xor sbb aaa xchg xchg mov das lcall and adc sbb (bad) (bad) incl loop int jmp dec daa daa imul jne adc or sbb (bad) (bad) (bad) ljmp je sbb cs sub mov pop out pop mov push divb cmp cld (bad) (bad) call (bad) popa jge mov push sub jnp jecxz ds das das jno test mov incl shr sub and pusha jecxz cld pop jns mov mov pop in aam (bad) (bad) ljmp mov addr16 cmp dec dec ficomp pop pop call mov rcl imul out sub stos in sti sti push xchg lds xor push adc (bad) (bad) incl iret jmp add push (bad) jg andl lahf lahf mov mov push push repz mov inc rolb xchg lods and cmp cmc cmc add (bad) (bad) (bad) (bad) mov mov scas fcmovu jne and arpl adc xor (bad) lcall std repz mov (bad) (bad) (bad) dec int sbb adc adc xor mov xchg xchg mov cs pop cmp (bad) les cmpsl cmpsl repnz jle (bad) jp cmp lods mov sbb sub jae xchg sar (bad) jmp mov sahf dec dec shll and push sub jle nop nop stos or (bad) (bad) incl lret out sub mov cmp (bad) jns pop pop loop or sbb (bad) (bad) (bad) jmp loopne xor push je cmp or push xchg dec dec fisttpl push or and mov (bad) (bad) (bad) inc ret rcl outsb inc lods lods out les cmpsb cmp xchg movsb shl in bnd mov (bad) (bad) (bad) jmp out mov enter aaa pop fisubrl mov lea fs dec dec rorb test (bad) ljmp lods push push cli repz hlt pop iret ljmp hlt jp mov scas jmp outsl (bad) (bad) (bad) (bad) mov js dec and jb,pn sbb and cmpsb cmpsb icebp jae mov xchg mov lret (bad) (bad) (bad) (bad) call fnstsw je ds pop and mov mov loopne (bad) (bad) pushl nop jl ds jno mov int3 data16 nop dec dec fadds add add sbb push adc (bad) (bad) (bad) jmp mov scas push push stc imul rcrl sbb mov jmp loope jmp clc adc cwtl cwtl mov adc xor imul pop mov cmpsl sub fwait fwait mov push push and jmp into dec stos push push call sub (bad) jp (bad) (bad) (bad) decl clc or or fcmovbe out xor push (bad) incl ret sub sub adc mov test push cld insl mov push cmp add dec (bad) xor push push add jge (bad) out dec (bad) xor inc popf inc xchg xor or addr16 dec (bad) xor ljmp pop ret (bad) xor scas push inc (bad) xor roll dec pop hlt xor (bad) xor or xor (bad) xor gs sub lgs ss dec (bad) xor cmp sbb xor aaa sahf sbb sub dec out sti (bad) dec popa into xor (bad) xor jno,pt cmc cmpsb jmp shrl sub pusha lcall mov cmpsb imul imul imul cmpsb imul repz mov mov jne lcall insl cmpsb imul imul cmpsb imul imul imul cmpsb imul imul imul out cmpsb imul cmpsb stc xor out inc pop mov cmpsb imul imul cmpsb imul (bad) push and lcall fstp xchg cmpsb inc les imul cmpsb imul adc cmpsb imul cmpsb imul imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul xchg scas cmp imull cmpsb imul cmpsb imul imul cmpsb imul jmp mov or sub sbb imul imul cmp add cld dec (bad) xor mov push mov xor dec pop iret rcl xor shr stos sti inc dec dec (bad) xor xor xor (bad) xor cmp test (bad) xor shll dec (bad) xor cmp mov dec (bad) xor push ror int dec rorl in pop loope pop xchg inc xor (bad) xor les dec shll jae dec (bad) xor orl dec (bad) xor inc out mov rcr pop or loopne (bad) xor xor or and dec (bad) xor ret (bad) xchg xchg in out (bad) xor enter aad xor (bad) xor insb push hlt ljmp scas or js cs mov dec (bad) xor call xor rorl mov dec ds dec add xor (bad) xor popa xor dec roll dec (bad) xor clc cwtl adc mov push xchg (bad) xor ror push sub mov xor mov inc xor (bad) xor inc cltd sub (bad) mov mov imul jmp ficom imul jb popl cmpsb imul pop fwait mov scas add and lcall cmp dec insb jle adc imul lcall xchg cmpsb imul imul cmpsb imul imul sub pop push add jbe jge lcall cmpsb lcall inc imul imul imul cmpsb imul add mov imul cmpsb imul cmpsb imul imul cmpsb imul cld jp mov fwait out addl xlat cmpsb imul imul imul cmpsb imul imul imul cmpsb imul cmpsb imul imul cmpsb imul lcall lcall loopne jno lret int3 nop add (bad) mull ret imul jmp lcall pop cmpsb imul imul cmpsb imul cmpsb imul sub jnp add insl sub mov xor popa jo imul add add outsb je outsb je push jns add add (bad) cmp jb insb sub or imul push pop dec mov jae inc jne push (bad) jg cmp popa fs add popa jb daa add add push push and insl outsl outsb inc and and je and (bad) lcall jns arpl arpl arpl data16 gs loopne out or insb insb add outsb fs xchg mov jo (bad) adc add add mov gs clc (bad) (bad) ljmp je jo je insl gs je jns jne jo jae outsb popa insb add xchg add arpl pop and and jo add add add add out clc (bad) cmp clc dec in clc lcall or imul enter lcall addl pop dec out jae inc or jns je insl fldenv and idiv pop add inc dec inc add inc inc inc push push inc inc push dec dec push push loop pushl push inc push inc dec dec or push push mov or inc dec dec push dec pop inc das inc inc out lahf insb (bad) dec dec dec pop push sbb inc inc dec inc inc push fdivr in dec pop or dec dec push inc inc dec inc inc dec inc inc xor pop in flds dec pop inc dec inc dec dec push dec cltd mov inc inc push inc sub fsubr pop sti (bad) inc push inc dec dec push or push dec push dec inc dec mov dec pop push inc push push dec inc mov push pop push or out ja push dec push xchg inc inc push push or ja xchg inc push push jp inc dec dec dec inc inc dec push push data16 lock test (bad) and inc push push cmc push inc push add pop dec push push add inc push dec imul (bad) lock dec dec dec push push push dec jno dec add out jne pop push add dec or pop into adc fldl dec dec dec push add add outsl clc lahf sti push inc push dec pop mov push dec dec dec dec dec cltd dec inc push inc addr16 cmp dec push outsb or xor mov push inc push daa inc push add dec inc dec xchg sahf jnp dec inc or (bad) decb push push inc push pop xor int3 mov lea inc dec push push sbb inc addr16 push testb jo inc notl push dec add or push jno divb inc (bad) push dec pushf push dec push rcll std vmptrst push push sbb inc inc dec push scas push pop push inc xchg inc les dec dec out dec stos adc inc dec pop xor dec dec dec add or and inc and aaa std insb imul outsl outsb add decl push jae fs imul scas add insb dec out fmulp jns imul sub mov pcmpgtd imul jnp dec sub jb jae jne arpl popa add hlt mov jb cmc mov ret pop jns jne add sub out fsubrs data16 popa addr16 jbe add lcall jbe cld push jno or negl loop popa outsb arpl jne popa out xor jge dec popa dec jp pop pusha lahf outsl jne test jb add aam pop arpl jge fs decb jae jb imul data16 decl jb insb outsl ja loop jbe fs mov outsl arpl iret inc xchg mov add andl je xchg adc fmuls sub mov or lods and mov addr16 sub aaa inc call arpl jo outsl jb inc (bad) notl jb jne jns insb or mov add adc cs add outsb imul add data16 mov add sub fildl add push out add and rcrb clc push sbb and loopne je inc int3 push cld lds jnp mov popa mov mov jo test (bad) mov add int3 sbb icebp push fwait add fldt and mov leave bound jne je shlb int clc sub imul ret ret xchg lock add imul sbb es dec xor imul sbb fcomi add xchg insl popa outsb cmpsb (bad) (bad) (bad) jns jae insl bound imul jae jnp fs mov jb and cli dec jne insb gs insl jge addr16 and fdivl outsb gs popf outsl ja add push push je xchg mov mov jae popa nop (bad) cld int3 lds jae arpl call in pop inc outsl jb loope outsb outsl mov addr16 popa arpl gs sbb dec cmp int3 cmc xchg icebp adc sub insb data16 adc popa js jne cmc add and imul inc nop push fisttpl and jnp mov orb test jb stos dec addr16 add add dec rorb push jg sub cmp dec sbb out mov add inc and jb lock dec mulb cmpsb push xor mov das mov in or adc sbb scas and sub jb and daa mov cmpsb cmp clc je popa outsb jae je fs add and clc and jne cs jae imul cmp xchg sbb je push das ljmp xor dec jae arpl jae sub (bad) mov or pushl add (bad) andl and sub add jb je and dec push jne neg test clc jmp add add adc lcall add (bad) jb das jne sub add add cmp pushf sub (bad) inc pop inc xchg jbe enter jge and fsubs xorb or js iret jne jb rolb pusha add adc out popa pop inc add pusha xchg aas sub mov lahf test das (bad) xor xor xor xor add ja outsb das dec push movsb xlat and sub sub adc and pop dec inc dec inc dec inc pop inc dec dec push inc inc mov jle incb and sub sub pop xchg sub inc sub dec mov push mov gs cs roll div push je je daa jle mov daa mov out push mov dec inc adc sti mov lahf push inc dec inc push push aad inc gs ret or inc js adc adc outsl outsl jo cmp loope and pop sub sarl cli lahf or push inc push inc pop add xor inc sub es addl hlt pop xchg jbe jmp gs cmp and add jne pop pop push pop mov jae xchg ret imul insb cs xor sbb sub mov inc pop inc pop mov insb or and stc (bad) in xor jg sbb stc lcall out pop sbb les stc jmp cmpsb imul pushf xor cltd cmpsb sti mov add out jl insb add pop pop pop dec pop mov add mov (bad) js mov jmp pop pop and jo or inc xor sub xchg add pop insl jne arpl jae add add sbb add clc pop loope mov pop jo je pop mov mov and ja and dec and (bad) gs mov pop inc push inc xor mov aad xchg fistp pop imul push sbb add and add mull or lcall decl jbe dec push inc dec dec inc popl xchg rcr push inc add pop call out aas adc packsswb pop pop data16 fmuls shl sub int or sbb mov jb je je insb outsb add pop pop jecxz sbb (bad) incl testb add add arpl add data16 (bad) (bad) jmp push add insb add outsb add jo jno jb je (bad) (bad) (bad) pushl jbe ja js jns jp inc add inc add add inc add dec add mov add add dec add push add push add add push outsl pop add (bad) jmp xor xor xor xor add add aad pop mov movsb popa dec pop and inc (bad) imul inc decb data16 nop and add dec stc pushl popf jecxz pop inc jecxz push dec inc stc lcall stc neg xor dec or sbb stc lcall stc decl add cmp cmp (bad) clc cmp lcall addps lcall std pop jp scas mov or or push mov sub sahf ret jnp xor mov mov jp sub jae (bad) jecxz sbb outsb gs daa mov and jge fbld shlb pop add inc sbbl push add inc pop cltd out lret xchg (bad) add jb add mov rclb arpl loopne gs and add out push xor mov je loopne (bad) cmp add jb jo jb sub popf cli sbb je jne and lds and sarb sub push sub jo fs les and xchg insb pop mov dec sbb and or inc and outsl das cwtl sbb sub out loopne dec call movsl and (bad) je pusha jno mov xor daa pop xor cmpsb jmp mov fdivr sbb sahf sub push ret (bad) mov ret inc and inc or pop dec push push inc push inc push inc (bad) dec loopne mov inc dec inc inc dec fs dec cmp mov mov add push add lret pushf mov daa dec dec dec inc inc xchg dec and jle add jne shrw into cmp adc and and push aad dec push push inc dec lods mov add adcl and ret sub ret daa inc clc xorb daa je pusha xor push mov jg insl mov jb,pn popa fs add testl aas insb pop out mov dec inc fcoms int inc adc inc ja je inc and orb push dec push inc jo jb je pop fs cmp aaa data16 and xchg roll ds add jl pop fwait push and gs jecxz and outsl jne add push jae jb outsl jb dec je insl outsl test xor cmp cli inc push xchg pop xorl push xchg dec inc push push inc pop sub hlt int3 jge aas sub mov sub mov test push scas test sub je pop sar pop pop aas pop mov jne pop and test sbb loopne pop dec or sbb nop mov mov (bad) int3 add das iret sub pusha ret je,pn cs jo add and mov jnp pop xchg pop or popa xchg daa fistpl xor or jp ret xor les psllw repz (bad) (bad) ds outsl data16 arpl jb insl gs mov jns jbe mov jecxz,pn sbb pusha fisubr (bad) dec push inc pop push inc push lcall das xlat inc push and push inc push pop mov adc int3 inc sub cmpsl sub movsl ret mov js movl pusha and or call sbbl popa ja popa je pop pop dec xor lds iret cmp (bad) jnp sbb scas push cs sbb cmp aaa fwait dec loopne int3 gs insl dec inc xor fldl pop hlt push inc xchg sub repnz sub mov push or jmp (bad) adc mov sar sub pop pop lock aaa bnd fs sahf and insb mov insb addps xor pusha roll enter sub data16 loope adc arpl inc xchg xor adc (bad) push popa (bad) (bad) fnstenv xchg mov add sbb xchg pop add subl or push pop and psubsb sub jle movsb aas jo scas inc inc dec inc adc or dec add fisubr sub (bad) xor sbb shrb add and ret or pop nop sbb arpl or outsl push or push xor pop xorb test inc (bad) mov (bad) aaa add out add es push je adc xor sub dec mov xor (bad) (bad) decl mov stos iret adc mov stc aam rclb mov incl stos add fs cwtl jb inc mov sbb and andb xchg dec and pop add add ret cmp imul inc incl dec push inc add pop sub je arpl dec sbb push xor pop mov bound push add je outsb cwtd sub ret sbb mov outsl add add add sti ja or adc xchg add popa pop gs bound fidivr jb cmp bound outsb jbe movsb jo jb (bad) fldl dec fs outsl jo add je outsb jbe jb outsb insl outsb cmp popa jb in push xor xor or adc or test sub ja daa xchg xchg add jb imul bound je js (bad) insb or push add sub jg jge or out and mov lea cmp jne call dec inc inc push push pop inc inc push inc mov or push inc push inc dec adc mov aas push dec dec inc dec push push pop dec dec inc dec inc mov push inc push inc inc lret push inc push dec out fwait clc inc dec push push sub push add push add cmp (bad) pop add inc jae push mov and outsl xor inc inc outsl jb imul insb imul adc add dec add dec add inc aaa xor std add dec add add fnstenv fstpl and dec add push push outsl sbbl push add push sub out enter imul ret xchg mov sub xor or xlat das inc repz aas dec orl cmp adc mov pop sub and push push dec add dec aad scas sti push mov xor dec cmc jae pusha mov or jbe mov push outsb add xchg pop or insb mov adc test mov fsubs add (bad) pop or test sarl or (bad) sbb inc xchg pop prefetchnta das jnp or pop or add push inc jbe sub pusha jl fsubs push mov cmpsl lret push or loop ja wrmsr enter and adc and cli dec add out shlb inc push mov dec push lods test push dec inc dec inc push psllw lcall lea js xchg jne mov pop imul shlb shr or cs and xchg xchg xor aaa xchg add add mov add push scas jl loop pushf add arpl inc adc pop in inc xor mov ds nop or sub adc fnop loop aas sbb inc addl push dec mov sub aaa fwait jne or loope pop adc xchg shll lods push cs mov ds gs mov push push les pusha mov jmp cmp fs push cli pop shrb add test shll xchg cli pop adc mov (bad) enter dec gs mov imul shrb stos and add pop or jb adc push pop les mov popa outsb (bad) add es imul xlat fwait push adc jnp (bad) jp (bad) je add aam sub add push in test inc jg popa fnstcw sub and jp inc insb mov push and dec push pop enter dec inc dec inc inc push pop xor push fsts push loope gs popa jo outsl jb mov sbb add addb enter into pusha mov test test pop push rol sbb rcrl xlat add push and push insl mov flds lods inc mov push add inc scas je scas xchg sub adc cmp sub ss (bad) aas xor pop iretw or cmc or and mov sbb mov iret cmpsl jb and imul inc cld das mov outsl adc jg arpl outsl jne and and sti (bad) jg add xchg ljmp cmp mov fs (bad) mov setge cli incl push xchg jg ret jae cmp sbb decb jbe pop fdivrl (bad) mov lea inc and mov in inc fdivs xor sbb ret add push out sbb sahf xchg xchg out xor add inc inc inc (bad) pop xor xor sti sbb cmp xor xor pop ja in sbb or cmp xor pop lahf iret outsl in cmp or xor cmp cmp mov aaa pop aaa fistpl xor xchg xor push cmp pop inc push sbbl pop inc push xorb ja sbb inc push jg inc or lods cmp xor mov cmp sbb es sbb xor mov cmp cmp jbe cmp leave (bad) inc mov xor daa addr16 fstpt xor cmp sbb jge ss cmp cmp xor insb jb ss xor lock out insb xor xor fwait into jne and pop test ljmp push pop or push insb pop inc inc mov fdivrs xor or add xchg cli (bad) sti scas jmp add pcmpgtd dec ja scas and outsl xchg pop inc inc fmul add (bad) pop xlat sbb jl push lcall les xlat jne lods fisttp pslld jle lret pop idivl sub xor mov out iret pop pop add dec xlat and add lock cli incl pusha call ret or sub sbb fildll dec fs push adc pusha negb jmp mov popf mov pop adc int3 iret adc sbb addr16 add dec inc sub push or test and popa ja ja xchg sbb xchg test cltd sbb or adc jne mov add add push addb and pusha sbb (bad) cmp inc and gs mov sub push inc push jg lret jae outsb fs inc push add xor mov and emms and mov and gs arpl ss mov sbb dec sbb nop iret cld xchg or xchg jne jae pop or add add and cli push add inc enter sbb add adc pop je je pop jae insb je mov jae jo or dec add mov push add pop inc add add inc adc dec add push add dec add push add fild hlt out add inc add pop jb popa add xorb add and or scas jb and push ljmp inc push push inc pop pop fucomip mov gs in sub jle dec mov mov dec dec popa fldl scas insl insl push add outsb add inc mov daa mov clc (bad) aas cmp add pop pop inc dec push pop push inc push pop dec inc dec inc push sbbl les add pop mov add fs insb add dec outsl fs gs add mov je push outsl inc outsl jae add pop shlb fsqrt add sub add inc xor push xor mov dec or jns push incl push jne jb push outsl insb jne sbb insl xor mov addl add jb gs xor iret cmp mov jae add pushf mov dec outsl je and add aaa pop gs dec push out add lahf out dec imul dec outsl inc push ja decl imul stc or push popa cmpsl in lahf mov push insb gs inc push sbb push add imul insb xor sarb pop adc arpl cld decl aaa mov dec outsl lcall popa je dec popa insl gs jns push add ja and cmp hlt ja add push outsl ja jb push jne test push inc push stc or add inc add jne add cs mov cmp addr16 outsl jo add outsl jae or mov shll push add (bad) (bad) (bad) mov frstor mov jbe mov icebp jge mov lret iret adc mov lds sub stos (bad) arpl arpl ds outsb je mov xor push and cmpb outsl insb insb pop sbb jnp fldl lods mov pop dec push mov iret fsubr xor lds pushl xor xor inc inc inc inc inc enter lret xchg popa bound gs insb ss mov and add idivl inc les adc dec push or repnz jp jno sbb push and push cmp lea and dec add loope xchg cmp negl imul pop inc or push add and xor cwtl adc shlb add xor or dec andps inc inc cmc cmp adc cwtl test dec inc inc pop inc pop push lock adc or add xor fwait push add outsb add addr16 incb rorb xor dec xor add adc (bad) pushl add pop add and inc popa je adc decl or and add in cmp xor xor xor jne (bad) dec xchg add inc dec push cmp (bad) ja data16 inc loop imul loop pop dec pop mov cld outsb addr16 add push imul jne aam outsb jmp pushf lods and iret cltd or sub das inc imul jecxz insl push imul imul jo sub xor arpl aad arpl adc dec pushf push inc push andb data16 sbb insl inc mov and xlat mov and imul inc outsb arpl lret add sbb sub jb ljmp packuswb outsb or lock or ffreep je outsb jne or add xor and imul xor add mov adc ss pusha and xorl (bad) enter ret incl fsubs adc mov daa push pop mov in aaa cmp sub lsl or cld jno sti lcall or cmpsb imul pusha xor mov iret call jg fs incl xor imul dec inc pop inc dec dec dec push pop jo dec call inc push inc inc inc and push add js inc testl inc jbe fs inc ja push jne pop fs das mov jo outsb jae inc dec popl cmp add (bad) cmp je arpl icebp insl insb ds ds insb gs gs pop (bad) cmpsb pop jae dec cmp sbb xchg outsl fs pop outsl jne and cli mov ret inc jns je rclb std mov and das xor je jae outsb xor and dec sub mov jo fildl sub mov add cli test jb inc or hlt xor jbe gs outsl jb outsl outsb pop popa imul add je imul adc or popa (bad) jmp shlb rclb daa and (bad) sti lcall cmp xor push nop fs dec cmp jp sub jae insl or outsb arpl lret push popa and sub push rorb es insb popa arpl lret outsl rorl jne sub mov es jmp or aaa mov push adc mov inc xchg mov push cmp sub add sbb pop cwtl inc cmp xor xor bound lahf pop mov and sbb sub mov outsl rorb pop fsubrs cli xchg jbe outsl insb (bad) push jae ret push inc push pop mov or xchg arpl pop and push insb lret inc loopne popa outsb fs xchg cmp insl popa jns andb pop xor xorb mov cmp adc mov movsl add jbe data16 add pusha pusha xor push xor and int3 stos nop nopl mov arpl and fldl call test xor insl insl jne imul mov add cwtl xchg add std mov and push insb gs push loopne sbb mov fs insb notb out bound inc in js inc popa cltd fild mov dec or push (bad) push and push lods popa bound xor popa arpl inc xchg ret adc dec add sbb int3 cmp inc xlat push fs (bad) jg adc das sti jmp xor incl ss call sti push xor lock xor pushl and pop loopne push lahf in ja jae or decl add sti fsubl push aas ds incl je add cmp addr16 add or sysret adc add testl pushf loope and aad lret sbb add sub mov mov hlt inc sub sub dec ljmp add add add imul aaa add orl daa adc xor and and orl add bound dec popa jb inc jo jns dec js (bad) fistpll jne add add jo dec arpl add mov sar or nop inc push sbb test sbb nop push sbb cwtl pushf mov movsb lahf add pop mov or in test add pop add inc cmpxchg pop or dec push jb pusha dec xor dec dec mov adc mov gs cmp add je dec cwtl or inc popa and ja jns jb sub or sbbl fs js or push and push mov add outsb je jg jmp inc insb jae and outsl je pop jae dec outsb jae data16 (bad) ja and outsl jb add jo inc gs (bad) jg popa test ja fs and imul fs call js test lock shll popa cmp sub test in lcall pop nop inc push sbb shl mov sbb aaa sub inc push sbb gs mov je add or test push popa jns pop jnp pop and inc outsl jb imul inc outsl jne fs out sbb inc inc adc add sub mov add outsl js and pop (bad) dec and jns fsubl imul inc outsl outsb gs adcl sbb stos and add or outsl outsl and mov push dec and adc and fs cmpsb fdivrs push popa outsb addr16 imul lods add js and rcrl jae std inc lods sub inc xor insb loope inc into dec sbb xor outsb add icebp frstor sub jb inc outsl insb sbb add pop out test xchg call daa call sbb or dec mov inc imul fs std dec outsl push repz sbb push or add inc mov jns push xor mov pop mov and jb insb jae fsubs jb jle out lret shll pop push in add popa out mov inc lahf inc push sbb or sbb push sbb ds pusha sbb jle xchg fs inc push pushf lods rclb (bad) enter or xchg pop pop inc push sbb pop pop xor dec add popa jbe fsubs aas xchg popf pop pop mov and mov pop pop insb or sub fsubl pop add sbb pop or je orl outsl imul mov dec js jns dec pop cld dec lret and jb rcll dec mov adcb inc jb ret add arpl or sbb insl jo pop push push dec mov je push xorb jbe (bad) loopne,pn xchg icebp pop add or adc or enter dec and orl fs adc aas inc test sub pop outsl jb je jbe and rcpps fsub or xor push std or popa (bad) negb add jae inc aam iret inc xchg and sbb orl stos pop mov xor and xor movups or or and or negb jecxz pop cmpl add out add insb and xor fdivs sbb mov jne gs and sub mov add jb cmp sub adc pop gs sub push xchg test pusha push or pop (bad) xchg stos or outsl mov and rolb sbb subl xor pop mov inc inc dec lds sbb (bad) out call rcr or aas inc xor push push inc pop dec dec push push dec xor dec inc inc and xor fnstenv inc outsl mov pop negb cwtl inc push pop push data16 adc xor outsl or xor inc lea pop push and push fs push div mov xor test sub push cmp inc inc dec push dec inc pop inc (bad) push jmp cmp enter arpl ja cld push popa jbe outsl jb or add and test push push dec inc push pop inc pop cmp sti dec dec inc dec push insb mov pop ret and jae dec mov test sahf sbb push sbb pop pusha push and mov and dec ljmp mov inc and sub and jne push rol and push je adc mov cli dec out push addl inc aas sub push sti lcall sti (bad) cmp sub xor xor clc dec sti (bad) call ja add sbb (bad) xor cli dec sti (bad) fcmovne lods sub pop or mulps dec add dec outsl icebp imul negl mov pop add or mov das cmpxchg sahf sti and cmova pop fistp neg adc pop sub hlt mov pop data16 and gs call insb jns popa jae and xchg inc xchg sbb dec mov scas push cmpsl xor push scas ja add jp xor (bad) or and and mov and push imul jecxz jge add pop jae outsl jo js ja jo sub lret push or cmp mov ja or pusha push adc lods shlb push mov add and cmp test gs sbb pop imul test dec arpl addr16 add gs data16 (bad) insl mov gs jo pop sbb add int3 and (bad) and movsb fs sub sub je and push inc sbb and ret mov dec cmpsb iret daa and add fs xchg adc arpl and insb stos int3 and dec xchg adc pop and outsb fildl jo or (bad) sub cmp movb outsb stos add sahf adc gs and add inc mov and lock imul lahf and pop cmp hlt and and push push push sbbb in or sub (bad) jb ret push outsb insl jno xlat jno outsb bound or scas out lret insb insb and shl xchg sbb test mov outsl cmpsb adc and imul xchg mov mov and arpl shlb insb jns jae inc mov sbb lods ret mov lret or adc insb dec test mov je xor mov push outsb mov or pop sub outsb lods rclb mov xchg aad xchg andl imul mov xchg or icebp inc inc test adc pop fs xor je scas (bad) and and or pusha aaa pop mov or sbb jecxz sub pushf sub and out pop pushl cmp push push mov inc push push dec inc and add rorl packuswb sti or jae insb and mov cmp and jne pusha or add aas cmp jo jno,pt fdivl pop and insb inc cwtl shll adc ret out add lret out pushf and dec insb fbld jmp insl lea add xchg loopne std inc outsl jne fs je outsl bound fs cmp jae add pop mov inc mov scas data16 jnp es daa push or sub jecxz pop and data16 xchg jmp sub outsb pop data16 insl cmp iret mov cmp mov cmp cld and imul mov fisubr cwtl mov sub dec push inc or jno notl or shrb mov inc bound or idiv aas push dec movsb sub cmpsl mov jns jb leave ljmp add pop and push mov hlt mov adc and xchg roll movsb push popa xchg and and inc add cmp sbbb cmp scas imul shrb jg xchg jno jecxz mov or jmp push cmp push cmpsb mov mov inc test shrl orb or inc (bad) xlat add out outsb sbb dec sub pop ret in popf inc jl xchg subl jae outsb arpl jecxz out jne gs test push lahf pop out lret jle outsl insb xor jbe jb subl dec cmpsl mov inc pop setnp addr16 sbb ss outsl jo test ja mov outsl jb and lretw xchg (bad) pop push pusha ss and es jae daa movsl and pop outsb cld aas xor xchg fwait aas xchg xchg pop out test adc sub insl dec outsl mov int3 (bad) lcall pop pop adc jnp daa fnstenv ds adc clc cmpsl arpl outsb jne sbb sbb sahf popf es pusha lahf mov mov popf cmpsl sub les outsb push cmp loope ljmp test pop push and xor cmp sbb pop adc ficomp neg add pop or fidiv adc add dec (bad) cmpsb ljmp mov mov push mov xchg sub clc outsl call popf add dec sub ja (bad) xlat insl outsl jb and jae call push inc add fidiv adc jo inc or pop popa and sbb fstps sbb mov fldl xor xchg add push fldl (bad) jo xchg add out insb jb,pn xchg ljmp add add sub pop fidivl inc jg mov cmp pusha ret mov bound jne insl push mov xchg sub int3 jae loope xor cmpl jo enter bound ja and add or shrl push mov ds inc xor (bad) jl je inc gs bound pop rolb and xor inc xchg dec mov push sub loop out and inc mov dec add xor xor cwtl mov or outsl sbb pop adc or mov sub or jae add adc push inc nop dec dec xor sub pushf inc add enter cmp addr16 add push popa push and stos xchg xor push aam imulb bndstx pop add pcmpgtb sar shlb sbb orb cmp mov inc fwait es bound jae xchg dec inc or popa adc mov loopne jge arpl lds cli and pop jno cwtl jp add add jb data16 or dec add test (bad) add pop pop pop insl xor shlb xchg add sbb add or aam push outsl and (bad) or and sbb mov std gs mov (bad) gs push jae xor push or aam in pop or imul leave xchg popa insb gs fcom add mov iret mov (bad) cmp xor andl inc loopne and fisttp jecxz aaa out out mov add arpl data16 and fstpt call sahf insl scas inc jb arpl and sbb dec jne je push rcrl (bad) leave mov cmp jo add fs shlb add xorl sbb scas imul (bad) and xor ds pop in mov sbb nop mov and and ret mov dec outsl data16 add pop add adc fs inc mov popa movsl enter scas jno bound jge movsl add xchg jbe cmp cmp push pop xor into jae (bad) adc andb jb arpl aaa mov add fs clc bound sub lahf es push addr16 mov inc sarl push outsl push adc jb push roll sbb mov nop sbb or mov inc sub inc imul pusha lock fs dec xchg cmp sbb arpl adc (bad) fist fidiv jns gs xor bound push pop flds sahf or pop (bad) dec or cmpsl bound or sub inc lret and push xor sub data16 mov loop push es sbb insb roll imul inc mov xor repz cmp xor sbb add insb shlb insb push sub add dec add outsl outsb imul sbb dec cli or inc sbb and pusha ret and mov pop inc je sub sub or or pop sub jae and sub push jae popa jo and arpl sub cltd push or jb jo push lock push lods mov adc gs movsb pusha inc xchg clc sub xchg scas and push and inc iret cmpl insl dec push jp,pn movsb shlb and andb mov adc (bad) jle jecxz,pn xor xor and push popa sarb je pop adc cmp test rcrl add adc add pop aaa ret push inc or push add ret pop sbb pop inc scas cmpsl jbe xlat push mov xchg jmp pop sub ret push pop sbb pop dec xlat jne fistp pop xor sbb or cmpsl xor xor mov jae pop add adc fidivr pop add add jnp add add js jnp add xor js mov add ja add sahf add jp fisttp repnz fdiv fcoml dec or adc (bad) adc xchg test iret adc mov (bad) or add or outsb gs and ss (bad) fidivr je arpl inc sub inc jns imul dec outsb mull stos dec jnp aam gs inc jb andb adc div scas jne push dec js xor notl inc and (bad) out loope daa add popa jne dec popa jne jae popa jg adc push imul mov sbb push and adc inc and jge outsl fs jnp cmpb cmp pop cmp hlt jo out and inc pop outsl faddl rolb mov and or pusha mov sbb jae cmp sti jecxz adc push mov sub lret push pop stos pop pop lret pop pop out faddl pop pop push inc mov push jnp adc jnp sbb fadds hlt push iret icebp scas mov adc adc ret inc cmp and ret jge dec dec xlat push pop or (bad) inc dec push add xor shrl sbb das cmp (bad) mov cmp dec push push inc push dec dec pop cmp xor push dec add dec dec push xor inc push cs xchg sbb pop inc or or jae fcomps fimull call dec push push jmp nop je jnp test orl mov mov (bad) xorps add lahf (bad) xor (bad) (bad) lcall inc outsl jb sub and insl pop pop xor xor inc dec fldl pop aaa or ret fcomip push push add imul (bad) pusha cs inc jne insb and rolb adc sub and pop or jg fcomps dec and xor pop and and xchg in pop sbb pop dec inc pop pop xor adc fsubl add add inc pop jle or pusha daa xlat jnp and mov das insb nop and ret in nop inc push sbb pavgw inc push sbb out cld (bad) (bad) outsl (bad) pop outsl outsb add dec push add outsl insl mov mov dec outsl bound inc (bad) jb add add add rorb lds or bswap leave cmovno or orl cmovo dec push mov jnp push lock dec outsl bound push cwtl mov addl loopne sub xchg push mov inc jp stos push ja aas daa mull pop imul popa xchg lock adc jg jg mov and jge pop negl and dec and pop out lret pop pop sub and mov pop cwtl sti jb lahf sub mulps add ret pop mov out mov (bad) (bad) jg ret scas adc dec push dec push dec add push dec dec add push dec dec mov add sarl inc push inc add pop dec add push pop pushl mov dec push inc pop push dec dec dec add dec inc dec dec inc pop adc inc push sbb push dec dec inc inc inc dec inc add inc dec cmp pop dec add inc inc cmp dec or push idiv sti xchg push or insl push dec inc dec pop sub mov inc add dec push inc push push dec dec push dec inc add dec dec dec inc mov (bad) out push dec dec addr16 dec dec inc push dec inc push add inc inc push or mov aaa pop pop mov jno rcll nop rorl xchg fs inc push mov cltd fsubs adc mov inc or lods jg sbb ret push sbb fcmovu fistpl fs inc in fdiv cmp adc sti cmp fsubs ficomp add fisttp fs inc push or sbb pop push adc aas es fsubs dec cmp pop jbe rorl (bad) push orps comiss testb jo pop fiadd ret jb jno aas and push add data16 add and pop xchg stos out push jae cmp bound daa xor fs popa insb insb outsl loopne arpl ljmp shrl pop pop outsb jne mov js cmp pop pop arpl arpl outsb arpl cmp sbbb daa inc adc jne sub lret pop int3 xor adc add std jmp sti addr16 inc std incl add nop loopne sahf jmp lock cmp pop xor ret xchg (bad) jne jae insb jns pop pop std sbb outsl ja popa orl je (bad) jbe daa add into add xor and adc nop mov or and ja popa je sub and mov and pop pop sub std pop lock and ds out add mov sub sbb add bound imul cmp inc xor in outsb and fsubs inc arpl and adc popa jb mov pop push pop adc sub nop test popa jae dec pop jb jo popa fstps mov xor js imul lds popa sbb jo or loope adc xor fild ljmp insb insb enter and inc enter sbb hlt pushl or das fs jne popa outsb outsl insl jle insb testb cmp imul les je sti shll imul ljmp add add xor cmp movsl inc add push pop popl lds jne je cs xor fstpl jb add or es xor ret out aas push insb add sub addb popa xchg pop cmp enter testl xor cmpl adc fisub pop add insb nop mov mov imul mov out das adc pop adc sub enter and sbb mov aaa add ret xchg adc fidivr cmp or fcmovne add or add or pop or xor outsl faddl ss add cmp ret pop pop daa cmpsl mov ficomp cmp dec pop add sbb pop sbb sub outsb outsl outsb jns outsl jne and jp fist addr16 sar (bad) cmp push ds dec pop add clts popa outsl adc ret shrb adc inc cmpsl dec add fdivrs adc pop or lcall cmc add add add jo add adc hlt test insb pop sub add push pusha (bad) jnp arpl or sti incl mov out (bad) cld inc mov in call or (bad) in or mov dec jmp push sbb mov or mov pusha out jl add daa push sbb inc adc sbb std add out or or out nop pop test pop xor in scas mov pop cmp add add jge ja repz cmp out cmp xor xchg pop insb imul lcall add idiv lcall pop addb xlat (bad) xor in add sti call add clc sti jmp or mov sti call aas sub xor dec pop js pop ja ss cwtl outsl inc (bad) lret mov add or pop mov jmp mov add add inc add jne and pop add or mov jae shrb adc mov add mov bound loop fs and jge cmp dec inc aad mov pop add add push lock push mov je (bad) jp cmpl sub data16 or mov (bad) cmp outsb imul (bad) scas lods add arpl jl add jb je jb sub push stos (bad) push jbe and stos addr16 sub out cs inc lock dec push aaa and test jb (bad) jb inc inc add sti and jns and mov out push jmp popa insb imul jnp outsl xor arpl gs fcompl (bad) jg pop push popa je add arpl insl add jb add sahf add sub (bad) outsl jb loop outsl loopne add pop add add sub imul push (bad) cmpsb (bad) jne add insb add insb clc add and jne add (bad) loopne add jecxz and add cs sbb insl and insb outsl bound mov iret outsl jb and jns mov pcmpgtb jnp popa insl bound add and jne fnsave pop (bad) (bad) pusha incl inc (bad) sti inc add add decl into ja dec testl arpl cld jmp cld inc pop cmp int (bad) call or jmp push cld jmp mov fnsave adc jmp adc (bad) fsubrs (bad) paddb dec add adc xor cli or outsl neg popa out cld lcall jmp cltd adc ljmp ret push cld (bad) std pop cld lcall cld incl pop adc je jne jmp pop out cmp pop adc fdivrp fwait std ficomp cld call mov pop or or push fnstsw add pop addr16 pushl cld dec add cld call mov sbb (bad) mov jmp decl mov fwait cltd or incl add xor cmp ljmp jp psubd insb add mov and jecxz aas push insb gs add pushw mov add outsb outsl (bad) xor add es adc add outsb popa jb add jns or add pop pop jbe push out sub cmp call inc add push xlat sbb adc cld decl nop (bad) add mov cld pushl cld pushl pop sarb mov adc mov push add jnp ja push inc mov add pop mov std out add add dec dec inc inc dec pop dec cmp adc std in je or fadds (bad) or lds adc outsb iret or pop cmp push or ss pop stc imul into sahf and imul adc xchg mov mov inc pop inc pop jbe xor outsl push cmpsl or fdivs imul cmp add add add insb inc inc mov pop or mov cmp fisub dec pop or mov add sti stos pusha pop cwtl pcmpgtw (bad) sbb mov jbe or push add push mov aaa imul (bad) daa dec fmuls stos data16 aaa xor add mov mov maxps pop mov xchg xchg push in pop getsec mov fcoms js adc stos getsec (bad) (bad) out jmp add cmp add add add add add cmc push fiadd outsb outsl data16 add lahf outsb sti cmp add or sub arpl sub push cmp mov push add cmp inc ja fild pop and arpl fs imul cmp (bad) (bad) fldl sub add das add add outsl loop incl outsl add gs cmp add add jb cmp (bad) incl ds add cmp cmp jo out (bad) shll mov insb jae add cmp insl dec add jg insl dec add add insl insb add add cwtl std dec mov add cmp add add lcall call add add outsl outsl add push jl jo add cmp mov add sub jo add or add jb add mov add add sahf jb add jae mov bnd add je aaa fisubr outsl data16 jae dec popa je rclb pop jae add sarb jb ja je adc dec mov dec pop roll dec lsl push pop sbb pop push bswap test adc (bad) orl pop addl mov mov pop inc push in xor movhps sub and cmp rcl js adc (bad) or jle pop pop fisttp fadds add js jge pusha orl pop out cwtl jge pusha orl pop aas das test mov pop sub lods setg (bad) pop mov btc inc add idivb pop sub rorb ret (bad) or xadd sub lret prefetch mov pop das rorb (bad) xor testl pop (bad) iret das add pop ret xor inc fist jnp push sbb in sub mull in mov addl fsubr daa jmp adc mov or pusha das repnz in daa mov add pop hlt packuswb adc hlt jg cli mov andl pop push sti pop mov pop sub or nop jnp pop sub adc adc insb mov add sbb mov mov mov rorb pop inc and aas das fsubs das and andb xor ucomiss (bad) or xor aaa pop or add emms testl add or fadds inc pop pop add das fsubs dec pop pop add mov pop adc push psubusb (bad) or pop punpcklbw or pop pop adc pusha clts cmp arpl das punpckhbw in jnp pop mov insb movq pop mov add inc roll sbb xlat pop jne add add pop js insb mov sub (bad) pop sub sarl sub roll pop xchg mov add pop fwait setle pop insb mov pop pop mov push mov mov pop jg mov sbb call mov stc push roll pop iret inc lret jbe roll pop jg (bad) nop and pop lret push jnp adc rorl (bad) fidiv add pop daa ret sbb xor add or bound insb add std inc inc jmp bound bound add add and data16 outsl sbb sti arpl xor cmp jne dec or sbb xor or sbb sti pop push add and jg in daa jae outsl jb cs jbe imul sahf pop je and mov adc imul fistpll mov ss push inc xor dec or xor adc lods pop and xchg xchg mov dec pop (bad) jge and or sbb pop pop out adc arpl aas add xchg push and rolb push mov nopl dec add pop (bad) sbb psadbw mov adc ds ja pop jg js mov notl or push mov scas das pop or or pop lahf sarl pop (bad) sbb bswap pop testb pop rdpmc add (bad) sbb movsb (bad) sbb cmpsl cmp inc ss aas sbb cmp sub (bad) jnp sti stos negl mov (bad) loope pusha inc lcall sub jg xor mov xchg push sbb xor btr outsl pusha cmpsl pop nopl fsts es inc mov or xor mov (bad) pop incl adc and mov or or rsqrtps aas mov add add mov sahf pop push loopne insl add cld (bad) clc add addr16 outsl inc sbbb sub inc dec dec sub sbb jne popa jb je and pushf test inc inc aaa pusha mov jb add dec ds test push adc mov inc ret push dec dec push push add lock outsl je insb ss push add dec jb inc and mov push pop xor bound pop shr fstpl inc stos loopne dec inc das sub std mov and push hlt mov push repz (bad) pushl sub sub and jb je popa insb cmp fnop cmp cld decl add or sbb std jg add sub jb outsb sbbl enter cmp push je sub and ja outsb outsl and addr16 and sbb and push cmp pop inc add xchg jl add and jae sbb cmp in and sub push jb ficoml mov out arpl adc and sti lock pshufw fs insb outsl arpl mov add mov and jb and ljmp bound adc das sbb (bad) pop xor jo,pn mov add add push dec pop pop rcrb dec pop sbb inc push bound icebp lds add sbb and push push es push jl mov push xor pop arpl (bad) jg pusha add outsl gs daa je je imul xchg or (bad) push sub popa insl bound jne cmp (bad) lea push push add mov and pop pop xor sub pop aas int3 std arpl dec cmp outsb add and fldl outsl add ds lahf mov add je imul data16 sbb pop add add add outsb and pop addr16 cmp and xchg add jae inc sub sub xlat fnsave dec adc and mov inc out js jo jmp xor mov dec inc inc add push sahf jmp xor imul mov add in push dec dec idiv (bad) call inc pop push dec dec inc dec push pop inc dec inc dec push push add dec add data16 fistp add int3 mov (bad) cld nop add (bad) pop mov into pop sbb pop pop mov stc iret jne mov cld ljmp cmp jnp pop pop add jmp ja pop xchg add pusha fbstp push cmp pop add add das lsl rolb rclb or mov mov or pushf add or mov or sub cmpsl into iret jge jmp mov faddl inc fidivr jge pop xor pop lsl js or jge std (bad) (bad) aaa jns xor add xchg cld pushl mov addr16 xlat or aas popa inc outsl arpl aam aas mov pusha mov mov aas sti scas add jge stos test popf push sub inc push mov mov enter inc or sbb xchg inc xor push pop add sbbb add lds daa call addl pop inc (bad) pop mov pop push add inc adc movhps xlat xchg aaa sbb and add call jbe aaa pop mov in xor (bad) (bad) (bad) pushl xor cmc imul and jns inc inc add jbe add dec insl (bad) (bad) (bad) inc stos inc add loope inc mov inc push out loop in dec inc xchg aad push iret (bad) lcall lock mov rcrb (bad) (bad) call and dec cmp shld popf xchg mov or lods sub enter xchg xorb jg outsb add inc cmc stc aas jmp xor (bad) pop cmp jae fisttpll add cmp insl fnsave arpl je or sbb gs loopne add pop stos mov or dec add outsl jne adc xchg insl sub insb and ss aas das es fadds mov xor mov aas and and and (bad) arpl cmp inc out jne and imul (bad) adc gs loop add outsl outsb arpl std test or push xchg idiv xchg insl mov cmp dec cmp aas xor das insl inc or adc das sub gs ja loope rcr outsb jo jae jb or subb sub push pop fdivr pop je sub sub sub sar sbb inc pop push push dec dec inc dec pop add jo insb or shlb pop mov mov mov and and pop imul insb imul cmp fs or jmp cmp insb and mov add dec cld or xchg sub or inc sub xor and inc pshufw inc jbe subl sbb and leave nop or inc pusha push pop test xor mov (bad) mov and xor fs and popa (bad) xor push ss and test out adc in ds inc lock pop mov fcom inc pop rolb inc or and loopne jbe inc or mov lfs (bad) leave nop sbb enter and dec xchg loopne jbe xchg mov inc pshufw and loopne mov inc xchg dec cmovs add add or test add or leave nop jne cmp push insb nop or nop mov jmp rorl jo or nop pusha push mov mov add prefetcht2 mov xor pop jo cmp shll jmp push adc inc jbe pusha xchg mov pop mov fs nop (bad) fsts pop xor or sbbb or nop fbstp sbb jo sbb and xchg cwtl lock xchg and mov xchg and sbb sarb cmp dec pop jno aas xchg and mov cmovl pop fcoms sub stc and (bad) (bad) fildll add adc mov or and into test movsb mov and mov insb nop rorl adc aaa popa rorl das adcb sbb cmp rorb test mov verw xor inc leave nop mov push or sbbb enter lock push ljmp push xor push mov jo nop stos (bad) sbb fsubs test in xor rcrb mov sbbl xor pop sahf mov push jmp imul arpl pop jne fadds cs fs add aaa sub and outsl or imul aas cmp imul arpl imul imulb stos jae pop arpl pop push xorl xchg mov addl sub cltd inc push je xor dec add rdtsc insb inc outsl push cmc outsl imul in lcall and push das xor mov outsl jne pop outsl pop push or or jg (bad) jle aam sub pop xor inc shlb outsb cmpb or pop shlb icebp xor and inc pop pop ss pop popa js fsubrs sahf and fildll adc push je pshufw jbe (bad) pop push (bad) add je sbb cmc add pusha pop inc test xchg xor (bad) popf add pop adc sbbl call xor or shlb pop adc xor in int outsl lock add lock aaa loopne add ror and aaa xor rcrb addr16 sbb pusha pop lock add fsubs jo adc dec cmp and fcoms pop loopne lock mov insb pop mov dec pop cmp mov into push inc les into push jbe nop sub xor shl in leave inc xor mov roll scas pusha orl lock add pop nop xor loopne insb mov (bad) cmpsb push andb sbb scas lock add pop push sbb adc xor insb mov shrb pop loopne fcoms mov push and pop add lock pop dec push insb adc test mov ss sbb nopl sub push jg or test iretw push ss pop jo outsl lock push jbe enter iret push pop lock in leave inc into seto and and push and rcrb sahf sbb and xor pop mov pop mov pop rorb test out jne inc push lock test pop (bad) jne and call pop and xor outsl pop lock ret xlat orb pop xchg popa sbbl pop in pusha pop fdivrs and (bad) out popa rcrl inc pop push pushl pop inc das mov addb roll das pusha cmp xchg mov es push pop out or das inc or mov rcl pusha das xor fs rorl das or shrb bound and cmpsl pop push (bad) sbb and mov push and nop das push mov inc pop sbb addr16 pusha and and and adc das andb adc and (bad) sbb shrb sbb and lock xor popa ret or pop loopne xor and xor jbe test daa or or roll add mov cmp pop pusha aas jo mov roll pop inc and adc pusha xchg and add mov out add shrb or or popa cs jmp mov add dec xchg sbb nop pop and add add or rolb data16 push add jno repz and int cmp lahf pop test and (bad) (bad) (bad) pushl xor xor xor xor xor xor xor xor xor xor xor xor (bad) (bad) pushl xor xor xor xor xor xor xor xor xor xor xor xor xor xor (bad) (bad) pushl xor xor xor xor xor xor xor xor xor xor xor xor xor xor (bad) (bad) (bad) cmp xor xor xor xor xor xor xor xor (bad) (bad) (bad) pushl cmp cmp xor xor xor xor xor xor aaa cmp cmp xor jne (bad) pushl cmp cmp cmp xor cmp cmp cmp adc cmp cmp outsl cmp (bad) (bad) (bad) call jb mov cmpsl sti sar sti idiv adc sub inc cld popa cld jnp xchg cld mov lret cld out (bad) (bad) (bad) incl std sbb xor std test mov std out std or and (bad) je (bad) (bad) (bad) (bad) (bad) ljmp (bad) stc (bad) adc decl arpl jle cltd pushl incl add add add (bad) (bad) call insl add add add add add add add add (bad) (bad) (bad) cld add add add add add add add add add add jo mov push add jmp add add add test (bad) (bad) incl mov sbb mov mov scas mov and push mov (bad) (bad) (bad) pushl inc iret sub mov lcall sbb lret (bad) pop (bad) jo dec (bad) (bad) (bad) (bad) fdivrl or imul push mov lods pop rorb sub mov (bad) (bad) dec cmpsb lods (bad) lods jno lret mov and pushf ljmp int3 scas push into mov jns cmp aaa (bad) (bad) (bad) call dec ss adc dec cwtl dec cmp xchg nop (bad) cmp xlat hlt xchg mov mov ljmp out mov cmp (bad) enter rcrl daa inc ffree xchg (bad) (bad) (bad) dec and xchg test lods fcomi ficompl pop stos mov xchg clc loop mov cmp test mov mov insb add xor xor (bad) mov xchg mov (bad) (bad) (bad) jle jo ja fisttp mov je iret pop test (bad) xchg jo mov call or push and jnp (bad) loop cltd push cmp sub adc (bad) (bad) (bad) call and push lret repnz std jmp adc int3 mov or mov adc gs pop pop mov insl (bad) (bad) (bad) fldl add adc bound or mov pop leave (bad) (bad) (bad) (bad) jnp xchg (bad) jo ljmp sub movsb cmp aad and lahf daa sti (bad) aam (bad) (bad) pushl mov enter fidiv mov movl pop out cmpsb (bad) (bad) (bad) ljmp dec xchg ljmp fimull out lcall jge jnp or ja fnstsw (bad) (bad) jmp lds xchg push xor cli pop mov xchg jecxz mov (bad) mov mov (bad) fwait movsl pop lahf cwtl mov into mov fdivl (bad) (bad) (bad) call repz mov into and fist jnp pop push cwtl cmp pop xchg fdivl jecxz (bad) (bad) (bad) call fldcw fnstcw adc dec dec jbe sbb mov push cmpsb (bad) (bad) (bad) call out pop shrb xor fwait popf or mov sub cmp and lods test cmpsl jp (bad) (bad) lcall inc subb and das pushf mov mov sbb mov lock call ja mov imul fwait cmp xchg push mov idiv (bad) (bad) decl movl popf fnstcw js inc xchg add sub mov inc xor lods push inc add (bad) (bad) incl inc adcl rolb out loopne hlt inc ljmp inc and roll mov mov lea xlat pushf leave inc and cmpsb enter (bad) incl jl ljmp (bad) jb inc xor and stc adc sbb inc mov (bad) (bad) pushl into rolb dec pushf hlt xchg ret icebp sub dec out sbb cli pop jb (bad) (bad) (bad) jmp loopne js cmpsb dec jns sbb (bad) mov dec dec jge pop (bad) out adc pop inc lock inc dec (bad) (bad) (bad) inc xor push jl pop mov mov jae mov dec (bad) cmp or sbb (bad) (bad) lcall sbb sar jbe popa test jge adc mov (bad) lock (bad) (bad) (bad) dec leave adc xchg and inc cld sbb sbb test push nop dec adc pop ds (bad) (bad) call popf icebp dec jge dec insl mov das dec inc repz jmp repz and lcall pushf jo jne iret dec xchg popa xchg add (bad) (bad) (bad) pushl (bad) jecxz bound inc sti cmp mov jp shrl mov cmp lods or dec fs in enter cmp ja,pn or xchg mov lods dec cmpsl inc (bad) sbbl dec xchg xchg aam mov mov dec dec adc in (bad) scas orl sbb dec pop call sarb mov and das daa (bad) sti lock out cld mov (bad) (bad) call popf ss adc inc add lcall mov pop sub push ret adc js (bad) (bad) (bad) call sub sbb shrl rcrl push add icebp cs (bad) (bad) call scas mov push (bad) pop sub packssdw gs dec sub (bad) (bad) call popa repnz mov push in pop sub lods call arpl (bad) (bad) (bad) call jo pop or cmp cs xchg jge xchg and (bad) (bad) call stc outsb sbb out jae mov push call fistl mov push xchg (bad) (bad) call push js stos out push aas adc fs jo push push fdivs push adc int3 cmp (bad) call adc lahf or inc xor push cmp pushf cli push data16 mov (bad) (bad) call in pop es fs loopne popf out paddw cmc sub rclb pop xor dec add (bad) (bad) lcall xor cmp inc add imul mov (bad) fcmove fdivr (bad) (bad) lcall inc dec js sti push pop shrl jmp pop inc pop icebp jb movsl and (bad) jbe das inc scas (bad) (bad) (bad) lcall sbb pop aas mov pop pop dec enter mov (bad) (bad) jg (bad) jle jl sbb pop add (bad) cld pop inc jge (bad) (bad) (bad) jmp pop mov mov mov cmp xchg out push dec pushf rcrl mov pop add (bad) (bad) push pop dec test and sub into xchg mov fildl dec jg pop pop push adc sbb (bad) (bad) (bad) dec pop jns dec (bad) jo add push fiadd dec (bad) xor insl in dec loopne push les (bad) (bad) (bad) jmp cmp aam adc push insl mov dec and add pop (bad) (bad) push add je int3 adc pop jg out push dec fistp xchg push cs mov (bad) (bad) (bad) decl jb pop sbb mov out in mov icebp pop or fucom pop in mov inc push aad cmpsb (bad) lcall mov push pusha mov xchg lods dec xchg mov (bad) (bad) lcall jbe repnz ret cld outsl and hlt sti lret mov popa js aas mov (bad) pop (bad) (bad) (bad) decl popa or mov ror sti popa xchg sarb pop xor add aam (bad) (bad) (bad) jmp lcall and pop push cmc shlb call add inc push jg arpl test (bad) (bad) ljmp arpl addr16 inc js movsb arpl inc inc pop push loopne arpl sub fs (bad) (bad) push je aaa inc fs xor inc jns push loopne pop xchg scas fs loopne mov (bad) (bad) (bad) incl jne sbb jae dec rcr dec gs (bad) hlt adc xor popa js (bad) (bad) (bad) jle mov or data16 mov int3 mov popl lea mov (bad) (bad) (bad) mov data16 mulb inc add addr16 and mov in pop mov xchg addr16 cmpsl icebp push push int3 adc push rorl lret jmp push (bad) (bad) std aaa lret push sahf pop mov sti test push rorl scas dec (bad) (bad) (bad) ljmp pop (bad) xlat xlat sbb je icebp cmp or (bad) inc mov imul enter adc (bad) imul test jae pop dec and jg or push (bad) (bad) (bad) (bad) incl push lock xchg and sub cwtl ja imul mov push (bad) (bad) (bad) (bad) jg fisubr imul outsl pop lret add imul daa insb (bad) or ret pop mov insb rol (bad) (bad) (bad) (bad) cmp (bad) stc movb (bad) insb aaa mov std insb and cmp xor dec (bad) (bad) (bad) incl stos test xchg mov jo cmp or mov mov push outsb (bad) jb (bad) (bad) ljmp outsb cltd addr16 fist jno jg sti xchg out movsl outsb fbld jge add outsb sub (bad) (bad) (bad) (bad) mov outsl jbe imul sbb xchg addl or outsl cmp jge outsl int3 push (bad) (bad) (bad) ljmp xchg pushf in jg enter sbb cmp push sbb inc mov push stos (bad) (bad) (bad) inc adc jmp jae jo fldl shll inc xor xchg pop jno pop (bad) (bad) (bad) call jno xlat jp xor ret jno lea push ret jno icebp lahf fwait jb sub (bad) (bad) incl pop mov xchg mov outsb xchg jb xor jmp dec int or jae dec add jbe (bad) (bad) lcall xor ss push jb mov je and push jns jecxz (bad) jae cmpsb (bad) (bad) (bad) call sbb or neg jno inc je jp push into (bad) jne sahf cwtl shr addl addl mov loope mov aam dec jne (bad) (bad) (bad) ljmp or xorb ja dec mov icebp lret std add jne decb inc and (bad) (bad) (bad) (bad) mov jbe dec enter mov popa jp ffreep mov mov pop (bad) (bad) (bad) lcall ja cmp push add xor ja jle ret cltd cmp ja (bad) (bad) (bad) lcall (bad) ja ret enter mov test stos mov xchg popf js (bad) (bad) (bad) lcall jo jl js negb sbb jns xor loop jns mov jb cmp enter nop cmpsb jns jp or xor jns lods mov mov sub jp (bad) (bad) (bad) ljmp jnp gs and mov jg sub add in pop pop mull inc out jnp (bad) (bad) (bad) call push jnp cmp test lea sbb mov mov imul pop (bad) (bad) (bad) incl jp into test testb jl push iret imul ret (bad) stos or jl (bad) (bad) (bad) push jae push or nop data16 push das jge xchg sbb imul mov ja jge (bad) (bad) (bad) decl jge negl jle jne mov aaa jle xchg add loop (bad) (bad) lcall dec dec stos mov sbb push xlat jle popl sbb or outsb push cmp sub (bad) call jbe xor pop jnp jg enter int3 loope adc mov dec mov add xchg add mov aam add pop push sar pusha add inc cmp sub jbe sub inc or jg push bound dec push pop push xor and xchg sbb and cs es cltd cmpsl ds xor xor das mov and xor ss mov adcb test scas das and sub pop sbb inc mov out arpl jl ret add add push or adc jne ja push adc add pusha pop test pop negl pop (bad) adc add loopne add pop xlat jne adc xor dec or push add pop xlat jne pusha pop add jo test jne xlat add mov out orb pop jne xlat jge push add mov push pop xchg add xlat pop out pushf or pop es add mov xor and or lock add or (bad) jae pop adc add or inc and add or popf imul or xlat pop mov negl aas add and rolb pop add cmp mov movsb mov add push or imul pop sbb out mov or pop scas jae add je xlat jne add loopne pop cmc add or jne add jne xlat add or or pop scas imul add push or add add add rolb scas sti scas sti and add or pop lods jge add or mov loopne push jle add (bad) mov or fidivrl add jne pop addl pop xchg add fnsave (bad) addl rorb pop lahf add or jne mov or pop cmp arpl or cli test push cmpsl xchg add add sbb adc lock leave xchg or pop jne xlat jge mov add adc mov xor rcr pop xlat pop ljmp mov add sbb ja stos mov add mov adc or jnp test add pop xor lret or ficoml jne jne loopne jne add enter mov sti fdivl int3 or pop adc pop xor cmpsb fadds bound fmull jo adc and xor xlat mov or xchg outsl mov xor jne mov push or addb movsl add sbb push scas jmp fildl inc cmpsb daa or enter negl lock pop and mov pop lods sti or scas add scas jmp mov movb or pop adc xor or pop hlt add into mov mov loopne cmp jmp inc pop out mov lock int shr mov pop xchg int3 add fmuls mov mov nop pop and jne hlt push or xor aas add or jno pop xlat jne or addb add or negl fadds cmp fisttp inc pop mov or pop negl pop mov or pop jo add push or mov or loopne push push add pusha push or pusha out mov or (bad) adc add mov adc add nop pop call or scas jmp out pop push pop add nop or jmp mov push and add add push pop mov test nop pop inc and add or or add mov add or pop in rorb lock sub scas jmp out add aam xor in add or pop out mov add call add or and out mov or rolb add or addb mov add sbb rolb fildl sub loopne mov sub add or pop xchg add or pop call pop icebp add mov sub add add pop sbb pusha jmp scas jmp and sub or pop cmp scas jmp scas push add pop mov add pop aam js loopne mov add mov scas jmp mov sub mov adc stos add mov mov adc add cwtl or pop adc xlat mov add xlat jne xlat add fmuls nop pop pop xlat jne mov pop roll or fnsave ja es in xor jae add lock pop fwait add pop or mov add inc xlat jne ja inc xor add or mov and pop xlat jne rolb add or pop jmp sub fdivs lock xchg or mov add cmp pop cmp add pop mov scas jmp out add pop or pop lret add scas jmp fild lods or pop jmp mov lock sti scas jmp stc add or mov mov mov add jne test or pop inc (bad) xlat jne rorl nop in int3 or pop incl xlat jne pop aam add jae fmuls adc pop xlat jne sbb fmull and ja loopne xorb add in or sub or jmp into mov pop add or mov jmp out mov jne add sbb addb add or scas sub lock sbb pop or pop jmp mov or cmp add jmp scas addb add pop or into mov add pop mov add add testl pop mov add mov fnsave inc inc add rorb pop lods add or ljmp lock ds add fmuls inc pop into add or pop dec inc sti or movsl add mov mov xchg push add hlt or add pop adc mov or pop into imul or pop int add dec or xlat jne imul mov xor movb or mov ja or pop ss add pop or xlat jne add add mov pop xlat jne or pop lds and rolb or pop idivl add adc clc jg or addb xlat jne add pop dec add push jne xlat jne pop add pop insb add xlat jge or stos (bad) add insb or add jge or pop mov add pushf or pop jg rcrl jne or or pop cmpsl xlat jne (bad) mov add or or pop fidivl imul mov add pop in sahf popa out pop mov aaa or repnz scas jae jae or xchg add and pop out mov add sub addb add add jmp add cmp adc adc jmp scas jmp pop add pusha pop xchg add mov pop mov push or pop and mov pop cmp or mov sbb or pop mov xlat jne pop or adc sbb xchg or or xlat jne push add pop mov mov cmp (bad) jmp mov add xchg or mov add pop or lock cmc add or movsb mov add pop cmp cmp xlat pop je sub addb test xlat or or pop add out or pop push add pusha pop out jne cmpsb add mov aad jnp negl pop loopne dec lods add or xlat mov add xlat mov mov mov fdivs mov std sarb add add or pop mov cmp nop lock jbe inc in dec or add jmp jae fistp pop fdivr add and loopne xlat jge mov cmp pop sbb add push fbstp pop add pop pop pop add jo pop xlat jge mov test pop les add jge jge adc add add mov repz and add or and add sub add adc jge lcall xor add or add pop or loopne cmp fiadd sub pop fild add pop (bad) dec add push (bad) jne rolb mov add insb or pop lock add test add add out cmp mov mov pop jb add cmp out mov mov add adc incl ffree jmp scas jae or pop call pop mov lds add adc sbb dec or jae scas jmp xor push or xchg (bad) fwait or scas sti scas mov add addb int fbstp cmp add orb pop xchg roll add or add add in popf mov pop pop fldl add popa and dec xlat mov add or jae (bad) or jge jmp loopne dec in add mov push pop xlat jge jge add movsb or fldcw add or pop xlat jge jle scas add and out pop dec mov add pop xlat jge jge mov add pop outsb fildl add fistpll fldl add or fiadd add jecxz add adc inc xlat jne ja add or push pop addl or pop xchg add mov or xlat jne ja cmpsl out add mov mov pop negl pop aaa out add inc pop fldl cmp xlat jge or pop test add dec or add jne xlat or pop jmp pop cs add xlat jne xor insl add xlat jne xlat add add jbe cli add add jne pop add add pusha pop jnp mov addb add jne mov mov or xlat jne mov hlt add rorb pop jae xlat jge cld add les nop pop loopne enter mov dec or pop pop incb add or pop daa add or pop add jmp scas jmp jo cmpsb add or scas sti scas lock incl add clc or cmpsl scas jmp out add fs mov lret add or pop jmp jmp out or lock movsb add adc mov scas jmp scas mov pop int and negl lock or adc add sub mov sbb xor pop sub xor mov pop xor pop add or jge inc or mov nop pop incb dec or add add pop or add out mov add loopne daa add add sti scas jmp xor insb add add scas jmp scas xor mov xchg or scas jmp mov add scas jmp out add test xor xchg add mov add mov and cmpsl add jmp dec or enter xchg add or pop lahf or fmull pop loop add hlt or negl or or mov add or jne inc pop push add or ljmp pop xlat or pop testb or adc push add xlat jne adc push add and push xlat jne xlat add pop mov push or jge pop add push or testl add xlat jne add add rolb icebp add pop negl add aas add add jg sbb pop and pushf and js add mov sbb popa and or incb mov or and outsl daa add (bad) jo xchg aam fdivs nop pop sbb pop lods mov hlt or add popw jne jne pop or add or adc sbb add adc and jne pop and add sub xor or add cmp adc ja xlat pop and dec or pop das cmp push or scas jmp stos add pop lea xor nop pop push cmp pusha pop mov mov or pop lds jecxz rolb and out mov or pop mov or pop dec dec mov add or outsb pusha add call popa into in or mov fs mov fisttp addb addr16 xor out mov imull add imul pop (bad) scas sti scas loopne ljmp pop jp mov xor cmp addb je or cmp (bad) or ljmp into in pop pop orb (bad) sti into pop or adc ljmp or pop pop mov dec or pop ljmp or pop lret or pop out scas sti scas jae or pop push add cwtl or xor cmp xchg cmpsl xchg jmp mov pop out (bad) or pop lea jmp jmp nop pop xlat sahf add cld or pop ljmp imul or lcall cmpsb add inc inc pop cmp neg pop mov nop pop ret scas (bad) jne popa xlat or pop xchg (bad) xlat jne xlat add lods or pop pop xlat jne or jae enter aas xlat jne nop add or (bad) mov add or pop fiaddl loopne loopne out in into mov or pop outsb mov or cmpsl cmp scas jmp lock or pop xor jae inc pop bound scas jmp scas or jo cmpsl add mov mov mov das mov xor mov add or or scas sti scas rolb mov jo aas mov cmp inc pop addl or scas jmp pop or pop sbb out and mov add pop lock pop negl add add xchg or jne push pop stos add xlat cld fdivl or pusha enter or sbb xlat mov and fadds or pop fnsave popa test jmp nop pop inc lret add lock pop xlat jne mov cld or pop lahf int3 add add jne imul xlat or pop jbe mov add or or cltd jbe xlat pop popf add or fbstp xlat or or pop or add push or pop xor jl inc pop add jne pop out or pop arpl xor jo pop out pop push jecxz or pop aaa add inc pop mov pop stc jmp iret or ljmp and jne xlat pop cmp loopne inc pop mov in mov pop nop pop jb add in or out fidivl adc daa out pop insb sysret cmp popa mov pop xchg lock xlat or or pop dec icebp (bad) out or testb or repnz ja test pop scas stc add insb or pop das sti (bad) or pop mov fidivl rolb (bad) cmpsl or incl mov add add or xlat jne mov lock push add pop jne jne cmp mov add jmp jae pop add mov or pop jmp jmp dec or pop (bad) add pop out cmp mov add iret pop fmull mov inc or push pop jns sub mov pop movb or pop add add std out pop notl add add add mov xchg add pop inc adc add mov mov or pop pop pop add mov or add pop repnz add add or pop adc mov ljmp pop int add scas jmp rolb loopne or ja scas sti scas sti or or pop xor pop jmp out mov add inc or pop jmp jmp call or pop daa das add pop scas jmp scas popl insb or or mov inc xor pop mov nop or pop negl add cmp jne pop mov cwtl ds mov xlat jne mov mov mov pop mov or idivl add aas inc fisttp inc pop jmp into mov inc fisttp push pop mov fmull jmp adc add or cmpsl or out cmp scas mov push adc jo pop inc add mov fiaddl add pop pop mov inc (bad) or stos inc add jmp scas jmp mov pop enter out cmp scas rolb push inc inc or pop jp add mov dec add pop out add sbb scas dec or pop pop push ud2 adc aaa fucom mov push jl push add add mov jne pop mov sbb or pop sub ja ja test xor xchg pop add pop or sbb add or pop les or pop popf popa xlat jge pop add pop cmp or pop xlat jne mov cld or arpl jne jo add fs or jbe ja or mov add or mov jecxz pusha pop jne daa or pop mov jo add jecxz xor addl sub daa ja xlat jne xor xchg add add add jbe or pop popf imul add jp or xlat cmp add or pop fiadd in fidivl loopne add pop adc or jno add pop or or pop mov add jo mov sbb shr scas jmp int and rolb loope sub mov pop testl add jmp scas jmp adc sub cmp xor aaa add or xchg add pop jmp jmp ret or pop sub add pop jae mov or pop adcb scas jmp scas xor popa add jo mov sti scas jmp orb pop hlt add add scas jmp scas nop or insb add scas jmp xchg add add xor pop add mov mov adc and xchg sti scas jmp rorb nop pop testb or test jmp scas call add or pop mov test push pop jp add or cmpb xchg inc pop add jmp scas jmp jo xchg add or sarl xor pop jmp cmp pop inc xlat jne testl dec or pop in add pop outsb mov jecxz scas pop jo hlt lea add jne or pop jge je addb jbe xlat jne orb pop hlt add xlat sbb xchg or or fidivl adc mov pop or jae lcall or mov incl int3 or pushf add or cmp scas rolb popf jg adc mov scas in or pop aas lahf jae inc pop scas jmp mov mov adc ret add jmp out mov add pop xchg add scas jmp scas mov or mov loopne je add pop sub jmp scas xor xor inc aam or jae mov or pop dec (bad) add out cmp scas push pop aam sub loopne dec fiaddl mov fcomp mov faddl mov xor xlat fldl (bad) cmp cmp icebp fiadd add add add jmp scas imul sub and xor cmp scas jmp scas sub inc pop inc add push pop popf sti cmp and or aam xlat or jge sbb dec in or scas out add jne xlat or or pop dec call ud2 push pop pop add pop xlat pop out add jecxz fdivs pop jo stos ljmp xlat mov xor loop out or pop cmp out or or out or or ja pop pop repz add mov mov or pop pop cmc xlat or pop cmpsl cmp scas jmp sub mov inc idivb scas jmp xlat add loopne dec imul or pop outsl add jo cltd cli sti scas xor cmp mov or pop jmp into lds ud2 push pop jle mov jge shrb or test mov add repz mov or add add add pusha pop js mov or or scas fild loopne loopne push add add or mov add or jbe add jge mov push add pop loope adc pop negl pop or add adc pop add pop xlat jge or pushf push push add or xlat jne jne lock (bad) or add pop in ja ja fs pop imul jo xlat clts jge jne add loopne icebp add add pop negl add push add out mov test pop xchg adc mov out mov or lock push add or xchg sbb jbe jne add or ja add negl jecxz push pop or add or pop jl jge jne and addb sbb pop scas sti scas sti scas pop push add pop and push add xor mov add pusha pop mov pusha or pop test jecxz mov das es add scas jae xor adc pop xor or pop in push add add or sub add das push add scas jmp jmp rolb sahf xor add scas xor mov pop xor or into mov mov addb xor or pop and pop movb jmp mov or pop mov adc add pop jmp scas sbb lock addr16 jo ja jmp mov or or pop scas jmp scas into add pop fiaddl pusha or pop dec cmp stos add mov mov in push add pop push scas jmp mov jo mov cwtl or pop xchg inc jmp jmp jmp mov add mov push add or add or pop scas jmp scas popl loopne nop pop in add or mov jl push add or jns cmp dec xlat or pop repz or dec push add add or pop and je jmp xor pop cmp popf arpl jge dec push add lock (bad) pop ud2 rolb push pop out or pop stc pop negl cld ja add push push add nop xlat jne jne lock outsl popa push add add sbb mov loopne push (bad) fisttp and jne jne mov rorb pop inc insl push add or pop out pop outsb out xor pop add cld ja xlat or clc add or outsl push add jo add cld scas sti iret pop sbb add or pop setae add jp xor sbb pop mov pop or pop mov xchg fisttp pusha pop mov or scas jmp out pop das cltd push add xor jno pop or mov out push add pop setge add (bad) scas jmp adc cmpsl add pop add out scas jmp or pop sbb mov and inc scas sti scas jmp nop or xlat mov loopne mov add mov add push add pop int out jmp jmp rolb jecxz push add or pop mov out jmp in cmp rolb lods jecxz or inc pop imul adc jo cmpsl add mov fdivrs xlat test mov rorl mov or pop sbb pop lock jle rorl pop pop ret (bad) or popf (bad) xchg add lds cltd jbe or pop movb pop fdivs rolb jno rorl addb popf arpl mov pop sti int or clc pop out into push add pop (bad) push add jl xlat jge stos pop mov push add nop pop mov jbe or pop inc fisubl jbe imul pop pushf ljmp mov or pop out jne xlat add xchg or clc xlat jne addr16 add add xor rolb mov add or stc push add pop outsb add jne les jo stc add or cli push add cmp std push add or jne negl add jge add or pop repz add push add xlat jne jbe jns ja addb add jne sub mov or xlat jne xor loopne out cmp lock jne pop arpl pop add jo add pop add pop xlat jne pop inc add add pop movl ja ja push add add pusha pop and add xor pop xlat jne mov pop xchg add jne negl pop es pop add pop test jl xlat jge or add pop add or pop mov pop add add rolb add pop pop xlat jne add les pusha pop pop pop negl adc and dec push pop add or js negl pop pop add or add or test jne jbe or pop cld add or pop xlat jge sbb add and addb sbb add popa xlat jne inc pop ja inc or jne ja or cmp add pop cmc pop xlat jge add sbb js rolb scas sti out mov lods pop pop add sti scas sti pop and add pop add pop mull pop add or add or pop pop iret jne jne loopne mov add or xor addr16 rorb pop jnp cltd out (bad) cld pop fimul add add iret std out adc pop add pop jb pop add or xor or pop lea xor pop xchg add pop rorl out aas sarl out inc pop or pop (bad) or adc or pop or mov icebp jae pop lahf cmp sbb out pop add pop dec or negl das aas pop add mov inc pop add out mov add or add or pop mov pop fildl add jmp out pop sub push inc pop add or scas add or or inc pop add sti scas jmp sbb jo iret dec pop add rolb scas sti scas sti cs pop add xor gs pop add or cmp inc or pop xor inc sarl jmp jo push or mov out aas pop push dec pop add and jmp fs cmp scas lock jno das or add mov pusha pop cmp add pop pop add or pop add or and jge je int3 xor test or popa adc or pop mov or fdivrs jno xchg addr16 mov out or pop sub sub xor cwtl xlat jge jne xor mov add push pop popf (bad) test or or popa xlat sbb fstpt push mov pushf or (bad) (bad) decl loopne into in cmp lret or pop sahf int or pop cmp lret or jmp mov loop pop add or inc aad add fistp pop xchg fidivrl pop add jbe xlat jne inc pop add or fnsave xlat sbb xor dec add xlat jne xlat pop test test nop pop testb or xlat jge fiadd add add add xor xor mov fild add and sbb mov pop dec jmp scas jmp les push pop ret add or pop jae mov or pop and mov mov mov add or sub jae mov pop xor add mov or push add or jbe mov pop add or sbb scas aas addr16 xlat or pop shr or lods jmp (bad) or or pop or mov add or or or jne sub add pop xor inc add mov mov or pop movsb jmp scas jmp test mov out add scas jmp pop lock add add or pop xor pop add or out rorb jmp scas sti xor pop add pop lods add or pop int3 add or pop aam mov or pop in hlt or pop sti scas jmp jmp clc or repz add pop jmp out mov or and das add xor scas jmp scas push add or arpl adc ret scas jmp jo jns adc addb cmc jae scas jmp or or pop lahf imulb or or scas jmp rolb add pop add or scas sti scas adc xbegin rolb psubw add jmp scas adc inc add push pop ss scas jmp into mov inc pop push nop or jmp scas sti sub pop add movsb or mov mov and aam or enter mov pop or loopne adc xor call testl cmp or clc or scas stc out pop sub cltd or xor and sbbb add add or xor add inc scas jmp out pop adc or pop popa add scas jmp jo roll or pop sub or je mov pop xor pop daa invd add xor add or xchg xlat jne jne mov add add ja mov rolb adc add or pop adc or push pop or fmull adc fucomip fsubrl loopne mov pop scas sti out out sbb add or lock sbb add mov sti inc push or sub push pop sahf and add mov faddl (bad) das or pusha or jmp jae rolb or inc xor add out mov or or or nop or fidivr in pop lock lret or jecxz or les mov xor add or add add or out mov add or push dec or in or pop xlat jne ret add or pop jns or add pop xlat xor mov rorl add or pop negl pop pop dec or sub pusha pop pop push or cmp sti scas jmp pop sahf add mov add scas sti scas adc adc or pop cmp insb or pop arpl js jo out push or jl jmp jmp lock pop push or mov pusha pop pop push or cwtl xlat jne (bad) or mov pop call pop mov pop mov fdivs mov enter stos pop pop or (bad) jne mov roll call mov jmp scas rolb add or pop xlat add or pop jmp pop xor in mov or jge add pop pop scas jmp scas xchg or nop pop xchg add or mov adc add and mov jmp scas rolb add or pop inc pop scas jmp into inc or out add or pop jmp out mov add add inc or xor mov or pop aas popa pop or cmp scas inc pop insb bound or fsubl add or pop xchg fs or ret and dec or pop insb add jo lods add add rolb add add pop mov pop or or pop scas jmp scas add mov mov mov add jmp scas jmp mov or jmp scas enter fadds int3 or pop out scas sti xchg or rorb mov or xlat jge std and or in xor mov or pop fidivl imul pop out add jne imul sbb and fcompl pop xlat add or pop sahf insl or and mov pop imull add or pop outsw ret or jbe xlat pop mov pop leave jo ja arpl or pop fbstp or pop mov jne add mov mov mov xlat jne divl add mov addb icebp jae rolb mov stos or scas jae push pop outsl ja or pop jns jmp into push or pop in hlt or pop cmp jp sahf or pusha pop push jnp or jne xlat pop imul test sub pop xlat jne nop pop scas add or xlat jne jne loopne add or inc or pop add jne dec or pop cmp push or dec out jge jne push or inc jge add pop mov add pop mov scas jmp in pop push jle or pop jb jmp in mov push jg or pop mov add orb pushf or shrl cmpl jmp or or scas jmp enter lock or xlat jne loope xorl and cmp aam pop xlat jne inc pop dec add or jbe fdivl xlat jne addb add or pop xlat add or or pop pop xlat jne lret or pop xlat add or jne xlat jne ljmp add pop xlat jne or test add cld or xlat sbb lahf or add jo cmp arpl arpl addb mov (bad) jne or mov add add mov add add jmp scas adc sbb pop or pop pop mov add arpl or and pop adc jl nop pop mov test rolb fdivs out mov lock or xlat or pop sub cwtl or pop push add jne pushf or jns mov scas sti iret jne movsb or cwtl (bad) add cmp or mov enter jmp rolb add or pop jnp out sbb into pop or or xchg or jmp jmp mov call xchg or hlt or pop mov xchg dec or mov or mov mov pop loop adc lock imul or mov add jo roll or cmp scas rolb sets or pop and scas jmp scas dec or pop scas add mov xor pop or pop push cltd xor jmp ret scas pusha pop cmp xchg add add pop add dec testl pop mov xlat jne jbe aaa popf ud2 inc pop flds jbe ja rorb pop mov nop pop xor adc pop cmp dec mov xlat mov fiaddl adc mov pop testb or mov mov or pop add or dec jmp scas jmp and push pop push add or scas jmp scas jl sub addb add or scas jmp mov or jmp into imul pop sahf add mov sti movsb or push or pop inc add push pop scas jmp scas add pop xchg push mov insb or mov rolb pop movsl adc pusha pop xchg ret scas jmp test nop pop int dec or ret scas jae pop daa cmpsl lahf or pop cli test cmp add mov nop pop and or or pop push lods orl into shrb or (bad) out sbb or mov add or add or push pop daa mov scas jmp aas or pop cmp sub inc mov dec add or or xchg pushf pop or nop out mov add fcoms add sbb mov js push pop icebp add or mov add pop in cmp scas jmp jl lock fnsave lahf jae pop pusha mov or ret or jg rolb adc or push mov jmp pusha pop gs push or jo jno mov or das rolb jmp scas jmp insb or pop fiaddl push out mov or pop sbb scas jmp into popl das add pop cmp mov and inc add pop jns jmp in add jg pop popl int3 or ficoml xor rorb (bad) xlat and pop xor addr16 ret out pop xlat pop push pop mov out pop xlat jne pop rolb ret mov add jne popa push push inc pop in enter neg ja icebp add or les add add pop xlat jne popa add pop jne cld or pop addl xchg add jne add or mov inc pop inc (bad) cmpsl or mov add add scas jmp test pop mov scas sti scas rolb enter cmp std leave scas jmp rorl das add sbb pusha pop push fcoms scas pop jp je inc pop mov scas jmp scas aam nop pop lcall into rol in or pop xor out cmp inc pop lcall pop mov mov pop xchg pop push and add pusha mov xor or xchg pop inc pop push inc or add mov jne pop out or mov push daa icebp pop negl add or movsb fbstp xlat (bad) pop fldl shlb loopne xchg add ja pop enter mov sbb jne divl add pop dec add push pop jne jne test pop sub add xor jne xlat pop aas add inc pop popl cld jne sti out aas pop mov add or icebp add xlat jne fisttp add add pop sbb xlat (bad) jne aam and and pop xlat jne pop xor pop inc add mov pop add add jo xchg pop sbb or mov mov jecxz pop cmp sub pop fadds push mov or add pop xlat jne add push or pop inc add push negl jne (bad) add or add mov pop add and sub cmp mov pop xor les imul xlat jne sbb jo mov pop and jne testl xor cmp cwtl or pop xlat jne jnp test addb add rcl fnsave xor add pop dec add xlat jne push pop xchg add nop jne xlat jne rolb fadds pop or pop out pop out add mov stc add add fldl or pop sbb insb or jne xlat jne mov mov add fbstp xlat or or pop stos push or enter jne mov mov pop add or jne add or pop sbb or pop sub xlat jne js xor xor pop or jne xlat pop inc add je pop xlat jne pusha pop insb add add or out rolb or pop xlat jne add pop inc pop dec add pop push pop test xlat jne sbb nop pop cwtl add and pop movsb add mov mov xlat jne rolb add rolb or or jl pop xlat jne xchg pop adc add and sub xlat jne adc xor xchg add pop mov pop icebp add cmpsb add or pop xor or rolb mov aas pop nop or add or sahf or pop xlat jne mov or pop loop and pop xlat jne lock clc add or pop xlat jne orb pop adc or and daa dec pop xlat jne mov xor cmp sub inc pop xlat aad pop inc add mov jne xlat mov clc pop jo out jle fadds in sbb or or cmp pop pop sbb clc scas and push add xchg popf sbbl hlt xchg iret pop in xlat jge jne add lock daa (bad) add xor pop xlat jne xor pop jb in sbbb add or adc loopne pop xlat jne adc sbb lock pop and jne xlat add xor pop add pusha pop pop xlat jne add or mov scas jnp ja and or pop add scas jmp inc pop jnp pop or scas jmp jmp rolb adc add or dec add or xchg add or or add add fadds in mov pop in add pop clc add scas jmp out pop add or push pop je jbe xlat jne addb add jne xlat cmp mov or pop repnz add add push adc xlat jne adc pop and (bad) jne xlat pop xor xor jo inc pop dec add jne add push pop pop add pop fs scas jnp or mov pop mov push or lods or pop cmp mov scas jmp ja int3 or imul xchg add mov sub in pop mov daa pop or int3 xlat xor inc xlat sbb jmp mov pop negl pop add or pusha or pop mov jge or pop inc sbb add insb xlat jne jne loopne lahf sbb add mov xlat jne add pop fadds and loopne out popf arpl jne xor lock push sbb adc xlat jne sbb adc and daa add dec pop xlat or pop cmp sbb pop dec add mov pop pop add jne mov add mov xlat jne xlat or or aam pop sbb rolb out add lock test add dec sbb add cld xlat scas jmp scas adc aas add inc pop xchg add cli into lds sbb pop jne jne mov movsb or add adc jne xlat pop sbb dec pop and cmp cmp pop xlat jne inc pop pop add or jnp inc jne xlat jne addb add mov pop xlat add imul pop pop andl pop xlat pop ret pop rolb fadds aam jne negl pop push and add je jne xlat or push add and jne pop xlat jne fmuls addb add or xlat jne sbb mov or pop mov pop enter std iret jne rolb loopne sbb pop or or test jmp scas jae pop jl in addb add sti scas and add or xor mov pop pop xlat jne rorl pop pusha pop lea test nop pop lcall pop pop rorl sarb add out adc push add or lods add jge jge dec or clc or add add jne pop xlat add or pop push arpl jo xlat jne pop xor or sub inc pop dec add push mov jne outsl add pop or mov or pop and mov xor pop out xlat jne cmp pusha pop sub aas or jne xor popl mov add ja xlat jne loopne out add lock push sub pop xlat jne add cmpsl and das add pop insl jne xlat jne in pop jo xchg add mov pop rolb jo loopne pop sub add jne xlat jne insb add pop mov jge or pop add add inc adc inc add xlat jne push pop pop add jne xlat add pop fildl sub loopne jne jne out add lock add adc jne xlat pop sub xor xor inc add jne xlat pop push pop xchg add mov xlat jne and rolb add or pop repz jne jne or add or adc and and pop xlat jne xor xor inc pop imul pop xlat jne mov add nop pop iret add xlat jne xor xor add or mov pop xlat jne in or or pop cmp jne mov aas mov pop scas add inc imul out add xor lret and outsb xor das jo xlat jne pop movl cmc add das jne xlat jge xor add inc fwait push pop jbe mov imul mov cmp mov lock ss pop xlat jne xchg add pop testl jne divl or add xor dec add push pop jo mov dec jmp scas jmp mov das rolb repnz pop add or and pop jae mov and and scas int movsb and pop push cmp scas jmp scas and add pop movl insb or pop daa cmp add scas jmp scas push push pusha pop jg xchg inc addb fucom mov pop ret das rcrb pop xlat pop repnz add or and xchg pop xor (bad) jne dec add pop imul jne xlat jne jo addl mov add pop lds enter sbb jae lock pop pop sbb or fsubrl jmp dec add push pop js push das scas jmp scas addb add nop pop lahf add scas jmp inc or or cmp add add cmp pop aas add inc scas imul cmp mov or mov jmp pop or inc or pop pusha add ja pop xlat jge jle in pop addb add jne xlat inc mov int enter hlt add negl or or lsl pop xor add das inc pop push add xlat jne add add jne lahf add mov or pop testb or aas or push add and jb enter (bad) jne xlat jne movsb or or pop leave add add pop loopne hlt add adc pop xlat or pop mov pop (bad) add cltd jbe mov loopne add cmp pop pop xlat jne sub pop push add pusha jne xlat jne outsl add jo xchg add pop xlat das mov pop rolb add jne sub lock incl or add add xlat jne xlat add pop dec add jne je xor addb add or pop lcall add cmp push or mov pop jne ja incl js add inc add xlat jne xlat pop insb add inc jo test xlat jne mov lret or pop and jmp out or or cmp mov add jo lea shlb nop jmp scas jmp mov pop or pop iret add mov pop icebp add add scas jmp and inc add push pop pop add or addl mov add and loopne mov add or pop sbb jmp scas or and inc add pop loopne inc mov rclb pop xchg add fistpll or mov pop (bad) dec stos fistp pop out or pushf push pop lcall sti cmp dec fisttp aam out das push or xor cmp or inc push jbe xlat pop push add pusha pop loopne outsl fbstp stos nop imul add add add add jg pop adc mov aaa and and mov xor xor pop xlat jne mov add in xlat jne or loopne pop push or xlat jne pusha pop faddl add loopne jl jne jne rorl addb push or sub and jne xlat pop mov nop ja pop lds call pop rolb faddl hlt or pop sti add fnsave add add add and cmp pop xlat jne push or pop add pusha pop mov add pop xchg push or enter pop xlat pop movsb add mov mov xlat jne rolb add lock clc add xlat jne ja add add pop sbb dec sbb lock and das pop mov xlat jne xor fcoms inc pop dec add jne xlat das push pop jp lods or cmpsb jbe mov pop stos or jne xlat pop inc add push pop cwtl add pop xlat jne mov or pop faddl and fdivs loopne and or pop addr16 xlat jne pop or xchg add inc mov pop cmp inc pop jno pusha pop xlat jne jmp pop pushf add mov xlat jne mov rolb pop or inc pop adc mov add pop push or and jne testl nop pop ret add jne negl pop adc or cld or pop jbe test jne xlat or or pop add add or jne add addb add sarb cld pop pop into or inc rolb jae jne fadds call pusha or loopne pop jmp mov and fmull xor dec add scas jmp scas push pop imul or movb mov rolb es or mov add pop mov pop add or jmp scas jmp add or mov scas sti scas rolb arpl add or pop jns int3 out mov pop cltd add or add or pop dec add pop lcall or add xor into mov mov addb and jne xlat jge rorb test les jne pop add add sbb addb push sbb or pop mov sbb scas loopne mov enter rolb mov add push add jl jo mov add or mov scas imul inc pop addl mov mov les pushf and pop in cmp scas jmp cmp lock or inc or jmp scas jmp push add pop lods add mov cld add mov or pop xor xchg push inc pop pop idivl or pop or pusha jne xlat jne outsl add or jg fbstp xlat or das loopne inc outsb or mov pop xlat jne push pop xchg add jne xlat add cwtl and pop jne jbe cld add pop add add jne xlat or pop bound je jo mov pop test rolb jo or pop pop xlat jne sub pop inc add xlat jne pusha add adc scas jmp scas jo jg les addb add or das mov lds xlat scas jmp mov jno or xor je repz movb scas jmp rclb pop clc add add mov hlt (bad) xor aaa add cmp add nop pop pushf add or or pop rol sti dec jae add push pop fidivl ljmp cli add orb jne add sub mov pop mov sub rolb add or pop out add or pop scas jmp cli sbb add mov sbb mov pop pop add or outsl add mov jp pop add mov nop pop lcall scas jmp mov pop les je sub jecxz pop or add pop into aam sti fistpll add loopne test repz pop mov pop into add scas jmp rolb fildl mov loopne out add or pop clc add or mov or pop inc add mov or or pop movsl add mov mov inc scas xor or les movsb or add jmp into jmp mov pop or jnp or adc and pop and pop push add and mov pop scas jmp (bad) or add cmp scas jmp pusha pop stos add mov or xlat cmp mov push pop fwait xlat jne xlat add pop jmp xchg or pop xlat jne imul pop mov in negl pop nop pop and xor je or pusha pop je negl pop imul fs xlat xor add lock xchg nop or xlat lds shlb pop cld add add ja notl in nop pop push xchg or int3 pop push pop xlat pop and mov sbb jne adcl scas jmp lret pop and int3 or pop data16 jmp ljmp add mov add inc pop mov xor pop lds lods jg pop mov add add out mov add add mov mov fadds sub mov or int inc scas jmp ret scas rolb add sub adc testb into aam clc and xchg popl insb pop inc xlat jne jmp popa add push pop hlt add pop xlat jge cwtl or and pop pop add jne xlat or add jo jl pop xlat jne or or xor lock adc xlat pop and outsl add add jbe pushf or pop or jne xlat pop sbb mov add jbe xlat jne mov or pop or (bad) insb lahf pop sub int3 jo negl addr16 addl nop pop xchg add jl add or pop xor xlat jne inc pop mov pop lret pop xlat sbb xor mov fiaddl cmp add or popa add inc add (bad) mov inc add pop bound or lgdtl add xor pusha push jo sti out cmp add add or inc aas pop add in add cld add pop test pop adc (bad) cmp sub pop pop add add std pop repnz add add add add push inc add add push ss jg pop or mov (bad) aas pop xor push add xor xor push add add add pushl and add add jo or xor pusha add push femms call add xchg or or jo push push rolb loopne and add js add lock ljmp adc sbb or or jo push or push rolb add add or in jae jae adc xchg sbb lea adc add cmp (bad) negl fadds fisttp add or pop add add add pop repnz add add jne pop in repnz push out push adc incb adc mov test aas lret add add dec pop repnz jmp (bad) in or (bad) dec cmp nop das and bound and cmp insb pusha or xchg pop pop jnp xchg xor fbstp loope jecxz out jnp fiadd dec or or add add add dec mov (bad) jnp cmp ret sbb or adc mov xor cmpsl das enter jg dec and and pop (bad) sti adc sarb aaa adc neg or lsl xor (bad) sbb jnp popa add or arpl dec sbb das mov lock lret pop jae sbb sbb (bad) dec loop lock pop add aas neg mov add add xchg lock add mov (bad) adc add add or adc sbb adc pop rcrb and stos inc and mov pop idiv pop jecxz xchg dec sub add cwtl pop add mov pop or add sub add lahf dec loope rcrb out das (bad) jg add and add cwtl add add out xor incb add push push add push cmpsl jae mov jg xor mov cmp cmpsl ss pusha mov push (bad) or sub inc dec cmpsl jp sbb mov faddp jp pop or daa ret rolb xor add and (bad) popa outsl and sub insb nop mov jnp and aaa pop lret inc ss pop arpl shlb mov mov mov in or das add mov cmpl sub ret fwait imull fsubs or pop insb pusha mov psubusw xchg popa add orl cmp sbb mov mov out mov add xchg pop fiadd aaa mov (bad) incl adc push add xor or fild mov adc sbb mov sbb xlat and lock das push or cmc and add mov fildll or clc loop sbb dec xchg mov data16 or add sub sub push add sbb dec fistl out sub xor add shrb add jnp cmpsl add roll sarb inc pusha inc and sbb sbb mov and aaa adc pop adc mov out lsl cmovp inc xchg rcrl mov sahf scas sbb dec push insb pusha ret fiadd cmovnp aaa shr pop cmpsl pop popf push add fmuls jnp jae pop add mov dec (bad) aas sub pop dec ss fadds xor add lds xchg (bad) pop push adcl xor pop and and (bad) bound push sub jg cs call adc ds add mov idivl inc xor cmp xor add xor repz cmp or adc add daa (bad) jg sub pop js add push mov mov sbb popa orb mov pop sub aas sbb (bad) xor sbb and mov add mov xchg mov mov mov sbb sub jbe leave and add adc loopne iret pop or pop rcll or incl pop dec push add or inc call or xor jmp add mov cmp or add add mov ret cmp loopne lock popa add (bad) ret mov (bad) lcall imul imul add xor pop fdivs add das add jnp,pn lcall sub xor sub xor xor (bad) xor xor cs sub imul pop arpl dec xor inc fldt dec (bad) xor sub daa es and pop outsl or xlat sub jecxz popa pusha (bad) mov mov (bad) xor and sbb pop test pop jb or mov mov fstps fcomps arpl add faddp inc aas cmp insb pusha add addl mov faddl inc ss xor pop outsl pusha and or notl pop adc and mov or xchg daa daa ficom fdivp jnp jmp incl pop sbb add add add xor pusha pshufw or mov jmp repz adc test mov aaa mov mov lsl fadds mov sbb jg (bad) fadds sbb mov push outsl ja dec ret pusha lds dec push xchg xchg or mov jg (bad) inc call add or pop sti add sub sbb mov pop fs fmuls xchg arpl xor sub xchg sbb fistl lret sub loop adc xlat mov lahf push pop and or ret popa pop inc rep test xchg push popa and decl xorl push fcomps aas scas daa xchg hlt sbb btc popa test rolb or inc testb mov add das and pop test xchg mov and add iret add mov pop outsl pusha inc cmp sbb or sbb ja pop lock or or daa push ss jae mov daa jg sbb (bad) jnp push outsl jnp pop push jae leave dec or lock addr16 jnp xchg or repz arpl fbld (bad) popa ret divl js or mov add sti sub and sbb fistpl mov mov pop sbb pop adc daa pop sbb mov subl aaa mov xchg dec sbb sbb imul loop arpl pop enter imul mov rcrb xor inc js push aas sub xor (bad) jge (bad) mov pop inc mov cmp mov xchg sbb aaa xor xchg sub arpl ret push sub push std add or pop shlb add add push xlat add mov rclb mov lahf fistpl add out sub leave push or xor ss xor jecxz xlat lea sbb mov xchg dec pop push cmp jg lret or dec add xor xchg jae xlat (bad) sbb sbb mov roll mov or pop outsl sbb inc jnp sarb jecxz stos or fwait pop test pop fwait mov test mov ret fidiv pop xchg jecxz lahf mov adc xchg aaa jg rolb cmc ficom xor aaa mov pop imul fidivr sub sub xor imulb mov pusha outsl and cmovae xchg pop shrl or pop and fnstenv fcoms push jnp arpl add or call jae lea cmp pop daa faddp xchg and or or sbb or mov popa out or repnz adc xor xor js pop push scas ljmp (bad) and ret xchg push pop and pop add mov (bad) and pusha sbb lret or mov nop faddp fisub xor loope nop ficomp sub mov fcoms fisub jg pop outsl pusha out xor push setb pop mov rcr das lret or xchg out enter imul fcomps rcrb pop rolb inc push btr outsl leave pop mov loop mov orl cmp add push xlat pop mov push xor mov mov or adc add add xor push lds testl mov rolb xor out xorl add pop insb leave fsubrs mov rol xchg (bad) add push add shll sbb and enter lea dec inc cld lcall adc add add and xor pusha or movsb xchg dec jmp and mov xor pop es xchg adc das inc mov mov cmp hlt xor (bad) add xchg mov or jae xor push add stos jmp jmp pop adc aaa mov and pop ss fisub jg ja and scas jmp mov mov out bt sbb mov mov mov and insb daa push adc push out mov das fmuls fcoms fcmovne xchg sbb fstpt fmulp inc ret cmp enter xchg sub mov inc das adc in lea and jnp mov outsl imul push inc cmp mov xor push cmp pop add rep xchg add and pop fwait add incb (bad) add add or das orl mov je adc mov pop sbb adc xor xlat (bad) or ret ja push sbb jg and xorl sbb fs xchg xor cmpsl or stos aaa sbb lahf movl adc push jecxz add pop pop mov mov jecxz pop add pop add mov xor and sub aaa pop (bad) seta add and adc (bad) js jnp arpl roll add mov or das jnp mov push scas pop adc jecxz jmp xchg popa xchg fiadd out aas das pop fcomps sbb dec cmp or ret and inc loopne mov addr16 data16 (bad) jecxz or adc fmul cmp daa mov idivl addr16 ret push and mov popa addr16 xlat or pusha ret add fimul cmpsl xor push xchg stos pop sti pop loope sbb imul sbb jmp inc icebp aaa ret cmpsl inc xor jo mov push xchg das add xor sbb jnp pop pop sbb js sti pop fadd fimul aas add pusha add pop or mov xor dec inc (bad) mov mov add fcomps pop add iret das nopl or pop inc or sti add sbb add or add pop sti or or add jge js incl gs add adc push add dec push (bad) leave mov xor add rorb and push pop fimul jnp adc pop scas negl jnp push iret mov lea das aaa add xchg xchg rcll add sbb sbb jae adc mov jnp add mov adc incl faddl jg add insl mov testb inc xor repz ja les sbb jo lahf inc adc sub or cmpl inc dec mov cmp sbb cmp pop dec les mov pop or add or add or int mov cmp sub add add addl cmpsb add or push xchg mov fwait jae (bad) lcall add pop or add add popa das ss mov pop dec dec neg push pop add sbb adc or sbb (bad) lcall sbb add mov add add add add mov add add add (bad) sbb push mov ret fildl outsl fcomps aas pop inc or jg or incl or add (bad) nop mov cmp inc sbb fbstp and sbb ja or add or andl and cmpl or pop and daa idiv mov aaa pop or add add add fidiv or sbb xor xchg ss sti mov inc call adcl mov insb fs and and push xchg lea add and pop (bad) mov sub push or inc outsl pop add aaa pop inc sbb mov or imul sbb pop sub pop or pop pop test cmp daa mull (bad) out adc push xchg adc pop mov mov das inc arpl ret fdivs shl add add ficom aaa push pop or jmp cmpsl popa out mov pop add pop jnp fmuls daa pop push add outsl pusha add pop and xor add sub rcrl shrl xchg cmp scas and fcomps fdivs sbb ficomp and push add dec sbb cmpl add imul mov push sbb sbb loopne addl pop add bound imul cmp decl sub and sti stos push fnstcw lret xchg pop sbb mov xor cmp inc add scas adc rol std aaa cltd movsb add add mov pop rorl les or adc outsl aaa in mov cmp and pop push fidivr sub cmp arpl sbb adc pop push and testl inc xchg in sarl mov sbb dec das addl jae js ret jae insb pusha ret xchg pop sbb add sbb jo inc ja ret push fstps rep sub popa lret jecxz cmp and pop inc lahf sub add mov and imul pop xchg lret popa or (bad) jecxz lahf xor sbb and lret js fidiv xchg xchg loope out dec lret rol icebp and pop jnp mov decl rolb push and sbb aas nop sbb popa aaa pop and pop mov testl pop jnp and cmp aas ss and cmp dec jb inc adc jnp add repz sti or dec mov add roll and sub push (bad) and xchg mov outsl lsl and aaa jno push or inc xor xchg xor pop push out lea push testb push outsl xor decl fmul push cmovae (bad) mov jmp sbb movsb xchg or aaa add xlat push popf sbb out dec add or daa getsec add or pop subl jp jmp lret popa inc jp and out or push repz shlb and push dec jae (bad) xlat add test inc push xchg aaa xchg fisttpl push std (bad) sbb test add add aam xor cmp dec xchg fbld sbb jecxz jnp and pop das (bad) loope insb fmuls pop adc xor or sbb xlat add fimul push (bad) mov hlt push jmp or push mov add js add push add push loop fbld add ficom fidivr jae mov push sub mov and scas jecxz jp jecxz aas and insb add daa pop add or mov jnp jecxz or push add jnp push das sbb pop and ret xchg cmp rcll cmp arpl add inc addr16 xor and aaa inc and sbb pop lahf mov push pop xchg outsl fs lea pop das aaa adc dec out jnp sbb mov or lods xchg nop ljmp in or mov fwait cmpsl aaa xchg dec ret add jmp ficom daa cmp dec hlt (bad) push aaa add or inc adc test lea rolb push add das or sub or les pusha xor sbb mov add xlat fs jo xchg cmp lahf or adc dec das addb ja movsb aaa insb or imul xorl add fiadd sbb pop and xchg xor rclb xor daa lock inc mov sbb addr16 add cmp loopne jecxz cmp cmp xor aaa in hlt xchg inc xlat pop xchg and lea mov inc pop daa mov adc ret xor sbb orl imul add add daa ss or faddp push jnp mov sahf mov aaa adc sbb mov push ret push xor sbb ret cmp or add or pop add pop in jae add je add pop push (bad) mov shll sbb jmp sbb jno dec rcrb inc add fs xchg mov jae testl and xor push imul fmulp xchg pop sub add fcomps pop xor jecxz and fwait inc shrb cmova lahf mov popa outsl (bad) out mov mov xor movq sti pop pop outsl fs xchg pop aaa ja ss sbb inc pop inc sar or mov popa stos adc push neg jecxz cmp and imul outsl and orl hlt sbb lahf daa ret push (bad) sbb add aas xor pop popf xchg mov inc sbb movl xchg pop popa orb ret and inc or stos aaa inc loop pop fninit mov pop adcb popa mov rol bound cmp fistpll popa adc cmpsl add adc sbb repz and add inc pop push hlt push sub mov cwtl mov incl loopne add add add inc addb add add pop add sbb jo sbb push add cmp mov rclb adc jnp add aaa or add sbb add pop add mov add adc cmp add pop add add aas add loopne push add mov or das addb and inc xlat out or adc jae jne add ret add xor sarl or and sarl or dec (bad) xor push insb orb xor call add dec (bad) xor xor jne xchg aaa dec (bad) xor rcr push in and xor add sub push sar (bad) mov add add add add add add add or add (bad) (bad) (bad) incl adc adc adc adc adc add add add add add sbb add add add add add and add adc cs xor sub mov fcoms jb jg push test je jb pop sub pop call rolb jb xor pop xlat pop inc inc inc sub (bad) or push xor es xor adc add and adc bnd push fsubrs pop cmp ss fiadd aad pop popa in jae je subl insb test add add jns push ret or pop cwtl or dec (bad) adc push jae pop pop lods orb jo push lock jb popa jae outsb pop jo jb jae xchg test ror sub add jnp imul pop jmp add punpckhbw pop jne gs int3 inc push sub inc cld mov jo jg pop stc gs insb outsl outsl imul add jecxz jno sub pop cmp mov bound sbbl bound inc adc jne pop sbb int3 adc adc cs add sub cltd sbb clc fbstp outsb imul pop sub inc mov mov popa jb int3 or fidivr je jo xchg sub dec mov cmp and push outsl sti fs adc mov or mov sbb add adc sbb or cmp insl jle push and daa or jnp,pn sbb push stc adc add nop fs test nop cmpsb sbb aam mov cmpsb test push add enter in add cmp pop sub push sbb jo push fs jle jp or enter fadds hlt fs addl ja pop and inc push inc push sbb addb fs lcall inc call and inc push and cwtl orl mov call and or pop xor push push fs inc push sbb sbb decb fcomp adc pop sub dec push xor and and ror xor or push push pop push sbb push bound fs inc xchg movsb mov nop inc push (bad) (bad) lock pop sbb orl inc push fs xor and and cmp jl pop push sbb inc dec pop sbb jo xchg fs inc push movsb ret inc push sbb (bad) sbb fsubrs pop inc push fs enter cmpsb xor and mov or push push pop and inc push sbb pusha push sbb mov shr add enter push sbb xor orl bound or enter int3 push xor and cli or fs ror and ss nop inc push sbb addb fs cmpsb mov sbb lret xor flds adc pop xor and and mov mov in in and adc pop sub sbb jp inc addps fs roll jo fs inc push mov sbb sbb push adc pusha pop and xor and and and cmpsb orl scas mov enter mulb addl cmpsl or push nop inc push sbb sub push sbb push push sbb insb jbe sbb mov movsb scas mov inc push sbb enter sbb ljmp or and enter ds push and jo or enter xchg or enter mov enter (bad) int3 enter (bad) loopne ror xor add (bad) or push sbb push sub sbb cmp push fs inc push pop data16 inc push sbb mov mov push sub lcall les shrb sbb loopne cld or enter (bad) sbb sub orl pop push jb mov test les enter fsubp shll orl or fs adc fs inc push ds push nop inc push sbb jo push sbb xchg push adc pop inc cmc push and inc jge (bad) fild jbe insb gs mov test mov arpl stos test cmp js add jg inc add ret outsb push popa or xor xor andb sub pop add je dec outsb adc (bad) mov imul and add mov cwtl add push add ljmp push add inc fs arpl imul adc fsubl add outsb push adc clc add out (bad) decb imul add add addr16 dec gs bound and inc js add (bad) lds je add mov fs jo outsb fdiv out gs jg gs or (bad) fs mov gs and jb jno xor scas or add or outsb push jge and sbb add jg push in gs dec outsl add push add add sub fdivl or jo jp jo inc adcl test and out mov popa inc cmp js push cli lea add or add fs fwait fs rcll outsl lret add popf sbb fs pusha fnop mov mov mov adc or mov inc cmc sarl outsl insb adc decl xor push outsb popa jo push fiaddl inc xchg jb je inc mov jb jmp adc ret outsb sub add popa je cld sbb lea sti add sarb (bad) add daa pop and ss push outsl in or mov pop dec jae insb gs orb je jb bound mov aaa sbb popa arpl sar cmpsl cli mov push add insb add jb (bad) icebp insl popa je cmp outsb add gs cli sbbl or jne jae jb jnp jle add mov jnp adc fwait jne push arpl fs (bad) sbb push imul adc push imul dec push dec rclb sti xchg sbb adc add adc int add (bad) fisubr adc add adc popf icebp sbb je ret int3 fisubrl cld adc (bad) dec jae (bad) adc inc xchg mov jmp xor mov out adc adc inc add pop dec popa jae fiadd add (bad) adc movq repnz ja jmp adc insb gs ljmp push shrl idivl adc mov sub das pop test dec sbb bound dec data16 outsb jo lods ret jnp je jae pop pop add push add pop adc outsb imul popa jae add adc xor nop jmp leave jae jb rorl add push (bad) fsubs adc je jo push mov cmp add push add inc inc mov fild add xchg mov test ss sbb popa jae and lcall mov (bad) or je js adc pusha pop mov (bad) adc test fnop arpl imul add pushl xor add add outsl bound dec and incl js add add sbb sbb pushl push jo outsb outsb adc dec jae inc inc push dec gs fs jns gs loopne jge adc bound addr16 inc outsb je jbe pop incl dec inc dec popa jo push outsb addr16 dec add jbe addb dec outsl popa lods fdivl push sarb pop packsswb xor arpl add clc inc mov dec add dec outsl jbe mov das test (bad) push outsl push imul add mov popf fiaddl popa cmpsb add imul cmpsl add and scas add inc imul mov dec mov add jb push gs outsb arpl jno mov cwtl gs ret jno gs jle push mov sbb xchg xchg int3 add imul jbe jmp roll push and pop ret rcrb add adc emms rcll into push add adc pop xorb imul out inc add pop repnz gs jae mov insl outsl inc mov cltd push imul test add add gs icebp add pop dec jg cld or or je std inc adc push mov outsl push and or test leave cmp or adc mov loopne jns add sbb push and push js pop or and adc add add gs hlt xchg jno xor jb lds xor pusha pop xorl cmp (bad) jg (bad) addl or push inc add push addl loopne sbb add dec js (bad) into outsl pop pcmpeqd push jle push outsl imul lock lock mov pusha inc add jno adc push out fs add xor dec jp sbb inc add mov jge xchg push push int xor add jbe mov sbb ss nop invd sub pop out cltd adc jle pop outsl add gs leave nop or aam mov push add inc lods imul subl add or roll fdivrs cmc sldt movb jae (bad) or gs or fiadd leave or push jb xchg push fsubs imul aad movsb add and in add adc add gs mov push popa push mov adc imul xor insb insb fsubs icebp xadd or jmp test pop ret adc xor aad jo pop push jne bound (bad) sbb add scas fs adc add add and jne into test aaa int3 sahf push add movnti cmp jae gs incl sbb jb add pop pop pop insb arpl add mov pop push mov popa jb jbe add fs insb outsl outsb scas (bad) mov push jae jb outsb jge sub gs sub decb ja add fs jbe push or fstp out sahf dec add insb arpl jbe pop add pop (bad) mov pop arpl pop insl popa cmp xlat pop popa addr16 (bad) jo jl add jne out cmp imull add jne pop popa arpl insb outsb add fdivrs addr16 xchg add outsb jnp inc adc pop arpl lahf in scas cmp add gs fs or or sbb pop lock mov decb fwait add and adc and add and adc add sub add in jmp sbb mov pop jo add imul fnstenv push or outsb pop outsl pop (bad) add jbe lock xchg add jo mov outsb ja std subl fs pcmpeqd fadds in or arpl add and jne jne je popa add sub insl icebp or fist add add pop jbe outsb dec idivb jg add arpl add push xchg out jle sub (bad) or jbe (bad) or imul fidivrl sub lahf cmp or out rclb outsl imul add add jns add add cs (bad) ljmp cmp outsl sti add add nop loope mov je add add or rcrl pop pop dec add pop aas sbb fmull xchg xchg pop mov imul loop pop inc nop add jne jo jg in xor mov mov add outsb addr16 mov add addl insl gs arpl orl add jo test mov xchg rcr or mov jae std loop cld xchg add add add cwtl addb arpl mov outsl andl jae stos add jb es add pop insb in jae jb mov jns or sti jns or insb aaa jnp jbe add or ja (bad) pop mov push add lds and mov je ja or add add je (bad) add add arpl jmp inc add or (bad) (bad) repnz or jbe xlat push (bad) or jb add outsl decl add call (bad) fist notl es (bad) daa adc pop push add pop add jp gs push aad outsl js pusha inc push mov jo ficomp inc ret dec addl add test jmp add sub (bad) mov cmp sbb sub and xor push add andl (bad) idivl or insb insb add push arpl inc fcomi std inc inc jb insl add push dec add or add push outsl and les push push sbb je scas inc sbbb and add ja inc inc dec jae add xchg add add xchg add add xchg add (bad) cmc xchg add pushf add (bad) pop add popa insl add add or nop mov movsb outsl jo add movsl add outsl outsb insb add pop jae stos add sub add out jg outsb add scas add add add add pop je cmpb dec mov jae dec inc add add mov inc push dec ja sub adc dec push dec rcr fisttpll cs dec dec adc sub add inc push dec inc dec xchg cmp or sbb add jbe or je add push lahf push jle mov lsl inc push arpl adc js cmovne cmp add xor loopne fsubrs add addr16 nop sub pop inc and xor in xor sbb adc add pusha and pop cmp push add popl loope mov add pop push adc subb pop adc rolb sbb add add add pop pop add pop aas mov push add add add add adc inc push push add in nop test rclb nop cmpl pusha and pop adc in add das pop das mov mov in sub inc or cmpl and (bad) movnti out clc ja add push add or divl push add jmp jg add add and inc add ds adc pusha ss adc aaa add testl (bad) incl add cld decl push pop pop push push push push andl scas sti repz push push mov adc insl xchg (bad) lret insl pop ret ret ret add mov arpl lahf xchg fisttpll std add mov xor iret mov gs pop test mov pop pop pop pop pop iret stos roll push push lds pop push mov out adc pop inc mov adc (bad) pusha pusha pusha aaa dec loope pusha subl jb por and add dec and push push push mov flds in jge or cmp sub add inc pop push leave sbb lahf pop push fbstp das cmp dec jmp dec jb mov dec dec dec jecxz fildll and pop push pop aaa mov mov bound and sbb in sub pop imull outsb adc fildl test int jl shrl pop (bad) stos jg push add add ljmp outsl sub push scas add mov mov lods js js ret testb inc sbb arpl mov sbb jg add push pusha jnp ja add mov push add ret mov mov jno ret xchg mov jbe pop adc fdivr jne es xor sbb ja sub rorl in pop pop mov xchg fdivr mov decl dec xchg decb add push add incl and pop adc mov mov rolb ret mov std lcall pusha xchg adc imul add add in lsl mov adc ret scas fmuls jnp and sub mov mov push fadd mov pop ret jmp movsl mov sub mov testb mov in std decl cmpsl add mov and jne in scas add adcl pop push mov imul fstps pop mov lahf adc std add sti mov mov jg pusha das and ss pop pop pop pop popa pop pop pop stos adc or add and nop mov push sbb nop nop nop or (bad) js jnp ja add push lret dec addl pop add inc fsubrs fisttp add add or pop add jne std add ret push fadds jmp pop cmp adc aas lret insb dec or lret outsl out cmpl dec add xchg and push mov add popa out imul push add mov insb add mov xchg or pop mov mov clc add sti xchg adc imul pop add or and adc mov (bad) adc (bad) (bad) dec add mov cmpl fucomp xchg incl mull mov add mov fsubrs (bad) rorl aas mull mov pop enter mov insb add (bad) jmp in pop fnstenv decb push pop push aas inc mov or and sarb xchg aas adc xchg sub rol mov mov jne incl mov or fsubrs pop popa mov xor call add jmp pop mov mov or inc (bad) decl jae pop aaa mov stos imul ret xor xor imul pop push mov incb incl xor sbb fmuls jae stos (bad) jg or and push lret aaa loope mov imulb pop sbb inc bndstx add stc mov add mov std push sbb xor xchg mov lcall divl pop add stc pop jae dec scas out add aas dec rorb repz mov pop sbb inc push lret add jbe and pop orb jmp xchg push ret addr16 cmp pop js xorl pop decb in jb pop test inc add inc add push ljmp mov movq ja mov fsubs test cmp inc inc mov or mov push aas iret add ljmp pushl call fwait sub jne (bad) adc jg stos out sbb add mov add (bad) or sub loope cmpsl or je inc dec xchg imul test adc dec xor gs lcall lcall push push push jne push push movsl dec dec dec lds sarl ret pop mov scas scas scas scas sti adc data16 add xor dec inc and pop aaa sub xor imul and lahf xchg xchg xchg add push addr16 daa or inc and adc jnp arpl dec mov push push and pop push push push stos gs add gs pop sbb push xlat xchg int pop pop jmp lea bound jnp out mov or inc negb pop packssdw xchg pusha and push xchg sarb dec dec sti jg add inc xor dec adc fxch sbb adc loope sub popa subl ret mov add test cli rolb mov mov lret mov push out pop cmpl push testb jo inc xor cmc add in sbb imul pusha dec jp addr16 cmpl adc sti cmpsl arpl add dec std pop je aaa aas mov testl pop outsl xchg in pop xor mov pop test fs (bad) mov (bad) in inc add ljmp inc fmul or jg inc or jnp arpl mov mov push out push lods xchg daa jg popa out or inc sbb mov addr16 mov ja mov jg iret push imul enter push push test insb aaa std subl ficom call push xchg sarb fistpll mull popl or mov test xor enter das incl or fidiv jae push push ret xor add jg roll lea dec cmpl pusha out and and xchg movl jg mov je aas cmp inc fnstenv or decb push pusha ret into jnp pop pop cmpxchg adc and ss or incb decl add add popa and incb mov add out (bad) sub mov jge push xchg cmp jns subb subl pop or or test add jbe pusha outsl sbb pop add stos jg sub test cmpsl cmp adc lar icebp and mov insb and daa ds push std add or add pop div add add sbb jo mov add out mov add jne pop cmpsl in pusha add addr16 mov adc jae sbb ja xchg or aas pop jae sub incl popa add adc or inc xor sbb arpl divl add (bad) xor xor push or insb xorl dec xchg out incl mov daa and scas xchg dec mov ret mov js je clc adc xchg or xor mov adc xor jae movq dec cmp xorl push cmpsl or stos cmpsl inc or xchg inc xchg sbb push push push and out fsubl pop lds in adc adc daa pop arpl add test stc stos pop andb lret add pop or bound dec dec dec mov lods sbb xchg sub rsqrtps jne scas icebp inc loopne xlat lea out add in jne inc add decl cmpb dec mov xor out jmp lods test out arpl scas cmp aas xchg call cmp (bad) repz lds (bad) ja aas cmp add (bad) mov inc aas mov imul leave add aas push push push gs add jnp pavgb adc cmp push jmp inc xor jmp popa (bad) incb mov push add incl mov mov jnp pop repz (bad) lret and imul test cmpsl and pushf movsl int3 or mov aas lahf mov jne jmp sub jge sbb leave xchg or pushl jne scas test daa popl add push inc stos (bad) (bad) sti mov cmp xlat or pop mov sbb mov xchg nop jb movl daa ret std ja cmp (bad) and sub sbb xchg (bad) addr16 or mov sbb daa pop cli adc add mov add xor test and fidivrl addb test xor xor mov or push push scas or push or mov dec add push std jle and out (bad) push add fcompl pop aas cmp add add add adc std scas add add imul or or (bad) mov xor add bound push fnstsw add push add add insl add popa das jns mov xor jmp sti mov sti add insl pop add sub adc cmpsb test cwtl imul mov std fstp fnstsw pop add push cltd add imul cmpsb test psrlw sub test push jb jae pop mov inc cmp xor scas mov add sub lods jmp lods insb dec outsl mov jne add mov adc add adc out mov add add adc sbb add addr16 push push out xor pop jmp jnp rclb or pop rorw sub jecxz add je xchg nop adc add fsubrs add mov inc cld adc in add test sarl sbb test mov add std add js insb jns and decl cli xor and cmp sub cmp and popa outsb fs loop and jae aas ds (bad) out decl cmp jae gs bound aas outsb jae and outsb cmp push sub insl lea data16 arpl cmp insl int clc ljmp jbe and insl popa outsb imul push std lahf insb or and jb jae out fisub mov xor cmp arpl adc je push adc bound push push or rolb (bad) out out (bad) inc dec gs insb and and dec outsb jbe dec popa psubq jb das xor das push cmp out dec test cmp les cmp mov out jo je bound sahf (bad) cs jne nop sub aaa dec add sub gs inc and insb outsl ja imul xor (bad) sub lock adc and leave popa inc and dec hlt (bad) (bad) (bad) decl and cmp xor xor xor sub sub xor clc sub jb xor jge daa mov mov aaa xchg xor xor cmp popa sub bound xor xor xor xor cmp popa cmp (bad) (bad) aas xor xor cmp sub sub sub sub xor and popa xor ss xor xor aaa arpl ss sub sub sub pushl xor xor and add in adc mov xor popa xor sub sub sub cmp mov (bad) xor popa cmp xchg xor js das in fsubrs or adc call lods add decl icebp add mov pop mov jmp js andb mov push mov enter fsubs jmp or jo andb mov loopne lock std aas sti mov addr16 js mov scas je or add pusha pop mov mov inc (bad) out mov aas add inc mov mov mov add movsb add pusha movsl andb movsl add pusha cmpsb (bad) (bad) (bad) incl cmpsb loopne add pusha cmpsl andb cmpsl add or es push popf movsl jnp or add loopne call test jns mov inc ja fisttp mov enter ffreep jg call mov or or inc movsb dec movsb push neg ja movsb pop movsb pusha movsb push movsb shlb movsb clc test or dec movsl pop movsl push movsl cwtl movsl mov cmpsb mov mull call cmpsb inc test pop test jo js or (bad) ljmp cwtl test mov mov test mov (bad) (bad) ljmp sbb xor dec stos push stos pop stos pusha stos push stos cmp (bad) ljmp cwtl stos mov stos mov stos shrb push stos cmp (bad) ljmp cwtl stos mov lods push lods pop lods pusha lods push lods subb jecxz ljmp lods mov lods shrb adc inc lods dec lods push lods add add enter cld (bad) ljmp or cmp dec scas pop scas push inc clc mov scas test mov add dec (bad) (bad) (bad) cmp mov mov mov or cmp (bad) lcall push mov mov mov or loopne sbb out push enter add cmp pop xor sub lock incl call lods adc lods jmp out mov jecxz (bad) (bad) fmuls add cmp pusha lods push jnp out ljmp test mov shrb adc lcall inc scas push scas pop scas push scas mov mov mov scas loopne rcll (bad) (bad) call scas adc xor or inc hlt mov scas shrb lock add btc fild mov xchg mov popf dec xchg mov int fdiv or sub push mov jo and mov cwtl mov mov push rcr popa adc nop push mov rclb sbb adc leave pusha lds movsb nop imul push xor imul lock and xor jae jne xor ror lock jge aaa xor xorl mov sub mov add cli xor jo mov shrb add movsl movsl leave mov jo nop sbb jmp cmpsb adc mov cmp sarb lock adc test test test shufps test test test test test test test test test mov test dec movsl pop mov mov lahf xor cltd xchg loopne call stos or ljmp xor push stos lods stos mov stos test mov shrb lock jl (bad) js scas or jne push jno (bad) arpl scas mov jns scas enter mov arpl jg or dec add mull movl mov (bad) mov clc mov ljmp jno jae push arpl jae jne pop push adc dec mov push cmp mov sub sub push orl mov cmp outsb std push mov test mov (bad) scas scas scas rolb add add adc mov jg js pusha or test mov test sub cmp pop xor push mov inc pop jmp lock clc inc sbb je dec cmpsb push cmpsb pop fistpll cmpsb nop mov clc inc and sbb sub push cmc cmp add mov aas inc push mov adc adc (bad) sub incl mov add nop add (bad) icebp mov out or call push pop mov int mov mov mov outsl addr16 insl and add stos add jne fiaddl in and outsl mov gs push inc add and loopne lock leave add sbb mov sldt iret jne xlat test adc popf or cltd cmp add int pop add sbb fcomps xlat add and mov sbb push adc add or hlt out add pop jo add cmp notb out add verr jnp or pusha setle int3 mov verr xchg add push add iret nop mov inc imul das pusha add jbe sarb sti repz xor add pusha shrb je notl add loopne and (bad) lock int3 and daa inc cs mov popf imul adc cmp daa in and mov idivl inc add inc bound or mov pop add and add and or imul xchg add push ds out inc (bad) add inc add out loop mov lahf fstpl inc push jae daa in jae arpl and fninit out loopne mov (bad) gs repz mov cwtl jae cmp movl pop repz lea add call sbb shlb fisttp movl and movl clc sbb lock add je movl mov sahf pop or or add push stos or mov mov dec add sub mov call cmpl mov insl xor add xchg cmp mov mov nop mov lahf cmp jg jne movzwl cmp je push add test (bad) mov test jbe clc xor test (bad) fisttp ljmp popf inc mov test frstor cmpl sub call jnp adc sub mov and add jne dec jbe or add add sbb mov sbb and call add ret xchg push xor mov fist in push lea push mov sub rep mov mov add (bad) in fstp decl loopne movl add int3 movl in adc ret inc clc out and mov scas test (bad) jg mov js mov jmp cmp je rcrl call in add fdiv cmpxchg or fisub cmp je out (bad) jne or add fisttp pop test je mov dec add sbb xlat add add addr16 mov rolb jno pushl dec add adc insb pop add add inc std mov pop or call and call pop add add push mov (bad) (bad) (bad) std and je mov movzbl cmp jle mov xor cmp cmove jmp sub test jne jmp pcmpeqd (bad) jg ss mov fldl adc (bad) inc rolb mov add insb fdivrs sbb lods clc loope decl push or test mov add mov (bad) lcall stos mov lea mov mov add mov mov jg out (bad) decl add mov call lea inc dec mov out ja cld mov mov sbb dec and call xchg jne mov loope jle add movl mov or mov std mov adc push inc and mov jbe add stos dec call mov sti xchg test je leave test jne call fldt sbb pop pop ret lea inc aam adc jmp mov imul in (bad) inc jecxz jbe fucomp mov adc testl testl js and (bad) jne ja out jle jmp mov call add inc mov sub sbb outsb xlat outsl or call and jmp out (bad) (bad) (bad) call mov jbe movl jmp jbe (bad) (bad) fistp sub sahf pop loopne lods sbb add push arpl jno adc stos mov es adc mov ds mov xor or cmp fisttp add test je jbe xor xchg dec enter call or adc add mov ret (bad) (bad) fbstp add mov jmp jmp cmpsl add out mov scas sub mov dec push ror fst mov and adc mov nop ficompl and jge xor stos and ret push lcall ret mov call jae sbb sbb negl sti xchg aas aas mov test je mov call jae bnd enter sbb das mov cli std lcall testl and or mov adc outsb add add or sbb pushl test xor jmp leave jmp pop mov arpl inc jl push xchg pop sbb call push add push push pop jmp fs nop or scas dec outsl pop int3 sbb test and jno dec popf out scas seto mov mov daa ljmp jbe (bad) je mov call push mov push aam mov lcall nop ds (bad) outsb ret sti xor nop mov jl les add add (bad) or call sbb sbb (bad) adc add lea sub ja jnp pop mov ret add adc sbb xchg jg fildl inc jo add lahf mov mov jo xor test decl push fstpl movups movsd cwtl pinsrw add nop nop jg js inc cld push mov push sub add inc jae es xchg xor lea movl (bad) xchg rol inc adc pop push pop fist call (bad) dec jl js and mov test jle sti jg stc xor xor and je decb stc add stc add stc add dec cmp je cmp je mov mov test mov mov mov test jne cmpw je leave xchg jge add cli adc lds fisub jae dec sbb mov data16 (bad) imul or mov dec dec jl,pt or mov sbb cmpsb jecxz mov dec mov add test lea fcoms es sti mov testl sbb out jne cltd and jl or jne pusha lea cmpsl in cltd mov add lea cld xchg mov jl es (bad) in jmp icebp or insl jne xchg xchg repnz aam or add lahf mov mov aaa or inc or mov decl inc add pop movzwl lea mov movb mov mov outsb (bad) cmp sbb sub or cmp xchg mov push popa mov mov call and movsl adc sarb shll xchg jmp jnp sbb jl (bad) jbe jmp test inc rcrb push xor ja lahf test or add mov std hlt fbld decl push mov and cmp add dec call mov cmp jnp call out add cmp mov cmovl ret mov sbb (bad) sti stos mov movl out movl (bad) (bad) mov and lea shr and cmp jae test je ds (bad) je cmp bswap or fisttpll test add add dec sub mov add or fwait cmpsb imul shlb call aam push jge adc add out jle rol inc jl add stc sub mov inc mov rol jne jl in or cmp dec stos xchg fdivp sbb fldcw jmp add add scas (bad) loop call mov mov leave xor pop scas push push xor or int in insb cmpb cmp jb or dec incb sahf mov mov (bad) jp out cli mov mov jg cli nop fistpll cmpb jne mov sub mov xor xor aas mov adc jle data16 out adc rorb jmp adc cmp pop je mov lea cmp jg mov dec pop mov cmp jae sbb rorb (bad) dec mov (bad) out loop mov pop (bad) cmp aam xchg je push mov mov es pop mov sarb push mov ss dec popa cli dec sbb je mov mov sbb mov mov mov mov cmp add mov leave push mov sub imulb pop push pop jnp (bad) (bad) dec and mov mov mov sbb cwtl movl mov mov xor movl jg data16 mov sar sar and mov adc fildll push add dec push jnp sbb minps fcomip mov and push dec bound into add adc cld mov movl (bad) xor pop pop jle (bad) out mov daa pop mov call sti dec xor fisub sti sbb je loopne mov jb fisubr and dec fs pop mov sti test movl dec pop insl rcll mov dec pop push movl or jge mov pusha (bad) (bad) seta inc or movl jne (bad) std pop mov movl xor pop lds lock xchg (bad) xchg add pop cld mov mov and or or xchg dec fnsave loope inc rcll mov pop and ret std mov mov inc xchg cltd adc pop xor jne dec lock in fidivr jnp add cmpl jnp or xchg or sub rcll adc cmp jb inc mov in sub or jmp add jbe loopne loope test je pop cmp (bad) mov in and mov je scas jecxz adc sub or dec and add cmp cmp (bad) int test sub stc cmp jb sbb sub add je aaa in mov lea outsb or and out pop xor (bad) out jbe addb movl cmp (bad) pop mov mov sub std mov cmp inc adc out mov dec add inc adc mov addl add pop pop pop sarl pop sub add cld dec outsl xor repz cmp lea jbe inc jg mov mov cmp lcall test mov insb gs xchg jg jmp cli mov cmp cmovae inc jne cli mov add jne push add iret sub push pop in xchg mov sub add cmp ja (bad) gs sbb lds lds sub xor jmp push dec aas test mov fdivrs ret inc xor pop xchg jmp or je loope idivb push push add mov cmp push jmp and rcrb mov jb pop add pop and ljmp sub leave mov or (bad) jle shrl pusha add mov fcomps not mov and mov mov and aam out addl jne clc push ja sbb call and jmp mov add lods sbb (bad) fcos mov mov mov jmp lret or dec mov je and rorb and call out add lods and dec and ds mov out sbb mov cli je,pt cs inc sbb cli repnz jae pop stc cwtl jmp pop and pop sbb outsb sbb xchg and adc jmp xor call cli loopne pop std pushl fildl inc or movd sti cmp mov lods adc mov test xor adc sub adc test scas mov adc mov jo push adc rorb or lret or adc adc and scas pop mov stc pop xor std out adc andps comisd movsb cli or cwtl (bad) xchg mulsd sti mov lock and addps adc std enter adc subps push cmc pop cmp jne (bad) cmpnlesd or xor sbb sub cmp fidivr mov cli movsb ret movsb jbe out (bad) mov xchg add jne in jg mulb xchg inc je adc add mov mov mov push js dec jge fild push sub add mov cmp push inc je (bad) int3 std jmp mov add cmp jbe stos (bad) or or sar je in jo and imul mov jle idivb adc mov fimul push adc loopne mov fwait (bad) lock cmp sahf mov pushf mov cwtl jb aaa ret sbb pusha out mov andl jnp outsb push add nop inc sub mov mov push add dec push add mov mov add push fmuls fmull iret les out ss pushf out xor or and out sbb adc pop xlat out sarb ret out cmp (bad) push call dec lds test lahf pushf hlt mov nop ret popa and lock lea out add ret mov jg jge mov out andl jp adc call adc or imul popf lock xor add or or pop aaa inc xlat shr and aam xor push shr adc pop fnstsw fadd xor pop cmp (bad) jl push push xor inc mov (bad) leave test inc mov out dec hlt or movl pop inc xchg es cmp fcomi pop testb ficoml push stc cmpsb mov call pop or mov sub add aad (bad) cmp fcoms push rcll repnz (bad) fstps fldcw mov pop add cwtl mov test leave and out popa mov and das ja pop cmp mov adc mov ret sarl js pop xor xchg out cmp cmp je jae icebp cs and aas inc sbb ret and sbb movsb iret jne das inc mov sbb icebp fldl je and add pop divl xchg add sbb jbe clc mov arpl mov aaa js jl inc mov aas lea shl add fisttpll es add test popf fildl in xchg jmp pop or movl mov mov lcall add cmp push add loop (bad) (bad) mov mov and dec inc sbb (bad) popa mov shlb orb lds aas dec lds aad inc aas pop test lea mov pushl mov aaa cmpsb push jg mov lahf mov inc add popf cli jge pushf xchg sub pop iret lcall ud2 loopne inc (bad) pop test mov dec pop lcall insl hlt mov js sub call hlt loopnew mov mov mov mov stos stos sub rcll mov hlt js add movsl test jg ret addr16 and clc fwait movl inc inc mov or stos movl add adc pusha cmpsb test scas sbb ret xchg mov pop fisttpll inc sbb mov dec dec dec xor gs leave popf hlt or cmp xlat xor pop les lock test shlb ds fimull inc xlat xor mov les fdivp ljmp lods cli jne xor pop mov das dec cmp rclb inc cmp and or leave sub icebp xor (bad) pusha inc xor test lcallw and in fadd cmp aas add das lea inc push cmp enter inc dec fidivr sub jae mov lods mov mov jnp mov push popa push fwait or mov mov mov cmp jb cs jg lret or mov add mov dec jl add loop addb ret mov mov int jae idivl sar mov adc push or push xlat pop pusha pop push sub add adc jg aaa cmc jecxz sahf inc inc add jecxz jb mov sbb repnz xchg jae adc xchg fbld nop pop mov mov cmp clc (bad) xchg xchg mov inc push addr16 inc or dec add inc or jne xchg and or xchg jmp jo loope add mov dec insb inc std inc andb inc leave pop sbb jge addl aam js cmc ret out shr xor sbb prefetch cmp stc fsubs nop (bad) decl sti add call xchg mov lods xchg push js loop sub call popf nop push movsl cmp push or mov (bad) xor inc sar jmp mov cmc pop add (bad) shl test je mov jb dec mov (bad) jmp mov xor popf shl push jle imul (bad) push repz shll cli jmp orl xlat data16 dec push (bad) (bad) jmp lea jns jbe popa sarb push add dec aad lea leave lea pop push test arpl inc out adc (bad) jmp and cmp xchg inc jo mov pop jmp addl cmp loopne pop aam inc add out repz jne inc js movq cmp add jmp jg jmp stos std inc je (bad) jmp ljmp inc lret inc xchg hlt std inc and inc int3 jmp out adc xchg mov and or mov sti cmp lock lahf and test mov call stc add mov sarl (bad) mov pop xor cmp and add mov or jmp ret ljmp sub faddp sbb mov bound out mov adc xor pop mov cmp cmp loope jmp repnz push sbb pop pop cltd jge dec mov cmp mov adc push out popa test lea cmpl mov pop fistp pop adc add bound sbb jmp xchg ret lock call rorl pop push dec in xchg push cmp sub jne idivl xchg sbb addb sbb aas (bad) ss add xchg idiv (bad) jmp or inc or call pusha or test adc aaa or test rep and or std lahf adc mov mov mov mov insl ret (bad) cmp andb add mov je and push adc fsubrp mov lea jnp pop daa movsb mov jg out or imul dec scas pop or mov push xor sbb inc scas jb hlt rclb push loopne xor inc mov cmp or jmp inc or insb xchg inc lock je and push hlt dec js je or sbb mov fsubr or and (bad) jo sahf jnp shll xor test jecxz daa aam mov rorl out fwait outsb xor cmc loope push jmp and jecxz (bad) adc or ljmp pop mov lea add cmp ja lea mov and pop xor arpl movsl push fimul pusha cmp fdivrs add out scas adc test mov mov push dec cld adc call lea ret das or pusha enter dec sbb je inc xchg mov lea sbb push jne mov jge loope test mov in test out mov (bad) xor call test cmp daa pusha sbb sbb inc mov xor and cmp int3 pop push mov mov cmp incl lea and mov mov pop js enter rolb pop fldl jecxz ret sub shr jnp xchg cli mov and js pusha jae inc xchg add jg pushl cli add cli add je cmp je cmp je mov xchg mov mov std or add jg sahf cmp jmp push push add push add outsb pop pop push or or les xchg jmp mov adc adc push push scas fistpl setbe outsb loopne jae dec jb jmp enter loope xchg fisttp (bad) push mov jbe jmp mov jo jle test or pop sbb push loop pop popf jecxz push jmp ret sbb (bad) js les mov xchg xor adc cmp mov mov test jmp cld out cmpl call and fdivl push pushw inc and nop (bad) das jmp std ffreep cltd mov ret add test (bad) data16 ret std mov jmp and ret xor jle call incb adc je dec jo mov stc mov xor xor dec xor bnd jp xchg mov ret rorb arpl xor add jae scas jle push mov gs xlat (bad) jne jp mov jle pop cmp lret pop dec dec adc int (bad) xchg cmp push jle inc inc xor into adc in add jnp mov dec lret lcall jmp adc dec and enter cmp das mov mov sbb xor adc (bad) mov jl mov in inc or inc adc xchg loope xchg xor mov xchg lret loopne movsb jmp cmp push dec rcl addr16 outsb xor das scas mov pusha adc inc call mov inc or js orb push and dec or mov push call pusha ret add cmp aaa cmp or and xor mov jmp sbb xor jg test loope and insb rorl loope loopne loop lcall mov sahf popa jbe je es adc or sbb jbe xlat in int and and movsb pop adc jmp mov cmp push and push sbb ret pop mov jmp fdivl dec push or nop xchg add ja pop sub cmpb mov out loop ret jno cmp jae xor (bad) cmp jne sub mov xor test push push pusha cli jl dec mov fwait scas sti add aaa cmp or jg inc jb lahf push (bad) lea jmp ret xor push outsl stc pop add jecxz cmp mov fdivs sbb fnstsw pusha mov mov mov mov adc add sbb mov sub add cmp je stos (bad) xlat push jg and add cmp inc mov in cmp sub test or xchg mov imulb xchg and rorl cmpsb push dec lea sahf loopne add in mov mov jmp sub (bad) (bad) fucomip inc add push mov mov mov mov mov lea pop jge decl cmpb je mov roll pop jmp xor xchg clc cmp mov jo lods inc and bts and push out (bad) mov pop push jno std or shl jle and sti inc mov jae mov jne push sbb shl dec and sti jg fnstsw mov pop sub and roll and cmp je ja lock sub fnstcw dec and ja inc mov add mov push adc aaa adc test out push mov mov mov jecxz (bad) dec add movl or fs xlat lock mov dec or push std adc decl add mov cmp push adc dec (bad) stos outsl repnz lahf inc xchg xor add adc push add cmp jbe je push add inc and lret (bad) test cli ja ja in cli aad xor jmp sub lar cltd jmp lret adc push imul pop sub ret xchg cmp mov stc into push addr16 je xor fsubs or inc dec inc add enter (bad) test inc and mov mov sahf cmp jl add mov mov mov daa or adc test xor dec fst sbb in add call inc aam sbb scas insb and pop cmc mov push loope add pop std rolb adc lds xor stos je js das sbb lcall call push ret sub xchg xchg (bad) dec or and and (bad) pop jmp xor in adc add loope xor jno mov (bad) mov sbb nop pop jmp hlt jo add or mov and add jge jb iret cmp add and int xchg jo add mov inc push pop and add inc or mov out call cwtl inc cwtl jle and test mov or mov jge mov mov jmp pusha xor and and (bad) (bad) xor and sub pop and call aaa je push movsb dec and out fsubr cmpsb cmp cmpb jle mov arpl sbb adc push (bad) incb ds cmp ja out lret rol add add jo pop mov fisttp sbb mov rcrb add or and cmp ja outsl rcrl or iret test pop xor and push sbb mov daa sbb sub jmp add push jmp inc xor outsb je jae ljmp ljmp xlat cmc and divb js adc push xchg sbb or rcrl pop mov das adc ret sub cmp aam loop sbb inc insb dec or scas leave roll xor xor inc mov jmp and fwait es frstor outsb and test hlt icebp popa xor xor jmp sub call pop cmp push je jecxz dec mull std mov mov adc cmp mov and icebp jno das jae das mov out and call sub sbb pop (bad) ja rdtsc rcrb cmpb mov stos add xor push stc inc hlt mov iret adc add enter add (bad) out mov sub add divb in push push cmpsl sarb js outsb and or movsl loopne mov pop insb je pusha inc pop lcall frstpm(287 pop mov (bad) sbb jg pushl test lea lahf sbb add push ret mov out mov add cmp add inc push mov sar jne pop pop mov sbb add and movsb adc je mov and and sbb dec cmp xor add mov enter fstpl mov outsb xor sarb or outsb add sub mov sti push push loop out mov and mov xor shr sub jg (bad) pop mov and and or add movl fsubr push dec outsb dec andl mov push dec add and (bad) and fs inc popf dec cmp inc sub sbb inc outsl inc push movl mov out xchg or and (bad) insb movl clc mov enter movl (bad) cltd mov andw (bad) testb sub (bad) in ds lahf movl xor inc idivl and movl inc jo outsb je inc js sbb mov ja mov mov xor orl fisubl std mov add dec push pop mov test cmp dec pop jne cld push and jae jle mov stos and pop popf or xor lret jecxz dec sub cmp xorl test jns mov sub cli cmp fcompl inc xor clc push je jmp adc mov push ja pop dec and rcll insb and inc or cli and cmp shl lds dec xchg sbb adc mov dec pop push cmp adc add or and mov clc out lahf inc adc leave movl sbb sub pop bound xchg insb lea cmp mov jb push add pop inc out add inc inc mov mov add adc inc in test or inc adc lcall mov lcall xor aas sbb (bad) push xor cmp inc jns or cmp adc and sub mov cmpb ficompl popa popl psubsb cld adc jge xor xor imul pop inc js cltd pop jle sbb jp and dec (bad) or (bad) fild lea mov shr add shl mov shl jno adc pop cmpsb cmp outsl cs sub jb sbb rcl sbb sub sbb ffreep fisttpll cmp xor enter ret decl imul clc cmp rcpps cmp xchg test inc je je push subl js lret jg jecxz push int3 inc and add movl sbbb dec (bad) pusha xor dec and inc or pop adc pusha sub mov add jbe mov mov dec ficompl adc jp (bad) insb mov mov clc xchg dec lea cmp mov add movsb pushl cs add lea lret fidivrl fstpt pop and (bad) xor or xchg out faddl test or jae or icebp inc sub mov scas out addl dec mov cwtl lock sub in jne mov mov add mov jg lahf push les call sbbl cmp add call cltd mov dec add popl add cmpb (bad) xor mov xor mov or xchg insb push outsl mov lock xchg (bad) loopne test iret push mov jmp rol test das push add imul lods sub sub mov in or and mov cmp xor and lds test mov lods cmp xchg lods and faddl lods cwtl js int fcompl or fstpt sbb inc je push xor push push orb or enter add cmp pop add iret jne mov out pop andl cmp cli inc add iret pop mov dec dec (bad) pushl fs and lea add cmp mov jb sbb dec clc jmp jo xchg push push xchg ret push mov sbb pop and test std and ret xor sub (bad) (bad) xor mov je sbb mov lds pop jo add push jmp inc and xchg add movl ja xchg dec dec add outsb mov mov lahf loopne xchg pusha test add adc adc mov mov leave sub mov or mov mov mov push dec sar pop cld daa xchg sar lea insb jno jo and (bad) jb push test jnp enter faddl inc and sbb cmpsb mov scas sbb mov mov pop cmp ret xor insb and cmp das mov ret je sub add cmp jbe fcompl jb add cmp mov out and test jne mov or orl insb and sarl pop inc push xchg dec ljmp dec insb and add rolb dec add call sbb push arpl sbb inc sti add add or sbb inc cltd mov dec push or cli dec and cli push loopne rorb xchg stos pushl xor jmp mov jmp popa enter bswap add aaa jo clc out inc pop out not out das enter push or fwait stc pop inc and xchg popa mov push sbb inc push jbe idivl push lock push push inc addr16 or adc stos push pop cmp pop or pop outsl (bad) aad movl xchg inc pop in jo push add fisubrl xor mov mov insb and lea ljmp lea ret std or add lret mov daa rol inc add js lea loopne ja in xor scas mov ret pop std and xchg adc xor fldl push rclb add outsb nop loop pop mov mov add fdivrl das hlt or in jne inc loopne ja lcall das push adc rcrb inc xor jmp push je cli test add call mov jne loopne imul pop js xchg or loope std or mov xchg sbb mov push dec add icebp or test fadd mov or jmp out xor sbb ja jnp push call xor adc mov popf mov sbb push or hlt sub ljmp in or rcrl imul pushf sub std add sub jmp lea rcrl (bad) sub rcrl inc or jo and inc xor divl (bad) adc ds add pop xor sbb cmp cmp mov nop jg and lret movsl aas (bad) repnz (bad) in sbb aas mov aas xor out cltd aaa aas dec ja fiadd aas int3 adc data16 lret aaa (bad) xchg jo pop add jmp pop shrb dec out xchg (bad) iret xor jmp xchg xchg (bad) xor mov test test call xor xchg dec mov (bad) push cltd sub mov xor jb mov or inc scas mov xor call jae dec popf mov xor push iret adcl shlb sbb data16 out jb jbe push pop or into mov push push mov mov (bad) mov mov inc add clc mov in push push je aas and or fbld cmp sub je add rcr lds inc mov jne loope add bsr pop inc (bad) jmp cmp int gs add (bad) call test push sbb push mov add adc push jl in pushf sub sub enter jle ret xor push add rorb and cwtl imul nop or dec ljmp jb faddp pop inc add cmp adc sbb dec pushf arpl sub fadds fbstp sub sarl push aad jno pop cmp pop sbb xor mov xchg sub inc jg and and sub ficoml aad push jmp hlt sbb sub sub insl adc rclb ja test and cmpl push jnp pop call mov (bad) mov mov mov orb jmp push jnp int3 xor fs bnd ja or xor into nop faddl loope xor jmp negb add insb push xchg xor xor movsl mov add sbb jb jne sub mov mov mov jmp fadds test shrb cmp mov xchg (bad) xor int shlb sbb pop and fld1 xor cmpl psubusw mov call mov in pop frstor call inc mov test sub add out inc test push sub mov popa (bad) push and call leave adc mov jmp mov sub mov and xchg es out aam add and pop jbe and sbb and push hlt sbb cmpsl sub mov push aas sub sub xchg sub adcb cmp aad call mov ljmp add jg jl sub cmp aaa inc adc cltd add fisubl dec and and jp jle mov cmp sub stc in xor xor mov mov jnp cmp xor je jmp pop ret sbb sbb sbb dec or xor into mov dec and arpl call shl xor insl inc jnp sub xchg push addr16 dec or add bound sub nop cmp jmpw (bad) into cmpb push (bad) jmp push mov (bad) pusha test test call or in jbe sbbl dec test pop jmp inc and sbb pop mov inc test int3 mov ficomp jne call xor mov adc cmp and fistp pop dec (bad) into push repnz xchg sub mov mov fldenv or xor fs and inc xchg add (bad) out and cmc push jmp (bad) sbb jmp test xchg cmp addr16 adc ds add add inc cmpsb mov jp jae faddp jecxz jmp lret pushf pop test (bad) je aaa fnsave dec inc add or dec push dec mov mov jne test push mov push loope cmp push add sbb (bad) jne pop jb fmuls out jnp rclb fldenv xchg (bad) daa dec js and fsubr xchg jb push xchg jmp sub cwtl push out and pusha add xchg pop xchg or adc jmp jmp xor sub in or lret lret add insb and aas loopne jmp mov iret jle adc loopne in sub cmpsb es cwtl inc icebp inc and adc leave inc cmp pop mov jecxz ficom pop jmp and push movzbl fs je or sbb adc xor jae,pt (bad) and and pop xchg movsb sbb leave dec cmp adc mov addl aam add cmp es (bad) sbb call cmp ret push and dec adc sbb jmp dec out cmp popa lret cli or jmp sbb and test sbb inc adc mov imul push dec data16 xchg sub sbb rol sub lahf in sub cltd cld sbbb addb cmp jle sub insl sub xorb fisub add adc sbbb push and test pop sub jg add sub (bad) testb (bad) mov add dec mov xchg xor sub mov in add int faddp sti pop or and pop loope jecxz or icebp stos jg lock add jb js cmpsb sbb or stos fsubl ret rclb add mov cwtl je js sub mov cmp mov (bad) jle adc rcl or cwtl insb mov pop icebp iret pop sub mov sti or jne xor movl jb inc or or inc fdivrl mov rclb ja and adc and add add inc sar inc rol mov mov sar movl inc or pop lret and lea out inc (bad) mov and faddp (bad) jb cmove dec push and (bad) (bad) jle pop and mov mov mov jbe mov divb inc inc mov adc incl xrelease mov mov outsb in incl je je clc pop mov and lea (bad) jle decl cmove and sbb adc lock (bad) dec jl push dec mov cld and adc mov pop and cwtl cmpb and xor or aaa sbb ss sub and inc inc and pop (bad) mov inc faddp inc push insb mov mov (bad) mov add mov mov and mov inc and je pop jmp pusha cli inc and es mov in pop mov jecxz movl out lea add movl cmove mov movl or or cmove pop orb jl out dec in jbe push xor or test and dec xchg test or mov pusha add out (bad) loopne dec jl xchg ffree jg ffree push mov sar sbb orb in cmovne mov mov and xchg andb sbb xchg sub test sbb xchg inc and in cmp xchg sub mov mov mov pop xor cmp pop cmpl or sub add cmp test inc jl inc xor stc mov adcl mov je rorl jne inc rcrb mov fwait add pop mov pop cwtl fcompl mov je jl xchg (bad) pop mov sub fwait mov stc scas add je iret push mov sbb loope or mov movzwl out jo loope loope or (bad) je ret add sbb (bad) jle adc js push or imul addr16 wrmsr push sbb jmp push ret pop cmpsl mov fst jno pop cmp (bad) mov cmp mov pop jl loop mov outsb and mov and sbb (bad) data16 jle test push movl movsb and push in adc test or push or and daa mov push sub inc insb or or push int mov pop test jo push cwtl test pushf or and repz insb mov outsl cli fist mov mov cmp jb je jb mov add or push mov popa notl fucomip fwait sub xlat test fcoml sbb sub and stc add cmp je xchg jns add fldcw and cwtl sti jne and roll cwtl pcmpeqd (bad) cmp (bad) mov xchg xchg jo push sbb lret fisub mov and add movl icebp add inc or mov in sbb jnp mov mov inc sbb loopne add mov ds xor adc inc in sbb mov loopne (bad) sub or mov std pop nop lea shr add cmp es cmpl loopne mov out subl je repnz jb aas and and push and sub add (bad) jge iret ja je and xor cmp lods decl mov hlt cmp lea or xchg das sub or push outsl clc adc xchg xchg je fldl mov imul (bad) (bad) pop ret popf (bad) cmp jae pop test (bad) jns aas fdivrs movzbl mov je dec aaa incb xor icebp or (bad) jmp jbe in loope fistpll and pop mov repz sbb or mov popa adc mov sbb dec dec adc mov mov lea mov mov std out cld mov ds iret mov mov sub add xor jmp call rep jmp mov into mov and lea loope jo or test ret and outsl mov shr popf add cmp fs dec jo and adc sbb jmp xor jnp jmp test loope ret mov and rcrb (bad) pop cmpsb dec and in (bad) or adc fimull dec or add (bad) mov push mov or mov int inc test add ror or in (bad) out je xor call test and in inc frstor mov addl add stos daa dec mov loop sbb sbb or call push mov lea cli adcl jle xor call cld xor (bad) xor aam ret sbb xchg shrb scas sbb lret out inc dec add push mov sbb (bad) mov ss (bad) (bad) aas jl and daa adc (bad) jmp aas movsb jle and call fcoml (bad) lods mov mov pushf je mov adc (bad) out test adc jo mov mov cmp cmovae andl dec rcr mov jmp xchg mov push sbb mov outsl adc xor mov mov mov jmp roll cmp (bad) sti or inc push pop out inc mov jmp int3 sub inc pop cmp rcrl jmp outsb and and and mov daa push sbb jecxz xlat xor dec sub daa fstp xchg or xchg mov and xchg lods or andl jb inc jb ret (bad) jno aas mov cmpl (bad) (bad) aas inc (bad) ja xor lea mov mov ja pop cld cmp jbe lea (bad) cmp fcomip std (bad) out (bad) fild mov mov cmp lea mov (bad) fstl sbb cmp lea insl call dec add test add xlat mov push lea hlt jge out movzbl add (bad) push mov pop inc mov add incl push aas jbe rorb sbb cmp pop sti pop in lea dec push je cmp push sbb pop lea mov lea mov dec pop cmp lea lea lcall orl lea mov ja pusha (bad) lea out cmpsl or rorl (bad) mov jg movzbl cmp lea mov lea arpl sbb or test or mov mov addr16 aaa or decl push lea push fdivl or (bad) push (bad) mov inc mov je hlt ja push lea movl sti inc (bad) lea mov mov mov lcall (bad) jne add lea push add add movups cmp jle sti out adc movups pop adc pcmpgtd movups mov outsb xor adc jbe movups jle movups jne out push pusha movups inc jo jo mov movups movups std sarl cli movups sti mov scas push push mov movups push push mov push test push je fucomi add xchg (bad) jg in movups sub push addps fldl mov jle inc pop xchg mov je pop clc jg cmp pop add mov fdivrl ljmp pop add jae pop mov je or pop out aas dec mov je or dec or xchg cvtps2pi or aaa jmp inc or sub std mov je aas mov mov je or mov mov pop movzbl mov mov lea mov adc out in mov rep mov inc lds ret mov cmp cmp mov mov ja adc mov and fisttp add mov mov out out sbbb mov jo add add (bad) movzbl jbe mov rorl out adc call mov in in add cmpl mov sub jmp add pop ret xor movzbl mov bswap sarl dec xor mov or add add add int push pop pop add cmp sbb rcr xchg or test mov adc test clc movups jmp inc pop sbb push jmp xchg cmp (bad) jmp mov cli pop mov mov mov cld setp std (bad) xchg out mov jp inc inc push push jmp xchg outsl negb pop xchg jne mov negl cmp repnz ja and aas faddl or (bad) lock idiv jne add jmp push rorb nop jmp jmp or push int3 lea sub mov pop inc aaa xor add movl dec ljmp inc test inc int3 movl push out and pop imul movb movb movl jae cmpsb push call call push mov dec mov cmp ja mov dec cld loop repz subl out cmc outsb pop aad mov and mov xchg call inc mov in lea (bad) jg ljmp mov pop pop pop popa and (bad) (bad) jg (bad) je sub lea shr add mov sub lea cmp cmovb test je mov cmpsl mov mov adc mov add mov int stos ljmp sbb jmp mov test je mov jmp pop call fidiv push mov sbb jmp sub lea popf pop inc daa mov popf rcrb je rolb pop and cs cmpsb mov sbb dec outsb inc and and movsb das cmp ja pusha daa popf cmove pop xchg daa add or jmp call mov or pop adc jae and mov sub lods ror inc adc (bad) push mov insl clc or sti (bad) (bad) (bad) mov out int3 and in or lods test sbb add daa cmpsb cmp movl leave je cmp jne mov sti (bad) lock icebp push or addr16 pop jg cmp mov xchg bnd xor out cmp lock pop ret add (bad) fildll pop or mov jne jmp pop and push push lea (bad) xor push push rep lea (bad) cwtl sbb (bad) dec or sbb inc or mov mov (bad) inc or or or add (bad) cmp movl subb and mov hlt out aad (bad) dec movaps lea rep std fadd ljmp dec jne xor ret (bad) aas add aas push pop call mov rolb std pop add sub (bad) out xchg xor jecxz outsl or sbb gs fcomps pop ret xor fucomip rorb je pop repz push sbb je add popf (bad) stc insl xchg mov rolb nop adc sar div fistpll clc in mov pop sahf fisubr add fistpll push push or movb out (bad) xchg mov push mov sub or xchg dec mov addl add cmpl adcl mov in xor dec or sub or pop pop pop ret cltd cli loope test mov js cmp jne mov mov ret cmp je arpl (bad) fcomip aaa push add cmp call decb cmp je cmp imul and je sar mov adc bsr sub fdivrp push or icebp pop xor lret clc call fnstsw testl sbb call and lea call popl xor cmp jne push dec mov inc dec cs add call sub cmp jb pop lahf test je mov aad mov xor clc add insb and add loopne out (bad) fist hlt sub mov mov mov aad mov push jno jne and and adc inc adc xchg jle lret lret clc sub push jb popf sti cmp jb ja jae idiv outsl mov and js mov mov mov mov inc neg adc xchg mov mov ljmp inc sub ja and enter cli lea sar dec or mov cmp jbe cld mov cmp je mov mov mov mov fbstp clc mov pop adc mov sub jmp sub mov pop and ja add jge cwtl jl inc mov mov sti (bad) dec clc mov mov mov (bad) (bad) pushl ja mov inc inc xchg lea mov add mov out (bad) (bad) dec lock ja jb cmp ja cmp jns xchg fbstp lock insl xor inc and lods cmp pop mov out mov (bad) push dec jnp mov mov frstor xor fdivs mov sbb pop pop (bad) adc (bad) fnstsw cmp clc add lea mov sar mov lock (bad) stc mov not and lea je add jbe jnp xor add out add add mov cmp push push push (bad) pop push stos sbb (bad) cmp out lcall je mov inc and mulb inc inc dec pop or arpl arpl pop mov in add inc xor test sarb xor mov cmp test inc mov mov lea and mov add sbb adc add or leave xor and add fcomip cs or jmp mov lea daa negl jnp mov inc and lock xchg inc and iret lock frstor clc mov lea test movl fcmovne cmp call push add mov xor and sbb pop call sbb adc lea mov (bad) fstpl sub mov std mov xchg pop sub mov shr mov iret out sub arpl pop stc loope dec in mov stc add sbb or sar (bad) pop loope jle out rcll rolb rorb mov sub and add jae imul mov and mov mov sub popa pop cmp shlb or lds std add pop adc das lcall add mov mov mov mov sbb clc mov sub loope scas jnp jb cmpsl inc cmp ret sub outsl dec out jmp or call (bad) jno call nop into dec fidivr or dec lahf std push mov inc push and add push incb std mov and and cmpxchg inc pop mov mov dec out (bad) cli cld mov sub aas fsts lea idivl inc and mov mov arpl out mov daa arpl pop out dec outsb inc or adc jns mov mov sub xor stc std push cmpsb inc dec xchg add mov add negl ret or jb nop xchg sahf jge loopne decb cld dec icebp sub xor jnp xchg fnop into stc xchg and sti add or movsl push add scas mov jg adc mov cmp jb loope orb pop inc cmp sbb faddl cwtl inc das sub loopne mov mov mov mov arpl pop es icebp out je dec and (bad) fist sti jae int or aaa cmp inc jb pop dec cmp scas add dec clc andl or jmp push (bad) xor addr16 dec in call mov ror js inc cld (bad) decl (bad) outsb inc dec dec sti fs je addl add dec xchg sbb jns outsl pusha addl add xchg inc idivl mov mov add mov cmp aad xchg push mov jb fwait push cmp xchg lea movsb lea cs push dec sbb fwait add sub mov inc fnstsw clc xchg bsr lcall sti cmp xor sub lea idiv ljmp out add faddl mov mov lea mov aad jns push sub inc pusha div lcall jne lea mov cmp sub jg xchg inc test jle ja fwait cmp fldenv sbb lcall mov cmpl sub jno inc sub sbb and outsb enter mov test cmp inc sbb lock cmp (bad) decl call ds mov mov mov mov mov cmp jb mov (bad) fidiv cmp jbe push nop and aaa rorl mov jb ja cmp jb jmp mov mov pusha mov sbb push pop fiaddl and subl mov jbe (bad) je mov add mov cmp and sbb jmp xchg cmp fmuls (bad) call mov mov cmp ja jb cmp jae lea (bad) cmp cld mov push jb mov jmp test cmp adc mov stos loope add and ja scas std out lea jo push xchg pop and not and add adc pushf or cld loope push outsl and inc mov in idivl xchg push popf mov and and xor sarl cltd and fcomi jb imul and pop outsl fs js fucomip movsl push add movl call mov out test test xor or push test incl outsb xor das adc xchg jae loopne das or clc add aaa add adc pop mov add and cmp je cmp (bad) (bad) out add pop mov lock add inc jg push (bad) call call dec jmp xchg stos add inc mov push sbb or test ljmp push add jmp mov lahf (bad) int pop or call or and arpl rcrl inc out enter cmp je dec jg cmp je cmp je cmp jne mov dec dec cs call inc hlt mov call call out fmul push fldcw dec add add ret cmp je cmp je cmp psadbw jne ret add fdivrs mov add roll pop ja mov call in into add cmpsb cmpb decl add mov mov add jns add in cmpsb aas dec dec or cmove icebp or pop dec sbb pop dec lahf xchg imul push push xor pop sbb jnp pop jo sbb pop add mov add add test fcomps xor call jae out pop xor dec add mov mov neg hlt or sbb add jbe add imul mov xchg and aas fdivp push pop or mov xchg data16 xchg in (bad) (bad) ljmp mov mov or pop gs and mov rcrl xchg icebp sub mov call lret inc adc inc mov ja mov or (bad) cmpsb pop add mov nop adc pop inc vzeroupper mov xchg call leave je push jne add xor jns icebp call int or call sub sbb call loope loope mov dec adc cmp cmpsl inc into mov or or xchg ds inc scas lods sti lea in jg mov and sahf add jle arpl sbb mov out push push icebp and (bad) sub mov mov test lea (bad) inc cwtl or or les adc inc addr16 add test mov je in imul add je jo sbb or repnz mov xchg xor xchg (bad) call cld fwait or xor cmp je xor mov push add dec sbb add mov adc jle jecxz xchg aam or pop popa shll cltd cmpsl mov mov clc pop call xchg add ss sub movzbl inc fsubrs int pop out sahf (bad) pop inc jae lds mov scas mov data16 sbb mov cmp jg in add jnp push jne loope add xor lret mov and inc daa add fidivr mov cmp jne pushf dec (bad) movb add push xchg fcmovnbe rcl ficom xlat jmp cs pop jge and xor loop sbb jmp das fiadd xchg sbb or fsts cwtl inc cmc add orb pop dec inc push mov test js int3 or mov or adc mov or sbb jb push adc mov lea sbb and and cwtl fmul adc repz pop aas test ss cwtl add pusha je add adc repz add push das pusha mov add sub jo push mov icebp dec xchg fbld mov in or popf imul adc sbb mov add ljmp call add je cmpl jbe pusha mov add or scas mov inc inc mov sub mov outsl dec inc dec add pop je and inc dec pop nop imul outsl or add and in or push lds jbe add and clc xorl lea dec out cmp and js mov or jo mov call (bad) out mov jne add (bad) or pushl mov jmp push rorb or notb sub mov shrl cmp adc (bad) and out pop dec push into adc add xor inc push je cmp jne fnstsw mov xchg xchg sbb add fwait jb (bad) pop (bad) xchg sub mov mov mov sub or mull cmpb xor push pop sub stos dec and push and sbb cmp xor mov inc jp or mov or nop pushl xor call inc (bad) rolb decl test and cld shll nop push push lea clc mov add int loope movl xchg dec imul fisubrl add mov ss sbb addr16 das (bad) imull push add mov rcrl stc call inc sub je lea pop divl inc and test jne add pop pop cmp (bad) add movb or out sbb subl xchg sbb addb aas dec or mov mov fistl addb mov jge jo sbb add out (bad) xor clc push sete push sete xor add or scas mov jno lea sbb std jae fadds mov push inc and call add (bad) pop xor clc xchg mov (bad) outsb js push fwait mov shlb (bad) cmp shr (bad) adc xor xor out inc pop mov push fs add cmpb add jo hlt push sub and adc lcall lods pop pop mov and jmp inc cmp pushl mov cmp out fild mov cmp sarb les fsubl lea mov call inc scas in cld jb fisubr and call sbb (bad) dec mov (bad) push jecxz (bad) dec scas sbb or dec (bad) xor pop and fdivrp enter push add addr16 add rcll or sub push test mov mov lea inc push mov mov or add (bad) fidivr add add or call inc fwait or and sub fst mov mov mov cmp ret mov mov jb call fiadd sbb nop inc popf dec cmc cmp cmc dec xchg cmp inc adc push dec call ret jb (bad) lcall (bad) jnp and cmp dec clc call sub pusha fisttp xorl or or pop fnsave clc fild jae and push iret popf enter ljmp ja and pop and mov push xor lock or pop clc sbb dec jo cmp and sbb nop dec ja pop mov (bad) and fstl inc je ret jno and lea or lcall jno clc loope pop cmp cmp sub cmc (bad) in out cmp call jbe mov mov call into or pop rcll mov sbb into mov sbb or in cmc movl jmp fwait pop jge sbb jbe mov dec adc pop or xor fs dec or enter inc add sahf insl jp or add add in in cmp pusha inc sub lret inc xor loop jg cld out call and loop mov call xchg sub std or jp fildll ret and fldcw push ja or nop ljmp mov push pushl cmp je jl dec mov sub lea orl shr and jp scas loope inc and test mov push in and addr16 jecxz or sbb or inc add mov mov sbb lds sbb jmp outsb pop repz jnp mov dec hlt ljmp sbb or sbb xor dec out xor adcl cli call pop inc fldl mov cmp je pop mov dec lea sub sbb cmp sbb add add ja call loopne adc pop push or and sub add bound jbe jl pop push or or pop pop addr16 adc or in and in out clc ljmp mov mov cmp je mov sub (bad) decl call add and cmovo or ss cmp je cmp shrl pushl clc add inc dec add add add pop add or xlat aaa jae sahf or or mov sub repz push js add imul (bad) bound dec or or bound popf lds and or adc ljmp jbe and or lea cmp jne mov xchg or add pop inc bound pop ret sbb sbb dec std cmp add inc adc jg (bad) out mov je lea je imul adc mov test ljmp fisttp jecxz add mov adc push pop mov mov shl test lea je imul mov arpl inc adc push rcll scas and mov mov les imul add pop add mov call sbb mov nop push xor mov jg mov shl cmpb nop rolb add lret or pop add adc jb push or add push bound nop inc cmp shll es mov sub adc test xor mov mov cmp or mov subb je add in inc and add xchg clc or push sbb add movl movl jne mov mov mov and orl je in rolb mov mov mov add cmp inc call jbe or cmp mov sbb sub (bad) (bad) ds sar add adc mov je add ret pop out nop lea decl add sbb mov jo xor sub (bad) xor add loopne loop pop or cltd or roll lea xchg sti add lea mov loop cmpl adc out add stc call and je sub push cmp call and push and sti (bad) jo out mov cltd xchg js call cmp add adc addl add adcl mov sti out je mov push sbb sti pop push in int pusha cltd inc add and repnz jmp scas push add lods ret sub test jbe pop mov mov and sbb add cmpsb mov ja fist lea jne in or sti add fstl sub mov mov pop lea shl lea cmp je adc mov mov sub sub shr xor loopne aas or and inc movups test add ja movsbl mov cmp je and inc (bad) fdivrl dec or aaa rcrb test mov pop test (bad) flds test mov inc inc mov out adc mov ret cmp pop push add movups scas movsbl addr16 mov data16 icebp and fisttpll adc cli adc int3 popf popa ds jl lea mov mov jne inc rorl add mov adc add pusha push movl xor mov lds stos jne mov push pop mov popf adc hlt test cmc sti daa adc jne jb jo cmpsl je (bad) jl and call cld xor jg testb lea je jae xor mov rep inc out mov push clc aas ja std jecxz lock call sbb lods sbb push mov mov mov add ja mov or mov adc shr jbe xchg je test or sbb add test or mov sbb test sub in gs je cltd push cmp push call mov test mov jle mov jne add scas pop movsb (bad) cmp jne or jle je and push adc sarl je test (bad) jecxz (bad) (bad) cmp jne inc pop mov cmp inc int3 lret mov std out sbb jnp jne inc out addr16 mov sbb cmp pushf add pusha add (bad) mov jne lds ljmp fnstenv push test out cmpl jmp jmp sbb imul pop (bad) push lea push dec xchg push pop iret scas jne cli loope,pt ja test test pop jo fwait cltd push jge call nop mov and pop movsb xchg loope cmp je xchg dec jge add xchg ds je icebp jle inc mov je cltd sti popa add je pop int3 xor rcll mov je push jbe (bad) jne and xor ret push cmp (bad) enter test xor insb rolb dec cmp adc test cmp jmp sti adc lea xor (bad) fiadd cmc mov cmp mov arpl dec cmp je jle ja test inc push inc cmp (bad) xor mov jne cmp mov pop or or mov in add rorb fwait and mov adc jmp test lods int3 jge jmp rorb test clc mov pop fs sbb xchg (bad) xor xchg cmp test stc movsb dec popl add ret loope ss push std das ret mov cmp jo insb mov cmp dec mov jmp stc lock pusha aas xchg je lods outsb aaa sbb jo arpl jmp jbe (bad) pop out nop adc pop sub iret push pushf dec test jmp in (bad) (bad) ss dec ret mov lahf rol aas lock jg adc lcall mov je ds cmp mov loopne fild inc cmp je inc je in ds push paddd adc cmpsl xor mov sub cmp push js inc fdivp arpl xchg mov sbb push je cmp sbb (bad) mov mov cs hlt ret sub rorb pop jae ret pop out test (bad) sub cmp push push (bad) mov in or andl repnz sar jne out mov dec ja call fcoms add (bad) out cmp adc clc and maskmovq (bad) popl ret test sarl popf xadd icebp or outsl cmc sbb out test test mov cmp loop adc and jg andl and call arpl js and cmp out wbinvd fisttp inc jmp in jae sbb inc push push data16 cmp or call int sbb jmp outsb mov xor or xchg mov push call fcomi jbe ss data16 xchg mov test inc jmp xor test es dec stc inc push or jmp shr test fwait (bad) xchg mov hlt lea nop sbb js mov jg je and aam stos divl mov xchg mov mov mov mov fwait pop add cmp jle call xchg aam scas (bad) je je mov push (bad) ljmp (bad) jmp stc je xor jmp mov (bad) ljmp mov jmp sbb daa fisttp adc lahf out mov sbb pop or pop test sub (bad) fisttp xor aam call xor pop dec popa xor inc outsb jmp mov movswl fucomip and push mov lea sti ret ret xchg xchg dec adcl and mov sub mov lea cmp lock shr rep jmp or sti pop or in mov jle pop in movsb pusha jle je xor dec rcll ja mov push repnz adc pop out lods mov jmp push pop add incl nop hlt (bad) incl movl and push hlt dec mov movl add mov mov lcall mov cmp call add mov pop adc repz or mov fs lods movl insb adc shr inc or cmp sti call add and push aas pop popf push movl or and mov sub movl add inc pop and cld add mov and cmp jae xor test je dec cmp cli add sbb cmp jne (bad) cmp cmpl or daa mov add or adc add cmp jb lea movl inc lcall fdivl add mov bound call ds add fadds cmc je dec and sarb or mov xor fistpll jmp and mov je movl aas and stos add clc pushl (bad) cs mov mov iret jb call mov push jo or cs inc xchg rorb jg fistp push cmpb je cli ret cmc decl mov out sbb movzwl cltd je or cmp push or lcall adc add (bad) (bad) aas pop sub inc imul mov test je mov out or js add test and mov jo das or and mov or lock and sub ret add call adc or lock or sbb mov pop or pop and or mul ret lea cmp cmpsb loopne sub jmp mov adcl add adc idivb mov push inc ljmp sbb stos pop push sbb sub jecxz or ret push ret data16 add loopne push add cmpsl ficom pop jne (bad) push out imull adc xchg (bad) mov sbb je lret xlat or je cmp jno pusha (bad) jbe push (bad) jg sbb jge fdivs mov je mov push lret add or out xor pop inc lock xor sub xor fcompl je or call out xor ja sbb ss roll pxor out in push xchg lcall jae int mov sbbl inc jo pop or call push push lea jg mov call and loop sbb fsubp jmp lret xor sub mov std ds adc dec push lock add add (bad) test jne and cmp (bad) mov jnp adc add xor je (bad) xchg (bad) jbe or sbb sete jmp cmp sub das rorl sub add add xor adc addr16 add ss sub aaa adc dec sub inc mov xor adc ja xchg lods mov or sub shl lea sbb mov pop ja adc sbb add sbb test (bad) sub xor (bad) ja mov mov daa cmpsb pop cmp cmp dec or adc add and and dec icebp push orl push out rclb lock mov inc xor mov aad test and test int3 loopne add mov or adc std rcrb mov push ret sbb repz outsb mov add (bad) stos sti mov adc rol addb ret mov jne,pn popa addb jne inc mov mov leave mov ja sti sbb mov mov sahf pop mov sbb add subb popf out mov add xchg pop icebp enter inc pop adc in ds repz xchg (bad) mov or sbb aad sub pusha lds rorl or sbb sti loope stc add test cmp test sub mov sub cmp sbb lea andl test call cmpl lea jne cmp icebp inc push jmp hlt daa add call or lds and pushf jmp test jg jg call test cmp mov cltd loop jne sub test mov adc aaa sbb pushf inc cmp cmp xchg mov test adc mov adc or sub fld1 push dec test ljmp pop sbb test cmp std (bad) inc pop adc and out sbb fldcw sbb mov test lea add sub lock aas cmp jne inc insb ret xchg setle sahf std (bad) fistl mov test test leave mov mov out sbb test mov cmc je sub xchg or movsb mov test add dec outsb test lds es mov sub in push ret push xor inc jo cmp mov fadds pusha cmp roll jmp ret popf push jl stos shrb scas mov add ja pop cmp mov popf mov inc sbb cwtl fcomi jmp icebp jmp sub ljmp loope jo push je fstpt call sub icebp pop mov push push cmpl mov lcall pop je out pushf dec sbb add lcall xor fwait xchg ret lahf push inc out sub aas (bad) insl inc or je jbe mul add call rclb jb daa pop and jae cmpsb aaa pop inc outsl sub test push aas aaa fsubrs xchg adc insl aas xor push cmpsb outsb jmp jae es lahf sub test scas inc or fwait adc call int3 jge jmp inc or mov pop lea pop xchg pop dec sub cmp jne fisttpll mov jmp and lret cmp inc mov mov jmp mull fisttp les loope ljmp sti testl inc or dec push lock mov pop add scas lods ss scas cmpsl in sub cmp and scas cwtl pop stos mov cmp pushf mov (bad) xor addl or je pop movsl nop aad rolb sub call (bad) mov inc and int3 (bad) mov inc mov adc test subl scas imul adc inc outsl mov add roll inc adc mov and cmp jp sbb sti out iret add call dec call xor fmuls add add mov pop jo adc roll roll add pop enter jl cmp add je mov fadds jns jbe lds pusha je jns fcomi stos pop das in aam sub sbb loope push or pop pop idivl mov mov aam inc and add scas and xorl jg je ret add mov mov lea call and inc add dec sti or inc popa mov push call sub mov call clc shufps sbb pop (bad) call fldl adc add sub xchg add pop arpl call dec push add adc cmp mov pop aam pop xchg mov int shrl jp xor cmpl and and addr16 repz jne loope inc fs jp movhlps push je add jns add and dec cmp (bad) fisttp xor and sub mov mov jg pushf cli shl add cmp stc mov or xor ss je mov jp pusha add jo inc xor and jl gs pop mov jmp mov add fmull mov inc jmp inc jmp outsl mov lea inc fwait mov call or inc mov insl mov add sub call jmp pop adc mov pop faddl adc and mov push push or pop (bad) push out or call mov addr16 or jl inc sti xor dec test rclb lock adc sub jbe lret insb and and gs (bad) out test outsb and inc movups and fs sbb add lea je inc ds sub lods mov mov add lea xchg sbb mov mov jg or stos mov mov daa pop and jo push push addl lcall adc clts cmp bound cmp lfs mov cmp push jle je je cmp jne cli mov push movsl call adc aad sub fsubrl mov jle mov cmp or je std pop or call nop loope (bad) jb pop and mov aam mov add test jmp fadds push or xchg cmp jle lcall je bound adc bound js xorl mov push (bad) imul jmp push jg and fisttp (bad) mov sub cmc add lahf xor cwtl es lsl xchg call push mov test movsbl lds test shr cmp popa ret std jle stos int test add xor sub mov mov sarb (bad) or inc adc sbbl (bad) mov jne jo push xor inc add test into (bad) call sub mov jae cmp push mov and call or pop add mov or xor push dec cmp add sbb fst jmp xchg cmp adc or or mov outsl pop xchg or sub add inc adc shrl add xor xor mov mov and jne adc push aaa mov mov sbb sub (bad) and add cmp test push and jmp and call test data16 hlt mov loop mov addps mov ret je outsb mov jbe jbe jmp cmpsb jp mov and test pusha shll xor pusha inc das mov jae nop mov pop sub xchg mov das inc outsb out sub das jmp cltd test pmaxub not sarb adc scas popa fcoms jmp call pusha packuswb and jle int push je pop jb aaa adc jp es or (bad) jmp xor test aas repnz fdivrl sbb mov sub test xor add xor push nop outsl sub mov push aam rolb aad test pop mov into sub out jl jo pop das sbb xor enter js je cmpw call les add mov add push and push lock ja rorb or cmp jb mov mov pop or pop dec cld (bad) call test jne cmp je cmp jg jge clc (bad) lcall mov call mov call add (bad) aam push adc in inc aas push mov xor in fisubr jmp aas jecxz or subl fimul xchg cmpb jne mov out cmp cs loope xchg sarl je mov imul cmovbe add dec scas add push imul mov push je ja movsbl mov aas imul jne cmp je or data16 int movb call test jmp aaa jae lea adc or mov mov mov call sub fldcw jle push fiaddl testl test daa mov (bad) fldl xchg jecxz cmp fxch pushf adc mov icebp ss test mov es (bad) sub lock add jmp sbb jg cmp jne mov shrb inc dec repnz ja add cmp je mov mov ljmp (bad) sub rorl test into sub movhps pop push add dec and jmp adc je cmp add cmp inc popa mov push lea cmp lock push mov lahf nop jle ret lods sub mov dec mov sbb push adc lahf sbb iret mov lahf out and cmp dec or leave std mov mov ljmp lea mov xor lret jns inc and sub and xor stos roll xchg cmp into loop out dec sub rcl adcb pop or int3 xor aad test xchg add cs and ret mov xchg inc (bad) mov mov adc test outsb jmp mov mov pop stc mov mov je push clc icebp rcrl call test adc xlat fisttpll jp xchg fisubr test add out add inc jae mov ja clc cmp jne jmp inc mov mov out jge lea and cmpsl (bad) mov mov es fwait or mov cmp (bad) outsb mov test jo pop pop cmp jmp pop jg,pn enter cmp in cmp push sub imul (bad) sub decb inc and cmp jbe or sub pop and jg loopne jnp and das add cmpb dec and cmp sbb and mov mov adc test mov sub rorb dec orl inc inc frstor aaa sub dec je xchg aad inc or test jo sti pop and (bad) and and stos arpl sub xor cmp fs dec rcll sub xchg add xor add sub test dec and test fwait dec xor pop mov pop sub inc rorb sub add xor enter push nop or mov adc clc xor push and mov popa ret or adc fs fiadd mov jmp add mov adc xchg xor stc jl mov pop pop cmp pusha dec mov cltd and or mov or mov mov jmp lret fmull mov jmp adc cmp xchg lea pusha movl push call lret sub mov add jo into call stos idiv enter jmp cmp test inc mov push dec sbb and out sub dec out (bad) aam sbb call fnstsw call jne pop mov sub fs cs aaa adc lock inc jne push cli or mov jmp xlat out fsts inc or je mov pushf mov cmpl mov jmp sti enter out outsl inc mov and lds insb bound fsubr xorb es cmp icebp orl pop jae cmp inc jo test int3 pusha add je inc jle or jbe imul or cmp test and test or lock fidivr jne les shr aaa pop loop cmp lock xor xorl call ljmp inc aaa and mov ss jne nop mov jmp jmp into add jne rorl pop imul add rorl xchg xor jo sqrtps clc out stos mov add lea mov lret in or loopne inc mov xor fucom add popa add push inc push pop dec push je dec icebp add lds jo loopne add mov addl mov pushl rcrb call cmp adc xor jge nop mov (bad) je movsb call call jnp or scas cmpl sub push rorb ljmp jecxz sbb mov bound jne imul jmp and sub pop inc mov bound add add call jmp push and add fcomps mov cmp je mov (bad) cmp mov jl (bad) xorl hlt out xor jne repz scas add jno stos pop mov xchg pop mov sub inc add mov push add adc jp cmpl into cmc mov fildll lea jge jg lods sahf adc scas pop dec mov mov push add cli add or sub sar call mov jne add lea sbb fildl add mov sub add ja out mov sbb mov xor test ja adc xor dec mov push mov sbb jb decl (bad) incl xor jge add cmp je add mov sbb push iret outsb xchg jl cmp jne (bad) js cmpsb pop pop mov or fwait cmp xor lea shrl sar div mov arpl adc sbb or int3 add daa add incl add add xor inc shrl iret add and xor and jecxz add ss jb insl loop out push orb insl push gs cmp inc mov outsl mov test out jb inc mov call je prefetchwt1 int3 pop and or jb xor movzwl and je xchg (bad) jbe jg push and call cli insb js push jge test pop mov outsl mov out and (bad) je add fsub cmp andl int mov int std sbb out jmp out cmp popa cli call lret cmpsb hlt ljmp cmp pop fnstcw (bad) or outsb ror xchg sarl lret jo cld mov je add out mov mov fstps or xlat add incl mov xchg mov shr scas ret lea add add test xchg sbb ficompl xor clc cmp adc pusha pusha sbb or add ret mov adc or (bad) lea call popa bound inc aas jmp and stc (bad) push add sbb in mov loopne inc cld or call lea push hlt (bad) push daa add xchg adc or or push cld or sub (bad) loopne sub or xor or pop test adc xor or test adc and sub inc xchg dec pop adc pop or pop loopne add leave mov push (bad) xor mov inc and lahf mov xchg xor shr add sbb pop mov xchg push mov pop xor or out nop roll and pusha inc mov sti add inc and das pop dec inc scas aas insb call rorb call (bad) es mov lea lods add mov scas xchg sub cltd mov mov mov push add mov lret pushf push ret push push js,pn sti mov (bad) xor addr16 loopne push testb aas add mov dec or mov mov enter dec adc hlt push and push fiadd movl shrl mov xor mov sbb fmull divb adc inc and repz and mov into jb jp cmp loopne adc loop inc ljmp add and jae mov jecxz out sub and ret and mov sbb ret and enter aas call push or ret out and (bad) mov lea cmp ja cmp or adc add add je fsubr and test jne aad or cmpl out push and pop inc jg ds add out mov dec adc pop cli mov dec gs sbb push adc aaa shll push inc mov or add and mov (bad) lock lock (bad) dec mov push xor mov ret xchg push mov pop inc and js push inc sbb lods xor adc ja negl (bad) mov pop xor arpl jmp ljmp lods or mov mov incl mov mov mov imul and lea je xchg data16 push and lea outsb and xchg fcomip jecxz add push add lock cmp div adc sbb sahf mov sbb imul and sub push add imul pop sbb push pop movsl fstp inc sbb jnp push pop fiadd shr dec add adc mov add fwait lahf fadds pushl pop xor cmpb mov je mov dec add (bad) mov jg mov mov xor mov and inc inc test adc push je mov fiadd or xchg mov addl inc push test lea je jne pop jmp lret cmpb int lahf add pop insb and mov push xchg jnp loope mov cmp jmp add xor les jle ja fist adc fcompl test test in xor cld cmp jmp jne je adc mov lea ret mov xchg cmp imul out pop lea jbe pop xor lds leave bound dec dec test or test lock fstpl call test or mov mov mov std and add and nop (bad) aad push xchg mov dec inc xor or dec inc push je cmp or pop loop mov pop dec mov mov inc aam mov mov cmp and push xor and je mov cwtl mov and sbb (bad) les je adc mov jp fsubrl and push movl inc jno mov push aad fldcw jne ljmp mov dec mov lock pop push mov aaa push mov mov add outsl mov mov sahf rolb mov sahf xchg pop push cmpsb xlat cmp ds inc icebp add xor sahf call and je dec test xor mov popf add out mov cmp inc mov cmpsl mov int3 popf pusha pop mov fild push incb int (bad) sti pop dec mov adc xchg and (bad) hlt mov jo mov mov mov test cmp (bad) psrld add push xchg sbb add inc add inc push add and pop pmuludq fisubl mov add iret (bad) push les ret push mov pop sbb icebp into (bad) jmp adc and in je out rclb cld mov call inc push scas lods pop mov fs ss mov xchg shlb add rorb inc adc adc cmp xlat cmp (bad) repz add inc sub ficom (bad) fiaddl dec pop insb mov je jg inc lea mov jecxz loope adc lret test pop les inc add inc xchg loope inc or lea jbe in adc bswap pop push mov pop ret test ja pusha or inc xchg adc jo bound fwait je into xchg in and movb add (bad) repnz (bad) push lock mov sub cmp or pop insb mov call aaa xor and dec (bad) or push imul je dec xor pop fdiv test lods inc lea sub pop and cmp jne jmp xchg adc fmuls test test add mov jne mov addr16 stos jne pop ja push cmp sub mov sbb push xchg or inc aas popa xchg adc (bad) ljmp mov ret es cmp ja out fist add lea cld scas cmp and insb and pop add stos rolb mov add test pop or jae icebp dec mov push cmpl xchg clc or and add imul mov push mov xor aaa cld jge cli inc xor call adc (bad) es cmp add shlb inc out int3 insb push mov or mov jno xchg fdivp pop pop mov call adc rolb adc rcrl (bad) je mov rorl outsl xor mov aad das jmp add (bad) popf lock bnd mov xchg movl add jmp add sti pop cmpsb ja add jmp and xor cs jecxz es imull jmp sbb adc shr xor add push xor ja or mov cmp sbb sbb in call xchg xor mov mov test or int lds or bound cmp mov cmovae mov jmp adc mov sbb xchg pop insl sbb add (bad) xchg dec and test mov mov aad test add fldcw call hlt (bad) (bad) cmp mov mov cmovae test inc loopne mov mov mov dec sti add fdivrp (bad) decl add icebp test xchg int3 mov sbb idiv jmp bswap cmc xor or mov push cmc sbb shll jg insb and add (bad) bnd cli cltd rdtsc shr cmp je inc jo dec (bad) repnz in jge cwtl xchg pop add adc jmp jg popa addb or call pop adc mov adc mov dec sub inc into xchg or mov inc xchg dec and jb and mov jmp popf cli dec and dec decl mov loope sbb mov lcall or jmp sbb xchg lcall and idivb fmuls icebp pushf hlt push add notl jmp and mov xor push test dec and adc mov adc mov jne mov mov jmp or xchg jle call pop (bad) or les call sbb call and mov (bad) mov (bad) out fs lea shr add mov lea cmp cmovae mov js add call inc push lea push inc inc (bad) iret jo sub fidivl inc shr add and pop je push dec fistpl add dec adc jecxz shr xor mov mov jp push pop adc jp cmp xor sbb add aaa scas dec and call sbb xchg loope inc test daa je stos inc rolb scas icebp sbb ret sbb sbb sbb ror sbb cli mov je mov in xchg inc jns test inc fs sbb mov rcrb xchg incl cmp pusha cmpsl pop mov xchg addl je adc sub out xlat pushl push jae lcall xor push int inc imul aaa rorl cmc lret sbb sub jmp xchg rorl mov sbb xchg call jb shrb fisttp xor (bad) into mov inc btc pop jmp call out je pop data16 mov popf or (bad) jmp dec mov int3 rcrb fcomps sub cmp out mov and or sub outsb push outsb stos mov or mov mov or mov jmp enter push and aad add mov push add scas mov push ret xor daa sbb je cmp or or stc nop test push std outsb jp test inc and mov das popl cmpsb add jmp fcomp pop (bad) dec jns scas insb and mov push outsb aad sub jge push or ja cli push sub jmp nop push in pop dec pop adc xor xor js mov mov push mov pop enter add sbb jle add pusha cmovno add sahf mov cmpl cs add add jecxz pop jmp adc enter mov arpl dec and mov inc and mov adc push cltd mull push inc add push or dec stos dec cmp jnp and and je gs pop mov cmp mov jne inc xor (bad) dec hlt cltd mov mov mov add adc mov push push mov lea rcrb and (bad) pop (bad) lea push add mov lea aad cld cmp or lea add add mov rclb cmp fsubs stos mov pop cmp lea popf inc sbb jnp mov daa pushf and std sarb and mov push and xchg push fist call mov repz out mov (bad) cmp xor sbb lea pop add (bad) add sbb adc pop inc mov ss lea jo popl call sahf sub sbb cmp inc je (bad) sti jmp nop jg cmp ret sub in test adc jmp je iret cmp jle jnp aas lock mov mov pop mov pop cmp and jl jnp mov mov push outsl jp insb mov sbb jnp (bad) je push cmp mov sub test push sahf jnp sbb mov sarb testl inc ljmp not xor push sti insb and mov mov mov in jno mov xchg add ljmp xor push adcl xchg sub clc jg fcmovb add mov adc mov mov aaa cmp lock mov xchg fist call scas leave pop cmp sub mov arpl movl sub mov mov cmp inc adc inc adc inc hlt inc adc adc inc test pushf loop (bad) inc dec flds call or xlat je and mov push push adc test sbb shll dec shrb push jl and adc orl ja (bad) xchg sbb cmp movsb enter cmp aas sti sub mov pop dec and mov cmp jl jle daa mov pop xor jmp inc je mov mov xchg add imul daa push add push cmpsb and mov sbb lock (bad) jne cmpsl sbb xchg out scas add pop sbb cmp lock (bad) mov mov rol aaa icebp add test incl mov mov push add inc cs pop std xchg movl push fld inc sbb add add xlat cmp cmp push xor shlb push into adc push jbe push xchg imul call insl mov (bad) dec push enter lcall (bad) call movzbl mov mov mov movl movl add mov inc loopne jb lock movl sahf cmp movl pop js xchg int lock mov jne leave mov lea mov movzbl cmp jne call and test mov cli sub add cmpb jne out mov push cmp lea mov je jl mov jb (bad) (bad) call add and cmp je movzbl sub cmp ja bt jae jg push hlt mov sub rolb test jb movzbl std iret idivl lea inc cmp cmp je je arpl out dec movzbl cmc and adc cmp jp out lea push jbe push inc mov mov cli fucom jbe test sbb mov lea dec fnstsw std std dec nop cmp jns or daa cmpl loope xchg jne pop mov sub cmp jbe dec xchg por ret dec int inc add sub ret ret lcall jb cmp add jp das idivb inc add (bad) mov fdivrs pop loope jns jo add bnd xor jmp ja bt jae mov sub not and mov add mov cmp inc ss jbe stc lods or add cmp inc sbb adc xchg es shlb lret fnop aas in mov xchg rolb push cwtl mov (bad) (bad) inc int jle mov mov mov mov xor mov mov mov or mov mov ss mov mov lods stos jg imul sti js add jle add fistpl push xchg mov call sahf test js fidivrl popf les pop pushl cmp push pop mov cmp in (bad) outsl clc jne jmp add pop or push mov aad inc addb fsubp in jle pop fld or pop mov adc mov adc add call outsb mov stos sub jae sbb inc add fmul push cmp xchg ja ret pushl mov sub not and dec stos ss jecxz inc add jecxz xchg test ljmp jae fidiv sbb rcll lea cmp ja pop (bad) mov pop push ja jne mov inc jmp xchg mov adc aam shll inc sbb int3 dec sbb add xor int push popf add clc xor xchg xchg test mov movdqa pop and (bad) jne or hlt sbb pcmpeqb xlat sbb jne sti add stc add dec jl por and clc xor jne nop add fucom or lock add xlat in dec xlat sub add inc jmp pop ret cli leave pop iret add je movzwl pop mov mov add jg add ret jae or addb aaa ret jnp and jae add faddl jne xchg pop push and fmuls jge rcr daa lds ja mov mov sbb mov or pop (bad) xor aaa out sbb mov add out mov data16 or inc add out xchg jmp xchg insl inc or xor cmp (bad) les mov jmp or decl cmpl jne aas mov mov cld andl hlt cli mov dec pop je sub dec sub mov mull shr mov loop jae jnp add push cmp ja sub ret scas add push bound add rorl test push jecxz movsb loop pop adc test pop xor test sub adc add adc adc enter jo mov out mov mov or inc mov pop inc (bad) testb mov je sbb jmp popf mov fisttp fimul test xor out dec ret shl and pop lods cli incb lods loop cmp test jecxz add sbb addr16 mov rolb rolb cmc repnz mov subl popf popf fcomi push rorl fmull mov mov loop out testb push mov push icebp dec inc mov sbb stos popf js push add js mov mov inc jne test inc lret loopne adc xor pop push adc pusha lahf push adc sbb mov add movl lcall adcl mov lds arpl sub jns sub cmp sahf cmp dec and inc dec (bad) (bad) js push push enter inc pop add (bad) pop sub inc or ja cs es pop cmp clc or mov adc push call leave lea sti dec adc sti je push ja (bad) jne sarb and lea push test xchg mov xchg pop mov popa adc jno push adc or jg and dec and loop adc mov mov hlt decl and call sub jmp fldl clc adc in or xor xchg cmp or dec fist stos jg ret subl jmp sub mov orl sub xor rolb and pusha shlb decb push cmp adc xor jne mov ret ss ja dec (bad) xor int dec test orl dec aas dec dec into mov stc cmove add sub cmc (bad) mov or lret sbb or inc cs add call jmp add and es mov jmp mov mov pop ja ret loopne movzbl lea or hlt (bad) lcall dec in pusha aaa lock js mov (bad) ja and pushl lea cmp mov je sbb into pop mov pusha aas hlt outsl icebp mov mov mov jmp sbb jne xchg pop push outsl int3 adc or js mov sbb ja adc add jb sbb jbe sub xchg jmp mov push rcrb decl in nop es lea add push cld and add pop mov fwait nop or and es ret mov test push dec stos push mov push xor fiadd xor pop repz cmp sub adc and xor test fwait cli scas add push xor push mov (bad) jg dec and push mov mov mov jmp or and jl sbb cmp push jge mov (bad) icebp pop jg call test mov ret dec xor iret mov jmp add ljmp (bad) or sti adc movsb add add das test in into mov cmp je adc mov cmp hlt xorl xlat hlt xchg mov (bad) (bad) aas dec inc xlat cmove add jmp cmp jne mov mov jmp adc fs loop insb leave insl stos es inc and cmp push mov and (bad) and addb in adc inc pusha or sub xchg sub jnp or shrb out ret mov test call dec xchg xchg ret mov aam mov and xor pop insb (bad) mov dec cmp test mov pop push fadds or jg xor je loope add inc popa jp mov cmp nop sbb pop dec inc fldt cmp cmp and bound mov mov aad mov cmp and cmp je (bad) sbb push aam clc pop and or pusha je xchg inc pop rorl xchg xor les scas mov add (bad) dec ret cmp je or add ja lret mov add mov pop mov xor add je mov xchg xchg into jo add add xchg xchg jb xchg popa or mov add mov pop hlt jbe mov loope jbe jbe push cwtl mov or cmc jle sbb test add clc mov jle inc add adc popa xor dec jle push fwait or push adc xor dec call sub rcrb cmc adc ret rorb sbb mov pop (bad) loope cmp or add insb testl lret je sub dec nop mov jbe add stos push or jo sbb js test andb sbb add cs rcrb inc and call mov xlat add je or sbb incl divl aas out mov add iret add xchg addr16 out jmp cmp out push lea jl adc sbb shlb hlt jl push ffreep xchg cmp mov jmp inc sar inc xor fildll outsw inc sbbl fwait out jmp mov jmp outsl sub rolb nop mov pop fstpl mov enter adc inc enter pop xchg xor sub sbb cmp sbb nop sub push sub pop jmp (bad) cmove add jmp test mov pop sbb cmp jle stos mov jb pop mov flds (bad) xor xor xchg lea and call sti xchg or mov mov pusha test xchg test fsubrl loopne cli push inc scas test in mov call sbb jb (bad) mov xlat xor lahf jae sub xchg inc test mov dec inc or out pop jl (bad) lea mov mov xchg pop std gs cmp inc je lret adc push adcb pusha inc (bad) es mov icebp sub into imul lcall nop repnz inc jne dec mov dec adc add pop mov cmp sub xchg popa fcomp das dec mov mov jne nop cmp pop (bad) std mov sbb xor enter cmp jne or int3 ret jne int3 lds mov mov adc std arpl jecxz jae aas pop jne ret jge je xchg mov sub sub aas jb test in mov je lea push cmpb add xor out cmp ljmp les mov add fdivrs test xor pop insb insl push lret popf inc add mov sbb out cmp outsl adc cld bound out imul mov jle pushf addl push ds cmp inc mov jl xchg lods push adc mulb je mov sub and add mov mov jae mov fildl pop jmp bound aas push test into incb out mov jmp xchg int3 in sub scas and ja jne adc jnp in out sbbl test fcomps fldz jmp sbb xor xlat in jbe jmp cmp lcall addl mov adc cmp jne and inc les lcall jne mov out cmpsl xor test or mov in call outsb negl jne add ret pusha jecxz push adc test xchg mov cmp jo xchg mov adc pop clc hlt mov call mov test sbbl insl cmp jne pop test jp mov (bad) mov mov pop adc dec pop and test cmpsb add add jmp mov sbb (bad) test sbb call cld and sbb scas or test cmc iret std lock and jae mov jb out adc call arpl aaa in jne decl orl loopne sbb sbb mov popa mov pop (bad) sbb dec fsubrp jno lcall sub sub clc add add or push mov mov out lcall mov jmp jg repz and mov (bad) sub or jge call outsw fdivs or pop in sub test xchg pop mov pop add pop add popa js mov (bad) mov jb jmp push or sbbl jbe addl ret in ss fidiv xchg add push cli jmp jmp incb shr outsl cli jmp sbb jo xchg mov xor mov andl jne dec sub xchg and mov cs or cmp inc pop sbb out jg test call sub sti das jne inc add cmp in js or cmpb jne jmp enter aad clc ret inc cld enter in outsb loope add (bad) push fimul out sahf and jne mov jmp pop add jmp movsb bnd jg or mov bnd std icebp fwait or fsubr cmp push mov inc test in test in or mov jmp jb xor nop add sub sbb cld fstp ret push test ja jmp cs or cwtl (bad) sbb jne sbb xor shrb fistpl jmp test pop clc inc cli jecxz mov sahf je popa mov es or pop push mov out add in inc jmp jmp cwtl clc cmp jne popw sbb je pop xor outsb xor inc ss test icebp int mov mov icebp pushf adc cmp out jne icebp jle enter jmp pop jne imul call test sub jge fsubr cmpsl and ret loopne icebp jmp adc push scas or out mov mov mov jmp jg shr or clc cli jmp inc fs pop test and jo (bad) in ret xor mov xchg jle mov lock xor mov add add pop add sub cmp jb jg insb and add mov mov jmp or lahf lods out lea mov mov mov sub out or sub cmpsl fldl mov sub mov pop movl adc mov jne pop (bad) sti mov and mov cmp je sub mov ret call inc mov add (bad) fistpll add je jbe inc mov mov cmp and movzwl mov or mov add xor xor jl inc or jo mov dec test je jo push mov sub call push (bad) dec add mov push psadbw pushf jmp push xorl ds imull dec fisttpl push push mov out adc cld fistp inc mov or rol pop mov cmp sar out (bad) pushf or pusha sub sbb js pop movl je add (bad) sahf mov movl sub (bad) sarb stos insb and clc and jmp lret call mov and jne shr lea mov push std pop outsb cmp jbe xor xor and rolb lcall jmp adc ret popl rorb inc add add scas subb cmp ja fwait jle mov shl mov mov and lea pop adc icebp mov cmpl cmp into lds jbe test outsb ret movzbl sub add aas jbe lea cmp jbe (bad) fmuls or and ja xchg jnp or add inc inc or jmp cmp lock lcall sub mov or shr cmpb mov je jmp fild loopne sbb divl mov or shr mov push std fild jbe mov movzbl out ljmp mov shl mov cmp add pushl mov add mov add mov pop push ja movzbl xor mov sbb mov ja rcl mov cmc push push lea ja mov test je movsb movzbl imul inc push add in inc lock jl lahf cmp ja das inc add xchg push ret lahf cmp jo pop mov popa js addl add incl pop add decl jb cmp sbb lea xchg push enter xor je,pt jge pushl add mov or fwait or shr xchg je mov ja nop lea pop fildl jne dec xchg leave nop (bad) dec jo sbb jmp ret xchg ljmp push shr testl pusha ret enter xchg sub and xchg pusha jg cmp or or ret mov push cmp mov ja or fldl je iret dec ret sub xchg into sbb sbbb movzbl mov movb fmull adc scas movntq xor shlb mov mov jmp mov shr mov jmp mov or xchg jnp add mov xchg and jmp jo out cmp rcll nop lahf sub std cli sbb test je mov jne add cld ja or cmp jbe dec inc lock sub and adc xchg inc popa pop dec call add inc sarb iret (bad) mov leave mov movzbl lea jbe lea jmp add mov inc leave or test mov outsl mov jne and lea mov xchg addr16 aaa addr16 jbe lea stc inc cmp lea inc xlat nop into jl dec xor das sbb mov enter or addr16 faddl mov shl aaa push addr16 add (bad) cmp popf mov cs xchg sub sub jne,pn lahf xor jbe rcrl movsl pusha loope stos ja push and push aad mov andl mov xchg mov aas sbb add or push adc daa fwait lea sarb leave xor das (bad) test cmpsb mov jae xor xor jbe rol movzbl lea popf rcrb jbe lea mov (bad) cmc xchg dec leave or test mov mov push push lea xchg xor push (bad) movzbl lea mov sbb fisttp lea int3 or lea sbb pop ss fadds mov test push xor jecxz sbb mov orl xchg icebp jecxz jg ret jnp jne cmp sub pushl pop mov addr16 fdivrs call mov xor push and mov fdivrl call mov xchg dec insb or (bad) cltd mov cwtl cs out lds sbb xchg sbb pop mov lock mov nop and rol inc ret loope es dec es push jl ret ret dec jl lcall ret jg jl jne xorb sbb leave and ret mov leave adc or aaa loope outsb je xor jnp out cmpsl dec outsb xchg push test fiadd xor dec idivb lds (bad) cmp (bad) xor addr16 add jne fmul ss mov xchg mov dec fisubr and add fiadd push mov sbb inc outsl cmp stos and nop in fs jmp mov inc dec lret inc js mov jne pop outsl cmp (bad) jp cmpsb mov cmp mov (bad) fbld (bad) rcrl test out xchg cmp xchg cltd cli test jmp xor gs push test jnp push inc test lea mov popw test hlt inc call mov push hlt or jne or daa aam iret popf or (bad) jmp popa popa aas mov pop inc test test sahf sti (bad) jmp adc sbb xchg (bad) jmp push lea jmp gs jmp cmp and aad jae daa lea jmp jmp inc dec into jge ljmp mov (bad) mov dec sub xor out sbb mov je add ljmp cmp aam (bad) xor (bad) and push or jmp push scas outsl lods dec das aad add xor xor mov inc cmc xchg sysexit sbbl pop sbb and cmpsb xorb aas loope sbb jno cmp (bad) cld push test cmp das push std mov lds rcr sub mov xchg add out in add jmp push pop shr lret dec js sbb les hlt stos dec adc add dec jge aad xor sub shr and cmc decl and sbb mov shl mov movzbl lea jle pusha push je mov or and sbb test je pxor adc mov push and xchg sub mov inc xlat ret test jmp push mov das adc mov and (bad) out mov ret sbb add rorb popa (bad) movzbl or mov add push (bad) xor (bad) lret (bad) ljmp (bad) in mov iret or cmpsb and xor lret enter pop push add jnp mov or add addr16 push sub and and rorl push les cli push cmp pop scas js (bad) add xchg pushf fdivrl ljmp aas imul orl push xor jo es ss (bad) jne and sti decl (bad) fstpl pushf and mov test je fisttpl add pusha ret mov adc cmova daa mov mov lea xor mov cmp mov or add pop mov mov je push xor jmp cmp add xor lret add xchg loopne in dec jmp adc or jmp scas lea mov ret mov cwtl mov cs adc jmp add stos jg insl ja or lret add mov mov cli mov je mov add jecxz outsl xchg scas ficomp mov daa add stos push fildll sbb sbb jmp xchg outsl mov and mov call cmc mov cld adc out jmp pushf out ljmp loopne fcoml mov jns adc dec mov sbb ja jmp js aaa (bad) out sub int3 std jg shr xor mov jmp mov xchg outsl fmuls add mov popf sub call cmp mov jl jle gs arpl data16 sub or lock mov mov mov (bad) fistpll and adc setae add cmp (bad) out out (bad) xchg ret je or jbe out (bad) movdqu (bad) (bad) mov lea lea or punpcklbw punpckhbw movdqa sarl (bad) jmp psrlw fcmovnb adc outsl jbe cmc lea adc packuswb mov mov ja leave cmp sbb mov add je cld int3 paddb pand fbstp jne prefetch or mov psubusb test scas hlt add sbb outsl cli mov aas push adc movups jae outsb mov jl cmc (bad) fidiv mov and out cmp imul dec jno (bad) sub clc xchg iret sbb cmpb insl scas sbb jle inc or les add add add mov loopne out std adc adc xchg cmc mov xchg lock (bad) (bad) pushl (bad) test jecxz cmp je lea sbb adc ret add call jbe call inc call lea cmp cmovae mov adc ja add pusha push hlt shrb rorb (bad) xor movzbl shr lea lea cmp (bad) jg inc lret mov adc cli or add mov add cmp or iret jmp add adc push jg dec push push lea ss (bad) movl inc pusha mov (bad) idiv add repz or xor test jne sbb es loopne je adc fstps jmp xchg roll cmpsb nop mov fild cmpl je mov (bad) jg les bound push or (bad) je mov mov mov jmp mov mov mov dec faddl push sar push sbb and mov add fnstcw outsl inc add xchg sbb inc cmc pop push jmp or jecxz adc add shlb decl and pop push mov pushl mov mov sbb or mov bound (bad) (bad) js mov in or pop or mov add cmp add lea adc add inc lock stos cli xchg or imul ret or cmp dec jb add (bad) inc cwtl inc sub lahf xor in ds mov call pop gs inc sbb call inc lock sub adc xor mov nop mov aas out fnstsw mov and mov and add jge add inc or and pop or cmove dec or push push sub jne or (bad) imul jle xchg (bad) decl or mov mov (bad) fildl mov jne adc add and mov mov xchg sbb inc inc adc out mov cmovne pusha pop adc and add jp pop and and sti push adc call add lahf ret icebp loope sqrtps test mov cmp je adc xchg and or test iret or idiv mov lea call movb movl mfence mov mov mov cmpl rol push repz lock bound scas jecxz mov repnz xchg loopne jg and xor push adc dec dec int3 add es (bad) (bad) sbb stc movl xor outsl mov loopne pop cld and sti outsb movsb jo inc mov call push cmp call lock sub dec pop loope mov leave je mov call popl inc cli jae outsl mov (bad) sahf cltd ljmp scas cltd test aaa aad mov add jae sub add add or imul fimul jg data16 sub pop or inc int3 (bad) nop sbb enter jmp (bad) pusha cmp jo dec das pushf sar mov das xor addb inc inc mov mov pop add mov adc das (bad) and push push sub xor add (bad) mov add cmp loopnew sbb add push sbb dec loopne sbb xor andb cwtl sbb hlt mov xor jmp andl cmp out or xor inc out adc addr16 addb add scas adc out fsubs cli jg mov add in cmp inc call ljmp inc stos add jno call call or call dec mov mov fwait (bad) sub dec xchg adc add and (bad) or lods scas mov imul fdivrs cmp shr or add mov addr16 mov test jle mov pop add inc jmp sti mov rorl xor xor in cli mov add pop jne es ret cmp fidivl ret mov add cmp add out ds jecxz jge mov mov lods sub test ret sub je rcll sub push inc hlt mov nop ret mov inc sub es pusha adc iret or lcall mov mov add pop jmp popl add into icebp outsb or pop decl inc cmpb mov xor mov xor ja adc ss and ds jno xor mov inc (bad) sbb inc jns adc cmpsb scas or jmp das lret push push rolb shr je in pushf movsb dec dec outsb pusha cmp out adc js inc std nop nop nop ret (bad) mov insb or sub das unpcklps jmp addb in jmp lea jg push aaa add adc loopne mov das enter out js push nop and add xor xchg dec add xadd (bad) mov lods jne sbb js aas in flds add adc fistpll or cli pop push or mov outsb sbb inc or mov mov cmp loopne sbbl jmp imul decl insb pusha mov mov adc sub faddp xor aam fimul (bad) push jp mov and cmp jne fcmovnb sub out xchg std pop jmp jg call loopne push (bad) cmpsl add and push mov daa int3 inc lods in mov push ja icebp xchg in dec and sar or lds sti cmpsl cmp sub mov roll add mov pop jmp scas pop inc cld sbb or add rorb push jl mov pusha dec ret push ret mov movb outsl xchg or pop out nop movsl push ficom dec mov in les adc mov lods and cmp inc add or fwait decb add and ljmp xor mov imul inc pushl mov lea adc ds or pop pop add pop add inc pop mov mov mov sbb xlat sbb adc mov add pop cmp nop jnp es or pop mov sbb sbb (bad) call and or sbb (bad) cmove call out (bad) hlt xor stc mov lds je xor or test es pop push in in mov jo call and xor push xor push loop pushl rclb int3 (bad) call mov mov mov push inc push jle addb outsl pop std paddb jmp movb mov ja mov imul pop pop mov call subb push mov jg negb sahf leave add ljmp sti cmpsb cmp cmp add mov and cltd and aad add or scas add inc pop inc hlt adc fwait or push or or clc pop sbb frstor or or sbb (bad) sub nop daa (bad) and sub inc es xor cmp and and pusha mov or nop jmp (bad) push or incl dec out jne std adc push adc push sbb out lcall fisttpl add push popf push adc inc sbb rol clc add ret jb mov cmp adc inc out or je and push add jl cmp inc icebp pop cmp adc pop adc imul inc lock in add (bad) push and clc mov pop xchg clc add jle fwait sbb clc add cmp cmp jne cmp jl or enterw call pop jb sbb dec xor pop enter daa jae icebp les and dec loopne in jbe push lcall push mov adc call xchg xchg and call aaa jns push clc call lcall push mov mov ds call pop and jmp add nop (bad) loope scas and push or inc xor and adc ljmp std (bad) out jae mov lret je mov std mov push or jl cmp je (bad) (bad) aas add mov mov sub sar sub cmp jbe add lock xchg jb cwtl icebp or jns movl in sbb daa jmp pop fistp cmp mov mov in jne mov shrb roll ja (bad) jg add jmp and test dec sbb outsl mov mov out sar cmp jbe cmp mov jne pushl lock adc jb test js cmp je adc aam out mov mov mov inc pop xor sti inc or jmp add mov roll enter lods mov mov aas enter not shr test jne popf je adc cmp pop mov mov imul nop xchg pop mov pop xchg sbb fadd push xor and pop sar pop adc add mov lea call out xchg pop jp nop rcrb fild icebp leave jp pop jne or or add test jne add mov or in jo jnp sub mov scas sbb push jmp lahf lds mov adc inc sarl mov hlt xchg (bad) cmpsb push call cmp xchg loopne ja sub outsb add sub xor and pop pushl mov lea mov add adc andl repz push and out xor popa loop enter mov sub inc ss fwait and mov push and mov lea aaa mov lock (bad) mov rcll xor out push jno call sub les outsb scas sbb inc xor sbb xchg je test je mov dec jnp addr16 dec adc adc inc test call pop pop dec popf add or jmp lds sub movl push loopne jge arpl push and mov and and je inc jno call aad adc movl inc add jns cli scas jbe lea sub call leave inc mov fsubrs test and jno pop sahf jns cmp fs mov cs push cld mov outsl rclb aas stos or cmc cmp push jno ja sbb pushf cmp jle ds or cmp mov mov cmpsb mov mov jmp mov call xor add lea cmp sbb cli and cmp add test cli aaa cmp mov or sub and mov js dec and adc ret add in cwtl call jmp cmp jbe out mov mov mov mov cmpsb mov mov rorb sbb dec push lea add inc orl fwait sub jg mov mov ficomp into xchg jle or mov call lcall sub outsl (bad) pushl aam mov cmp push mov aas cmp mov jae mov sbb push xor jge call or or call push and icebp push xchg rolb and popa mov pop mov ficom mov inc add or or pop jmp les es movb add inc pusha cwtl pop pop sbbl sti je mov mov fst cmpsb push (bad) jle orl aas sbb cwtl xor outsl dec rorb das movb inc push mov out sub or or scas lahf push push lea popa adc inc cld push les inc mov sub pusha enter xchg leave add xchg leave lds mov adc sarl movl push push and mov or cmc jne cmp adc addb (bad) mov test cmp sbb call mov (bad) arpl push jbe xchg jae or mov ret dec pop adc xchg lcall inc insb test push cs (bad) decl adc movsl add mov (bad) pop and ret mov sbb mov (bad) cmpsl jbe sub or ltr push fistpll lcall dec push xchg sbb cmp std pop movb movb jmp push push aas adc test test xor sub addb jbe dec xor lahf pop jge int3 jg push sub add fcmovnu in pop and push or sub shlb (bad) out mov dec pop jne movzbl test je cmp je sbb jae xor aas mov je mov add sub lea mov push ret sbbl mov mov sbb aas push fwait sbb add in or dec dec mov out dec call popaw ja add xor mov dec adc aas out adc push jecxz mov fisubrl mov pop add adc xor inc add jmp mov mov call mov cmp lea adc cltd ret push mov pop sbb push xor lahf xor lock or das push or inc mov test jae push and mov and xchg adc push std push (bad) pop adc test sete and sbb xchg rorl mov jne daa jbe lcall jmp je mov add sub lea ds push imul notl jbe mov lret mov enter add pop nop add fnsave ja add call inc adc sbb fmull push into push pop mov lock mov call sub iret pop arpl add cmp decb and jl je mov mov inc vpmadcsswd mov cmpsb std or push or les jbe inc jmp mov call xor sbb mov push rcrb inc or add add cmp adc jno test je cmpw je fsubp fadd add ficomp lret call aam add movb movb add sbb sub imul add add xchg xor dec xchg push push mov lahf sub call popa mov nop sbb (bad) and jnp addr16 or add call dec lds pop std mov pop and movzbl movzbl add mov adc mov jmp mov mov loope lret cwtl mov mov sahf sub or inc or ss push mov fisttp adc adcb inc sbb dec add pop mov sbb out jo,pt mov inc add push push out inc mov decb sub je mov or jg jge test cmp out or (bad) add xchg adc insb mov jno in inc inc (bad) jmp cmp je out jmp je cmp jne xorl pop or jno aaa (bad) fldl sub je cmp jne sbb cmp xchg push cs fcoms (bad) pop pop add and jg jg jmp incb xor loope lock adc sbb cmp mov sbb jmp cmp ja mov sbb push jne and call jmp cmp (bad) cmc jg add dec add orl mov sar int mov cmp cmp (bad) std ret xor jmp mov or bnd mov inc jmp inc sbb aas ja inc lock bound xchg xchg and jmp cmp mov aas mov and ret pop (bad) dec cmp xchg cmp and mov es mov stos je jle cmp out cmp jle cmp pop xor scas push jne loop sub popl cmp je cmp jne xor test mov jne outsl add cs and add je cs mov test adc (bad) jne mov adc push lods push jmp inc das push loopne pusha ret pop mov pop push adc pop mov insl cmp cli jne mov add add es pop jg (bad) je cmpw sbb incb call and inc jno xor call pop ffreep mov push test jne call call leave addl sub outsb mov and call loope push clc pop or inc cmp mov cmp jle push add insl add popa or add mov sbb adc add dec adc xchg sbbb push push mov push adc push je inc pusha jb in jg inc mov xchg push adc cpuid adc sbb mov in pop call mov add rorb jbe jmp or adc inc mov add leave dec jns add loopne lea je cmp jbe mov (bad) std add pop rolb sbb cmpb je testb add cmp setle test cmovne lock mov add in xchg lcall call subb gs push push mov fdivrp incl push push call sub mov mov cmp scas add rorb and or dec mov rolb lea (bad) aaa add add add add fidiv les add inc and fiaddl mov call lea jl xchg or pushf add pusha rolb je and push and xchg inc mov and iret add ljmp and add fistpl outsl mov cmp dec lea jg add dec mov jae movb addl call dec xor mov test jmp pop (bad) ja in inc add mov adc push icebp add sub shrb scas insb dec jns xchg add cltd test das xor jne xchg cmp ja cmpsl cmpps sti test pop add or les hlt (bad) fucomp dec sub sbb movzbl mov cmp je je mov test jmp ja cmp inc mov xchg and add sub icebp mov fwait test push movsl or out (bad) push ret sbb jbe adc insb fsubrp jne icebp pop push pusha out bt jae xor mov cmp inc and mov and or or sti xchg push xor inc jge (bad) sub sbb out or lret enter sarb (bad) decl decl test je and lea xor and in je sahf mov sbbl add sub sbb (bad) ret jo cltd ja ret clc jae bnd lds pop pop or mov ficom lret (bad) and pop add lret (bad) push push adc mov jo inc cmpsl xchg lahf dec and add dec or xor push ret lret dec add rorb and das lea cmp jne ljmp sbb xchg in pop dec mov xchg into sub test std cmp ja es insl sbb imul lea inc orl sub push icebp int3 std push and jb in or mov das inc and add and in out inc or xor sbb mov push (bad) sbb xchg cmp dec cwtl pop aas sub adc std cmp xlat (bad) jmp nop add pop sahf xchg adc or pop sbb test push sbb xor pop pop sbb mov xchg test mov fdivp xchg ljmp lea loopne lcall mov xor jnp mov mov mov mov mov decb in sarb push or mov mov mov popf sbb add dec cmp jne lods dec adc and mov jmp fsubs call ja or cli out sbb pop ljmp sub test je cmp mov add ja mov scas mov clc mov paddusw inc add or jns or add inc sti ret ffreep adc xchg shlb (bad) loopne pop or and subl mov sti push add pop add int3 or lret ret cmp xchg or jge es cmpl test jo xchg std inc sub movsb sets hlt in sbb loopne (bad) jbe push sahf in movsb comiss add test push lcall mov (bad) out sub xchg cmp xor cltd fadd fcmovu call mov sbb or pop test cmpl pusha push gs movsb push punpckhwd dec mov mov jmp or pop pmuludq mov rorl and out add dec testb repnz std orb push sub inc in xorl add rcll je jnp jmp loop cmp jae push rcrl add add sub jg fst inc add jle mov (bad) push and and xor shrl mov pop jmp and mov test cmp jae inc and mov ret adc jnp fwait mov and mov push inc jge testl je dec xor test pusha into (bad) mov imul out add aad pusha jg movzbl jmp cmp xlat jne adc js pop xor sub mov bound enter adc out and jne sbb inc hlt xchg loopne jp setne xor pop and and pushf adc outsb sbb adc ds jmp in loopne cs and gs push and cmp and lods into int into jge std push ss sub jo add ss lret mov sbb aas test xlat sub rcrl mov adc and jmp test jbe and mov pop sbb jge std ja mov dec add sbb (bad) incl jle inc jo xchg mov sarb mov mov dec cmc lret fildll jb sub mov add lcall sub and add pop push cmpsl pop nop (bad) out xchg inc test or inc xchg jae das or push pop add or add aam cltd mov (bad) sbb mov sbb sbb mov push sbb js out cld sbb inc or test jae add dec add add aaa sbb jl add xchg sldt lea test add or inc mov sub dec mov mov insl adc daa sbb pop adc testb ja adc pop mov xor inc dec jle popf pusha cmp inc icebp jne or mov add nop add daa ss or fisttpll test sarl and roll sub inc (bad) add call mov sub push rclb je add out cmp leave test and fcomps xchg adc dec shrl out test jbe test js lods xor cmp cmp adc sbb test jmp lock jne in je mov sbb add cmp je cmp sbb mov dec ja pop je pop adc mov ja push inc dec pop inc and je in test test inc push test sbbl cmp jne add jg mov jns add into mov pushf push pop sub mov cmp mov add or jns je inc in lcall cmp test mov aaa lret je jnp scas test aaa adc and push test out adc (bad) imul mov push addr16 dec inc outsl add (bad) stos mov incb pop scas je je,pt call (bad) ds call cmpl jne ret mov mov shl add cmp fstps je pop sarb jmp add cmp je cltd push lock jge jg jb add icebp add call jne sbb addl mov pop sti test push xor jo dec int int mov into mov jmp mov in test xchg ret and jne mov push xchg pop in xor mov or or shr inc jp iret je sbb int3 adc push (bad) je adc test pop and adc or je les aas xor pop inc and sbb xor in test je mov test je cmp sub jo jne jmp mov fcomp frstor add nop or inc push mov stos cmp jno push or mov imul stos and inc pop (bad) pop mov fcomip aas ret cmp jne or adc daa pop js call fimul popa rorb (bad) es insl add outsl adc test shrb cltd sub sbb xor jo jns in addb imul push sbb pop inc les mov mov test in pop mov into push cmp loopne inc jge test mov jp cmp jne inc mov loope push sbb outsl mov jae jne (bad) (bad) dec jnp popa sbb mov adc pop pusha stos sub pop cmc xchg sbb cli les test mov xor call sub push or add aas (bad) jo rorb div mov je (bad) ss lea cmp mov inc mov enter cmp cwtl sbb ljmp cmpsb iret xchg je add ja pop cwtl or cmp jne jmp nop xlat mov cmp je mov lcall and add in mov jne jmp adc sbb sub sub push mov outsl jmp jmp sti adc mov das mov dec fcoms inc das fldl2t hlt pop stc pusha mov push lahf das cli mov stc jmp xor cli mov mov (bad) push mov or outsl add test add jae mov jmp jmp je mov cmp in enter add inc rcrl call popa loopne sub fistl xchg aaa les push pop pop lds aaa jmp loop jo out push hlt sbb inc cmp (bad) pop jg or (bad) in cmp je or cmp je (bad) sbb cmp je insb aas jp idivl pop cmp je ja mov adc lds call sub or add iret cmp cmovo std adc jle push sbb cmp jne xor xchg inc iret repz je and fnsave adc cmpsb imul inc out cmp stos decl mov cmp (bad) (bad) (bad) jg lods cmp mov out jl sub mov out mulb sbb jge push test test ja addb add dec mov lahf (bad) push add dec call decl cmp je jle sti je test cmp jne lock adc (bad) (bad) cli xor pop dec add out cmp cmp sti mov lahf xchg pushf cwtl std sbb xor or mov inc cs mov cmpsb sti inc mov mov test jge inc adc mov mov xor int test add data16 xor add mov sti in cmp pop dec cmp pop jge cmp je cmp cmp add pop jmp cmp test mov cltd fmull adc sbb add jp call or pop iret add cmp sbb xrelease out adc mov loope lods pop pop test dec and inc stos jmp jmp push cmpsl stos pop dec mov loope repz cmp adc xor adc mov push pop leave or xchg aad add jmp out mov inc repz mov outsb and jl and nop int3 jl and dec and loopne loop dec mov sub cmp ja test scas jg jg mov decl outsb cld xor mov fstl push in add cmpl setne jmp repz mov fs add mov ljmp jae add pusha mov jmp scas fistp call (bad) and inc mov insb shr fisubl inc fwait popa sbb adc lods mov (bad) fild adc test aaa jne xor es pop jo inc das sbb call pop cltd or outsl call movsb fisubr or push push sbb lahf mov cmp call jmp or fnstcw cmp pushf je xor fisubl and lods cmp (bad) scas add ret cmc fxch js jmp cmp jne push add ja add jl jae and fucomip aaa hlt or cmp je lds mov fadd js add mov ds (bad) lcall jne jb pop add mov movb xchg inc add adc sbb add inc adc outsb mov rol inc add inc add repnz fisttpl test cmp dec dec aas cwtl test sbbl jbe or lds cs or push imul mov aas xchg lret mov mov movzbl sarb shl sbb test out dec pusha fdivrs sub cmp imul sub sub ljmp ljmp add inc cmp je testb mov rcrl movsbl inc in sbb (bad) cmp mov mov cmp and test shrl cmp je sbb mov bound fadd lea pushf jmp mov mov (bad) adc icebp fmull loope (bad) and mov push cs mov inc or (bad) je add testl push jge pop sub sbb mov push mov test mov or outsl or cmp sete cmp mov and mov data16 jecxz lods stos fcomip call cmp jne and mov add addb dec add pop xchg cmp and je sbb mov or je add ljmp jge (bad) test rorb jae lock push mov lea mov je and and enter and and orl out mov lock jne fadd mov sbb add pop pop push dec and bound out and add test mov sub sub shr inc out imul loope test cmpl push add test cmpsl je jo rorl test cmp mov cmp (bad) cmp push bound call hlt decb jmp call cwtl sti ja mov cmp je and xorl mov test pop adc xchg add fistpll pop add mov cmp popl mov push adc cwtl jp test les add aas (bad) or call adcl or test xchg js aaa test mov inc and adc and (bad) mov iret pop pusha cmp je xor adc or cmp sbb test dec lea cs inc xchg sarl cmp lods out es bound cwtl std push addr16 cli pop je test and test adc pop and imul cmp xor mov adc lea or fsubl xchg pop out test stos push sbb add in and jb cwtl cmp (bad) xor add fild and pop aaa xor lock jmp pusha addl mov xor xchg lret jae in lret inc push jb lds call jo call les and jne test mov cmovno pop cmp jne nop xor sub fucomi jbe cmp sub out jne mov test ss addr16 cs push push ja pop orl popa loopne (bad) xor test int jnp lcall adc mov push push mov cs xchg in lea and lock test or or mov jo jg dec or lcall ds jg xchg sbb mov xchg fs jae xor fdivr out jae push lock test je pusha or insl push add jne lahf sub or clc sbb (bad) jge sub cmp je pop sbb jne sar xor jmp movzbl or mov jmp lcall std xchg sub dec incl add add mov mov mov in int dec add push sbb add mov mov in add or insb dec push sub jmp call pxor lea decl dec hlt dec mov mov btr (bad) outsl or movb adc jg push rol inc add movups repz inc add dec sbb clc ja movups outsb add inc push add inc cmp push gs imul inc adc sub inc rolb pop and mov mov mov add decl (bad) call dec cmp mov je in mov add mov mov mov hlt inc stos or mov xor test pusha cmc dec pop xlat jg inc sbb mov js cmpl jne adc sbb arpl test push insb or jle jbe outsl lods sbb (bad) in negl sti clc imul loope cmp je push loop mov inc push loop mov jle popa js decl ucomiss fmull test cwtl rorl jmp mov or lods aam addr16 mov jmp (bad) enter ret mov test sbb insl fsubl cld add roll stos add in xor pop das cmp add xor push pop test inc sbb push nop mov jo clc push cmpsb seta setb sub movsbl jno pushf test sti sub adcl sarb movl inc imul and je je mov nop jp pop clc and sbb repnz or outsl or jbe jnp and push mov push enter push aas ret inc or (bad) mov imul incb cmp jl dec mov mov int3 xor inc mov test mov insl (bad) je jo aaa or sub mov loope cmp xlat push sarb inc sbb dec cmp dec and cli ja cmpb jne dec cmp je lea inc cmpsb stos add sub cmp je add add add sub clc push mov or aam movl add call xchg mov mov pushf (bad) fimul mov divl and jp in out or jb call (bad) in inc push lock clc call jns call mov inc add sbb jl (bad) aas jns and inc testb mov mov call adc pop loopne fistp and call enter lcall mov add mov pop cmp test inc cmp (bad) (bad) push cmpsb jle popa neg cmc insb jge icebp push dec adc inc add cmpsb gs and stc add adc lock and out into add in call nop mov jecxz arpl jno aaa shrl jnp inc push jns test push insb sub dec add rcll clc inc pop hlt cmp jne cmp dec mov into (bad) lcall test daa lds mov icebp cmp fs mov push dec clc add (bad) jle clc jbe jns je cmp adc loopne js fld1 (bad) dec add shll and sahf dec mov stos adc (bad) or add mov dec cmpsb inc pop xchg or jge push pop pop add inc repz inc cwtl xor jbe xchg or jmp cld incl cmp ja mov rolb jg loope jne mov ss pop dec dec cld mov mov test je pop cli pop pusha fcoms addb out push scas out js and add mov (bad) lret jno in jp add fcomi outsl jp icebp call mov dec or cmp pop jle adc je or imul ja jle jmp rorb and sbb or xor mov lret je or mov (bad) or jmp cmp jne cs movb dec add and push push mov idiv mov nop movb jmp sbbb inc in sub rorl ljmp jmp cmp jmp scas nop icebp aas test and dec fld1 scas int test or nop adc out inc pop fwait pop add cli rolb adc ja or incl add push cmp setle mov lea mov mov test aaa pusha loop cmovne imul jne jbe movb jmp inc or pop cs dec add dec decl mov push and testb mov jmp and mov jmp movb jmp or (bad) adc dec cld ds mov cmc in xchg cmp jnp mov movzbl pushf sti outsb inc ret call cmp add mov jge dec fcomip outsl adc call mov in or dec clc (bad) es adc das ja adc scas aas call and into mov and pop in sub loope push jns stos faddp xchg ret xchg mov frstor or sub inc mov aaa or fdivrl cs sub mov dec (bad) sbb popa rclb call icebp decl int3 cld gs dec cmpl jno,pn orb adc call (bad) jg je movl movl movl sub add pop or out add cmp add mov adcl ret pop lea cltd or popf scas scas js cli xor pop or pop or inc shr add call xor mov add (bad) add inc dec cmpb add arpl dec ljmp addr16 cmovne mov incl inc lods hlt add xor test loop add or inc out mov fimul push leave or inc ret mov push xchg call inc cmc add andl sar mov and cmpb adc fisubr mov mov mov mov inc or jge outsl cmp inc repnz push push cmovne mov and jno or ss cmpsl sbb call std jg or mov movsd cvtsi2sdl pop xchg add mulsd push sub ljmp and add out (bad) aas push mov jns mov and cmp jne adc movb mov sbb and sub inc mov mov add ja sbb sar sti cmp dec cmp cmp je sub xchg and sbb cmp xor add mov adc mov push add into sbb (bad) aas sbb dec cmp je mov xor jmp arpl xchg and add pop in (bad) jg inc dec mov sub sar cmp jae int3 add add arpl movzwl mov push push sub dec aaa repz dec xor push dec loope add push dec pop ljmp pop outsb and in pusha mov test mov add inc sti push or scas rclb clc sbbl rorb test into jl outsl addr16 cs mov aad xlat scas and mov sub clc pusha cmp add test mov icebp add mov arpl mov jbe lods loop sarb in repz push adc (bad) xor ret push icebp mov push dec mulb test mov int3 fcoms cld or add push xor inc out xchg cmp pushf jmp xor or adc or or pusha mov add dec (bad) bound mov jl push pusha es leave pop sbb pop pminsw and sub jno movl test cmp mov dec pop aaa push sbb jae adc ljmp les fstps jmp pop (bad) and xchg or fsubs adc xchg add idivl push pop pop pop outsl mov xor loopne cmc jbe dec and add out loop cmpsb ljmp rorl aaa in jne mov call out adc movl jbe add stos fstpl adc sarl xchg sub lahf ret sbb push xor push adc pop pushl les mov pop pop out rcll jg mov mov test js mov or pushl shlb cmp enter hlt jne mov mov sub fadds (bad) dec aas mov or mov lea cmp subl add movd cltd movq mov clc (bad) xchg mov mov mov (bad) bound shr rcr cld jg add cmpl mov mov je sbb je mov jp insl and mov inc add cli mov mov shl sub mov ljmp mov roll mov inc jmp xchg sub lea and pop jae mov clc incl add mov add rorb mov sahf imul mov loope clc mov mov mov mov lea add mov pushl (bad) div imul mov sbb lock xor aas pop inc sub test cmp rorb mov jae pop or jge (bad) cld lea out test push inc add jp shl test inc jl ljmp jmp inc jmp fcomps sti leave fsubr mov aas test js aas mov (bad) pop mov rep stos jmp aas mov popa mov adc dec add add and adc jo mov or xor in ljmp in mov pop push ljmp insb and lea and mov ficom lock add and stos sbb pushf dec std mov in test jnp push push dec mov pop mov mov lock shr and mov push pop out xor xor xor and (bad) nop dec cmp mov mov jb cmp jae mov lret mov out fwait ja cmp push insb fidivr jo mov dec mov push mov jne sub mov test mov pop mov mov pusha mov cmpl and mov enter test inc or orb aas push rorb dec xor cmp je push xor loop push inc sub cmp lods adc and outsb test cmp push mov push inc mov push or dec adc int3 inc adc or outsl xchg or push call outsl push cmpps mov insb ja adc push andb (bad) mov and imul jbe orl clc loopne and loopne adc mov sub pop (bad) ljmp popa clc inc repz and and push fstl xor sbb aas cli pushl push sub (bad) jne mov mov cmp test jle aas arpl call jmp ljmp add or and jmp jmp dec call cmpl jne clc xchg mov jl sbb call je movsb adc push stos je sbb je adc jmp jo das add in mov rol sbb jp je inc es mov icebp mov and movsl sbb add mov push push or push and mov cld aaa adc or push adc inc adc adc push sarl in sbb roll xchg aad mov adc out dec pop push or or out mov sbb push push mov aas je inc sub mov mov xor add xor xor (bad) lock das or or lcall inc and or test mov mov xor test mov cmp call mov arpl rorb dec adc mov mov lods or pop and jae loopne add mov mov sbb sti pop push or sbb std add test adc adc (bad) iret js add shrl call xor (bad) pop sub ds cmp jae add push fsubrs call adc cwtl jg out mov lea lret (bad) jae cmp in xor cs jp add inc sub iret sub out test adc mov xchg adc add cmp loope adc mov cmc jne adcl idivb lea call push cmc mov fild mov es jg rorb mov aad (bad) cmp mov or sti adcb push out pop or inc in xor rorl imul mov pop pusha mov decb push pusha mov in mov or insb and aas call popf add and dec push fistpll call and mov xchg jnp test add adc mov and iret jne mov cmp cmpsb add mov loopne add mov sti cmp mov out loopne mov lea lea and or inc cli lcall dec and fucomp pop pop (bad) add or cltd sub test fdivr out and dec mov (bad) jne mov sub adc dec dec pop mov fild adc xor mov fs dec mov and sub sbb je adc add inc pop mov mov pop (bad) mov xor xor or je test pushl jno fildll test jns fadds jl or cmp pop fcoms xchg jne mov push and pop and scas lret movups daa sub ljmp subsd sub stos jmp inc xor pop and push std mov jmp dec inc inc and mulsd into jg daa pop inc sub sub bswap mov out push adc das adc or jb incl or addps addl lock pop xor xor ljmp clc pop xchg cmp ja addl pop inc cld inc mov mov sub repnz push aad xor xchg add (bad) call or rol movaps cli or je fs mov or jne mov loope jo mov mov loope insl cmp and mov push inc mov ja jo bnd pushf pushf mov sti xor sahf adc loope pushf je xor cwtl mov push dec lea and jg inc sub test xchg cmp sbb (bad) cltd sbb and iret sbb xchg inc repnz cmp enter and add outsl or cmp lret cmp int3 sbb ss cmp scas dec inc xchg lock js,pn mov xchg mov mov int3 rcll repz lea leave dec and xchg div inc xchg out adc or xchg xor mov push inc aaa out mov clc pop mov test gs das inc adc in sbb into lea insb jb push pop mov xchg lds popl popa negl cmp mov add lods lret es clc mov call sub cmp scas mov test mov and jmp notb sub and shrl in add add jno pop and or push sub mov cmpsb mov mov dec cmpsb cmpsb les push push add sbb sub jbe mov roll hlt fstpl popf mov in push mov rcrl sub imul es mov sbb xor in xor sub mov int jg mov (bad) fstpl sub jne (bad) jne xorl or cmp inc jae mov int adc lcall adcl push sbb jge mov orb cmp (bad) cmove sbb sbb and jle push lock outsl out pop loope lea ret xchg lea jle or inc add mov jg or mov jmp lea and push fstpl dec mov inc mov dec jne sub pop pop jle daa mov jmp das dec sub adc movsl (bad) cmp add cmpsb das fild roll bswap subps call mov sbb ss add aaa pop add divl add lret dec adc sub adc sub xlat std inc in mov sbb adc or jmp popa out cmpsb or dec or rclb dec mov lods fwait mov and add call je mov and inc shrl adc jb push mov mov or xor xor mov pop adc cmp adc incl sbb mov mov xor xor or je add test movsb inc loopne xchg adc mov push nop jmp mov and test cwtl adc insl push mov xor int3 inc test xor je,pt adc mov sub add hlt ja sbb mov int3 and pop nop jo add adc divps cmc sbb xor add and ja data16 mov loopne push fidiv int3 mov add sub xor mov add in add mov ficom add xchg pusha xor jae jae pop rorl jno add sbb xchg mov sarb push cwtl rcrl cwtl les mov lea inc (bad) popa sarb cmp lock lock sub or addl xor push and sbb push sub or (bad) pop in xchg lea cmp jb pusha test insb and fs je jno test test hlt sbb adc popl pushaw mov (bad) rorl add cmpsl and adc adc jno aaa std mov dec adc adc mov mov dec mov icebp jg (bad) mov mov insl and xor add cmpsb mov popf ret lods rolb dec cmp adc or xor push xor mov xor dec rclb outsl cld loopne cmp ja jbe push rolb and sub orl add add push fdivrl (bad) cld inc and push icebp repz push push sbb mov jns movsl std rorb mov xor pop test call xor imul pushl dec fnstsw and push shr daa jmp jl daa mov pop out orl cwtl mov das cmpl xchg shlb adc es mov push pop adc mov inc into loopne jne inc sub jae lock xor sub pop popa inc ljmp pop xchg lcall daa andb pop xor leave pop push rol and andps rclb rolb push rcrb pop or rolb pushf test pop add and inc and or loop inc and sbbl inc pop orl jl stos adc fucom push test jae aam jne pop pop and pop jecxz and mov mov sets jbe adc push adc cmp es mov add in pop lock inc add pop dec xchg repz lea sahf push push sub adc sub inc mov mov (bad) and (bad) mov cmp or cmp dec push mov idivl push dec add or nop shll bound xchg sbb xor lcall leave inc mov push xchg cmp aam cmpb js add adc test lds (bad) lcall call adc movsl mov add push rorl cmp pop sub mov mov test les (bad) mov jmp rorl mov outsb nop push push mov lea addl add call lea and add push sahf push out jo add (bad) call jb inc mov shrl dec fadds daa sbb inc mov adc call or les cmp test add mov ret or xchg stos (bad) stos aas ficoml push push xor iret cmpl iret inc add stos mov nopl iret pop mov fmull icebp sub es (bad) pusha mov int jne lea call loope and or push sbb mov xor into add push mov mov dec mov std mov fist mov mov mov add mov ficoml mov or rorl and and push mov pop mov sbb push mov mov mov xchg popf mov faddl mov mov jbe xchg add mov inc add and or mov dec add mov mov xchg mov mov xchg mov roll pusha dec mov lock lea or jno in add add dec sub push mov mov aaa (bad) or orb decl and test js test (bad) hlt divl lea and jg ljmp mov loop sub jnp or es cli lea subb nop add nop mov xchg add icebp enter mov enter mull lock xchg add mov add (bad) stos push push cld nop test jns daa jle dec fsubl inc add cmp pop sub adc scas test sbb mov pop and sub and and inc mov or mov (bad) adc and subl clc sbb mov mov mov je cmp xor mov daa cld push ljmp scas movb dec mov test pop ret jo mov (bad) sbb mov cmpsl sbb jne mov jmp (bad) jne jmp out jae xor div push sub xchg pop mov mov dec nop movq or adc outsl add sbb add dec addr16 inc push dec lea lea jmp pop xor adc rolb adc mov mov mov and add sub pop and adc add push shrl mov and adc lcall push roll mov fld1 enter jmp add sub add or fwait lahf sub push lds lea inc cmp (bad) loope inc xchg lret xchg or add ds into adc dec and sti (bad) incl jg push xchg push xor inc adcl js mov mov cli rorl lea mov xchg and sub mov sub mov and out nopl ljmp adc mov test and mov cmp or and inc lea mov movl pushf xor inc or mov mov xchg and cmp je adc mov icebp arpl ret adc add (bad) decl adc nop mov loopne xor push sub scas cmp add sub push mov add fadds inc and inc xor mov push and enter addb dec sbb mov cmp add and sbb mov adc adcl mov je test test cmp rorb cmp and movl fsubr adc sbb inc test add std lds (bad) jmp sarl in or enter sub std aas iret mov jmp fldt les mov mov cmp mov je add call mov add call push sbb mov fmuls jle and add test loopne (bad) pop popa sbb shrl and inc mov fnstcw and stos clc inc cmpsb insb jbe and jmp imul cmp data16 cmp jge dec cmp jo sbb rorb xchg in inc add daa notl insb fsubrs fmul xchg fldt data16 popf popf cmp cmp popf dec push nop push push stos push xchg adc jae jge and mov int3 or pop cmp cld push bound inc push test push out (bad) xlat scas mov mov stos inc jns cltd or jnp shr ss ds addr16 call jmp mov add (bad) decl ret (bad) add push test mov xchg mov daa cli xor jmp pop pop vpcomud fwait or mov jle call cmp les mov sub xor push inc xor jg adc sbb divb cmp or add fcomip mov add or mov or movsl mov out cmpsb pusha ja insl out or sbb sub fdivr add mov call cltd or imull jne push xchg iret jbe and aas fistl (bad) cmp je lea data16 arpl repz andl jb adc call out sbb inc addr16 jne push sbb pop inc cld cmp je mov pop bound fimul les xchg ret jne (bad) push mov xlat cmp call mov pop mov rep adc mov mov and xor and and faddl add cmpsb je cmpb (bad) or movzbl mov add add iret push push mov fcoms mov ja lods (bad) adc dec add sub push adc daa rol sub pop or cwtl or lahf sub jae pop sub lock add loopne adc jmp push pusha inc jg add xchg in mov hlt adc mov inc and jo loop pop sbb xor push cld imul call scas mov add shr add adc sub adc mov xchg loope loope inc cwtl pop pop mov xchg push loope sbb mov mov jg test call int (bad) in mov add add (bad) sti cmp int3 iret pop add jmp clc out pop pushf loope aas sub mov incl pop andl out or rorl dec sbb out sub lea cmp pushf jb outsb xor stos loope pushf adc sub mov (bad) add pop or xchg fstl lds push dec ret fnstcw test dec add call cmpsb pop ja adc mov sub (bad) pusha adcl (bad) fcmovnu cmp movsl dec add ss test jle (bad) js in cmp shlb or fildll mov fldt push mov repnz sub gs mov cmp push rclb push mov mov ret ja sbb rolb mov push ljmp cmp call mov repz daa mov test (bad) jo pushl adc cmp (bad) jae inc cmp imul jb jae scas pop or adc lods cmpsl insb mov lods jnp out out cmp jmp inc mov jno adc jnp cmp ret adc xor cmp repz add ror or adc sti push and call or jecxz cmp test lea mov (bad) mov sbb xor fldl and call andl lahf cmp out mov and call sub pop inc jg shll pop adc inc adc dec inc mov mov divl inc cmp or loope (bad) call in mov jne add cmpsb or call ja sbb jl adc mov or adc jnp cmp inc xchg push cmp or or (bad) mov cmpl mov je call pop xchg inc rorb scas call pusha and daa iret insb mov andps lock sub add mov sbb (bad) aaa push fnsave xor test cmovne je jecxz mov leave je and mov lea mov cmp mov sub push add adc xlat lea gs add and push rorl addb pop xchg and add add incl add sub test mov jp adc or insb push inc cmp push dec pop ret out cmp xor and adc idivl lock insl clc push add dec dec or dec or adc es test ret jb lcall cmp int adc sub adc arpl add call xchg sahf test jne outsl dec inc mov cs add jmp orl addb jae sbb cmpsl adc hlt or sbb sub shlb ss test jne sub test mov xor lahf mov xor or inc sbb add aaa loope fwait call sbb shrl lods pop add orb sbb xchg push mov or pusha inc add mov mov lock mov xor xor mov xor je jb jb lea decl jle xchg test mov insl push add cmp je ljmp pop xchg sub add rolb call dec sub add (bad) sub mov cmc cmpsb mov lock push inc mov mov sbb int3 call sbb in mov add mov or shl mov inc inc and push xchg mov flds call push dec dec out mov push dec test sbb sub or or add jno stos xor stos sbbl stos imul push mov jae test xchg jne (bad) jne notl dec call ljmp push push xor push mov jecxz in mov mov and cmp fst mov movsb aaa js cmp insb adc pop test sbb sbbl negb inc (bad) loopne cmp cltd out sub pop adc adc pop or pusha js iret pop or mov call incl fmuls add lahf or add sub loopne mov xor sub aas and in and cld sub add loop mov je jae decl or pop push iret adc in scas dec sub push inc mov xor and adc pop add xor call lret sbb pop mov xor sbb add adc xor ret or cmp std jg cmp je sub mov jbe arpl rclb pop mov imul sbb sarb aas icebp sub push sarl enter aas jb nop nop push mov (bad) mov and stc cmp mov fwait test sbbb cmpl push decl add rorb and fcomi lea ret or pop and xor idiv pxor cmp outsl mov cmovle (bad) cvtsi2ss add inc adc pxor mulss enter in leave movsd adc dec add cvtps2pd cvtsi2sdl adc and out pop int3 movapd andpd comisd ja cvttsd2si test and pop adc cmovg lea sbb pop ret cmpb int3 add jmp jne jns add sar jmp fnstcw (bad) repz jmp cli pop adc cmpps js push mov subsd into jmp jmp add in add mov and lea rep mov push mov add dec push jp call sahf sbb aaa cmp cwtl sub push mov ja add mov add jle jmp mov fldl movsl mov jbe out (bad) ja jge (bad) imul test mov imul pxor fmuls mov pop fdivrp lcall push xor test jle imul cs mov add mov sub lahf inc add aaa icebp sahf int3 loope add (bad) fcmove ret nop (bad) mov pop mov outsl or xchg scas pop lea add (bad) sti add mov movb add sar insl (bad) mov push xchg out mov sub bound or pop adc jle mov mov test mov clc sbb call cld mov mov mov mov sbb mov mov cmp cmp mov mov mov leave cmp cli (bad) popf or inc mov mov mov mov mov push cmpsb call jle add test or pop add fwait ja mov jle mov inc sub subl insb mov cmp mov mov mov cmp mov mov xor add adc sbb loop and lahf push and and cmpsl mov mov inc mov pushf stos ds mov add xchg and mov pop xor rclb loopne rorl xchg jae mov and test addb mov inc push mov dec mov (bad) jle cli mov xchg xor inc inc mov sbbl push insl push loopne push xchg pop ds mov fisttpl fnsave jg inc popa mov dec cmc push mov push inc sbb pop mov arpl or adc out dec sbb mov and xor xor xor pop mov cmp or inc xor xor push lcall mov xchg and repz jge add dec mov sbb xchg fcompl sbb xor or bound pop jnp cmp cmp cmpl sbb jo jo mov mov sub xor js,pn sbb stos xchg insl imul (bad) pop xchg xchg js,pt and and or ja addr16 and and pop popf fadd inc pop push stos dec punpcklwd ret and mov jo mov lds je lock and insb and pop push pop mov mov xchg inc mov lods inc mov shld sbb (bad) decl movsb fiaddl xor xor xor scas mov pop cld jo adc xchg xor movsb js mov cmp out arpl push fbstp flds loope test or xor and pusha and cli mov xor stos mov shll int jmp mov in sbb adc xor xor cs inc mov shld frstor lret jbe std pop and mov daa jl xlat xor (bad) cmp add int3 insl mov lret xor and jo js or xor iret (bad) xor int3 aas out add jg das decb lods rclb lods lret imul and or xchg roll addr16 sub fidivrl je ud1 (bad) fbstp push mov lret movsb rcll rcrb out jbe mov (bad) arpl xor repnz cmp push xchg arpl cmp mov push mov ja iret xor fidivl mov xchg sub mov test out sbb add (bad) js out lods lret lods rcrl jp add and loopne inc jb push mov sub sahf jae int3 jno xchg mov aaa push xchg movsb sarb mov adc and pop sbbl mull xor and sbb jae or or (bad) or sub adc insb insl pop aaa xchg jae and mov imul jnp jbe (bad) lods rclb xchg imul and sbb dec inc mov xor xchg mov sub or out or cmpb mov xor and jne or xor cmp fdivr jp and dec or jo pop xlat adc addr16 dec dec xor fmul sbb out rolb or test or aaa inc sub jnp test dec mov mov mov push xchg xor mov push (bad) lods rclb adc xor or dec and push and xor inc mov xor outsl out jae cmp or mov ret sbb jne mov fs push xor xchg or lock mov sbbb add push xchg and jge or movsb ret push rclb add pop and sahf (bad) adc mov add xchg and scas loope push lret add lret loopne push dec fcompl add inc push enter iret cmp insb or push or push or cmp dec and xor stos aas cltd add jb sub loope or ss int outsl in (bad) cmc push popf pushf outsl sub mov adc aam xor cmp pushf and adc jae stos and or setne mov das sbb xlat popf push mov sbb sbb jl stc xor xchg mov adc push sti or sbb pop inc push mov add xchg jnp jnp pop ja ret and out jmp jno iret jne lods mov jne add enter lret arpl ja lds pop faddp out cmp sbb pusha pop and clc dec cmp pop aas mov shld dec mov fbstp and test push dec xor jl adc cmpsl lods dec add and push jno cmp push repz mov addr16 push bound lods and jbe mov and xor mov mov push je jb xor nop imul or xchg mov test cmp jle movsb clc push xor xor add pop out arpl cmp inc and xor adc add add jb dec cmp (bad) shld shld add mov loopne ja mov movsb (bad) lahf out mov sahf fwait adc lock (bad) jl sbb (bad) not mov and and mov mov call iret sbb xor addl push xchg adc jg not not and or in call push fdivl aaa sbb pop push cmp mov imul mov xchg and not xor ja ret xor or jns xor mov jno,pt shll dec and and sub mov fld (bad) cmp xor or mov stc mov rorl (bad) not cmp jne and not and or xor jb pop pop adc test mov fbstp repnz and not and not xor push dec inc jge pop or out sahf jnp mov and loope push test ret mov rcrl push scas and ja cld xor xchg rorb shlb aad not lret jne cmc and loope xor lods sub test fisubrl rorb rorb popa clc clc xor xor add inc xlat push add int insb mov pushf pop adc outsb cmp fisttpll xlat not mov rolb loope call xor not xor jp outsb loopne xchg add cli xor call lcall and daa mull cs and subl and inc adc (bad) adc xchg sti in mov mov lock and jp dec adc popa pop and mov int jmp adc out adc pop cwtl lods or cli adc ret mov xor mov pop out or mov push jnp addr16 (bad) jbe addr16 sbb test mov and push pop adc clc (bad) popf or (bad) xor mov mov outsl inc xlat ds and xorl sbb cmp xor lret (bad) lock mov sub not not and xor aad repnz pop or mov mov mull sbb xor int xor iret sbb jnp push dec aad mov clc cmc ljmp mov jecxz jb push fsubl jo mov mov lea aaa not and pop (bad) xor push cmp push xor fnsave mov jo jne mull dec in dec xchg pusha xor or or add sbb jnp out (bad) idivb pop cmp call mov pop or lods stc jmp (bad) mov sub and mov imul and xchg pop mov (bad) push xchg inc pop aad je sbb call xor push or jg cmp pop js mov and aad jnp add jae divl sbb aaa fldl mov jmp jecxz cmp jne enter (bad) loope in pushf repnz push mov je mov adc jae mov (bad) notb mov jo pop decl sub lret jno jo ja or mov mov push or mov cmpsl mov and test pop or jne pop std mov mov mov or inc push jl mov subb and cmc mov dec (bad) inc cli in clc mov xchg or jge adc cmp xchg movsb add pop test pusha mov cmp pusha mov (bad) jecxz adc (bad) jb xchg mov mov mov mov mov jmp enter or decl jge mov cld sbb shrl mov mov push clc mov xor mov xchg fcoml cmp pop and jne std xlat mov pop sbb sti mov ret mov mov mov xor aas inc dec mov mov test add pop test add test shrl in cmp xor xchg clc fwait sbb lcall sti adc sti mov movdqu pxor push and cmp sub and int fwait daa outsb push movsb and jbe lods pop shl leave and jle mov pop icebp mov adc (bad) mov add int pusha movaps mov data16 xchg or mov and pushf and push pop movsb and or sub sub stos lods add sub std push pop movaps aas xorl pushf cmp xchg gs jne (bad) or loopne fsubl mov jl add iret mov cli js xchg and add sub idivl scas pushf sub pushf sub subl pushf sub add xchg dec sub sub sub pop ja sub and push add pop push and inc enter mov mov ds cmp mov push popa jns mov push jl lods mov mov out xchg or test mov jmp adc push cmp pop mov xor xor ret adc mov out jb addl sub inc clc in push jo and inc mov inc push inc les inc loop xchg cmp into aam or and mov sbb add jmp rclb aam test arpl sbb push jo fisub sbb push add jns loopne jb,pt mov mov out icebp inc mov inc test movsb out scas jnp mov aaa mov push pushf inc icebp xchg jae xchg xor shll mov mov jne cmp enter add add add mov and js out arpl pushf and (bad) jo (bad) xor mov push xchg rorl cmovae outsl xor int xor mov pop jo sub and pop cmp (bad) call add jae xchg mov mov xor pop (bad) loopne mov ds or cli or adc clc jle dec push xchg and cmpsl pop ja repz test sub stos xor mov mov (bad) fistpl cli xor mov xor jle (bad) or ja pop aaa div insl test jno mov xor xor fcomi cmp out sub and sub pusha mov push pop bound ficom or or (bad) or cmpsl (bad) lea sub mov (bad) pop lahf and xor dec test pusha pusha cwtl adc jle mov mov sub in sti mov inc mov lret loop sbb or adc or mov (bad) xor cmp push adc outsb push scas jmp cli add out xor cmp test mov xchg stos sbb rcrb xchg test add or bound cmc xor fs out incl (bad) mov mov pop push xchg (bad) mov pusha jbe xchg adc leave mov lock loope xorb dec cltd pop (bad) mov rcrl pop sarb test jo lret push out psraw shld test add repz xor jne dec pop (bad) clc ds and addr16 mov pop fsubrs xchg stc mov lds scas xor push xlat cmp xchg xor into adc rcrl or (bad) arpl adc lods cli adc stos pushf or mov aas or fstps push inc push arpl push xchg xchg aad icebp aas jbe sbb adc movsb clc insb scas cmp sub pop fdivl (bad) mov iret inc enter and inc sub stc out mov mov add add call and push stc mov pop xchg push neg mov push fwait and or sbb adc xchg xchg ret loope inc inc movsb cmp sbb aaa enter adc inc test cmc xor xchg shld rcrb (bad) test push and jb (bad) leave xchg loopne ljmp inc repnz cmp fdivl xor add cltd ret cltd jp add test jbe (bad) cmp mov bswap xor push adc mov adc enter leave sub mov xor xor es (bad) out out cmp jb push dec movsb rcrb lock push mov test loopne xchg clc call scas dec loopne (bad) divl in xor pop xor ss and pusha push xchg xchg sbb cmp mov pop in sarl or inc dec push dec lods rorb ljmp jno jecxz xor sbb xchg push sbb push data16 mov inc pop mov mov and (bad) or xchg js jb (bad) loopne inc mov push or rcrb loopne pop out jb push push sub pushf adc push sbb lea arpl mov xchg jle fbstp pop push inc dec repz (bad) fcompl pop cld sysret xchg jle outsb cmpsb inc lret addr16 sbb pop cmp rcrb xchg test sarb lret aam (bad) jbe and mov or or popf jb out push and dec sbb lret xchg and ret mov out out jae mov and xor push push pushf and pop sbb add lock push adc or in clc push in push lods pop stos xor xor inc jnp sahf jnp push push pop (bad) sub push mov fisttp lods ret sbb lods clc sbb (bad) cmp icebp cmp xchg or sub or rorl cmp aaa dec repnz jl icebp jp sbb sbb inc (bad) ss mov or push fwait sbb ret gs jo mov cmp int imul jb je roll mov iret shld and scas loope and jno mov jno jmp mov mov ds ss xchg jnp push icebp mov jo das imul xlat paddsb inc mov repz adc add jg sbb (bad) or inc ja lret arpl push cmpl sbb mov xor pop pop mov xchg jo sbb ds mov addl daa ljmp int3 cltd stos daa xchg inc out push xchg xchg push inc sub rclb ret and in adc shrl and faddp xor mov icebp icebp iret mov sbb cmp movl mov and not and inc sbb divl (bad) sbb jl out sub out xor movsb jnp mov mov inc in xor mov mov pop adc pop mov and stos out out cmp jg pop fwait loope xor mov not adc mov add inc test jp fstpl jp testl sbb jge ljmp adc ret sub pushf iret popf faddl leave addr16 addr16 jae popf jb daa xor pusha (bad) or xchg jl jge mov sarl out jae or sbb jnp dec add daa loopne not and mov and push (bad) and cmp mov not push aas add inc and not and jle lahf ret loopne mov xor lret mov xchg push cmp lds inc not xor sahf and aaa push sbb mov cmp mov lret push mov add xchg and divl cmp and popf fdivrl inc fstps inc jmp fisttpll shlb xchg jbe adc mov and out inc ljmp cltd fwait mov xor sbb ljmp divl and out xor or fdivl add cld mov and js jo cltd test loope cltd pop xor (bad) jb sbb or pop mov inc gs fnstsw inc and mov sub add xor fsubrs jno and dec adc pop xor xchg stos hlt cmpsl sub jae fsub ljmp das sbb jno lock cmp fisub and xor cmpl push sbb (bad) test cmp cmp and or mov fmull dec negb push mov sbb daa or mov mov pop sahf add xchg xor sbb pop add lds ret jae mov pop mov cmp idivl pop fnstcw jne lds adc pushf sub mov pop jmp test xor jb add mov mov aas lock mov mov fldl inc repz mov addl push out not mov and xor cmp jecxz (bad) jne std out (bad) push movd add fmuls and movlhps jg mov sbb add inc sub and dec mov imul pushf icebp add jne xor movsb push or movhps jo aas jmp jmp xchg push mov adc push ja mov lods test mov add and movsb fwait loop sub mov jns sub xor mov subl out mov and cmp cmp jo lods mull mov cmp add fistpll clc outsl or (bad) decl pop cs test mov cmp jb push add jg xor testb je movzwl ss (bad) fimul adc je movzbl mov cwtl and es pop push lea movb adc sti aaa push call movsb sbb mov sub adc movq pxor add xor lea outsl mov mov lods and fidiv pushf and cmp and mov in or and je mov into cltd jo ret cmp mov test xchg jne ret int3 loopne adc adc or dec pusha or or adc orl mov push inc call sub cmpsb lahf mov pop jle fwait add mov decb icebp lea daa push rorb test test adc and fstl in lock jle pop cwtl (bad) decl or pop adc sbb mov inc sbb sbb std jb pop add mov jnp mov mov mov xor mov enter xor mov xor dec les fcompl xor or cmp outsb test inc inc daa les mov mov adc pop mov mov mov mov mov adc dec pop cmp adc dec loopne mov mov xchg orl push and int3 adcb or or sub inc cmp outsb jl xor mov mov mov pushf and mov aas mov rcrb arpl xchg sbb sbb mov sahf mov mov orb mov loopne,pt cmp xchg loopne,pt sbb pop jl mov mov push mov mov mov pop in mov add mov xor sahf xor les fmull insb and insb pop or dec mov mov lea cmp or daa (bad) jbe cmpsb pop jns mov mov ja add xorb xor xor mov mov xor add scas jo push (bad) dec sbb js divl mov jl pop xor dec inc add cli mov adc incl ja nopl push jb negl xor sub es pusha int3 jge ljmp cld or jge incb dec or out ret cmc xchg xchg sbb jo icebp jo sbb js xor xchg movsl das ja (bad) pusha add xchg sahf xor out nop orl rolb insb pushl inc adc and xor arpl divl (bad) in or push inc inc pop push ljmp aas push ljmp add sbb cli hlt lock data16 pop push sub (bad) xor xor in adc mov add test push and adc ret jne lods aas mov push jl lea mov add mov mov test dec ret mov in cld jae push mov mov sub (bad) mov mov shld ret add enter adc inc lahf cmp xor aad push pop aaa sbb es loope xor lahf jae and imul int3 ret push jl mov inc and loopne sub add inc and pop or xor pop jl ss sub mov and and push and sbb faddl daa xor add sahf xor mov mov mov push jg shrd push out mov outsb les rcrl ljmp sbb and adc mov fstps or icebp mov and mov aas mov jbe or mov lock cmp mov and int3 push and out adc mov xchg movsl je js pop out mov inc js push and jnp (bad) (bad) lock and dec divb cmp cmp sahf cmp aas push test loope push aas pop lret and add dec loopne lcall add and lahf push mov and call pop mov jmp lds mov push sub negl sub dec lret jmp push xor push add xorb cmp pop sbb sbb call xchg pop shrd push cmp aas lret xor cmp dec cmp ljmp cmp mov sub mov and scas inc lret adc jne andb inc aam pop inc inc dec add and stos pushf mov cmpsb xchg push mov popa dec repz pop and dec cmpsb add call testl mov pushf call xlat std mov shld dec add inc and add jb cmp push out xchg cmp inc lcall mov shrd shrd or push fmuls inc pop and loopne cmp pop stc test cmp xchg mov mov cs fwait outsl or sbb shrd or mov roll sbb push xor push (bad) (bad) out push mov jg ds lods fadds xlat adc dec pop sub add sub xor sub sbb lock test xor mov xor (bad) xor mov add shld shld add gs or sarb mov xor jno popf xchg cmp inc and mov shld mov aad push fimull jmp push sahf mov test mov in sbb add loopne inc sbb mov adc loopne and mov pop cmp jmp shrl test movsb out or adc and (bad) jne fmull roll mov push xor or paddsb dec xor sahf mov cli daa inc xchg lahf nop ljmp pusha adc jb mov inc loopne push inc pmaxsw fild jl or (bad) not and mov mov xchg pop and js int or jle inc xor iret cmpsb xchg std and inc pushl divl (bad) and xor rolb push jo pop cmpl inc dec divl sub mov lret or cmpb addb loop into je aam aas fidivr fimul fstl out mov xor icebp inc das (bad) jb mov idiv aas or rorl not and mov mov mov xor aas jb xchg xlat xor shrb aam and not xor mov and jle push adc mov and mov outsb sub pop adc shlb rclb incl (bad) mov not xor decl and xchg js jg rorl adc jge adc scas (bad) pop (bad) not pushf push and mov mov icebp fisttp push and xor mov mov inc xor rcrb xor mov add or and and idivl mov jns cmp pop xor pusha xor jp mov mov pop cld inc and add aad ficoml loope push out sub not xor divl je pusha and les mov pop (bad) cmpsb fs sub cmp push cs lahf cmp into mov pop mov inc clc mov xchg inc xor lahf jle insl sbb or insl dec out sbb test movsb ret out push cld mov mov xor testl inc test loopne ljmp call cmp push jb,pn xor std adc dec mov sub mov aad clc and lret sbb (bad) xor push cwtl mov xchg pop mov fwait test fisub outsl add and xor sbb or push pusha mov lods sbb pop not not sub xchg dec sti xor xchg and sbb mov xor not push pop rorl mov and cmp andb inc and mov mov and inc mov adc xlat sbb adc mov adc ret pop pop divl roll mov inc cmp inc pop mov push (bad) jo and or push (bad) dec arpl aad sub lds jecxz or js fisubrl mov sbb push popa bound sub sti shr cmp std mov mov and rolb and push cmovne popa cmp cmp inc ret cmpsb ja int (bad) xor and and sbb cmp push scas and xor cltd push jmp inc fnstsw popl sub xchg xor push jp or loop lods mov push xlat fstl inc mov inc dec dec inc arpl hlt jmp adc and xor clc push xor xchg and xlat add fs sbb pop add push mov aad decl gs add ret es mov xor xor cmp fcompl mov jne inc dec daa (bad) or rcr add repnz inc sbb jle mov scas and add mov mov sti adc inc outsb push push push mov cmp cmp jle mov add andl xchg jge pop push or inc xor jo decb mov mov (bad) je xor push mov lods adc and mov in xor loope out push cmp int (bad) sti (bad) xchg pop adc outsb cmp xchg mov mov mov cmp xor and mov pushf shll mov std ljmp sbb dec inc mov push xchg ret push mov test xchg sti push add push pop mov insb mov add mov or mov cmp or push and inc dec lahf sbb sub add inc jb dec inc sbb jle mov mov je scas imul xchg jo sub push jg inc adc jg decl sbb add adc rorb pop test lea sbb dec enter shll pushf popa cwtl push mov cmp jg mov stos jg or (bad) lea in test loopne or dec add or mov (bad) and cmp xlat ror in shr test adc iret add adc cli push popl or or or or or mov xchg or or or mov leave or pusha cmpsl dec or or mov add jp mov xor or inc rorl or push mov in test dec add or push rorl or or or or cmp add jnp jnp mov xor add add or mov loopne or add or add or or or pop add or loop adc (bad) lcall and add add je fild adc movq movdqu cmp pxor test mov xchg jbe sbb mov das push or sbb fisttpll stos mov sti add bound pop lods cltd addl cltd in test mov cmp jne enter xor cmp xor dec sub dec xor sub test popa je push adc aas sub int mov sub sti pop push bound lods and das popa into lcall data16 scas cmp sub sub out sbb stos inc ja in mov test cmp sub pushf sub out fwait push sti or xchg adc sub aad xchg adc sti or mov inc mov lods out lods out inc (bad) dec adc mov es cwtl jae mov adc cmp and adc cmp je jl inc icebp ret shufps (bad) cli xor add xchg push sbb jno loopne sar mov jne ret test je add ret inc lahf aaa sbb clc push add and roll cltd daa push xchg cmp ja daa inc fadds inc sub push loope test mov jnp dec in mov pop out inc cmp and pop enter (bad) push inc ja adc xchg jb push daa mov fiadd jbe aaa test outsl fs popa jb mov push fmul sbb nop xor cmpsl mov aaa or adc test mov divl out jbe jbe inc pushf stos jo mov jnp adcb sti in stos clc push mov (bad) out cmc mov imul or push cmp dec and cmpb xchg inc outsb cmp push mov aaa cli push mov pushf and sbbb jae or movsb sti xor add ret pop mov ja scas xchg sbb sbb cmp add rcrb jbe jbe rcl faddl push in mov scas cmpsl jp add (bad) popa xchg xor dec popa inc push inc jl xor loopne mov cltd cmp sub jae sarb outsl add cmpb adc adc call out mov xor add pushf push mov dec les popf sbb (bad) cmp aad cmp sbb xchg xor sbb xor jnp inc mov xorl (bad) je add jp mov inc xor roll push mov fmull push (bad) mov xor gs ja adc xchg aam ss mov xor xor push inc enter push ja gs push rorb ret pop mov xchg lahf or negl xor push inc jp dec and lock test loope,pt pop mov pop dec xor (bad) or jno pop mov xor add (bad) setnp adc ret adc push sbb ds js dec les lret push loopne add xchg xor jmp rcrb les in xor push mov or pop jmp push cmp lret aas inc aas push xor and pushf sbb and je xchg and push sbb lock adc enter adc pop icebp (bad) mov add sbb shld mov addr16 jg dec inc adc call adc sbb js mov mov loopne inc (bad) jo or iret xor decb sub pop dec pop xor aas sbb cmp arpl inc frstor add jno mov pop arpl orl fild aaa lds push jmp xchg xor pop xchg pusha pusha add mov inc fdivrl mov shrd shrd sub sbb sbb pop xchg inc xchg add lock and les add mov pcmpeqb fbstp add (bad) rclb mov cmpl (bad) jae loop pop (bad) mull fildl mov mov mov add (bad) clc xchg popf or mov sti or and jl xchg or hlt or xchg jnp and jbe mov arpl dec xor iret roll adc xchg mov jo stos xchg movsl sbb mov mov cmp dec loope adc hlt aam (bad) jne push mov nop rolb add test clc loopne test call or or call push add mov add and pop mov das mov push or ficoml jnp and sbbl mov xchg icebp fadd sbb xchg inc or movsl fwait dec push dec loope out fstp rolb aam cld loope cmp mov fdivr dec xor jl iret cmp push or or xor lcall pop inc cmp cltd (bad) fchs cmp pop add out loope into xchg dec mov (bad) xor std adcl mov pop data16 mov adc ss or jb push sbb or aaa inc cmpsl fsts shrd push pop cmp push sbb icebp pushf ret cmp mov xchg inc sub add push negl out cltd mov movsb ret sbb mov shrb loopne dec push sub jnp cmp push dec shlb inc lds jnp dec out sub stc dec insb sub add mov add inc push cmp mov in add fnstenv cmp add movsb movb push cmp inc hlt push cmp or (bad) adc sbb ret es sahf xor push push jmp out out push lods repz lods (bad) or cmp push roll add test xor xor and add sbb push (bad) int3 sbb push push xor cmpsb enter adc ret mov push mov jns into add fmul xchg mov mov popa es pushf daa fadd add cs sbb mov into out sti dec push mov and js pop and mov mov xor test loope test dec pop sahf jae out cmp dec inc mov jo jo repz repz cmp out add add cmp add sbb lock fdivr aaa dec je push decb shld call adc in ja das fdivrl jl inc push mov cmp clc pusha dec fs dec cwtl data16 fs or outsl mov push int das push into push mov pop add fwait mov and pop dec adc fucom (bad) mov inc push push in mov inc cmpsb dec loopne faddl xor scas enter inc and push cmpl lcall shld adc movsb (bad) xchg out cld push (bad) mov push ja es add xor icebp sbb mov shld jecxz ss jge jnp arpl mov adc cli or sbb ja and not and xor mov push mov addr16 mov cmp sub addl iret cmc lret pop dec js mov and and sbb rcrb mov push (bad) and mov mov xor aad icebp fsubs fwait shll mov mov arpl jmp or xor out nop jecxz and imul sub inc cmp adc ficom and sbb adc dec sarl lods sahf leave popf cmp dec xchg push cmp hlt neg sbb xor testl inc int call outsb lret fstpl or pop sub sub sbb dec xchg shll imul mov ret cmp rorl outsl push icebp mov gs dec and sbb and adc lock out aas testl jg dec xlat pushf jns shlb fild mov mov inc lods loope cmp imul out movsb iret aad mov inc or sbb add jno scas dec and imull fadd inc fsub add ret cmp jecxz test inc mov cmp jmp arpl or movsb xor lcall xor repnz cmpsb andb push rcrl and iret lds mov jo (bad) aam js inc sbbl popf and cwtl or ss sbb inc cmp loope (bad) mov adc mov mov dec icebp fmull negl inc dec inc dec mov insb ret sti adc not inc addr16 call sbb mov xchg mov fild and insl sub dec dec mull xor and xchg pop imul ljmp push loop mov loope xchg int3 sbb xor jo mov (bad) iret sbb cwtl mov notl stos xchg cmp fiaddl testl fdivs movsl xor inc push ret scas jle and cld dec lret inc in nop mov inc xchg (bad) lock push loopne popf jo inc bound pop push pop test add test jno mull mov (bad) fsubrs mov icebp (bad) cltd fimul testl gs pop call lods mov js cmp push js add iret je insb icebp test popf lods jb xor jp test mov pop outsl mov subb jg orb push or shll clc mov sub add add lret push inc adc sub sbb test loopne mov out dec mov xchg and lret sbb xor sub push adcb lea cmc mov sub push or add das add inc fstl mov xor mov mov and mov jae dec push xor pop jge out icebp push mov add js push add push cwtl ret (bad) hlt add add add mov dec mov out jmp sub add cmp pop jne add and orl xor inc cwtl xor add mov or push daa or (bad) (bad) (bad) cmpsb mov call mov sbb jo movb add sub mov ljmp sub call orb mov adc movdqa adc lock add popf test cmp inc add or sbb mov test cmp dec add or jl adc test jae stc add mov inc push sbb xor test or out loopne stc add pusha test add mov cmp and inc mov loop inc cmp and sbb push sub adc mov mov pushf and cmp mov ja stc or fiaddl movsb loope movsb and mov mov stc or lods ret mov sbbl wrmsr test (bad) cmp push mov out pop int3 push sub je sbb xchg mov lock adc loopne cmp je mov mov mov mov mov lods call jle push sbb mov es add hlt xchg (bad) xor push xchg jecxz jmp inc and es and add add adc dec out mov (bad) ljmp cmpsb add pop xor mov dec inc scas icebp cmc add mov das sub xor (bad) (bad) jg mov xor xor pop and push adc or pop adc push (bad) (bad) mov push and repnz add xor adc jo repnz std (bad) decl dec add push xor mov loop and or movzbl mov in test sbb out movzbl mov sbb mov add or mov adc mov mov fwait add sbb out add shr xor out jg cmp out adc je adc (bad) or xorl call xor (bad) pop adc or jmp shl (bad) or sti (bad) fld in adc out xor sub aaa push sbb out shr add mov or xor mov fistpll jmp shr or cltd or xor xor mov mov mul (bad) jmp jmp imul fldenv rorl mov aas add lahf sti ja mov mov mov sarb mov (bad) decl shl or mov or xor xor mov mov pop adc sti xorl or fstpt mov loope mov and (bad) jne hlt jecxz pusha push jns sub xlat sbb cmp add das or roll add adc ret xchg xchg insb and and mov out dec or cmp shr or xlat (bad) mov jne add je loopne pop add std lret in or cmp ljmp lock and ds movd mov mov jno daa outsl pop into mov fdivl out icebp jno mov imul jne jae mov (bad) lock dec or and sarb leave sub or or sub xor jb adc push outsb adc add push (bad) jb adc mov lret and xor xchg test cmp lret jb sbb push inc in cmpsb and add in jns (bad) xor jle mov xor jl and dec sub js (bad) and in mov xor jno mov cli aam lods lret hlt xor sbb ret jge jbe push cmp in inc and aas test in mov shl xchg pop pop scas scas in mov das and and ret inc sbb dec push sub jbe add mov jns test lods pop cmp pushf and or popa push imul ds lock jmp and pop or jb push lods and in inc fildl pop inc or (bad) xor cld jle mov xlat xor sub lret xor add pop add or outsb fisubl mov or pop or jo insb and xor sbb adc or add aaa cmp adc lds sbb inc or ss cmp (bad) cmp and jo dec and and jo fadd dec pop in cmp cs mov aas lret daa repz ret leave push sub dec sub or xor fildll (bad) popa sub add (bad) xchg test fsub es scas das adc mov mov xchg lods stos adc adc and or insl js cmp cmp leave sbb jecxz das loope sbb cmp sarl xchg adc movsb jo dec xor xchg je add jb inc bound rol inc and jl fistpll imul mov cmp add iret mov mov into pop push and add push add or mov cmp fsts (bad) xor std jge fucomp cmpsl jno (bad) mov or xor add mov mov jg call clc jmp or add or xor xor dec inc lcall popf xor xchg mov mov shr or shl mov into xor sub les fild (bad) inc xlat stos loopne sbb out or fisttpll xor xor mov xor jnp (bad) jne out push shll notl div (bad) jmp lret xor mov xor xor or xor iret xor mov xor sub icebp ss pushl adc notl notl notl xor inc ljmp add notl cs adc add xor mov adc clc pop or inc sbb out adc adc push and pop loopne xchg jecxz xor aaa cmp int cmpsb or xchg and pop cs scas and xor cwtl fs push fsubs sub inc repz pop and scas gs adc fs pop add xchg mov fs mov jmp subl jle mov adc push mov sahf insl and pusha cmp inc mov inc pop push push jo or pop add adc jle outsl dec add sbb lods adc (bad) adcl jb sub dec sbb sbb mov adc fdivrl add xchg roll sahf and jb jmp in imulb in push or mov mov xor cwtl adc mov dec inc insb cmp cmp aaa pusha negl test and ss push inc outsb (bad) jo popa xor rcrl xor sbb add mov enter ds test test sbb mov push mov lods or inc test jns inc cmp pop mov mov mov pop pop sub xchg in pusha int3 jo mul jp popa rorl test dec ret jecxz push insl xor in enter pushl mov das gs or test sbb fsubp call loopne mov add jo add dec push daa inc pusha add shr dec adc adc gs adc adc mov adc xchg xchg mov push add sbb pop nop adc pusha xor (bad) pop popa in repz adcl and ror jno test inc nop pop pop mov cwtl dec shl or and and js lods popa xchg mov or (bad) adc orl or cltd lcall pusha dec divb adc or xchg or inc std decl cmp jle push sub and les cli aas js ret mov lea (bad) mov add idivl mov add sub push cmc decl adc inc and mov and sbb push sbb inc and mov mov or cs mov mov sbb and or or jnp mov mov mov imul mov movd xor pop jl xor dec and inc and punpckldq movdqu pop (bad) pop aaa mov (bad) rcrl and push data16 out ret sbb rclb push push ret repz movaps pop jne fstp and sub add int3 inc outsb jae mov insl (bad) add scas lret outsb inc and pop int add idiv in cmp test adc test push (bad) (bad) sub (bad) loop adc popf cmp xchg and xlat je adc fs outsb insb add insb movsl daa jbe,pn mov mov shll out (bad) cmp cld movaps call jg jno push mov call pop adc in mov call mov add add pop mull sahf push pop add jmp fcompl add jae repnz pop push call iret mov call out es or mov cmp jno lea xor call ljmp mov jp add dec ss push jnp pop add aaa das pusha mov push loope call mov jae pop pop das push pop fwait jl imul in pop pop xlat das ret jle add pop mov sub imul cmpl mov scas pop sarb and xor xor icebp dec xor mov ss adc cmp je inc or dec or push sbb gs push xor xchg (bad) stos lods xor push loope aam dec or aas imul and dec test mov xor arpl mov addr16 aaa adc xor xor add push pop mov mul dec test xchg add push out dec and mov cmp push or jne aas insb popf jo ljmp pop xor xor xor add jmp xor sbb cld scas andl mov and push mov mov push and dec cmc xor xor ljmp cmp inc inc add cmp add sbb cmc incl add and jne add psubb addl movups mov xlat iret std mull adc or test push mov add xor (bad) xor iret dec or stos mov xlat xor out fild add out add add fmull dec or inc shrl ret sbb pushf cli cmp inc push aas test cmp psrlw roll jle mov addl lea pop lods sbb mov andps lea sub fcomip ja cwtl mov and je or roll mov mov insb or rcr xchg repnz inc loop cmpsb sub sub shl and add fdivr sub shl xor cmp aas adc pop dec add pop xchg aam test jo incb addl add lret adc jle mov sbb jmp adc push mov test sbb adc (bad) and shr mov (bad) jne sbb jne aaa add mov or pusha or sbb jo pop ret ret cwtl mov xor rcrb pushf mov adc jmp pusha mov xor and ret jge and jle pop scas ljmp pushf sub pop and orl inc outsl xor js sbb adc dec test ja into add inc push inc jge inc inc orl add pop xor adc cmp pop call (bad) mov xor jbe mov xor in out xchg incl call sub out adc add (bad) or and popl adc or and call xor jecxz pop sbb push sbb ret adc outsl dec mov ret mov adc push sbb or pop ss jo movd movsl xor push add roll xor cmp push jg sub mov mov lea xchg and es push loopne test jne add out cwtl hlt orb mov sbb clc aas pavgb inc (bad) (bad) cmpsb aas mov daa sub inc inc add cli xor and je addl adc xor cli add cli add sbb test inc lcall movb add push cmp jae iret repz movb add add push pop push or clc jb (bad) inc movsb mov xchg jle aam loopne dec inc or dec neg cld add (bad) mov lea pop add cmp cmovle add mov fisttpll and adc jge push (bad) (bad) adc inc lret adc ret sarl rorl xchg ficom cwtl test je lea aas mov add test (bad) incb lea movb add jmp fadds add dec add fldcw bound incb xchg std cs lea daa push push incb lea daa call cmp or xchg jae jb pushl cmp lea and decb or decb inc adc push or jg cmp lea test dec push ret and stos or sbb icebp lea lea mov add les push jbe (bad) jg adc je cmp movaps je mov xor add je mov mov neg outsl je repz adc dec outsl cmp jo jo sbb push push pusha pop dec xchg jp adc cs test (bad) aaa push cs jae or (bad) jne add sub pop mov adc sub sub push lea incl jne jmp mov jmp push out sahf push jne movb xlat cld adc mov add or jmp inc bound mov loopne sbb or mov rcll loopne jo add icebp mov or and data16 scas ljmp fcomi or aam cmp push neg in mov (bad) sbb or frstpm(287 or or aad mov mov pop mov push jge cld mov loope adc divl sarl frstor sbb adc fnop or xlat xchg jmp addr16 sbb inc fsubs fnsave aad out mov punpckhbw jmp scas mov (bad) sub clflush sbb punpcklbw leave jne dec (bad) out leave inc in and mov xor fisubl popa das popa fbstp xor punpckhwd sbb divl mov pslld dec sub sbb lret sbbl jne (bad) lahf sbb mov xor int cmpsl fstpt dec (bad) (bad) or lret movsb pop jnp add pop mov loopne repnz xchg popa pop imul adc cmp jb (bad) ja fcomps lods and push dec outsl fldl aam cmp (bad) dec cmp rcll gs ss gs icebp sbb in test cld outsb js cmc mov add aas push into mov nop inc sbb inc adc xchg mov out add fild xor out es clc daa push mov mov stos ret in bound dec popa faddl (bad) jg adc and cmp shr push inc sub les pop sbb push into inc adc add imulb mov adc pop iret add mov mov data16 mov movsl sub (bad) (bad) lcall pop mov mov mov mov xor cmp and or xor xor mov pop sbb mov fwait (bad) mov mov shrb out jmp repnz dec mov lahf pushf adc ljmp mov mov pop mov xchg rorl mov mov xchg xchg insb or jle sbb and inc subps sarb mov jne pusha mov lods sahf fnsave std fstl leave xor push sbb inc mov jo je jnp pop je pop js pop sbb les sbb or ljmp sub lcall add popf notl call pop inc icebp pop dec push out mov mov and pop cmp sub push xor fnstcw sbb pop push mov gs mov mov movzbl (bad) mov icebp mov pusha push sbb adc adc push (bad) mov pushf push sbb or inc cmc (bad) movzbl sub mov sti fdivr mov cs pop neg pop jl hlt mov pop and xor mull je dec and xor pop and pop and (bad) jne je decb and and cmc pop and and sub pusha and xchg sub sub dec pop and push sub mov sub mov mov dec lea xchg test lea xor test jae sub pushl rol adc lret mov mov cltd mov std repnz add (bad) fiaddl cmp xchg jmp stc std mov out les std ror add repnz ret (bad) xor rol lret cmp xchg nop test sti call (bad) xor rol add xor orl mov xorl je jl pop xchg enter inc cltd push cwtl lods aad fsubrp lahf fistpl xor sahf ja jl xor mov jnp flds movb dec call js icebp xor rol cli xchg add enter bound (bad) xor stc cmp in outsb (bad) inc out lret in xchg pushf jno mov jl test pop inc lahf jmp js mov mov mov or jo test (bad) xorb sub and icebp data16 dec jnp (bad) lock xor jbe xchg push iret addr16 outsb js push insb xor sbb fildl add insb idivl add mov jnp addps lea xor mov neg addr16 aam subl test or mov mov pop sub repnz clc add daa pusha jbe mov xor cli add fmull xor ds fist ja adc pop sub mov popa mov mov add ret xor adc mov pop mov mov pushf jno clc lea lock lock ror add dec loope xchg pop xor fistp xchg clc xor pop pop mov push and xor pop rorl push mov lds adc gs out clc or (bad) xor inc lea cmp cmpsl imul push data16 sbb or std cmp jne mov (bad) sti iret adc (bad) movd into jae movsb or and or sub stos jb pusha or notl fimul ljmp xlat add adc or mov rorl inc pop mov out js imul inc mov movd pop jle jg sbb aaa cmp das mov mov xor outsl sub add lds inc das sbb out dec insb (bad) xor jns loopne mov in inc xor jle test jne xor dec sbb inc or pop adc test (bad) pop push mov sbb adc adc push jo add xor xor sbb jg adc xor popf xor xor cmp dec push mov or (bad) pop cld xor xor xor inc push or jo fwait loop ja or pop add js adc js add fs xor sub mov movsb dec imul pushf bound scas add je mov add inc lea add movl lds bound fstpl adc dec adc adc pop add pop push mov cmp rolb add or call cmp add out mov mov test fwait loopne mov test mov je shrd mov sbbb out jb fs lea adc add aaa push dec sub add sbb call mov mov repz add cli add insb stos loopne adc or sub sbb hlt out stos push sbb cmp or xchg inc push (bad) loopne cld xor mov aam adcl jnp sar mov and pop (bad) sub and lds (bad) repnz jmp decb (bad) cmp decl lret cmc push sbb jns (bad) (bad) and mov repz lds and mov lcall push add mov or jne movl (bad) dec into sbb sub lods lock mov sub clc add (bad) push add add mov mov lcall add cld lea fdivr fistp in sub add sub and xor sub lcall dec lcall shr and mov mov mov test je cmp je cmp je (bad) (bad) incl stc add stc add sub cmp je mov mov decl add rolb add cmpl lock aas mov cmp add dec add add cwtl cmpsb jmp unpcklps ret (bad) out ss sbb sbb shlb lock jmp test je or add mov mov jne push (bad) outsb or lea mov dec adc add mov fiaddl pop scas pushf daa fwait stos in xchg lock scas inc (bad) jg adc pop fmuls cmp std out (bad) call xor mov mov add setb mov pop das cmp sbb mov adc ljmp or xor mov cmp and or mov pop sub adc add sub add cmp sti mov add test je mov mov inc inc and and add enter mov popa inc jp stc add cmpl cld mov dec and call xor cmp std pop or mov sar xchg es adc ljmp iret add cmp jbe mov out incl adc add lea jmp nop push (bad) (bad) fadds jns cld mov lea scas or incl add sub and cmp push cmp cli lea mov shr mov and mov inc rclb je cmp je push (bad) (bad) incl cmp je cmp je cmp je cmp adc ffreep fdivs insl mov pop mov add mov (bad) fldcw insb jae xor je lcall or adc cmpsb imul (bad) push cmpsb sbb add inc jb mov mov shr mov mov (bad) (bad) (bad) inc ljmp mov mov mov movzbl mov movzwl mov mov (bad) (bad) incl insl push mov mov movzbl mov movzwl mov mov mov mov (bad) (bad) decl mov movzbl mov movzwl mov mov mov mov mov jne outsl fimul mov adc adc jno aaa lock fimul mov push mov mov mov jmp fldl dec sbb push sbb sbb out sbb mov push mov mov mov mov mov add movl add lds js push sub ja ret loope push jl or incb decl or idiv incl cmp inc pop in sbb sbb add scas sub aas (bad) ja int3 es push std lods jbe lea and push and or mov das mov adc pushf add cmpb adc leave sub add fstl sbb mov adc fistp or jne out jmp mov mov jae pop dec push imul adc call and sbb mov adc xorl push mov mov mov test mov (bad) out loopne test int mov pop cld jl (bad) jmp jp pushl rolb add inc and addl and sbb push jb out dec or push sub enter push and jno cmc cs pop (bad) loope and mov pop push testl sub mov push jo dec adc cltd and sbb add mov sbb jmp dec (bad) jb add pop scas push out and pusha push and arpl jb popa cmp dec sbb enter sbb sbb pop and es movsb sub cmp adc xchg dec sbb and inc adc sub adcl add out lahf nop inc pop outsb lahf es sbb les and adc cli and ficoml jnp dec xchg or adc dec adc adc mov or (bad) negb shld or cmp add xor icebp pop jo sub jp sbb and sub and roll ja cmp les add je and in and mov mov sub lock add fcompl sub fsub sbb jnp pop adc add and inc adc call call or je addl aaa adc jg adc lcall cmp dec and testb add and cmp add dec jne mov or jne cmpl inc je or pop push mov fidiv add push and mov mov mov sar stos cmp fs mov mov scas sti xchg mov shr in and mov and ficomp and and add lret cmp sbb test add add sub and and jae out mov loope add push shr inc scas add fnstcw cld aas popf and sbb jo sub sub repz rcl adc (bad) imul dec cld xchg mov mov sub jg out sub scas add push mov sbb incl mov mov mov sbb pop xor push or (bad) bnd or dec adc incl mov mov pop decl jnp adc push adc push sbb sbb pusha jg in sbb pop mov mov inc shll push loopne cwtl add lea mov push adc pusha je jp add (bad) lea movsb shrd cmp jae mov leave jae adc lock mov test adc lock xlat cmp mov add setb movzbl add jmp mov jecxz lods adc call cmp js loopne adc jmp movsl (bad) cmp subl inc call push cmp mov mov subl lea mov inc out add jae test (bad) (bad) mov je cmp je cmp je cmp je cmp je andl je mov (bad) stos jbe adc add aas sub out jge mov fnstcw in pop mov jae bound or mov and or and lret jb test adc inc mov sbb adc sbb orl mov cld adc lea add inc jg (bad) decl mov or (bad) (bad) jmp movzwl icebp mov mov je pop cmp dec and mov rol icebp mov adc imul and add inc xchg dec lods inc loopne (bad) lahf scas mov jae ret jg mov out adc dec and sub add mov add jo push fucom aas daa mov stos xor mov xor sarb or jecxz mov inc sbb pop or dec mov adc cmpl fstpl int ja or ja (bad) addl jb xchg add push adc stos mov push jmp pop jle,pn xor mov dec mov out and (bad) (bad) push std sbb notl or sbb jg fstpl cmp adc daa and iret and xlat je aas loope lcall pop pop les clc and movaps or add cli mov cmc xchg or mov adc xor sub and xchg pop push push or push fild and lods aam out or test add je or sbbl cmp jmp nop (bad) fisttpl (bad) lret and ljmp jecxz rsqrtps aam pop push (bad) ja jo jne xor loopne,pn add rol xchg loope jmp or les insb aad push push lret jge pop (bad) or (bad) jbe add pop or push out lcall faddl xchg or pop scas or xchg or adc test or adc movups sbb out adc mov inc mov pop or jae (bad) or in adc loop std or in adc adc sbb push mov jg or pop add adc cmp sub incl ja cmp jbe dec and (bad) daa gs movdqu shrd clc clc (bad) cmp mov mov xor or mov (bad) and incl js rolb or lock outsb cmp jmp mov ret test adc xor mov add ret lods push sub (bad) setne in movaps adc jne push dec mov cmp sub std inc cmp pop aam and and mov xor xor or je (bad) pushl aad push icebp lea movzbl mov xor add mov adc cmp push dec and xor std call ja cmp ja (bad) adc and mov or sbb call out fsubr jge lds or (bad) fwait lods sub dec iret push pop loope push add push and and orl mov push mov lret test jne pop cmp mov mov adc icebp divl jl movups sub sahf jnp sbb fsubs fmuls arpl arpl xor arpl arpl arpl (bad) mov lods or fmuls ret or test add mov test cli arpl loope sbb xsaveopt sbb lahf xchg mov es xchg shr mov mov mov dec les gs cmp jg int3 je xor or cmp in inc notl adc aaa sbb cmc movaps push je sbb popa or arpl mov jle pop iret movaps call pushf push xor fisubrl fxch sbb (bad) roll test rcr inc or cmp ja jecxz or gs popf inc and pop std mov mov mov add popf add push add adc fld mov cmp xchg pushf add (bad) add jbe (bad) or sbb mov add ss jbe aad je fcomi mov add sbb jmp push mov adc pop mov and mov call ja xchg pop jbe notb popa adc sbb xchg push cwtl mov xor or pop cmpsb xor xchg xchg cmp jae adc stc cmp cmp or push lock leave jae ss test repz xor loope popa cmp xchg cwtl jb jbe or xchg jmp arpl rorl roll cmp jb aaa adc sbb cmp jbe push mov or wrmsr push xor pop cmp ljmp rcr (bad) decl lds and (bad) decl sub jb jbe push or adc add jae les xchg adc adc ss mov adc js dec ss popa es push scas das xchg insb sbbl cwtl or stos orb sbbb cmp addl or clc fistpll or xor rorb or add inc jbe out adc sub and jmp (bad) pop addr16 nop nop inc adc rolb andb adc and add iret mov movsb sbb (bad) es shrl adc (bad) mov push mov pop jmp stos jb xchg push icebp iret push inc jp sar (bad) jmp fcmovu cmp hlt sub jge push jmp mov das std (bad) call xor pusha (bad) and mov das pop sbb xchg nop xor xor jmp or bswap imulb inc ja dec notb jmp mov shrd (bad) loop and xor cmp mov jae sti xor test jne xchg out add sti pop mov shrl or mov sbbb enter jbe pop mov movsb and fisub and inc das idivb movzbl mov jmp outsl push lock (bad) movzwl mov pop xchg jge dec pop lcall das sub fistpll ret loopne fcos and decl and cmp jae lock push and incb pusha (bad) xor (bad) incb out orl add fwait sub add mov mov mov or mov test cmp jae arpl or jnp jmp pop addr16 adc jmp inc movups cmp pop adc adc adc xor inc and (bad) jb lea cmp add jmp ds enter bound xor mov dec cmpl loop inc cmc ja inc lea mov lret in push xchg dec or push add pop and cmpsb (bad) jo pop je nop sbbl mov js gs adc jl jge adc aam pop adc out mov sub in push mov pop or dec add or push mov pop or lret sarl adc aas add cli dec and and jo inc rorl push inc add rcl pop dec ljmp cmp or std insb in and inc add xchg mov in daa pusha and movsb jbe mov sub push ret (bad) dec add es pop and add push cltd cmp es jae adc movsb dec inc and es or mov and fcom sbb cmp movsb dec mov jg inc pusha cmp test add mov call aas shlb mov sbb push jo xor sbb je and sub je mov inc inc and cmp adc out push xor or adc jp adc sahf pop or or push shll or rcrl or push or jnp dec or mov or test xchg call mov jge xchg jo adc ret sahf and rorb inc and jne cmp sbb ret and jb xchg xor adc jb lcall out jl loopne (bad) xor dec arpl push dec aam fsubs adc or loopne dec pushf das xor je out enter dec shld add add cmp addr16 jb pop xchg and add sbb add ss inc addb fs ss ss fisttp adc ss add inc shll pop enter add sbb jb inc addb fadds cmp inc addb add cmp cmp orb jo jb jb orb sbb cmpl or sbb ret add lea nop test cwtl xor fs negb and jb xor cmpsb mov pop dec jb insl loop dec inc loop xor jo adc add or jb add jp lret fnstenv add and cmp ja xor xlat pop xchg adc inc fs shlb sbb or inc and sahf rorb dec (bad) aas sub xchg push dec dec cmp test cmp inc jne xchg ss pop inc sbb addb xchg lahf cmp pusha (bad) sbb inc adcb lahf cltd sub pusha cmp add and cmp lahf xor ss mov add popa out fisttpll jns push jae ss xor inc adcb cmp cmp pusha cmp xor xchg jl mov dec cmp mov cmp and fcomps sbb or insl lret ficomp jbe dec sbb push jb cmovo or lahf fstl je lods pxor inc sub mov insl xor or jg stos inc mov rorl pop inc pop outsb jo push hlt dec nop lahf xor or pop jbe mov cmp sbb dec (bad) mov dec mov cmpl and sbb mov fisub (bad) cmpsb xchg xor and inc test inc shrd (bad) outsb inc test movsb (bad) jecxz (bad) ja jo or inc lea ljmp int3 (bad) decl mov es add jmp cmp xchg (bad) sti push and in push and jmp pop jne fsin lret lock icebp inc lds (bad) aas cmp cmc (bad) (bad) jmp test test push xor pmullw cwtl dec nopl cmc push xchg das aas add sbb mov movsl das lahf out mov mov adc mov mov dec es mov cmp jbe lods jmp sub mov outsl sub add sbbl int3 push adc scas (bad) lods xor insl xor adc das fnstsw cmp push pop jmp loopne ljmp test ret add mov testb jmp push or pcmpeqw add sbb comiss add out jnp mov xor adc out lods mov cmp cltd and out adc pusha adc out sbb adc pusha out sbb or leave out pop out in and out push and (bad) ljmp or push push mov stos in (bad) jmp xchg mov or fwait adc push fs scas pop jb adc mov mov gs ss xchg push lcall rclb jb stos dec or cmp ds (bad) cmp cmp dec push (bad) cmp mov or rcll cmc (bad) cmpsb add dec and sbb sub out push add rcrl lea inc mov (bad) mov add lea sub call ljmp in mov mov shr in pusha decl mov sbb inc mov mov inc dec dec mov aaa xorl dec dec dec mov nop xchg adc or dec repnz mov push push push jbe dec ficom inc sbb test pop mov sub inc sbb push fstpl mov pop add inc and xor pop mov sub aas pushf mov mov dec je mov push sub add cmp jbe and mov cmp xor mov jmp sub jmp sbb jbe xlat inc and pop sbb mov mov mov cmp call lea and mov push iret sub add sub adc rorl sbb dec push cltd inc and lea mov inc aaa cmc (bad) push jae rorb cmpl lcall xor daa sbb add or mov pusha mov inc pop adc mov adc xorb aas mov lcall add or or cmpsb imul pusha lcall stos ret jb push aas shll mov push xor xor mov ja das sti sti ret cli add mov mov inc cmpsl xchg (bad) cmp cmp lock pop mov mov mov out out lahf dec and jno add ret lret dec mov outsl cmp or sbb movl dec mov sub orb popa pop je icebp scas (bad) scas out or call scas xchg js (bad) mov and pop and inc aam sub and jecxz (bad) fildll sub mov xor inc test or ja rcr and inc mov add mov movzwl mov dec call mov mov movzbl (bad) mov movzwl test dec add jne mov mov mov movzwl mov and or dec or stos mov jno aad add mov pop inc out fmuls jno out stos add inc adc mov mov cld add mov mov ja inc adc addr16 adc aas mov das mov mov mov mov mov dec pop jno or push mov jno out mov sbb sbb or push sbb mov jno fstl orl or jne mov lgs aam and sub push or das rcll test adc clc adc and stos and loope je popf pop cltd jge add btc call ret sub mov je inc mov iret pop es cs xchg sahf out call mov add es lds out icebp clc jmp add cmpsb and loopne xchg (bad) jmp mov pop sub sbb fs fildl or jo rol jne orl add xor mov jmp xchg add orl add scas dec jbe xchg ret leave sub push movhps cmp testl jmp jg adc xor rolb scas xlat sbb xor cmp jae sti idiv idiv (bad) decl mov test mov je add mov jmp inc bound ffreep lock fild mov sbb loope popf dec mov xor and cmp add dec mov pop adc adc les dec inc mov dec mov dec les jnp xchg fist push faddl xor push adc mov inc adc mov test add fistpll es cmp jmp and or sbbl hlt mov xor xor mov ss push mov and dec (bad) adc mov (bad) ja rorb and (bad) cmp mov ja js add xchg ja jl or lea pxor (bad) sub add cmp leave or adc xchg mov add mov pop ret adc lret mov push add sbb or sbb mov daa out (bad) cmp cmp fsubs std or or mov jnp out pusha or or mov jnp mov or data16 or cwtl orl jg fimul je (bad) mov loope sbb scas bound hlt sbb ret incl std jbe pop and mov and test sbb fstpl fimull into xor or mov repnz xor fisttp mov or fs or pushf sub sub hlt mov bound out mov xor sub cmp sub rorl iret adc push clc sbb push shlb jg movl sub fs mov mov xor xor mov test je pop push enter sti into xor dec or push jl inc cli mov adc xchg jb cmp add insl ljmp aaa inc and scas test fs cmp jne stos xor xor clc pop push add out ss add jbe pop jae popa out mov and push add insl cmp jnp fsubl inc push ss insl or adc cwtl mov add sbb add loope lds push and mov xor rclb (bad) test in test jns dec jns pop mov and push xor cmp jge ret sub cmp xor or adc notl cmp xor subl cwtl or jno adcl mov ja add jae,pt fwait mov pop jb cmp jae jbe sbb lcall add movzbl xor or dec sbb and test and cmp test insb and sbb rcll lock jg or sar pop add adc and adc sub add sahf push or icebp mov or pop cltd sbb or and jno adc adc inc or popa or mov push cmp std sbb or fadds push or pop (bad) sbb and andl or or pusha pop (bad) mov ja fadds jne loopne jbe and bound into push cli cmpsb and xor mov pusha and into mov push lret adc xchg ret cs mov cmp imul inc cli gs in lds test sub lds sub mov pop sub jo pushf mov pop adc (bad) or je call and loop (bad) and les loop pop nop sub inc xor es scas sbb cmp mov mov sub cs roll mov mov leave cmpsb xor clc and mov movb icebp ljmp repnz setb mov insl mov push cld lahf (bad) sbb mov mov daa inc jg shr mov ret mov shr shr ljmp push rclb and adc adc add adc fstpt add inc fcompl sub push sub test jno ss fcoml inc and inc cld movsl mov imul int3 je pop lea (bad) loope jle (bad) jo scas xor xor call sti and loopne and pop sub add cmp xor mov pop or lea add mov mov enter std mov mov in sahf test in or xor shr mov and js pushf adc mov cmpsb addb dec stos js,pt in cmp push mov push shr and test adc ret push mov xor push pop mov inc add mov and mov faddl sbb mov xchg dec into (bad) ss (bad) in ss mov mov mov into add add xor add mov mov das or test lret cmp test fldenv sbb out xchg addl push inc or or out icebp popf and ret add jb lock daa push dec cmp mov loop aam push inc int3 call clc loope add mov je sub jl add js mov mov clc dec sti add aam xchg (bad) iret lock rorl and xchg and adc inc pop or sbb add xor push lds test stos inc adc push pop or call jge popa sbb sbb std test sbb mov sub gs dec lea (bad) lret inc scas and add loopne rorl and aaa rclb fimull mov (bad) lock jg jg mov mov mov add and xorl jecxz sub push add mov mov mov cld inc jg and mov mov mov mov sarb cwtl sub or idiv ljmp pop or adc loope addr16 push or sti jg pop adc push mov aas out (bad) dec pop pop push adc mov push cmovae sbb sbb cld cmp ja pop sbb addr16 and sbb pop sbb popa adc adc dec mov (bad) incl mov sti xchg cmc (bad) fdivrs mov and inc sbb imul test push pmaxsw cmpl or pushf mov adc sub pop xorl sti lahf inc ret xchg stc (bad) decl sbbl mov insl xchg cmp insl mov mov roll pop cltd sbb leave xor adc loope inc into or cmp push or andl sub or ds ret sar (bad) incl jns dec ja inc iret xchg xor xorl sub xchg ret mov ret pop sbb xchg adc sets insl out testl and ljmp ja fcompl or mov add hlt push xor jmp pop shlb add cmp call adc inc test shrb fs xorl lea rorl or adcb xor pop xor add adc add les shrl mov add push (bad) aas es mov mov add xor and ss xor rolb andb or and add and (bad) and jge add add inc and lahf lock push rorb das mov mov and sub inc icebp scas fs mov lahf pusha decb inc inc jnp lahf rorb enter je jo adc orb jmp add sarb and jl dec mov xor sub sbb pop sbb inc and add adc add sub pop out adc push or stos inc or scas out test mov or (bad) popf or or sub mov lods or or or stos pusha scas add add mov or stos pusha scas (bad) or or push pop lock inc and dec xor mov das pop jmp (bad) test cli dec sbb sub sub jl or add out int jb sbb loop pop sub jb es aad and lods mov sbb jmp or pop rolb mov pop int3 dec and in push xchg call or pop inc lea jp loopne fimul mov cld sub inc cwtl es jl xlat test out cmp cmpsl icebp (bad) (bad) jmp rep nop (bad) repz nop and push lods (bad) and cmpsl push or inc adc arpl (bad) call mov pusha jae leave ja mov xchg xchg andl aaa das sti mov jmp nop dec push das cltd sub mov es lea stos out (bad) mov push and ja pop xor jo dec xor jmp dec and in or inc dec adc test in lcall ljmp jae mov push jg pop mov xor or pushf adc sarb dec ror lcall pop sbb pop pop or pop outsl xor cmp pop movsb sbb lods aam mov pop or leave cmp push adc add in push or xor jb arpl and or or or jbe or or jbe or or jbe or fs ja or mov cmc mov mov cmp mov jae push xor test jne pop push inc ror pusha fisttpl mov arpl sbb jmp iret cltd sbb mov jae in jmp or data16 outsl mov loop mov adc movzwl mov inc inc test aaa jmp scas jecxz pop fdivp div daa push nop mov jmp cld mov and adc inc out add pop mov (bad) mov jp sub push in push or inc add jnp add lods adc mov and xor mov jge pop jge or daa cmp push mov mov mov adc sti mov adc mov scas jae sub adc cmp and cmp mov incb or mov cmp add pop push das push cmpl adc add (bad) out mov das push inc ja or push or and sub jb,pn das lock inc pop push xchg das adc in adc stos ljmp cs lds loopne push into pop push sbb loopne adc sub lret and (bad) or adc mov lods or adc lods or in movsl or in xchg or in xchg or in xchg or inc inc jg and gs gs pop gs pop pop ds push push and sub dec or adc xchg sbb sbb lods flds mov xor push xchg and inc cld pop pop and movdqu hlt cltd daa add sub and fmull stc (bad) sub and pop stc and sbb sbb and push xchg push in sub inc mov push movsl mov adc cltd call push js sub push (bad) and or and mov fwait jae xchg jl and ss sub pop add add popa outsl ret ss fwait sbb pushf ss fwait or mov addb sub fwait jae dec ss cmp cmp rolb mov and pop cmc and fwait jns callw mov or cmp and add rcrl and leave ss lock fdivs fsts pusha test mov xchg sub adc imul and aad jb push dec lds les xchg cmp popf pushf adc and xorl vpaddsw dec lcall cld mov or and cmp or cmp mov out fmull into push addb add or ret loop orl sbb je add push add or in inc mov pop or push add pop or in inc mov pop or push add adc pop (bad) mov or xchg in dec and pusha sbb or xchg inc sub mov sub loop adc jbe loopne or xor or sub (bad) out daa mov loop cmc and xor mov jmp fisub ret inc jecxz mov push xor call cs mov xchg xor (bad) mov add adc call add in rcrb sbb xor das mov cltd mov xchg das mov and addl outsb sub das je and std and mov sub pop cmc lcall fs mov shr mov mov pop and mov sbb jb pop or pop and je sbb packuswb dec pop mov jbe nop sub pop in inc loope out mov and lea add out sub lcall inc xor mov or and bound divps cmpl mov pop push mov pop adc and push xor push mov xchg outsl mov rcll (bad) scas loop mov and mov cld sub mov xchg and inc sarl hlt pop xchg rcll pop inc loopne adc mov je es shrl and xorb test stos pop lds sub enter push push mov mov inc push (bad) xchg and pop mov test pop add push mov sar ja push hlt pushf and adc es mov sub pop pop pop inc cmpsb mov scas and mov call inc lds inc into mov (bad) (bad) lret movb insl add push mov cmpsb inc adc dec cmp cmp lahf ret rcrl dec (bad) fist adc iret addl mov pop and or mov xor call sub sub inc in xor inc push test push jecxz mov mov cld addl (bad) lcall adc xchg decl and cmp cwtl sahf xchg decl pop movsl jns and pop adc ljmp dec (bad) call cmp in mov push jnp hlt adc loopne and xchg addl arpl out mov jne mov adc out out pop (bad) jae add (bad) fild nop jae (bad) add mov jae rcll lods jl and jmp arpl or and cmp in add jae mov cmp xor jns ja push arpl xor jo roll jmp xor and xor push arpl test into fadds push arpl addr16 jg rol insl call repz outsb call and mov in mov rcll cltd push inc and cmp lea jns insl subb mov lea or xchg dec ds inc dec mov pop out or test jne fadds cmpsb cmp jl mov mov lea jb push cmc xor loop adc push and mov inc add xchg and out lea add dec out ds call out loopne stos pop add adc nop inc sbb nop test mov xchg sbb loope sbb jo sub inc adc push pop push lea cmpl xor es or or sub adc adc xor aam das or insl cmp and sbb sbb fimull (bad) or fmuls ret cmpsl (bad) popf test (bad) or fsubrs popl jecxz fsubrs (bad) popf or or or mov inc pop jp,pn inc jg lock jmp fildll mov roll push rclb and or xor and ss mov test dec and arpl mov mov shrl push out imul dec je lea out loope adc jne cmp mov xchg out popf fimull xor sbb sbb int3 jmp pop out out ljmp and and or mov and daa aas xchg inc push loopne das fsts into aas pop (bad) mov pop punpckhdq das loop dec mov add dec hlt pop jl lea fwait out out push dec je pusha out push jnp enter jmp rorb insb mov inc mov xor cmovb pop sbb out dec out xchg xchg call inc adc scas add and jg xor call lea dec aam mov jnp js xchg or outsl fs dec (bad) adc arpl sbb sub dec hlt dec out adc popa or xchg jnp (bad) into adc or and or sub jb xor (bad) sbb cmp or cmp imul imul cmp cmp imul xor jmp adc cmp call mull (bad) ds xor in sbb jmp icebp ss fucomip out mov xchg jl out sub push xchg inc add enter sub mov sbb jmp inc jmp jb icebp (bad) xor sub and add (bad) inc ret (bad) icebp psllw (bad) inc ret psllw xchg and gs icebp xor and mov jge icebp xor icebp xchg mov xor fwait lcall xchg enter sbb pop pop icebp nop add stos sbb push push sub fcoms clc mov nop loope loopne ja mov (bad) call xchg and inc pusha mov mov mov decb mov mov and ja mov cmp andb inc mov cmp sub add pop or push loope push sub dec push mov mov out hlt imul xchg pop inc inc hlt fild mov mov mov sbb lods sbb (bad) push and outsl insb push inc iret test cltd lret xor test std jno cmp bound xchg mov xor cmp dec js pop jl ja mov xor popf add inc aas stos push adc imull ret mov mov jp dec ljmp sbb sub inc popf test not fistl lock mov shrb push pop jbe jae xchg xchg push loope pop cmpl inc add and mov (bad) aas jno mov into fisubl lock add xor sub add push and imul mov inc dec adc jmp call xor mov mov pushf pop add adc fsubrl add mov lods xor push mov aas ja packsswb mov xor sub pop xlat xchg test mov fmull mull into and sub sub aas push mov hlt jae sub xor and xor lds test xor ss or lods inc rorb lds ret inc arpl ficompl push int3 adc test push mov add daa cli xchg dec push mov push out loopne or outsb sub js rorb shlb inc femms (bad) scas xchg testl nop int iret push (bad) xor enter pop mov fdivl jmp fs xchg mov cmpl pop jb cmp jle out mov pop shlb jmp adc loopne cmp mov (bad) cs lods out sbb push and sbb ret fwait std mov mov or cmp lods xchg cmp pop jb pop in push lcall cmp pushf lea pushf cmp inc lcall xor xor aam push ljmp iret mov jmp ret ret jae loope lcall cltd push mov ucomiss (bad) gs and mov pusha js dec and insl movb js out je stos and out hlt outsl jae insb inc xchg mov cmp adc (bad) mov nop mulb notb out cltd sub out imul and pop and jnp std xorl xor pushf and and into fsubl mov je and ja iret std xor ffree adc faddl nop dec cmp sti cmp fimull xor mov out std addl pop mov mov fldl orl push sbb push pusha push xor out ret jle pop fbstp xor cmp subl sub (bad) push inc out sbb faddl pop sbbl popf xor push mov mov push push sub rcrl xor inc and mov (bad) sbb (bad) mov outsl pusha mov daa adc lock bound mov add sti or and mov jno shld ror fbld xor and mov cmp and movb call add mov and and or add adc mov mov ja or and push idiv dec add movsb lock (bad) mov mov and or cmp rol jmp lret outsb repnz jle and dec push push or std pusha cmp inc jae rorb pop ret addr16 outsl push shld add mov and loopne (bad) pusha cli andl pusha daa mov (bad) aad ret add jne sbb jno pop je insb loope jo ja int3 inc push adcl call enter jmp sub dec mov mov mov in push pop or enter pushf fdivr mov or ret scas xchg lods xchg orl cmpsl mov lcall (bad) and clc mov xchg dec fs or scas (bad) adc mov not mov not mov das cmpsb and mov mov mov cmp or mov mov xchg daa add cmp (bad) ljmp cwtl dec mov insb lea mov cmp and sbb mov mov and jp lods loopne lret mov jae lret and and xor cmpsl fmul cmp outsb jae je xor mov xor loopne pop rcll xor mov sub adc loopne (bad) push xor mov inc push jno mov xchg cmp shr jmp dec mov je dec xor xor push add sbb jp jp cld loopne (bad) not and divl out popf clc fdivrl mov int sysret pop mov and and jae je inc mov js int push adc ficomp adc lods jne sub or fisubl neg jae fcoml xor neg (bad) aaa outsl adc adc or or adc rcl jb icebp xor in es ret jne xchg lahf pop gs add inc int3 and xor dec lds sbb mov dec jnp and (bad) lock pop and sbb cmp inc dec or mov das dec ss mov mov ret mov lock adc out icebp sahf (bad) (bad) dec pop mov out mov dec cmp loope fildl and mov fiadd mov stos out jae mov inc (bad) cmp cmp push outsb push and int int3 cmp cmp mov pushl bound xchg popf sub or mov jo ret iret sbb xor js xchg or and pop xor adcl jle sub xchg (bad) pushf pop sub js out push cmp lea or xor and pop cmp xor out insl out adc dec (bad) aaa mov and and jecxz outsl add sbb lret or jnp cli outsl xlat inc adc mov inc stos add sahf xor xor xchg cltd pop pop neg fscale loope jnp pop das dec dec mov iret cmp xor push pop inc mov mov push xchg loopne sbb pop fnsave (bad) xor add sub lock aas jg ja inc sub mov test loop mov mov out push shrd push orl and inc xchg (bad) loopne mov outsl shrb inc outsb add or ja or jnp or icebp pop dec clc mov or cmp (bad) roll and push push pop and mov ret or dec sahf loope sbb es mov out pop out push insl ret pop bsr lcall lret imul jg icebp mov pop mov or or xor jecxz add lods call sub pop jl faddp outsl add add shld int mov shr mov dec lds cmpsl lods xor or ret and mov into pop inc jge mov js cld cmpsl or or pop not je and (bad) loopne mov pop jl mov mov adc cmp fwait mov jae mov and les xchg pop stos add sbb push and xor pushf (bad) add in pop mov (bad) sbb out mov dec adc adcl mov or push mov lods loope ret mov je push cmp and cmp mov xchg lret lcall jp fwait jp mov shlb fstpl inc pop rcll push pop int3 je and xor mov js loopne xchg insl mov add call in and dec adc cmp and mov iret sbb repnz repnz xor aam shl (bad) jae xchg movsl and sbb cmp dec and aas sbb mov pushf lods pop out pusha js jg push jnp cmp sarb or and or xor sub sub sub add jae lods cltd push and test jo pop jne enter sbb and mov lret and out lahf orl faddp addl into sub cwtl cli je icebp push adc das or xor jae cmp push scas addr16 (bad) addr16 xor pusha pusha sbb mov or out cmp adcb std fsubrl punpckhdq inc pmuludq mov sbb mov lods mov jns or insl jge xor adc rorl jp andl pop pop push cmp loope xor sub sbb ss lds and xor jle fsubs (bad) icebp xor cmp pop das or stc loope sub jo xor push pusha mov adc xor pop mov lds sbb sarl mov out lds cli inc pop jmp inc rorl sbb mov pop sbb ret inc xchg mov sahf and call jnp xchg push negb dec inc cld fdivrl stc dec xor xor xor in pop jnp adc cli (bad) aad sub xlat rcr xchg mov xor xor pop add shl mov mov dec pop mov loop dec outsb testl add pop xchg into sbb add cmp ret add leave adc jnp add lock jg movb testl inc add ds jl push jle jae xor add loopne add icebp push sub and mov es call ds call pop or xlat or mov sbb push out pusha test pop sbb clc mov or mov mov mov xchg mov (bad) mov shld mov int lods flds dec rol jmp mov and fadds pop or (bad) nop and mov and fstl mov add push in pop add rorb (bad) xchg daa xchg push push cmpsl pushf and enter outsb inc not not cmpsb or xor pop mov subl call sub shlb out inc and and aad xchg shrl cmp iret xor pushf lods repnz bound lock push int3 mov paddsb shll pop cmpsb inc cmpsb movsb aaa pop stos push cmp out and cmp pop push dec or jnp xchg or push xlat fwait out (bad) and mov sbb nop in fmul rol push aas mulb fnsave xor lods cmpsb mov push cltd lods cmp insb ljmp xchg jnp push add out sbb push cmpsl imul (bad) (bad) dec xchg aaa outsl mov lea sub xor sub mov mov test ret mov das mov inc into or jae enter (bad) fldl mov xchg movsl (bad) sahf cwtl sub mov add aaa stos jge push or pusha loop nop arpl or sarb add xor les xor or imull and iret cmp sbb jo or mov cs stos inc mov out jmp cmpsl aaa arpl sub sahf mov sahf orl (bad) cmpl mov inc cmp mov adc iret out push sub lret adc je push push xor dec push jb mov pusha or add mov xor pushf fidivl rcrb jg subb sahf in xor dec xor ss pop out sbb out push mov xor push xchg test lock lock test mov mov xor sahf jnp dec sub es sahf jnp orl out es inc adc cmp andl sbb add inc jo out or push mov fsubs loopne or xchg jle (bad) loope je je xor loope jecxz mulb sbb xchg loopne push xor xor xor iret loopne clc adcl jae push inc push mov sti jnp out mov sbb aam sub rol (bad) pop push and stos sub dec cmp lods mov rcll or dec inc adc adc or iret cmp (bad) (bad) lock sub cmp and adc pop out arpl adc push dec inc (bad) push push cmp push xor inc out aad fidivr cld and outsl insb mov sbb push aad mov push ja (bad) xor cmp sub mov add (bad) pop mov xor (bad) arpl mov lret icebp lret sub add int or orl dec sbb sub lods (bad) or movsb ja loop pop sti add lret and roll out addr16 or sub sbb ja mov test push aas (bad) xor sbb dec loope idivb jno leave daa mov pop fld (bad) int add jg mov mov pop arpl mov inc jg js pop int dec cld cmovge mov shld sbb aad push pop and aas cmp mov ss in or not and inc pop xor push lods mov or (bad) cli ret lret push pushf jo pop adc movsl sub add (bad) not outsl rorb or cwtl inc ds js and dec push and mov or sub iret mov sbb je mov jae and dec out mov inc xor add adc gs fsubrl sub xchg not mov mov jno hlt aas jns sub lods add xor into bound test pop push repz sahf jnp inc push pop push jns scas push mov (bad) xor jb inc or mov mov and decb fldenv and fsubrs out insb (bad) dec insb gs pop clc mov loope lock fldenv mov mov cmp icebp xchg mov mov out cmpsb vmread jmp push inc xchg jae inc aad push sbb fsubr popf xor xor lahf rcrl subl js inc adc addr16 js imul and sub loope aam or cmp xor int3 adc mov sarl adc add and cwtl push xor enter push and xor cmp call cld jae xor repnz sahf jmp and mov push mov ljmp icebp insl push mov inc test lock adc lods (bad) or ret mov imul mov xor push push add or jae jnp mov fdivl pop xchg sub int3 push lea xor adc or xor push sbb jmp sbb adc fwait ret mov (bad) or pop pop rcr xor push icebp mov rcr push out push and inc pop mov inc xor mov xor aam add lods dec pop and push adc dec and push and out ljmp or adc clc loopne in pop xor or out adc push addr16 aas pop loope pop or jo jo push push pushf aaa push mov daa pop cmp add xchg lock cmp xor mov xor push inc xor rorl ja dec (bad) cmp mov pop lret (bad) xor icebp cmp fnstenv ret pusha shld cmp sbb sbb xor and push (bad) xor xchg mov push pop psrlq mov jecxz movsl (bad) decl jecxz lock add call notb lock verw (bad) jne inc cmc fiadd lret or lret lock mov ja push add inc decl and add pop sbb insb sti pop and add lds mov xor push add or or cmp or out mov cltd addl pop push adcb fadd push dec mov push inc inc (bad) cmpsb outsb roll dec je adc mov pop pushf mov fdiv cmp loopne in jl jbe mov shr pop jnp mov and jecxz out cmc or test sbb test test outsl mov or or gs xchg add cmpsb or push popfw or xor push sub adc sbbl cwtl shrl flds popa inc mov xchg or jb inc lock lret mov testl pop ret adc daa mov je xor ret imul mov js cmpb fwait not xchg sub xchg and test inc cmpsb pusha cs and pop cmpsb push adc fsub inc cmp pop dec and jmp mov vmovups or cmp lret sbb loopne sbb iret rorb sub dec xchg pop or (bad) lds lahf inc cmpsb out (bad) jmp inc popf ljmp sub aad sete es addl (bad) loope or jns aas xlat sub jg xor es mov into negl bound cmp cmpsb xor cltd cmp mov test sbb fcompl pop neg (bad) lock xlat adc scas jno jae cmp mov imul sub jo sub movsl xor or imul int jo testl cmp ds lock lret inc outsl cltd add neg xor push fwait xor shl push outsl inc push adc stos adc in lret sahf and rolb push sbb sahf mov cmp cmpsl test push out mov lods push out sbb and add test mov mov add sbb ljmp loopne jnp mov ja lea arpl ljmp xor jae inc adc movsl pop cmp fwait sbb orb xor iret inc jmp aas or lock sahf xor loope (bad) (bad) fsub add ret pop iret lds xor push emms xor add cld leave lock adc xor xor mov rcrb adc sahf loope lret icebp sub mov repz shll dec add sub faddp and jns into mov popf jl (bad) xor cmp jg push pushf insl bound sbb mov push clc sbb mov in mov xor add into pop mov imul cmpsb ret sub decl inc sbb lds (bad) pusha mov push xor xchg xchg push insb push aaa enter (bad) sub les shld shr push in js icebp xchg xor shrd shr mov adcb call js fisttpll add (bad) icebp or or and cmp rcl loope and js add lahf jl push int repnz push xor lcall int loope jo cmpsb mov jb mov jo and mov xchg scas rorb and aad flds and push xchg cmpsb outsb bound sbb jmp lcall shld mov lods int mov shr mov mov adc add test pop enter loope cmp xchg arpl mov cli xchg inc not sub cmovo mov rcrl int cmp push inc mov adc add ljmp mov mov clc and jl pop jae nop mov push cmp je add and pop and sub sahf or cmp mov mov sahf xor sub mov jnp mov and mov fnstenv loop lods push idivb jne add add sub lock loop push es and call jb xchg ss outsb add pop pop (bad) xor lcall and rcrb imul and xor sbb js inc loop loopne jmp pushf cmp neg xor xor add jb icebp mulb mov cmp loop or nop sbb jbe xlat jae js je cmpsl das sbb jo aas push pop negl aas adc ret inc or dec and fbstp mov xor cmp mov or dec stos or add andl mov iret add xchg mov (bad) push adc loopne out xchg push jecxz xor shrl mov cwtl sbbl lret sbb iret (bad) mov and scas push or adc popl sbb mov jae mov cs (bad) fdivl outsb and or test (bad) and dec inc dec fdivl inc mov lods das jge aaa and lock inc dec xchg push cmp or js add test mov sbb inc iret mov addr16 cmp (bad) xor fwait and jnp call and mov push mov adc mov push xor xor xor mov adc or ficompl mov imul sbb sbb push pop outsb or (bad) (bad) jb pop (bad) aad and jne lock xor (bad) inc push push (bad) xor daa mov lock add sub push je sti (bad) jmp jmp or lcall jo dec inc xor inc cmp pop inc jge mov or mov outsl pusha xchg or or loopne (bad) hlt inc daa ja mov adc adc pop mov mov incl test inc adc call dec movsb (bad) push and mov cmp or rorb or rol loope out out pushl in pop xor lret mov xor mov popa pop pop dec add sbb out or ss incl or mov std mov mov mov pop out adc pop cmp fwait jge mov mov push lods or or cli pusha (bad) pop push mov mov insl shrl mov sub loopne mov xchg or mov and ljmp mov or and xor mov or cmpsl daa push out mov cmp adc not test ja adc mov clc roll jne xchg in adc pop inc test stos push mov ffree push sub mov pop xchg aas xchg and popf add jb aas xor mov (bad) inc loop push adc nop enter and mov aaa mov mov inc xor and mov mov leave jno stos pop mov aas mov ja sub lds jecxz js xchg pop clts pop mov push xchg cmp adc push push pop xchg sub shrb jge cmp and mov sbb (bad) aas (bad) jp or not push dec data16 stos adc (bad) jp adc ljmp cmpsb nop sub and xor mov sahf js sub idivl sbb adc and push mov addr16 test sub rol jno xor inc jo cmp add jne and ret jae pop jne dec scas jno fdivl stos jecxz inc cmp fdivl cmp mov fldl sbb cmc into rcrb push shrb testb fdivl pop cmp pusha jecxz sahf and movsl leave test xchg push into sbb cmp xchg xor cwtl jnp lret test xchg lods sahf loope push movsl inc (bad) xor addr16 shll dec jne and in cmpsl inc cmp fmull int cmp xchg jnp jae mov icebp faddl daa dec sbb add xchg call (bad) push sbb dec xor push out inc lds xor fcomps jb and add cmp or add icebp dec mov and out mov or rclb jb push pushf sbb (bad) or loopne js pop or hlt shrl push cmp adc les cwtl xor sarl jo jb pop sub das jbe xor sub cmp rorl fildl pop and mov add or jbe je xchg js out pop dec dec and push nop add pusha rcll sbb add sbb push rorb mov and push pusha repz scas sahf jecxz out push and inc mov xor mov add out into jp mov push out fist jae ja mov xor xor lods leave mov fstpl loopne jecxz in pop jo xchg mov popf fmull ficom icebp mov lock sbb (bad) shrl cwtl ror push mov test sbb int add sub addb xorb and test cwtl popa pop inc fs adc lahf pusha pop icebp (bad) aaa push inc and and adcl dec and pop push xor or ret xor add or dec pop add ds mov or pusha mov out jb mov js out pop js enter or movsb call and bound mov (bad) enter test in push stc adc dec cmp pop or pop push pop cmp jp je icebp dec mov and sarl or xchg insb divl andb sub les xor sahf mov fwait xor out dec jo (bad) mov push popf ljmp cmp dec sub cmp call xor sub in adc mov mov push adc popa cmp int3 aam mov aad lret push std enter xlat outsl and data16 sahf fucomip jo mov push and and mov adc mov loopne jnp sub out push push cli and mov test aas das in adc (bad) ljmp inc stc fnsave iret inc jl fimull sbb fdivl scas pusha repz cmc sbb sbb lcall mov sbb xlat gs xchg divl xor divl xor xchg and add dec xchg lock (bad) mov mov ret dec in scas mov outsl xchg xor out and lret mov int3 sbb scas xor ret or mov insl sbb test cmp lock sahf push and sbb mov inc and notb test jo push jl xor sbbb add jmp push adc inc or scas and lock lock adcb aas add cmpsb cli mov dec jns sahf addl aad loopne sahf loope push das mov sahf jnp xchg rcll js jnp mov mov lods mov cmp jae mov lds jb adc adc cmp out ljmp roll gs xchg adc js xor into (bad) jae adc int adc sub js je sbb push xchg or inc pop and rcrb subl subl cmp or add or (bad) loope (bad) insb pop cmp mov in mov mov push dec and push add mov cmp add add out adc add or sarl ja xor sbb mov out idiv cmp adc hlt popl (bad) std mov out cmp stos ja ja xor out (bad) dec and adc mov sbb add jb xor dec adc add push clc inc sub xor shrd subl mov mov push lock xchg pushl fisttpll mov and or mov js gs xor shr mov out mov mov add lahf jae js shrd shr sub inc std je adc mov xchg or test cld cmp jo push inc mov fdivs pop push shld outsl push movsl jb,pt fdiv push cmpsb pop movzwl mov or subb push push sbb scas aas rorb (bad) or sti and movsb enter xor psubb jg mov jmp not movzwl movzwl mov and ss pop mov cli scas test adc adcb xchg pop cmp ds mov sbb add mov mov dec out dec rorb or mov sub xchg and (bad) repz movsb mov cwtl and xchg js rcl mov rorb pop clc jle fsubrl or jl in not mov xchg sbb push pop adc adc adc mov add fmull imull sbb dec adc adc add popf divb pop loopne sarl sbb pop imul rcll xchg fnsave (bad) adc sub daa ret (bad) lock in mov or test xor pop pop nop sub adc xchg adc loop add pop (bad) mov pop (bad) jp lock cld pushf push lods and dec scas adc rol xchg push pop jae adc ret and xchg ret loope xchg push pop out iret lock js fsts pshufw jae out dec mov ja inc xor xchg add dec in scas inc into rcr xor cmp imul sahf jnp bound mov sahf int3 cli add popa and pop ja inc mov add mov popf aad add loopne jbe int jmp inc insb lods sbb fadd jne and loopne sbb lock cmp inc lock sarl sub (bad) mov push dec mov iret (bad) hlt sub sbb sarb mov add and xor xor fsubrl stos xor sarl jecxz mov jae (bad) (bad) xor mov pop dec aam xor aaa dec and sahf mov xchg cmp mov mov dec cs cmp add push mov test sbb ds pop jno inc xor sbb push sbb xchg inc loopne dec xchg push xor enter push lahf test jl xor lret adc mov add and inc xor ja sub aam cltd jle xchg and xor adc cmp pop dec xlat pushf and sbb sete inc jne push dec (bad) jne subl mov ja xor xor mov adc int js neg pop ss cmp xchg add adc fimul lods aad sbb xor push mov mov inc scas (bad) scas enter inc inc shrb data16 jg pop stc cmp or shld shl ljmp adc mov mov mov mov inc and push mov ja or data16 mov and dec (bad) jo sub fisttpll shrl push adc and dec inc ret andb fmull movsb into adc loope cwtl icebp dec pop sbb mov fcmovb or loope mov xchg insb add test movsl mov inc (bad) emms push fnop pop dec shld nop stos pushl cld ficom shr sbb rorb lret movzwl xor add add jmp sub pop idivb xor ret pop jne and and stos andb sub pop jno dec xor mov rorb adc jae inc mul add push mov lock or inc and aad fwait loope ds dec and cmpsb ja out lret or pop divl xor idivb inc cld inc stos addr16 sysenter cmpsl or cld inc sahf adc shlb or cmp js lods pop sub inc mov mov jo out mov inc dec mov cmp cmp movsb or into xor mov xor pop mov divl mov cltd sub (bad) jbe scas pop push mov lea (bad) fldenv sub jns lods mov sahf jecxz test jge push adc out xor xor ret cmp jmp push or cs pushf pop jae push (bad) (bad) lods push and push loopne and xor loopne jecxz mov cmp pop imul int3 icebp or mov adc pushf sub add jb jo or les loopne mov adc sbb outsb sbb jo mov jbe push iret (bad) mov jnp xchg push inc dec pop mov sbb add and add test sub cmp push pop mov out lods imul jae les cmpsl ds or je jmp aas or inc js mov dec sub jnp js adc cli sub add mov je jae mov push sub mov dec jo cmp jp pop push and and xor mov and xchg orl or out lock xor and out add xchg mov cmp mov jmp push pop mov fs adc dec loope inc mov xor lock mov inc pop cmova pop sub add arpl inc xor xor scas pusha and (bad) enter mov push or data16 cli cmp mov inc scas divb mov xor mov sbb mov lds cmp out mov mov sbb ja mov gs mov iret inc or fimull add mov xor sbb in xchg dec push mov mov lret jg clc loopne push push scas and rorl sub pusha xor sub and lock push mov or ja js mov push bound (bad) mov pop push add call cld test and inc ret add inc mov bound and cld stos lret invd pop les test mov icebp and rcrl scas jo or (bad) or pop mov ror xchg ret mov adc pop adc sbb mov or lcall and add ret jg add inc and (bad) jne dec cmp ret cli addb rcrb cmp fmul cmp aad ficoml hlt and push sub push mov test push int3 subl mov es sahf jnp ret into xor dec cmpsb out inc xor mov sbb (bad) or stos test stc add sbb loopne sbb neg and daa aam cmp add inc mov rolb call push jecxz jnp out mov fstps subb test fdivl (bad) cmp pop ja repz inc loope cmp and mov ret dec xor sar xor sbb lcall jo and (bad) fdivl loopne test das out and xchg pop cmpsl adc (bad) jae lock sbb cmc xor into jp mov dec push ja shl xchg and jo xor (bad) xor push js sahf loope mov or popf gs sbb and push pop iret inc adc neg jae popa jg,pn xor mov ss and popl mov (bad) aas sbb push xchg ja push fisttpll loop out add std cmp es or sarl pop call lds enter adc jp cmp and aas ja scas pusha dec dec test xor (bad) jae or arpl out loope cmp hlt mov sub xor js loopne sbbb pop aam fnstsw sbb popa adc sub dec arpl cmp pop pop add and mov aas pop add dec mov fsub je arpl decl push pop insb mov fidivl lds lret clc jo outsb mov fisttpl sbb ljmp push mov xlat jae xor adcb and mov mov xchg fs push add sub outsl jns dec into addb xor addb adc push and rcr pop or ret jg (bad) roll mov dec js ja fcoms les cmp sarl mov or cmp shll adc repz cli aam mov mov in xor dec lock mov or sbb aad mov xor js cmp xor jecxz orl es mov and icebp push jmp xchg and jecxz mov sahf dec cmp or mov push xchg ljmp lea mov cmp or (bad) rorb repz jo movsb jns sbb inc mov addr16 test int3 push cmp loopne push mov sbb ja pop insb loopne lock push and movsb or sub lock enter sbbb jmp arpl add out xorl mov and es add sbb repnz loope sub mov jae xchg or mov mov jns out inc mov inc pop (bad) loope adcl jge pop add add or sbb dec pop or orl out xchg stos out rcrb xchg mov and push pop dec lahf je out sbb push mov out rorb out mov jno cmp rorl mov in pop in push mov jnp cmp inc enter cmp sub mov adc dec pop adc push mov and test mov ja js std mov mov dec out scas out in mov adc clc inc mov rcl push rclb testl jae std dec push xor mov and mov fdivl std out and scas sub lods cmpsb jg pushf cmovge rorl pop jne dec jo dec dec xor cwtl jnp addr16 xchg xor inc in stc inc inc mov cmp insl inc push pop adc mov sbb mov std iret lock out or mov jmp adc adc adc jg push adc loope pusha ljmp inc test pop add fsubl mov ja not xor xor xchg jno fsubr test pop pop testb lahf subl fnsave not mov mov imul jp pop cmp adc jle (bad) rcl jnp stos mov test mov push inc add mov ljmp add sub mov mov add mov and ret and mov pop pop add sbb xor hlt and and (bad) or pop jne mov outsb (bad) mov push inc xor xor and cmc leave adc int add ss cmpsb inc mov mov mov push push xor lcall je adc int xchg inc mov cmp data16 test cwtl pop sub call push mov xchg cmpsl sub pop andl out add inc cmpsb and add (bad) xchg xor loopne mov inc cs mov and mov or pop insl xchg test dec push in push jae stos test outsb add test adc bound fmull (bad) ja jae xor dec push xchg iret xchg pop add sarb cmp mov mov mov cmpsl sub (bad) xor nop icebp pop mov fwait sbb sarb or mov (bad) or push (bad) xor jmp cltd push push adc clc aaa (bad) push mov mov jp and sbb dec mov out jno lahf adc and jno inc lock popa lahf xchg dec icebp jae add sbb out mov xor mov addr16 jp out mov mov mov rolb lds xchg xor (bad) mov cmpl lds dec and cmc cmp jle xor and push push xchg xchg mov sbb sbb pop sbb pop icebp mov xor pop jmp lds (bad) mov js sbb lahf aas and pushf sub lock add add pop cwtl or jecxz jae enter or pusha mov xchg pop ja adc sub push inc loopne enter (bad) jae xor mov cmp sbb and cmc std movsb sub mov ja ret roll sub mov push lahf loope mov dec lret jo inc aas in inc loop push mov xor ja das inc aad add loopne xchg test add sub mov clc arpl mov mov repnz loope insl mov jl sbb addl incl (bad) mov or pop mov outsl je fdivl enter loopne cmp mov mov cli adc fimul mov push (bad) jl jne subl call mov stos or out mov ja cld mov loop mov cmp cld stos div or add or mov or inc xchg push mov inc shll cli lea mov push and add inc fldl and mov les out (bad) adc xor adc ja in shrd shr orl (bad) push mov dec add adc inc inc adc add fildll enter mov iret cmp cmp mov fsubl cli sbb mov inc mov sub mov mov repnz loope sub mov xor ja es lock cmp mov sbb mov xor ljmp mov dec (bad) ret jg sbbb sub inc (bad) xor mov inc les push mov pop mov pop mov fwait aaa outsl fisub inc aam mov push mov mov jo inc in mov (bad) sbb jl jl mov xor xor sub stos jg mov (bad) (bad) cmp mov (bad) loopne (bad) pop sbb inc add (bad) movsb xchg mov adc cmc cmp or inc enter ja cmp or sbb cmpb push adc jns popa mov aad sbb push jl inc add pop jp inc mov nop mov stos clc push loope ret jnp pop add movsb fiadd shl inc push or fsubrl fdivrl imulb (bad) push lea je mov and lods stc add add and mov test jne pop aas repz clc jae test lahf inc cmc and leave cmp add add xchg pop and pop xchg add cli daa and test add imul clc jg and testb popf and test add pop and ds rcrl pop sub lea (bad) push (bad) in sbb dec add scas call ljmp enter loop push jge push mov xlat lea ljmp add shr and sbb jae test je cmp je test sbb pop je stos (bad) fwait push test gs fnstcw sbb add mov dec sarl add or adc stos add sbb cmp jb decl cmpsl mov and and pushf pop adc shl or mov jb nop push pushf push lock cltd mov xor and xor leave cmp imul cmp adc cmp leave push dec jo ret lret jne pop cmp sub push mov xchg sub pushf mov out push dec js add adc movsb sbb push sbbl mov add dec (bad) or dec addr16 add stc leave fsubrl stos xor test push pushf add adc or ds jmp jae push or xchg fmul popf fsubrl aam cltd pop mov xor mov inc out in push add mov cmc xchg pop mov inc pop (bad) dec xchg mov xlat adc mov dec popf cmpsb mov repz add icebp mov and (bad) sbb mov fsts shrd mov inc mov push mov sbb mov or mov push xlat jae pop jg and ja lahf mov sbb cs aam lea dec enter addr16 inc adc jae mov stos pop mov xchg bound rcll rcll push aaa sbb ret push jno inc and pop lcall xor int3 loopne pop push in rcll pushf push jns add call inc inc adc je jle jne jno test ds or or decl ja (bad) test push fmull lret or mov int3 or mov or jno in push add jns mov jg int3 pop frstor pop sbb jno maskmovq divl sub mov mov (bad) (bad) fadd jne dec ret sub jno mov mov add in mov cmpsl sbb ret dec or lea scas test cs adc adc mov test xor add push aam outsl nop ret push ret or sbb mov jmp inc cwtl inc pushl inc outsb cwtl sub mov test add adc scas dec jo (bad) testl (bad) mov jmp out cmpsb sub clc decl rep mov mov mov shrd mov sbbb lods fcomps mov cmp add pop movb notl sbb push and xlat daa arpl cmp xchg xlat ja pop push xor and enter push pusha loop aam xchg in push xchg out in icebp dec push push or mov mov xor sarl js sub fadds mov jmp push jo lds adc sbb fisubl xchg add xchg or jno pop add stos pop aas (bad) incl mov aaa jle les movsb xor xchg add mov out rclb adcl mov and mov cmp mov je vmread jmp dec inc outsl sahf hlt cmc (bad) (bad) mov xchg test adc fist insb stc out and inc lcall (bad) out jae adc xor lea cmp push add fsts mov adcl and xor inc decl jecxz lea mov push adc cmpsl jnp rcr xcrypt-ecb cmpsl int3 arpl ljmp and dec insb jp daa negb or pop push inc hlt xorl fisttpll aaa cmpsb adc mov push push add or xor xrelease or adc dec (bad) xor adc sbb sbb call jb lea add jmp fimull clc mov jge aam je sbb adc dec lret dec inc les mov mov aam sub mov mov addr16 push std (bad) ljmp gs inc and loop push mov loopne cwtl push scas pop xchg test jge je stc mov add lahf jecxz fimul add xchg nop in cmp lcall xorl adc inc xor mov dec sbb cmp loopne push and jnp movsl add popl outsl mov popf cwtl dec cmp or mov stos push popl lea js in inc mov mov mov sbb adc and das sbb adc push inc jo sbb js flds fisttpl add (bad) push adc add mov and pop or pop adc and sub push sbb push adc mov mov mov (bad) cmp fimull stc jo ja mov mov pop mov sarb inc or fwait ljmp sub add jae add dec inc xor loop popa dec push cmpsb and or jae mov mov aaa add push inc mov sbb mov mov and mov div (bad) xchg and shl pusha sbb cmp jmp inc push inc inc mov jae and and lods and add add and stos es adc dec add and sbb add sbb adc mov (bad) mov xor mov mull sbb lcall xor mov sbb iret push push adc out or xlat (bad) ljmp out mov and divl dec and xor push mov fadds dec into pop or jle ja and pop mov mov mov jl ret add pop mov mov mov leave mov fmuls movsl jge cmp jmp ds (bad) adc in adc pop divl inc loopne pop ja icebp xlat adc or add and or data16 push mov mov mov sbb out jns sub cld or mov add cmp push sar adc outsb lods and jb gs push (bad) push test imul mov adc xchg xor (bad) mov xor cmp adc adc push lahf cmpsb adc and inc add aas xchg add mov mov mov mov adc cmp ret jne insb pushf scas insl adc ja mov mov add mov loope xchg (bad) xor adc (bad) test mov into aaa iret mov ljmp fmull cmp jne scas sub je out mov inc int dec and mov dec adc and addl add mov adc hlt dec sbb shrd xor dec add imul in or mov lock pushf and cld iret adc push jne testb mov mov (bad) ds adc lods rorl lods ret lock pop pop loope shrd mov xor push les push pop aaa mov xchg mov push (bad) mov dec push push fmull movsb rclb shld inc insb mov lds in lods into jmp inc xchg add add outsl scas ret outsl idivl xchg rcrb shrd cmp or xor loop negl (bad) or push add adc mov shrd ficomp mov nop pusha mov fs xor or mov out shrb inc dec push (bad) clc (bad) std add mov inc push shld (bad) mov push jae sbb ret xchg pop and adc dec xchg and sub adc (bad) movsb rorb inc push mov mov cmp inc pusha xor jmp and test push notb ror (bad) sbb push push xor test inc inc and mov cmp cmp (bad) xor roll rclb and sbb out sbb push nop adc rcrl negl xchg (bad) cmp lods rorb xchg psrlq add test inc adc xchg aas jo in adc arpl add mov movsb fsubs lds rcrl add jo xorl subb xchg sbb xchg inc adc cmp sub rorl popa sbb aam xor dec out sbb add adc pop push cmp dec xor cmp adc inc roll xor adcl push pusha loopne or xor jb out mov xchg inc cmpsb xchg scas sar lds and iret or push mov ret jecxz fisubr test cmp xor inc xchg and push push push negb mov pop fimul jmp or cmp xor adc or add mov push add imul insb and mov mov adc shrd pop adc sbb insb mov xor insb sti push addl out add or aas xchg add lock add jle sbb out lods and mov and insb and (bad) popf test dec mov sbb mov xchg and xor je or push dec je push pop mov scas mov cmpsb xor (bad) mov xchg jnp fisttpl xor xchg cwtl sub aas in lods sub jb xor add (bad) pop pop je jne and mov insl shrb xchg dec adc jl jb cmpsb mov jb inc adc or mov popf mov add mov mov add mov xchg push daa inc mov mov jae int pop add popa clc and sbb and addr16 (bad) iret lock sbb lock fistl sbb notl sti dec jo enter fimull movsb fstps shld mov xor xor sbb dec in and or cmp xor pop popa stc inc xchg and push (bad) jg xor shrd push mov inc or mov ss sbb notb cmp pop sbb call inc shld shld xor jle scas xor xchg add cli xor mov (bad) or jns xor pop adc cmc xor cld inc lret push add and testl jb pushf mov add mov push shrd les insl pusha mov adc dec fs or pop push pop jb push xchg rcll out cwtl gs cmpsl sahf or movsb ljmp pusha fs imull xor test push xor idivl cwtl mov sub and jno mov lods mov aad or jns add insl loop imul jp pop inc loope punpcklwd xor add lock pop popl dec pop mov lods cli xorl out sbb mov adc xor jae push xchg clc cmp fistp mov cli inc int3 inc add ret fbld jae xorl cmp test jg lds jae and adc and mov dec add ja mov dec and or mov add mov das test pop cs inc or push popf mov or aaa and add push mov sbb sub lods rcrb cmp sbb roll and jo mov sahf ds (bad) sbb mov mov test hlt cmp movsl fnop inc pop cmc xor rorl ret dec pop ret (bad) mov rolb fisubl mov push xchg xchg das add xchg cmpsl movsb rclb lods cmpsl movsb repnz cmpsb push mov mov add ja mov cmp add add test or sbb sbb mull test mov lea andl aam xlat jae jb push hlt test add xor cltd les rclb daa sub xor aam cmp mov les pushf mov lods and add ficompl add xlat sti and adc jne test add mov insb and xchg sti adc std push repz mov popf add sbb xor pusha adc mov roll out mov jb adc mov jnp (bad) dec fcompl inc mov ret iret lock lock xor ret xor or jmp lock add add rcrl mov adc dec inc ficom jmp jmp js mov jge jo scas clc pusha sbb negl cld adc push sbb fnstenv adc push inc test je call punpcklbw rolb (bad) out sbb cmp mov jns sbb xchg jbe xchg jo insl sub adc addr16 popa pusha mov shrd sub mov pop push fbld dec xor out xlat add and add mov adc shll pusha xchg mov mov mov add lods and cmp xor ss xchg push jl bound xlat loope mov or adc xor ret leave negl adc push mov bound pop aaa loopne (bad) jge add add lret fmuls pop out push sub hlt push mov fsubrs dec test jge loope mov test mov or jae dec dec push or outsb mov fistpll push enter pushf push inc mov xor fistp and mov fs and loopne and insb test inc push push sarl or mov adc mov sub out sbb pop ja (bad) xlat add inc mov mov mov das xlat icebp dec mov mov aaa iret mov rcll mov pushf (bad) jp shrd loopne add jae sahf jmp and das add notl js setl mov ret movsl insb and xor or cmp mov and jb std sbb mov adc iret sbb fwait dec clc or je movl xor xor les fs clc cwtl lock lahf mov or push mov cmc xor xor std push sbb push aas adc jmp out pop loop cmp subb push cmp jbe push xchg sbb pop inc sbb sbb stos cmp cmp lret inc sbb les lock stos jo jo ss sub adc and and daa jl vpsllq pushf add sar dec adc xor dec cmpsb fsubrs mov pop xor pop and add (bad) xor pop popa mov ret add insb lcall or iret cmp mov pop pop and pop sub call push add push xchg lods and or add jo inc xchg xor adc jne jo fs icebp adc and pop pushf xchg cli mov add mov mov mov adc dec subb jo cmp iret mov xor pop pop imul jb and (bad) or add mov adc aas fdivp popa push jg pop cli shrd (bad) push push ret aaa push adc out pop scas jae cmp leave js inc jl ffree cmp push lock add aam sti xor bound push inc mov repnz add mov decl fildl (bad) mov adc shld ljmp lds cli mov push scas ss add inc push pop sbb or gs popl scas add sbb outsb push psubw xor dec out or repnz xor (bad) (bad) ljmp int lds jge ss xchg inc repnz lods loopne in das test out dec push into push xor cmp lds ljmp lret push mov (bad) xor xor push fs dec lds pushf push scas bound xor fiaddl inc stos test push popa ljmp inc dec nop xor sahf jae sbb data16 leave loope ljmp push fidivrl inc lods fdivl pushf and loope xchg call adc roll rol dec out cmp out inc int3 adcl pop mov jae or cld ljmp fnsave movsb push in rcrl (bad) xor jo lods insb dec or or jmp inc lods push cwtl jnp loopne je inc push push inc das fldenv pushf roll sbb mov negl (bad) (bad) mov or test faddl sbb jle into mov adc inc fnstcw test mov xor movl sbb (bad) xor cli inc pop sbb cmp xchg mov mov mov push icebp sbb test outsl mov and push mov xor or dec sbb adc (bad) xor les pushf orl add inc and je inc push push push pop (bad) mov bound mov imul xor push xor loop (bad) (bad) jne cmp inc js adc (bad) jae inc stc loope fcomps add xor in push addr16 mov (bad) mov add xor pop inc inc stos mov xchg mov hlt adc add push jl jle mov ja add (bad) lock push test adc mov fnstsw popf adc xchg jp scas jae add push mov ret ret fisttpll mov sbb adc (bad) icebp mov xchg inc fstps fwait js flds add and stos mov mov add mov adc mov out sbb icebp adc add addl add adc mov jmp into or xor inc inc shld int mov mov xor and xor mov addr16 mov xchg mov out mov out mov jp dec mov add ljmp rolb (bad) sbb jg xchg xor sub insb mov popf sub sbb sti or jg lahf xchg fmull dec jp pushf rcll xor push ljmp push xchg (bad) ds loopne sbb xchg popf mov and jl or lock xor cmp lods (bad) xor push cmp mov lods and mov add loope jg push cmp ss pop inc loopne dec sbb sbb popa loope sub call adc inc data16 jnp and ljmp mov negl adc loopne cmpsb loope inc int3 mov insl (bad) faddl mov sbb clc cmp jo scas cmp cld movq repz loopne test in daa (bad) int3 jne add sub add mov pop data16 xor inc adc push imul mov push or xor ficom sti jge sbb es mov push pop ss cmp int3 insl ret jg adc cmc xchg jmp xchg (bad) shrd jnp ss or pop call jnp xor adc out push xlat mov add mov cli mov mov rolb jne pusha mov test fs sbb loope lock and xor pop movsb jno fcoml or adc jo and jae test push xor mov or jbe loopne add inc and jae and xor jp dec das inc popf dec loopne and jle fs add adc sbbl out dec insl out cmp dec push cmp inc ja push push xchg mov into (bad) jb and cmp pop push cwtl pop out xor pop adc adc jnp pop sbb mov cmp dec scas jmp and cwtl mov add fcoml xorl or pop lahf in xchg lret jp mov cmp xor popa sub into adc mov scas fldt adc movsb repz xor movsl fs sarl arpl pushf and add mov or mov adc cmpb out and pushf and push cmc (bad) pusha push add adc and fdivrl lret cwtl (bad) pusha xor mov sbb (bad) cmp xor movsb sahf (bad) lods rorb negl push sbb mov mov and nop pcmpeqb push cli sub inc icebp dec inc and in xchg sbb jae mov sub cmp movsb sarb lods out mov mov and lods and andl loope sbb into pop inc push jae adc lock aam cwtl sbb comiss test loope sub fwait je dec data16 call test push add out std loope xchg out mov xor sbb notb nop out adc push adcl ds mov ret jae sub shll sarl dec cltd cmp cmp pop ja (bad) jae xchg push adc dec push orl push fs inc pop push dec popa loopne dec sub mov sub insb push arpl cmp or lock mov js mov adc inc push adc mov pshufw xchg jb maxps out cmp push vmread push sbb fwait push ljmp (bad) int xlat jne or and js lods and jno inc inc cli and dec lret mov in jae das ret jle add cs jnp cmp and std iret cmp and add mov adc loopne mov roll cmp scas out cmpsl scas (bad) cmp pop fwait mov cmpsb add mov dec cwtl inc outsb cmpsl adc enter dec jb dec loop or sub lret mov mov jae inc sbb int ret jmp push push lea and or cmp into jne adc in sbb int3 cmp cmp cmpxchg add inc pop or jae push ljmp jno cmp add or fisubr shrd xor mov repz or loopne sub jecxz repnz test and orl and fldl je jne movsb (bad) stc lahf js test xor or xlat (bad) xor sub push imul sahf (bad) xchg pop addr16 inc adc pusha dec es jne push add or sub jne test add aaa mov cwtl lret rclb add inc sub bound insb sub aaa mov add icebp bound mov movsb and aam jne mov sub int3 xor inc and xchg jg addr16 inc jg dec sbb cmp sbb mov mov inc or xchg vmread push test test push sbb mov pop in bound jnp fsubs roll xlat mov in inc mov in cmp xchg jnp sbb adc out mov add in push xor (bad) sub xchg and jne testb xchg and out inc int3 adcl pop xchg lcall cmpsb xlat (bad) lds sar mov pop mov jo jno push add mov mov jmp lods call pop inc loope sub mov xor cmp and xor cmp test dec paddusb lds les (bad) mov mov je mov (bad) xchg rclb push add (bad) (bad) xlat mov or or (bad) xchg fnsave cli sbb (bad) jne int3 push insl pop fiadd mov iret cmp cmp icebp dec dec loope or adc and jae xor dec inc mov repnz jo test push xchg jmp adcl rcrl movsl xchg gs sbb cmp mov push add addr16 xchg and (bad) loope jp inc aad in xor imul xorl and insb and negl cwtl inc pop and pusha inc lock scas jnp and cltd sbb inc mov inc (bad) and imul insb jo jne cmp scas and adc add mov mov inc lods lock lds dec sub mov loopne mov lea mov jb or or lods add (bad) jg xor add mov adc mov mov shrd pusha lahf pusha sub mov xor fadd sbb enter cmp fs adc mov mov mov mov add test movsb ficomp shld fcompl lods push cmc mov scas repz adc and pop add negl lock xchg add mov mov ljmp shrl mov in mov rcrb shr icebp or cs cmp inc xchg add mov push imul lock sub xchg fsubrs orl imull cmp adc xchg mov fadds sbb xor cmp mov adcb sbb adc arpl mov mov (bad) dec xchg and out cs inc xor and adc lock mov lock test push lret mov and sub ja xor cmp cld seto pushf xchg data16 in fisttpll mov fidivl loope in cmp add call xor inc insl loop lds dec push or mov insb or popa (bad) xchg or mov mov ret push adc int out add adc jb ja sub jns sub loope std cmp popf jmp push lcall dec sub lods shlb sbb push cmp and inc pushf sbb xor (bad) sub push sbb dec ret or out mull jnp and and adc pop je (bad) sbb lock or inc push icebp mov jo,pn ret push shld mov inc fsubs insl and lock and test jecxz inc inc dec xor jmp cmp and test push xor push push sbb cmp xchg and sub das (bad) or or dec incl mov out add jp jl std add movsb adc dec and jo aad fs xchg jle add andl into test pop jb and add sbb inc cs cmc jl and add inc jle addl mov (bad) xchg cmp movsl loop xor sub mov xchg (bad) faddl ja cmp jl mov add cmc std mov mov notl lods ret and push inc (bad) lds push adcl mov mov xchg or cmp adc mov shrd xor jg pop roll shlb xor jne je (bad) int3 cmp cltd nop inc ds mov pusha shld popa js cmpsl add sbb jmp xchg aam pop test push xorl inc mov jo (bad) and sbb push pop mov ret inc jo xchg sar mov inc lret mov push mov mov or sbb test lret dec sbb mov mov xor push cwtl mov inc jge mov lods push mov add add mov and test (bad) xor test cmp mov lods and or add xchg or fwait into pop xchg pop add (bad) test mov movsb pop das pop mov outsl out addl dec xchg and add psraw or sbb xchg loope adc daa dec lods and das cmp (bad) insb adc or pop xor xor test mov jne cwtl xchg insb xchg je and repz cmp adc jne fnstenv cmp push mov cmp mov lods rolb push nop dec mov inc (bad) leave and adc push push push into sbb push lock enter dec sub bound mov (bad) jae loop pop mov pop or mov addl adc add cs pop xlat push add or out (bad) xchg push (bad) adc subl (bad) shlb jae pop mov xor inc cwtl xor and mov test pop xchg shr mov add iret sbb mov inc and add (bad) cmpsb xchg mov pop push inc enter xor or mov mov stos addr16 pop (bad) repz cmp sahf pop lret sbb adc xchg scas pop xchg sbb mov lock movsl and xchg jbe fildl add and test xchg add loopne out xchg xorl or xchg mov imul or scas jo jl dec orl cmp neg xor mov dec pusha sub test and xchg adc js (bad) jne mov push out pop aaa adcl cmc add mov xchg outsb fstpl sub xorl shrl jecxz dec std adc and decb add shrd mov mov adc push neg mov mov jo mov add addl (bad) or insb test mov cmp fildl or lods addl push inc and add jmp cmpsl push daa lret int3 or mov sbb sahf rorl (bad) xchg nop mov xor adc jmp test or mov lds xchg inc push mov add ja stos mov sub push out scas xor test mov (bad) xor xchg ljmp xchg sbb mov sarb test in and inc loopne out in inc lock mov xchg pusha leave (bad) out lahf jl in xor dec in jne cwtl cmp adcl xchg xchg ljmp mov int imul sub es js int call pop xor jo xor fsubrs movsl faddl push int3 cmp push shr pop (bad) xchg and mov das int sub (bad) xor push (bad) in adc or int lret hlt (bad) or sub fisttpll xor push push xor xor push leave out adc push call fwait inc mov icebp sub daa pop add and jl lahf scas add and push sbb insb push mov xlat loope xchg lods and (bad) or iret xor adc scas iret fwait push int3 lock cs push cmp xlat nop push scas add push or inc fs jnp inc sbb xor ror cwtl (bad) xor jo sbb lock cmpb iret adc scas adc fwait mov adc das dec sbb adc and add mov dec inc jne xor add sbb inc lea add lret add iret cltd sarb (bad) sbb jo lret or call pop xchg stos out pop xchg or mov jo add stc jg adc (bad) xor cmp test ja push mov fbstp and adc xor inc mov pushf xor add push shlb (bad) push call mov adc mov mov in shld shld mov int3 lds cmp jmp les mov jmp jmp mov add inc pushf (bad) mov cs lock sbb jae cs sub cs fsubl test jbe push cmpsb daa cmp bound xchg mov xchg mov or (bad) jne or ljmp outsl je mov mov push dec push inc divl mov mov jnp mov add sbb mov inc add jnp sbb inc dec and loope mov adc test push movsb pop and and xor fdivs jnp inc sbb mov inc sub lds mov das jnp,pn fdivl std call mov sbb (bad) xor sahf nopl sbb xchg insb or out ds ds mov ljmp out ret xchg xor xchg and xor gs rolw dec testl out cmp push xor lcall cmp movsb dec xor into jne inc xor inc push mov out sahf lret adc fild fnstenv loopne ja cmpsb shrd dec push cmp xor dec push cmp jl lods and inc xchg and test xchg and xor jl add or lock pop xchg jecxz or sbb cmp add and push pop rcll cmc push and xor jg jle mov rcrb in add roll inc mov cld inc add add (bad) jne lret add or les cmp mov in lds pusha add addl rol out mov out ja sbb hlt (bad) mov mov cwtl cmpsl cmp xchg sbb jp lret nop mov and ss popa inc hlt mov xchg cmp out mov or cmp or sub jae cmp hlt hlt cmp in shlb add mov ret fcoms inc lret xlat mov sbb das xlat insb loope dec loopne pushf push loope out xor call outsl stos aaa arpl mov adc mov xchg and pop lsl mov xor inc push out xchg add mov test stos js int3 lock fld sub (bad) sbb lods xor pop repz jae out push pushf and push lahf and ret ja dec xor xchg pop add lahf xchg mov js jo push xchg stos or xchg cmp inc test cmp add and fadds or add xor push lds mov adc hlt aam cmp adc lods scas and cmp cmp cmp mov sahf sub pop sbb inc lods mov jp cmp add mov loope adc adcl test cmp and jnp ljmp das out js,pn in inc dec jl and jb cmp sub pop popf in movsl outsb imulb in out test out and dec mov dec sub xchg stos jo mov mov (bad) xchg and and js mov inc pop dec add rol cmp lods and add add sahf ret (bad) cmp mov xor scas out inc mov lds out push jne push xor mov movsb xor sti sub mov sbb flds sbb sbbl inc cmp leave jne lods push xor push iret adc out mov mov shld (bad) fisttpl js out mov call repnz adc dec out sbb sbbb stc xlat jae jnp push pusha add cmp add jmp or sbb xchg addl xchg mov out jnp jne fs (bad) orb mov jge sbb jnp pushf and cmp sbb dec call cli push pop mov shll shrl jo dec mov cmpl das xchg popf pop push bound jae sbb adc mov stos inc adc mov dec cmp pushf aad lods (bad) adc lods lds mov out add push int3 cmp mov adc add mov imul mov xor mov sbb lcall sub adc and pushf (bad) adc repnz movsb jae fisub mov push pop inc and cwtl call sbb sub lea mov inc pop xchg mov or int3 loop pop push loopne adc xor xor cmp out (bad) jae push aad sbb mov test aaa xchg mov or es mov lcall sub stos or cmp or xchg cmpsb inc fwait dec sbb fiadd and jb pusha xor mov cmp subl adc mov cmp xor int pop and ficom stos sub jae,pt jnp loope dec fmull (bad) data16 fsub sub dec idivb loopne loope into cmp loope adc xchg push xchg sub jnp push xor add ret push loope ja mov ds invd and loopne mov (bad) jmp aaa test jne push iretw lock sub pop enter js enter or iret je xchg mov jmp mov push push push cld push loop negl jp dec inc nop and mov mov add push nop lret call pop fwait (bad) xchg and int add pop adc and jns jae in stc (bad) or dec lret push xchg and adc ret or adc and push in mov xorb and jecxz xchg sub sbb rcrl (bad) dec scas xchg xchg and pop mov lods shrb adc push mov lock and les jp xchg loope sbb mov mov js pop inc in push sahf in shrl test int loope sbb add in xor push adc lret sti jae jo inc jmp inc add jb and sahf cmp pusha jp ljmp rcl cmc stos mov (bad) sub add sti inc push xor sbb mov lcall scas insb mov shrd mov xor push jl insb push push pop outsb jnp push jne nop mov cwtl mov inc mov sub jne xchg pop out cltd lods (bad) sbb stos sub sub fisubr test dec push cmp xor ja je pusha shrd shrd push or rolb sbb xor adc pop push and (bad) xchg movsb sbb add mov aaa lods and mov loopne jnp xchg sbb lock inc xor xor add lret sub mov cmp pop or je xchg and sbb scas push add add insb and cs add std sbb pop sub and insb and xchg xchg and dec in adc (bad) fisttp add and push test push sbb dec mov add rcrb cmp and setno cltd and add mov aam inc sub push loope or cwtl shr or sbb pop and xor frstor out dec inc jg jg adc xorl jb notl popa repz repz sub enter and ja or inc in mull sti sub pop subps les in dec pop int add dec daa xchg leave cmp xor mov xor ds xlat lock pusha inc jle push negb mov mov add ja jge fs (bad) hlt dec (bad) ja add add mov jp push lods xor ret pusha mov push decl mov bound rorl into mov out mov shld mov loop or popa ficom push mov lahf test jl sbb dec cs xor mov je mov cmp or arpl and mov lahf sbb jmp xchg and xlat or mov adc iret mov pop pop adc mov (bad) pop add and lods fistpll xchg and iret adc sub sbb xchg pop pop or push iret pushf and jae mov xchg adc fcmovnbe xor adcb lock xchg mov and mov loopne (bad) jb in adc (bad) lock adc (bad) jne jle push add (bad) add (bad) lock push push je cli insb xor and ret xorl aad js dec push (bad) xor mov mov sbb into jle or jmp test add push out (bad) and sbb and adc jg adc shlb add mov push mov cmp cmpb ja or xor cltd pushf and adc repnz mov sbb ret jo push mov mov pop cmp (bad) xor jle cmpsb cwtl or ret add push jbe sub stos mov push outsb mov and rorb sbb push sub jg outsl push sbb push xor jl adc adc xchg test jb out push sub xchg out rorb add outsl iret outsl jne test call inc hlt push test outsl jo or pop fs lds out and cwtl cmp inc dec push mov pop pushf setno pop push mov add push fcmovnb inc add pop cmp cwtl or cmpl shlb fldt outsl jg jg jl jb fcmovu add xchg sbb sub xlat mov or adc sarb xor scas ret divb or insl dec (bad) xor adc mov (bad) jae mov cmp iret fdivs fsubr leave test lds mov rcll mov (bad) jne push cmc sbb dec mov rorl cmp xor and sbb ret pop and dec mov jnp or les sbb push clc call inc cs and enter fldenv xchg and adc push pushf xchg adc xor int3 cmp adc add mov cmovno sub xchg adc or shl dec push (bad) (bad) ss push sbb addr16 (bad) js js and jb cli xor fmul lds insl cmp repnz dec add and mov xor aam jo loope push bound rclb scas sbb aad lret insb add mov fisubl (bad) testb add sbb ja mov mov bound mov add and mov fnstsw out outsl fcomps faddl aas mov xor xor xor and dec (bad) adc fs push mov jb lds inc fnstsw add xchg test inc andb adc insl or push pop ret mov mov mov pop jmp sub jns rol push loope push push in adc lds int3 mov jb mov sbb lcall sbb lret bound mov push iret push adc push (bad) dec das add jnp push push xor lock jne out fildl hlt pand and aam add (bad) leave fistl cmp jbe pop in xchg add icebp sub test mov sbb adc xchg mov sarl jg (bad) mov or scas out insl mov lods and ja dec or fcompl fisttpll inc cltd popf xchg or add or push pop ror adc adc lcall mov loope into rorb cmp into push lock add add sbb fnstsw cmp cmp add push lock pushw mov push les (bad) jge pusha xor mov push cmp mov xor mov and jmp iret jne jmp sahf and inc push jmp adc add and mov xchg xchg jmp xor addr16 xchg push mov pop adc sbb insb jo dec add in pusha ljmp adc adc pop pop and test lcall xor jns rcrl das add jg and push pop inc insb loope jae (bad) out cmp jno bound mull into sbb les push sbb pusha js jmp add adc cmp cli jmp rorl jmp iret inc xor shrd and sahf test jl nopl adc mov rclb sub fnop add repnz add (bad) xor clc adc outsb mov mov iret andb xchg lret nop inc mov fadds dec stos call add push negl popa insl and and testb adc daa mov mov cmp (bad) mov mov pop push xor sti cmp movsb lds lds and mov mov jg sub xor mov pop sbb push xor test push pop jg,pt mov les push jae jg popa fmull add aaa inc or cwtl lcall subl push loope hlt pop pop int3 sbb iret dec (bad) cmp jle and jo and int adc cmp add jmp sbb push out inc int3 outsl jg jg movq or iretw mov fwait sbb mov idivb xchg and scas add jno nop addl add test push mov mov (bad) test (bad) pusha inc dec mov push mov mov (bad) jae mov or in cmpsl dec in (bad) rol push mov ja insb push or jo push out xlat loope mov movsb cmp (bad) into jne das jp push jp loopne addr16 push add ret lret xchg ljmp adc xor jl fisubr cmp mov mov push std rolb inc and aam out adc mov cmp push and inc rclb pushl dec dec and adc add sub scas jp and outsl pop rol (bad) sti xor sbb inc test (bad) fdivr (bad) lock test xchg and dec call jl jl pop out gs dec cwtl jp and test mov and icebp xchg jnp mov add sbb push add mov fadds mov push scas push pop add mov insb ret jo ret mov inc daa inc inc xor adc cmpb pop fdivl test scas fnstenv aaa xor lock cli mov shld mov mov sbb push dec mov or and roll shll sbb sbb sbb inc push sahf and aam mov popf loopne (bad) or sbb mov mov int add (bad) enter enter cmp adc push add pop jae add xchg inc xchg or fcoml xchg and lret jo mov (bad) adc sahf addl lret lds call sub mov cmp push hlt inc movsb cwtl push dec pop out lcall push xchg xchg pop (bad) xor loope add repz (bad) xor fmul rcll aam ds orb or fsubrs add xorb pop xor or push xchg lods push in mov dec movsl mov movsb das sbb push and adc in std daa cmc jb xchg out jb out or push es mov mov aad mov test sahf lods sub fildll or insb movsb cmp jnp mov bound inc mov xchg and push xor sub xchg data16 scas jmp int3 pop mov mov pushf xor lret scas lcall outsl mov (bad) ss (bad) hlt jo fucompp xchg es cs out adc cltd sub mov sarl enter push int3 or xor pop add jl pop rclb adc jne cmpsb das adc push sarb and (bad) sub insb ret mov loopne mov sub jo jb sub xor (bad) jl cs nop outsb out mov test sti add mov mov xor (bad) out scas mov mov pop and into add jmp sbb jle mov (bad) lea mov sahf stos mov call inc inc mov ret mov rcl je test aaa or enter or inc xor pop ja out and mov cmp cltd (bad) pop adc call push les mov xor or adc sbb sbb sub dec cmp mov loope dec test sub mov push add fimull mov addb and mov (bad) pop and dec sbb mov sbb xchg push and or psrad insb xor mov push add (bad) sbb imul or cld xchg xor into and lock call mov cmp and push scas and test push jg add adc imul dec mov mov xor mov xor xor aaa and and sub or push mov cmp xor and xchg shr fnstsw and and add cmpb adc cmp add dec jne roll jno and incl and or pop iret mov dec or sti pop inc fldl mov dec mov mov xchg mov adc (bad) mulb das pop push lods xchg outsl pop outsl adc rol mov movaps jge mov sub je js push push inc add xor add lret add insb push cmp test lea rcrb je test or stos lea mov outsl add movaps inc sbb sub sub ficomp cmp data16 mov sub add movb mov scas pushf cmp or or test incl cli add add mov shl mov lock neg and or cmp mov test jle roll pusha (bad) loop pusha loop adc and loope mov pop mov lds mov adc or adc call (bad) mov add jp imul fist xor add cmpb add adc clc and xchg in pop jmp and cli call and mov xor sub stos add push inc test dec push je fwait test loopne push sbb mov xorb je cmp mov out test add xor pop xlat push inc dec in dec stos fadds popa mov repz into xor in sbb jo je daa stos xchg mov and inc in push pop dec adc pop orl and cmp out push mov movd adc xor xchg mov out subps movhps out out out push fist dec and imul sub inc and inc movhps sub cmc movhps xor jbe add and jp sub add or stos adc dec push das add fldl sbb pop mov sub add orl cmova sub add test je movzbl test push je les jl (bad) incl adcl movaps stos pop add movsb mov cwtl push ja push fisttpll repz inc add or (bad) notl adc call pop or neg std mov mov or ret add cmp out adc decb add or adc mov out ds mov je cmp (bad) pop pushf aas decl add test add fldl cmp sub lea push ljmp cmp out shr call loope cli ljmp repz cld psrld dec add mov rcrb push mov add jge inc lock and or or cld adc mov inc and mov sub mov out jle and sub lret (bad) dec (bad) xor lea shr mov mov adc and cmp jae je (bad) xor and je xor jno cmp jns mov decl xor or std (bad) fadd std test mov pop or xor or adc adc dec (bad) xor sbb sbb add add cld and (bad) jb jmp mov lea jl and dec xchg insb stc and sti call add incl pop and sub adc lret push inc xchg (bad) mov add xchg add icebp fistp bound jmp incl decl jg xchg fs sub test movb je xor mov lahf imul aas or mov pop add incl xchg jne cmp and sub add mov out cmp jb lea mov (bad) and push xchg add loop add mov leave je movsl aas sar cmpsb adc add push adc mov cmp sub xchg sbb (bad) lock cmp add rcl rcl lea mov test addl jge dec (bad) jb jmp aas subb mov ja mov jmp fimull test lea nop add mov incl push and call jmp xor jmp or add push push xor or or add clc mov call add push (bad) jg jbe mov dec and lea cmpsb fnstsw push lea out cmp pop call into aas stos aad add scas lea jg fmuls xor inc pop mov call cmp mov das sub or adc pop mov iret add hlt and loope icebp out call jne add clc (bad) decl es adc pop pop or lea jmp pop or jg or adc adc sbb pop js or shlb je and inc inc es adc fnstsw add js mov mov pop cwtl int test pop cs fwait dec loopne aam dec adc mov push push es push push add lock xor mov and mov aad pop stos out or lea mov fsubl cmp iret mov out mov adc arpl jmp orl xchg out mov sbb or pushf or je push orl orb lock jbe adc jae sub fisubl add decl call imul outsl lcall push push clc enter jp test pop xlat and es into lds push ss cs sarb out pusha or sub cmp mul fiadd mov jo dec mov jg inc pmaxsw or push pop push mov jl inc cmp sbb and inc cs scas imul and sub sub add mov loope mov adc push mov sbb mov jo movl or inc mov inc shl lds ja lcall loop jo fbstp sub movzbl loopew out push (bad) jne add cmp inc cmp inc pop push sahf js mov cli loope sbb ja xchg jb ret jmp mov lea mov push pop cld sub (bad) loopne sahf mov stc sahf jb mov sbb pushl sti jo or sbb adc sarl inc (bad) mov xor lea mov (bad) sti lea mov sub pop push jge fild movl cmp jb jge mov adc lea push std pop inc adc jae test je scas sub dec (bad) aas cmp je inc (bad) fild incb push je mov mov add add cmp jae lcall cmp or adc mov (bad) and xlat jb push jmp xor pop fldl test add jle testl dec rdtsc shlb pop (bad) adc cmp seto mov add mov jmp pop arpl out loopne push jmp add or xchg out in inc push int3 mov push fcoms pop mov jnp inc cmc and ret jg in sbb add test pushl mulb lds add or mov call sbb data16 jo pop imul mov outsl cwtl sbb pusha roll lock xchg dec push pshufd fsubrs cltd movd adc call roll fisttpl lock movzbl sub mov movzbl shr sbb and xor xor dec add fcmovb ljmp out cli mov sbb dec add ljmp mov shr (bad) out out popf test aaa movzbl loope lret mov inc and inc dec rolb scas stos ja add mov fwait add jae std aaa cmp mov mov xor inc jl ss or movzbl (bad) imul and adc adc scas mov movzbl xor mov out adc lock fs add punpckldq add pop pop punpcklqdq pop pop add xorb iret ffree pop ss push aas sar in enter dec or movzbl movzbl (bad) outsl js push sbb add fmuls mov movzbl sbb mov push pop mov ljmp movzbl shl or sub idivl shl int mov sbb arpl pusha or jecxz or movzbl (bad) (bad) jecxz ror rcrb dec fimull xor ror out aad pop cld or out cs icebp loop push aad add repz fdivs dec test rcpps fcmovu scas fildl (bad) std outsl and into and mov sub push ret sub (bad) adc dec or add inc mov lret leave sbb mov shr pslldq inc dec or sbb xor inc daa test add jl or or pop out lock repz or and (bad) or ljmp jae in lret mov or jo hlt out int3 jp adc (bad) out lods outsl rcrl stos sbb jo stos sub fnsave popf sub outsl (bad) movaps or xor and out fnsave je insl out icebp fs push (bad) push movaps pop fdivrp sbb jne jle jle shr rorl mov movzbl add mov push jo std push shufps enter pop shl dec sbb or and dec fldenv xor or adc push inc cwtl popa and add add cmp enter adc dec lcall (bad) stc clc faddl jmp lcall sti xchg lock out push out cli adc inc loope loopnew call mov dec add xchg adc std inc int sub or adc jmp out jmp mov push fnsave test repz repnz add cmp push push incb js xor push test and test orl scas sbb push pop bound out je or (bad) push outsl adc xchg mov jae outsl cmpsb popf cmpsl clc xchg out movsl jge (bad) call jne loopne mov jo mov lock lock loop dec outsl faddl mov push push jo popa inc aaa or arpl jle push push inc xlat or adc push xor lret lret dec or push div push xor mov cmp leave xchg (bad) pmaxsw pusha jb (bad) icebp or fadds into push cli push sbb mov cmpsb scas out adc inc adc (bad) divl ficom (bad) call mov (bad) imul push and inc aam sub add mov or out aam push or out xlat push ljmp push add call aam fiadd add jge cs mov outsl xor mov ret cmp into add fsubs ret jne jo repz mov jnp sbb fucomip arpl cmp call cmpsb mov cwtl addr16 aam mov inc jae aad jp iret cmp pop out gs dec add cmc sub movaps inc add xorl repz xlat push out or xor jge sbb ss fld (bad) sahf mov adc outsl mov testb sbb mov jne push shl adc dec sbb fldt jo in dec lods sti jb xor arpl mov out loope shl int3 in in outsl negl ds sub fnsave push mov shrb or cmp mov sti jmp cmpsb jo shrb inc lds fwait ret je (bad) jmp xchg jo xchg cmp addl nop adc (bad) outsl bound fsubrl icebp rorl sbb out call insb call fsubl outsl mov jmp imul loopne int3 jb inc inc mov pop add nop add mov push test mov test dec lock cmp test dec mulb cmp xor xchg in inc sub (bad) movsb adc das push int xchg mov pop sbb xchg push mov mov or mov or inc sub pop movsb loop mov jbe into cmp je insb fs jle pusha ljmp cmp push inc add cmp cmp fcomp pop xchg xor cmp and sbb add or daa daa addr16 cmp jl je fs daa daa daa pop push dec inc cmp jnp and aaa push je insb push cmp cmp fs push dec fnop xor and xlat push insb or fs pop push dec (bad) sahf arpl inc jns push je daa daa daa and push adc dec inc jl fdivs aaa push jbe insb adc leave leave fldenv push dec (bad) xor inc cs arpl insb adc push pop outsl call and jne inc inc mov decl sub movaps movaps movaps movaps out movaps leave ret mov jmp outsl push push mov push sub movl add lea and add cld sbb add call icebp fistp lock lea mov lahf adc push addr16 jns inc (bad) sti ja movsl mov adc mov or std cld mov call cld mov call lock add out xor jp add and add cmp mov idivb inc stc inc mov call rolb loop pop pop pop xor jmp jnp shr pop prefetcht0 cwtl sbb (bad) test jns cmp pop pop pushaw sub dec pusha outsl mov out clc nop test pop pop lret pop out pusha sbb sarl clc pusha lods push addl cmc jo incb mov lea dec loopne and xor sub sub pop add mull jp int3 or inc sbb xor adcl and iret push or xor pop xchg daa add adc sahf arpl push mov sbb outsl push iret (bad) mov push addl iret testb dec roll movaps movaps push jle decl sub movaps in lock jne bound je fucomip mov in sub cmp jo jne mov mov mov movl cs mov je,pt adc sub (bad) decl call mov push xor mov xor mov mov xor pop add mov xor and pop std mov xor push insb mov xor xor mov mov xor adc out lcall movd mov xchg add test scas cmp xor or out sub mov pop add clc stos xor cwtl xor fnop (bad) fcomp push out out lret and or jne push or lret pop add add ret mov mov mov adc insb jle mull add push push andps jle lds adc mov mov add loopne add dec and adc inc mov xor mov pop out cmp push and push cs push out outsb jle pop cmp out mov stos ljmp enter jp adc push cmp adc (bad) loope pop jl sub jle xchg out push pushl adc jno,pt mov and rcr fild xor sub ja jb push cmp mov ja dec ja xor xor add adc adc fiaddl push ja adc aaa add xor mov sub clc or enter mov lcall (bad) xor and xor subl rolb inc aam (bad) mov pop and insl loop dec and xor and add std or sub decl mov push push je sbb jno repz lea jmp xor or or jg mov dec mov cs rclb pop xor scas dec adc inc jl mov (bad) call lea add adc mov and call fsubs mov mov mov inc call fwait sbb bnd xor das loopne mov xor xor mov xchg sets jp mov shrl test jne xchg mov loopne cld mov dec incl je js dec sub lahf cmp adc lahf sbb push sub cmp xor xor je inc sbb inc cmp pushf inc movsb push adc (bad) sbb push cmp pop and and insb sub mov mov jb fidivrl sbb xchg in and push xor xlat cltd mov xor cmp push jg adc int sub and es pop sbb inc cli js loop cli arpl outsl or daa or inc and mov mov loopne adc and movaps movaps adc outsl sbb add rcll cltd movb aam jae push sbb push aam sub popf and pmaxub or addps inc cwtl dec ljmp aam adcl cltd (bad) fcoms dec dec mov mov add adc mov xor jb push add inc push cmp ja loope xchg test push inc roll dec dec lahf and and pop dec pop xchg lcall push add pusha dec lahf jl push sbbb popf xor mov adcl cmpsl aam ret into shlb and daa xor adc jo out mov mov xor pushf sub or inc pop sbb fs xor ss or (bad) imul pcmpgtb loope shrl pop inc add and cmp pop mov xor mov cmc pop pop ret loope mov bound pop inc push (bad) or sub sub clc aad or pop loope add outsl inc dec pop push inc enter loope inc orl add push adc popa xchg rolb pop xchg cmp lds xor mov jo xchg add inc add ds xor xor out lret jne je and aaa mov call mov and inc mov push mov push mov cmpsl and fisttpll cmp or (bad) movzbl and inc and es pop and and call push or movzbl mov (bad) out incb loope mov sbb xchg mov scas mov lahf adc adc push or adc or inc cmp scas add inc xor inc scas mov in and hlt sbb sub inc mov sub les cmc push and (bad) adc or mov scas sbb test and mov aas scas sysenter test push and or sub or inc xor mov rolb inc inc mov cmp fwait dec mov mov lds xorb or add test add lea mov jbe mov mov mov and mov adc test dec and sub inc cmp dec sub and push pinsrw fsubr rcl mov and out mov add inc jg xor and data16 add ds adc adc adc pop add outsl inc pop lds xchg push dec push in mov stos push xor cmp inc pop sub add in adc les leave adc test adc jl sbb cmp sbb jmp iret add (bad) loopne fisubl adc add call inc cwtl jo lea pshufd mov cmc push movd jle dec or out test aam or and xchg and sarb fst jne cli movzbl or sbb cld es jle and pop mov jo loope lret xlat lds jp (bad) or push cmp or test or jge mov xlat inc mov sub repnz mov aam sbb je sbb dec add cwtl lea testb adc or loopne or push enter and mov lods cli fstl mov jo inc out sbb test fisubl push mov jne mov mov or xor js or jle xchg int3 orb mov jo mov mov movzbl sub int3 jns out xor iret shr mov notl mov movzbl fldenv movd lret cmp leave imul mov mov or mov dec mov sbb adc cmp je movzbl inc push loope push mov pop and shr sbb dec add sbb lea test sbb cli mov sbb mov xor add inc jl in (bad) xchg punpckldq add jno jp or mov jo imul repz scas jmp xchg sbb movzbl xor pop mov mov lret int rcrb mov rcrl push adc lea dec aas xchg mov (bad) hlt cltd roll out xchg and je fld jmp add xchg fs test jae lds divl mov push shr (bad) lock cmp mov shl jb jmp pushf sbb jg and movsb jo aaa leave push outsb jno cmp xor nop sahf fwait dec and jg movsb cmp mov cmc inc js xor (bad) call and push pop xor test dec pop dec push add insl lret shr daa mov and clc pop jb iret sbb xchg or imul sbb rsqrtps outsb (bad) loope add fcmovnb pop adc add mov ret mov push pop and push push js into loope mov jno jb (bad) dec and mov shlb mov push rorl push xchg outsl test and add or sbb mov inc dec sbb dec inc testl or sbb fxch mov jge add loope dec cmpsb dec add std add mov mov mov in or (bad) and or cmp jecxz push add fsubrl dec popa inc inc js dec stos dec mov fcmovb xchg sbb and jo pusha add dec aaa and addb or dec lock test pusha inc cwtl xor aas outsb in push cmp repnz add adc ret sub enter pop (bad) loope inc push aaa adc jl dec ret xchg xchg lahf in push lds pop inc in leave adcl jg dec movsb add rclb out sub jl movsl test add pusha dec inc les ret xor push push sbb divb and xor ret or pop add ret and xchg jnp andl lret jb in (bad) pusha xor dec out adc cmova mov ljmp fdiv mov push movzbl test cmp dec rorb mov idivl xchg popa pusha daa fidivrl pop ljmp mov inc imul or js jb mov add sub push rol dec dec ffree mov je mov xor mov or and xchg xlat xor jno xor mov inc pop add or into mov push add out dec mov ds aam adc pushf and push int3 inc outsb inc (bad) mov or push jo sub or jb test xchg jle jecxz lock jge jmp and mov movzbl ljmp xor aas mov es shr movzbl sbb pop sbb daa cmc call adc incl (bad) xor or jg sahf inc aas les sarl movzbl push or xlat cmpb push adc lods push outsl mov (bad) adc movzbl xchg adc pop push mov jnp xchg xor into cmp cltd cmp data16 mov jo push cltd inc fcmovbe sub mov test bound inc xor push sub add pop loop sbb fisttpl insb out dec repnz lret pop in sbb ja outsl insb and mov in cmp sbb pop repnz or sbb pop bound pop ljmp pusha andl xor leave mov inc ljmp and aas das pop add add and lcall sub xchg call or mov ljmp xchg jmp or pop (bad) xor xor insb (bad) xor sub scas add sbb push or fnsave stos mov popa inc mov xlat xchg jle pop addr16 jle sbb jae loopne insl jmp adc mov push aad fneni(8087 pop mov popa inc xor testl jmp ficoml cmp cmp insb inc sub inc mov adc sub (bad) pop mov subb or loopne push movzbl mov and xchg xlat rclb jl push int pushl sub jp arpl divl inc pop fsub or jb jo pop (bad) jle ret cmp or pop repz or add repnz test fist loop inc jo or xchg xor mov jo mov and and cwtl adc xor mov or aad inc bnd in (bad) rcll add mov push rcl ret mov inc add iret mov rcl lock mov das xor aam xchg arpl fadd jo pop xchg bound add das pop inc dec jns aaa loope inc dec inc insb (bad) fisubl adcl fdivs rclb dec add and andl mov int3 lcall call xor inc add fsubs lcall out ljmp jo adc pop mov jle xor or call dec xchg and shrb cmp loopne mov push das pushf (bad) xor call inc aas inc jnp sub adc inc add add icebp ret jle fsubrs ret adc cmp outsb and sbb push rcll fcoms push or pop mov cwtl jae or js xchg jo inc push sub lret dec jb psrld sbb push aaa stos mov and inc and pop sti dec dec push mov or cltd mov xchg nop ret rclb inc cwtl mov pop inc adc (bad) mov es outsb cmp mov xchg mov (bad) enter add mov mov mov inc clc jo cli xchg ret pop mov dec mov (bad) or inc daa inc jp dec sub or mov rcrl jecxz sub mov test cmp xchg push (bad) out cmp xor sbb test xor add bound pusha (bad) jecxz or push xor or call mov or sub stc in call mov push arpl dec cmp cmpsb sbb hlt clc int jo cmp dec sbb add jo popa sarb add ffree ret repz sbb (bad) mov (bad) jae or or neg cmc cmpb out pop cwtl jnp pop (bad) cmp or test jo add fwait andl dec xor xchg pusha lds jle jle test les mov fadd int lods movsb and mov pop and loopne fadd cmc (bad) mov cmp mov aaa (bad) dec lods or mov dec out add out jl or ret pop mov xchg inc push or rcrb test adc sbb sub loope sub inc mov inc dec sbb ss jne pushf and mov es (bad) sti stc movzbl adc adc inc adc adc jg sbbb adc popa sbb cmp push xchg sub mov aas out loope (bad) movzbl inc cwtl outsl popf ret mov and mov adc push mov stos pop iret lods sbb out sbb dec xchg fsubrl xchg or fidivl or add fldenv lret xchg adc out (bad) pusha mov fwait sbb mov pop movsb cwtl jecxz xchg dec jae xor fcoms sbb xchg fwait xor xchg shll xchg popa and pusha inc dec ret out adc insb es xor loopne test or xor pop dec xchg cmp data16 sub arpl pop adc mov idivb jbe pusha into int push dec dec xchg js out sbb add lods push ret add cltd int dec outsl fadd push mov ljmp movzbl push std outsb and xor (bad) insl adc push mov mov and or dec inc stos daa int3 mov dec popf int xchg jle test mov sub jle jns jne gs stos jno sahf xchg mov xlat ss xchg mov movsb dec mov dec fisttpll xor mov lods xor adc mov inc (bad) (bad) std mov js adc and dec mov push (bad) jo ljmp inc ret and pusha sub push jle and mov cltd mov inc mov dec inc cmp test test or fldt (bad) and enter adc fcompl sub push outsb das mov loope cli std aaa adc popa les mov pop and pushf pop ds pop (bad) dec inc push xchg push adc sbb push xchg out mov adc xchg popa xchg xor push xchg pusha mov je lods outsb push cmp add or push outsb fcoml fmul (bad) or popa xchg test dec movsl in or or orl xor dec pop xor pop lret jge push inc adc push and leave enter ucomiss ja cwtl hlt rol mov rcrb aam dec pusha sbb dec fsubrs (bad) mov (bad) lock popa mov adc jmp xor and test notb mov imul lock sub inc ss cmp or stos dec cmp sbb and xor or mov or mov or es je xor cmp pop dec xchg and es mov lret pop cmp lcall addr16 dec aas xchg jle mov test fstsw jnp imul and insb dec loop out xor arpl gs mov popa push outsl fs popa popa rcrl ficom pop cmp pop or fwait cmp pop mov cwtd nop cs push int3 push lods lods mov or rcl pop or xchg inc mov shlb xchg (bad) dec and hlt mov add mov outsw fs jnp gs cmp orb test ficom outsw cmp ss ret dec cmp or dec and ss mov es xor or mov push mov mov xchg mov ljmp push fldt lret adc arpl bswap popf xchg out inc les mov stos cmp xchg mov das cld push and ss or pushf cmp ret dec or mov mov in mov hlt and (bad) jge mov sbb or sub jae dec mov pusha outsl inc ror sbb push fstl and movzbl xchg popa into push dec inc adc lock rorl mov mov inc adc mov push xor jae loopne std or mov dec adc nop inc (bad) movzbl sbb lock sti lcall leave add or outsb push idiv rorl adc and in imul mov (bad) repnz inc and jmp inc out ret lret dec inc cmp shlb xchg pop cmp lds xchg enter (bad) and pushf movzbl test lods cmp out sbb mov adc (bad) push inc mov mov push rorb rorl ret incl movzbl mov mov or decl (bad) or addl (bad) mov outsb jge adc (bad) jne loop or xor subl and sbb arpl jno sahf test fmull mov sbb rorb inc ret adc (bad) add xor cmp mov pusha es jg test movl add dec inc xchg (bad) (bad) fsub mov cmp fidivl mov ret and insl loop in out mov dec add repnz adc mov xor negl mov sbb mov jo mov push test (bad) daa mov test mov sbb inc add xor push sbb mov je movzbl pop cmp lock sbb dec or (bad) pushf int3 enter addr16 or dec int add adc jle icebp or or mov sbb fcmovnu insb ret adc loope mov out ret or ret popa (bad) imul xchg or lods (bad) outsl das loop ret mov les jnp jne test test (bad) jne jne mov adc les aam jge inc adc dec jge das and push jge js xchg mov insb es es mov pushf cmp sbb stos sti mov adc sub insb cwtl out inc sbb (bad) jno add lock loopne inc sbb mov out xchg adc cmp xor add mov jns mov cli mov or lock ljmp pushw inc cmp out imul les cwtl xchg xchg dec jp sbb mov adc outsb push in cs xchg ret or adc lcall lods pushw cmp and pusha pop (bad) mov sahf sub sahf and mov and dec fs pusha cmp and inc test add mov inc ret cli push and sub inc outsb pushf scas outsb and outsb and pop popa outsb movsb push add adc loope,pn gs sbb leave jo les xchg fisttpll cs inc mov or sbbb mov test dec fwait in daa xchg mov imul ja stos sbb ret fmull and aas orb push sbb fsubrl (bad) mov outsb xor out jnp or mov add inc xchg mov shrl clc inc pushf xor mov movsb or mov sbb xor dec hlt add pushf cmp lock or push pop (bad) mov cmpsl fsubrl sbb jo je mov add (bad) mov (bad) enter adc rorb push or pop sub or mov insb pop cld xchg mov aaa push dec or mov inc inc lods sbb outsl push inc es (bad) jae xor mov adc mov inc cmp inc test ljmp push int3 pop dec js (bad) adc into adc test mov xor les adc adc call mov sub push add jne mov stc (bad) call sub add ret xor xor xchg lods ja pop jnp test adc adc push notl jmp and mov dec jl add and shl jnp adc cmp mov push inc out popa out push push inc loope ret dec js pushf mov test test jo mov xchg clc dec xor lods fwait sbb sbb stos test sbb mov in std or insb hlt (bad) pusha cmp call sub sub jbe and cmpsb push cmpsb loopne push jp sbb out mov and jbe inc xor sbb pop xor movsl negl pop sub xor push mov jg jg popa in aad mov add xchg lock test xchg pop add sahf and cmp and (bad) sbbl sbb mov cmp ljmp adc push dec jbe sub push arpl in clc jmp ja shrl jbe or push pop adc and addr16 sbb dec and push iret loopne sub inc adc adc test cmp push adc data16 cmp jbe dec loopne pop dec jne ret adc insl cltd pushf jecxz test inc popa cmpsb adc lret and cmp and xor inc vunpcklps push mov movsb mov jl in mov ret stc test mov fmull sub inc js push adc inc pusha js lock dec and or into imul rcr jne dec sub dec inc inc push test bound and mov jmp imul xor aaa xor and les and popf je push sbb mov mov mov jne cmp push bound add lock pushf js ret ret js js push (bad) adc out push cmp sub or sbb adc and movsl test jnp pusha out jne dec sub dec fsubrp sbb nop and xchg popa outsb das fs dec js mov test ficomp push test test addr16 xchg xor ss test dec lret das mov outsl shrb (bad) call and push nop (bad) loope fisub pop mov out push adc adc adc jae push inc adc ret out sub (bad) jnp inc test jb sub jb insb dec int push sub adc cwtl xchg xor or adc cmp mov aas push and xchg test xor sti or movzbl adc jae dec rorl xchg sbb cmp mov into imul dec adc pop call xchg icebp xor cmc ljmp add mov imul add mulb movzbl mov sub movzbl pop add mov loopne aas dec mov shr aas mov stos or mov movsl jmp sbb jbe mov push sub sub sub dec or pusha adc and cs sbb int iret enter pop call ret popa inc push push lret out sbb (bad) adc push dec call mov add icebp call daa mov outsl dec call enter cmp call ljmp push xchg push (bad) call push xor sarb adc test call das or call cmp fdivrs adc push fsubr cmpsb push adc push fsubr xchg adc das fsubr push (bad) testl jecxz dec sbb jae xor mov mov push push aaa mov add fsubr adc cmp and das mulb pop dec push fdivrs sbb call call enter fsubr cwtl push fldcw or mov call fcomps adc push push into inc loope popf adc (bad) mov lret orb jns popa nop movaps cs mov mov inc and out or lcall movaps movaps movaps movaps movaps or mov ja inc adc xchg xchg add push out mov add or xchg mov inc movsb or popa adc and mov xor mov pop test fadds add js loopne push jnp inc add (bad) inc mov andb sti push bound xor add adc bound and push fnsave jnp pusha mov or inc dec lcall lods bound imul in cmp and rcrb mov mov sub sbb nop or adc add (bad) adc mov loope sub xchg lcall in adc fistpl adc cmp test or sub pshufw add add add bound imul pop cmc sbb cwtl (bad) bound movd add push mov adc jo inc mov pop jecxz adc mov jmp jle psubd pop mov or xlat sbb shrl movsb cs cmpb push jb ja into add or mov add test push dec pop ljmp cmp mov push or movl orl (bad) call push xchg jo rorb push add outsb xchg test xchg inc pop adc mov daa rclb sbb add orb dec cmp xor lret movzbl into ja adc lds and or or rorl fmuls adc jge push nop fsubs cmp push xor movzbl orl imul and or push insb std mov mov jne xchg push ss sbb in arpl ja mov add sahf mov push adc push cmp or sub or push pcmpeqw dec andb xchg nop fisttpll mov dec inc inc outsb movsb shr cmc and push push cmp cmp bound lock and dec bound push (bad) call out pusha add add push out test enterw test sbb and pop sub outsb in data16 or and pop dec add push xor sbb jo jecxz pop bound mov push data16 rclb ljmp movsb shll adc xchg adc test sahf cmp sti cmp adc in add lret icebp xchg inc or xchg cmpsb push mov loopne xor cmp dec jecxz cli xor addl adc lds dec sbb lret mov loopne push add dec adc (bad) movl std push add (bad) push les adc into stos push add test cmp subl cmp aam or test jno lods aas (bad) cmc inc xor mov ret loopne and xchg xor add bound popa loopne push cmp and movsb outsl andl lods jo adc mov pop mov mov sub pusha aaa push mov out fcoms ud2 js in roll pop push cmp cltd xchg call xor roll and shr sbb pop add pushf test (bad) pop cwtl jo or and enter xchg mull xor pop push das pop inc mov js fdivl mov or test (bad) jo mov fsub stos mov enter mov ja int imul xor mov test dec nop xchg and cmp jge in mov sbb mov rcr add or and fmull das or lock pop dec sbb test or cmp and cmc repnz cmp and js adc iret ret sbb inc loopne (bad) or je inc arpl call push lods mov ret mov inc mov mov mov (bad) pusha and sbb les mov sub lret add test (bad) xchg mov pop cmp xchg les stos push cmp cli xlat or jae adc outsl fwait mov mov or fdivrl lock sub push push rol sbb or (bad) call dec push out roll mov add mov adc dec cmp js or push dec mov inc jo das or fsubp lods in pusha dec add or sub test or dec adc dec dec add push inc xchg mov aam inc push or das test cli xchg ret xor dec pop dec inc push xchg lods mov xor mov dec pusha dec pop les adc adc or xor dec jmp pusha js dec mov repz orl ljmp dec pop dec or dec sub push and outsl or dec adc and test push adc jae and or nop rol and bound sub mov (bad) or and mov adc or jo (bad) dec popa cmp addl dec (bad) test dec jecxz pusha mov (bad) test xchg loopne pop or fidiv add test daa nop adc loope xchg fwait test mov dec in je jo mov loope dec pop and inc test jecxz lahf xchg adc jo xchg pusha inc xor bound cmp jo xor sub and (bad) jo mov adcl adc mov mov gs enter and cmpsb in enter adc mov push add push cs or jecxz pop push jne mulb push ret xor movl test mov mov sbb or inc adc mov int cmp call mov and enter jmp and sbb fiaddl fcoms dec jle mov jmp les cmc adc lret (bad) mov sub sub and inc movsl cmp or or pop or inc push xchg mov enter mov mov ret out mov insb pusha mov push and xchg mov add add inc stc dec dec jne pop pop ss out cmc outsl add or add mov xor mov pop call clc stos xchg gs push imull push (bad) push arpl insb and mov xchg jae push lods jo sti push sbb add idivl sub mov in (bad) hlt xor cmp mov mov xor pmaxsw xchg jo dec cmp (bad) mov lret or cmp mov pop int3 jg jp and fdivrp or xchg or mov int3 add insb and ljmp outsb or mov (bad) lds inc cs jb add inc and push push out adc mov adc cld fildl push xchg bound fisub adc pop mov popa fs hlt pop cli inc icebp push add and cmp inc cmp and xchg andb or pop test cs adc repz cmp mov fisub dec orl xor xlat jecxz rol dec out repnz (bad) add fisttpll push mov mov movzbl sbb inc or jmp inc inc movzbl in popf cmpb cmp adc sarl decl add hlt cmp dec into nop jle cmp test scas cmp push idiv shr jp adc shr adc loope dec rorb push (bad) les adc sahf dec sbb pusha pop sub jnp lret mov add mov mov and xor adc adc pusha dec xchg xchg sub dec cmpsl xchg dec cmp inc mov inc mov rorl bound das and jns jns adc test pop xchg adc add xchg es loope inc sub xchg sub lock dec lcall or or lret popf push lcall inc and xor js movl rcll or xchg dec xchg xchg sub test dec sbb sub jae adcl lock test adc inc add mov mov dec and inc xchg sbb xor xchg mov pusha pop and xchg xor or cmp and icebp jne (bad) xor xor cmp mov xchg nop dec fiaddl xchg add iret (bad) mov sub adc sub leave pop rol daa cmp xor cmp das popf or movsb push fidivl adc jo push or and ficom cs or push loopne inc sbb cmp mov loope sbb add push sub testb sahf lds outsl pop call fwait sarl push cmpsb call jnp adc sbb cmp (bad) push mov sbb adc jle call adc and call and jbe call lds test push aad push sbb add cmc int3 lock negl pop aaa sub outsl movsb or xor cmp imul jo pop ficompl enter add adc and xchg push mov or inc frstor bound mov and push adc jbe aad mov mov lods pushf mov mov aaa pushaw ss jo pavgb pusha jo pushf mov mov gs cmp pop decl mov cmp rorb jo stos rcrl jge sub jle std sbb sar inc pusha pop mov dec (bad) je push adc sbbb jo stos sbb push jle cmp push xchg pop xor mov mull xchg inc mov rorl ja xchg test and push roll leave xchg test mov lret push sar gs rcr jns fildll and jmp repz inc rorb pop outsb movsb xor mov cwtl or mov test (bad) ljmp (bad) insl mov (bad) fisubrl inc int3 sbb pop movsb outsb adc jg push pop lods cmpsb (bad) cmc (bad) mov fcomp push mull insb out hlt mov mov pusha testl pop jle dec pop ror ret dec jmp fisttpll (bad) adc cmovge mov hlt pop cmp adc (bad) cmp pop loopne cmpl xlat imul add xchg or dec cmp je loop test orb adc outsb lea lret sti pop (bad) xor sbb add jo pop (bad) inc mull add mov (bad) loop jae or punpckhwd into mov xchg imul mov mov fsubl sbb jnp es dec push pop (bad) aas fs int3 jo cltd sarl jge or and outsl pushf and and out popf bound jo,pn je dec (bad) aam ret (bad) mov or add mov loope pusha repnz inc jo sbb push out shrb dec or int dec jae mov pop mov mov sbb or roll icebp les xor jae sti hlt (bad) push pop icebp and pop ds jg inc sbbb jno lcall stos mov leave mov jmp and fldl inc (bad) or cmpl adc shlb dec int3 cmp cltd leave xor mov mov out imul jne inc icebp shll aad in call bound std xchg add xchg out adc inc mov or in sbb aaa xchg cltd or lock out sbb nop mov mov daa inc leave inc int ret ret inc std inc aaa lret cmp mov add bound pushf lea lret pop push cmp adc pop test outsb inc adc mov add icebp cmp rclb loope bound (bad) add lds xor mov push add insb clc stos fwait ret pop popa cmc out sti lahf fs mov dec mov xchg iret lds movsb test aas sbb ret and adc or inc popf fnstcw inc adc push rorb mov mov pop sub inc jecxz (bad) call sub gs addl and notb cmp cmp mov fisub dec inc jmp mov (bad) mov mov leave lods fsubl cmp iret xor sbb fidiv stc int mov shr adc or jne inc sbbl insl pop call add push cmp push mov or push mov (bad) inc lods xchg loopne adc xor lock push push aas faddp xor mov arpl dec mov inc sub cwtl xchg or xor bound cmp dec mov pop adc inc scas daa fistp mov outsb push andl pop out addr16 and (bad) mov test or push shlb xchg dec fadd add cmp js sbb dec js push pusha push movsb fcompl push ror movzbl xor dec jns adc lock out push outsb shll xor stc pushf push inc in ret insb cmpsl adc jnp and push inc stos and loopne pop push enter xor in push push jo jo movsl rcll dec icebp pmullw mov jmp bound jo jle,pn sbb add call loop aam sete movsb into in movsb fsubrs pop xor or add adc adc jno pop add jle jmp js jp dec fnop scas or movzbl push ror and xchg inc mov clc and pop mov movzbl sbb sbb xor leave test sti push dec dec rorl push and pop imul mov push cs mov mov cld xor test adc fcoms cwtl mov out or inc je adc push adc jo jmp and loope jno dec inc int3 dec inc (bad) xor call in jle push nop loope pop (bad) (bad) lock add sub (bad) rorl xor xchg mov fdivl test paddb inc ret aam xor out jb jnp ret lds and dec pop aas lds add insl add adc and mov lds mov cld adc scas fiadd idiv jnp adc into add shrl (bad) xor push xchg rclb mov sbb (bad) mov inc mov adc adc cmp dec dec add (bad) movsl jle push jo add jo aad jb nop dec jecxz push fnstsw inc call cmp push dec adc xor popa mov push cmp adc das lods pop cmp or xchg cmpsb cwtl inc aaa test jb pushf leave mov and leave mov push and pop outsl cmc popf dec je test movsb dec pop sti imul inc inc pop or aaa xor pop out sbb aad sbb dec out aad dec imul adc sbb (bad) ficom (bad) shlb xchg jle test mov (bad) rcrl xor sbb jle fadds lods sbb inc jecxz sub mov inc (bad) (bad) xor jo dec gs arpl ret outsb hlt in jb ret cld test sbb xor push inc push mov pop imul pop bound outsl mov inc hlt adc rclb pop or out jo loopne dec mov into cwtl in push jle roll add js jb outsb cltd jb and es daa movsb and ljmp dec cmp lock add inc test xor pop pop xor test imul adc cltd or ds fldl jp hlt push cmp xchg lods scas shrl push or adc push jne into and pop jae and or xchg fsubrl xchg mov push jmp es or jo and outsb inc add rcll xor pop push out xor mov bound inc or imul xchg pusha dec or insb inc jae adc inc test ds inc sbb jne mov xor outsl lret loope or mov js or adc loope int push adc ljmp imul sub loope out adc shrl jecxz cltd mov add add mov icebp push dec jb cmpl adc lret sub (bad) xor jns test sub pusha cwtl adc lods or xor xchg sub sub lret pop fwait mov jo fwait lock push subl inc and add pushf push push xchg rolb (bad) jae mov dec loop (bad) and call dec ret pop dec sar sbb inc dec test cs jo scas jp cmp pop testl push nop adc shlb and divl cmp lock sarl bound mov and sub in sbb es bound out cmp ljmp imul mov push pushf outsl mov jl jae loope or out adcl xor popf mov jp xlat add or insb dec xor test inc push adc mov add xor popa push mov xchg rcl in xchg insb dec out test push sti add jle inc mov jnp mov clc add test and out sbb inc jb es test cwtl or lret cwtl and mov (bad) pop add (bad) xor out orb pop nop lea xor andl dec dec xchg inc andl insl outsl decl cmp inc cmp sub movaps loope inc movaps movaps movaps (bad) inc cmpxchg8b sub cmp movsl test inc jo stos lds or or inc aaa push cmpsl stos and notl push lea add lea lret sbb sbb shll cmp fimul mov and push in inc mov and adc push pop and fcompl sbb (bad) loopne out dec call add or addl fimul xlat sub sahf jae stos push decl stos push mov inc dec clc mov scas and mov movsb adc adc push pop mov and push out sbb dec pusha sub xchg sub xchg mov mov lea push popf or pop mov pop jne cmpsb in adc popf pop xchg test mov cli nop andl cwtl xchg fwait adc cmpsl and in out add jle fdivs call push stos fdiv push (bad) (bad) arpl sbb dec dec jo xor pushf arpl jne out push pusha rorl or fstpt dec stc xor fmull xchg movsb scas icebp push cmp inc sub in shrd into in out add push je aaa xor sub dec idivl pop inc cs mov jo and and push iret std sar jb paddb pop lods andb sbb adc into push pusha or ss dec jle sub cli in adc aaa std cs and push (bad) icebp or repz fisttp pop fwait add lods orb pop mov add or cmp inc jo sbbl add je push movzbl mov mov mov les inc out sbb movsb and push cmp xor fdivl push adc rorb rol (bad) jno loopne leave adc addr16 das fmul popf dec xor mov jno adcb adc jb mov mov testb stc inc xor les (bad) rcll pop xchg pusha rcrb out stc stc mov inc adc inc xchg mulb xor ret lock jge inc push mov sub xlat hlt ljmp and je push cmp adc inc add and and xlat jbe js jne pop inc jle add inc sbb sub lret mov (bad) jae gs ud1 getsec leave movzbl sbb sbb mov negl jbe jbe mov mov cwtl sbb (bad) sbb dec xor pop xor iret push inc push inc das inc xchg dec jns jecxz mov leave sbb (bad) jnp and cmp lds shll xor sbb rcr push xor jno mov pop mov xor jo xor ret movzbl jo orl out sbb adc pop inc stos enter xor lock stos jne int push xchg mov es and dec into addb js testl adcl jo or es in sub (bad) popa ret ret in lea lcall lds int3 adc inc mov fwait ret in adc std push cmp mov and push (bad) jmp push insb rcll lds dec outsl ret lods (bad) mov lock into xchg mov loopne jo ljmp jne add pop xchg cmp fs sbb loopne stos les sbb or addr16 xor mov xchg xor out sub pop sbb loop ret addb pop mov aad inc jo or xchg mov inc nop inc push cltd fadd add inc xchg adc lds ret xor inc lcall mov push add or test jnp mov jbe (bad) in pushf jnp push cmp popf ret fidiv dec cmp fmulp pop xchg dec mov ss cmp or out and sahf cmp ss xor popa xor test adc xor and or ds mov lret inc movsl mov ret pusha mov cwtl jo pop rorl push (bad) mov jle lret (bad) xor or jle shll xchg or jnp subl adc enterw scas cltd loope sub push xchg cltd jnp imul jle xchg mov dec dec sub gs fcomps imul mov mov inc push xchg imul xchg push notl pusha xor test outsb and lods sub cwtl mov adc fmull and or mov fs push mov mov ror lea ret sub or fld nop sbb cmp popa das gs dec ss cmp pop fsubrs dec cmp mov test ret push inc push mov rclb push lds xor or add mov jo and mov add sub push sbb adc loopne nop ret jb adc cs arpl dec pop popa mov int3 fiadd sbb mov and cmp ret sahf leave subb js pop mov sbb pop xor popa das gs cmp out add inc sub das ret dec sub push out inc push (bad) jne sarb sbb les push in movsb js pop lods and gs mov mov movsb and (bad) dec push push or (bad) xor lods mov pop adc push pushf xlat in cmp cmp inc pop xchg clc movsl adc sbb sbb loopne (bad) push (bad) xor lds ljmp inc adc sub test add inc add pinsrw and pushf push pop rorl mov xchg and data16 fsubs push scas mov cmpb add test jbe jmp mov and mov outsb push xor pop cmp or push js mov jno jbe xchg shll shll xor xchg lret mov loopne push in test int out pop out ret jo insl rep push lret jecxz jno jnp rcpps adc sbb push jle sarl in out push out sbb adc clc jmp out testl outsl (bad) lret and addr16 adc sub mov repnz shr xchg sti popf sbbl mov jns js or adc xchg add popf inc mov inc mov sub add sub sub movzbl inc push jl mov ret std pop insb rcrl adcl stos daa and lcall pushf shrb in mov cld je inc out adc jbe movsb adc add scas mov inc inc sbb fwait add (bad) sub inc scas popf add cwtl fwait jl mov push loope add call sbb dec popf icebp ret adc cmp or inc jle jo sub dec nop movzbl jbe sbb add pop je mov dec jo dec ljmp sbb lds inc xchg mov jne outsb pusha shlb xor arpl mov jo and jo push mov mov movsb mov push sub mov push or mov cwtl sbb (bad) cmpsl sub (bad) sub sbb xor inc or inc mov sahf sub adc pop dec popa out add sbb js pop test mov (bad) cmp jo mov push push xor xor xor jns xlat fs cli bound cmp inc sbb loopne pusha cmp mov inc or outsb push inc stc sbb xor xchg mov lods or inc mov mov fiadd lea adc (bad) push inc fstp (bad) sub jnp xchg test jge inc dec or dec jge sub pop add xor jo jae add (bad) or leave dec mov dec jae mov xor or inc insb pop push inc and andl sub add (bad) mov das ja add sub mov scas int inc ds (bad) sahf and out sub pop mov inc xor add cmpsb and aas test jne or sub in movzbl add sbb imul sub outsb and sbb outsb mov sbb adc jp mov js cmp jl pop jo decl mov mov dec or pop roll or movsb lods sub loope and shrb inc jo sbb leave pop iret adc cmp sbbl loope loopnew (bad) test jns mov inc adc dec mov icebp or or and or add dec dec ret pop xor sub jo sub int inc loope add divl sbb lret int mov lock fdivs cltd and cld adc adc aaa mov inc pusha loopne movsl jne fdivl cmp and xor xchg je jo mov adc test sbb loopne pop xor jle mov adc jne movsb adc pop add mov je adc les shrb mov sbb add pop inc scas (bad) pusha loopne fsubs xor inc push mov mov lock adc int3 lock dec xor jmp orl sbb sub fsubrl lods and mov ja adc das sbb jo out push jnp pop mov or out fsts in jo jge xchg jno pop sbb (bad) lock dec pusha jo incl add pop clc stos mov pushf jnp inc jle outsl cmp mov (bad) imul out lds loope or lds sub push outsl jl and mov out cmpsb xchg (bad) lds push lds loop mov fwait push mov mov inc (bad) mov loopne iret (bad) mov je cmpb sbb test loope push test inc inc inc add ljmp repnz in mov pop fnsave lock je mov adc adc jbe cmp pop jo test mov movsb mov inc cmp push ret inc push dec jo in jl mov out xor push dec daa sbb dec pop fisttpll push dec test and mov dec pop jb or dec pop clc enter mov and push jb mov outsl sbb cmp out lds and or clc cmpsb dec cs out (bad) call pop sbb add mov sbb jbe jnp xchg lock jbe adc adc (bad) and pop testb xor push lret mov pop nop and jle push sarl pop xor sahf fnstenv in sub pop pop aam push dec loope test adcl jns pop (bad) xchg jnp subl dec int3 nop adc mov cmp (bad) hlt in ret mov cmp jbe loope add js in vmovups mov and adc dec and xor sub inc cmpl out mov inc adc dec fistl inc push mov nop and mov fdivs inc (bad) sbb or and or mov mov sbb mov es and cmc (bad) call xchg push fwait out lock push out pop lock and adc adc xchg (bad) lock js in mov jne dec xorl sub dec inc js push aad sub inc ret or js mov inc nop adc lret dec pop mov insl mov es cmp inc js mov sub sbb adc inc hlt or inc arpl and js mov loopne and xchg pop ret imul loope dec dec adc push ret jnp adc and js sbb (bad) (bad) scas fnsave pusha jo (bad) inc adc mov ds enter test pop mov inc adc and mov pusha xchg pop inc js test ljmp sub sub sahf jmp shrb mov iretw iret lds aaa mov clc imul jo sbb in lods xor sbb inc je inc or jmp mov mov xchg adc ljmp push xchg push add jae cmpl rcll jge sbb testb adc sarl out shlb xchg or xchg in imul inc dec ret pop popa or jle dec cmp dec and outsb add js cmp mov (bad) ljmp and mov movsb sub jmp xor (bad) (bad) push jne push sbb or pop push stos shrb sbb ret and movsl adc adc push dec push inc and mov inc cmp xor inc das fs sbb inc (bad) (bad) xor ljmp push and faddl push xor push dec cmpsl sub call sbb outsl clc push loope mov movsl call adc mov push lret call and in push dec call mov mov imulb jbe ret call testb inc call testb in call testl sbb outsl addl out in xchg mov sbb fsubr fistpl in dec out lea push xchg std xchg (bad) out fsubr popf push inc (bad) mov jle sbb das notb push adc push fsubr inc push adc push (bad) call push ss out or out mov (bad) lock das or push and fsubs cmpl push aam fsubs mov mov and call jnp sti fsubr push push xor (bad) call push or int3 ret or sbb iret andb dec fsubr std cs je hlt dec shrl pshufd shlb cmpl inc mov mov or fldenv cmp push xchg movsb and pop nop mov outsl jp sbb outsb (bad) jo rclb stos test jo jmp insb push jo por fldcw cmp sub jle cmp out sbbb adc test cs popa sub or fsubs icebp call jecxz lds jbe jge loope inc cmp in mov call test pop cmpsl xchg mov cld add add or add xchg (bad) test inc or scas aad rorb sbb pop cmpl pop push push inc pop shlb adc mov and dec test mov sbb add out test call mov add dec jp fs ljmp cwtl pop push lret push repz inc cmp inc lods cmp js lcall adc loopne ficoml mov movsb inc shr (bad) cmp pop sbb sbb add mov stc and mov mov test xor pop outsb cmpsb data16 icebp cmp xor dec mov xor (bad) cmp jb add sbb enter xchg xorl push sub cmp sbb sbb pop imul inc cwtl fisttpll adc das inc push sub test (bad) push push or mov ret adc dec mov push or (bad) xchg repnz push xor xchg mov add sub jne lret dec cs adc movzbl pop push cmpsl mull cmp lcall dec push pushf rcrb rcll in mov inc call push pushf xchg dec xorb push push adc hlt stos fs pop adc mov push adc or xchg mov fisttp cmovns sbb bound shrb cli cmp sbb aam or mov or xor mov dec jo addr16 or mov xor mov les sub mov xchg lock jg aas flds and mov call fstpl adc sbb clc inc adc jo pop fidivr xor jl rcl fistl pop jle fwait or out inc out ljmp test adc fimull popl adc inc stc mov scas dec inc lock sbb xor test cmp sub add xor ds (bad) add aad mov push mov push dec mov inc or jmp pop (bad) movzbl push or (bad) pop adc pop fwait mov mov or push dec out cli or jo adc xlat insb lds insb fmull xlat jne out divb pop das or loope icebp cmovnp xchg test subl movzbl mov and adc xor push addl inc loope mov sbb jo push add jo jne hlt mov mov pop bound stos flds in jo lahf xor bound and daa lock and call inc (bad) negb lods ljmp push add bnd addr16 lahf rcr out inc or ja or (bad) push icebp into lret push loopne sbbb push pop pop loopnew sbb xor inc (bad) and sbb and jbe lock pusha rorl lcall outsb mov (bad) jb or add lods inc jne shlb jno and and xor popa mov mov or fstps mov sbb rcrb insb fdivrs aam les scas xor mov add cs sahf jnp scas aad mov mov pop sbb cltd lcall add and xor data16 adc ds rclb mov dec jo imul inc imul xchg xchg adc push jecxz jnp sbb or adc rolb or ss cmp push test jb movsb (bad) add pop xchg jnp faddl jle rclb js sbb bound jbe stos scas xor dec insl lcall adcb xor pop or pop mov orl sbb cmp push dec pop xor xchg pusha dec and arpl nop mov pop cltd loope cwtl jnp test outsl xorl pop or ret rcll inc adc fs out cmp mov inc inc nop imul aad cmp jo ret pop inc jl inc aad sbb lock jae cli dec loop test add mov test or cltd test xor mov adc or (bad) inc std movntq or mov xor lds push mov pusha call ljmp ljmp sbb outsb add leave jmp xchg mov shll and push dec sbb sbb xor jmp or xor pop add lret inc add stc fs inc nop dec ss (bad) mov loopne and adc sbb cmpl lret daa decb leave roll in ret jbe inc sbb call mov xor add rclb mov loope lds (bad) mov lods or push push push pusha cmp inc (bad) jo xor and adc test ds add sub idivl in push sbb push iret inc push test (bad) shr (bad) dec arpl xchg and arpl rcll test xor or mov ds add andl adc test loopne inc push jl jecxz inc in lcall adc movaps movaps movaps movaps movaps push movaps mov xchg movaps inc inc ret das inc je push and leave add push sahf dec addb sub add mov push dec and mov sarl inc and orb sub sub addb sti jle push (bad) jo decl mov mov shll or mov pop scas arpl or add mov jecxz add pushf pop push jge adc sbbb mov testb and dec cs or push outsb inc and shr jp jo pop js inc movzbl aaa mulb in aaa inc std or dec mov cmp pop aad xor dec add xlat jne pop scas clc inc hlt cld pop xor xor xchg (bad) mov movzbl arpl imul and pop ds aaa in mov data16 (bad) repz adc push fwait pop xlat gs (bad) repnz outsl enter inc add add pop imul add mov inc scas or or cmp pop jmp (bad) idiv fiaddl xchg and or adc jmp add mov inc adc and dec jmp test or out and inc je or xor mov jae and or nop subl inc and mov mov push inc and jne sarl icebp sub (bad) rol (bad) jmp mov mov mov std sahf add mov pop rcll aam and and (bad) lcall daa leave fildll add mov incl add add jl adc mov std ret adc out (bad) faddl add call sbb inc lcall inc sub mov out add addl add inc adc jnp add mov dec mov xor fwait or out xchg adc inc fiaddl es icebp xchg shr jg dec or mov xor mov fwait mov xor jg push xor icebp jo mov and fnstenv xor cwtl inc xchg or fs rcrl shrl xchg inc mov mov and adc inc movhps xor add insb mov inc in cmpsb pop icebp mov and sbb (bad) push les add popa addl (bad) and mov sbb mov push pusha fildl sub pusha xor adc enter pop scas pusha iret push push push jl mov dec mov adc enter movzbl push out call loope mov jne insb and add push int3 outsb je add and xor xor sarb inc or mov fcoms loop jo add (bad) fcompl aaa loopne xchg jl (bad) inc and jl pop pop or movaps push sbb (bad) enter pusha add mov andl jo dec hlt loopne mov fsubs jecxz pop sbb movaps psllq cwtl dec cmp imul and and adc daa dec push fs jbe dec loope outsl jle xor adc jb mov dec jp dec inc mov and add adc cmp and xchg sub or add xchg mov sub push daa add inc push add pop dec bound dec inc or loop fcoms popf or cmp mov add mov dec dec test jne mov add or mov call decl mov call sbb sti pop push push std decl pop inc (bad) movzbl pop adc dec xor and pusha or mov mov dec jge inc inc add mov clc xor or sub mov add inc nop or pop je stc jle inc and stc push and adc rolb add hlt (bad) mov mov and outsl mov adc pushf and inc es out push adc stos mov inc push aas mov cmp std xor loopne fwait dec adc dec sarb dec adc addr16 mov stos mov pop mov and les adc fnstcw jmp add push xchg adc call rcrb data16 sub mov popf add into add stc ss outsb outsb inc add add or cwtl or subb das sub les add pop mov push push out jo jle mov ror xor sbb aaa push add push xchg jle push xchg or xor sbbb dec shlb out jno push aad lds cmp inc jo bound or ja xor cs sub cmp sbb push sub push mov test orl imul xor (bad) jle add and jle pop sbb pop add lods cs rol js out mov out add jo (bad) adc add add les test test jnp or ret cmp ss push mov adc jno (bad) ja inc jo mov (bad) repnz and pop movsb aaa jne add mov mull call jo dec mov fsqrt pop enter jo scas repnz and cmp int mov aad jle dec push sbbl jge js and test aad xchg push dec insl movzbl hlt dec push aam lea ret shr and mov xor inc fwait sbb add xchg test ret mov jl inc and inc push mov adc mov xor mov pop lods or cmpsl mov mov ret into mov out (bad) call mov outsl or loop jecxz and pushf adcl notl decl and cmp or push mov lret in pop mov mov subb or stos (bad) jbe mov xor adc adc movlps jb or add es loope nop adc cmp mov or inc jecxz push mov push test (bad) call dec bound mov push xor sahf nop adc adc sub or mov bound and lds loope push pusha push dec bound cmp or dec inc sub jo cs mov cwtl outsb and pop sub sbb add cmpsb adc mov rorb adc adc sti test or dec cmpsl dec add inc addl jno sarl xor xchg cli or mov inc ret loopne pusha dec (bad) push pop stos xor movzbl ja or movzbl and cmp cmpl or test xor sti mov xor sbb xor inc imul or dec fcoml inc cmp dec pop mov or sbb inc test add inc xor and (bad) mov adc sahf fiaddl cmp popa push xchg bsf fidivl lock pusha les mov or or xor or or and or ja cmp aam je push xor push and adc add inc in mov xor rcrl mov inc inc insb or push adc jmp add or mov outsb leave dec test pusha ret mov and push sbb dec pop inc push test mov and jg dec dec inc mov push add add test push lods mov pusha mov outsl sbb adc sub add (bad) mov test mov inc lds add (bad) mov mov mov mov or in sub dec mov inc jl addl pop mov mov dec and fidivrl mov sbbl das push push rcrb inc enter sbb pop xadd and mov iret cmp (bad) adc mov lds or push inc or xlat push jb jecxz mov xorl shll std shr pop rorl pop movzbl xor and test (bad) mov sbb sbb lret push xchg inc daa sbbl push das add add clc xor call pop les push push mov pop (bad) fimul push cli push xchg call (bad) push arpl andb insl call test flds xchg cmp and mov std call pusha fcomp push (bad) call iret std data16 fsubr and push mov shr pushf cmp push push or (bad) lock fsubr out or sarb push enter out fsubr test ficom push (bad) in pop jnp push fsubr imul xor out adc sbb jnp sbb mull addl (bad) or push pop call in icebp pop pop cmp std xchg xor call xchg push sub call in lea fsubr jl (bad) mov aaa xor (bad) call shlb out inc sbb orb push push clc xorb mov mov inc mov (bad) out sbb jb (bad) mov stc jle or mov test jle movd inc inc mov jg fs loopne dec in adc js fs lods push or call add or pop lods xchg loopne jl insb mov sub push mov outsl arpl mov or add xchg jo mov xchg das orb inc loope pop mov adc or cmpsl inc cmp cmp call call mov (bad) call or add adc call and push jmp sbb cmp mov inc pop (bad) inc sbbl stos inc aad and test add inc jle dec pusha inc insl mov add inc add loopne stos mov sub pop (bad) test (bad) mov jl or xor into inc push rorl push sahf sbbl push mov and popa mov clc popa ljmp mov (bad) mov jg dec cwtl jp xchg cmp enter jg popa jno loopne (bad) mov sub dec cmp inc sub jge xchg mov xor ja adc int3 pusha aas inc enter add fisubr and sbb inc ss adc cmp pusha js cmp (bad) mov push pop ret or or sbb add or dec mov popl pushl inc repnz movhps loop or or or and mov xchg or jo sub pop xchg xchg mov and mov or cmp test mov in popa js add sub out mov jg xchg xchg mov cwtl and mov andb inc aaa xchg lock pop stc dec inc nop movzbl sbb mov mov mov cmp xchg icebp and or (bad) mov mov loopne pusha inc add xor inc das dec sahf enter fwait ss test int or or mov xor addb sbb push jo push lar sbb inc cmp push lods sbb push sbb inc movsb dec jo inc rcrl enter dec ljmp fwait movsl dec xor mov enter ret cmp mov dec into mov js in pop je mov call sbb out push mov cmp lds testb call sar pop push call fs fmull push flds std call popf sbb push (bad) call cmpb sahf out push mov sahf mov call daa inc mulb cmpsl adc call jle out fsubr sub adc cmp adc pop fsubr out (bad) or jnp push fsubr iret push int3 or (bad) call mov call mov or jnp and out pop push and lds ja fsubr cmp push mov fsubr push push or pop jnp push fsubr push out jnp pop in or loopne sbb xorl (bad) call orl test mov subl add pop cmp pusha xchg pop out add outsl movsb out stos ja push cld jne sub iret movaps (bad) aas mov sub movaps movaps movaps push movaps sub adc inc or fstpl jg in pop ret test push popa adc stos and les mov jg lock rcl sbb lcall push pop push pop inc sub loop cltd push pop lret jle adc mov push je mov ja in mov sbb (bad) mov and repnz enter inc push shlb iret and inc add or out mov popa mov mov xchg inc mov xor add mov verr xor mov ja xchg adc pop add sbb add or (bad) mov or cmp inc add xchg dec cmp popf push aad movlps add inc stos sub inc lods int inc cmp and fstps int push int ret mov jns int add or xor jmp nop orps in cs lods and lods add lea inc sub mov or loopne (bad) mov mov lcall add push fs jbe xor add pop pop inc adc jbe push (bad) (bad) (bad) in jae adc mov mov lea cmp ja add add adc clc add inc and rorb test mov je jmp rol rorb cld add and in out mov push test je jmp sub ret mov push mov pop adc mov je dec repz je cmp mov mov (bad) out dec loop xchg ret setb sub movsbl test je xor add mov pop pop pop pop test or sbb jb mov call loopne push call jge test je or mov call xorl (bad) clc pop mov jbe mov sub call je out mov xchg pop mov pop std mov movl in fidiv jnp (bad) sbb cmp sbb movhps pop push call rcll pop dec xchg int xchg mov jle (bad) je cmp mov insb jbe jnp mov out cmp or (bad) pop mov pop mov out repnz add ja push sarl call fisttpl xchg lock add gs jb test outsl mov jmp jle or jne add or add and sbb sbb lea jne mov jmp dec and mov test mov je outsb mov repnz add mov mov inc addr16 or insb and je or scas pop add xor call adc dec js and cmp xorb rclb pop pop ret xlat add mov imul jbe add cmp add lahf adc jo popa aam inc jb jmp inc mov fmuls inc xor ret std lahf lods add mov xor test jne repz lret call mov mov sub adc lock loopne aas adc mov pop imul adc (bad) mov call mov dec sbb (bad) aas test je add pop ret mov or in adc ret pushl shr test nop sub out push push push mov mov sbb (bad) xor idiv je cmp cmp jmp wbinvd mov sbb fist cmp je add repz xchg dec pusha leave (bad) out je adc clc icebp mov loopne jne pop shlb add fildl (bad) mov push sub jecxz test add sbb or cmp call arpl add mov xor lahf pop xor cmp call (bad) call add or (bad) stos mov pop ret test sahf out or push cmpl inc addl or fcomip and (bad) sub sub mov mov test add test jo sub ret je loope aas mov lea mov and test je imull jnp lea (bad) mov out cmp ja mov mov mov jl adc ljmp add fldl scas mov push and xor jbe call test sete shr xor movsbl or into and aad mov push mov jne cmp add in or mov jne idivl ja add jne movl jmp ud2 out out out xchg or addb push xor jbe cmp sbb test pop and cmp xchg sub mov xchg call lea add adc call (bad) je push out push lret enter add mov fldl lea loopne add test call xchg pop mov jo mov cmp imul mov or fmuls inc fmuls mov xor add cltd mov jmp dec dec out sbb call mov mov icebp out pop add adc mov jl push int3 jge das jmp mov inc push inc mov xchg pop adc (bad) ss lds daa dec and pop mov jg sbb adc pop sub clc arpl lcall addr16 xchg dec add push (bad) mov fwait push add xchg (bad) repz pop push in mov or mov mov aas push nop stos iret das sahf add jle adc sub in mov cmp (bad) inc cmpsb cmp push mov mov mov in (bad) adc (bad) dec add add ja cld jl mov outsl (bad) or mov jne repz cmp das or arpl pop add jg cmp mov mov adc outsl loop (bad) pop in outsb in cs cli push adc push mov insb movups adc je mov and loopne jmp cli and add (bad) bound test mov push aad xchg sbbl and cli and cmpsb add stos sarl cli and fild into pop jne arpl jne mov push ja inc cmp fmuls ja jg add scas cmp cli inc or clc sub test inc mov test inc lahf aas adc mov ss adc cmp mov inc mov (bad) aad (bad) testl mov jbe mov iret cmp jl ja mov pop je mov int3 lahf rorl pop push cs xorb test jle rolb dec les mov cmp push push push cmp lea dec cmp jno jle sbb (bad) fmull mov les adc sbb adc pushf loope mov cmp movb dec inc adc or (bad) mov dec cmp cmp add arpl pop and adc pop cmp pushf stc shlb cmp sub test ss mov faddl (bad) jbe mov je test data16 xchg xor insb insb xlat fs or fmuls je xor adc or mov outsb mov xor adc test insb xor cmp fisttpll cmp pop xor pop inc fs das mov out sub (bad) es inc ss gs outsl pop insl xchg rorb scas sete xchg aas stos pop fs (bad) add jno ret and jg add repz inc jne shrb adc test sbb jle mov into mov test push rep xchg test (bad) push or movzbl jmp or (bad) push int3 or movsb pop enterw movlps mov insb test out pop jbe inc scas sub fs insb dec xchg daa lahf xchg sbbb mov xchg (bad) das mov insb enter iret mov jae xchg pop (bad) xor xchg outsl std pop insb dec xchg movsl bnd das rorl xchg push aas hlt das test add popa mov add iret imul dec sub (bad) es sbb mov jl iret push jo jb iret (bad) xor bound adc xchg iret adc and loop and dec iret int jl les dec or loop mov and mov (bad) decl xor xor or iret cmp dec xchg jl or and iret lret iret orl xor test popl iret repz mov std scas iret loope fcomps xchg iret lds imul mov cmp out gs or sbb inc iret daa adc jg jmp iret sbb test and mov cs iret out push or jle sbb jl inc iret mov test xchg sub jne fstl jle loop in outsb pop jl iret je cmp lret inc cmovb rcll mov cli sarl jbe rorl push sub inc mov rolb push inc xchg fsubr cmp fsubs (bad) jo jne (bad) cld cmp sbb sti lahf rcr mov inc and sbb inc shrb xor rolb add jne mov dec and mov sarb rclb xor mov in and aaa sbb mov nop lret mov pushf adc mov sbb (bad) mov ja wrmsr sub ja xchg jnp outsl mov push int3 jno das inc psubb outsb enter pop jmp inc ss (bad) clts aas mov in rorb lahf mov mov mov and mov mov popf mov test mov test mov cmp test push mov sbb mov or iret popa enter das (bad) pand sbb mov sub out clc mov mov mov cld fild sbb xor adc in and adc psadbw enter pop or jecxz xchg mov (bad) nop xchg repz cwtl dec insb dec xchg push in and adc mov sbb cmp sbb outsl push dec insb das ret and das mov push xor fstl add out and mov mov dec jg inc mov movl pop xlat movl add push cld and pop cli push sub inc incb fisubl inc adc or jg jmp mov sub ja push push xor jae sub mov push mov pusha lea lea popa and (bad) ljmp rolb cld mov add cmp jb mov add fs mov inc and and std mov call cmp sub cmp (bad) (bad) jmp cmova cmp jae test je movzbl test mov jne add movb lock and push call mov add and pop movl dec add dec adc mov (bad) decl cmc mov mov iret xor and mov mov ja mov add cmp jb jmp das movzwl xor jmp sar add sub mov addr16 andl adc mov dec jp cltd loop dec das xchg inc and popa out mov out das mov lock sub sub mov js or movzwl and add add sbb mov push loopne mov cltd fucomp or mov add pop ret inc dec clc add jmp (bad) pop and in jmp iret pop (bad) cmpb sub arpl cmp enter push add dec in in les fldenv sub int3 xchg in sub iret mov cmp out outsl inc pcmpeqw andl sbb push and sub inc nop adc popa push outsb ja pop or jnp fidivr call or in mov mov xor dec sahf or dec and out mov xor add or outsb sub cmp push pop out into outsl negb mov cvtdq2ps or jnp fnsave and test outsl testl das and (bad) das daa push iret inc add jmp ret aaa std (bad) (bad) jl inc mov mov lea cmp je mov lea and (bad) sbb mov sbb mov jg pop ds cmp push add or inc sbb mov mov (bad) (bad) mov mov mov mov mov mov jne sub mov rcrl pop call sbb fsub mov jne add cwtl arpl popa decl fsubr in dec add shr jno (bad) call mov jmp pop inc fcomps sub and pop mov or test mov jne test je mov addl leave and sar das push xor je fildll outsl mov sub loopne ret data16 fstl flds push std xchg jg mov mov jg (bad) sti cs test je lea ret add add cmp jne shll ja je add rorb dec test adc lcall call sbb and loopne es mov mov cmc (bad) (bad) out cs inc sub je mov mov call cmp mov jbe sbb xchg lret cmp call xor roll (bad) test roll cmpb xsavec inc (bad) mov jmp push mov pop and mov mov jmp decl je sub mov cmp jbe lahf cwtl sbb hlt movsl fdivs paddusb dec es aas and inc add xchg movl add fwait outsl jo and mov js mov test je mov (bad) test jne cmp je mov xchg cmpl lea (bad) out xor add and nop fstpt lahf fadd adc inc mov call jbe dec arpl scas jg inc and inc insl (bad) jmp wrmsr in in pop btc aad jg xor jmp lar pop loopnew fwait (bad) rcrb mov pop fdivrl jb jmp xchg dec popa xor in outsb fsubr push pop jle push (bad) lcall mov lret clc sbb pop lea mov add in or sbb sbb pop add mov pop ret in ljmp pop aaa jmp pop xor pop in inc imul xchg add ds jg sbb xor call jmp dec push inc (bad) decl inc adc inc adc mov lea cmp call or and add clc je jo hlt mov jecxz fcomip outsl ret into call lea add ret clts movl mov (bad) iret sahf or stc add rep xor cmp les fnstenv rcrb iret mov xor call ja test jne cmp je cmp sub inc js fdivr lcall arpl clc movl mov sbb cmc lcall push call jmp nop nop mov pop cmc bts mov ret mov mov int3 add pop (bad) (bad) lcall je movzbl test jne test jne mov mov mov mov inc adc inc add rorb dec cmc mov add sbb loopne cmp mov and pop add or scas jae xchg sbb call sti xchg imul lea (bad) lock pushl dec adc adc mov sbb fstl push sbb movb movl pushf push add inc cld mov movl mov xchg xor mov std fmuls test je test jne mov and cmp into icebp pushl leave push add inc add and or mov inc cmp (bad) pop and cs idiv sub push sub push sub (bad) loope,pt ret jg ds data16 pandn cmpl mov jne testb jne rorl lahf (bad) inc jo (bad) je xor ret add sti jbe add pop pop push jecxz jecxz fs inc sbb call sub push mov call mov call jb xchg (bad) inc jp out mov aam jp leave dec (bad) jmp pop fcomip xor ret je add or outsl sahf add adc pop pusha sahf add and fiadd movb push pop test jne inc push or push je inc sub pop pop xlat icebp sbb insb dec in jecxz loope push out dec cltd add mov add cld out (bad) mov hlt dec add addl sub mov add call mov sbb push xor fwait sub outsl adc ljmp lock mov mov add adc xor lret sub cmp je insb and movnti aaa inc jo mov sarb outsb add inc and mov adc sbb cmp test je lret dec cltd out clc fisttpll cmp je js aaa icebp ja jae and or dec jmp clc inc or loopne movb push sub jl fist jp mov mov mov mov push mov pop mov add (bad) (bad) jb push int3 jbe xchg decl aad fcos xor fcoms xchg pushl add incl add mov or adc or jb inc sub adc nop pop daa loope dec adc pop cwtl sbb or jp scas (bad) sahf adc or mov jae jge mov cmp pushl loop mov add insb inc pop ret add jg inc shl add jmp aas imul jno mov add add sbb mov mov lea movl test jne mov and fidivrl or push add jg (bad) sbb jle add jle xor mov lahf jmp lods cmp je xchg dec sbb add lods pop mov xlat (bad) sti mov sbb loopne mov test jne jnp jge mov push xor push outsb or je adc ret mov xchg popa sbb inc clc fucomip femms (bad) mov mov sub mov jnp sbb pop add jecxz pop call rorb les inc nop add inc pop inc dec lea (bad) add inc push aas iret movl (bad) jg mov mov lea movl insb loop sbb inc or movl movl and adc inc add push pop inc dec sub inc inc sbb inc in inc daa pop data16 movl pop inc cwtl je fs fs psubsw jl add (bad) je mov and aad movl adcl sbb imul and add lret in fiadd add fs dec (bad) jne sub fist test je mov lcall out xchg adc test rorl adc je mov add jbe adc or mov mov xchg mov repz imul mov call add cmpl inc sbb jmp int3 bound mov out out and fisttp js jmp arpl aas (bad) or or xlat add rorl rcr je mov (bad) mov sbb add scas std or (bad) ret (bad) jne mov aaa cmp ret cmp nop mov jmp andl roll js iret cmc mov mov jp mov shlb add mov mov and sbb test jle adc lea (bad) je cmp jne dec call icebp dec movzbl test dec lcall ret std (bad) test jne fwait pop aad or scas mov xchg jne ret mov or divl or dec add cmp mov or xchg push mov call xor mov lea cmp jbe sbb movb incb jne lea jl jns cmp dec cmp inc push and iret and je ss mov pop enter mov xor push clc call adc adc ret xchg psubsw sub call sbb je (bad) lea sub mov mov (bad) popl je mov jle cmp mov jge test cmpsb add xchg jecxz push push je xor imul push comiss movl fisubrl in push jmp push xor or xchg inc in add and cmp in loopne and xor add std popa movaps std (bad) decl movsb pop sarl or nop loopne scas in mov test jne mov aaa or in call push sub xor ret mov or call push cmp out add xchg dec mov aas out add mov adc iret cmp adc xchg ficoml setne xor push (bad) push push mov inc cld outsl cmp test mov cmove push inc push sbb cmp mov jbe mov test jne rcrb call call add mov test je cmp incl mov mov mov inc call sbb loop ja jmp or sub push sub ss (bad) fs pop test mov jne sbb mov mov mov inc outsb leave add add sarb and call or xchg xor jbe aas cmp std decl sub cmpl ja or and js shr cli mov sub std iret add incb inc add test mov or call and ret mov test (bad) and dec ret (bad) pop out rorl add jmp jecxz adc rcrb pop ret rorl lcall xchg imul pop pushl (bad) pcmpeqb add jmp xor add out pop lods cmp loop and adc stos jg add pop xor repnz (bad) jmp mov mov pop int3 shrl push aam mov decl jne dec sbb push mov cmp jl mov aaa cmp je pop je dec pop push pop add cmpsb mov fild call mov xor pop in adc fs aad imul loope and les call sbb pop mov (bad) jo mov (bad) or enter (bad) in out sbb pop outsl dec or cs add jl popa movnti push pop outsl push inc lock int3 rcl lock xor mov stos push pop lock pusha in mov test outsb cltd pop je and mov in ja loopne pop sub icebp sbb sar jg inc jg xchg inc int3 insl jg or pop adc jo lock push jmp sbb lock loop add or dec dec adc hlt out inc cmp iret hlt or roll sbb stc pop test adc pop (bad) in cli pop sub das aam fwait dec mov adc shrb pushf push pop xor jmp jg fdivrs mov test jne or sub mov test out nop xor xchg and rcrb sti ret rcl lock faddl adc add fcoms sbb popa push popf xor sbb adc and sarl adc push int3 sarb sbb adc scas int3 jne cmp pop out das rcl bswap xor pop adc or inc mov pushf adc cmpsb fnsave xor test xchg jmp andl call inc and fs ja lds and or movsl (bad) pushl cmp mov mov xchg sbb mov jmp das lahf test sbb out pop xor (bad) hlt aas mov rcr mov jmp inc pop fstl dec inc (bad) dec cli out ret icebp add xchg lds mov cmp add cmp jne inc xchg jecxz mov rclb add inc inc dec push aas jle jmp adc sbb pop outsl mov or adc add sub jb mov add mov lea movsb cmp add adc and dec imul adc jae inc rcr push les rol mov pusha jmp fistp adc jmp lods add stos in orb cmovae ret call fsubrs adc mov jp inc pushl in sub push and push in inc out lret add add mov sbb add shlb dec mov pop repz jle push call pop sub lea mov je xor loopne pusha pop int3 inc and adc xchg test and pop jo jecxz add call or mov or (bad) lea cmp aaa int or cmp xchg push add and jl add je (bad) push cli aaa dec call push (bad) ja add or fmuls pop or (bad) xor ja push sub outsl cmp stc je cmp add ja or cmp jg pop cmp inc mov (bad) sub xchg (bad) jg adc push sub jmp adc mov test jle push test std mov cmp je add cmp adc push xor daa adc pop mov sub test inc mov sub cmp arpl out testl test mov adc testl cmp jle lcall pop or ret cmp je jmp cli push je lds mov sub jmp jg or test cmp je roll xchg fucomp sub jg jg sti pop sti cli and lea aaa pop je cmp jne fs ficompl stos sbb inc je mov dec push adc mov mov leave adc cmp fdiv test cmpsl mov pop jbe mov jg cmp js mov out mov adc cli mov mov jne cmp ljmp mov out je into loopne aam cli xchg mov jae fucomp cmp or mov (bad) jg xchg xchg sti xor or jo ja adc je addr16 push loop out je jo test push jg arpl push iret cmp jg ja cmp cli jnp,pt sbb or jmp cli inc adc or (bad) out pop sub inc adc cli inc cmp sar or mov mov jg (bad) jg inc je cmp jne call mov (bad) out out ja sub cmp aas or bound fild mov cmp jge add in (bad) jne aaa mov jg adc (bad) loop pusha incl xchg mov ret inc fisttpll add cmp pop xorl push je icebp mov or stc sub xchg xchg cmp addr16 test mov je out cli jnp test movsb popl icebp out je adc je jecxz aas cmp inc jl rorb adc leave pop push inc and inc (bad) cmp je insl out jne js aas cmp inc mov cmp mov add cmp inc cmp lret or in mov je push ja adc mov arpl fstp (bad) cmp mov mov adc cli inc pop mov adc push repz sbb (bad) mov loope cmp out mov pop jno test cmp inc fldl ret mov out cltd out and fwait stos push jne cmpsb bound aas mov je push setnp jmp mov leave jle in adc ljmp inc mull fmull cmpsb call mov adc mov lods mov or mov mov push push lock in mov jne (bad) call lea mov movzwl cmp je add cmp jmp sub adc je pop je test jne test pop (bad) aam xor or call test mov lods jno add adc inc adc leave sub fidivr jbe add mov inc mov je dec inc lea dec jbe and inc sbb adc pop inc jl lea sbb push and call sti sbb lahf sbb fistl dec cld lret lea repnz ror xchg loop icebp push pop je daa push lea lea adc and pop mov xor jbe fstl (bad) add cmp dec jns jmp mov scas js or pop xor std jg push mov sub mov dec adc call cmp inc jo sub sbbl test and mov test mov jne mov test je xor xor out pop je mov sbb bound sbb sbb add cwtl jnp call pop sbb cmp enter adc lcall jmp data16 loope in jge adc push call mov (bad) push xchg (bad) outsl rclb movl in jbe inc sbb movl movl jg loope adcb neg sbb or movl mov push xchg inc insb das sub and push sub das stos mov sub test decb or add call sti adc inc xor test and test rcrl inc je adc fild adc dec or inc jb sbb dec jge jmp or aad add mov pop cmc lahf insb adc (bad) je iret push pop test xchg test add fucompp mov test add je lock loopne mov jne sub or mov in call rorb lock sbb call (bad) (bad) (bad) fstl push ret decl bound lret test lods cs add jmp jb aas push xchg cmc inc cmp je das sbb lea cmp dec xchg and inc mov pmuludq nop insb cmp out cmc dec adc ja in call inc jo and (bad) je mov or add bound sub mov push add push dec push and push xchg push mov cmc pop hlt mov mov push push sub sub test and push cmp and jg and push sbb add cmp add stos call push out sub jne push mov pop mov sbb add call dec out (bad) jne lea call and push je mov push mov das call popa inc mov adc mov sbb sbb cmp sarb je jp (bad) jecxz cmp adc inc je test jne push (bad) aas push xchg ljmp pop dec sbb mov jo (bad) adc jmp popa dec fsubs sbb mov push add jmp sbb adc mov jmp mov jl jmp cmp call jne into pop addl add subl clc add iret and push mov aas xchg mov mov jle or pop adc mov push fwait ds andb jnp adc jo add decl inc jne test je test jne adc and mov inc sbb jecxz aad int3 decl or mov cmp mov mov call lahf jo mov in cwtl call or mov test jne cmpl je shrb inc je test or dec outsb pop pop pop sbb aas je and bound or call pop fadds xlat test jo sub jo or or jns in ds faddl and xchg sub pop ret mov adc bound push push and pop mov pop or sbb call adc xor mov jmp inc jo xor sarb (bad) movzwl or fwait mov orb xor inc ffreep pop inc pop mov outsl arpl adc lock insb mov pusha mov jmp fbld adc dec repz mov jecxz jmp (bad) sub jne ret pushf pop iret int3 sub mov out arpl jmp push int3 clc adc leave jmp mov xchg cmp loop ret test out test ret pop add repz and popa call orl pop loope ja mov jnp leave je testb rorb test cmp leave out mov rcrl mov sbb mov aas cld fldl mov lea and jne mov mov xor shr lea pop mov pushl (bad) mov add mov cmp jbe adc inc decl pushl push or ljmp or sub xor and mov mov jbe sbb jne jl adc shr and pushf (bad) sbb mov (bad) out sbb adc and fsubr cmp push (bad) mov pop and movsb sub xor test and add test push je xchg test pushf arpl or push and xor call mov jl and or fstl mov cmp imul (bad) pop mov insb ret cmpw xlat sar je sub lea add push sub pop sub inc and fyl2x mov and and pop inc movaps inc push jmp insl call decb push out ret jmp add sbb stos fwait out push jl jne inc sti test adc rorl and stc push addr16 jns or and adc pop pop mov and jnp pop pop pop std into mov lcall outsl and je rorl mov and test out das loope adc lahf dec sbb lahf pop jne add movsl mov push and mov outsl push xor call sbb or jmp call push jl pop pop fldcw dec sbb dec xor inc mov pop adc (bad) (bad) mov add je leave jne (bad) xor cwtl jp or sti shll add xor pop mov push or pusha or clc aaa std cmp inc pop add jmp mov call sbb lods jmp aas popl je mov les test jne out add sahf movsl aam adc inc push pop les sti push and loopne fbstp add xchg or lahf push lock xor push add jmp nop nop out push faddl pop and and cmpl xor and negl xorl jbe or cmp sti mov sbb mov loop subb (bad) jmp mov aad out mov or add das aas jmp or jne cltd pop mov pop cwtl xor outsl xlat fildll add test push jmp adc daa add mov sarl adc (bad) push push mov xorl mov and int mov rcl or adc push push and popf pop adcl cmp test pushf sub or mov in (bad) xchg outsb and sub inc adc sbb add sub js sbb or adc pop pop xchg sub or pop fist (bad) jo sub cmp jne movb sbb pop cmp jmp or je scas or xchg and adc je mov in adc jb movb fist sub add ja incl call sub mov mov je mov and divl (bad) xor and lahf (bad) ja js add add dec push and xorb adc adc jge jb frstor xor push add mov test (bad) mov mov and data16 incl add movzwl jbe pop (bad) cld fldl js aas jne cmp fs push and inc cmc ljmp movzwl and sub cmp ja cmp or jne or sbb jg rorb ljmp icebp call in pop pop ret movzwl in and jmp mov jbe mov jne dec add jne push add jne push jnp (bad) out pop jne jns jbe movzwl and sub sti sbb sbb (bad) fnstsw jbe cmpsb or jne popf jmp or jne jae lds inc jne mov sbb inc or add or inc adc fcoms fdivs fcmovne cmp jmp in or into or imul clc or sub lret js ja lock out mov mov sub wrmsr and sbb fbld in orb add loopne adc xchg sbb add adc lret iret adc push sbb mov mov (bad) lsl lea lea cmp out jl cmp adc mov xor sbb sub cmp jns dec icebp mov sub shr inc lds popf test lea stos cmp mov or mov cld push daa adc gs out sbb addl ret loop loop xchg dec movl inc and js inc dec test aad fistp cs jne mov mov jge jbe sub mov lods mov pop xor and je pop or inc push mov pop in frstor xchg cwtl mov icebp incl sub (bad) push lret call mov and adcl jmp pop sub imul mov mov inc dec enter adc inc insb cmc inc push add push dec out inc pop jnp je add mov pop and or je sub and and pusha mov addb or fsubrp jge scas mov mov (bad) pusha (bad) cmp cli or sub stos das xchg aam mov sub adcl movl sbbl in cwtl stos cmp aad sub push movl lods adc jbe (bad) dec xchg add or mov (bad) fwait rcll mov xchg add push push pop incl dec or jb popf xor jecxz sbb dec aaa mov icebp (bad) jg sub pusha jne mov int3 mov mov test ret cmc jo adc (bad) shld movsl das inc add mov (bad) popf mov mov xor jmp call mov or lock fldl mov add mov push mov (bad) jmp xlat cmp out jne call mov and mov cwtl sbb push lock in call jmp pop mov push sbbb pop xor ret sti int3 pop or std cmpsb imul (bad) call loopne (bad) out aaa in in test clc add test test je movl cmp xchg cli add (bad) jg lret mov mov and or not adc inc or inc rorb mov dec adc inc jg inc in mov or movsb mov and jne jmp rclb iret cmp mov sbb mov push cmp jge cmp jp movl cld fnsave adc xlat and (bad) (bad) clc sete movzbl sub test je or add idiv fistpll test cmovne mov and cmp je jle cmp je test rep pop push mov add pop popa mov rorb add add xchg sbb xorb ret dec in mov adc loope mov dec inc addl pop (bad) mov test sub cmp bswap faddl mov push xchg (bad) add icebp push in jne jae add repz lods or dec notb or jmp xlat push nop cmp jne and paddusw fcomps xchg pop inc pushf (bad) mov mov jmp icebp frstor add jle (bad) adc sbb call clc sub mov aas sbb cli call cmp xor rorl add inc enter mov mov pop decb sbb push call sbb mov xchg decl and fadd and inc je into jg ja test call push sti clc pushl rorl lock sbb sbb cmp std (bad) or inc mov xor dec nop incl loopne mov xor loope jl clc les xchg test cltd aas mov jp clc in call cmovo mov xor lret not not mov or jne mov and add (bad) xor xor movsl sub or sahf mov jbe arpl clc add ret inc and adc ja mov xchg mov lea mov adc ret and jo test inc add repz adc push add jl dec test mov jne mov mov test jge (bad) es je mov jne inc js mov ficom movsb jmp pop cmp jne stc lds pop push rorb jnp cmp (bad) loopne mov pop xor inc mov fwait jge enter pushf movsl xchg sarl sti fnstsw ret rcr sti pop pop sub aam cmp clc xor popf loope jne mov push pop push xchg or cs iret xor fildll cs mov jb pop or jecxz xchg mov jecxz mov sti sti (bad) xor inc push in xor dec xchg loope xor dec add adc cmp fmuls insb fistpl mov (bad) jmp push out dec call mov clc decl movsb decl mov movsl inc xchg pop rolb arpl jg in dec cmp std in pushf and clc add adc mov mov or lods faddl add add add (bad) test mov mov add ljmp cld outsl ljmp adc out psubusb leave mov or mov and mov mov lea sbb fiadd (bad) lret cmp pop fildll pop jo inc xor scas adc mov icebp fwait xchg pop inc mov jmp adc pop lock cmp inc loopne cmpl or in jl,pn (bad) clc xchg mov and rep dec je jmp pusha adc stos lcall pop or sbb add add aad test cmpb jmp sbb push (bad) jg sti mov jmp push dec jge xor adc push lahf scas in mov ret mov mov dec and xchg add jbe adc mov (bad) and mov jg scas push add cmp ja movl push (bad) mov xor sbb or loop loopne add xchg lea leave (bad) icebp out push (bad) dec test jne pop xor xchg pop mov pop add push and movl out add mov add or (bad) push push cwtl or lcall xor call xchg sub push test popa inc es push jge ret jle add or inc lcall add mov add shll pop out add push out pushl mov mov jne loop push and clc push mov mov repz icebp popa loope ret adc test subl jne and mov (bad) test mov sub lock add add add (bad) outsl mov call dec jmp adc pusha mov imul mov add jb xchg cmc xchg add cltd js test adc or cmp (bad) and pop daa sti xchg xchg lea aaa fmull les pop add sbb cmpl and jmp xor sub pop xor mov decl mov mov push push call mov orb or call jl add add shll dec je adc addl bound add shrl cmp daa pop pop sbb sbb sub loopne je add ja dec (bad) mov or loopne es cmp inc in in cmp mov and in xor mov sbb cmp in jmp jmp call jg std mov mov shr mov sub jl add jmp jg lds jne (bad) test nop jmp ja notl and daa rcrb scas inc and dec lods dec in push out (bad) lret test push adc test aad cmp pusha clc faddl loop lcall jecxz mov dec add pop inc mov aad (bad) xor cmpl mov and xchg movsb mov jne jl inc ret inc jb (bad) lock lahf mov cmp mov test sbb jne cmpl je fwait sub xchg mov sarb inc testb jmp out aas enter (bad) je mov cmp ja sbb dec shl bound arpl add fwait roll test cmp inc mov cmp fsubr mov cltd into push clc inc lea push or sbb or lea mov outsb xchg mov mov or jge decl inc movb mov test je mov add lret (bad) fldl2t roll shrl test je arpl fucomp jle test jmp mov xchg pop jmp push notl dec and jmp adc add lea nop test je int3 adc dec cmp push iret jmp pop xor lods sbb cld (bad) (bad) jmp cmp incl cltd call cmpb gs sbb mov inc cmp test das sbb and inc cmpsl or inc adc ja mov fwait or lods add cmp inc insb sbb movl lcall or inc jmp or mov sbb or and sub jg mov jp sub jne add dec xchg dec xor add lods and or dec add mov add jne inc mov push or cmp cmp movl or stos inc push es add jmp jl imul push in cmp xchg lods cmpl push xor outsb movswl aas cwtl push fcomip cli add cmpl jmp add mov test lea fsubrp mov sbb je add adc or add pop mov arpl or dec rcrl mov cmpb pushl mov mov lea lea cld cltd loopne call and (bad) call sbb cmp je dec sti mov mov add (bad) jg inc sbb je mov push or dec push in mov vminps mov add add ror or or jo (bad) jae faddp sbb add inc jp jbe add adc out mov repz scas das cmc das test pop ds adc jo loop mov sbb and and xchg sub push call push xor adc jmp cmp xchg mov int3 mov addb push xor push dec daa lea pop and pop (bad) das push jae xor adc jne adc stos pop sbb mov lret maskmovdqu divl fs int rorl pop adc addr16 adc adc and out adc call in out adc mov mov dec sbb sbb dec (bad) or shlb je movsb lea mov inc mov outsl mov and lock mov and les clc arpl xorl (bad) mov and int3 jmp and int mov pop andl push jne aas mov push sbb pusha adc sub je pop adc (bad) or inc sbb iret fs lods pop push call mov das and hlt adc negl inc sub add and add (bad) jg leave fucomi jae fstp fnstcw movzwl mov push and push mov and fistpll pop pop ljmp push fmuls cmpb adc dec push lods mov je fisttpll xor xor inc mov cmp and or test orb add jnp adc mov push add xor jmp or pop and loopne movsb (bad) mov sbb inc jo dec outsl sbb mov sub dec inc inc and sbb mov dec or jmp and (bad) (bad) cmp mov push popa mov orl aam or jo sbb adc (bad) dec into inc fadd fs push adc sbb and pop imul jle xlat mov xor adc or ljmp call aam xchg mov xor or scas stos fwait xorb add ljmp add sub pushf xorl addl push add stc cmp dec test adc pop mov inc xor push jecxz fdivl add ret cld mov mov pop cwtl orb movl add add in cmp dec sbb incl add inc rolb cmp lcall add das xor push mov mov mov adc (bad) xchg mov sbbb (bad) imul jmp jne dec hlt inc cltd stos int3 enter inc add push xor cwtl sub xchg or adc in testl enter xchg sub clc imul mov cmpb push mov or add in mov adc jne faddp outsl or enter push int3 mov cmp movl dec icebp aam mov cmp sbb pop cmpl push aaa push ljmp push sti movl or add das jmp xor scas jmp dec call or xorl outsl pop sbb mov sub mov inc cmp lea movzwl pop add test je ret sub cmp lret lods pop mov xchg test loopne add and popf inc leave pop xchg xor and inc jmp adc xor fs and ds push or push mov insb andb inc dec ret xchg dec inc dec ret xchg xchg in ret dec inc js inc dec dec jp clc notl pop push int3 (bad) xor cmp xchg push mov mov mov pavgb rorb sub sti fsubp sbb push loopne pop add cmovbe adc cmp lret xchg ret jp je je shlb add mov daa (bad) outsl enter and mov add call and test sarb pusha and cmp xor inc jmp ljmp imul dec je sub outsb push xor xor call mov lcall add test je cmp mov pop cmovbe cs fmull test adc out dec xorb and ljmp adc push loopne adc dec cwtl fcmovbe call push aas sub and or lock inc ljmp add xlat fnsave xchg push call adc jns and lahf sbb sbb (bad) test inc (bad) xor int3 push (bad) or add aaa mov sub xchg xor fiadd sub test out add xchg inc out inc and bound in sub jnp adc jmp or (bad) popa inc and insl out add outsb cmp stos in add es ret adc pop jb stos jnp stos ja or enter adc cmp fwait es out and inc cmpsb mov mov inc cmpsb sbb xor mov fcomps xor test dec bound repz hlt movsb pop test sahf out call pusha or sub sbb ret loopne call test add push or jo mov mov out test and je clc cmp pusha rorb add pop int3 inc cmp test dec je and fistpll mov mov push icebp adc (bad) push or (bad) je jmp or push cltd pop sub repz dec je loopne add jmp mov aam cmp daa aas or jnp hlt movl sbb push pop adc rclb jp push jg aaa incl jmp loope fidivrl ret pop push and movsl push lea jmp jo inc and fsubp dec jp pop add cmpsb dec sub xor fidiv xor push jmp mov push imul ljmp lods mov fstp std push (bad) add jb or mov jmp cmp pop int or xor lods (bad) adc and mov push inc lret mov jne aad push mov (bad) fsubl sub aaa gs push mov mov aas adc sbb pop add mov dec add test das aaa lock cmp cmp jle movzwl and sub mov adc cmpl je ret inc js mov fstl fdivl adc call jmp adc (bad) jmp nop push jp add stc pop ret dec and lea mov out orb xor xor ss push (bad) sbb cld adc cmp mov pusha and sahf es js neg cmp sub arpl outsb (bad) lret push es inc mov ss add mov in in mov adc cmp mov incb and negl pop xor cmove mov cmp aad test ljmp cmp jae cmp call je psraw add push loope add es pop cmp call mov dec je cmpsb outsl ljmp adc iret xor add jg test add movzwl cmc outsl add test je mov lds inc mov pop or cmovb rolb or mov (bad) pushl adc movw mov lea lea and fcom movl cwtl or je fnstsw add add mov (bad) imul (bad) push lea cmp xor inc xor shr incb mov je pop das je lea inc mov loop sbb popa add inc jne faddl mov cmp data16 insb and mov xchg lock add mov lret add pop lds or inc jge mov ds or xor shlb or push aaa pop xor mov cmp mov pushfw test xor sub jns (bad) cmp add inc test inc lea mov and cmp mov lea sbb xor cltd add nop xor (bad) cmp mov sarl ret jnp cmp je lea add pop dec xor pop idiv pop xor stc das je lea mov lea adc add or test jne mov and lock jmp sti pop in out add jmp sub std cmp jne (bad) jg and inc and add movw lea sub mov adc sbb es push ret (bad) cmc (bad) mov xor pop sub lea lea clc mov xchg push xor xchg xchg inc hlt (bad) dec sbb stos outsl xchg add lcall in pusha dec xor (bad) pushf (bad) jmp lret aam pop mov add or imull cmp push cld jmp mov push inc in push mov sub imull aam cmpsl push sbb dec inc add mov leave add xor sbb and (bad) movsb adcb sbb movsb xor test cwtl ds xchg movsb orl mov sbb xchg add cld jg sub call call jmp xchg cmp leave cmp shlb movsl sub sarb or add call xchg jnp cmp xor and imul js or cmp je push or (bad) enter jg rclb test in pusha pop or xchg push mov adcl push jge insl add push add sub add popf mov pop add sub sbb ret mov mov add ficoml mov sub add incb psubsb mov dec pop inc add push push mov inc add mov push pop test add testl xchg jbe arpl enter dec cli hlt cld fcompl sub (bad) xchg or rcl and dec cmpsl cmp arpl adc test jecxz fisub je enter adc jne lds (bad) ja js insl enter cli jbe test mov or pop or push jne xor xchg and or stos out dec in jmp cli hlt cmp cmc mov ret xchg mov cli dec je add xor cmc push aad mov add pop stos pop sub jge das jne (bad) into rolb leave xor and adc inc mov add inc jmp mov mov add add inc xor inc xchg out sub xor jmp mov sbb mov call clc cmpsb add mov adc push jo iret ret push jmp add dec and push and push mov mov call call add or xchg arpl les mov mov cmp mov pop sub adc test je (bad) lcall mov push test je cmpl mov dec jne test je cmp xchg test xchg mov cli jbe xchg and adc pop mov bound cmpl jno mov fs in (bad) (bad) jmp lea call push addr16 jmp pop inc aas lahf add and mov sbb push test jo in jns or pop and test loope (bad) call push lds loopne lea pop cmp add inc inc add jnp and mov movl clc pop loop inc jns roll jmp jb out sbb mov test movl je popa xor cmovns jmp or leave pusha add icebp fisttpll sub test pop dec and mov cmp je push pop call mov lahf fdivrl xor movl enter (bad) je in xchg jmp adc mov scas rcl adc mov ljmp sub test mov add inc icebp ret out out add rorb orl push lds (bad) xor add inc mov sub ljmp test rorb aas lea dec adc or dec adc dec or adc sbb add or or jmp mov or jp popa fadds sbb xor add sub push jb xorl jmp jmp call add add test cltd andb clc scas addr16 imul mov popa sub daa xor xlat sub inc push jmp sbb out mov push stos cld jne cmp inc pop mov add pop sub add cmp or xor inc hlt hlt outsb call nop mov xor xor add inc (bad) nopl ret daa sub dec (bad) mov lods call cmpsb loop dec inc push cmc xor movl or mov (bad) push enter sub jmp inc or push adc je inc stc cmp cmc lea add incl adc push add sbb fadd ds into sbb sbb sbb fsubrp enter add iret std sbb dec inc add jmp decl scas mov mov and add test inc jo sbb test cmovp mov add or rorb imul and xor jecxz mov dec and inc fidivl test je das je cmp mov inc cs mov jb das testl add and mov jae sbb call mov adc test je lea push pop inc dec incb sub call scas arpl add imul mov cmp les cs pop xchg call dec dec cwtl ds mov popf ljmp push inc mov repnz (bad) fisttp sbbb jns fcoms dec dec adc dec addl mov pop and ret ss adc and fcomps imul cmp dec and pop add or pop push and addr16 xor loopne ret lods inc in jmp dec pop push and cmp adc pop outsl test lcall and push pop push and bound test dec ret (bad) sbb cmp out cmp push movsl loopne movsb mov dec or je add call ret sub or test pop and enter roll (bad) or in and push and call nop js jmp repz or repnz jmp leave int3 fdivl fidivr punpckhbw insb shll (bad) es repnz mov ds or inc jb in cmp js arpl lock and ret testl js divl jae sub cmp test sbb jne push loope mov xchg jmp xchg scas inc cmp jp add and popf fidivrl pop xchg ficompl push xchg ret sub je or idivb sub push adc repnz (bad) push inc xchg fmull dec and jmp test and sub dec loopne popa mov pop and je je mov inc jge inc fwait addr16 xchg jnp add or repz inc scas push adc mov push adc test inc hlt push cmp dec or mov insb xchg test push cmp and xor test dec addr16 and lea sbbl cmp test insb fcoml and je popf mov sub daa adc shr jne push clc cmp mov push out pop add mov in ljmp xchg mov mov sub xor xor mov add int3 repz add imul mov jmp movsb dec sub add or mov mov imul rorb cmp dec cmovge sarl push add add pop aaa fidivr add xlat inc and jmp (bad) lahf add add scas jmp (bad) lahf or push rorb dec lahf add cwtl pusha mov pop add cmpsb xchg scas sbb adc and scas pop sub mov in mov outsl jecxz test sub xchg (bad) pusha stos mov jmp cmp (bad) and mov pop mov mov lret into sbb cmpsl sbb xlat sub dec add (bad) scas nop push scas or notl add (bad) icebp sub (bad) int (bad) (bad) jecxz adc mov repz loop sbb dec je mov dec daa or lret xor lret jbe repnz das mov (bad) int xchg jno or adc clc cwtl clc xchg (bad) pushf vaddsd sub fistpll jge daa jecxz mov jl add clc fild and test rorb push sub iret add enter movsb lods ds xor pop cmpsb add lahf stc ret cmp cmpsb lahf aaa icebp pushl rep test setne test adc mov ret jg rorb xchg rorl mov je mov mov jno sbb xor ret mov pop sbb test shrb test add loop and add mov sbb push sub jo dec imul adc mov mov sub and aaa and lea je pop dec aaa aad dec mov imull call jo je mov rorb push push and cmp test pop or js cmp xor push ret dec adc adc cmp (bad) lea fildll or dec xor and sub or out push or mov and (bad) je subl fmull pop adc or cmp call sub xchg lock lret jp sub mov jne lret xchg outsl sar pop hlt je lea lea add pushf je dec push cmp pusha and xor call je jb test je ret xchg sbb ret outsl jle aaa jecxz mov push fcomps or lmsw shlb aam lret xor out or inc into jae and (bad) mov add roll xor and push xchg jo and dec mov clc xor and popf sub or push aaa xor jmp nop scas call test loopne notl mov inc pusha stos das jnp ds cmp je mov sub (bad) or out (bad) cmp jne mov jmp or mov and (bad) sbb sbb outsl das jmp push jbe shrb sub lret jmp cltd xor aas pop adc (bad) je mov addb ja jg and mov inc je xor (bad) out jmp xchg (bad) je mov and insl sub je scas insl and add (bad) pushf xor rolb or push shlb mov mov je test sub sbbl or insl cmp lret push push and inc jge test dec call lods gs dec iret jo lock je pusha out int int pusha out incl shrb adc movsb ja fs dec aas inc call pop xchg imul add test sub divl orb popf jge insl cmp gs fisubr leave leave subl lret repz ret test adc daa cmpps pop and adc and xor jo les jmp xchg lcall cmp setl inc and cmp jo cmp lea lahf ja push jmp imul mov xchg sub cltd pop fs or pushl ret cmpl dec ljmp stos pop inc inc jg mov pop xchg or out popf mov xchg add ret xor jg mov mov pop daa jmp daa jg fucomip mov dec dec out imul push xor inc push (bad) mov add sbbb mov je ret (bad) dec lret pop inc test jg sbb or nop mov aas (bad) xchg cmpsb add mov enter mov or xlat mov addr16 mov fwait mov push cmpsl iret lret pop pop and sub inc aas sub call mov sub adc mov jne ljmp push test adc arpl inc adc or addl inc and popa rorl addr16 mov mov clc or test jne fiadd ret inc add push dec int3 sub xchg aas int adc mov call inc adc call cmp and loop xchg cli cmp mov gs and data16 mov cwtl pop aad xchg adc stc cmp xor pop cmp lds jne push pushf bsr mov test jne sub (bad) leave (bad) das call and aaa mov rolb pop and push add sbb out add cmc popf mov mov xlat push and jne mov mov mov js cmp xor cld mov xor dec jg movsb pushf orl gs hlt sbb mov mov add ja lret mov add xor jg fild push das xchg adc push jg sbb sub in call aad add and std dec fild cmp and rol aaa pop jns fild add add rol adc xlat int3 ljmp rcl push lahf and cmp ljmp add or cs fucomip mov inc rcrb ret sub aad adc xchg add lcall rcrb xlat xor pop shll xor cmp sbb inc cmp mov arpl in aaa mov arpl mov scas inc test adc mov sbb call xchg inc xor jmp fisttp mov jmp cmp mov inc test sbb inc mov test fild and inc add xor repz rolb jg lret hlt (bad) test test inc xchg fisttp and add or jecxz rsm and mov outsl ss add test incl pop outsl push inc sbb addr16 out mov dec (bad) mov out jl repnz push (bad) pop incb or decb inc or (bad) pusha in scas rep out into addl addl sbb std push add sbb mov inc loop scas jbe add push test adc adcl xchg and mov mov sub cmc jg orl sub and adc push fidivr scas bound inc lods push test push pusha xlat adc shrl mov test dec jg xor mov (bad) mov pop or aam adc mov test jne cmpsb adc jg lods pusha aaa test pop push jg push add pop test jg pushf loope out jmp (bad) jnp push out jg cmpsl xor (bad) jg nop inc sub outsl xlat add pusha jnp andnps add icebp add pop fs add movups stos (bad) pop orb outsb adc add call nop pop mov push push adc jbe push mov or mov call or insl unpckhps (bad) and sbb jge inc daa inc sub loopne aas pop inc mov bound push mov pop cmp ss pop fcomps aas aad aad loop mov fwait andb inc and mov inc and mov or add sbb sub wrmsr and ljmp stc (bad) ffree inc or jnp inc inc lahf or adc sbb xor add mov incb add (bad) sub gs es add add add push lods inc ja divb push mov mov jl sbb mov loop lahf repz cmp mov cld sbb adc popf ds outsb dec loop add cmpsl pop and dec gs inc mov lret pop mov outsb push and push lock inc and loopne stos mov and and fiadd loop jp ror push rcrb mov push mov sub push jl inc or divb ljmp sbb inc mov lods add xor dec loop xchg ret scas pushf pusha nop cmp jo jmp nop push out scas pop (bad) decl xchg add aad pop cmp shlb pushf data16 ss fistp inc dec mov mov jmp inc push idivb jg dec jmp inc loopne fsubrp test xchg rcl mov add mov mov mov (bad) mov xor jmp shrb leave add inc or sub loope (bad) movb jmp push sbb push les sbb je pop scas jne mov push pusha add scas aas scas or sbb dec fisttpl pusha push sbb rcrb loope cmp inc push test jl xchg inc loopne stc fistpll fistpll out das cmp adcl (bad) pop test mov pop fs jo adc xchg add inc out cmp inc das rorl xor pop test xchg jecxz dec jmp xchg decb ret mov and addl adc xor in fwait and and aas and and sub (bad) add xor jno movb fs or mov aam imul xchg inc enter inc inc cmp push and cmp ljmp lahf cld cwtl ds adc out add sub icebp push aad sbb sub sub aam mov jge rclb add cmp cmp push push rol inc cmp push push es int3 pop loope mov loope lcall leave fistp ror adc inc fisttpll mov jo inc push pop and test cmc scas sub cmp je call adc or and ja cmp and jecxz or lds add cmp xchg mov and movsb out inc aad jmp pushl call je jo lahf push and shlb adcb jp xchg add dec sub cmp imul aas andb inc sbb push inc mov jae adc sbb test je cmp rol fldl popf scas je adc jecxz insl mov shll push cmpsl sbb out inc dec xchg adc cmp ljmp out das mov sub sub std push aaa mov or cmp rorb inc daa add inc lahf cmp inc test adc push jmp aad dec mov call and push out fdivrs mov push adc outsb add sub stos mov ret sub and sbb test adc test and sbb gs loop lods seto icebp or xorb or mov sbb fstpl fwait sbb or in mov mov in out pop mov mov js pop sbb fcoms or lea and inc and cmp incl out jp mov inc add je sub dec lds pop push cwtl mov mov mov add and lea mov test je popf xchg dec xor bound xlat cmpsb cmpb dec je addr16 add mov test jne rorl sub jns jns std ljmp clc in je pop and add lea cmp ja imul inc add dec adc (bad) fild inc or mov mov mov mov movl inc out movl add add cmp jb push or dec and add dec jecxz push mov lahf or sbb cld add stc cmp and in inc dec or xchg push jns push xchg ret bswap mov jnp or cmp jb mov xor ret sbb loope andl push add loope pop adc add and mov mov mov inc xchg add jbe std fldl lods cmp call jmp shlb nop add sub out mov in je mov clc sub stos pusha push adc jmp adc mov mov mov or jecxz mov mov mov mov pop mov movb mov mov (bad) push nop test inc stos jnp rorl mov hlt (bad) lcall add or adc aas pop add mov dec add xchg nop add jmp ffreep xchg sbb sahf mov (bad) jo jb pop adc cmp test (bad) (bad) push ret pushf mov fs jg mov call sub leave push mov rcr shrb adc and or pop push ret (bad) push push dec adc lahf ficompl clc inc sub lods jnp inc outsb rcrb mov arpl jmp dec aas daa or xchg inc and das jo loopne mov mov aaa sbb add cmp stos add or adc dec adc jmp cs add outsl mov cli cli sub add aam mov jne repz inc add je jle mov je dec decl ss cmp add mov inc adc je ret aas mov add xor jge add mov ret nop inc in add jne or arpl sarl inc cmp das mov fdivrs mov rorb mov or add mov lock push push hlt mov mov jecxz rolb mov push outsl jmp es dec mov outsl mov loope push mov mov fcmove neg aam test lock jne test je cli push mov inc jmp stos sahf inc inc movl cmc sub sti movl je loopne pop hlt inc and push mov adc add push mov test idivl pop dec sbb dec jmp dec cmp test lds enter inc inc adc mov ret xor jnp out mov decl jbe mov nop mov xchg (bad) call mov adc jbe xchg cmp push and out mov pop xor sbb cmp inc pusha outsb aaa add mov or pusha pushf push xor fstpt (bad) mov out or dec lcall inc test ss dec inc or inc outsl inc jle mov lds fbstp add sub jae lea mov mov lea mov mov loopne push aam inc cmp out lea aad mov and sub jl cltd lea add and ret dec sub sub pshufw xchg sbb mov (bad) cmp mov call arpl je cmp fucomi das ret test cmp jne add jmp adc mov inc add inc mov into jmp (bad) das (bad) jae test pop inc cmp xlat test daa inc insb xor jo cmpsl jmp mov jl (bad) mov push leave in lock mov mov mov pop push ja call clc add adc scas loopne add cli add mov add inc ret jmp cmp lea sbb mov push jne call clc add shlb or and push pop mov add aas mov add inc sub loopne adcl jnp popa or sub loop mov add cmpl mov mov push fsubs fbld inc or and or dec add pop or sbb cltd (bad) pop add js loope mov call push xor add jmp pop pop int3 push adc dec xor sbb call out add and test or test add add ret push cwtl mov ret pop (bad) cwtl (bad) jge es into jno mov mov popa ret pop scas jnp mov shrb lahf in mov inc sub sbbl stos ret xchg test xor push aad insb xor add test and sahf mov xor repz xor mov in int xchg jmp mov popf cmp insb pop and mov adc nop out inc mov sarl gs cmpsb inc push insl mov pop pop fcomps test xchg outsl dec cmp (bad) aad incb or mov ffree out jno or sbbb call adc inc sub jb cmp nop jmp dec sub incl sbb add mov mov or mov mov cwtl and adc add xor sbb mov adcl jne push sti clc pop lahf push ret sub je pop jmp xchg inc lds fisttp sbb stos pusha outsl add cmp incl mov jge pop repz or mov mov lcall stc or in xchg divb push xor (bad) aas push add push xor add mov adc mov jne pop daa outsb mov inc add lar adc iret nop jne inc pusha or test jmp movsb jmp scas push xchg mov ljmp (bad) incl sub ret cmp pop xor inc xor jb pop inc je mov test je mov aaa mov mov test scas rolb and add cmp aaa sub xor scas aam sbb mov xor jne je inc inc test sbb jmp mov aas es jg and inc je mov mov in add cmp jne xchg xor out cwtl xchg inc or outsl xor cltd adc add inc sarb aam std test inc es inc jo out cmp test jo nop insb xchg push int in inc stos xor mov cmp inc out inc insl inc int3 jo scas in sbb and in inc mov inc pusha push inc js and and jp adc jae or and push aas movsb (bad) push out push inc cmp bound out cmp inc js inc fisttp xor fs scas hlt subl dec mov dec inc inc sahf cmpl xchg adc dec sbb cli dec nop nop pmaxub shrb jne or mov (bad) jmp jo pop jmp xchg or and inc testb ljmp jne cmpl decl test stc mov add sbb mov and or popa or into test adc mov xchg inc sbb dec lret or xor push pop pop dec or mov loop and push mov xchg cmpsl cmpsl testb je sub (bad) add inc and push mov fist les pop pop bound adc fisttpll test fsubr mov pop push aaa xor outsb aaa dec jne dec adc jmp inc fadd call je cmp jne das ss jbe mov in and sub inc jmp pop add lock (bad) jmp ud1 push and adcb mov sbb mov test xchg xor sbb or (bad) push es or jmp inc ret jnp lock push inc sub pop inc stos out ljmp push add call or or lcall xor add jmp sbb mov xor pop mov cmp je add outsl push test sub adc dec roll add inc jno pop ja cwtl sahf jmp jae mov pop jmp sbb hlt jle inc push mov mov mov lock adc jmp nop fild push (bad) jge cld fwait subl sub cwtl inc and mov fwait mov sub repz clc and add pushf mov push loopne xchg test andb xor or and test pop add cmp adc add jg lock stos mov mov dec stos cld mov mov call jp jo adc jae inc and push ja shll aaa and inc cltd inc in mov cli sar rorl in je jae inc pop and sbb add dec sbb aad in je or mov data16 popa jmp mov add cwtl jecxz movl sarb lds add inc sub cwtl push repz push cmp cmp sbb jp inc popf sub ret js and add enter cmpl mov call jmp cmp cs or inc (bad) loopne adc jmp iret xor mov adc or sbb inc in outsl push xchg mov push adc lea (bad) ja mulb js push and in push cld or mov call adc adc movsl jbe push xchg jle jl cmp pusha (bad) aas cmp inc mov test mov test jo je inc into inc adc rol jno ja push adc mov mov adc testb sub mov mov and popf (bad) xor in hlt sub add sbb sub (bad) xchg loope test outsb and test mov mov std sbb ret pusha mov loop je js aaa sbb dec and mov call pop int3 imull aaa and test push test (bad) fucomp mov or mov or or outsb pop xorb or xchg int3 adc rol push cwtl test andb movsl orl test cmp mov clc pop pop pop ret cmp adc mov test nop fidivr mov xlat add call call xor dec and or sub and les sbb inc xor mov sub jne jl sbb popa popa inc inc sub repz test fdivr dec mov out add int sbb adc xor repnz sbb jle xchg test pop gs rdpmc (bad) mov shll sub addl mov pop ret push pop pop xor or cmp dec (bad) addr16 pop add test pop adc push into fistp rorl sub adc add mov mov xchg clc scas and sar mov mov sub mov inc (bad) or add jne into fnstsw test mov lea test (bad) fidiv stos mov xchg inc sbb sbb rcr icebp es call add decb xchg rolb fs hlt mov adc xor cmp cmp inc add call xor int adc xor inc and mov cli mov and testb je jo xchg pop and roll mov adc push adc in out dec pop adc loop and js lea add sbb pop lock ret dec loopne (bad) jle repz push pop loope andl mov and mov aas mov (bad) or cmp mov inc ja add std and inc sub ss mov inc (bad) out mov jbe xor push es add rorl test cmp push mov pop inc out call test in sahf add mov mov sub inc iret pop mov mov push call in mov (bad) pop and sbb outsb jo push call fist mov testl in sub mov mov add jmp sbb in cmp lds and outsb or cmp mov lods addr16 mov jne or rorl push cmp mov mov lret mov or xor pushf xor cmp jp lret inc add adc je add adc adc (bad) fldz add inc xor jmp jl add aas dec add fs push packssdw (bad) cld call jmp and cmp sub mov inc dec sbb mov xchg call outsl test mov mov movl adc add (bad) xchg mov jne ljmp ljmp testb jne test adc mov loope mov add pop or (bad) sbb and cli iret xchg je lods das or jg cmp (bad) jae test je rorl cmpb jne add xor cmpsl push (bad) push xchg lods pop adc jno xor les jne mov mov or ss mov jne sbb lahf rorl and popa adc (bad) jle test dec subb push daa xor and and pop or or and add mov std sbb pop mov test jne lea inc mov mov mov jl cmp pop pop pop ret shrb jae xor xchg imul iret jae mov sbb iret test push in aas add scas popa (bad) iret flds fiadd rorl ss aam lock je mov mov or pusha loop rcrb out or add repz movl insb jbe add adc insb jns push cmc (bad) ja xlat push push mov scas sbb cmp mov push push jbe call out rclb icebp ja insl je movl or adc cmovno push call mov adc cli add addb inc mov es imul xorl inc je into (bad) dec or xor loop mov pop jbe push mov sub mov fdivs inc mov mov push (bad) pop rcrb cmp jne call movsl add jne std adc fs cmp adc jle mov mov inc andl or inc inc stos mov je xchg mov sbb shrl add ficoml out ret movl jmp mov lods or call and or or xor and outsl jo pop cwtl loope sub mov mov or or lret jo aam jmp and nop push leave inc jg add push (bad) ja andl call stos pop add mov mov add out call cmp es sub pop inc and mov pop inc xchg add inc iret mov pop mov (bad) lret add jnp das add test dec das movsb adc sarb jae nop mov (bad) call cld inc dec add or dec jmp xor cmp pop std insb push push mov push and mov pop sbb outsb movsl sbb add call pop outsl sbb jle adc out call in rcll outsl (bad) xor stos fdivrs xor jecxz repz aas xor or in int3 xchg jge jno cmpl and add cmp adc test add or jnp mov add inc inc xchg (bad) std mov movl inc inc push add inc cld jne addr16 add inc mov dec push inc das add test nop imul je mov leave jne fcoms mov call mov jne dec mov out cmp mov or testb aaa jl arpl push and in add fist aam test mov jne mov or xor imul mov test mov adc inc mov adc cmp jp adc jo ret sub test roll jg rclb daa and push cmp aas (bad) and add add sbb mov xor inc fild mov nop sbb sub sarb scas mov lea clc ret fist rorb fwait inc dec sub shll push inc push mov test sbb lods cmp mov mov mov mov mov or and adc movsb test ret add inc ljmp or push mov paddd inc add inc dec mov mov js (bad) mov mov adc pop cmp and test int3 std xchg mov add out jne fild nop sti mov test pop test jne ja push adc inc orb std mov ret test sub ret test dec and add nop decl add sbb les stos mov mov cmc pop out xor add test call clc inc xor test roll sub (bad) mov orb pop or mul adc mov inc mov pusha mov loopne in or out nop or (bad) repz scas mov and push jg,pt fisttpll or push mov rorb inc inc clc add pop mov jmp xor scas inc sar int3 out and add test (bad) lcall adc (bad) mov push jmp loopne mov testb push cmp mov push (bad) push add and in outsl sbb mov pop pop xor sbb lea push rclb inc ror nop mov jmp sbb (bad) stos jmp jne push xadd add or js pushf ret mov jo mov lret inc and mov mov or nop (bad) jp cmp adc pop and (bad) sbb or in fs in sub xor mov inc adc scas push add inc cmpsl les test and inc movl movl xchg cwtl setg (bad) add es iret out mov stc (bad) push (bad) xor call (bad) pusha jo or (bad) aam test sub xchg (bad) das add and mov out icebp push push fcmovu int3 inc add and test (bad) out aas sub and push cmp (bad) call mov push out sbb sub or imull sarb fs or mov sbb jl sbb int3 je sbb mov mov xchg xor stos sub mov call jmp or mov jae or popf mov and out aas xchg push inc je mov jmp add outsb test add leave stos in enter jmp (bad) cltd mov inc jmp mov lahf push call call lds test add push sbb or cmp jmp or cmp test loope dec and add jo xor iret cmpsb pusha fmuls ljmp test das imul mov pop in call mov fistl sbb call pop xchg mov and xchg push (bad) subl gs and sbb sahf sbb repz jbe inc and pusha rorb mov pop add jbe cli add adc inc jne xor stos push cs (bad) mov idivl mov pop jmp or in xor enter jne xor add in call ljmp push mov in pop call sbb jne sub push or ret sub sbb mov lods sub sbb je adc inc das add push jo ja cmp (bad) pop adc in (bad) shlb cmp adc add xor or std (bad) jne pop mov adc cmp cmpsl call mov call imulb ds lcall mov dec mov push mov fsubr imul aas in cwtl lea nop pop jb,pn and or pop je es mov mov jnp je add jl mov mov lea sbb jl imul fisttpll mov jmp imul cwtl push add mov xchg xor fnstsw cs sub sub mov add mov loop inc jo cmpsb fnsave jmp bound mov ret aaa mov decl movl or pop movl mov sbb and call fwait adc inc push addr16 ja inc or push and sahf mov xor out loop mov jae movb jmp mov pop (bad) movlps sbb or inc or call cs adc test inc mov out sbb adc xor addr16 roll lds bound or sbb or orl hlt pusha insb out jmp xor jg loop mov (bad) (bad) and aad lea and je stos (bad) xchg mov movl jno test andb xor mov andb pop shll cmpb lock mov mov movl inc or movl pop ret fild or cmp pop nop mull push andl jmp dec cmp push je cmp jne add adc cmp sub xor call jns xchg getsec aad pop sub aaa pop ret pop or in adc pushf mov in pop push and sub push adc adc or rcll jmp sub jo lods call cmp and xor mov jmp dec and insl cmp push and sub cmc pop subl sub pop pop mov pop add popf jae das or rcrb andb pushf and inc or or inc fdivr and and xor je and mov xor inc xchg jne dec rcll jne leave add jno xor loopne lret pop jmp jg imul test scas ss jne scas je jbe test push mov push add mov call push adc push adc fist je mov mov mov pop jge adc dec add jle ljmp test je jecxz scas sub test and outsb ljmp inc jecxz push sub loop aaa loopne scas inc cmp daa test je test jne add dec loope cmp lret push sub rorb dec mov add insb sahf aas test loope push hlt je mov call pop xor test lea add add orl fildll and repnz pusha adc in inc sub sbb mov jnp add les out or mov cmovno mov fxtract adc lods mov inc xor outsb jp call and cmp mov add xchg cmp lock (bad) decl test jne out cmp andl test jle adc push sar adc (bad) pop (bad) jp mov inc xor pusha lock sub mov and sub lcall es or add and loop mov out aam push inc sub roll sbb leave cmp and loop jmp cmp (bad) cmp jne in inc xor icebp pop inc and test push cmp sbb and out pop jns int3 mov test sub dec mov loopne inc and jmp push mov sbb xor and or cmp inc ljmp test jne test je mov and mov or nop (bad) xchg adc jmp adc cmp jns fisttpll pop aaa dec adc xor leave je inc jle std clc xchg je jbe push test cld lcall mov dec xlat pushf call jmp int push and adc push mov sub or fisttpl cwtl mov xor inc inc xor dec fwait (bad) call mov or or pop jge gs mov rorb xlat sub mov sub push inc jo (bad) rolb gs lock test mov jbe (bad) pop sub icebp adc mov inc arpl xchg adc adc cmp inc and and jmp sbb das fs mov cli pop mov add bound inc arpl sahf fsin inc pop push pusha mov mov adc or mov mov mov sbb cmp fist pop add (bad) jecxz test and fs jmp add stos adc cmpb call ljmp and je pop test jle imul add movl cmpsb incl mov inc inc push pop dec sbb fiaddl jo cs movb xchg xchg and stos (bad) call mov lea sub cmpsb std test out das orl in jg xchg rcrl and mov subb lret movl add push pop or daa inc mov add jle jo adc clc in mov add cs mov cmp je mov mov ja insb (bad) pop call xor add add adc rol outsl aas fadds imul push jmp sbb lret jg stos clc adc mov jae,pt or cmp add jl js add test lods push jo popa push dec pop icebp aaa adc mov je cmp ret ss hlt jg jne mov jmp mov iret std (bad) psubsw xlat (bad) adc or sub sbb mov pop test icebp add inc add add add adc push adc adc add out stos stos mov call sbb mov (bad) xlat ffree ret out clc push sub icebp dec push cmp rol add or pop loope scas imul push or ss adc mov mov test pop subb ret dec lds adc mov mov roll sbb adc stc push insb or nop or inc add lds push sbb pushf xchg lea fsubr adc xlat cmp cmc inc push inc and mov mov jne add clc call or jnp test int3 rorb jbe mov mov mov jne scas sbb pusha (bad) scas test and inc ret lea sbb sbb into mov lods lock and add (bad) lcall cmp mov hlt push fucomi jne enter int3 hlt xor sub pop and in arpl insl stos dec jmp push lcall adc xor pop ud2 scas pavgb stos pusha outsl popa popa call mov jmp pusha imul xchg or push stc mov jns cmp sub cmpl rolb inc jmp pop movsb outsl mov pop out test pop mov cmpsl das test and test movsl jne test jne sbb dec inc cmp jmp sub inc dec js xchg jg (bad) fs jne (bad) add ljmp or in es arpl in sub jmp into les or pop or jp jnp pop inc jne pop xor push mov cltd mov inc cmp out sub xchg testb jne repz sub into cmc jmp (bad) pop std cmpsl inc mov push jmp data16 aad decl cmpsb adc mov in stos add jne xor call add push add pop iret cmp pop and pop jmp call lds int3 outsl lock outsl mov cmp adc jg lret je add pop dec adc mov in sbb decl aad clc out pop (bad) push (bad) push pop incl inc cmp xchg jg flds (bad) notl sbb les mov inc incl (bad) fidiv adc sub je loope addb inc gs xor inc dec inc xchg je mov add hlt roll sub sbb xchg fwait popa inc scas xchg cmc ja push and mov mov popa (bad) (bad) lahf jg les je mov and inc push call push pop adc idiv decl (bad) out test and sbb cmp adc adc test test je mov and and test push in jne,pt push addr16 and mov ficom push or rorb cmp jno ret sbb ret clc unpcklps add imul xor out jns aad mov jae sub ds popf mov mov sbb pusha xor pop xor lahf popa xorl enter inc pop mov bound cwtl (bad) sbb popf inc fsubr xor das outsl out inc aas push aad fild test je pop inc adcb xchg inc mov pop cmp je cmp mov subl add or lahf sbbb call je add fcompl or jbe mov pop cltd jl push lcall inc cmp dec sub scas lret and xchg and inc mov add (bad) (bad) gs pushl xchg sti fnstsw mov mov mov call gs sub lock xchg mov in (bad) or cmp incl sti jg sub jnp test je pusha dec mov add add mov mov test fcmovb jne jmp mov dec inc add mov lea test mov in pop xor mov and callw pop js stc lock inc sub xor test jle out hlt cs rorl fiaddl icebp sub sub lret into (bad) (bad) cmp mov ret subb jne and jne rcrb push xor and cmp push or outsl push (bad) clc jno in orl mov pop enter push and cmpsl test dec inc cmp popa xchg and test in push (bad) sbb movsb and fs out xor aas std jg imul lea or test (bad) dec inc jne fucomp daa mov jbe into jne into icebp test jle xlat jo inc xorl (bad) out sub jne mov mov call mov sbb xchg outsl dec into rclb mov or insb decl add lods aas pop or movb pop jno push lahf data16 or rcrb inc ja mov out pop jl sbb dec push mov dec and aas (bad) decl and pop pop ret mov and sti loope enter mov jmp xchg adc cmp cmpsb sbb adc mov (bad) (bad) (bad) pushl incb je test jne test je cmpl jne testl jne pop js lds nop pop fisttpll jg call fild insb and ret sbb mov shr pop stc pop pop jmp jmp add call inc lock je mov lea mov add (bad) cmc out mov push sub sub add mov std add mov bound jge test push movl cmp cmp push sub xor jbe dec adc pushf addr16 push das (bad) add jbe push fisttpll (bad) sbb (bad) std jmp bound test pop rclb sub xchg call je add mov test unpcklps push inc mov sbb xchg out inc iret movsb icebp or adc cmpsl js mov adc test jl xchg sub pop xchg xchg sub xor mov xlat or popf addl jbe call sub add sub mov sbb jl (bad) sub rclw aaa adc test push xchg in mov mov inc and in (bad) xchg (bad) ja test je cmpsb sub cmp mov cmp xor callw pop ja dec inc add sbb sti jne sub push adc call or mov dec push or ror insb and call adc andl cld inc and call xor sti or fwait dec push lahf dec mov cmpsl lea inc adc mov aaa or mov push mov outsb sub sub (bad) jmp cli add cmp jb sub sbb sbbb inc mov xchg jb in pop fmulp in mov xor inc jmp cmpsb add or xor dec call fsubrs ds jg lcall into jmp scas cmp cmovae sbbl push pop mov pop insb mov in pop fsubr push inc sar sub sub add add inc or pushf mov xor adc rorb bound push xchg push pop rol jbe ss test pop sub and clc mov and lock xchg dec loopne adc mov jno jae pop decl push fsubs inc and add adc push idivb jmp aad adc inc lahf inc or out jmp jo jo mov push sub pop mov push call push pop cmp pop mov mov jb push testb mov movsb faddl add inc or orb mov add sbb pusha out ja sbb (bad) (bad) jmp and dec dec cmp jmp pop pop xchg inc pop xor xor cmp xchg mov sbb mov push xor shrb xor test lds adc inc mov push push (bad) xchg testb inc inc std mov xor cmp je js dec cmp inc scas aad je pop mov push sbb movl mov cmp mov je ljmp mov mov test idivl mov test je cmp or xchg push mov push fs mov or inc dec or xlat or (bad) in rolb mov sub out fwait xor inc clc add or add daa jmp aad mov lret push mov mov pop call pushf and aad jae aas and (bad) or test or mov mov (bad) lret in or dec mov jo test cmp or adc aas dec jb fcomps popf imul nop adc sbbb je push mov sar xchg movsb das pop test imul jge add fsubl pop jmp shll adc cmp out add inc and lret jmp (bad) pop fmul inc leave icebp inc add push or decl cmp dec test ret (bad) sub mov popa inc or or (bad) adc adc jge incb push and je sbb pop mov shl mov jecxz fbstp in xor sbb inc jg stos es (bad) jne mov mov sub xor xor mov lahf jecxz inc test stc sbb loopne mov in xchg mov iret ja,pt add inc sbb sub aam pop aad aas mov sub cmp adc jbe inc xchg pop inc (bad) js jl movq add test dec mov sub sub or mov (bad) jo scas add jb ss call add roll aad push iret jge mov pop frstor jns in out pop jb test and and (bad) pushf ret mov jmp and or shr dec dec dec add sbb sti xchg mov movsb mov lock leave leave (bad) pushl rolb and add jmp push into adc in adc and loope add mov xor or mov or mov xlat daa test adc mov cs adc inc xor sahf lret push add or cmp rclb in repnz cs pusha add sub inc int dec sbb mov (bad) incl fdivrs pop add test xchg icebp andl loop cmpxchg adc push popa nop das mov (bad) jns xor or mov jb cmp mov add push repnz nop call enter adc decl std dec push negb mov sbb jmp stc cs inc or daa sub jae cmp mov scas popf lock push aaa push or pop and pop das add and cmpl and xchg je aam call cmp jle adc pop adc insb xchg jo or fsubp cmp cli xchg mov bnd (bad) jne mov lcall cld cmc and (bad) jne xor test setne shl mov clc dec in loop int insb inc roll je fmull gs mov mov cs cmp ret add mov push pop jne call pop sub mov fwait mov ret add add jmp sbb jmp inc fdivs dec movsb cmp add mov btr lods test xchg (bad) push je add cli pop insb decl cltd jo fistp pusha ret xor inc or and or daa or jne test adc push das mov mov fildl (bad) mov (bad) je mov loope outsl push push jg and out pop sub movl (bad) pop and je (bad) mov jle ret cmpl pop ret pop jmp out pop mov psadbw or testb jne sub dec inc mov fild cmp rorb mov mov rolb inc inc lds add movzbl fwait (bad) lcall mov add sti fisttp lea loopne mov (bad) or or inc inc stos jg inc add add sahf push jne enter push cltd push hlt pop int3 inc push and je orl jp (bad) lea aas mov fs or je inc mov or xchg mov addl xor xor mov je sub mov sub push sub sub aad je lods outsb stos pop add cmpb pop (bad) lea movb adc popf pushf jecxz add roll sub sbbl adc aaa jmp inc mov mov cltd pop or or pop mov jne movzbl popa jp jno test lock hlt mov loope adc xorl mov addr16 mov in fucomip cmpsb aas mov test jle call add add mov imul (bad) mov sahf add pop add inc add ja subl out add sub xlat and inc fist loop cmp push mov cmpl sub xor push sub xchg jnp and jnp jmp repz jo mov dec les rorl push mov cs and test or inc push push sbb or mov adc push mov adc push cmp sti pop add and push add orb cs rolb mov decb test xor push dec push and (bad) fdivl outsl inc sbb mov and mov cltd andl add mov xor sub test fild dec mov or movzbl test and dec call je cs (bad) ret or icebp mov pop mov and jmp scas jae mov js ja in jmp negl int3 scas xor test and pushl add add into add jmp xchg es push mov addl mov loopne scas cli shr sub fldcw (bad) inc aam mov je iret (bad) subb je dec jmp sbb mov and repz std cwtl and jmp scas orl sub lock pop and test cs call jmp rclb xor sub rorl dec push cmp xchg adc js pushf sub mov xchg pop ja test test lock (bad) icebp mov add pop sbb in test je test jne cmp cmpl cmc jmp or test or hlt clc jne add adc mov in pop jb or je pop das jmp xor mov stc or outsb xor pop es xchg sbb xchg jmp popl or sbb or xor inc sbb xor jbe or roll and push push and push loopne jmp adc fmull jge inc sub (bad) jg xor jg jg,pt (bad) adc cld jg,pt inc xor (bad) cmp inc xor icebp and and loopne or fs add sbb movlps in and sbb cmp add repnz std sti aas je or movl or mov mov sbb jge or mov inc (bad) adc xor (bad) and es data16 and (bad) or rorl cltd mov daa fidivrl nop daa add add les test or and std ja xorl cmp ja or add inc jg push faddl lea jle add mov mov aas push adc add punpckhbw jnp mov lcall and jb cmpb sbb test jecxz adc pop pop mov jne push cmp decl loopne dec add loop mov pusha lahf add sbb cmp jne cli cmp jmp lea mov sbb test push cmp push or negw sbb push mov movl or mov cwtl mov push testl (bad) mov or cld inc jo jne adc dec and cmove mov jmp sar xor stos aas jae dec mov pop mov arpl adc (bad) pop fnsave hlt add jl inc fwait and pop rcrl std cmp inc leave mov dec inc (bad) incb add xchg xor mov mov cmp inc pop mov loop sbb test fwait add cwtl out ret adc xchg push in jb popa je ja ja (bad) jnp inc cmc sub cmp adc movsb mov aaa inc dec cmp test out pop adc lret and or and push add lahf add (bad) stc adc and cwtl mov cmp (bad) sbb jmp sub inc inc xchg mov jge inc rorl xchg outsb mov out call je push mov xor cmp push add and ljmp and inc out adc xor fs je mov sarb push adc pop jmp nop push adc sub out jb jg testb mov jne call mov mov jecxz pop imul cmp mov je lods adc inc cmp pop sub xor lret adc inc das add or in jae,pt sub adc call test incl (bad) decl iret scas mov and mov cmp sbb or cmp je and (bad) lret (bad) cli stos jg insb add mov movzbl inc test js and ljmp push loope shlb xlat and je mov (bad) les (bad) sbb jne fist push cmpw cmp movsb mov mov scas fwait mov xor (bad) lahf xchg pusha mov arpl mov mov add (bad) (bad) (bad) incl xor test je mov and cmp sbb and add mov not or test mov pushf and test je adc inc scas je fisub mov dec pop add dec aas mov adc enter mov xor test or test xor sub fnop jmp adc lds aad jne xor inc incl mov inc out mov sub add pop pop ret movsl out movsl mov hlt incb rorb cltd or add xor rorb push mov das lret xchg sub das lret jo jb inc cmp dec das lret stos lcall jnp mov xchg lock jmp iret dec out aad imul add xor sub jne incl inc add test std (bad) call insb push lods call test xchg jae rclb repnz and sub or mov call add or or je add out das cwtl mov inc sbb push loop xor ror sbb pusha adcl inc cli adc or les add ja jns sub cmp push fnstenv jge ljmp sbb scas mov add out pop and in cmc sub xor pop std mov (bad) jne sub and xchg jg xor incl add call loopne das push int3 mov or dec incl movsl xchg and jge add test and sysret stos push adc xor icebp sysret jb ds ret dec xchg call sub jne sbb xor xor lock pop (bad) cmc das mov pop push test jne cmpb aaa cmpb push jno pop shll pop and enter sub loopne jge push stc pop push mov je add push shll push mov rorl inc shlb or pop (bad) sub sbb pop fsubr add je sub outsl jmp add cmpsl mov out aad movl mov ret (bad) pop pop sahf inc subl mov (bad) in mov mov test nop or stc cmp inc push rorb cmp cmpsl or (bad) sub or cmp and xor call mov push and mov cmp add cli ret xchg or and xchg iret pop rorb std (bad) sub cmp sbb xchg inc lds inc pop mov das je popf or aaa jo incb jbe cmpw enter xlat cli mov lea add add mov fcmovne loop inc inc in push sbb cmp les or call cmc cmp test lea psrlw sbb cmpsb lea scas push push mov test jne inc adc lds call and pop pop jg leave lea je imul or rcll add push (bad) cmp add call cmp add xor loop jg adc test dec sub test push adc and loop ja xchg mov inc add jne,pt add inc push test pcmpgtd call sbb or cmp ja jmp stos inc subb push sub pop rcrl add lock call add push fwait mov adc movzwl iret adc mov outsb korw es add add xor sbb lds cmc mov sti sbb and jmp add mov insb fsubrp mov add push das je inc inc ret aas add jl jbe sub add dec ds mov push in sar push sub add sub lea jmp adc xor call dec mov push mov fistpll and add and mov imul mov mov push add test mov adcl or iret dec into inc sarb call fdivl mov mov test je add or negb fist xchg scas pop push call (bad) lcall jo nop je scas inc idiv jmp push push xor es adc sub scas (bad) ljmp ret and out (bad) adc xor cmp mov ljmp mov or je and and sarl fimul mov out clc mov add test push mov xor out push add (bad) adc sub scas lcall adc mov push aaa adc mov mov push adc jl rclb (bad) aam jbe fsubr lods sti dec or jo ss jl xor push pop add cmp or add mov jnp jne xor test pop ljmp sub lret je jg test jne adc lea imul sbb cmp call je subl sub pushf (bad) sub popa loope fild sbb pcmpeqb add insb or xchg jae lret dec sbb idiv adc or aam pop mov sbb cmp ljmp sbb push das rclb xchg add popf je jbe mov cltd test jmp scas loopne (bad) xchg xor jl sub ja dec out loope add call movl inc xor mov sbb std xchg dec cmp mov call xchg ja mov lea call pop test data16 hlt mov mov int3 paddd incl xor sub je movzwl test mov jmp pop (bad) or cmp and mov sbb mov xor push (bad) inc push fdivrl lea push ljmp rol mov cld pop add lcall outsl add lea testb sub call jg pop add or mov push push xor push push xor sub dec push cmp pop add sbb test mov xchg xor xchg pop jmp (bad) jmp adc add cmp cmovb add mov pop xchg les push sbb mov adcl and jecxz mov mov mov adc rolb das lea sti mov adc test mov add in and mov (bad) je add inc int3 mov and add mov add xchg ret push push mov sub mov orl clc adc loopne lds aad and push ffreep xchg pop jg outsb push dec add inc outsb aam (bad) (bad) incb and stos sub xchg in adc out xor jbe mov ret leave cmp call xor orl popf mov inc sbb cmp orl add cmp or push aas ret jmp aad mov inc out loop xchg dec mov dec dec decl mov je fistpl inc icebp add mov fldt (bad) test adc sub mov mov lea (bad) decl add decb push mov shr shl call sub cmp jle and mov lcall or jg inc or and mov jbe lock adc or dec aam or sub mov cmp cli cmp inc fdivr rorb push sarb (bad) je jne jne gs sub push mov call xchg push aam inc fdivl sbb decb adc pop pop push cmp ja or adc out call pop cmp outsb lcall call cs inc inc loopne adc jmp ja or je add test cld aaa icebp movzwl in (bad) cmp jae lea mov cmp addr16 add lcall bound clc xchg loope js and gs jne sub ret out fs push pop or xchg or out sbb inc loopne test jmp cmp enter (bad) in cmpsb pavgb or jg mov and data16 cmp mov call mov push mov stos inc jge call mov std jg ja test cwtl je mov movl decb adc rcrl loopne in dec mov je in sbb ret add mov pop add push mov test jne mov mov mov ja jp scas pop adc mov inc sub push in cld (bad) cmp or daa and mov mov mov mov fs add xor mov mov cmpsb mov das mov sub sar cmc (bad) je mov jp and (bad) or das pop add inc sub push pop mov mov mov lea jg jbe lea mov sub push jne cmp add dec fmuls test lret xor or std inc lods xchg sub fistpll call jmp or lea in dec dec add dec or stos or xchg test js sub (bad) clc add or jne xor test inc add jmp mov jl mov sub inc cltd (bad) mov or or enter sbb decl jne adc lock int3 je ret ffreep popf sti mov jmp dec jmp push mov or inc in xchg push enter and call sti sbb mov ss enter out inc push push xor and fstpt dec mov pop arpl pop pusha lds mov mov hlt cwtl add jmp out addr16 push ret out faddp or mov lea fwait mov lea scas mov add icebp ljmp fmuls inc mov sub mov les addl or or loope jnp dec ret add cmpsb into lea cmp je popf js pop inc jp or jo in add xlat adc (bad) clc cmp jne incl aam into pop jg scas mov mov mov xor dec jbe data16 inc or mov call jmp idivl faddl out jge ret insb mov mov test fdivl rol pop pop mov push movsb arpl jl xor fadd inc fdivrs jmp xor out jae sub imul ljmp mov mov movnti (bad) push sub addl loop cwtl xor push iret mov cmp je cli jmp pop (bad) (bad) jle sub movl icebp test lds (bad) push mov orl dec enter or ret mov decl das test je sbb push xor inc js enter add aaa mov ja or rclb jg or jmp subb mov fbld cmp xorl or in cmp mov fbstp sbb mov sar jmp mov pop mov mov adc jne outsb xchg mov jecxz inc jno aaa idivb (bad) incb (bad) fdivr adc cmp je and pushf test or nop fs mov test jl pop mov push adc call sbb inc jmp insb fdivrs push add add add test xchg ret rorb sub mov cltd mov cmp mov or in mov and nop add test inc adc mov cmp hlt es sbb pcmpeqd sahf or mov clc subl mov test add pushf dec pop pop inc pop sbb xlat lea sub imul aad sub and aad add mov xchg in mov mov push aad or loop lds call inc adc xchg or push (bad) (bad) aas pop cmp adc ret test add mov lods out incb or adc ja ffreep test insb call (bad) je out mov push mov dec push insb jecxz mov mov sahf xchg cmp push or add je idivb sar ljmp pop pop and add out call add pop orl ljmp add inc loopne add flds lcall and mov lcall or adc rcrl push jnp push and call xor jmp test jne jmp test push test scas clc ficom bound add push clc frstor mov inc add xchg aas add xor and mov sbb cmp cmp add icebp std ret scas jle cmp inc ja jno mov je and cmp push xor mov (bad) jge ss inc inc je and mov cmp pusha cmp xchg lea mov mov xor sub loopne or push and mov add insb mov push cmp dec call and mov mov call sti cmp fldl xchg clc jg fldl (bad) cmp inc lea cmp jae mov stc pop setne push das ds out decb xchg rolb cmp jmp clc mov and jae fisttpll cmp roll test jne into adc movsl into fiadd call cmpw add xchg jns jne pop push sbb repnz je into stos lret push mov sub and sbb sar or mov add inc sub in mov mov push loope and inc je xchg pusha test adc test (bad) and test pusha push and or decl inc fnstsw sbb add mov mov add adc call mov adc add in daa (bad) xor jae or ljmp sub cmp leave add bswap sub xchg aad sbb and and mov mov shll xor jl shlb stos stc and or test jo test inc loopne stos insl jo push js adc dec mov sbb adc inc sbb inc add aam lock inc adc inc cli pop add sub test cli fwait and push sbb lcall out sbb mov lea jmp (bad) fcomip (bad) lahf add cmp je add push add jp pop aaa icebp push icebp jne mov jg mov icebp jmp in ret cmp out xchg sbb aam ret jae push fiadd jmp addl mov xchg xor (bad) cmp jne or mov jmp popf or fucom cmp jno push lock sti out pusha xor cmp ja imul sbb outsb (bad) jmp adc dec je iret pushf mov imul int3 std mov sbb fild sbb scas cli (bad) (bad) ljmp mov add fmull pop jno nop cmp lock xor adc or lcall testl test push dec test fs xchg ficoml push or notl repz cld orl jne inc test das fcompl pand add (bad) stc dec jbe pop leave inc cmpw jne mov loope scas call addr16 xor pop cmp jne int pop jo orl cmp push mov (bad) test or dec mov dec pop mov jmp sub (bad) (bad) (bad) out out add subl jge btc add mov cmp or mov or clc je xchg jmp cmc pop add out (bad) jg and std je movzwl mov sub sar mov (bad) scas arpl mov push sar and or ja je (bad) mov decb ret je or and jmp cld pop add add mov (bad) jp or fwait jne push mov ret sbb cmp sbb or add fimul jno sbb push add test mov xorb xor rorl add daa mov (bad) jmp nop cmc inc mov inc cmc dec add sbb inc and cli add dec inc aaa mov adc inc fwait push je mov jmp or dec xor inc mov cmp xlat jl cmp je jnp les sbb sbb dec call sbb adc add mov addr16 or rcl sbb jne mov rolb cmp jp cmp out das aas xlat inc aas mov movl popf iret or adc clc ljmp and (bad) incl mov add add enter negl push je ds pop push loopne pop daa lods mov push jmp sub dec and push add mov fcomp popf enter and inc add adc incb sbb call add or add movsb stos iret add dec xor cltd dec outsb mov push mov je and decl xor cmp jl sarl and ret jp ret jae jp ret xor cmp mov mov cli xchg add rolb les mov pushl int3 add je mov jmp mov mov into fdivr cmp jnp je aad or add std xchg push aad cmpl inc cmp lahf enter fisttpl test loop jmp pop mov test je cmp jne jmp leave std pushl dec inc mov test je mov cmp je mov gs inc (bad) aaa cmp inc cmp mov and jne inc dec out ret cmp je enter and fimul adc sub xor mov add ret clc mov dec je out xchg je add xorb push jb cmp je stc sbb add insl mov ja fiadd call jg pop ret adc adc lock xchg jmp das out mov scas call sub pop call push adc iret mov and scas test xchg incb movl add inc dec xor pusha adc lahf call in outsl inc mov test jne and add (bad) lods dec in cwtl into outsb mov flds incl jo out mov mov mov fild or pop cmp test mov dec cmp idivb (bad) and adc aas pop movsl test jne je push push ret daa subl ja xor xchg aas ret xlat aad aaa jne mov mov mov test jg jg push inc insb mov pop cmp cli into inc sbbb cmp mov (bad) (bad) cmp jnp mov mov mov mov mov scas fdivrl or inc cmpb xor or push cmp add (bad) fwait or mov mov stos outsb jne xlat test xor xorl cmpl or mov lcall mov inc test jne cmp in adc jne ret adc inc fwait add inc push xor call lock je lret mov pusha adc sbb test ljmp and pop rcrl je mov dec inc mov mov movl scas loope sbb push cmp add xchg ret inc jecxz sti sbb jne or mov mov mov fcomi xor leave movl or lcall leave addr16 inc inc mov test mov pop outsb imull je or inc pop stos mov mov mov ret add jmp aas lds out xor inc insl mov mov cmp adc sbb ljmp in pop xor sahf scas repz xor pop aas pop add sti cwtl lods push (bad) mov call jne mov xor es push add movsb adc mov daa (bad) int3 sbb adc unpckhps mov push mov or cwtl mov mov aaa stos decl (bad) add cmp sbb in sub (bad) insb and jmp addr16 pop dec outsb inc lcall add mov cmp cmp cltd inc decl ja out movl rorb push cmpsl add ret add rorb jecxz int3 pop mov (bad) outsl test imul int fdivr inc inc add dec fs inc mov or inc (bad) (bad) out push fisttp movl and push inc mov mov cmp xchg mov data16 loop mov mov leave test decb mov cmpsb jnp push xchg sub out cmp adc mov push inc mov sbb (bad) mov (bad) aaa fs cmp lcall iret hlt mov cmp jb inc lcall in xchg ljmp mov add out test push jmp mov das or mov jle xchg push cmp xor or mov jle jmp pusha cmpsl or adc (bad) mov or push inc cltd adc pop (bad) (bad) incl pushl mov lea cmp seta cmp setne and dec inc mov jne cmp je or push test mov mov adc mov andl mov test std (bad) lcall inc cmp jl jg mov cmp jb ja cmp jb ja lcall addb and pop out cmp jno pop loop stos pop sbb push xchg push movsb fbld ja adc adc sbb (bad) mov mov cmp mov (bad) mov add inc addb pop mov mov jmp dec add cmpl mov roll cmp jno push add mov fdivrp add arpl lcall fidivr inc out inc lds test shrb cmpl movsbl jns jmp jns jg test jnp ffreep cmp pop and out je or mov leave push inc adc jns les or xor jmp sbb dec arpl jmp pusha or add push fs xchg incl jl sbb lcall ljmp mov fsubl pop dec inc add cmp push aas add sti loope jle mov add sarl dec sti dec mov jnp cmp test xlat fist jno mov mov mov mov mov push sbb inc and add les and adc push roll cvtdq2ps jmp addl mov into fcompl ljmp push lcall mov jmp pusha or bound jo xor ja js je mov in (bad) jnp mov cmp inc mov xor in enter mov jmp pop je pop adc je xchg iret dec adc test mov fsubrl jno mov nop cmp inc sbb xor ss rcrl mov outsl call pop cmp ss dec popf jmp mov adc sbb xchg jae mov lahf out pushf jb (bad) push ljmp cmpsb sub add add call push add add enter outsl sub adc pop and iret and cwtl jmp inc add mov outsb inc and cmpl mov int3 push fs add mov xchg divb jae jne push pop shll call clc and push xor push rclb into mov mov (bad) (bad) cmp (bad) psrld pop fmuls out mov call ret jo (bad) out cmpsl daa out cmp addr16 test je jmp push fist addr16 movsb or dec test jne int3 mov call dec sub mov test cmp xchg cmp (bad) mov sti push inc sub xchg out ret or test jne sub enter mov mov fildl adc or les xor xchg fldl add sub jnp sti jmp mov cmp cmp mov mov mov mov or ret jns jae and hlt je pcmpgtw and adc fildl test jp jns or ja jae pop sub and add jp adcb inc and cmpsb mov lcall or (bad) cli pop je cmp je dec or push pop add push mov rorb push call cwtl ret push dec (bad) cmc jmp (bad) cmpsb sbb pop pop or out leave add add adc add cwtl pop pusha lods ljmp roll out jno iret push (bad) mov orl iret or xor cmp stc add sbb stos inc add pop repnz sbb xchg pop jg ds pop or stos jnp jmp test (bad) cvttps2pi movb and je inc and je cmp je mov test sbb pop sub jnp mov or xchg mov sbb jae (bad) rorb sbb sbb pop mov (bad) into sbb add jmp xor pop out mov push mov push je lds test ds dec jne in flds call push hlt inc inc jne out in and std inc je mov adcl loopne adc (bad) xor leave dec outsl jns adc jb lock lahf or xor add jmp pop js sbb addl cmpsb mov popf loopne (bad) jmp pop nop mov cmp enter lahf adc decb push testb mov jo scas or cmpsb aaa cmp icebp jbe je mov pop mov cmp cmpsb cmpsb testl xchg pop jmp addl (bad) (bad) or int3 fs pop stc std sub lds mov outsl adc and sbb aaa test fs aam push lahf les push iret adc or aas inc and mov push aam stos roll outsb cmpl sub aad je or xchg orb divb mov jmp sbb sbb cmp add push and push add call dec (bad) aaa cs mov aas iret push outsb dec push fldl xchg jne test mov je je cwtl das xchg jle xchg je cltd or push outsl inc jo popf or mov add pop jl and outsl les sub scas mov add mov fs xchg jg jmp (bad) jnp cmp pop and cmp insb jnp test loopne stos imul pop les inc add movl incl decl inc mov in hlt outsl or mov add fwait cli push sub test jle clc (bad) (bad) fbstp (bad) or mov mov xor test mov jne mov push pusha lcall (bad) icebp pop sub das test jne and jne cld xchg inc icebp mov or call or add or pop daa or sub loopne push (bad) nop cmp ret and out xchg test jne mov jmp dec mov mov lods pop leave ljmp jmp (bad) or mov sub call js (bad) movzwl or es loop inc or sub decl lock rol and or add (bad) incl mov roll sub call repz xchg or jmp push call in add push in loopne pop pop push and add rolb test adc test adc or dec cmpsl adc ss call mov sub rcrb jg fisubrl mov add lods adc (bad) adc xor aas test push and test hlt mov loope mov (bad) and pop and cmp inc inc out lcall push rolb push enter ret cmp adc (bad) aad sbb sbb cwtl mov loopne sub jg inc lods mov mov cmpl aad add add dec mov xor cmp cmp je sbb push notl mov push inc and mov inc loope push (bad) push mulb dec inc xchg movsb and in pop mov or add (bad) cmpb adc add jmp dec stos (bad) or jle inc inc cmp (bad) ss (bad) je fdivrs jne jb add push inc pop ret xchg and mov push xchg add xorl and dec aas sub (bad) lock jmp movsb mov imul cmp punpcklbw add jecxz sbb ds and jle push mov aas push mov or je insb rorb or sub jmp push (bad) dec iret jle (bad) xchg call jmp adc scas mov lock mov push sub test push loopne shrb fisttp in push xlat ja int3 or sbb add inc sbb cmc nop sbb push mov inc xbegin movl ret mov lock inc je inc and and orl inc mov dec sbb fcompl xor cwtl or roll fwait add xchg inc mov adc inc inc ret test je sub push cmpsb mov add scas pop add les cld mov je addl jmp out and movsb xorb je xor stos fisubl aas movl mov push test xor pop jl js mov dec pop (bad) ds pop iret pop ffreep xor jae (bad) mov sahf imul xor jae and or lahf jp (bad) dec xchg xchg mov cltd je setbe sbb fidivl add sub fcoml stos fs das jb add leave sub sub subb pop daa jle scas test mov sub mov add jmp jmp jg out clc xorb jmp nop lret movb les jne push dec sub sub lahf add add pop loopne sub sub add stc adc sbb shrl les popa outsb push ret pop ret inc cmp mov inc pop cmp cmp lret je xor mov add cmpl xor out stos add sbb loop test out mov pop cmp push repnz pop test je fnstenv mov mov fcoml xchg outsb cmp sbbb pop jnp aaa cld mov mov and pop mov adc sarl mov and je add jne scas or sbb adc aaa mov je rorb add leave popa dec add push rcrb in dec inc and adc andl nop xor mov lods pop aas mov call jo test aad inc adc add mov js loopne or push or jg xor scas mov jmp das lds xor jmp push sbb push inc pop das push inc add or in aam xchg arpl enter adc out adc inc and lahf cld or icebp mov jmp jo iret jmp lock out mov add jmp xchg fildl aas movsl jne xor push bound scas (bad) daa lret fisttp inc or adc adcw (bad) sar jg adc xor cmc and jle je lods ss add leave arpl and add mov pop mov (bad) jne sub and add movzwl lea test lea (bad) adc shr add inc add pop jnp popa insb add movzwl xchg cmpsb test decl (bad) and sbb add pop mov cltd push and lea outsl cwtl lds mov fs ljmp and or jnp sbb jne lret sarl mov in sub adc add pop das sbbb test je adc mov popa sbb call sub (bad) iret out sub sbb cs mov pop cmp sbb loopne sbb push dec pop xor or mov fwait (bad) jo hlt add lock decl and lea cmp ja mov in dec scas sbb fistl jecxz stos ret dec loope addl dec es sbb sbb (bad) cmp add push pop jnp sub call jnp repz test cmp mov fbld xor and and jmp pushl shll dec mov add and xor mov mov adc adc xchg sbb adc add je lahf imul jmp enter test movzbl je cmp jne pop aas decl test arpl adc test mov jbe cld lcall stos stc mov mov lea mov mov mov movl adc xor sbb xor pop (bad) cmp pop jge push add cmc jne add or int xchg pusha cwtl pop push out lahf push adc inc mov je addl dec fbstp or clc xor mov je or push (bad) and pusha loopne out jmp or or jle mov xor iret jo and ficompl adc and push sbbl push (bad) jno add pop add bound shll lahf xor aas inc ret fwait adc je test sldt add test or loope xlat rorl adc inc mov cmpsb bound inc inc fistl subl add push or jle je inc or or inc add test inc mov mov icebp mov jmp inc cmp adc mov xchg addb push cmp int idiv and ret sbb ret pop (bad) popa xor and mov and test je mov in fs inc and test loop movl jg mov xchg jne adc je mov mov mov sete aad nopl (bad) gs xchg sub nop push mov (bad) mov cmp rcrl incl lods dec call leave mov mov icebp sti or add pmulhuw adc mov jae mov xor sbb call ljmp add (bad) mov scas xchg lds subb fwait inc (bad) pop sub cmp repnz add lret jmp int3 pop xchg pop jl jmp and push cmpsb lcall cs or imul or lcall and ret and in dec cmp ljmp or add adc or ret jne jg or or jbe dec lock (bad) fild pmulhuw jp test repz sub dec loopne loop pop sub jl popa mov cmp or cmp insl sub mov (bad) push inc nop mov push mov xchg test mov into aad mov les rcl push and sbb test je loopne push sub add rcrb sahf jge inc mov push or mov fwait jle rorl dec inc jne and test inc cmpsb imul mov in or movsl add xor mov ret hlt pop add jnp adc inc nop mov sbb sbb loope inc (bad) sbb mov xor add add xor sbb cmc add jmp cmp or lods cli stos test sbb push sub push out add inc or stc sbb in push movl push call mov je jp and lock add call pop call scas add xchg testl adc into bound inc mov xlat mov movl outsb lret jo scas out sahf pop xchg adc mov int fsubrs sbb mov (bad) xchg imull pop ret push call xor ljmp mov call xor jne lret or in (bad) cmc xchg jmp rcll or sbb add add push add (bad) fstpl xor mov mov fist inc test cmp jne jmp inc xchg jg js add and (bad) jo sub add pushf cmp jno cmp call (bad) out aaa enter inc jmp add ds sbb and cli es sbb pushl sub je addl jo loop xchg cmp dec cmp or mov lea sbb and lea movsl dec aam push jle sbb sbb jnp mov add (bad) enter push or mov and add mov sub (bad) push dec inc pop pop arpl test jne addb lahf or je mov fidivrl or je imull test mov mov lds cwtl jge adc mov popl mov movl std sbb gs and lock xlat or sub ret insb xchg xor and aad add dec mov adc mov and pavgb mov ja,pt cli mov cmp call loopne inc sarb lahf push push mov mov mov mov lea or cli aaa inc mov inc jne idivl add and mov jne out test jle mov add jne push fisttp and imul xor pop (bad) aam cmpsb mov scas fcompl and or out inc pop and testl pop ret add mov out dec cmp push movsb sub (bad) push scas lods cmp scas pop mov stos xchg mov or out add sbb fild mov dec xor pop mov jb and or jne adc and inc xor pop jmp in in shr (bad) pop inc mov mov pop fwait or dec iret cmp jno and fist inc cmp push inc lock push cmp mov dec rorl and testb je pop add adc pop sub add mov lea jne inc and sbb jl push mov sub push pusha daa adc push fldl add test dec push push mov jo and jle add cmpsb leave mov or addl push insl add test adc test testb jne push mov xchg lea loop pop and inc adc pusha or lcall or mov mov add cwtl mov test mov sbb cwtl decl mov mov bound sub rorl hlt xchg mov adc mov mov stos incl shlb (bad) jne inc sahf cmpsb pop into mov push inc and jp pop pop ja adc cwtl jno icebp fsubrs lock cmpl iret inc je jne adc push rol or cmpsb (bad) decb cmp enter cmp jmp cs mov insb test repz fadds sbb pusha outsb (bad) (bad) dec dec insb cmp addl or movsb pop add ret ffree or mov lret or jne xchg jne (bad) jne mov addl mov pushf mov loop jle jle or pop mov add and in je orl inc add xor add lods jnp orb (bad) pop sti xchg jmp ret orl mov popa adc adc inc ss fdivr xor mov pop add icebp stos (bad) call or dec lds xchg lcall icebp pop adc ja nop shrb jne lea sub sub scas aad adc mov add inc mov cmpsl aam stos sbb dec cmp pop add pop add clc call jl ret jbe les mov inc or dec pop jp inc xchg or mov loop pop xor cmpsl add xor and (bad) std lcall inc sub mov mov or loope je aad test inc xor test push call and pop cmp dec rcrb xchg sbb push test fs aaa add lcall jb mulb adc and or movsl or xchg jnp and repnz and outsb and xor jo or and push and cmp daa ja push scas sub test in adc popa mov movb jle and dec and mov aam test mov cmp cmp jae jne jne repz mov call clc pop mov add sub xchg or sarl xor loopw in jp loop mov cmp rorb or ljmp mov je fidivr mov iret stc es dec sub inc test jp sti mov mov xchg rclb decl push mov enter mov sbb cmp jae outsl mov add and mov mov (bad) jmp js or test (bad) pushf add test push dec inc xor sti lahf fsubr mov ret test adc mov inc (bad) add sbb jne pop sub dec cmp out jmp cmp sbb cmpsb ret in jns repz dec jb pop cmp sbb ds aad test dec andl inc sub jge call das mov mov and push sbb mov mov cmp rcrl rcr inc sub daa mov or mov or xchg add fmull (bad) sti inc mov cmp negl adc fidivl inc aaa add inc je sbb sbb mov add cmp inc movsb add orl mov and es dec push sub js jne addl fcomip je mov cmpl out sub negl xchg push cmp cmpsb gs dec and fwait and (bad) jmp jns mov or sbb jg push inc nop mov push ret push sub sub add sbb orl adc lods jecxz xorb (bad) jb sbb sub mov cltd rcrl add xor loopne jne push mov adc test icebp pop jmp cmp leave je insl pop rorb push inc fldl movsl (bad) (bad) mov jle mov and inc and call mov mov jg sbb adc or test xor xchg cld jo pop rcrb sub arpl add cmp push addl jns sbb cmp cli sub push aam add adc mov ret movsl aam daa adc sbb cmpsl jp or leave cvtps2pi xor add jo mov jmp xor and arpl cs sub sub nop mov mov fisttp cmpsb cmp and xchg mov test sub add xor fcoms inc (bad) icebp into popf inc cli je add and jae add ljmp sbb in or test rorl add inc sub sbb adc pop pop mov (bad) sbb mov test add and in dec or xor rol or out and add test je (bad) and add je push pop mov mov push les fistpl js dec call cmp emms (bad) jmp adc add ss test int inc cmp or mov sub mov dec xchg xchg ret add loope add rorb cmp add or adc shr icebp sub outsl push mov mov call in jns mov or pop add ds jmp and pop fild mov and add or mov int3 add lcall xchg mov adc dec xorb dec jbe iret xchg (bad) popa cmpb pop or and sub add inc and inc pop inc mov lret cli pop inc sbb push sub inc pop add or mov add cmc icebp iret add sbb pusha push adc lods test dec lods (bad) push sbb fmul pop in push outsb lods nop daa sbb mov jo xor inc rcll add inc mov add iret pop mov mov pop xor and jl rolb xchg test decl icebp scas cmpsb (bad) rclb insb and sub inc mov jnp mov sar adc sbb mov sbb (bad) enter mov vaddsubps add push sub pop (bad) popa sarl iret ret test mov data16 and inc push (bad) adc (bad) add add dec rolb and xchg cmp and mov jle xchg or test arpl repnz and push pandn jbe lcallw imulb push scas std outsb mov add add lret mov add mov or sub mov js pop mov cwtl shlb xchg iret dec or (bad) jg cmpl pop inc xor adc ds stos push (bad) leave push xor js das mov adc out les je sbb push int sub add call add stos pop out adc add inc inc cwtl dec mov les je mov inc test jne cld jg,pn and clc mov mov setl jle outsb pop pop pop pop push je or sub (bad) adc fisttpl sbb mov sbb rol and (bad) in out repz nop bound sbb add adc or add mov scas ljmp and inc out loopne inc adcl test test pusha jne lock mov stc call cld inc sub test je push adc sub cld inc mov add add or or je nop fcompl ficom inc ja inc test test bswap shlb adc jl test xchg xor adc sbb jmp test jne xor or or push and mov add mov mov xor jp add sub lahf jne jg and call loop inc ds jmp andb test dec push inc and mov das repz push sub hlt xor sbb icebp jns mov or sub sub aas test add in add push rorb or xchg popa popf push cs pop (bad) pop aad cmp nop fiadd mov sbb (bad) mov je cmpl cmp fldpi lahf jge sarl jmp sub shrb adc adc pop mov or das addr16 cmp iret or ja std jmp (bad) dec inc iret iret sub into and or and jecxz xor pop or adc adc test outsl mov xor mov rorb sbb call lcall mov jne lea lea push test pop and mov std sti test and mov jecxz pop push (bad) sbb jne (bad) and rolb adc xor jbe adc aaa bound dec jne shrl xor dec sbb add sbbl jae (bad) (bad) or xor dec mov add movsl fcomp cmc aaa cld loopne push daa sbb inc and cwtl xchg sbb fadds mov cltd jbe test adc jne cmpl and insb adc or test in push pop dec (bad) xchg add ja test (bad) mov adc phaddwd aas jo movl inc push sub scas sbbb add inc rorb and inc dec xor add pop int mov and inc enter (bad) adc stos pop adc or mov add out inc sub dec aaa adc ss notl lcall lea je jno mov add test push (bad) sbb or and sub enter mov shll enter aam cmc fbstp lea mov mov test sub adc inc adc adc and push subl mov jmp jns call sub sar lcall jg into jo mov ja in push cmp and andb or sbbl movsb enter stos mov mov out mov mov js pop add call mov mov adc jae jmp add scas adc incb fbld add jmp push inc je pop out adc mov cld push dec (bad) lods pushf jmp xor pop aas and cmp rclb testl je stos add mov pop mov mov mov ds pop js pop sub test inc sub adc add inc popl sub loope sbb mov fs cwtl out movsl pop push adc (bad) mov xor lock cld ret jne pushl call adc inc test add push add cld dec lods push call push (bad) hlt add pop add movsl ss iret addb ljmp push sbb adc je add mov pop dec mov jmp xchg (bad) int sbb mov (bad) jae push pop add dec inc sbb cmp ficoml ret dec and jbe or mov sub xlat addl orl xlat xchg aad inc shrb enter xor inc mov add inc xor adc lcall pop call mov inc jno add adc dec lea mov push je add pushl dec jbe or clc add mov (bad) stos xchg jne mov xchg pop ret cmp jo pop and negl add or cmp push les (bad) call xor jmp (bad) mov jl xor jmp je addl sti les call pusha inc incl cmp je out jmp sar aas and and xchg call mov xor aam xor sub add fs add xor add dec adc ss inc push ret lods xor fcomi add int3 mov in call (bad) mov dec jle cmp je cmp jne inc test (bad) and iret or scas fisub xor mov xor sub in shll mov (bad) xor incl out mov je mov cmc orl xchg sub je insb test and jmp je add (bad) mov clc out inc add (bad) jmp loopne jg (bad) je call dec mov add adcl decl sbb jne adc cmp jo sub arpl fcmovb cwtl inc icebp fwait add pop jmp loop or lahf (bad) or inc mov mov sbb sub fbstp mov push sbb dec mov (bad) shrb sbb cltd es push pop sub aas pop or jecxz xchg lock xchg mov sbb and push retw jbe fadds dec dec jecxz adc jb jo mov adc mov inc and call movsb adc test add inc and sbb inc cmp outsl inc add dec jo mull push mov out mull stos and call rcrb add fadd popa or mov (bad) loopne pusha mov fldenv leave cmpsl and lds out jg out mov je je add add mov xor pushf test push jbe cmovg jg mov call mov mov out addl or mov setle dec cltd scas das sub push es inc sahf fdivl pusha dec or adc push test push pop pop ret push es inc mov or pop or dec jb outsb push inc in test sub push inc enter (bad) es icebp mov jne cmp ret dec xchg push adc ss dec jmp push jmp and mov cmp inc and push (bad) inc inc xchg and pop cwtl and or inc adc ja or jbe addr16 sub mov lahf scas or loop dec inc adc mov fadd or or outsl fild call dec or aaa pop test scas call sub pop outsl add nop sahf negl movsb or call das into aad rclb mov arpl adc cmc adc jnp add mov cmpl out sub xchg xchg es les enter sub jne and divps mov cmpsl mov (bad) adc insb pop xor ret jmp (bad) loopne pusha dec inc (bad) aas cmp addl aaa push sbb push add inc inc pop xlat and sbb and sbb ret call popf adc faddl inc sbb push push pusha mov das and and push inc ret jle pushl inc jmp movsb or add pop pop outsl or outsl cmp pop jae insb fcoms add pop push (bad) (bad) ja lock cli jp scas sbb xchg jle call call mov call jo sbb push and fbld jns fadds mov add and fnstcw out mov out loopne mov xor (bad) pushl mov fldcw fistpll pop shlb inc aaa lds je rolb adc adc iret pop push add or add mov hlt ljmp das pop jmp call data16 cmpsb sub inc xor and decl and mov jb add out call xor xor adc iret (bad) or xor enter mov test imul test (bad) aas insb mov das aas test (bad) mov sub cmp sti mov cli call adc cmp fdivrs (bad) loopne add mov jg cmp or and rorb push sub add mov out cmpsl sbb mov inc push pop outsl mov cli ljmp push and or sbb add es xor call out ss mov sbb out sub nop adc cmp fmuls mov (bad) call or (bad) loop add sub cmp bound sbb das gs inc cmp add or mov push sbb incb pop or mov jg pop xchg mov loop add call and das mov mov mov push inc insb in jbe mov outsb push in aaa outsl iret xor mov mov mov nop cli or xchg push (bad) incl cmp bound insl push shll mov xlat call loopnew pop ret (bad) pop inc add pushf push dec cld (bad) cmp and lcall jb jbe mov inc or add setae popa mov dec xchg sub cld sbb aas mov add sbb inc and inc and movhps adc das sbb fs das and rsm jle or call inc jmp js or std add add mov cmpsl repnz push mov imul das sub or jae test dec jne sub and push xor xor mov test xor inc cmp sbb (bad) add add pop xor test fimul and out inc mov (bad) or test push mov add adc mov pusha cmpsb adc sbb lahf sub mov inc xor push xor imul cmp insb and mov je insb mov xlat insl mov outsl mov cmp jmp imul inc rorl mov mov mov mov outsb add mov test je fwait mov dec and mov test rclb in je or mov orl jge jns add test mov or lahf and jne cmp cmpl mov cmp jne cmpsl mov mov mov push mov je mov pop test (bad) decl mov dec xor (bad) jne mov cmpl mov testl cmp test push in mov (bad) or pop jbe xor movsb sbb add inc adc test mov ret inc cmp xchg mov inc jo mov mov mov push loopne icebp aas mov xorl inc cmp mov dec inc push mov mov pushl push mov mov mov cmp mov jmp jnp iret and je fildll push jne lock imul loopne fucom je jmp push mov mov fdivrl mov push (bad) and outsb ljmp shlb (bad) push cmp loope sbb daa fwait mov cmp or dec xor push xor pop outsl inc incb dec xor loop and outsb add ret testb mov int3 adc int or cltd mov mov jmp pop jmp or and inc shr push xor xchg decb (bad) jnp push cmp push pusha into je lock cwtl arpl popa push lret mov mov inc xor push test and cmp stos popf pop jne (bad) aaa arpl cmp sbb ja inc push sbb mov pop lret jb jae cmp or or test mov std outsb ror aas pop test jmp xor xor cmp aas or xor xchg push cmp mov ljmp std popa test cmp mov xchg popf ret mov or leave sbb rorl sbb test loope push out add cld and fldl arpl xchg jmp aad cmpsl pushl add dec fnop xchg jnp dec xor nop lods mov lret add mov push push sbb decl push inc cmp and add dec lds aaa adc mov mov (bad) push xchg mov and lret aas cli mov mov add adc cmp jbe shlb xchg mov mov idiv scas or mov mov jne adc rol jne (bad) idiv addb addl mov mov sbb or fwait adc mov stos mov push push lds dec inc jg jg push jae mov cmp jb iret ja cmp jb out (bad) mov (bad) ja mov cmp js jb ja cmp inc pushl jb adc jb adc jbe jb cmc (bad) sbb dec mov pusha pop jae outsl mov sub addl sahf push shrl pop movl je jmp popl js or andl inc xor dec cmpsb or test imull push add add cmp arpl pop or daa adc loopne daa push xor add ss testl cmp cmp jne mov jnp sar scas js mov cmp pavgw jle test cmpl add push cmp inc jns (bad) add or jo mov mov jb jmp jb xchg jbe out add andl ret sbb push test push xchg arpl (bad) decl jae mov (bad) enter jns or push mov cmp fdivrp pushl popf mov mov mov mov mov mov jmp inc xor pushf add adc inc sub (bad) into inc inc xor lret push hlt in mov jmp xor mov inc adc fs jae test mov in inc add push fldcw in dec cmp mov fstpl mov jmp xor xor or into add inc aaa (bad) lcall cmpsb outsl lret call mov inc inc andl cs jno pop xor inc sarl mov xchg pop or sub int3 cmc cmp jmp cmp or inc jg cmc mov ret sub xchg and adc push dec mov test push ss cmp lahf jmp orl mov pop inc std fildll xor or jne scas movsb (bad) lds shr pushf jnp (bad) roll iret cmpl test daa test push sbb add mov mov (bad) push dec and cltd mov inc mov data16 inc (bad) movsl insl (bad) call test mov push jns fs jne jmp (bad) decl fisttpll inc inc sub mov sbb mov mov outsl add clc cmp jle xchg lcall add jl orl mov ja (bad) push sub out (bad) (bad) je pop xor fs mov pop mov mov cmp inc inc ja jb cmp inc lahf cmp ja jo repz add mov dec or jne push call mov push ss jmp outsl dec jb jbe sbbl add sub mov rcrb movswl movswl movswl mov mov fbstp mov mov add (bad) (bad) decl aad out jle movswl lea cmp jle sub mov mov sub movl cmp je subb add bnd ljmp dec lcall outsl lea mov test push cmp mov jmp fild add fstl adc lea clts js subb decl call inc and mov mov iret add icebp mov sub adc rolb push ret xor test je or lcall inc and push sub and mov sbb mov pop adc fild pop push jmp pop push sbb mov enter adc jne enter sbb ficoml inc rolb sub adc pop lea adc pop inc mov negl pusha sub call sbb mov add and aam push push sbb sbb add sub pop hlt jbe xchg (bad) cmp sub mov fdivrs add jae scas and shrl sarl sbb add xchg lea and dec mulps ret add pop or aam cmpb xor sub cmp add arpl orb (bad) fidivrl mov dec add or add stos sbb in push jae popf pop and inc popf frstor mov out adc (bad) repz fmuls sbb sub aaa mov mov mov mov pushf fnstcw dec mov add or mov js add adc test cmp loop sbb call jmp aas mov and mov bound ret jl mov inc lock jl lock fild or dec or mov and add and adc sub cmp mov in outsl (bad) or and pop sub jmp xchg cs cld adc push push mov add (bad) xchg dec xor sbb jne dec mov xlat adc adc test punpckldq sbb test mov lcall add ja or ljmp loop ljmp incl and test lea push movsb pop dec test mov mov loop sahf adc push and call cmp dec lret adc xlat aaa and pop pop cld ljmp jb jmp adc cvttps2pi popf fsubrl lock scas enter test call aad decl inc and in and add test push rorb or enter lock test orl or icebp outsl jle nop mov mov xorb pop add test mov xchg int jl xchg lods pusha mov out jmp bound std mov ljmp sbb jno inc addl iret cwtl xor or int inc inc jmp jae jae mov and inc rcrl (bad) jmp (bad) mov pusha mov lock hlt mov aas into inc je nop pop adc pop insb or adc and paddusb adc shr call cld out pop icebp add test xchg aaa loope lock or ljmp enter xchg ret shrb rorb mov mov shl or add adc std pop shl in add scas dec cli nop fcmovne sub gs jno or cld inc incl (bad) jne mov add mov jle mov adc or add icebp fisub sub andl lock add aaa cld fnstsw add jmp out inc and cmp add out out lds nop and das cmp nop jmp std and xor je add dec mov sub pop adc pusha daa (bad) mov pop leave ljmp push pushl hlt jl push push mov or and sbb (bad) incl sbb push mov ret jl add (bad) lea cmp mov cmovge mov es movswl add xor sbb pop cld test js mov cmp cmovl iret add push inc decl ret rcrl jbe push jmp jl and ret jmp xchg jg jecxz es insb mov sub add test sbb pop aam mov mov test xchg inc les inc lock xor pop cmp dec pop add mov mov fildll icebp out loopne xor (bad) mov sub lock outsl or mov ss inc cwtl adc add movswl mov cwtl sar das or mov das sbbb roll rorb roll mov rcrb test (bad) loopne inc arpl sarb and not push or pop push mov adc nopl test sbb push push or mov pcmpgtb mov pop orl cli adc inc cwtl or mov std je leave jbe cmp jmp inc mov cmp mov xchg adc sbb cltd aas mov movzbl sub aaa xor movzbl lea (bad) sbb icebp sbb cmp mov scas cmpsb dec es fdivs lods lods ret xor inc inc pop add pop test jne call pop inc popa pop adc movsb and pop jne add and mov jmp pop sub adc jp (bad) out push fsubrl pop cmp xor sar push inc das add iret mov mov jne mov xor test cmc mov jne add repnz ret nop movswl sub leave push sbb movswl sub and movsb inc jl icebp test je (bad) adc adc call les and or mov or imul div mov jmp out cmc das (bad) cmp add call iret mov push xlat inc push mov mov mov movzbl push orb sbb js movzbl call inc and lea std lcall (bad) (bad) incl adc add loopne popf xor dec dec push mov xor ja cld mov mov sub push loopne dec or ljmp and andnps mov pusha sub adc jg in push fmul and test movzbl sub push lds test rorb icebp sbb rorb test insb cmp mov add clc cmp incb add ret test mov and jne mov clc or xchg ret cmp outsl dec xor ret out lds clc jne jbe jae lret add cmp ja outsb loop cmp inc sub pop and dec inc and aam inc cwtl mov dec jne jb mov cld in mov inc and jmp sbb loope cmp mov in push cmp mov je (bad) mov test in or mov test (bad) jae inc add bound lcall and test mov xor or cmp dec add call fisttp jg iret add mov not movzbl bsr xor sub cmp je sbb or addb sar and mov mov mov or mov sbb inc sysret jg pop fcomip lock mov mov fcmovnb mov or dec add push and or sub outsl fdivrs sbb std loopne loope cmp xor mov sbb movb adc imull add jmp pop je push jne mov mov out and cmp (bad) push mov or pop cmp ja adc sub add rcrb inc enter je or (bad) aas cvtps2pi ja,pt bound mov fwait test jne cmp (bad) fcomip pop je mov adc and enter and test je fnstsw dec test cmovb jmp adc inc push outsl or clc pop sub (bad) out andl (bad) or or lea xor cmp adc xlat seta push ja push adc mov xchg sbb popa popa push in push int add mov je and test xchg loope mov ja sbb pop mov mov mov xor sbb outsl (bad) (bad) jnp mov add repz cmp ja jns popf and and adc cmp ja nop push movzbl xor pushf jne je incb jl xor cmc scas mov mov xchg (bad) gs ret test (bad) pop rcll in xchg rolb mov neg lret ret aas (bad) mov sti add incl incl jmp and lea movzwl pop lea add cmp sti and imul mov jmp cmp sub add inc xchg out fnstsw add leave mov mov mov movsl cmp and jg push pop int3 std dec fild or sub pop fxch and and inc jmp cwtl jnp jmp or fnstsw test adc xor idivb pop ret sub mov stos inc js jge (bad) jne (bad) call xor adc jge sbb sub xchg cli jns add call or mov imul inc int3 jge adc call pop pop xor sub adc adc or into popa adc cli mov inc cmp dec ja loopne sub pushf push dec test push outsl cld xor shll sbb fcomps mov jnp incb outsl or mov lea aad lods out ficomp movsb hlt sar ja mov adc jne rcll nop and call imul jmp sub and (bad) jge rcrl mov rep lahf or ret ljmp jno ss push mov fwait es idivl dec add inc jle add jb rolb cmpb cmp jne push inc pushl push decl cmp jnp xchg or inc and rclb cmp inc pushl push aam sub push lds or (bad) out xchg cld je inc and test je mov mov shr cltd (bad) incl loop xor and shl or or and push add incl and and je insl out in mov bound or (bad) repz aaa push adc test add outsl (bad) or cmp sbb and adc push mov or dec mov mov aas aaa adcb add test inc aam and and js xor push pusha (bad) jo test inc sub maskmovq imull xor cmp jne cmpl sbb test sub and xchg add cld jbe test aas jmp sub cmp push adc rolb inc jb cld or icebp (bad) incl stc out (bad) insl push mov shr arpl add lret nop mov mov xor and mov or outsb add inc add and jno jp lods ret pcmpeqb movzwl out js (bad) sub test fcoms pusha adc insb add sti std jno sbb lock xchg xor mov jle lods push xorb call mov movzwl test add leave push test rcrl adc subl mov lds add out push and push rclb inc mov push mov je movzwl (bad) lock mov mov shl call mov (bad) mov (bad) pop pop pop jae leave call cmp lods bts mov cmovbe stos pusha scas stos lcall in es int3 add xchg sbb xchg test push cmpb add sub inc pop rclb adc jg cli add (bad) cmp inc mov mov dec add sbb mov (bad) mov mov fldl mov add movb (bad) aas loopne incb lcall gs cmpsb jmp xchg mov pop outsl (bad) cli popf fisubr xor aad leave mov and je or loope je jnp add sahf sbb int aad hlt push fcmovnu je rorl jl pop loop mov test xor mov sahf jmp cmp pop popf inc rclb inc xor adc pushf push dec push aaa call add jmp dec lods or scas outsb push insl je pop loop or dec push jbe shll notb push mov outsl dec addb xor inc call js pop inc xor push aas or inc pushf sub mov push push jo iret jno inc add pop sub dec sbb push dec test cmp jle mov je and mov cmc out scas out mov pop push mov jmp sub and push and mov std daa adc mov inc inc inc pop or out mov cmp jo mov adc cmc mov mov cld lods es movq and jecxz push fisttpll aaa ffree jmp mov jp or inc stos jno test outsl scas push call sub push push xchg jecxz (bad) push nop sub fucomi mov aam lret mov lahf dec dec cmpl incl scas rol lret dec or loopne decl jmp aas loope (bad) mov jmp sbb jnp and popf call sub cmp add xor in and (bad) jno xchg in push cmp xor sbb es stos adc js pop adc mov jl ljmp dec pop mov ds mov inc mov push cmpsb jnp sub or jnp mov adc adc stos push and lea adc cmp cmp add out or je call pop je out lea sbbw jno scas push sbb test mov jg dec loop pop ja push sub mov add cmp je or add xchg ret cmp and and fidivr sub lret jmp jno (bad) icebp mov mov cmp sbb xchg cmp pushl in jmp lds call or inc mov cli outsl movl incl stos or loopne mov les test nop dec add in into out sub and and fistpll loope je lea shr mov sub mov out or add cs jmp test in add repnz lea and call add add sbb add jbe icebp jnp dec pushf sub xchg js mov xor jl push adc pusha cmp mov lock aaa insl ret jecxz add sbbl cmp lcall rolb je test je and or pop arpl je arpl lock cwtl lea mov add leave mov loope or mov out mov xor xor mov into lock aad push or test jne jae hlt or je and jmp xchg bound and mov mov incb cmp mov repnz mov insb and and popf stos inc cmp xchg inc sbb ja (bad) jmp ja std sahf push fnstsw inc sub pop mov lret jl (bad) (bad) (bad) fdivl test nop jg xor popl mov js jo je cmp jmp xor test add add aas clc cmp jle jl rorb test outsl mov sbb mov movl fild dec or inc adc dec adc add mov aam (bad) cmp movl jbe subl xor (bad) sub mov movl pop sbb inc push ja pop ljmp test add mov jae push add (bad) popa mov mov inc int (bad) shlb jnp jl dec and cmp repnz add (bad) cli add mov push cmp jnp lret es and fisubr or xchg call movsb xor sbb and sbb nop addl ljmp cmpl stos or mov sbb push (bad) cmc dec insb mov add imul pop pusha and mov incl add sbb mov mov (bad) adc clc pop sbb and movb addr16 push push sub push inc repz ljmp sub or adc test dec or mov and and cmpw jnp pop or test je orb sbb sub push add test push insb mov or jae leave push sub push test jmp je lods or stos add add pop fimul js call les addl lret js or mov bnd dec sub xchg add incb aas and (bad) decl movl sbb xor or or or in pop sti or xchg or add inc adc in mov out arpl pop test popa sub rorb fs and xor jmp sahf ds jl scas add add add mov sbb fwait inc or les ja seto call ret and add jp aas sbb data16 mov or pusha aad mov adcb das lret mov lock aad jmp and pop sub xlat push push (bad) adc push and dec daa jae gs jl xchg push sub mov rol sub inc lea dec popa dec pusha adc ds (bad) decl into sti ret pop inc inc inc inc stos mov sub cmovs ja cmp rcrb call push dec push (bad) and add dec iret adc loopne and rcll pop adc aas dec jb push dec add mov add mov add mov mov cmpl and mov gs and mov test inc daa push mov enter (bad) push jg,pt jne mov mov jge ds sub mov sub ljmp push dec adc mov jl lds (bad) and mov push pop add cli gs call or insb push add clc xor jb call jo bound pop or fldl pop xor nop jns inc test inc xchg pop xchg (bad) outsb and xchg pop pop sub das mov sub clc push lods push sbb lods sub or or test sub imulb mov adcl shrl sub test roll mov mov cs jp mov xor ret mov out js icebp fistp lea movzbl cmp mov and mov fwait (bad) sub clc addl sti rolb mov adc sarb test mov push loopne adc ret or push jmp or imul (bad) cli add movzbl add insl push testb mov mov xchg (bad) addl ret fldcw mov or jne (bad) lea aas shr std add adc call inc mov movsl dec add sub mov push push test je add dec push adc add dec loope cmp inc fidivl out and call inc pushf mov (bad) movsl inc pusha cmp cmp xor or xchg sbb pop std mov sub in aaa aam mov or fisttpll js movzwl out fdivrl cli jl dec inc add test cmc or jne or mov mov test cmpw adc test or push les test ljmp sbb test xchg push lea jg mov jbe cmp adc (bad) je sti rorb jne ljmp (bad) (bad) iret mov lock pop fimull push push popa clc rcrl xor inc add mov xchg out pop xor popf and popa add shrl mov xchg scas frstor ret fstpl jne je jns mov xor pusha das add push sbb jbe scas sbb dec xchg into out dec (bad) decl inc and mov sti icebp pop jl fbld scas xchg add movb add jbe test je mov or xor iret add js and lock testl movb mov popf xor repnz into hlt (bad) out jae je movzbl and mov sub loopne xabort pop and mov (bad) pop add sti cmp in sub mov cmpsl sti adc or pop out jne add dec outsb inc sbb ja call dec test cmp and or xchg roll inc lcall xor xchg inc and sub dec xchg push movzwl jmp mull jmp lods or or adc and shlb lahf int3 or push dec add cwtl sti dec sbb call sbb out jmp rcr iret xor lock sahf mov mov and lds dec add xchg iret aad rcrb in fwait int3 mulb dec sbb jb add mov or lock pusha mov inc mov cmp and mov and dec sbbl inc popf and sbb push or jae mov arpl js or es and or arpl add in test outsb inc call fsubl outsb fcompl and or mov xchg mov and or jge mov icebp sub sbb sbb or iret gs mull roll or stos and jae mov or (bad) pusha and and fbld or xchg pusha and mov and or cwtl sbb loope mov cli adc ss out or add adc mov dec (bad) jae and add jnp xor popa sbb or mov mov pusha cs sbb divb push cmpsl and sbb in sahf sbb mov fsubl cld adc or outsl in and dec xchg pop and popf add and xor rol sub mov adc add sbb cltd cmpsl adc pop and (bad) iret or jecxz xor lock cli (bad) jmp into sbb or in sbb xchg jns leave and les (bad) dec add push (bad) pusha packsswb daa jg insb add xor pop push aaa rorb pop and mov popf aam add mov push es lahf popa loop popa mov je aam in sub (bad) inc and loopne ret inc sub cmp add movzwl sub dec addb or xchg sarb loop or divl sub xor xchg imul lret or or jbe jmp punpcklbw xchg je (bad) jmp ret pushl pop loopne and jne mov add push jmp or mov and ret sub test or jmp mov mov sbb jne adc je test mov jge mov ss test (bad) out mov mov pop push mov mov mov mov test (bad) decl push and sub sub add and fild dec or or jo call mov add cmp jb jmp jo xchg cmpsl jns add pop ds ja or outsb fldenv mov call inc ret fidivr ja pop and (bad) mov jmp pop loope and daa cld jne mov mov rorb cmp cli xchg cmp mov out mov leave and add test mov sub mov cmpsl push fmuls sbb fidivr sbb cwtl es push lods in jae dec mov es cmp aaa dec and iret add dec jne popa out in xchg mov jae imul sub sub rol push sub negb pop adc fsubl adc sub das sub addr16 sub test roll shrl sub pusha ja int3 or pop push sub cs pop cs sub sub sub out jno (bad) push sub sbb es imul push arpl add sti mov xchg mov jne xor fdivs push mov push push dec add icebp mov cld dec sub ret sub cltd mov adc and negl dec pop lods or gs push add fstpt inc out fcomi mov (bad) pushl jo incl jne inc ret sub sbb gs sub ds jae ds cmp push es rcl dec aam test xchg sub aas (bad) loop sub fisttpll sub pop inc mov sub sub ds fwait dec pop pop xchg or fldenv mov inc mov and xchg or inc sub or sub add jae mov test push or in repnz sbb lcall add xchg sub mov cmp jge jne sub mov ja mov es or jp and add add adc add jmp pop mov add ljmp fadds (bad) adc cmp mov inc sbb (bad) fwait jae mov sbb iret fadds test xor jb pusha sbb out cmp pop negb and sub jl mov mov cld loope xor add xchg xacquire insb sub mov sarb mov mov fdivs adc fdivl or jl fdivs adc push push ss insl pop adc inc adc rol xchg inc dec data16 pop add popa mov add cltd inc sub sahf inc add push mov insl add push adc outsb insb or test or add dec inc add cmpsb sbb enter mov pop add and lds push adc add lea and mov and rorb stos pop inc rorb fwait mov push mov pop mov push sub rorb inc sbb icebp mov jg mov mov mov decl mov mov inc sar pop imull add lock mov jmp test lds jne xor push cmpsb push mov jb pop call jmp in or dec ja fs and or inc inc mov ljmp sub and roll aas test je sbb mov and mov push ss aam and test fdivp and arpl inc and mov cmp sbb push rcll mov (bad) jmp sbb inc sbb and sbb outsl inc lret call jno inc das add enter inc (bad) ja jl test je aad sbb scas pop je cmovne jb lea lret push dec add in lret fistpll ret sub aaa adc mov inc inc mov lret add into fs lea clc sbb jae jne dec cmova and pop push adc sbbl inc add mov test jle mov ss repnz test add mov xor inc xor aas cmpb lock dec add lea movl mov loope mov sbb lock jno mov add xor and cmpl pop sbb cwtl cli bswap pop mov pop dec add adc stc test or jl jmp xchg fs jbe mov lret mov ret addr16 inc adc popa cld pusha mov jne pop inc adc push xchg test adc mov dec pop push xchg dec push adc sbb xor je pop add call sub aaa xor testb sbb add iret (bad) sbb xchg rorl pushf loope pop int3 test adc inc pushf jmp nop stos add aam loopne xchg jnp inc add xor ds mov pop add sub adc stos push loop cmp insl hlt mov xor cmc pop aaa mov jmp pusha sarb (bad) (bad) mov sbb push add push mov or mov std pop (bad) and add bound in test dec sbb test and inc xor push add cld xor add (bad) aas out mulb and std subb into sar cmp mov inc adc pop adc and adc es push xlat jg and adc ret mov das inc daa mov mov test xor jne or lock add in mov lea push dec mov adc jne xchg mov out add xchg inc sbb or xor mov test mov sbb shr and cmp je add sub lret outsl cmp lahf inc sbb cmp xlat add andl pop push addl xor inc xor ja,pn mov inc cmp ret test jne cld adc cmpsb incl add bound adc ret sub nop inc sub push lock jae std mov or inc ret mov pop push lock sub lock pop (bad) or (bad) jmp call test sub jmp push dec bnd pop jmp mov jle push cmp (bad) and inc (bad) mov dec sbb inc xchg inc and jmp push inc outsl in add or sub (bad) xor add mov movl inc cmp mov jo fild lea addl or jne mov mov clc sbb test jne mov push add sbb test mov inc push rorl rorb stos or sti inc shll or inc push cmp sub (bad) sbb movsl pop add mov call sub pusha push inc ret and add xlat cmp or xor aad fsubs jae and mov inc sarl dec ret mov stos rorl (bad) iret pop sub test add pop call or pop jno sbb rorb imul pop add adc or loopne ljmp xor lahf out inc push test mov repz rcrb mov adc ret jmp sub lock (bad) mov js cmp sbb popf jmp mov mov jl xor xor and lock fsubrl inc jne out cmp rcl add xchg and outsl pushf sub dec sbb das (bad) decl push xchg dec jb and sbb mov jle test mov push rorb add jg jns sbb mov ljmp pusha out rcrb daa mov push pop fbstp mov add lret aas xchg (bad) xor push mov cmp sub mov mov pusha iret add test fild dec aad (bad) dec adc mov stc pop adc pop cld or mov je cmp jle incl jl in into stos sbb orb not sbb push test (bad) pop add jne or push ljmp test add add mov fmull or jo xchg mov test sbbl or sbb xchg sub imulb cmp push sub sbb or mov nop das pop lcall sub leave cmp jg sbb mov aas roll add jne stos fiaddl test mov fwait (bad) fucomip xor fmuls adc inc push subb adc test add mov pop cmp test xchg leave inc aad add mov les jecxz sbb rcl sbb ret adc mov inc lds cmpsl and rolb fwait jmp int3 stc pop or mov gs rcrl add mov movups xchg fsubl mov or mov or sahf addb mov imul sbb test out aam mov dec sub cmp stos adc mov sub loop mov and loop mov push movsb subl jg inc inc mov (bad) mov pusha mov or and sub fisttp adc (bad) xor test ljmp mov mov sub pop pop stos out (bad) (bad) or lea dec mov rclb adc and dec lea xchg push rolb or mov repnz jmp pop stos xor rorl xchg pop pop xchg or or ss sbb add fiadd pop xor pop dec test push daa mov mov add push in fild cmc add and push sub inc cmp push mov mov rcr or dec fmul data16 pusha faddl adc call pushf out mov lods push aam xor jns int3 adc sbb adc int adc mov cmp int3 xor aaa push scas nop call rclb jbe ljmp xchg iret push push mov into lock mov jb rorl and add xor imul xor and pop and std (bad) push bound lcall add lcall mov shrb aam mov add add or nop and rorl in fdiv fild je cmpl jne sub je call pop addl xchg xor add xchg mov jle sti movlps cmpl sub inc adc add sub (bad) in pop adc movntq clc add xchg inc push jo mov or (bad) inc add pop jno pop shrl push push int and jmp xor clc cmpsl call jmp mov jo jp aad add mov addb sub pusha push lock je cmc cmpsb xchg or xor mov enter loop nop jle jmp out iret sub push pusha or add jnp insb and mov and jne mov popa pop fisttp push sar fdiv inc and add imul bound xor adc (bad) outsl xor in mov or xor adc aaa in push add cmp in xchg mov adc rorb lea xchg lds repz mov push adc repz loopw stos jbe jne jo add jge and ret push insl dec mov dec inc sub jmp inc iret dec outsb or jo test adc add mov or and add push (bad) je push inc add sub mov in lcall cmpsb lods adc lods pop push stos sbb adc cmp lret rcr sar mov cmp and inc add or test mov mov shrl sbb and and outsl stos rclb test iret push jbe sbb and dec lea adc xchg mov sub test iret or or mov add xor stos daa sub sub mov mov clc inc dec pop call adc push mov jne xchg or mov mov lods or adc das sub je or stc or stos aas insl (bad) lods cld sbb add addl mov cmp mov and nop mov or or push js ret inc xor scas jge xchg or adc pop push call shll dec outsl push out push loopne cld call orb inc dec std test aam dec test jne test or shll es and mov jo jno cmpsl call push in mov xor js mov adc pop cmp or stos inc inc xchg and push int jo mov jp lahf ret pushf and pop (bad) pop fisttp rcrl clc jg mov adc inc sbb inc notb test cwtl js lock bound mov jp test fsubr sbb add imul int push pop dec adc sbb in popf stos stos subl sbb iret inc pusha and outsb or addr16 sti xchg dec push cmp add sbb inc mov je add inc fucomip xchg cmp or sbb in icebp dec add jmp sbb jnp js inc jne enter (bad) xchg je add adc inc iret aas (bad) mov add pop add roll sub rcl subl subl jne imul and mov add imul xchg add jnp (bad) jns nop sbb fbld cmp pushf ret sub rorl push pop mov test cmpl and or or (bad) dec call test dec inc or sub ja add add inc dec cmp xor addl stos aaa mov xchg or pop addl push mov add xorb test adc or pop lcall or shll cltd mov inc les decl cmp xor loopne sbb iret es cmp pop cmp mov xor ljmp push push fsubrl adc mov add fildll (bad) std fist je mov and cmp lret (bad) popa andb test dec hlt push test ja push aam push add test cmovs call lea jl mov dec roll xchg pop add shll add loopne and adc int3 jb jnp aas cli adc adc sub sbbb sbb jmp cmpxchg8b (bad) lret xchg lds inc test or test push push int3 xchg scas jbe dec mov lret push xchg out add clc sti mov bound call loopnew decl sub test ja jno insb and xor mov dec xchg sbb (bad) out addr16 (bad) rep fs push (bad) pinsrw sahf aad adc and hlt and xchg inc arpl aas mov sub (bad) out mov inc push mov lret dec sbb add iret (bad) int shll push das test lahf dec (bad) push loopne jno add sti push rorb jmp dec jne adc out add pop jl mov push adc jle and cmp push add call adc in shlb lods sub and aas popa mov pop jg lea je aad sbb and dec clc push (bad) xor inc xor (bad) outsl inc xor pop add xor xchg imul add lahf or or sar test cli outsb inc test je mov pusha stos fadds add push faddl je sub movq loop (bad) add pop dec adc jns aas and (bad) int ret pop pop dec add push xchg loop bound je addr16 daa ja je push add dec fucomip jne mov in lret xchg mov leave test adc add aas dec adc or rolb mov es pop mov or dec jmp js enter push arpl test (bad) xor inc add mov sbb mov jmp (bad) cli push mov mov test test add xor add ret mov add mov call cmp test idivl movsb adc and mov sub fild or test je xchg push aas xor or in push (bad) xor xchg xor mov mov and inc aam sub lret sub test inc xchg je jl insb add (bad) dec xor and adc cmpsb pop inc sbb mov xchg or and jne jl daa sbb mov or mov fadds push mov ret data16 mov adc adc or mov xchg inc aas pop and (bad) hlt push mov push (bad) dec (bad) scas gs fstpl dec sti (bad) je lea rorb sbb jl or sahf sbb test inc jp sub and mov xor or sbb stos cwtl mov jg testb mov insb adc or daa or cltd dec inc shrb lds lock js and test pshufw inc xchg push decl inc and call mov push popa add loopne imul inc insl jl mov into adc rorb test pop dec or jne push mov or cmp push loope push jg xchg dec call lock xchg xor jmp mov push insl popl and or fnstsw mov xor enter aas mov or test negb cli adc inc sub mov data16 xchg orl mov hlt pop and loope or inc sbb mov rolb xor sti mov jle sbbl xlat lds rep xchg adc test add je mov and and sub xchg xchg xchg jno enter jae mov xor (bad) add das scas or dec jg (bad) push test test mov mov aaa pop jb xchg jmp push (bad) adc add mov push sbb mov and add out clc inc testb sub dec jecxz inc mov dec or lods inc decb add test mov push call push aad das jnp mov pushf adc add sbb mov sub cmp lahf loop mov cwtl bound sub jle add inc add (bad) aas incb inc mov call scas notb cli addr16 nop push (bad) (bad) mov sub cmp and insb pop add leave mov mov lcall jbe or and rclb and mov dec xor into and sub jmp sub add ret adc rcrl add sar and xchg xorl imul mov cmpsl push or add insb ret aas pushf mov (bad) pushf sub add xchg inc aaa inc sbb xchg pusha outsb int3 push cmp or out xchg dec sbb es scas lahf adc movsb and dec adc dec and loopne mov call add adc pop (bad) cmp add lods sbb testb jne cmp je mov rorb jo sub mov call mov push rclb add enter inc inc adc add (bad) mov inc add fwait test pop push inc and inc (bad) fs mov insb and (bad) in xor inc inc sub mov cmpsl jo sbb inc push inc and adc mov adc and mov movl pop inc xor pushl rcr cmp cmp lea mov mov jne push inc mulb lahf negb aaa lea mov mov lea mov adc adc push sub jg aas adc shlb mov mov sub sbb fsubs adc jne lcall cmp pop push mov add xchg mov fistp test mov mov jne and fwait push test jne test push inc cmpsl add mov xchg mov inc xor mov xchg mov leave adc push inc cmp fwait (bad) and pop into sbb cmp cmp sub decl js scas inc inc jmp scas add or pushf or loope das lahf cmp mov jno or mov lock int fs push shlb pop aad in jg in push call xor inc and jno (bad) (bad) inc mulb loope ds ds mov mov sub pushf mov sbbl jo mov pop mov jmp fadd mov mov add pinsrw lods sub xor sti test in call call or out lret mov adc popa xor stos shrb ljmp and sub or jo push loop out fnstsw mov pop and add out cmp add lea add (bad) fistp inc sbb mov sbb scas mov and jge call mov jl or inc and xlat push popa (bad) orb into xor mov lea test pusha nop in adc inc sar fist sbb rep mov cmp or pop adc test add push rclb push hlt call sub and push (bad) cmp sbb jnp int3 sbb sbb add mov or jbe into mov xor pop call les dec xor lahf mov pop mov dec add cld rorb dec pop inc mov add or out fstpl decl fildll fstpl fldl fdivrs sbb lahf outsl je inc hlt cmpsb sub jl test je mov out test cmp pop (bad) cmovbe lea mov mov or mov das or add fwait (bad) cli or sarb push inc dec hlt stos or mov mov lret jo push incl mov push mov movsl andl push sbb ljmp out pop orb add dec or jmp call lock std pop test (bad) sbb outsl push sbb fimull push mov dec push push es cltd sbb sbb sub xor add jle orl arpl lea and fwait leave push sub add sbb loopne bswap and mov adc mov adc push cmp jl adc push add push or and sbb rclb adc aad mov push and int3 and adc mov in or sti and nop cmp je add dec adc jno fdiv cmp jne jmp outsl int3 jg push adc jmp mov pop jmp push sub fcomps loopne sti pop inc and into fsubrl adc mov or nop lods insl jb and sbb xlat sub mulb test clc jp test mov arpl xchg mov mov inc jne sub mov mov (bad) adc rcll xor clc add jmp sbb add jne sbb or jp arpl pop cli mov incl lea sub or insl and jb mov in and mov out fdivrp nop test rcrl ficompl (bad) enter xor mov mov dec push cmp pushl mov (bad) jmp jns icebp or scas stc add mov adc push or sbb nop sub xchg xchg adc inc call xchg fistl adc stos stc ret cmp les decl (bad) (bad) sbb insl and jno adc lcall adc xchg lds add adc dec or ret lea call idivb jne jmp pop incb call cmp jne or mov xor lock shlb ss (bad) jmp mov ret dec mov push rolb test or call and xchg es xor loopne fidivrl call out pusha es xchg in fstps pop out or je add sbb and call jne rcll in mov lds je cmp stos jg mov sbb bound push fs xor sbb mov cli mov cmc fdivr lcall pop dec add andl push push and fsubrl dec call xorb shlb mov jmp jg ljmp das cmp push rolb mov adc jb mov push inc fdivrs jmp in dec call mov loope jmp push sarb add xchg movsb stos jle jne add outsl ja xchg ror cmp mov into xor xor test je push cmp or adc push (bad) mov leave fucomi jae fstpl push hlt aam es and lock xchg mov shll cmp adc jne lea test add sbb bound iret add popa dec cwtl push into sbb mov movsb fcomp fcom dec int3 xchg and nop add adc fcomp push adc leave shrl test test cmp in dec call xchg lea jp add inc jl call jbe mov je daa jp bound fsubl rorl dec in out pop xor clc nop hlt roll push push mov fwait pop push push call mov fist les cmp xchg pop fs push dec and rorb lods aam data16 add popa pop cmp int3 (bad) mull push test jecxz mov fildl repnz aad or fdivrp sbb call lds js mov mov add add sub or xchg lds sti cmp clc push mull jbe cmp fisttp mov cmp jne add add cmp (bad) mov sbb pop inc cmp jb lea cmpl jne add mov and call sub jmp ljmp jmp pop add add fimul sar adc sub jmp aam testl cmc (bad) js or mov lea cmp jb and inc push and lea add incl add mov mov sub sbb je push add and dec or xchg fbstp adc fildll fisubr or loope fstpl or aam push loope inc add mov icebp mov dec inc add nop xor adc mov and aas das and and mov jg lea mov shl add xchg mov add sarb cmp jne or mov and push push xor push push xor std adc in sub call adc inc and je push scas insb fwait or in jecxz cmp test stos lods push pop fcoml mov fcompl xchg test jl adc fwait test mov std incl pop add cmp dec push roll addl inc data16 in cli pop call (bad) cmp push sbbl push or loope loope cwtl mov xor outsb and mov ds add pop cmp mov xchg xor test jns push add mov dec sbb jo cmp jne aas inc test mov or cmp inc and mov (bad) push pop and pop or (bad) fild push mov pop addl mov mov xor or or jg and mov (bad) push or lds add ret mov mov test jne add push mov das sub in and daa int3 inc and je roll mov es lea cld jne rorb fisub mov test mov je adc into call mov jns fdivrs test adc pusha out addps inc and jle sbb sub (bad) jmp rorl mov (bad) lea lea adc rol push sbb or cld mov sub add shr rep mov mov push push sub js push je sbb jmp (bad) call movzbl mov mov mov mov mov mov mov add inc sbb test push and lds mov mov nop test or inc xor lds mov cmp xor outsb sub add cmp mov sub mov aam enter mov lea or pop mov je or pop and jge out dec mov cmp rcrb jg push and xchg sar ja cmp mov lea jne mov lea (bad) ljmp out sar test cmp jne xor out or mov adc add rcr aas push mov ret bnd cltd xor vmovsd shld adc mov decl (bad) jmp jmp push or sub mov cld sub mov movzbl and cmp cmovne lods and outsb (bad) test jl lret (bad) cmpsl je dec test pop pop inc xchg or ds mov ds jmp xor ss dec les inc mov repnz sub leave push hlt (bad) iret std mov sub leave rorb loope jge lahf jmp sub dec movsb push sbb xchg cmpsl shl dec mov (bad) jmp push push fwait or nop mov and incl (bad) fisttp and and inc sbb jmp mov mov popf (bad) lock clc dec jnp sti (bad) call mov and je mov call loopne inc sbb lahf mov mov inc add mov xor or lea loop add sub xchg xor jmp nop mov sbb dec sub call xor sbb xchg std std (bad) jmp jae or or int3 ja pop push into sub fmull push outsl mov mov dec inc sbb ja push mov jmp adc (bad) sub or je xor inc lea xchg mov sub mov add adc jo in (bad) je inc mov sbb in dec inc (bad) or test sbb mov in xor pop in scas and pop inc push test push adc add lret mov sbb and jnp daa lock sbb inc push inc push xlat cmpsb add js out and loopne enter and bound sarb rclb add push xlat fdiv fldenv mov sub call popa mov icebp sub cmp sub jnp mov or or mov xorl jo shr mov mov mov movl mov sbb mov mov xor jmp adc in ljmp inc sbb sbb outsl mov pushf and cmovno orb mov sbb sbb in es out pusha or pusha adc scas mov cmp cld sub das add pop je fiadd push cmp add pop jnp jb mov lahf adc or cmp mov fwait cmp mov adc lret dec call push or ficoml rolb bound add dec cmpsl xor std lcall xchg pop push andl fcoml popa mov adc pop pushf mov mov mov fucomi cmpsl fnstsw sbb or jmp mov mov push jle sub inc in push xor rorb cli enter cmovle mov push lock add ret lea add call add cmp mov mov test and jo jb and mov aas fdivs mov movb xor inc add add aad std inc inc aaa add sub std and mov out btc jmp xchg push mov call subb xchg or mov xor sbb jno push pop adc call shlb idivl add fadds icebp push cmpsl pop xchg fistp fadds mov mov jbe push call mov mov dec outsl call fs test je inc call ficom cmp jb (bad) fisttpll js adc cmp dec lret xor cmp in ja call je mov pushl mov or add add loopne data16 shlb add int3 comiss pop sub rcrb dec insl aam not sbb pop xchg scas sub arpl mov sub ljmp ljmp mov (bad) iret push dec add cmp cmp and push lea inc in push pop pop int rol sbb or imul push inc push dec or sub adc inc cmpsl jecxz adcl xor daa xor int3 mov cmp icebp dec aas mov xchg arpl mov sbb loopne jno add adc or je inc and lcall fstpl inc popl repz inc cmp lds sti sti ja jmp pop cmp mov or mov addl and popa je and inc cmpsl mov and sbb cmp jmp jnp and jmp xor jne scas xor jo rcll push test add pop data16 and out mov xchg xchg sub jle pop icebp rcr jne xchg inc mov out xor test or sbb push adc (bad) cwtl add push test pop js dec pusha or daa mov sub xor aaa sub int add or pop in or jbe cli sub loope jmp ja and call push sbb aaa add push call arpl and lock daa add mov sub cmp int3 adc and (bad) dec mov pop or push push jmp ljmp inc and pusha push addb and popf push dec andl xor or outsb dec add pop mov sbb stos jb in or fild mov jbe lret sbb mov sarb or add aaa dec or nop (bad) insl cmp jmp sbb (bad) ljmp fmull divl push sub jmp shll aas add or das mov jo xor sbb ret or outsb mov inc add cmp pop cmp rcrl sbbl inc or (bad) mov pusha add decl push mov cwtl repnz mov jo decb mov inc inc adc sbb xchg adc mov or adc mov add sub xor cmp cmpsl (bad) xor lods add and lock in push sahf xor jno call pop subb je cmc push out add pop xlat movsl pop add ss fs push mov lret lods xchg adc cmp cmp cmp movsl (bad) stc or mov pop jge jo or inc adc add outsb pop or call call test push jo sbb sub stos call (bad) and movl cmp or and mov xchg push xchg adc call and orb sbb add rolb sub rcrl andl and pushf and or test je add cmp add lret sub or sbb dec rcrb ds or out mov adc mov inc or mov cli ret psubw mov mov iret pop mov pop add mov sbb jne sbb (bad) mov popa inc hlt imull push and loopne lret int3 and adc mov or and lea fwait pop inc sbb jg push scas lods sbb mov call or add mov cmp fist sub push popf dec mov push cmp mov mov mov call jmp push adc js dec inc cwtl aas or mov sahf rcrb mov inc sbb mov mov or jp cmp nop jmp (bad) inc shlb cmp add jb mov rclb mov pop push test outsl call sete arpl jns xchg or scas pusha inc dec je jo xor jmp sti or pop ret je test jne xchg sahf jg pop sbb or mov aas bound jecxz adc and or arpl (bad) jg add imul pop je loope call lds jg iret or arpl or jno xchg call adc dec inc push sub pop sbb test jbe je mov cmp out pusha loopne jb lock aaa jecxz pop dec mov adc out cld xchg add (bad) cmpsb push cmp js je jns xor jl push jmp icebp cmp addl pushl add test mov ret jmp or es add pop add movsl sbb push dec and shlb xor push or xchg out std add and and orl push xchg rclb mov adc cltd mov xor jne (bad) adc pop movsb (bad) jnp std decl dec xor int mov mov add pop xor test je mov mov clc mov inc or jno mov ffree idivl in mov cmp inc ret addb pop test adc xchg and mov add or shl decl ljmp add fbstp push xchg fadds cmpsb sbb insb and xchg scas mov sbb call cmp add mov jbe pop add dec imul add (bad) mov out cs subl scas lea add rclb test xchg pop lret pop or mov add jne mov ja pop mov enter mov push hlt in jo loope pushf and in ljmp test mov mov shr je addr16 out test fcomp sbb test sbb je mov stos mov cltd addl add jne sub sub jmp cmpsl mov or repz in sbb adc lahf add inc mov and xchg sti aad repnz clc push dec or adc insb mov adc mov lock cmp hlt in adc inc sbb add mov adc adc inc pop notb out mov ds adc scas jae cld inc adc adc insl jo in je sub cli dec lcall sbb ljmp call sub adc mov add in pop mov mov xor add in fmull and or mov sub push add popf std ja je mov dec mov xchg mov fchs adc mov inc and pusha mov pop cmp adc add pop sub jg test push lahf mov int aaa test or mov xor pop xor je sub outsb inc incl sub test sub sub dec orl into pusha xchg dec adc and or enter stos mov and or cmpl mov inc outsl and cmp call (bad) adc mov or mov test add sub rclb adc pop insl mov xorb jae hlt inc (bad) mov adc and dec enter cmp das (bad) lock mov mov pop pop ret nop (bad) loope sbb cmp sbb jmp mov sti sbb call lea cmp jbe daa add cmp pop push je cmp xor movsl jnp call adc sub jg dec divb pop xchg aas ja mov sbb insl cwtl rolb cli and mov cltd inc xor or and adc cmp je add cmp jle cmp (bad) push dec jg aaa adc push mov outsl cmp pop adc (bad) out rcrl cmp mov dec add push jle cs jle test adc roll je in mov inc xor pop ret nop cmp mov lahf prefetchw or mov jns jle xchg je loopne push mov add mov popf jle add mov fldl mov mov or mov adc aad sbb mov inc cmove inc cld pop cmp or popa je cli push loope es orl xchg or insl add (bad) adc (bad) test push sub icebp ds dec mov cli cmp inc cmp popl ja push cmp out pop adc ret cmp and cmp call mov (bad) bnd mov add aas jg cmp call inc sbb test cmp mov inc push pop add call push adc mov mov fidivr mov test popf rcll jne mov pop mov ret cltd dec xor nop mov fild push ret pop add sbb jne lret adc push mov jg imul outsl cli (bad) cmp ja mov jne mov inc or je out (bad) idiv xor xchg jmp lea cmp bound cmp pop xor jge sahf (bad) je cmp test lock pop cmp in fcom jmp mov int3 inc dec inc and xchg sub (bad) adc mov mov loopne mov mov pusha sub mov daa push cmp insl add imul pop pop xor push test je or jl add testl sbb mov cmp dec sbb mov pop push test sbb push and cmove or mov inc and push int3 call clc sub lret dec add jbe mov mov add jle cmp inc (bad) mov cmc out cmpsb es cmp inc call cmp adc clc fwait mov neg pop pop ret cld leave sub dec and adc cs jl inc or data16 add test jne xor jnp push int add inc dec nop jmp cmpsw xor cmpl mov clc jno (bad) pop test adc pop inc mov or fstpt loope leave push das arpl aas pop jo cmp outsl nop add adc and cmp cltd push pop dec in add pop add cltd jl xor lock sti je js test mov mov pop mov test push in pop mov push and mov dec mov pop test inc or dec mov sbb mov test cmp xor mov movsb or xor icebp jae push adc xor sbb mov insb sub cmp icebp or test sub xor and add ret add add das mov in ret call and je and das lock or out jmp or or push push adcl aas pusha cmp insb sbb cmp adc add pop das jne adc jmp sbb mov inc dec lahf inc lahf adc inc cli add movl push lods add jl pop ret das bound and out inc mov pop adc ficom jmp hlt jnp ret je cmp call inc or test cwtl ret and xor jmp xchg iret lcall jmp inc scas xor pop xorb or or cmp jmp in sub pop push incl test mov dec sub mov roll and ret mov push pop inc std mov ret je mov dec cmpsb jmp inc lahf pop sbb lcall lods mov int3 add loopne fadds inc adc loopne (bad) enter nop nop nop cmpl push jge jmp call lock (bad) push orb sub jp or xor enter mov or imul add loopne dec loope or call sub inc sbb (bad) decl lcall inc cwtl mov xor sar sub sbb mov or add out fistp call sub push stc insl jnp mov xlat daa adc add adc call es xchg test mov popa iret lret test hlt add out cmpsb jns (bad) in jae inc xor lahf rorb out sub sub or inc and jmp cmpsb dec dec popa jo loopne (bad) adc call pop add orl mov inc jne mov pop cmp cmpl divl mov inc cmp (bad) pop add subl mov mov sbbl add maskmovq testl cmp lcall out clc sub cmp jne cmp dec in mov fisttp dec adc jne add mov rorl jne jo test jle cmp pop pop inc cltd mov in cmp cltd or mov mov mov dec add or pop jne test loop cmp arpl jne pop jne mov mov mov (bad) test rolb sub pop mov test adcl loopne clc inc xorl test outsl fstpl imul mov movl enter cmp sub fadds ret add scas adc movsb mov shlb (bad) (bad) call adc (bad) jo fistp add decl loopne jae test je cmp adc rcll int3 popa mov inc jbe push call add decl mov lock mov jo push or inc and (bad) lock mov pusha ljmp pop cmp repz jl adc insb push cmpsb push push xchg decl test je fildll je testb mov lds jne mov push test je mov cmp rsm inc lea dec add jg jl lock pop sub add push inc sub roll inc mov jmp jae or jo pop mov adc push sbb outsl and repz add test hlt push dec jg dec sbb fwait add inc das xor pop xor (bad) (bad) scas add dec testb je mov stos push fisttpl mov in push adcl std push add mov lea pusha clc xchg std mov (bad) jbe mov inc test mov aam decl add inc lock mov push lea cmp add add or or push rolb mov dec js (bad) decl inc dec test jne or mov fwait (bad) fidiv or cmp xor (bad) fnop fwait add inc mov mov test jne test push test add in push sub test mov out xchg stos test and fild incl dec jne sbb mov mov popf loope jmp push jecxz sbb and (bad) xor sbb or das and cmc sub pop inc and xchg lahf data16 lock or sub adc add sbb les sub push and mov je add frstor add push mov jbe mov dec mov pushf adc movb or xor (bad) push lock jo add jmp add add nop sbb jo lahf fstl mov add icebp test jg push sub jno inc (bad) push push aad sbbb scas and ljmp or push and incb jae negl sub add or xchg pop rol stc push js scas jmp test retw out add jg rdtsc (bad) mov sub pusha (bad) lret adc pop dec mov jecxz adc mov je lods std scas jg fwait enter add sti jae mov add adc rorl push je cmp test je xor ret add mov test jne cmpl jle xor ss sbb mov sbb icebp jg cmp inc and (bad) sbb xor add sub jg pop sub cmp mov sete test je push add push mov inc add xor test add mov mov mov sbb outsb adc hlt or enter sbb xor ja jb lock jns add jb push push pop cmp decl sub movzbl lea or lcall fsub adc mov push cmp or aam shr popf test jle cmp jae mov xor call movb loopne,pn adc push xchg (bad) mov (bad) jmp das lahf (bad) ljmp test mov push add xchg imul cmp cvtdq2ps (bad) xor mov cmp call add cmp jb movsl pushl in xor jmp mov sar (bad) (bad) (bad) clc mov movzbl mov mov and add sar sub shl or cmp mov popl incb jne xor pop xor cli push dec movsb pushl shr out add cmp jne mov aaa add and nop adcl mov je sbb jmp icebp jg cwtl jae rorb ds std cmp jne and sbb test or call or test cld cmc jg pop cmp js popf rorb fimull enter mov xor mov add mov or sbb out jg test je cmp (bad) and push jne (bad) incb movb jne cmp je addl (bad) (bad) fcomip pop or pop dec add add sub cmp mov lea pusha ret out pushl pop and cmp jne inc mov and add sbb cmp ja (bad) add mov and in dec add pusha push mov add mov mov mov mov call rcrb into sub jno sbb ficoml adc push (bad) cmp sub mov add lods rorb adc mov in es sbb pop je sbb call cmpl sub ljmp in (bad) pop mov sub lea lea call cmp or mov repnz mov divl shrb lea sbb aaa mov jnp add jo mov test scas insb loopne cwtl adc push add mov mov push icebp je ret stos mov add pop ja pop std call and xor mov imul cli fcoms adc xor mov xor (bad) jmp inc adc cs sub sub add mov loopne xor pop xor mov mov add cmp jb adc clc repz xchg lahf pop stos stos xchg dec mov mov xor cmc mov mov (bad) movzbl test mov pop mov inc adc add jb ds cld es add inc add add inc xchg cmp je jl dec and mov out mov pop int jmp shl sub iret push hlt ja or cmp jg mov movsbl mov cmp mov call repnz ret mov subb cmp jne fnsave sbb rolb icebp outsb out inc and test sbb (bad) hlt inc jo push and mov cmp jb mov mov xor jp xor mov je adc adc mov fcomip mov test loopne decl je xor adc inc add (bad) jb mov mov addl outsl add jg mov sub cmp je test jle adc fnstenv clc (bad) incl pop add mov movb sub cmp jne mov out loope aaa and fwait ljmp inc xchg mov xor jmp lods incl enter xchg call sbb or adc sub mov out mov adc and mov dec jmp add push mov in jmp xchg lahf call or scas ffreep add cmpsb jo ret mov add jo jmp bt jnp int3 push inc xor add add inc scas je pop rolb mov mov sub nop cmp not inc push mov pop add add push (bad) enter add and lea xchg mov fistp inc jne xchg cmp add iret mov cmp lahf mov mov loopne fild add pushf jmp int cli xor ret jmp sub inc push js push sub add jbe shr push bound inc add mov decl mov (bad) xor (bad) add adc (bad) int aaa (bad) mov pusha push add dec cmp push jg jnp and mov int mov (bad) jmp xor (bad) sbb insb mov inc add adc mov fucomip scas mov sbb adc xchg hlt xor push hlt mov add ficompl jbe call inc mov lea mov mov fstl mov add add mov cmp nop cltd in addr16 fimul movsb sub jbe or sub fild mov lea sti (bad) push inc push je mov mov mov inc rorb cs fs rorl fistpll push and arpl push hlt adc pop mov mov (bad) aas insb and stos xor mov jo inc icebp pushl cmp in call mov mov lea mov loop push xchg dec jmp rorl mov dec xor fwait aaa (bad) incl dec cld decl loopne ret mov lea clc sbb sbb dec in adc (bad) out mov je mov jnp (bad) mov mov mov dec add js pusha cwtl lea mov cmpsb ja cmp inc iret dec add push clc stc sbb fdivs testb add mov das add sub cs imul adc inc add adc ficom jg or or mov shr cmpb inc aam fwait cwtl adc mov inc push mov movl ja movl call jno (bad) inc cltd (bad) mov in test and jg cwtl adc jbe pop test xchg xchg adc jb mov or or or add int3 xor aas xor adc mov or jo adc push push adc out jo add mov sbbl add decb lea mov mov adc cmp lods mov cltd jb std jmp adc cwtl mov pop icebp or cmp mov and (bad) mov push mov add push test decl xor in cmp int nop pop ret call cmp adc pop push mov daa test je add cmpsl pop and pop adc pop mov call nop xor add outsl cmp loope ja pusha outsl js test or or sbb mov add mov jb add ss call mov inc mov mov lcall rcll (bad) mov add cmp daa jmp xchg dec push popf add lock pop mov jne das xor sub pop outsb jmp nop push push mov xorl outsb or ja clc add clc add lea out lret cmp sub sbb add lea add dec cld rcrl cmp movl cld pushl cmc pop pushl cmp jg cmp jle loop sti pop outsb cmp jl jl lcall lock test add sbb adc mov mov mov and and dec jb cmp je inc jne mov cmp inc and push je pop adc fstpt push test xor pop pop add fdiv test adcl sbb dec out add jns (bad) adc push mov pop mov push incl adc clc decb test add and call ret add je add add (bad) (bad) add pop movb mov in add out movl jl mov mov or movsl mov loope cs stos out add mov lds test cmp mov add xchg loop sbb not adcl xorb (bad) not push pop inc or cmp mov leave adc rolb or and xor inc push add or popf sub test test push pop push mov cmp xor add movsb cs inc or roll sub test dec and icebp setne inc out mov shl shl add and imul roll lea mov mov sbb insl arpl out cltd xchg pop pop insl test pop adc pop pop pop push inc inc lahf imul out and cmp inc pop xlat call push add in aad inc add lahf inc rolb aaa sbb mov test pop cmpl add dec push and bound push popa jmp pop cmpl decl test xor cmc pushf cmc lods mov mov and test jne push lods lea add mov inc or loope aas jl (bad) fild stos testb je xor add inc jle cmp je lea jg ja lds push sub push adc push mov (bad) cmp add add decl mov insl fsubs push out jne (bad) lahf aad test mov ljmp xor (bad) jo sub in stos cmp je mov add scas out iret add add mov add cwtl inc jo mov nop add jns and jmp push shlb or pop das pop cmp push cmp dec or jmp int inc lret outsl cld out add icebp je dec pop xor mov inc jb aam or or mov mov js imull mov mov or out cmp std pop add sarb fstl out adc sub xor movups cmpsb mov sub in sarb outsb or xchg or pop popf fsubp out jo ret sbb pop or and mov test cmp mov pushf sub cmovge ret mov sbb std add shlb cmpsb fist test add adc call or cmp sarl jl lahf xor (bad) cld popa or sahf cwtl in pop mov (bad) wrmsr sub (bad) xchg sbb fist jle cmp cmp pop mov out aaa cmp rclb or dec push push xor mov push pop std push dec mov sub inc cmp in add xchg lods cmc pop jbe adc mov xchg or adc ret aaa (bad) movzwl mov xor cld xchg fdivrp sbb ja lea or push lcall faddl dec cltd mov mov (bad) mov pushf scas cld push jae das aam fistp inc jbe sbb inc or and pop nop jg arpl cmp jbe add scas and shlb incl mov cmp setae repz add movsb ret jns mov lea lret inc addb pop or add add mov xchg add add xlat sub (bad) push jle pop jp dec ss pop jmp dec cmpsl dec cmpl je mov test je mov inc scas ljmp add jmp jno mov std call imul stos xchg add adc push cmp jne in pop (bad) xor ret mov ss pop movsb dec xchg testb je pop cmp call movaps inc (bad) enter or push sub into data16 test jne mov test jne push leave add dec inc push rol mov inc sbb dec popa jne dec push mov push popf or jl mov dec push dec xchg test inc adc (bad) jne sbb xchg test add (bad) cmp push push shrb lds inc (bad) shrl jo int3 add jmp (bad) outsl sub pop dec mov cmpb je sbb aam mov dec daa test test xchg outsb inc jne mov cmp sbb mov add and add jmp push pop inc shufps imul aad lea sub rorb inc (bad) out fwait mov or inc and (bad) out or add test cmpb mov jne jmp out je cmp jne test lret in pop fmuls aaa inc loop adc xlat mov mov inc in arpl inc mov inc mov xchg test or mov sti or test mov jbe rcl aad cli fild int3 or or outsl (bad) and nop test std inc sbb sbb popa xchg sbb rcr shll test jmp out sti shl (bad) aas test je cmp push add mov and std sbb test popf sbb sbb add mov loopne inc push call es les mov add test jne cmc inc mov mov stos lcall cmp or add sbb mov lahf cmpl pop add imul and cmp ja movl add js cmp inc pop out les enter and inc sbb scas xor xor adc (bad) or je cmp nop cmc jmp mov data16 cmp or push and or call fisttpll push adc mov pop out es mov mov push fs xor lods ret pop stos xchg jmp pop mov insb fildl and aaa cmc jne dec pop sbb inc pusha mov call clc movl add cmp adc mov test xor jb sbb test insb mov je fwait adc ret data16 push inc cmc out pop mov mov and xorl call cmp push cmp in je or decl xchg and in outsb mov inc sub test insl mov push pop pop je sbb jne jno push mov push lea pop pop je push test add addr16 jmp inc jmp ljmp cmp rolb push jb outsb movl movl movl outsl imul adc jne imul sbb or or jecxz mov dec and enter movl add out jg out arpl outsl outsb cmp dec gs inc adc in out adc gs xor test mov adc punpcklwd outsl jae mov movb in js or fbstp push xlat xchg push inc movsl cltd bound loope pusha es nop and xor add call sub clc loope inc inc je cmp popa inc and and sub pop hlt call stc hlt call xchg lcall and cmpl loopne test in mov mov or les sub or idiv lea not and and mov shr test fnop cmove lea mov cmove add sbb sub enter and (bad) mov mov adc xchg stos cmp popa int lods iret and and test or push add and loopne push adc out cmpsb clc in aad jb sbb decl cmp repnz je icebp and fs cltd pop mov bound push ja push or jne out adc sub stc jmp pop test inc out fiadd in insl jne out pop les adc call cli jmp daa addl cmpsb cmp xorb jmp fwait inc outsb call arpl test out push cmp js mov test loopne xchg cmp test mov cmp or push adc jo push or (bad) es pop inc mov add adc vmwrite add lea ret (bad) call add inc rorl inc adc (bad) aas xor subb add test push mov and sti jo mov mov add push lcall xor add fiadd out mov dec add shrb add push cltd mov mov dec adc pop pop subl mov mov stos test or adc or mov pop mov out dec push jmp xchg adc jne push sbb ja test test mov je add ret loope sbbl out fidivr jmp push add jmp jbe and cmp lahf (bad) psubsw add gs push or scas pop push notl adc pop and dec inc (bad) dec push cld sbb call loop dec xchg das pop lret call xor aad shrb xor inc mov adc mov in and and pop and jb cmp fmuls sbb pop mov psrad jo sbb add cmp movb test xorb inc and cld dec cmp pop or cld repz (bad) jmp pop nop out jg xchg scas mov sbb (bad) inc int3 lock cli dec cmp sti inc rclb rclb xor mov call jmp pop jbe push or dec idivl sub test mov add cs add pusha xor push mov cmc out add je (bad) dec push add mov cmovp xor or dec jmp pop out out hlt out dec ja call dec jne pop jo adc stos mov mov testl je or mov xor in and add mov dec aam hlt sti push push sub cmpb sahf stos pop icebp xchg aas push push mov xor add sub sub jge ret mov mov js movzbl movb sti ja add jmp add movzbl je cmp je xor ret or jle mov push sbb xchg mov cmpsl cmp call sub decl sarb ja add inc adc add iret cmp xchg jp push adc call adc xchg add xchg out ret movl adc testb (bad) inc mov xor sarl and js add std add push xor mov or sti call movb add shr dec or test pushl std pop push outsl sub jmp lahf adc jp pop dec mov xor insb loop je dec aas sub or (bad) ja ffreep je sub mov mov mov mov jns mov sar icebp xor xor es into je mov mov cmp or cmp xchg xor ja rorb adc cmp jae iret mov adc xchg add ja cmp jb cwtl scas jne add cmp sub sub call dec push cmp jae pop ljmp mov inc and js or mov xor rorb add mov xor (bad) decl mov mov mov jne add mov xchg dec cld xor add xchg ja cmp jb adc decl and jmp cmp jb pop mov xor out mov push and sbb cmp xor imul cmp sub xchg or movsb mov and sarl or add mov mov nop dec gs jae aaa cmp push xor add bound out adc jmp lahf es mov mov into jno fsub push addb add push push xor hlt pop add incl cmpb add mov mov mov mov add cmp ja cmp je sub ret cmp hlt or push cmp decb call fild popl orb ds icebp test je dec lsl insb lea mov cmp je ja cmp ja cmpb inc add mov test lea jno rol dec push xchg sbb push push add pusha xor (bad) lcall aas push in sbb mov mov inc je lock mov or adcl push (bad) aas loopne adc or mov mov movb and xor in cmp testb inc xlat inc cmp xlat or in sub repz push cmp adc cs xlat push cmp jo js push add (bad) jg clc mov pop sbb in xchg add test or add les lea push mov dec inc or in add test mov jg jmp or and push or inc adc mov fs mov insb inc sub fs movl lahf inc mov jnp adc adc sbb testb test je (bad) sbb call daa xchg adc xchg pop and mov cltd mov mov (bad) insl in stos cmpsb or nop pop inc inc cmp sbb sub je in sub sbb loope mov push into nop push out push test mov mov or sbb jo and push outsb aas and add dec mov ret rcll lock and sbb adc push in cld stos popa into sbb inc push inc out sbb push clc push fdivr pop (bad) (bad) decl inc lea or inc and mov shll das inc and aas mov je aad mov xor test je test cld out divb test je mov dec sbb dec push push call xchg jne dec mov mov ja cmp sbb test jne jmp mov mov out adc cmp push ds lret in or je cmpsb aam out (bad) sub add cmc aaa std or add je add sbb xchg mov sarb mov mov push mov xchg and or xor fild (bad) cld sub je mov cmp je adc mov adc mov (bad) jne cmc (bad) lret sbb pop jmp pop pop ret imul fild sub and add mov shrb jne (bad) ds nop xor dec push cmp test add push icebp xor mov jno xchg or sarb (bad) popa lret pop jp cltd loopne jmp pop lahf mov test push mov sbb data16 arpl test add push or ret pop ds in call pop lock fldl and lret xor xor inc inc insb imulb dec and push les add xchg adc push push inc lret and and or orl mov jae sub js out sbb inc repnz push adc jo lock daa pushf pop mov (bad) test call xor call push mov ret cld pop push push out jle lock mov in xchg aad cmpsb lahf fmuls jne inc fs mov dec pusha add lods inc add in or sbb pushf add sbb je add xor jno sub test (bad) jg lahf push jne sbb dec pusha mov mov xor cld add xor or packsswb movsb or xor mov dec jne in dec mov mov mov fcomip fistpll mov cmp ja cmp jae adc inc out loop lods pop aaa xor fsubr bound outsb loopne (bad) pushl test inc sub dec sub inc cmp ja or add movb and mov push add clc into inc adc push test js insb nop mov cmp push jl sbb inc mov clc (bad) fbld jns mov xor xor or jne fisttpl fisttpl pop rdmsr loopne and ja test pop xchg adcl inc sbb add inc jo call cmp out (bad) cmovne and adc sti push and xor cmp in push and pop sbb mov and push fist (bad) sub daa (bad) push xor (bad) mov xor cmp mov xlat or adc inc push xchg mov inc push cmpsb mov adc pop or test xor mov and add scas lret enter cli xchg pop and jb fcoms add faddl push lds sub jmp or mov popa pop (bad) adc pusha cs test add mov dec cmp push nop and call test call add xor (bad) or cmp mov (bad) fidiv pusha outsb xor adc mov loopne add push sti test clc (bad) decl jbe call inc sbb ret loope xor sub xchg add and add mov cmpsb cmp call mov je icebp out jmp or into push and sub inc dec sbb sbb dec pop das mov mov lret test xchg aam lret lcall arpl or adc enter das or xor or pop mov inc and jae sbb or cltd push jae ja test add loope ret pop mov mov clts add enter xor pop sbb mov inc ja (bad) in test or loop jne cld orl (bad) je adc das and xlat fmull rorb inc sbb jmp add (bad) push insl jo pop jmp pop add cmpb inc inc add xor dec inc lock int3 adc add rclb pop push ret decl or jmp (bad) call lea cmp jbe cmp jbe add xchg jb mov rorb adc adc pushf addl shrb movzbl mov ret popl push ret mov ret xor std out mov cmpb rclb stos ja je and xor fwait sbb sbb shrb dec nop xor or loope lahf jne cmpl push add ja lahf rcrb mov sbb sbb pop je cwtl add ja cmp mov je mov and sub mov test je adc xchg call add or inc push pop cltd or add test mov mov and xor dec and sub or clc inc xchg sbb lock fadds add and mov inc xor push dec inc popf sti das and out (bad) pop or adc test je sbbl adc iret cmp add adc or daa ja fisttpll jae adc xor sbbb je pop cmpl je out mov dec xlat xor call jmp js rorb pop jo push ljmp jg mov cli mov adc cmp in addl insb pusha setbe (bad) es mov xor lret or mov push add push cmpb add cmc or call adc cmp inc cmp mov lahf and orl inc ror hlt cltd lds mov mov jmp inc nop inc (bad) jbe es jne sub call (bad) aas push fistp and mov lea (bad) and and out push xor mov dec add cmpl std ljmp mov cmp dec add loopne adc pusha fsubrp addl mov je mov stos (bad) inc inc xor call pop fs insl and mov sbb push jp add sbb shll xchg add mov pop mov lea mov call mov je push (bad) mov adc lods test jne loop mov jle movzbl in jne mov sub stos pop xor ja jmp inc adc add call mov ret jl mov mov or rclb add test adc add pop loope or sub mov pop and aas mov mov lret sub push add add sbb out jle inc or jne or syscall or and push sbb jmp sbb pop cmpb push out push mov cld push (bad) jp mov and mov orb inc jmp jne aad pop add add cld loope inc or test xchg and add cmpl add movl inc mov push add test (bad) mov in (bad) jg (bad) sub mov mov (bad) cli (bad) test je sbb sbb test les push fstl jge mov push cmpl or xor loope (bad) (bad) andl (bad) (bad) aaa push mov test jg ret out stos lcall jp xchg xchg jge les jg sub ja gs outsb test fs les pop orl in sbb and or jne roll mov mov jmp leave xlat orl adc pop pop mov call jge inc cmp je aas sbb sub (bad) jmp pushf pop inc je addr16 jg xchg cli jbe add pop scas and mov and xorb dec arpl inc jl pop push inc sbb icebp xor adc cmpsb mov inc add mov repz or inc jge les add inc xchg mov rol add fidivrl test scas jmp into mov rorl std int mov dec jne (bad) jmp ja out pop out jg out inc add mov pop jne push sbb jnp jl movsl pop adc sbb mov popf cmp test mov add scas pop add inc inc mov mov insb lret bound pop (bad) or test test rolb mov mov xchg inc mov iret push push dec inc test dec je sti sldt call out mov and aas mov test dec inc sarl sub clc xchg and jl add inc leave xor mov xor jne inc pop pop add (bad) cwtl mov xor jmp mov pop xor icebp test mov fcomip incl mov mov or je cmp jne stos inc daa dec test sbb jo test inc test xor pop outsb ja push jmp pop adc xchg (bad) (bad) ljmp mov cmp je xor sti sub call enter rcrb lret lret mov (bad) mov pop mov xor or iret call or jecxz in push scas or pop mov je sbb dec adc push push int3 sbb inc das aas add fs out sti adc sub push sbb cmp or loop test std (bad) jmp aaa and shr icebp cld fwait sub xchg clc (bad) (bad) jmp mov cmp aas stos push dec sbb cmpsb or pusha aad jb inc cmp in inc popf jmp jle je loope loope sbb push cmp jbe mov aam frstor es lock mov loope std je std pop repnz and ss arpl sub jno cli pop jno jo loope push call pusha (bad) inc and aam push dec cld out mov jg jne cmp je call out shl divb (bad) lds mov push jle lock int inc and mov inc jl cli inc les push nop movl inc out dec popf jmp sub inc test test arpl test or inc mov inc js loopne cmp push add stc movl or (bad) int3 add or mov sub mov and jge movl movl mov jmp dec js jne xor xor or je dec pop mov rol push mov mov cmp aas add repnz ja jb fistpll enter pop sub mov sbb or rorb or add call mov cmp (bad) lock test test inc js push jl inc cmp icebp push pushf push ja aaa scas adc test loopne test nop xor mov outsl sbb adc push loopne shrb mov repnz xor out (bad) insl jne leave xchg rcll and jecxz push scas (bad) leave and push lods cmp fwait out adc cmp xchg cli pop cmp je add les call loope cmp test lahf xchg leave add (bad) je popa mul add rorl (bad) out push (bad) or pop adc add pop cmp je cmp jge (bad) decl test setne test jne jmp add adc sar jg sbb inc lds jnp and cmp jbe outsl ljmp (bad) ja sub movb and leave xor pushl movb mov je dec adc jno push jns je mov movl movl add jne sbb subb notb fadd out cmp add and jnp js add jmp sti dec mov (bad) jmp mov mov push ljmp nop test jne cmp jg pop test dec add loope cmp cmove add push test jne xor cmpb cmpsb and loopne imul jecxz mov add mov mov ret std jne or rolb notl pop aad jmp stos aam pop and pop jae add (bad) pop inc sub add aaa mov das rcll and aam pushf ror adc cli out adcb (bad) aas add popf mov loopne add jmp loopne test mov jmp (bad) xlat pop pop cmc incl clc add into flds xchg call (bad) dec je dec push je add jae inc mov stos ljmp ja add add fadds mov add sbb addr16 sub cmp add out sbb or nop mov push loopne test lahf mov push push mov push add mov (bad) pushf add (bad) sti add popf repz inc loop xor imul loopne pop adc (bad) mov pop cmp jne and sbb mov ret xlat and jmp sahf cmp lds addr16 aam ljmp inc cmpsb cmpsb fidivr clc stos add (bad) sti add jmp adc pop cld or icebp data16 mov xor inc std adc in mov xor loop or lret and ja add jmp sub punpckhdq sub ret (bad) add lods out (bad) incl cwtl out fstpl add test scas lcall stos in xor jg rorl test inc sbb js nop xor lea sbb int3 add jns rcrb rclb add (bad) jg mov mov test je mov and pop test (bad) lcall cli add adc cmp jb cmp ja jge sarb cli jb repz jp xor pop xchg in add xchg inc add jl sbb jl pop (bad) jle aam sub adc push pop mov test and mov push loop addl cmpsl test sbb inc ljmp daa outsb (bad) xchg addr16 adc push test pinsrw xlat sub mov aad xor add cld adc ret add cli and fdivl shrb (bad) sbb mov mov andl lea pop pop lock lahf mov repnz jmp jmp leave push xchg lcall xchg loope cltd cmpsl sbb jb xor insb clc in (bad) decl sub cs xor push cmp jmp dec out mov and es or pop ds push sbb sub in sbb je add cltd jge add ljmp fisubrl cli cmpb je jmp fucomip ljmp jne cmp ja cmp mov lock ljmp xor xchg shrl mov push sub test je (bad) imul jbe movzbl seta cmp je xor iret ficom pop lcall fstpl das cmp jbe das cmpb jne cmp jbe (bad) fisttp mov inc fidivl cmp (bad) mov out adc push dec test je popa or push mov insl call mov push sub pusha loop sub pop add pusha or push (bad) movsl fdivrp jg lcall outsb add xor test je pop popa stos mov add inc or cli fdivrp push push mov lcall imul (bad) ljmp cmpsb dec mov aad jne adc mov in mov out leave push jo mov jnp ds jmp (bad) and cmpb sub jmp mov pop mov push cmp inc sub shll shrb cwtl push inc pop ds mov call mov mov test jne ljmp out add pushf jecxz addr16 pop call push mov add pop movl in call addr16 jb and adc and adc push cmp imul test je or cmp add sbb jne dec mov xchg xor insl adc dec inc dec cmp mov call jae inc adc cwtl mov or (bad) jnp popf out mov insb push cmovbe jmp fimul add daa sbb pusha cmc outsl inc cltd add shrl sti jg ret push jg aam jmp jno jg aas mov sbb and add or je mov lea scas mov or mov idivl inc jmp xor mov mov xor pop cmpb dec and stos cmpsl out scas scas cmp mov test push incb das aam cmp je mov cmpsl ds sbbl enter push push adc test mov cld les iret add les add (bad) fldln2 jno jo jecxz (bad) mov mov inc inc sbb fdivrp pop or jb cmp jae incl ja cmp std (bad) cmp ja cs les add roll mov outsb xchg mov jge mov dec shlb and out xchg xchg pop loopne mov repz and sub or xor repz (bad) icebp sbb imul jne or mov inc sub or lahf in sbb jmp sub xchg jb sub (bad) ret dec inc outsb xchg (bad) jmp rorl insb loopne mov pop adc and or mov pop scas sub test cmp emms cmp addr16 mov dec or or sbb ficom cld out pop fs jmp insb dec add int3 pop cmp jmp loopne xchg je and push and xor push add ljmp and sbb ljmp or xor jp cmp jne dec inc jmp adc mov (bad) decl add neg mov sbb fdivrs xchg sbb or ret mov xchg data16 lock lret jns push loopne pop jp xchg cmp fidivr add mov xor xchg adc cmp jb jl enter lock inc sar xchg xchg sub sub xlat mov fmuls add (bad) sbb jno dec data16 add jmp loopne pushf mov nop add test insl es push jne inc mov or xorb jmp pop push dec mov (bad) clc lcall clc pushl imul lods jb pop pop mov mov or jne out mov or push je movl mov dec call les aam push adc sub mov mov mov xchg xor aas lea inc mov jmp jmp mov out aas je fmull pop hlt scas sub (bad) push adc add cmp mov cmp cmp hlt push aas or in aaa aad mov dec xchg rcll fisttp cmp test pop aaa jbe sub pop inc jl or mov sub add test movzbl mov inc add jle jmp out mov sti add test jnp add out ja,pt js adc sti add mov mov adc es sti add idivl dec insb es pop pop dec out cmp je or cltd orb jbe mov je aad std out jae es cmp je lahf mov adc sti or test test or mov sti es pop cmp lahf mov inc or and es jne ja cmp je mov add loope cmp je loopne or or mov pop cmp pop dec out or or iret push es push cmp je cwtl es mov cmc es cmp add test mov sub in call (bad) cmp mov cmpsl aaa cmp ja cmp movsb (bad) fsubrl cmp jne cmp jne mov dec or cmp or push jg jb and push jo add stos mov test and pavgb cmpsb idivl add movzbl cmp add nop out pop mov sub repz and test or inc loopne jb test icebp (bad) ljmp loop dec outsl faddl adc call (bad) fidiv and jmp mov jmp and inc add or fstpl mov adc xchg or and adc in mov or repz (bad) fdivrp inc or inc and out or jne jmp xor inc and nop call aas jp (bad) jne (bad) je icebp jae lock jne xchg testb popa xor adc cmp aam ja ret sub int3 add ds sarl adc popf les cmp mov jno jle sbb gs cmp fcom adc hlt lret (bad) xor out cmp dec das xor cmp push es push fsubrs mov sub es or test cmp jg rolb incl xchg add cmovg xorb mov fdivs or daa xlat xchg mov lcall pop mov movl mov lock inc jb sbb loop (bad) decl cltd add adc add mov jmp ds jmp inc sbb push cwtl push pop notb pop or and pop fxch ret or mov lock fwait push aaa xorl mov jmp ja jmp test jae mov jmp por ret and mov lret jmp movzbl push push (bad) fbstp or cmp jb mov orl and cmpsb call add call xchg cmpps jmp popa test es or cmpsb push adc gs mov loope add jmp (bad) push jmp mov push test into cmc adc ljmp jl jmp pop addr16 fildl aam jmp out pop mov leave jmp and adc lds adc mov inc mov push jmp adc inc jmp push jmp xchg push jmp jbe mov jmp fcmovbe test jbe mov or or xor add or push pop js lret loop sbb sub mov int3 inc add cmp pop add add js or adc push add sahf xorb xchg mov (bad) je add jmp xor mov push mov adc outsl (bad) mov cltd sub mov ljmp inc adc mov lret call or pushf pop sahf sbb addl cmp xchg add ljmp fldl repnz and add shrb mov mov repz roll sub cmpsl ljmp (bad) or loope xor test call mov and mov call adc jp add aas andl (bad) mov add inc and inc jae aaa mov loop arpl cmc mov sub sbb iret fisttp ja push inc mov xchg mov cmpsb dec inc or test je cmp mov cmpb gs xchg fucomp xor xchg cmp stos jb sbb adc inc add jmp pusha fildll mov sbb mov inc pusha xor pop add xor dec repz loope inc andl (bad) pop icebp (bad) nop daa loop out cs hlt fs jne mov sbb call rorb cmp xchg push call clc dec les (bad) fucomip jo add pop rcrl mov inc insb or shr addl inc adc dec jne sub orl inc rcl cmpsb addl cmp pushf out das and add shrl test push and in test das inc and mov aam mov pop call mov xor dec mov inc adc sub js xchg (bad) je mov mov sub pop adc adc test pusha mov push (bad) jg xor push add imul adc mov mov add cmp je cmp je mov lea cmp jne leave add mov adc cmp cmpb je inc test ret fucomip sbb inc push je mov inc and cmp andl (bad) mov sub mov cmpb je movb push fdivr add jo sub sub xor subl adc cmpb jne and xlat jmp mov sbb xor dec sbb (bad) xor mov daa push add pop pop jmp xchg sbb mov in rclb pop cmp cli aas in or push jl jle dec push push dec lock dec cmp loopne incl inc maxps inc movzbl xchg adc cmp je cmp jne in dec call addb or out and mov inc add mov test mov sbb (bad) (bad) push or aam movl inc call fcompl sbb pop pop ret inc mov mov jle xchg (bad) aaa inc sbb dec inc sbb js xchg dec or xor push sub decb mov cmpb jne push addr16 ds or push in loopne stos out call pusha outsb aaa pusha sahf sbb inc pop ds nop call jge hlt mov jne xor call and mov mov jmp push lcall mov lea cmp mov mov mov loop ljmp cmp mov sbb outsl ret les add add push push lea adc mov add sbb sbb jo mov sub cmpb fs outsl mov movb call pop decl mov je mov orl test mov pushl js add (bad) mov add adcb (bad) mov mov or or test pop xchg dec lds add test mov mov mov scas and add pop sbb xorl decl (bad) mov jne xor add and (bad) push and xor (bad) adc lahf sbb mov mov addb scas das ret pop dec xor push mov sbb and cmpsl (bad) fild mov or mov push orb pop loopne push push cltd xchg and and mov mov (bad) dec add cwtl mov mov sbb jae mov add stos and adc push (bad) dec adc sarb sub or jg pop sbb mov je out lock loopne ja add add pop or jb jecxz add icebp into pop adc jo or inc ja mov subl in je loopne cmp adc decl sub sbb (bad) andps jno inc out mov call xor je mov test sub mov cmovs pop cli and and inc dec sti lcall jne cltd es push sbb fisttp test je mov push adc pop loope dec push adc add adc sti in cmc xor in adc ds aad call jne sbb jmp das jne jge xchg scas cmp test and movsb cmp cmpsl dec lds pop and add adc orb sbbb call shrl popa loopne cmp movntq mov add test in adc out ja rcll lea call inc movsl (bad) jg je mov jg cmp invd pop (bad) xchg jmp arpl mov lea mov mov clc add xorps je sbb xor push outsb stc push jne add pop loope sbb (bad) mov add jmp cli mov add shr mov mov jge loopne orl cwtl jmp fildll neg or mov inc cmp mov inc jo nop push je mov pop mov pop hlt sbb ret das or orl push jne decl loopne mov push sbb jmp fisttp je add sbb movsb sbb into icebp adc push sub jle dec subb call lret ljmp mov jp (bad) call stc jo push adc es xchg pop dec adc cs in mov mov lea ljmp mov xor xor (bad) ljmp inc insb jo ficomp cmp cmp (bad) movsb (bad) or decb cmp ja js adc test je test ja sub add ja add push lock dec add (bad) sbb inc mov scas test rcll jnp jo syscall sub rcrb scas fimul dec jmp lods jmp adc (bad) jo rclb push cmp or inc test push add faddl mov xor push push out push push add jno fsubr aas cmp imul call inc and or xchg data16 ja pop dec sbb aas aaa or pop lea ficom imul and clc adc cmp testl fwait out inc and outsl into push or fsubrl mov call dec dec clc dec (bad) sbb jbe lock dec jmp lcall xor repz test and shll mov sbb sbb enter xor int sti push cmpsb push cld xor push cmpl (bad) loopne rcrb push xor nop jmp clc jo je pop inc add ret and out negb inc sbb or ret in push sbb xchg sub xor add mov lods and cli call jle and popa std outsb loope test jne jmp mov add sbbb and mov call mov mov fisttpl mov pop std fs add rcrl push and jmp mov sbb in push adc fadds jle sub pop xor pop and das test mov jne fidivrl xchg mov mov cmpb inc out dec push lahf mov ret icebp pop adc and inc fsubl xor jne xor jmp sub xchg ret cmp sbb pop adc (bad) xchg inc jb call cmp es adc lahf and push add pop bound cmc decl test jne mov inc loope dec in pop mov add cmp jb lock push lock cmovp mov fisub jnp pop mov sub dec or xor add or lea and out sub test pop or inc adc incb push push decb mov mov mov je adc sub sub push jno jnp pop scas outsb jecxz mov pop add jb push mov mov sub inc xor sbb mov adc mov jnp xor aas call cltd and or add mov mov mov pop mov or sbb pushf sti scas mov sbb ret push add push xor inc inc mov cmp mov dec mov movl dec call mov jbe mov subl add xchg and lea or push jl inc push in call aam cmpsb (bad) aas mov mov call mov je pop loop and sbb jne lret jb and or cmp (bad) in jb ljmp cmp call mov sbb test je mov (bad) je or mov mov fidiv mov jmp cmpsl dec insl inc sub getsec mov ret lcall or pop inc mov sub push and ds dec mov mov pusha jae pop mov and sbb sub sbb adc inc les roll sbb les call aam and sbb in add sub xchg jp and inc jne sbb cmp jae test jne imul pusha negl cwtl cmp sbb jle test sub xchg push pop cmp je adc pushf cmp sub rcrl mov add adc out mov pop or add lahf xor jb adc add mov or arpl cmpb push and jg and cmp inc jne (bad) rorb movb add cmp dec adc inc add test mov mov cmc (bad) xor mov jle testb add test test scas orb adc xchg inc adc mov test stos mov je (bad) and add ja push or out mov mov movl ss sub mov mov daa pextrw push mov or (bad) mov xchg dec add xchg scas pshufw sbb into jne adc xchg push mov les pop pop pop jmp sbb mov sar inc add mov xor inc add aam movb add mov fstl popf mov movzbl mov jmp pop jae daa test or sbb test inc in jle les or cmp outsl loopne mov call inc xor dec push and and fstpt mov push add mov ja test mov or jbe mov jmp or ret (bad) xor inc sub lahf adc inc or bswap or or add stos jns adc in jno out add and pop push pop dec and mov dec mov call and fsubr loop add pusha dec sub mov fdivrs gs inc and jmp add popf and rolb and xor and add (bad) xor add les push cmpsb loop fmuls mov mov je movzbl pushl rorb mov ljmp push cmove add sbb incl or pop inc pop das test sub mov leave imul adc clc sbb xor xchg (bad) int add repz sub jg test test jl repnz cli iret xchg test mov add hlt jg test mov add push sbb sbb fildll add pushl arpl mov push lret setle mov andl mov test je mov xor div imul cmpsb add mov je (bad) pushl lea lea jmp es xor add sub (bad) (bad) jle lea mov jb cmp jne inc jge ret mov jne sub adc sub les xor (bad) inc mov movzbl mov push adc scas pop mov or fisubrl sbb xchg mov jne jmp inc mov mov and mov (bad) in jne mov and and pop sbb add adc mov push xor fisubrl push nop movl aas aaa sarl xchg subl add call mov sub pop mov aas mov or inc pusha and dec je lds add mov call jns mov pusha mov push add popf mov loopne std push jbe jp add or mov sbb test pop mov aad rorb sub mov pop or inc and scas stos push pop dec mov (bad) decl pop adc sbb outsl ja lock test jne mov mov out mov (bad) xor sbb inc or sbb sbb das mov leave popa add aam inc sbb jle popa jnp mov call mov cmpsl inc orl roll add jle jmp fmull aas das xor add xor dec xor daa push xor call stos pusha test adc or mov dec adc ja add movsb bound lds fistpll push add je sbb inc pop jmp je dec test or popf imul repz (bad) decl mov mov mov mov mov in sub push mov adc cmp mov je lea inc popf pop out pop lods inc cld sbb mov stos test je sbb or ljmp inc adc push je cld sub sbb or push inc jmp test (bad) test call push test (bad) xor lahf mov lret rorl xchg lcall ja add inc test fimull test rorb and or cmp ss mov clc jl cmp fcompl add pusha add add mov xchg and bndldx subl test mov add or mov jno fwait jle in mov cmp sub pusha mov into add dec mov and dec cmp es cwtl or and pop (bad) rorl xchg icebp (bad) (bad) call mov jmp rcll mov cmp xor rcll scas (bad) call call movl mov push andb and cld int xor and fdivl and fdivrp (bad) sbb jo mov mov jmp jmp les jo icebp cmpl loope dec mov fwait cmp pop add inc mov xchg and mov adc aam daa in xorl add jmp push jg subb inc add push les lret std inc fmuls test sub mov test (bad) (bad) repnz or or xchg and mull dec and sbb outsb or test pop in xchg jge mov and xor jbe mov sbb pop decl cli xchg sub sub movb add add fwait out and or shll add mov jne (bad) popf mov and movzbl push in sbb sbb arpl xor jae xor les jo iret outsb bound ljmp loop adc and sbb inc and dec iret push test lcall inc adc inc pushf leave je cmp and cmp mov jge push mov cmpb ljmp mov jmp inc inc adc jne lock sub decl pop and ljmp sub push xchg sbb jmp (bad) push aaa jo out sub test cmpb add test cmovb insl or test stos jg push and cmp jne push dec jmp xchg movsb push jmp push sbb push add mov add bt and adc push jg pop and out jl adc fstl es dec (bad) adcl jbe jg xchg iret out cmp dec and lret mov call mov jmp push mov add mov mov test dec test shrl test push xor (bad) pop mov call clc sbb icebp mov dec sbb in movzbl loop jg add repz inc fucom mov call loop jnp insl in mov test jle pusha call cmp (bad) in jmp dec rclb in loop sqrtps or xchg or mov les adc loopne hlt xchg in sbb aam mov test test mov daa jp and insb loop decb fsubs loopne je cmp jge mov call push aaa add mov divl pusha or sbb (bad) ljmp fs jne cmp je cmp mov (bad) neg dec mov cmp jbe out inc mov (bad) and lret or mov test lock xchg adc adc ret sbb push aas sbb jle add stos pop push ret pop or imul int es xchg inc add subl clc cmpsb or call or push mov imull adc shrb les mov inc fild lahf sbb test jne mov aaa pushf mov or ret call inc and jne jne ret ds je das xor test jle mov jno push sub add cli in ja ret ja push push push cmp dec andb cmc and cmp test push arpl movl mov (bad) pop fsubl jne lods cmp lahf jbe add or and mov jne icebp mov je imul mov cld jmp mov sar imul sar sub das xor and popa dec add adc sbb cmp clc mov push aam test loopne loop or push xchg popa mulb add ret je jge test jg test test and in pop cltd in or jge (bad) mov xor xchg xor add push mov mov xchg iret sbb clc pusha cltd faddl push adc adc adc (bad) out dec aas add movb sbb mov sbb out add push iret inc sub (bad) jae xor add mov add and (bad) (bad) inc and shl or or and inc dec add mov pop xor test dec jo (bad) dec cli and fistp stc jae push jg add pop push cmp inc gs xor adc mov psrad clc es jmp les adc mov jg lods sti or scas jmp int3 mov sbb jg cwtl jnp mov and xchg sbb roll sarl sbb or pop shlb sbb popa inc test or aam pop insl movsb xchg testb mov xor or adc or fwait adc cmp lock (bad) adc adc adc jecxz add pop add je fwait cli je movzbl mov add jb call (bad) xor xchg jg lret bound mov or shrb dec push scas cmp sbb aad pop add inc jl (bad) fucom dec movsb lds sub je cmova and (bad) push sub and add jle push mov mov add jae push push shl popa ja dec jmp xchg jge fmuls cmp add cmp in adc inc and int xor xchg inc test iret dec adc test and push sbb out lea test pop das pushf jmp ja cmp jne je loopne mov xor push or sbb or mov std cmp jmp xchg test cltd inc jmp mov add add inc xor lods pop mov and sbb js clc add test mov mov mov push in mov cmp dec cmp and stos xchg lret and add enter shld popl add xchg (bad) lds push ret and pop or test and xchg adc in pop in push mov es add add outsl ret call jmp inc (bad) fist sub jo mov jo jbe inc pop dec scas or xchg cmp fmull inc jmp fwait sub dec jns or or dec pop ret mov push add mov and mov mov or cld xor inc decl das test je icebp addr16 or and aaa or stc mov xor fnstenv movb (bad) dec jmp sbb ret mov sub mov and inc xchg mov stos xor or pop je les inc or ds cmpsb jle ret or jne aad adc jne loop inc loopne push xor je sbb or or mov outsl pop push xchg pop shll and (bad) push jl scas je mov test add das mov add mov mov adc test mov dec sbb sbb pop les lods cmp jg (bad) mov je inc rorb test dec dec inc test push push rol or addr16 daa or (bad) outsl call inc push pop popa hlt or mov (bad) pop add xchg mov test mov ffreep pop push repz mov pop xchg add and ret xchg xchg adc (bad) sbb xchg dec test loop cli cmp sbb (bad) xor call fwait loopne es mov or and sub fsubs test pop cmp sbb adc push push cmp dec and test je in je pusha or or pop mov jmp std add xor mov jmp pop pop xchg xor in add daa or ss sub decl jp inc add or jmp mov nop leave pop aam xchg adc cwtl add aas or pop adc cmp add adc xchg sub xchg add int3 mov sub inc and add inc nop sub jmp in mov pop sub add fimull sub jg cli adc in add cwtl xor mull int3 insb dec mov lahf shll sbb clc lcall lods lcall inc addl push cltd and daa out rcrl inc aas mov leave stos cwtl (bad) mov stos mov nop push add orb out add pop and mov xchg out loope loop jg and movsl or lcall jb (bad) jne mov xor or xor jmp clc mov push sub push or into mov mov sbb or xor insb mov or sbb jnp xchg cmp jg inc jne mov mull pop and mov sub cmp jle xchg stos loop jmp mov ljmp pop fwait in push dec inc dec aas test (bad) ljmp call cmp jg sub mov mov mov pop imul mov mov xchg dec inc jne mov lret adc cmp outsl or aaa cmp aam call cmp push inc fistpll and pcmpeqw push std jg das (bad) mov call inc cmpsb pusha mov push push jp ret movzbl sub mov mov fist stos bound test add or and aaa mov jne mov leave dec clc ja mov push inc rorb test popa mov addb and jb inc inc mov mov outsl loop clc je cmpb push test je inc sar xor cmp jne jmp jb (bad) fsts cmp jne cmp je loope sub mov add push pop sbb call xor test mov adc pop test sbb and mov imul xchg loopne sar cli add dec les inc adc sbb mov mov add dec lea cwtl push push ss cvtpi2ps or jmp pop add mov add call shll add adcl js and rolb lds outsl int add xchg fisttpll nop js or jecxz sub les call or add and sub addb mov dec call add and push stos test jg add test je xor sbb adc sbbl cmp pusha ljmp out shrb inc xor dec imul mov nop or rcrb inc add push fdivr gs sbb push xchg or jne out adc adc cmp mov or out sbb out xor mov dec and inc or sub add or adc add test pop test sub mov stos xchg add fmuls clc xchg adc mov lock xor pop pop loope mov pop ret mov call test inc push mov out add test mov xchg mov pop call inc lock xor popa add mov inc xor imul je orb jmp mov push jbe and xor dec jmp xchg mov push add mov daa fcompl push daa cmp fdivl mov call and jmp jo iret xor cmp lea cmp jbe sub lea mov sub push icebp ja ja lea lea or xor push js ljmp cmp (bad) inc je mov rorl sbb jne adc scas cmp nop mov cmp aas add sub roll add mov shl push jmp or popf jmp pop add and dec jmp dec push vpcomub jmp out xlat (bad) call adc daa popf jne mov jne mov pop fucomi xlat das fsubr sbb lock ss or ret push mov call fsubl stos pushf and or mov xor flds mov (bad) cmp out sbb popf adc jne nop jne mov pusha and jb cwtl mov add jnp out es (bad) (bad) jmp fistpll add add sarb xchg mov add inc (bad) sahf xchg mov in or arpl scas add push rolb push mov add rorb (bad) lcall push std sub sub sbb (bad) mov add mov psubsb ret test andl test int3 mov int3 out aas add enter mov incl mov xchg add cmp (bad) (bad) frstor inc add sti cmp movb cmpl xchg xchg pop inc xor mov stc (bad) dec add test inc adc add xor lahf fwait xor cmp fdivl sbb fisubr and dec mov and push (bad) call mov cmp test out mov je das xchg sbb fbld mov xor sbbl pop aad rolb pop cwtl loopne or icebp ret push out fs xchg test mov dec and add sbb test adc mov loop push js push adc xor adc mov xchg ljmp xchg imul add ret pop add cmpl test xchg test icebp sbb call les mov (bad) sbb jg call cmpl mov sbb test pop addr16 mov push sbb xor test inc lret je adc and fwait divb sbb lcall jne mov jle scas add lea call mov (bad) into inc mov (bad) imul decl xchg addl out jmp ret scas and add lods jmp push mov je inc sub insl cmovo call cli pushl and aam aad rorl sub test sbb fnsave cmp call ja add call js jbe punpckhwd int adc js sub popa push je and and roll (bad) jge xor loopne iret (bad) out mov (bad) jmp lock mov (bad) inc jmp push iret add mov xor mov sub xorb shlb mov test mov sub mov loope xor jle sbb inc adc pop push popa dec add adc cmp shl cmp mov jmp movb and jmp cmpsb cli inc xor outsl sub pop inc fcomps loope jl lods and scas decl pop or test jne mov mov or std pop rolb in je sub (bad) cmp cmp adc and jno cli add and cmp pand fldl add add setae inc and lods gs add lock jle ljmp jno cld xchg mov mov mov (bad) ds lcall pop sbb mov pop mov fwait xchg inc insb inc push adc pop repz adc xlat lods add push mov inc add (bad) adc ret push inc sub pop stos daa pop (bad) rclb movl inc pop mov ja or enter xor and cmp lret mov lock push (bad) (bad) in or and and cmovne push jl inc mov xchg (bad) fldl fadd adcl cmc call cld aas push mov or je ss mov icebp cmp mov repnz mov mul shr cmp (bad) ret out mov stos pop lea push pop je test inc jp,pn cmp subl test ja xchg push test jne js jle dec mov (bad) lea pop mov out xchg jno push sbb jle call popa in add pop or addl punpcklbw pop bnd xor lds ffree addr16 cmp cwtl xor test insb (bad) call xor test inc iret adc add and into and xor ljmp lea and and add stos and inc in mov sbb mov add movsb (bad) call lret clc orl or sbb inc faddl and inc pop mov cmp fnstenv rorb xor adc adc loopne sbb mov push fnsave mov adc push scas jg je pop or jmp mov mov ret or xor and sti addl push nop or mov and cmp jbe sbb std pop call and sub (bad) sbb ret call test rcll mov loopne movsb sub test stos xlat pop xor div imul rclb cmpsl cld cmp xchg sub mov mov add dec ja mov (bad) pop add inc push sbb (bad) or inc lea mov stos mov icebp push pop (bad) (bad) xor cmp ret stos jle pop mov push jg jp add cmp xlat mov addl shlb mov inc out lcall imul fiadd lds aas (bad) incl jmp out mov add scas test mov mov (bad) or pusha add fs add add pop scas mov xchg dec mov pop lods testb push xor cmp add add sbbb mov test xor je and mov ret subb and jo cld mov test cmp add jmp mov push xor pop or mov nop or inc cmp fwait jo lea mov cmpsb adc fnstenv test jg test aas (bad) adc inc mov and jmp add in mov loope push das call outsb dec shlb adc mov inc pop adc sub pop in push jnp push dec orl sti add xchg (bad) jnp adc dec cmpsb dec add test pop aad loopne add sar roll es js xchg mov je lea and mov or mov mov je (bad) lret xor or in mov dec scas es ret jge pop bound in inc dec xor mov mov in (bad) into adc push addr16 or scas mov adc sub and xchg xor add adc je inc jo (bad) mov add fcomps and call scas lds shrl inc push (bad) fisttpll inc mov loopne sbb int push jecxz sbb and jo inc inc scas cs pushf imul lret in jo or je aaa call loop enter xlat clc lahf mov loopne and popf and xor loopne or dec jp mov int3 pop sbb call add lods xchg mov cmp les cmp test add dec negl push jo js popf cmp cld mov je es loope inc sub je mov mov sbb xor loope pop xor icebp inc sbbb sub push adc or jmp and mov xor sti mov movzwl data16 mov xor cmc add bnd mov aas jecxz and mov and mov test mov ljmp cmp inc inc add pusha or bound in fs and jbe sidtl jo add jb jp fs adc dec clc in add add pop loope (bad) or imul sub add pop jmp clc sub sbb adc mov lcall (bad) (bad) jmp in xor push rclb fistl or popl push cmpl leave push inc push jg mov cmp syscall mov add jg sahf pop jb push (bad) mov test jg push ret js or xchg ret pop adc jg or pop (bad) popf add jo cmpsl add add xor jg or and lret inc adcl jp jg mov sub push xor jg and pusha je xor les stos jg or and or sbb lcall pop jg inc test mov inc push test push jge push or push sub test and and cmpl or test or adc add out lods sbb xor cmp int dec and sbb cltd fnstsw xchg push sbb and loopne ljmp cwtl int jp nop mov das mov lods test pop or addl inc adc jg dec and nop push popa xchg jg and jg dec adc test xchg dec gs and gs (bad) cmp or ljmp test pusha (bad) jo push ja data16 push (bad) stos adc in or aad out adc push xor fwait lret adc mov lret and cmpsl xchg inc aam xchg push scas (bad) out push cmp call rol jbe or inc stos sbb mov mov bound test fwait mov add sub stos inc jmp push das das xchg add outsl addl xchg adc movl ljmp jle out or aad rclb push scas and cmp xchg mov jmp adc jge loope or jge mov adc mov xor mov sub sbb add out in stos pop jge jecxz lret push push xchg xchg push jge push sbb in iret xchg adc (bad) sbb lock cmp lea adc cmp add add cmove add pop aas fs (bad) or dec fs je mov js arpl cld test je imul adc xor lsl add xchg enter jne pop lea popa je add (bad) (bad) jmp lahf jg inc std xor jmp inc and mov adc or cwtl cwtl pop mov or pop push add push loop xchg and mov in cli mov mov movl add add and das inc push inc add daa and jne stos (bad) mov add add je shr cmp jne lock loopne call push ret mov jb xchg imul sbbl mov pop jmp mov aas add dec add out or (bad) adc rcrb pop inc and push arpl add inc mov lock add push pop adc add adc ret pop pop xchg aas mov sbb imulb pop add add aas daa xor out les (bad) aaa adc out stos inc and movzbl test je (bad) (bad) ljmp xchg inc lea lea mov nop cmp je add mov mov cvtpi2ps add jne mov sub movb call iret lea loope cmp cwtl (bad) jle adc je aas mov jmp cmp sbb fiaddl out xor lods jg (bad) pusha cmpsb decl mov and fwait (bad) push test xchg lds add cmpb lock fcompl and and (bad) inc cmp mov call pandn pop pop movb lea inc and je jg (bad) jae ffreep push dec pop jmp dec xlat (bad) and mov (bad) aas mov aam inc roll in mov or stos call dec lret and sbb and ja inc iret pop inc mov or and mov roll and push and in mov pop (bad) and add push jg mov cmpb mov mov (bad) pop add (bad) mov and fistp (bad) jnp mov add out lock add (bad) mov inc jno pop mov xchg test sub rcll pop or mov jge je out popa mov popa sbb and loope xor call jbe into pop sbb jb test into add add inc mov adc pop fsubs lea jb sbb add (bad) jb test fisttp addl jo mov sti or jge je and mov pop mov je cmp roll mov adc inc mov jae adc or stos lea push cmc pop or xor inc mov fimull sub mov sub or in adc dec jge jmp inc add popf xchg jmp cmp push (bad) iret scas das push add jg test je mov test je enter cltd bound popf or adc adc or (bad) and sbb mov push or outsl xor add and mov ret sbb xorb mov sub fist sbb or push pop and jne ljmp dec rorl jb cltd sti (bad) (bad) cmp ja cmpl je mov add pop pop ret xor add or add (bad) mov pop add pop data16 adc insl outsb cli dec lea (bad) (bad) out pop and (bad) jne mov cmp ja cmp jb mov and dec and ja mov mov sub lea cmp je cmp outsl loopne (bad) inc jbe mov fldl std jb cmp jb mov push cwtl jle add (bad) iret jne mov cmpsb sub pop std lea cmp jae adc decl iret inc mov sbb (bad) mov add jle sar or ret mov inc jae sub add (bad) mov movsb arpl mov sub call das rolb pop and (bad) mov test ret je test jne mov (bad) fwait mov xlat mov jb sbb sub rolb loopne mov pop hlt call jg or jae mov sub add cld or inc call fmuls test scas std arpl fucomp enter jmp jae jb add xor sbb add (bad) decl stos sti pop daa sbb add xchg add adc cmp pushf mov mov mov adc ja add mov ja call mov adc push repz neg iret sub jne sbb imul jbe sub jle xchg mov jle mov out sub jg outsl cmp add sub push std pop adc push in nop nop popw mov mov mov sbb pop aaa jno jl jmp cwtl scas es (bad) jg jp add mov mov cmp jbe mov cmp jne mov jmp jle add je movzbl cmp je lea mov add lahf std and lea ja lea jmp xor cmpb inc fild fimul xchg rcrb pop adc (bad) jmp jo int sbb divb mov movzbl test lcall lds lea add and xor lea lea (bad) out sti and cmp stc je mov movzbl xchg fnstenv mov xor cmp loop sbb dec xor sub jmp aas les mov push into testb movsl movzbl test pop pop data16 lock push xor xor and xor into sbb adc cwtl dec adc jmp sbb cmp sete cmp pop jne cmp je sarb and jmp icebp call mov lea cmp jbe mov cmp jne fbld add add sti mov je lea movzbl ficom jnp (bad) xor icebp xor rorb and clc lock imul (bad) jg jg mov mov cmp je cmp jne jbe (bad) sbb mov add (bad) push out test lock aam in (bad) jne mov (bad) ja cmp jne jmp ja out mov call cmp nop mov je je mov pop adc mov xor lea arpl jmp adc pop (bad) xor xor mov mov xor add (bad) (bad) mov add xor or in lret sar add adc out (bad) fnop movzbl cmp cmp jb or cmpl cmp aaa xchg aam mov mov mov inc adc add lock test pushl fsubr ret add ret test je movzbl xor lea cmp or arpl fnstenv (bad) jns or mov add (bad) dec decb mul add mov mov je sbb movzbl inc dec mov jmp test (bad) mov (bad) negb es sub sbb and call inc test je sbb dec std pop loope mov pop ss mov xor orl mov shl add lea jbe lea cmp ja lea and or test pcmpeqd sub cmp jbe repz hlt cmp jmp push test and mov push or outsl push lahf inc loopne ret pushl sub test jle mov push ret lea jmp mov lahf loop and sbb lret push (bad) jg inc jg divb jmp lea cmp (bad) pushl movzbl ja shl lods add cmp je movzbl lea cmp jbe lea (bad) dec mov rorb sbb or dec test ret or adc push push pop cmp test je mov pop mov rcrl mov add leave icebp xchg fisttp jmp movsb iret add out mov mov adc sub aas xor out add mov lea mov cmp jbe sti ja cld mov ja sub movzbl fcos pcmpeqd bound inc dec clc in sbb pmulhuw jmp mov push mov movzbl jmp (bad) lea push jbe aaa xor mov and or pop add les sub popf or cmp into inc and in cmp stos (bad) fwait xchg add test jl sub test push and xor incb pop lea mov clc mov sub add sbb rolb inc and je outsb add rorb outsl mov mov lea or test outsb test into rcrl jbe pop push sbb sub jbe xor inc jg inc sbb add sub add sub and loopne inc les inc sahf mov mov sbb call mov add movsl jg cmp push pop add cli push daa add scas arpl aad test jle sub inc add cli jnp pusha aam push mov cli (bad) (bad) fldl pusha je add cmp ja cld decb (bad) fildl adc aaa mov repz add cli push or jne jecxz in rorl cmp shrl popl cli test fldl test outsl mov cli in mov cli or jle int test sub data16 cmp mov decl pushf mov dec cmp inc mov add mov cli adc jb orb pop cmp rorl cli push push adc jbe mov jae mov or jbe std out aam jne repz cmp mov and mov cmp pusha (bad) cmp cmp jle or (bad) cmp mov xchg xchg repz sbb sti movsb cmp and dec cmp sbb outsb xor inc mov jg xchg mov push je test cmp jnp enter sub addr16 popl push insb or (bad) pop xorl dec (bad) (bad) cmc cmp (bad) ja xchg lea cmp (bad) sahf movsb test and sbb or jg pushf cmp out out xor mov std (bad) incl ljmp mov push test push fwait outsb xor (bad) mov insl or psubq (bad) mov dec inc add dec mov dec cmp push test (bad) (bad) decl sbb xor jbe mov repnz test cli jo les inc fs out ret sbb test push lock jae mov push adc ret test aas push sbb sbb sbb aas lahf arpl ss lret jno adc scas mov xor adc jg jecxz mov pushf sub cmp pop out mov in cmpsb (bad) or into jg fildll adc cld (bad) sti adc in ret (bad) les aas cmp mov sub mov pop mov cmp mov jle test in push addb adc adc mov cmp mov adc push sbb aaa ss jg aas or mov mov mov add fnop dec fist sbb lods je cmp repz mov es mov ret sbbl movd (bad) (bad) pcmpgtb mov jae movq sbbl cmp psubusw loope call or and push dec (bad) xchg mov pop fdivs push cs add xchg stc in or mov loop fstp (bad) std and je (bad) adc andl jl mov adc cmp mov iret dec cmp test mov rcll adc push mov cmp (bad) divl scas leave push testl adc ss test out jae adc push mov aaa loop test cmp mov xlat adc cld out xchg out test cmp jne repz insb adc insl adc (bad) sahf lods test outsl sbb xor je sbb adc push cmp adc je out (bad) pop test and adc sbb sub outsl push push cs sub fcomip cmp test mov adcb test xor popf (bad) icebp lock lcall sbb or dec test repz outsb test cmp xchg add lock mov pusha cmpsb pusha push out rorb jle bswap push int3 jno cmp xor sbb arpl or hlt lret mov mov aas aas aam pop data16 mov test imul pop hlt sbb pop sub mov sub push and jg pushl jmp mov mov test sbb xor cltd and ret add cltd mov xorps aam rorb call cmp je (bad) xor mov add add mov sbb add xor mov test cmc inc stc psubb mov out insl cmpsb adc fsubs mov in sub mov cmp adc (bad) jne mov mov inc and je and pop sub mov inc cmpl mov mov push je (bad) xchg xlat xchg loopne or cmp dec test rolb adc test les js (bad) (bad) hlt xor pop adc jge dec adc inc inc mov pop (bad) stos sarb add cmp and (bad) je (bad) pop push lods jp jne lock frstor jo cmp (bad) stc or and xor push in add sahf sbb pop xchg xor adc sub scas add scas lcall int3 push inc xor fwait std inc je mov repz sub cld mov idivb aam sub frstor push aas inc jne or dec rcrl mov jge popf pop adc adc push and jbe xchg rorb out ja adc rcrb ffreep or dec and mov mov mov (bad) loope loopne popl out int3 add loope stos xchg and sub (bad) (bad) (bad) decl (bad) pushl or dec and jae test je cmp je xor jmp cmp mov ja call je lea cmp jne add mov mov test je mov add sbb cmpsl add out add movsb rcrb aaa inc aam jae pop adc mov les add arpl or rorb jmp xor or mov fwait incl or ret into pop add push cmp jae stos cmp sbb cmpsb add and testb aaa mov sbb sbb mov ret in push jg cmpl xchg dec adc add mov fmuls inc and xorl add mov push sbb mov and add inc ljmp pop ret cmovl pop and mov add and mov inc jg mov pop dec adc (bad) cli ja mov sarl aam loopne jg in mov pop cmovns add inc add lret insb pxor adc lods int3 xor xor pop stc daa iret sbb je inc inc fdiv adc adc rolb jbe push jmp dec mov sub push decl sarb rolb mov outsl js adc outsl sub ret decl out jecxz ret xchg and push cmpb je cmpb aas adc sbb call cmc push cmp and or sub mov jmp xchg add cmp dec addr16 or in cmp mov addr16 cmp xor call popf je ret mov cmpsb or cwtl call (bad) std pop push mov mov adc or pop int inc mov mov (bad) and jmp mov push push mov call push cmpsb sub mov subl dec clc dec test bound je flds pop sub and test sbb pop fisttp popa ss pop lock jne and or dec and popa jbe mov adc in adc andl out jo ret sub xchg or or sbb mov xor inc xor jmp xorb pop push mov call cmp (bad) sub mov push cmpsb inc add lret orl push pop frstor in sub mov mov je mov mov xchg adc in mov xor rcrl push xor shr fildll sub jno and (bad) (bad) mov test jne jmp mov test je mov orl push mov jmp bound (bad) or sbb pop clc add xor jae xor or mov into adc and divb pusha lcall adc jmp (bad) outsb or pop push incl es add add lcall jmp nop scas je and sub cmp outsl loopne out push cmpb je bound inc push in pop cmp pop cmp hlt gs adc dec loope cmp cmp adc (bad) incl movsb loope (bad) aas cmp stos xchg jns push in sub add (bad) pop cmp jo mov je movl dec push paddd mov lea cmp incb jl sub push add add mov mov aaa inc and test and mov jnp fstpl std popa nop repz xor pop mov jmp imul leave add push pusha lea pop pop movsb xor jmp sub ffreep mov mov test jne repz fist push mov fisttp clc (bad) fiaddl mov xor mov add mov mov lods sbb fcmove sbb mov das cmpsb push dec push mov fistl in cltd jae and outsb lcall pop xchg je inc movl (bad) outsl jle in inc adc push adc mov mov mov mov mov cmpsl (bad) and out seto ljmp (bad) sti sbb inc test js sarl test pcmpeqb (bad) sti cld out add adc lock mov es jae jbe cmp jne lock sub call or movsb das lods stc and stos xor mov je inc push mov mov add inc lahf ds test xor movl clc pushl mov mov movl jl aaa mov jp lock in insb add jmp scas lahf fsubl sahf fcoml xchg cmp call mov sub popa es test stos pop orl inc outsb call fcoms pusha (bad) movsb and dec mov xor push mov (bad) jne test cwtl or lret rcll call xor (bad) cli inc rorl (bad) lea shlb push add inc add call aad cmp (bad) je jge pop add imul das cmp cmp adc sbb fsubr jg or inc adc push add inc rclb movsb pop cmp pusha adc inc fcompl (bad) xor shr rolb sbb in cwtl iret scas xor stos pop rcll dec out pop push push and rolb ret dec out mov js jo pcmpgtb outsl lret movsb add add mov pop push mov push pop mov add add push adc and aas js aaa cmp and lods xor mov inc adc cmp add (bad) (bad) (bad) and mov add rolb add lods lcall mov lcall xor scas pop sub jp xor lods mov jp popa sub mov sbb pop add cli loopne jae nopl lock dec add (bad) imul fistp sbb adc ret je mov cld add pop mov mov (bad) clc jae adc out test push inc sbb jl add sub inc mov inc jo dec inc rclb ror stc (bad) xchg mov jbe xchg lods call jmp ss (bad) ljmp scas xchg or push sbb jg xor push xchg mov das imul in cmp xor jae movl mov (bad) lods inc mov push mov push rcr scas loope je packsswb and mov outsb je adc call je mov movl mov mov jmp pop int3 cmp or idiv adc add imul jb sub andl or inc cmp inc adc xchg xor and shr daa aas mov mov mov ds push jg mov inc mov mov add pop mov fsubrs xchg xor pop mov pushf mov pop shl fsubl adc (bad) pop out lahf fldl lea add sti int3 inc mov inc pop xor inc pop push jne dec or ja test mov mov push das mov mov mov stc mov or call mov gs or rclb aas outsl sub in pop sbb nop scas pop and lea inc push and sahf iret incb jo adc nop jmp nop cmpsb jle in pop fsubrs aam push mov inc call cli fstpl pop sub lea test es add inc call leave pop pop jmp and or inc or xchg and jge mov movl jge inc mov cmp pop jmp cli xor sub pop or iret or cmc cmpsb fcom je (bad) (bad) cmc (bad) cmp or call adc lea dec fs cmp jne insb add call add jmp cli nop stos mov (bad) push xchg mov add call pushf mov inc cmp jne lea sbb loopne sub mov jae add push adc fistpll xor divb rorb cwtl jae movl ja out ret adc sbb cmp jne xor add stos stos mov sub ja outsl jno or divb lea and push and xchg (bad) add sarb mov rep (bad) mul subb movl push pusha movl sbb movl mov sbb leave or xlat fldcw and add or adc cmp mov xor mov dec inc add dec or inc or mov imul add dec add jnp mov lea cld mov push fiadd jg or decl jne or bound mov in outsb je jle std pushl push xor out add ljmp jns clc inc mov mov and inc stos mov sub (bad) inc call cmp movzbl je dec jne mov mov movsb shl mov movzbl add add xchg pusha mov lock add lea xchg lea test rorb pushl mov inc cmp jne add add cmp loopne int3 (bad) test cmpb jmp inc mov push add inc and inc pusha add loope inc jnp call movb jmp push mov movl jo jo mov pop adc cld or call or jle add pop push shr cmp lret call push jbe inc pop loopne jo je push clc cs jne test push inc dec and mov xorl out jbe (bad) xor push (bad) jae xor jle scas or xor call inc arpl jbe sub aaa sub cmp jnp add inc push push pop dec jne mov lods cmp jle cmp add ljmp sbb jl,pt push or mov dec push mov (bad) pusha mov push aad push mov or mov jne aaa mov and xchg or (bad) adc pop mov xor add push add add add add rorb mov xchg loopne outsl add loop lret (bad) (bad) cmp outsl cli in ret nop nop loop in adc add add pushf pop xor mov loopne loop push popf call setne insb push mov add (bad) call push mov mov mov mov cpuid mov mov mov mov pop pop out out loopne outsl pop adc xor hlt mov mov into ret add fcmovnbe dec mov adc mov mov adc cmpsb lock pushl loope push rorb leave xorps xorps xorps xorps xorps xorps jg adc addps addps addps addps invd sub lcall addps addps addps pop cmp test mov bound mov or cs pop mov pusha loopne cmp xchg jle adc rclb sbb xchg pop ljmp xchg and fs pusha pushw mov cmpsl cmp sub sbb sub sbb and or movb test and rolb orb sub cmp outsl ret lds sbb adc mov and add mov loope out cmp adc or pop cmp mov jbe mov das incb mov or cmp fcompl mov adc loopne out push mov je shl mov fdivs icebp mov out outsl loop clc je or pop movzbl jbe cmpsl (bad) fisttp push adc outsb add cmc mov jle adcl add clc mov std push adc adc (bad) adc sbb sub mov cli jmp (bad) jbe push les pop pop std push mov mov mov xor cmp (bad) rep mov test js mov stc shr dec incl out movb faddl incl je sarb movl jne roll cmpb and and rorb push in es fldenv push cmp and cld sbb test movl cmpb es test es outsb sbb cltd iret es es out (bad) cwtl es aad push jmp test ss cmp mov (bad) pop mov jns cmp data16 es adc es ret jno push leave sbb out es int3 adc (bad) je es ds xor xor add es xchg and dec out and fwait int3 inc (bad) es je int xor or ret add sbbl mov hlt bound xor or or add mov jae es je ds adc dec lock (bad) es and dec xchg cltd add xor cmp xor xor es fwait bound es push cmp xchg loope movsb push dec push ret data16 testl popf loope loope es ret es es or sub dec leave or mov pop es out pop xchg dec pop xchg in imul mov xchg xchg int3 adc and xchg sbb or rorb push nop dec jo (bad) push or leave pop inc shlb loop push insb jbe data16 cld dec lds mov je,pt in xor es nop or xchg es pop inc xor jae (bad) and or rolb sub inc je add add insb ret insb cltd stos or ret pusha addr16 push ret and dec sbb fwait cli lock je cmpl mov jl jne (bad) movsb popa xchg ds add mov fmul or pandn add mov mov jne movl or les mov sbb call lea sub mov xchg pop or je xor and cli add add xchg mov shl add rep jmp adc add movl inc out mov movl (bad) mov mov xchg cmovp mov mov adc aad add and (bad) adc push and leave xor xor xor mov mov mov mov mov cmpl (bad) call mov mov cmpl xchg jae ret inc pop lret hlt cmp enter cmp mov rcll push ret movsl mov call lods push cmpl add xchg inc out arpl (bad) add call addl sub out ja loop xor call arpl aas movl add pop imul and je and (bad) lcall stos jb rolb (bad) jne cmp jne test push sar movl incb sete jae ret fstpl rclb cmp and out add jne cmp jne je (bad) jmp or popf sti ja add (bad) adc mov shr lea fwait push out pop call orl push sarb inc imul mov bswap ja ljmp cltd idiv cmpl je ja pop add or adc rcr je add jmp mov add adc insl mov jl dec icebp jmp mov pushf mov jmp mov mov jo loopne test mov push insl mov mov std or adc test jmp mov or xchg cmc pusha aaa cmp pop ret (bad) decb xor xlat into pushl icebp cvtpi2ps popa ret mov fs inc adc mov pop les sbb jmp movzwl cli inc jne inc ja sbb cltd mov ljmp test cmove frstor in add or lret decl mov push jbe mov shr inc dec adc dec ss push mov sub aaa test cli addr16 ret jg movb sub das nop dec lea xor mov add xor mov aam inc int3 jg cmpsb test or call mov je out (bad) out out mov and rclb clc pusha jne das loopne rclb sbb pushl add push mov dec mov cmp je mov out fcomip xlat or inc cmp cmove jmp adc (bad) cmp jecxz mov cmp je cmp je cmp jne bound mov sbb sub jae mov or movsb xchg dec repz js mov mov outsl mov or mov adc subl aam rcll mov cmp or jmp mov sbb push daa fnop sbb rcrl sti jne mov in out mov mov out pop jmp sbb call loop sti sbb int3 jle add adc rclb push add adc sbb call inc inc les mov fstpt jne lods cli ja pop dec (bad) (bad) fistp rolb or inc jmp cmp jne or jl mov testl add out dec mov jmp cmpl out aas out jg jmp in adc lahf ret adc push std jge sti jmp cmp test and testl mov loop outsb clc push xor ret jmp mov mov inc je xorl test jg mov mov mov mov add and mov cmpb pop sbb aas adc xchg xchg push fiaddl test je add mov xchg add mov cmpl aad mov sti mov push mov test mov xchg clc mov fcompl xchg sbb mov push inc xchg and or jbe mov mov stc (bad) (bad) (bad) mov dec loopne or inc cmp jne sbbl jne pop adc sbb add nop test je mov (bad) decl pusha cmp je cmp jne movsbl sub cmp pop inc lcall cmp dec ret push cmp mov push add jle decl or test je pop je inc jmp stos (bad) lcall push and or add adc out es jbe jmp add push ret push incl dec push mov inc cmp jge in (bad) (bad) decl shl test je mov mov movb inc jmp xor dec mov mov in or out decl jne repnz mov not lea sbb xor repnz not add dec in cmp jge movsbl imul clc (bad) fild je mov xor cmp jge movsbl push mov add call je dec call (bad) jmp mov decl aad add push inc inc jmp xor addl add push add jle mov and and and aam cmc xchg mov mov repz or xor adc sbb ret pop (bad) out jle decb inc or push adc push adc enter pushl enter xchg rorl rol xchg cmp aad shrl and bsf enter jmp cli dec (bad) (bad) pushl mov ja jmp test je mov cmp jge mov cmp incl add pop add lds xchg adc mov pushl xor jg push (bad) sub mov cmp (bad) decl mov cmp je cmp mov je movsl pop ret mov xlat ja mov je or pop in jle mov jb fsubrs call jae xchg add mov call inc xor xlat lea pop push mov push mov push mov cmpl ja mov testl shlb test jne test (bad) jg invd jmp mov cmpl jne addl or mov cmp addl jmp pusha ret mov cmp mov leave je cmp (bad) jg cs sbb cmpb dec xchg cwtl loop adc sub mov push clc or xchg inc addl jo movb jmp aas cmp mov mov cli mov movzbl je cmp add xor (bad) or lahf lahf lea cmp jbe sar out call setbe cmp sete or movzbl rorl es cmp (bad) aas push add mov movsbl cmp je lea (bad) cmp aaa pop xor add xor xchg lea mov or idivb mov shlb jbe mov scas mov popl cwtl (bad) decl sub adc pop aad dec mov adc clc pop jmp out icebp (bad) jg sub push mov cmp jge mov add add clc xchg add inc rcll inc (bad) (bad) es inc or mov or ret aaa cld mov and je lea call add (bad) (bad) js mov cmpb jne pop mov pop ret xchg xor jmp mov pop (bad) mov push jne mov and mov call js addl push xchg adc dec pushf lret add aad mov add negl inc or add iret xor or and sbb ret out je add mov dec inc into mov mov std (bad) (bad) ljmp clc mov cmp jg mov add testb mov je cmpb je mov push les or and cmp dec dec je cmp jg pop inc rcrl outsl mov mov push jge cmpb add inc adc je out xor (bad) or mov std push loope (bad) jmp add cmp inc mov aas mov xchg jmp outsl cmpl jne movzbl fucomp clc or mov or jmp es and or jne adc test add xor js dec es jg inc xor mov dec xor mov pop adc mov mov pop or movl movl jo test add dec out pusha jg sar sub inc or cmp inc inc or ja outsl ljmp mov mov sti call mov (bad) mov je mov push adc dec sub lock mov mov cmp lea mov mov cmpb cmp add push add inc pop paddd std mov cmp in pop and xchg mov out mov addl cwtl push cli (bad) mov rorb and setne sbb and outsl pusha push push mov add mov inc lret mov or cmp je sbb add dec add cmp incl je mov cmp jne mov mov mov test je xor cmp (bad) call inc mov mov test jne int orl sarb jge xor inc adc adc loop adc addl pop or mov push adc inc rdpmc mov mov mov call enter push and push ret hlt and lea mov mov cmp fwait clc xor pop (bad) xor incl jmp cmp lea cmp ja sbb ja cmpb je lea dec adc pop (bad) (bad) out fmull aad pop mov lods lea leave jmp loope (bad) lret (bad) add jmp nop outsb sbb jmp outsl rol pop mov mov jmp pop sbb inc lock jno jle push pop add cmpsb mov mov mov inc mov and ss cmp xor dec pop pop je add jecxz outsl cli mov lea xchg cmpb je insl mov std mov sarb pop ret add adc call std cs sbb clc or mov scas or xlat mov mov or rcrb push psrlw or xchg sbb (bad) pushl (bad) or jne cmp je xor cmp jne movzbl pop lea cmp jne dec decl xchg roll or leave mov int3 jb rcr mov push (bad) hlt (bad) aaa mov cmpl jne cmp jg jmp or test je sbb ljmp ret jne mov push and mov mov sbb xchg out add (bad) aaa js jmp jg ret movl nop pop pop loope incl cmp push (bad) adc xor ret or cmp cmp jno add cld push fdivs add pop lahf hlt sbb call lods loop jo mov lahf arpl mov orl sbb cs and inc add jae imul ja outsb push and mov mov mov pop daa sbb (bad) jg push inc add mov add add movb add xor cli mov test jne nop or stos sti jbe add pop cli inc mov pop call loop (bad) je mov jmp pop addl loop movsb stos fisubr pusha clc and das sub cmp jne cmp adc loope ja adc cmp jne lea aaa dec clc je pushl mov pop jne add adc outsb inc mov jmp scas jnp sub adc pop loop jne and adc (bad) mov subb ret push movsb dec aam sbb lret and xlat aas (bad) jae jo mov cld lea jmp out fbstp cmp loop sbb or mov loope call cmp je mov (bad) lahf popa adc bound sbb mov dec and clc and mov pop xchg jle cmp les sub mov movl add and les push pop cmp je jae test faddp ja cmp jne (bad) jo test mov fildl sbb dec test loopne mov xor test setle clc xor test (bad) cmp push es je push add jmp xor sub ja stos mov sub cmpb je test aaa loopne mov add inc std aaa in xor jecxz and test mov je in rcrb and mov inc cmp jne push pop and fiadd add sti call sbb movzbl cmp je or test xor fldl pop in scas pop sarl jno repz or xor add (bad) and bndstx mov and divb fidivrl or or jae (bad) mov sub xor lea push cmp fistp mov rorb cli cmp jge sti clc pop gs xchg gs adc add repz inc or inc (bad) mov mov lea add fdivl movsl sub je dec roll xchg jle pop cmp je add ja call sub dec imul bound inc sbb sbb sub mov cmp je aas jae les test push inc add test cmc je cmp daa mov (bad) lock std adc inc movl je push mov imul insb jne addr16 jb dec mov mov icebp mov mov adc push cmc cmp and adc jmp out call mov inc pop push (bad) ja cmp je mov in mov and call fiadd rorl or call sub adc sarl pushf aad cmp fcomps and ss adc jmp lahf andl cmc or lret xchg lahf in sbb mov jne xor leave rol sub je jle push shl mov dec fnsave aas xor and orl mov jg test jns insb pop push loope push pop sub inc (bad) mov decb jmp das mov mov add push mov jp jecxz jge jmp cmp cmovo in pusha pop into xchg inc or jmp rolb leave lret rclb xchg dec movnti es mov pop sub js inc call cs mov das add pop sub je pop jmp inc stos xlat aad jge pop imul xor test jbe xchg es mov arpl test inc cld cmpb jne js sbb sub add adc das sbb push adc or cmpsl dec js mov (bad) mov push and cmp and aaa xchg out dec sbb sbb xchg jno jp ljmp lcall jbe sub cmp ja sahf jle or ljmp jmp dec (bad) jmp pop and sbb jbe repz cmp add xchg mov adc in cmp pop push scas pop add xchg cmp xor sub mov dec xchg leave inc mov sbb jo mov add into mov dec imul push jmp or mov pushf sub in cmp cmp cmp in imul xor je test cmc js pop jl inc je sub or cwtl data16 iret mov mov bound add mov mov ret xchg rorb test mov sbb lret dec dec jge cmp or ret je or test ds outsl dec cmpb jne lea loope scas mov mov mov mov cmp jge leave push mov push jae adc push icebp add mov or cli je pop pop pop aaa test cmp inc inc cmp inc loop or mov call (bad) inc lods sub or cmp iret cmpsb into hlt pop leave je divb jl pop lcall in or jmp pop jl or xchg ja in sub sbb je inc jns adc les xchg and out pop inc scas or pop (bad) cld add test addr16 sub pop pop xor sub loope lahf jmp or sbb (bad) rcrl mov mov lret mov lea add lcall rorb pop xchg rorl lock movsb popa mov daa or or xor sbb call and ja test add xchg addl lods cmp sbbl es mov inc xor add mov jnp fsubr stos mov inc xor add dec xorb arpl xor mov fwait cmc jo mov sub inc xor fsubr mov ret negl mov jmp jg mov (bad) jmp add cmp ss out es adc aaa jne lcall movb jmp jae or or nop (bad) popa mov (bad) leave aad stc push fist int cmp mov add sbb movl sub dec inc test gs jmp jae jmp out out push adc je in add inc in fucomp add iret xor call jmp mov mov call mov or mov and out push sbb jb pop dec fcmovnbe jo push cmp je movl jo mov sar fdivs call test cmc (bad) out fwait mov imul fucomp and shr mov jmp jg inc add or jne (bad) fisttpl jmp xchg int3 dec ret xor sub call push add sbb push mov pop xchg cmpb leave scas mov push cmp fs jmp mov dec sbb je leave mov adc popa addr16 fcomps bound (bad) mov inc pop mov or fsubr xor (bad) arpl call bts es repz and pop (bad) push and cmc or or (bad) jmp daa mov enter cmp mov pop jae or andb fdivr (bad) scas (bad) mov push inc clc jp mov jno (bad) adc add not cmp or inc push and and sbb jnp subl xchg sub jbe sbb fmull aas jae jmp adc sbb or push (bad) cmp je jns shrl or decl cmp test or (bad) popa ds xor jle mov fsubr int mov movb aad dec sub mov mov push mov xchg pop pushl clc add popl ja fild jns stos test je mov data16 lret mov imul add enter inc je cmp je jle cmp jne outsl mov imul or inc out (bad) popf sti jmp adc xor cmp sub mov jmp cmp andl fwait pop js add movswl and xorl jae aad into sbb sbb pop xor in ret adc je or negb (bad) jmp fbstp jecxz push movzbl sub insl ja cmp push inc (bad) outsl add test inc or adc push ds je (bad) std mov cmp cmova mov rcll xor push lahf hlt cmc adc test add jae sub das and cmp je outsl clc nop out pop (bad) je jp cmc lahf jo je cmp mov jbe call mov sahf cmp je in mov mov loop push adc std inc sets jb lock (bad) fmuls call mov dec push push mov jbe,pn dec adc test bound cmp out fisttpl sbb les inc xchg pop incl negl call mov movzbl mov xchg nop dec pop aas test je cmp inc (bad) mov dec jl sbb or shr and add decl sbb xchg and cmp jne jg lock je ret stc sbb ret fbstp mov cmp loop xor sarb lret test jne add aad outsl and out pop push push mov (bad) aas mov test je mov cmp jge mov mov or inc and and adc insl (bad) testb push cwtl pusha loopne add fist sbb jne mov test jne fcmovnb mov movb ja repz inc and (bad) cli out ja inc mov mov fwait inc and mov xorl push pop std push adc leave adc or jb jecxz fwait sbb xor cmpb in xchg add cmp ljmp in movl push lds jmp iret pop call ljmp (bad) je cmp je cmp je pop add jne inc js sti dec add inc es inc sub add data16 mov movsl cltd lock and or cmp jmp fsubr adc lock or mov adc call add dec adc dec and add jge inc or add inc or xor jmp aam or lods jmp scas loope les fcmovb js mov repnz (bad) je add je jnp mov jmp jmp mov mov mov push mov sub aam dec mov pop mov lods inc or inc mov and lret push cmp test or test je adc or outsb loopne inc or test pop mov or cmp mov iret jo sub xchg jne movsbl cltd dec ja adc mov jmp xor (bad) push xor cmp inc inc adc ja sub stos or add mov lcall push loope cli add mov mov mov movsb out loop cmp push adc cmpsb pop in gs and outsl cmp into call jmp mov add inc inc shr out mov mov fnop (bad) lcall inc and je je cmp je lea mov or inc and jo inc out xor dec mov dec sbb out fsubr mov push out add jne mov lods mov pop gs bound cmp xchg stos subl jnp (bad) pop movb jae call cmove fsubr push sub aas jns aas fidivr push push or les add test or cld jg mov add ja movsl mov fwait in dec add out add cmp sahf fild pop scas pop addr16 cmp roll das outsb in fsubl in das mov and mov xchg std lea lea loopne fs lea repnz add (bad) daa dec inc push add dec mov xor fwait scas fist cmp leave out or ja or or sbb pusha incl call mov loope ja hlt (bad) decl or mov inc pop push popf faddl mov and dec js fild mov lea xor push jbe adc mov outsb pop aaa fsubr data16 mov lea (bad) pop je sub rcrb ljmp mov flds sar xor push or pop idiv (bad) jmp lea mov jg fild add je xor pop jmp xchg (bad) push push and pop push stos (bad) mov inc adc stc cmp jge rorl add fdivrp xchg mov mov je or lods jmp (bad) (bad) out dec dec dec add and jbe call sub fsubl imul jo es mov pop sbb icebp push imul adc test (bad) icebp mov addr16 stc fdivl cmpb orb pop mov inc xchg mov test test es add xor xchg jge cmpsb jle ret inc mov inc inc or dec add or cmpsb xchg ret sbb outsl or and ss cwtl loope xor lds cmp aam ss jmp push lock sub or or inc xor or (bad) sti in and or jnp inc rcr fwait jge je sbbb cmp vmovntdq dec and add nop mov stos mov adc decl out add movl dec sub movl xchg xor ret push or or jecxz dec push rcr mov sbb dec inc lock mov jae inc pop hlt andl sub rolb xchg or in jg sete xlat mov jmp or das lods mov aas adc inc adc adc sarl mov mov mov or gs (bad) ljmp jecxz mov fsubr add clc ja add lods enter out add nop xor jmp repz sti nop pop je sbb test jmp loopne push adc icebp in dec lret xor cwtl fldenv sbb or call pop jmp lds out (bad) push js push jmp sub imul scas sbb adc sbb lahf mov cmpl je push into mov imul xor pusha mov sub fwait pushf (bad) icebp mov push xor stos fcoms out in jbe call (bad) lods sbb ret xor mov outsl adc mov inc mov xchg out incb movb outsl fsubr popf ljmp adc out add scas cvtpi2ps (bad) loop cmp inc or jp inc sub add movb mov adc and (bad) repz inc aaa std push sub stos add sarl rol jecxz lea mov dec sar pop jle mov cmp jne cmp das adc cmp jne mov fildll inc or sti inc mov xor js mov fldpi test (bad) je pop decb dec lea cmp mov mov and jne outsl mov lea ja daa les rorl jb js lea push jecxz movsl fadds add js jle push clc add iret dec inc (bad) add mov or ja es cmp jne and jbe test or aas icebp xor mov xchg rorb jg jbe dec cmp test mov jne mov jnp out call cmp mov test jmp dec jg stos es pop push add add and ret or jne cmp mov lea sete test mov sbb je jmp iret mov mov rolb je mov mov mov pushl jnp mov inc mov or jne push je cmp je cmp jne jl incb cmpb je (bad) mov mov xor and mov sub cmp jne mov cmpl ja decl jne mov sub repz jmp std lcall (bad) fisttp (bad) sub cmp add mov sbb mov jbe push scas push fidiv leave subl fstpt sbb adc xchg cmpsb call mov mov inc and test adc push das mov jecxz inc (bad) pop addb fidivl and fmuls sbb mov xor adc jne idivl std or jne fsubrs mov mov mov aam or pop lods js out xchg pop add dec pop ficoml (bad) jmp incl xor cld loope sbb pop sbb push mov je cmp jmp nop or add xchg int3 (bad) jbe add testb jne lds (bad) (bad) mov (bad) je mov mov cmp je cmp pcmpeqb fldl jne movl and fadd add jg mov sti nop aas pop ja push call and lahf mov mov adc sarb xor jne (bad) jb int3 and scas in push scas or push imul sbb leave out mov jmp jg movl dec les (bad) pop sub mov dec mov comiss jmp add or addr16 test mov shl mov inc shrb imul andl out les jmp scas orl xor cmpb jne push dec loopne scas roll jne add mov mov xlat in mov mov jnp inc jne add jne fild stos aas push xor dec mov add aas sbb js mov lea movd (bad) xchg cmp into inc addr16 cmp (bad) test or inc (bad) icebp jecxz push cmp je dec cmp lea js test cmp je ficom das stos mov cmp je scas cmp jne push ljmp cmpsl (bad) mov shrl js mov mov jge (bad) nop lcall or inc aaa xor push inc lea lea sub into movzbl jmp in (bad) xlat inc iret test movzbl ds cmc movl jmp mov dec xor inc pop cld mov push adc push push xor cmpsb jne push sub push gs push fs and mov ja xor ds fdivs ret jne aam pcmpgtd roll jo sbb jmp ret pushl mov mov test jne mov add lret cmp je cmp movd loopne test dec nop add sbb jl shr (bad) sbb jmp mov sub je xor pmaxub aaa idiv and cwtl shr add cmp lea cmpsb mov xchg jb cmpsl push nopl sbb jne adc add mov add or pop imul or pop stc jmp or push or adc insl pop pop into sbb cltd insl jmp addr16 ja xchg jg jo adc and rcll mov fild pop dec mov cmp jne dec (bad) enter js test pop pusha cmp mov mov jl xchg cmp lahf cmpsb xor scas sarl pop scas add or push mov mov ja add mov test mov in bound jmp mov xor ret aad add jg mov sqrtps cld fild cmp je cmp je and call mov je and mov mov je mov test mov rorb jne test fdivrs hlt rorl push jns cmp jne sti jg in dec or pop lahf mov mov call repnz add mov push adc push jecxz aas stos outsl js mov cmp jne sub lcall or je xor mov push aaa xor rorl mov rorb repnz call clc and xchg cmp (bad) mov clc add jne test je pop or cmp mov bound mov sub or shrb loopne add es pop xchg xor lea mov lock dec cmp jne dec xchg or leave xchg add (bad) or mov mov jmp cmp je jb sub fs scas cmp jne aaa jb lret out xor iret or jne movntq and dec push cli popa loopne push xor js add ljmp je out nop push into inc icebp pusha sbb inc cmpsl stos xchg xchg or je mov outsl daa adc int3 jnp jmp popf inc or aad pusha mov mov dec inc cs jb dec cld fwait mov jne xor movzbl js add test lahf cmpb add cvtps2pd push je loope test mov imul shll sbb scas fsubrl inc mov jg adc and aas adc ja jb in je jg pop loopne divl mov dec cmp sub and sub adc or dec loopne add out fsubl jo mov je inc movb and adc sub mov add or mov add mov and inc lahf fsubr push and sub push lcall dec mov xor rorl xchg cltd outsb push push lods mov pop sahf lea jp lret out (bad) out jp nop mov cltd bound mov or (bad) (bad) mov inc mov adc push adc addr16 jbe hlt adc loopne dec jo dec jo movsb sbb (bad) jmp rol sub aaa mov js (bad) jb dec xor cmpb or dec nop into cmc xchg pop add jmp cmp or leave or sub adc int push sub daa clc push and sbb in adc adc mov je xor push (bad) aas fldpi adc push cmp je test je mov cmp jl inc jl add xor jmp shrb mov mov outsb dec cwtl dec inc bound mov add testl jmp inc xor jmp xor es adc test mov push test push mov adc mov nop mov cmpb cmp loop jne add call cld movzbl inc lds and paddusw xlat and fsubr lret test mov fisttp xlat lcall movzbl cmp jne lea loopne mov add sub mov ljmp add leave je lea jmp scas (bad) mov add pusha call jne sub mov cmp arpl aaa rorb lahf mov add mov aam (bad) mov addr16 je movmskps (bad) test mov mov mov cwtl js pop fsubr aam jae or test sub shlb pop je adc cmp push mov call int3 cmp jne sbb sub xchg leave jmp lea xor into dec add jmp cmp xchg dec adc jmp pusha and jmp push xchg pop rol shll icebp xor test je roll mov cmp jle xchg mov js push subl (bad) fist aas mov adc mov lea mov mov shrl call mov outsl mov xor enter decl dec ja fldl aam stos dec mov mov xlat aam fbld inc and jne cmpl je std ljmp shlb je cmp je cmp je mov mov jbe mov bound pop test sar cmp addl cwtl adc dec jecxz aas sub jns inc and mov mov mov push push dec adc mov inc (bad) and push cmp cld std add ljmp add mov add jbe mov js inc and cmpsb jmp stc cmp cmc (bad) insb fyl2xp1 mov push in cmp test sbb add cmp aad cmpsb loope mov fsubr iret or rolb test addr16 ret mov test sti sbb loope mov pop test jne ja xor cmp stos cld sbb sbb and cs sbb push add mov negl je and lea sbb add mov mov daa insb jmp in push or hlt jns stos mov pop je pop movzbl out leave mov in mov cmp mov sbb jbe xchg call rorl js out jo fild repnz bound popa fldenv cwtl jle push jne ret daa pop test add ret rorb push pop dec ficoml and and fs je,pt sbb scas in mov pop jno mov jne jne sub fstpt mov jne jb jo fstl outsb and pushf jo ror fdivrl popf dec push mov adc sbb jmp jo leave push or fwait inc iret jle insl sub dec or popa sub jle insl xlat xchg outsb aaa sarl add ss aam jl cmp nop add mov notl call mov add inc dec inc ret cmove mov add mulb incl je test mov repnz ret jg add imul adc sbbl incl mov repnz faddp push data16 jmp and jg pop push cmp cli call mov shrl dec and jmp jo nop aaa ret movsb push add mov xor ss or testb push adc xchg or add sub xchg ljmp cwtl mov mull loop add test bound clc mov mov movb dec sub out mov add je or test ljmp or aas cltd test mov (bad) dec xor outsl mov or cmp je sbb std stos adc das iret test xchg pop sbb push lock je ret or dec add call data16 push inc jo ja xchg das jnp,pt fidivl loope push aam fsubr test lret sub push sbb xchg loopne or push adc sub jne adc jle inc or pop (bad) xor loop pop dec push pusha sbb shl aad mov mov mov sahf dec mov je aam adc rolb sbb pop hlt or icebp daa xor aad cmpl mov mov dec daa pop mov arpl cmpsb je or fsubrl jbe orb jne mov mov mov (bad) std or movb jbe stos pop push adcb sbb push fdivs sbb or add cmp pop dec sub cmp call push jmp cmpw jne loopne flds dec add and mov repnz push rcl sbb and pop xor test mov add push sub push scas fiaddl js push sbb out fcmove mov mov inc xlat push add addr16 xlat pop cmp push mov ss inc pop jg and test jne test call and cmp addb cmp inc cmp das add in dec mov mov jnp outsl mov inc test std inc and btc ffreep test mov mov sub cmp ja loope rclb (bad) decl dec jmp mov mov sub cmp ja mov pusha idiv or stc add xchg sub cmp lea mov mov mov add fist jo or jne mov loopne mov cmpsb movl add mov mov loop mov es cmp cld add incl lods jne cmp je shl lea lea mov xor mov aas sub call cmp jne mov pop lea xor mov dec push imulb push push add xchg movb test jmp daa outsb negb push (bad) out adc fsubr insb cmp inc stos inc rorb and add inc scas dec scas inc xor lock testb inc cmpb mov inc jae or and jo out jne dec cmpsb add jo sub mov (bad) add xchg por jo ret add fisttpl jo mov or adc jmp rcr (bad) jo xchg add out push enter jo mov cmp xchg push and add jmp lods out add loope sbb in adc dec push ljmp test mov test push pop mov lret adc fnstsw es mov mov mov sbb test and das je dec mov mov rorl ljmp sbb pusha adc jmp leave add mov xor inc add stos or pop icebp push mov cmpl jne cmpl je test ljmp je adc or cmp inc jle or je,pt mov ds test movb fcmovnb xor mov add je add aad or cmp mov add cmp test jo jg jne in push xchg pop dec jo gs ja popf or pop jmp jo push pusha outsb mov push add sub jo cmp mov add push sub jne sbb adc cmp inc mov rcll cmp test xchg or test insb and add aas adcl (bad) jmp pop mov cli je leave sub or dec add or sbb sbb enter sbb jg (bad) mov fisubrl dec jge mov test or and sbb jle aad cmp flds mov test add sbb nop and lods sbb pop dec add inc cwtl and icebp mov ljmp mov mov mov outsb adc jno xor push fcmovb and mov pop mov nop jnp sbb cmp test cld mov adc jne mov cwtl push push pushf and and loop mov movsb in and in decl test sar add mov cmpl je mov loopne mov xor jge jne insl ret test mov mov dec inc add andb fbld and mov push mov aas mov int mov js mov data16 push sbb inc data16 in push add shlb mov jne pop out orl (bad) loop leave fisub mov or nop or mov and nop or pop adc mov dec stc pop sbb mov sbb xchg test je mov cmp inc lea ljmpw or push inc rcrb inc rorl add cmpl xchg inc clc lcall mov movzbl sub cmp ja hlt mov clc pushl cmp adc and jmp jne sub (bad) mov repnz (bad) pop adc lret flds and xchg adc lods and enter dec enter js pop test orb mov xchg cmpl mov pop jmp cwtl bound dec xchg lret je add (bad) (bad) jle jp cmp aaa stos movsl xchg mov inc divb call cwtl loope sbb in setns fcomps mov call mov nop add mov fcoml ret add cltd nop add adc sub and pop inc pop xlat into add jo out (bad) cmpsl or mov mov (bad) xor stos into add adcl push ss inc or gs adc add shrb call mov or dec jb stos jae fs push adc pop rorl xchg jmp add and push mov pop paddusb cmp add cmp (bad) mov push sub xorb push dec nopl or push add mov lahf fsubr mov and les pop leave xchg jb sbb or rcrb mov pop mov mov inc ljmp cmp test lods cmp out xchg jbe outsb pop mov or repz roll mov adc je divl iret xchg jmp or xor mov gs lds call leave jmp and sub mov je xchg test add mov xchg mov les mov sbb adc or fstpl xor jmp or jo xor and mov inc dec xchg shr loope mov in mov add cmp jmp adc xchg sbb popa fisubr js cmp dec and mov cwtl xor in (bad) jmp add cmp jbe mov movzbl sub cmp jle (bad) (bad) (bad) incl cmpb jne cmpb jne lea xor jmp movsbl sub shl adc add lds add cmp pop mov (bad) (bad) es decl ja sub outsl add inc jmp mov ret inc jb (bad) mov cmp or inc adc and out jg push pop mov (bad) pushl testb fmull or add add cld rol add jmp test jmp and repnz test mov adc addr16 xor and pop mov mov nop and mov test (bad) decl or fsubr inc and sbb (bad) push mov cmp hlt and dec xchg cmp push mov sub adc mov test and mov jbe sub dec inc or loopne mov add adc mov jecxz add or shl cmp je or cmp test cmp (bad) aaa sbb outsb movl or in sub fcomps inc push sub sbb ja inc nop call test sub or fs ficompl popf cmp sbb sbb icebp pavgw adc icebp out ja push xor sti gs jne mov cmpl jne or jne jne out or add je cmp jne clc adc mov loopne sub pushf xlat (bad) pusha aam rcrl pop mov dec or std iret cmp test out loopne (bad) jb ljmp xchg test or cmp jne sbb dec or xor jecxz (bad) and mov or sbb add movsb dec ja and inc add and cmp movsb xor loopne test push (bad) lahf pushf mov incl pop mov test push cmp mov imul fild and add test sbb push push leave lods and dec jmp mov cmpb jne mov ret aas add rcr adc pop sbb mov aaa mov or dec or jb (bad) mov mov mov ss or cli add pop dec inc xchg or lea add gs inc xor xlat loopne aam stc cmpl pop sub add jmp jns or mov dec outsl mov dec add or cli enter imul call jo decb (bad) cmp je push xchg mov pushl inc jne jl jbe test clc xchg pop cmp call in loopne pop push add pop pop mov loopne push xchg sbb imul or inc pop out out pop int3 stos cmpl or and sbb push sahf and (bad) adc and and test cmp incl setp ja sbb or cmp sbb test jnp mulb std (bad) jg loop add mov jmp adc and inc lock mov loop cmc arpl ret stos push movsl mov inc std push fwait sbb lds movl xor fwait and out ffree mov popa outsl sbb add jge aas pop and ja cmpsb mov arpl call (bad) ja inc and cmpl inc and std push lahf inc inc je and push push xor mov and cmp adc jne fldl aas in inc add sbb and xchg lods inc or fsubr leave lcall fsubrs clc xchg jbe jmp jbe mov dec fdivrp (bad) call es cmp inc orl add push jae inc leave inc sbb dec std pop add mov xchg adc aam mov or adcl dec xor jne idivb hlt add or call pop sbb aam xorl xchg adc jbe inc inc fild cmp je push add jle pop mov and push push daa sbb mov mov sbb clc pop and test jp inc and or (bad) jne jecxz mov inc jno inc outsl sbb orl cwtl fsubp jge mov pop lea mov (bad) mov lea sbb mov and das mov ss inc mov sbb inc inc sarb sbb pushl inc mov adc fcoms push ja call adc xchg jg repnz add and roll fldz dec and jne ficoml popf mov imul sbb xor sbb jg mov add mov inc cmp ds jne mov (bad) fild gs cmpl jne in scas loop push scas xchg jne jmp cmpl jg ret psubq add cmp je add jmp mov cld in icebp xchg loop mov call (bad) xor push sbb mov add sbb jmp bound call loopne add push mov lret pusha xchg into in dec xor sub ljmp (bad) decl adc and push jmp jb mov enter xlat push add adc jp mov cmpsl push icebp mov aas jmp sti jg or fmuls mov bound or mov dec movsl cmpl or iret push pop push test jle cmove jmp inc ret leave icebp (bad) ljmp or imul das mov outsl cmp adc not cmp adc test sub daa rol mov jecxz inc xchg adc clc loope,pn into sbb (bad) mov or clc jmp cmp jne cmp jne jnp inc add or and jne jmp push arpl jmp inc aaa add sub add jmp jae push adc sbb arpl jmp int3 jne loope roll push divl mov inc and pop push xorl lcall dec or cmpb jne gs lea addl test adc mov enter fisttpll cmp jmp or fs add cmp adc push iret insl sub movsb cld ret clc sbb or cmp jne cmp mov fiaddl ret aad and ja add je jmp mov mov dec jnp pushf movsb frstor in adc into adc xchg and jle pop outsb test rcl pop sbb int3 fmul mov sub fisttp inc or cmp je addl hlt outsl xor or mov call jmp cmp adc (bad) adc sti movsl xor mov or adc push add fist cmp cli (bad) daa ja sbb or sub andb jge jne xor rol dec add rcrb and push push ss xchg ret lcall jb jnp,pn mov cmp sbb (bad) xor jb pop dec popa icebp push or mov add pushf aam sbb shrl push add cmp ret cmp es jl fdiv fsubl sub push or repnz test inc ret faddp jmp inc cmp cmp incl cmp ja mov mov jmp das stos or sub push and and mov movsb stos pop sti lds cmp test aad xor or add sti iret (bad) xor cmp loope (bad) call fistpl sbb mov ds mov add push mov push jae add int3 mov ret rcr mov outsl push push daa add int3 add sbb lahf fnstsw cs adc icebp call inc push cmpl movb dec mov add inc mov adc movb push test push nop pop pop test pop lret push movsb and or mov push (bad) fmuls std xor mov int cmpsb insb push insl sub adc jecxz jmp out fbld xchg jne (bad) jmp shll es outsl aas add in sbb mov popa adc je mov (bad) adcb (bad) cmpb and xor fcomps dec or call imul and fwait loopne push nop dec pop aad sbbb fisttpll test pop xor fistpl insl jg pop movq adc pop fstl clc and lds mov sbb psadbw ljmp je mov push rcll das push dec xchg aad mov pop pusha mov lret inc das sar fmull pop sub push data16 pop sbb xor lahf push nop or das sub cmpb mov and add mov fbld test iret leave sahf loopne cwtl ror cmp adc (bad) jb mov lods test and add fnstsw lea jmp bound push lods popa mov sbb sub xor jmp mov pushf push mov loop inc inc je aad add outsb or fmuls test (bad) lcall jne mov mov sub cmp ja mov shl test hlt sbb jne push jne cmp mov push nop or mov aaa shrb jns adc or loope jne push out sbb add ret cmp inc (bad) jmp add call cli call or and push out add cmp xor add sub cwtl and mov pop daa (bad) seto mov out sub decl cmp jne mov jne adcl sub (bad) gs pop call fsubl (bad) aaa jae add mov test rcrb sbb sub push (bad) jmp test cmp je inc lods xorl or adc xor ret cmp lret mov sbb mov sbb aas and xchg ljmp push pop inc fisttp test je mov lret test jecxz icebp (bad) je jmp nop mov push or xor mov test mov jne mov call pop aad inc loope stc sub inc jo pushl mov je cmp je cmp je (bad) mov decl jmp hlt (bad) decl fwait loopne cwtl adcl jbe pop push sbb dec add lea es bound and xor push jae call ljmp fist adc or mov mov mov inc mov jmp inc and and mov or push pop xchg enter xchg push xor xor cmp xor call add das (bad) xlat adc xchg aas movb movb mov mov stos inc jne jmp xchg scas mov adc aad xor enter lfs fwait mov and popa fist je add loopne rolb sarb and mov call add fistpll cmp add add (bad) pop jmp mov mov fildl mov and or mov dec inc add jl mov adc add mov mov add fdivs stos ljmp rorl and sub adc sti add dec rolb clc xor add mov movsl enter jmp lahf cltd mov lahf cmp mov test fmuls pop imul push push sbb je jb je adc popf je fstl lahf pop ret mov xor inc and test je mov psubsb adc jne mov bound add add xchg test adc sbb xchg das movb aam push or add add mov sub sub mov adc and xchg stos pushl mov inc add cmp icebp fsubs fidiv loop add in call sbb dec xor xchg mov add dec and add xor adc add test data16 mov jmp inc pop add add movsb push jb jp pop add mov lock icebp je dec mov je mov loope sub cmp cli sbb jne repnz rcll (bad) cmp xchg (bad) xor push pop pop repz xchg lahf les clc jae jmp xchg inc sti int or add dec jge ss mov add jbe add or mov sbb add sti xor push lock loop sbb ret fwait push inc clc adc add inc hlt mov and push mov nop and icebp sub sbb xchg push pop sub in cmpsl aaa adc (bad) mov push add ret xorb mov les inc add mov dec or je decl cwtl cltd pop pop and mov mov mov push push (bad) decl incl push mov addl ss movl and push rorl test add and jmp add add and inc fwait jle sarl mov or or call push aas adc ret adc movsb jo cmp mov fnsave jmp pop outsl shll mov out jmp js out (bad) jmp mov outsl pop sbb xchg out stc call sbb sbb xor cmpsb nop or mov rorb arpl sbb push les bnd add jg cmp jne mov mov mov sub sub inc cmpsb mov cmp inc stos movsb jmp pop inc or dec loop aas pusha (bad) mov jb push stos or add adc push mov pop pop stc jmp mov sub scas jecxz xchg push sbb mov mov loopne addl (bad) (bad) mov repz seta setb xor cmp jne movzbl cmp mov add xchg sarl iret push mov or jne add fstp cmpb or je imul cs fisttp xchg and mov cmc rorl movl (bad) dec push fwait push or test mov ljmp movl mov test enter movl nop adc add (bad) mulb addb push (bad) jnp or sbb add sub lea and shr shr shl lea stos out mov add (bad) mov cmp mov and movzbl jg push testl or pop xchg out mov or push or xor (bad) mov ss mov inc mov popf (bad) cmp lea jbe iret loop xchg add rol pop cmp mov loopne xchg ret call push mov jl add mov movzbl adc imul incl icebp cmpb jne add dec ret push sub cmp aas mov aas add orl (bad) adc (bad) mov aas mov mov add loopne jg (bad) pop je xor repz mov mov cmp add jne nop movzbl xorl arpl add out fstps add movzbl adc xor popf mov cmp push loope insl scas mov outsl shl add xchg add adc adc test cld lock sbb mov jg mov call pop insl aas mov out mov mov mov jmp add aas scas cmpb xor test subb lea shrb rol mov btc test add sbb jg jg push mov mov movl movsb add add inc cli scas test inc add inc mov inc test test pop add inc mov inc xor lret add mov add loopne inc out jb inc adc push test mov mov (bad) rol inc aam mov movl inc aam adc loopne ds movsl pushf imul dec icebp pop jg test sti mov cli loopne call (bad) (bad) ljmp je or add pop sbb rcl aam mov stc mov or movsb call mov jo sti push lods movb push in sar test push bt pop xchg mov mov cmpb jne fstpl mov movb cmpb jne sbb xor lods mov test jmp movl incb je stc sbb or adc out (bad) hlt add or jmp out add icebp nop xor jmp sarb lea lea aaa inc negb ja nop addl xor pop je jmp sub pop xor adc stos or sbb mov aad push inc mov cmp fdiv ja sbb movl add xor lea scas and adc adc and sbb js dec test je mov adc idivb push into jg xor call mov cmp jae xchg je add xor shl lcall or add bound mov and jg mov and jne daa xor es std add mov test xchg std out fwait jo stos dec mov jmp pop test jne jmp enter outsl aaa (bad) and xor daa xor jmp movsl and cmp test jne xor push sub and inc add fnop std test je loopne inc sbb adc (bad) mov sub add ret in sbb (bad) jmp nop add inc icebp aas push sub mov lahf add add mov jne je sarb movsb sub add mov std xor pop ret mov call jbe cltd sub mov mov adc in push ret push call sub inc and call mov sbb daa adc ret mov out cwtl (bad) fcomps jmp mov pop fwait loop xor jno and jmp les push jo jmp mov daa mov je sub call adc add inc add adc adc sub je add fsubrs fistp sbb add je call sti jmp jne movsl loopne dec add (bad) call nop jo fucomi add mov and sub mov clc dec add mov adc and sbb add or adc fadds rorl incl out mov mov inc push fwait cld sahf cmp subb adc jb push inc std adc pop and push mov call fistp mov call xchg std incl fdivs inc and xor xor xor pop fsubr lahf gs mov not mov mov arpl mov jmp iret outsl popa out lcall or rorb movl mov adc mov (bad) ds mov mov inc lock lcall int3 daa lds sarb (bad) fisubr or cmp or xorl nop das and clc add movsb movsb je and ret inc iret mov push cld ret inc test test test and daa js sbb adc cmp and ljmp divb add add clc add (bad) fucomip mov pop pop addr16 mov out clc fidiv add ret add fidiv sub push fs lds push roll push ret call aas sub mov sub mov fldl add rolb je fxch out inc fstpl add jbe cmp inc or adc aas push popa or aad fstp fstpt pop jg add inc scas popl push or xor jmp cmp int3 mov (bad) out pop inc mov sub cmp ja mov fldl fisttpll adc fldl push adc fsub inc (bad) aad cmp or cwtl cmc add jo push mov adc outsl mov jecxz or addr16 pop jg mov sub sbb js xor (bad) jle (bad) (bad) mov lea nop mov cmp ja mov add cmp jb adc adc repz xchg andl aaa mov out test mov cmpsb mov shl add mov cld sti aas inc mov add inc or adc or mov or sbb and call mov test and je sub and jne addl xor les stos (bad) add jg mov mov mov mov jnp xchg add adc xor pop adc and jo nop add sbb clc call cmpsb inc push aad xchg and or cltd (bad) fisubr adc mov rcll out mov pop cmp sbb dec dec out sbb add jg adc add lea sbb adc mov and and mov dec add incl cmp mov jne jb and stc add jae lea mov rorb repz lea mov js mov or mov mov add out inc inc add add (bad) call idivb pop aam adc mov and ret repnz rorl xchg clc lds push (bad) mov push jbe ret incl call sub cmp sbb sub pop sbb inc inc add test mov inc std ds jno cmp sub push mov std idiv jg push movzbl mov lea cmp lea or je cmp je adc loope push int3 lret add dec and ja push fwait mov mov mov jmp inc movzwl fmuls cmp inc push cmovs mov sub add call mov call (bad) mov out aas ret aam mov outsl movzbl mov or out incl roll enter bound push inc mov jmp mov sub add adc adc jns xor xchg orl cwtl lret inc call mov mov cmp cmp sbb pop rorb ja push add fidivl xchg or jae scas stos add and xor inc je sbb rolb jmp out sahf (bad) xchg dec je cmp xchg jne xchg inc rorb call add scas mov insb punpcklbw dec test adc mov mov and and jae daa jne push into movsb sbb mov dec cmp cwtl adcl insl pusha je je mov ret add push dec push push adcl (bad) ret xor stos ljmp outsl (bad) popf andb cmp jg or jmp test pop xchg das call leave sub shr push add sbb js fnstsw jo sub push xchg mov xor sub punpckldq iret shll enter aad mov call mov xlat or sarb jne dec jbe jo dec lahf jno es movsb das mov add scas push orl call add lret ret je push and cmp rorb pop scas mov xchg mov inc or push push mov pop pop (bad) lods pushfw cmpsl mov iret lahf or leave and and dec mov mov add ret jne (bad) std decl jmp mov cmp je mov mov aas icebp xor stos jo add mov dec xchg pop test add mov jmp xor jmp push (bad) xorb jbe test les lds xchg lock test mov (bad) loope push pop (bad) mov (bad) fbstp mov rorb fisub out jmp cmp mov frstor mov jne movl add data16 or mov ss push dec pop sub mov cld lahf mov call jmp stc jb inc cmp cmp add je ljmp cmpw mov out sbb (bad) add cmpl push inc cmp into sub push jg push adc or adc push cmp mov (bad) (bad) incl movzwl test lea je xor nop mov cmp ja add push or pop ret incl sub icebp jne rcrl out lahf mov cmp call ja fistpll lock dec pop jne mov jne loopne add cmp movzwl add lcall movzwl lea xor imul or sub incl sub out je mov subb (bad) or fs jne (bad) sbb or ret outsl les ja xchg push (bad) ja pusha mov subl popa inc jns or movzwl addl test je xor hlt shll leave xchg jb jb std fs loope aas xor jno add mov out fs addr16 sub sub das adc jmp sahf (bad) jg fnstenv shlb testb je test je sub pop push add fidivl add dec repnz mov les call loopne jbe test imul ret lcall rclb push push and xchg into ss dec xor inc or xor add inc fsubl cmp (bad) pop pop not shr scas scas data16 xchg xchg mov jg dec nop addb push or sub mov cmpsb dec adc (bad) jle or lea je xor pop (bad) mov cmp ljmp push adc sub (bad) jne clc fadds or mov inc jne jmp fdivrl rcll dec add leave jne mov pop aam fstpt mov pop pop sub jg adc push cmp or adc mov pop sbb sub mov in adc xor dec outsl mov rcrl sbb aad aad enter in push cmp jns aaa mov (bad) negl sub subl or std test mov jns neg idiv pop jg jne rolb neg mov insl (bad) mov jne cmp jbe std (bad) decl ljmp jmp cmp jbe xor xor mov mov push in mov sub neg xor es clc (bad) jg mov jne cmp jb xor cmp ja or (bad) jp jmp inc test jne sti xor div mov xor mov out cli into jne (bad) imul and mov mov (bad) (bad) ljmp lock mov shr mov or shl mov mov into or adc shr mov sar (bad) fnstsw mov je,pt or rorl (bad) jb mov inc cmpsb (bad) out push out (bad) jae cmp je mov nop adc ret push in (bad) lea lock enter nop aas xchg rolb jg mov mov jns imull mov adc lds mov das xlat jns (bad) mov test ja push inc and xchg mov jg jne nop repnz jbe mov in mov or shr or mov mov insb or jg add lzcnt xor mov sbb cmp jb inc jo cmp xchg mov stos or mov jne adc mov ret or popa sub jmp xchg das sbb insb jg ret fildll (bad) sbb call jg (bad) or mov mov and mov mov jo shl mov mov fcomip or mov fimull lock scas rcl out fs ja loope or jge (bad) jb sub jae sub sbb outsb mov sub sbb xor mov popf mov shr shr or mov push popl xor sub cwtl pusha test adc addr16 and inc lahf fistpll faddl push lret aas cmp ja repz mov lock mov mov pop cli lock xor jl mov (bad) adc inc scas mov or ret aaa (bad) add gs ljmp iret inc inc xorl stc xchg jae pop or ja mov fimul or gs jg (bad) jb sub cmp jae cmp jne lea xor mov or cmp (bad) dec or xchg and (bad) lock sub bnd xor cmp ja shr rorl fdivs (bad) jmp (bad) and mov into xchg mov test mov mov jne cmp jbe xchg pushf (bad) xor clc cmp ja bsr xor mov add test jge add ret push add lcall lds add out jl cld in in shr and add jne lock div or rcrl fcoms cmp ljmp jg or ficomp cli test mov shl pusha out shr or sub stc mov (bad) in (bad) mov xor mov jb pop xchg cli push push insb ss sbb cmc aas and in sbb push je sub icebp fcomip ret jo sub push popa clc fisttpl (bad) lcall push daa adc cmp cmove add test jns inc push ret fisttpll sbb lcall std mov das add xor lea std inc pusha pusha push fisttp jmp xor pusha add popf outsl bound rorl xor dec (bad) (bad) mov mov and shl add or test js cmp mov ja lds or cmp testb movhps push call out sti jmp (bad) cmp int3 or sarl mov jmp add andl iret cmp std sbb pushl loopne cmp je jbe cmp je inc adc jne mov inc and movq jne shrb (bad) (bad) mov ret mov ret sub call or sub cmp mov mov (bad) loopne aas xlat xchg (bad) push mov mov jb inc aam add cmp jae inc aas mov lea pop cmp je sbbb (bad) stc xorb (bad) je cmp ja sub lock mov jge and mov imul rorb add mov jne (bad) push adc inc or inc pusha roll fwait mov cmp movzbl ja sub or mov pop outsl loop xchg mov mov mov nop loope mov jmp fiaddl scas xlat mov imul (bad) jg or ja mov mov lea movl mov out inc test and mov fistpll cmp (bad) sbb push decl sarb mov mov ja xor in movsl mov ja out loop mov mov mov call aaa mov and ret cld (bad) call (bad) mov jno inc in jmp ror movzbl add xor leave adc or mov add ret in test add out scas inc cld jae cmp sti sub rcll (bad) ljmp or call ja adc inc ret neg jmp inc pusha mov sbb push inc adc and inc lock add into fnstcw fistpll loopne cmpl aas nop add jbe adc push inc inc pop mov add sbb sbb loopne jnp add mov sub popf add repnz jg jg jne test mov je fsubr jg push mov mov jne rep add xchg les inc or fdivr (bad) ss mov mov mov icebp fsubrp int dec mov lcall add (bad) (bad) mov add out sub cmpb xor pushaw and popa mov pop xor sub repnz jae,pt mov sti (bad) ljmp xor stos dec push mov ret lahf mov ret jo (bad) (bad) push sbb mov maxps mov imul xor xor pcmpgtb stc pop ja clc mov or loopne fmuls (bad) jmp fild add add ss je addr16 mov and imul inc in mov (bad) jmp or dec mov lahf cs mov dec dec dec xchg xchg push dec aaa push (bad) xor pushf lret adc add jmp subb adc ja pushf add neg add adc sub xchg pop xor inc ds jnp xchg add in adc push out or ficoml mov call rcr pop inc and and jmp xchg out movb movb daa daa fwait sahf lahf popf xchg aaa daa daa pushf mov xchg xchg xchg xchg movsl cmpsb cmpsl test adc mov jmp mov dec xor sub repz add stos movl (bad) jmp orb test popf add push xchg xlat cmpsb mov sbb add mov outsb xchg mov mov call mov sbb aas mov pop inc and lea sub mov pop or inc and mov dec and cwtl xchg add and cmp or inc add je fldl push or mov xor aad push add por sbb cmp add fimul (bad) ljmp xor ja loope jmp mov lea dec arpl and (bad) fbstp mov lds push and je mov (bad) call loop aad (bad) xor cmpb mov test les ljmp outsl mov mov jo and xchg lar ffreep aas jb and mov ljmp cmp je push cmp jne xor mov fadds push fisttp cmp jne pavgb orb pushl mov dec mov cmpb movzbl sti je test out or cmp jne cmpb (bad) loopne arpl jne cmpb jne adcb ss pop test push lock sbb lock call adc push mov call mov in cmp xchg add in mov je (bad) mov mov lea or mov call scas mov decl test mov loopne cmp cmp xchg decl add test outsl or add cmpb add popa movd jecxz adc xchg call dec mov out call gs lods and mov repz add and sbb push push test loopne mov cmove mov ret imul aas adc das xor mov test jne adc stos aaa mov cmpb icebp jecxz loop test or xchg jb inc add jmp inc decl mov lea mov mov cltd call dec pop mov inc mov jne pop (bad) call jne movzbl add jmp test daa mov repnz fidiv fistl xchg sub sub jae add lea inc mov and and mov repz mov jmp xor mov adc add jne push cmpb jne out insl clc jne mov mov (bad) movl cli inc movl lahf adc add mov movl psrld sub lea cmpsl mov movl cli cmpsb cli dec movl inc add sbb xchg mov lea xchg arpl rorl (bad) or jnp les (bad) fisttpl adc (bad) xor lea cmpsl add inc inc xor mov jmp adc push les icebp xchg (bad) icebp les test push add mov jmp dec mov add divb cmpb jne jne mov pop das xor test out rol std cmp pop (bad) xor call push mov add mov mov jmp jne out popf mov or (bad) clc xchg nop push fucomip or cmpsl push mov sub test pop push and mov jg (bad) inc and jae movl das movzbl lea lea mov cmp jae aaa icebp fbld movzbl jmp mov mov add cmpsb and xor cmp jg add jl aas push shrl adc pop and ja test (bad) (bad) push inc pop mov add pop in inc add jmp mov jmp movswl ret jle lahf adc jmp movzwl nop movsbl add xchg xchg mov adc jbe mov xor cmp mov jmp shl cli and test jno test add call push adc call sub sub or xlat std out addr16 add (bad) decl sbb sahf jmp orb adc mov loopne sti adc nop sbb inc arpl pop jl (bad) cmp je cmpb pop mov mov sbb repz out (bad) out fist add and jne jo clc adc (bad) (bad) mov sbb inc arpl add mov jne cmpb andb add mov mov sub out out cmp mov cmp aas jecxz push and repz lcall add (bad) cmp jge roll jl xor cli sub loopne (bad) je add pop adc inc add xchg repz movswl add jmp (bad) (bad) cmp jle incb test cli adc cmp push push mov sarb test pop jle xor mov inc mov jecxz out mov mov rol dec jae repz bound andl and std xor and out sbb xor inc jb mov pop cmp in and inc jl stos mov fs adc bound xchg or sbb pushf inc dec inc pop add orl xor es cmp jne push (bad) jp sub push sbb je sbb lea fdivr fwait out and xor movswl lea jmp aas sbb iret cmp jle out (bad) aas cld lea sub clc mov mov mov mov jo out pop test inc decl dec push mov add (bad) sub fldl xrelease in jmp nop jl xor (bad) xchg mov cli push je cmp jne add (bad) clc mov sar xor sub jmp inc push sub nop aas stos loop dec shl neg or outsb movzbl pop das jbe push add dec lock add or jne jmp ja cmp repz or sbb xor stos or add insl sub sub and xor fistp outsl stos cltd idiv mov jmp outsl sub (bad) xor mov div mov jmp pop ja scas stc das mov or scas or fcomi mov sbb fst add call push xor cmp sete addr16 gs pusha setge lahf sqrtps leave add psllq xor cmp jne out popa movzbl wbinvd mov sub mov add sub inc cmp sbb movsl outsb pusha mov inc je mov push lahf mov punpcklbw cld idiv mov inc je movb mov add inc rcrb leave cmp rcpps push adc (bad) mov cli call stos pop sub lea lea loope ljmp clc nop inc and cmpb pusha ret (bad) pushl fldl fldl and cld arpl sbb inc fldl xorb lret movb mov xor mov mov inc pusha jne cmc sub loopne fwait test jg inc pusha add (bad) pop fldl mov mov mov jo mov adc lds shr xchg add add inc pop lahf enter faddl pop dec sbb repz cli cmp call cmpb cs call cmpb enter push mov mov js dec push jl add jmp or nopl js sarb add fdivs dec mov sahf add cmpb xor jne sub cmp je movb rclb or inc movl fwait inc mov jne mov ja add ss popf xor lahf movsl mov rolb es sub add push std orl jno xor rcrl fisubrl (bad) adc mov jmp cmpb jmp or push dec out push lahf jle mov sbb mov xor mov in aam fildl rep fisubl movl mov sub mov xor add or test xchg fwait add aam fiadd add sub cmpb add jne or mov dec inc jo jo mov sbb test lret es out aam jno cld or jge sti pop incb mov mov call add add popa inc icebp xchg mov dec test aas cmp mov add xchg mov jg cmpl aad jg sbb sbb repnz jne add mov inc inc call add dec or add jge pop call pop add inc scas push imul sub mov test je mov mov adc je push daa or sbb xchg and or dec inc cmc incl roll cmp jne inc or pop xor std lcall push push pusha mov xor shr sub cmp sub shl leave mov mov les ret call pusha or decl in fstl inc or jnp sub jg jae dec nop lock adc jl cltd cmp or push mov sbb js ja add loopne adc xor inc insb je cmp push mov fisttp pop (bad) xor lock in jbe (bad) lcall add add lods sub ficomp push add and testl mov fstpt mov je xor jmp inc lds int3 lar jns test cmpb and mov mov jne std dec stos jne test setno jmp cli test je cmp je movzbl jae idiv lcall movsb mov mov test mov je movzwl mov jmp lahf clc add mov test sti andl dec dec jne or jp dec or inc call push lea (bad) fucomip mov mov mov mov lea ljmp into add shr or inc out arpl movsl jne icebp jg (bad) testb jne mov and leave and je cmpb out push jl or sub in decl cmpb jne mov ret (bad) scas sbb inc dec add xor ret andb sbb sub faddp ja adc dec and inc jg testb aas add add jg jne mov fdivrp xchg (bad) int3 push cmpb je or call loope jl mov ret mov xchg sub xor inc scas clc and sbb mov jne ja pxor mov push pop cmpb jg mov and call dec sbb int3 or rol sub call inc dec or push and mov out out gs cmovo inc and pop cmovne mov test xor sbb add xchg pop add sbb gs pop inc dec into xchg aas andps sbb adc and add add stos sbb insl push adc dec dec ja jmp insb jne (bad) lahf mov test push pop inc cmp xchg jg decl cmp je mov add (bad) std pop jne mov adc jne jae add cs inc or mov out mov or or fwait loopne inc and and mov push inc in add les push popf bound decl enter lea push lea std lea lea jl inc decl or mov sub movsl jmp test jmp test jne mov icebp ss cmc mov scas hlt push add test int3 xor dec dec (bad) xor xchg (bad) cli push je ret xchg or call adc cmp add hlt mov mov leave ret cmp jo jnp sub or lea decb iret jnp (bad) mov mov subl js fldt jne xor call loop mov rolb call fbld mov mov lea mov test and popf call xchg lea sub xchg addr16 mov lahf xchg or jne mov neg into (bad) mov adc or cmp sub ja xor out mov mov outsl sahf and lea out aas fsincos std mov mov mov mul fistp inc or or leave jne call sti lahf cwtl psubsb jl add call mov inc mov call mov ret sbb add or call mov or lahf push push or orl and cmp or movsl sbb stc pusha mov insb add xchg push and push test push dec push sub loop mov and ss call add ret nop sub addr16 lea sbb incl loopne add fmuls cmc (bad) (bad) jmp or jmp scas fwait hlt incb jp or dec cld jmp in mov je fidiv mov les pop pop sub nop add pop cmpl push or sbb push es or add and mov adc pop or cmp jl jmp fisttp mov jmp mov je mov sbb mov lea cmp mov jle lea lea push cld (bad) jl inc lea mov jge lea push lods dec jbe mov dec std and sbb push inc push ja mov (bad) jmp push out cltd push add fild das lahf (bad) lock sarl mov loop (bad) fild sub cmp je out mov dec les outsl imul add adc sti sub hlt outsl ljmp add test jecxz mov cs scas lahf mov shlb jne sbb jmp adc jb add pop add jge mov cltd push adc dec add inc push das adc dec inc sbb call ja xadd cwtl enter push addl call cmp mov add add jmp les or rcrb mov ret jp add imul mov lea cwtl mov cmpb js xchg je loope clc jmp sti (bad) lea or mov or cli push jne jmp push cmp rorl dec jne xor mov dec push nop sbb cli push jne lea movzbl xor add and call pushf and lea cltd inc hlt add cmpb mov push xor pop add scas loop add sbb out push (bad) call sub cmp je cmp jne mov mov test jne mov pop dec mov sbb and jbe cmp jne mov std mov xor jg inc add cmp je aaa std mov xor push xor sub adc movzwl loopne incl shr cmp movzbl je mov mov call ja int3 xor fimull test add sbb inc and or sbb cmp ficoml cmpb mov call aad cmp or dec shr lret cmpsb aaa hlt adc mov push xchg fstl add in or bound or (bad) mov push adc xor dec sbb push mov orl imul mov jg jmp mov dec push int3 push (bad) call push mov movzwl mov subw loop pop cmp push lds cmc pop cmp je orb aas sub sbb pop and cld (bad) incl es cli decl adc inc mov hlt cli daa ss lea and sub sub (bad) je cmc pop incl add pop add sbb fsubl push je ss ret stos adc das (bad) pop repnz and shl or xchg inc adc and mov xchg dec mov mov mov push jg mov movzwl shr mov (bad) popa xchg sub mov insl mov incl (bad) fisub inc adc arpl loopne sub or je adc je jbe mov outsb mov lods sbb fstpl cmp xor cmpsb (bad) loopne fcoml push fmuls dec ret add mov cwtl out jne push or testb mov je mov lea mov mov mov aas jne das cmpl jle sub push rol pop out dec sub mov xchg je pop dec xor pop sbb adc sub sbb (bad) adc je push gs call cmp pop mov or js bound les jmp aaa mov lods push xor sbb cltd ret and sbb pop jns rcl adc orl dec adc dec inc shlb add mov or shrl sub push xor sub cmp jb iret sub sbb shr xor imul jg int loopne aam lock sbb movsb jmp test insb mov clc sub mov add sub andl nopl shr in mov loopne test push js push pushl pop lock lds (bad) mov inc sub sub bound in sub popa sub pop xor out sbb jb xor mov jae mov jb push xchg adc pop dec pop pop mov (bad) jo (bad) call and sbb pusha and cmp (bad) es ss cmpsb or call fs mov xor push inc ret cwtl sbb sbb push into xchg xchg std fistpll lea sub add call pop add in call loopne loopne dec lcall punpckhwd out sub movzbl outsb clc (bad) in sbb add jge test shrl jg and test ljmp inc adc mulb add mov pop insb and std mov (bad) jae lea shr mov mov push jb jmp aas fldl shr mov jae pop mov cmp jb pop les jmp jne shr je,pn (bad) aaa inc shrb (bad) out cwtl inc lret adc sub add decl mov cmp jne movl incb add movl cmp ja movzbl adc call mov test jne test xor cmc mov mov mov jmp pop movb cltd outsb enter call adc cmpsl add and mov jg clc mov stc decb (bad) add call add cmp test aad sub jg mov jmp adc mov jmp dec add cmp ja cwtl rcrl ljmp cmp les je and je cmpsb sub out mov lea sub pushl inc add loop push mov lea movzbl je js dec (bad) xor cmc adc mov cmpsl lahf test and xchg call shl (bad) sub mov mov and adc and xchg or cmpsb mov jge mov jge sub test imul mov jmp mov gs sub sbb mov and adc sbb les insl add dec je sti mov sub dec je or mov push xchg sbb aas xor out psraw inc inc movsl dec outsl sub std sbb cmpsl call jne jno ljmp cmp jl sub js jne and add jo dec add data16 dec pop inc std (bad) mov mov cmovne mov jg lock dec cmp je xor dec add mov push cmp test add mov inc fistp mov lea mov pop add inc pop xor fwait or xor std sbb sti jb sti sub test mov jmp mov sub aas inc int add mov (bad) fsubl (bad) and pop push add xor mov sarb sub jmp push xchg imul loopne lods iret mov mov mov mov call loope ja ljmp (bad) outsl (bad) cmp pop and xor and ja test lds or and ja sub pop mov add out mov subl sub xchg je or pop mov push pop xor cmp ds and xchg call clc out jbe mov jmp sub lods std decl pop in fwait mov and sub rcll xor (bad) and aam jmp xchg mov jmp adc idiv incl mov jne mov add jmp jp xor xor cmp pushl xchg fimull jo mov add cmp test xlat push inc cli push xor hlt call xor inc cmp fwait je sbb and pushl out cmovb inc (bad) faddl inc call add mov test and das jmp jmp pop add sub fnsave and jae aam popf and pop sub (bad) rolb jg pop adc jne xor and test subl les jmp scas mov mov std and push add testl icebp add daa test clc dec inc adc mov arpl sti jmp je nop orl mov jmp jbe jmp xor cli daa dec lock (bad) jmp lock mov shl and inc adc add fcoml lea je sar mov dec mov stos mov lea push push je pop sub and cmpsb and jmp inc daa jae jg mov sbb jg mov and adc icebp pop push push int mov test negl shrb add (bad) jg and mov add pop jmp nop jb xor pusha orl pop add push pop pop adc fcoms or pop inc pusha cmp pop or les add push mov add ret xor sub sub push movq outsl mov loopne add jb push aad xchg call cld add mov mov xor pop jmp rorl inc lods (bad) xchg sub add mov or loopne adc push test add or (bad) outsb add aaa test js jmp lret sub (bad) mov out inc jb lret (bad) out jnp fnsave das movl and pop fadds int3 add dec aas add js or aaa pop xchg jo mov add xlat xor jnp flds (bad) fucomp addl xchg cmp jne jmp sbb nop cmp je mov mov test jne mov or dec mov cmp je lea mov (bad) (bad) (bad) mov adc mov jne cmp jne mov mov jmp add mov mov xchg mov mov rol xchg in adc fucomip mull add fildl dec adc std clc frstor sbb mov jae lods adcb (bad) aas cmp push xchg das cwtl inc das push adc pop sbb jmp ret aas sbb mov push call insb sbb lcall in je cmp jb jmp sti pop mov adc in jne mov rcl jbe sar inc adc fisubl mov mov and (bad) cmp adc jmp or cmp jb lea popf xorl sub aaa sbb dec (bad) mov xchg rcrl inc add pusha js lds (bad) mov mov rorb adc xlat mov push sbb sub xchg push sub call and mov rcrb lea out dec push jne je call scas in popf sahf shl hlt bound and bound pusha xor xor call cmp (bad) fist add and sbb fisttpl icebp loope jne mov stos mov cmp jne add cmpl loope mov adc xchg (bad) call cmp adc dec (bad) mov daa adc addr16 mov fild cli inc mov test je mov mov ret je mov cmp jb icebp lea iret (bad) cli clc or les xchg out js enter icebp sub xor sbb mov mov mull imul mov add add mov inc xor dec out adc cmpsb stos stos ljmp xchg test push add das push xor cmp cmp mov inc je push pop cld add add je adc inc fbld inc mov sub imul cmova lea sarl jge and inc push ja cs mov ljmp faddl jo mov and mov dec jmp fldl add das sbb push das or lea neg and mov jo inc cmpsl loop sub in (bad) enter das mov xor int3 test (bad) mov ja jmp sub sbb aas lahf jl cli pop add pushf or dec add lcall mov loope cmp je pop ret mov fisttp mov (bad) push push mov sub mov addl aad add push or std mov ljmpw jg je mov mov jmp pop rcrl test jne mov rcll sub or insl jle inc aaa inc dec add ret add mov mov mov jle mov xor and add mov rol decl adc (bad) (bad) cmp lea mov mov mov mov jne add jmp push jbe jne xor xchg xor inc pop mov out mov xchg mov add fwait call or nopl dec popa lods stc roll add pop pusha xor xlat out cwtl inc ret outsb out mov push outsl pop iret jo lock orl rorb cmp mov js cmp xor roll inc dec sbb pop inc sbb mov mov cs je cmp popf (bad) cltd sub pop sub das test enter adc stos xor nop pushl (bad) (bad) out mov add and jmp shl mov add shl sahf stos stos decl pop add test cmpl sub enter nop outsl mov fist std arpl and dec or lock cld jg cld cmp jne cmpb jne bound clc pushl into and mov fbstp mov lds lods (bad) or adc cmpb je lock dec imul call movl aas add frstor mov rorl and sbb jle or inc pop mov push mov (bad) mov jl and jne fs jne notb in push loopne mov xchg test call inc mov mov (bad) mov jne sub out jmp pop into or push and outsl or add jno fdivs (bad) les xchg aaa add add sub sar xlat jne je mov xor push pop mov mov add jo,pn jns sbb pop dec popa data16 mov mov sbb out cmp jne mov repz xor ret cld adc add mov jne mov cmp xor sub xlat aam cmpsl add rorb or bound add sub dec xor mov or mov or call add mov out mov jg rolb mov mov addl stos push xor ja icebp jg mov test je xchg xor je cmc or adc out (bad) fcomi aas cmp add mov add sub pushl andl cmp loop rol add jge or cwtl push dec movl pop pop pop and dec push add jb cmp (bad) fisubr push movl add cmp test add cmc outsb sbb test and cmp mov sbb cmpsb mov sti push xor jne pop and mov test je frstor je nop push cmp stos cmp orb out mov testb jne test fiaddl cmp dec cmpsb into inc xlat jl sub in cmp xchg mov je (bad) ja push movzbl cmp call jne enter (bad) or add cmp rcl cmp aam mov inc or imul outsb add add xor ja sbb mov imul cmc aad es jmp adc add add loop fadds mov loope sbb out clc or dec and add jg jo mov scas movsbl test cmpb jne adc mov cmpsl sbb aaa cmpl and adc mov sti mov mov addl mov pushl mov cmpsb lea fwait ret fistpll inc jp jnp add test dec jne cmp mov je adc fistp add xor xor and mov jns mov call rolb mulb fmuls adc and or aam repnz inc clc (bad) pushl sub (bad) in mov xor sbb mov jmp movsl outsl sbb sbb mov push cmpsb je mov nop dec cmp (bad) push add stos rol mov sbb and and jg pop das fidivl lock sub sub push mov cmp test pop xor cwtl inc mov addr16 mov and inc (bad) jnp cwtl aam flds add fwait xor mov mov int ds jbe dec mov test pop jmp add movl sub call outsl loop sbb mov mov loope aam mov roll lea je mov and jmp pop adc cmpb je cmp cmp test and (bad) pusha pop or rorb push out mov je mov mov mov mov mov mov or lea enter adc add ret jmp out (bad) lea mov xchg or add mov lea mov mov jecxz push or or mov mov clc call xchg sbb jmp leave add xchg aas jo test xchg cltd cltd ficom add cmpsl xor xor loope dec or imul or push add sti push xor pop jmp add pop adc cmp andl push nop mov pop push mov insl pop (bad) mov push mov cmp je cmp mov jbe call mov movsb out movl lock and xlat movsbl ret call add cmc jne mov push sub repz decl mov pop movsbl lock cmp je mov clc or xchg aaa pop push and call outsb loopne sbb and divb inc and xor mov out (bad) jge sbb lcall sar and push fcoms mov mov jmp nop ja or adc (bad) stc jnp fnstsw mov push adc (bad) pop cmc adc scas call push lock add adc ljmp or repnz jb ja cmp ja int outsl cli out loopne add das lea cmp jbe cld lea call outsb push hlt adc call lea jp fisubr cmp jae popa jae sub add lods jb scas push sbb negl or jbe (bad) pushl push lcall cmp jae loope outsl add lea call test dec movzbl stos sbb lods pop jne in dec push jg add jmp mov adc adc in loopne int3 and test dec mov sub cmp xlat add fnop pop add sbb call xor insl js push lock adc jmp adc fwait and cmp and cmpsl ss test or jno shr out jnp (bad) xchg and push sbb ss test call or adc add rorb sbb nop lahf in adc xor push cmp add mov jne jmp mov lea dec adc mov mov cmpsl add je mov jns mov lea inc les mov push mov lock stos mov cltd pop cmp push (bad) jb fldl call xor inc test decb push add xor fwait call mov dec push mov sbb xor cmp nop xor mov push jle ret push adc lods nop dec cmc pusha ljmp mov ja out xchg call enter lea add cmovs pusha mov add xor dec inc cmp add adc xor mov aaa cmp sub or loop sbb int3 sar inc xor jns lea mov pop push ss (bad) jl fwait push ret or je mov and pop mov icebp push push ret push adc mov adc call jl fistl cmp mov mov test (bad) mov cmpl mov jl adc js jnp push dec xor xchg mov mov (bad) je test aam mov cmp pop sbb jmp icebp xor out dec inc in nop je and push pop fldl or insb add out inc dec data16 adc ljmp adc cmp jne add cmp scas add shll push fwait insl cmpsl mov ds nop mov jmp ds push pop call call cmp fiadd add mov daa call leave add pop cli js adc icebp out cmpsb test sbb jno lea ret (bad) jge in or call ss xlat or sbb mov jp mov shlb inc pop movzbl jne movzbl lea sti jmp leave mov pop push push inc add push test jne add push lea xor mov sbb call pop fisttp inc sbb ja (bad) jmp leave mov push add scas nop mov jmp xchg add sbb lret xor das mov aad out cmp loope mov add mov ret or ja loope mov mov call and push int3 (bad) lahf icebp push sub ljmp movsl push sub js dec add lea pop adc ret inc lea and (bad) clc fldenv aaa scas inc and mov adc and cmp aaa lea mov dec add outsl leave or enter cmp cmovg movb lods es les mov popf sub cmp dec cwtl sbb lahf cs or nop jmp nop nop mov faddl dec loope addl scas pop fldt sub bound jmp fstsw fstp test je test and outsb cmp xor jmp sbb (bad) jne aad lret add push sbb shlb jne push and aad dec clc stos mov adc fs push mov test push mov es ja mov mov add dec pop ret test je ja xor push add or (bad) in mov xor jmp aas rcll cmc add scas incl add aaa int3 loop iret out mov test jne mov xchg (bad) (bad) cmp jle and mov jne mov mov adc xor and (bad) mov push jbe fwait push sbb and push and and push test outsl mov sub xlat aad and mov fdivs jo jle inc hlt mov call scas mov leave mov cmp jge (bad) jl or popa or sbb sar xchg push addl lea adc mov movzwl push pop add xchg into pop and lea mov iret dec les lock cmc jne subl inc les add mov pop mov inc shr lods ja push jmp aaa mov out sub testb mov or mov popa rcrl aas movsb rcrb sbb push mov push outsl das incb or lret cmp jge sti test js (bad) jl test repz adcb inc mov xor (bad) jne sub and ja pushw fwait sbb mov repz aas pusha cs dec jne test jne jmp mov pop add or imul mov push inc mov sub test jbe loopne mov inc push std jno xlat js nop jl dec mov adc sbbb lret ss xchg and les mov jo sbb loop inc jmp je (bad) (bad) jg inc or or and xor movzbl and or mov pop out decl jne lea sub call mov cmp pop xchg test outsl je cmp inc jmp fcomip lds add and jbe (bad) jmp lahf mov and (bad) jmp js std je movzwl test je mov mov cmpl loopne call (bad) lds roll push lea test call clc mov xor add inc decl ret mov cmp loop aam mov clc sbb or inc cld (bad) call or pop call addb push in lret mov push inc and lea call mov insl and mov loop mov testb popa es in gs jno call jmp movzwl jmp call dec aaa je aad jg test and loopne jle cli lcall xchg sub mov mov cmp jl out test ret mov test jne sub pusha jne cli sbb add inc xchg jle mov and mov cli loopne ja push je mov jle rolb scas imul push push icebp sub cmpps je (bad) (bad) (bad) fsubs jnp add lock mov sar sub lea cmp jne lea mov xor jmp stos arpl cmp sbb je add (bad) (bad) mov mul shr cmp jle test jle js enter jmp je cmp sub cmp jne aas sub outsb cmpl add movl push aad test xor add test test add mov scas and add out pop jg push test shr mov (bad) jmp enter xchg jo mov sbb or test add cmc mov and fsubr sub test je sub lock push in adc movb out sbb add subl les and jg popa nop sub test lret jle popf and in roll dec xchg adc pop rorl imull test lret add ds jle inc xor jmp cmp es out and cs or les jne and mov push rcrl or adc pop inc mov clc cs mov sub (bad) sbb scas pop cld aam outsl and xchg jmp mov xchg lea test mov stos or push aas sub add xchg aas out pusha cwtl (bad) cwtl jge lock sbb or xchg or or test xchg jae sbb or in inc add jmp sub mov inc jl arpl movl mov ret adc mov pop sbb fstpt adc sbb and ret in icebp mov int3 or call or inc mov cmp dec test jne inc call (bad) icebp lock (bad) mul or outsb push call inc sbb and call and and (bad) out and inc loopne inc or clc mov add int3 cmovns rolb loope (bad) mov je lds or and decl jge cmovge add inc jnp pop mov add testb adc decb mov js jp fdivrs mov out jae mov jl mov mov adc mov out add rorb lock jle cwtl push mov sbb lret lea add inc pop rcr into aaa pop loop mov call popa ja xor mov mov mov mov lock je mov cmp je mov push mov subl xchg dec cltd shr add and pop pop lods loopne clc add lea movb das pop rorb (bad) decl jle mov sub sub test mov jle add lahf cmc ljmp mov cmp jne cmp jne mov or jp jle jmp mov mov jle testl lds mov test js cmp xchg setae add aas popa je pop (bad) decl jno movb cmp mov jae jp push jb fs (bad) cmp xor mov (bad) sbb int3 aas mov or push sub test enter add shr add (bad) mov inc mov je hlt movb or pusha (bad) push jle mov into das mov ret mov call pop loopne push in negl xchg lock rcll jmp rclb xor faddl adc cmp ficoml (bad) jmp (bad) pushl pop xlat push push lea mov sub sbb call xor cmp pop imul mov sar sub add je mov mov in sar sub mov jne mov cmp je cli icebp pushl dec or rorl dec fimull rcrl lock clc cmovle and mov mov jo inc sbb mov rorl jmp aaa sahf ret and inc mov mov call add adc scas pop inc adc xor push daa mov pushl pop mov adc mov fcmovb add sbb call test pop ja (bad) add jmp movl inc movsb loope std pushl mov cmp ja xor add sete jge add sbb pop jle add ret sbb call inc loopne call call mov xchg sub call and inc lret sub sub fsubl lock sub rorb sbb and mov je orb and mov cmp sar fstpl lods (bad) std jl mov cmp jg iret add pop inc test mov call fldl shl mov les outsb cmp and or call rorl inc adc xchg leave jg aas in adc fdiv mov sbb (bad) jne pop and xchg int3 inc mov pop push ret mov adc or add negl lcall jmp fistp pop add jmp mov jmp das outsl outsl rorl pop pop das mov add and rorb add sbb xchg jnp or mov push dec sub clc outsl (bad) mov or inc setne movzbl add mov inc pop xorl mov dec lret add add sbb enter inc or psrlq iret enter push int3 cmovge movsl aad (bad) (bad) mov rclb push jae push hlt ja aam mov jecxz xchg ret lea (bad) stos dec push add fimull mov aam test loopne mov or mov xor (bad) aaa or mov cmp movzbl cmovb mov xor shrd shr test cmovne or inc clc mov or jne cmp je rolb iret loopne (bad) fsubrs inc fdivs jle ret add pop inc mov out das ret jne sub ret es cmp fdivrs nop jne mov push (bad) mov pushl mov mov mov mov mov scas clc outsl sbb cli call out mov mov loopne lock sbb jge push or and sbb daa stos or inc cltd jl inc add es add adc aas stos jge sub popf mov je std inc push sbb out add clc add js pop dec aam call mov pop incl adc jle ja aad mov je mov fmuls (bad) mov cwtl xor stos (bad) pop aad gs das mov test jns mov mov test mov mov sbbl xchg pop fmuls in mov sbb pop add pop in add andb dec out (bad) decl cmpsl (bad) sbb cwtl fmuls xorl je ret jmp call test js push mov mov mov sbbb (bad) lods ret or xlat jne outsl pop cmp fdivs jmp int3 adc ret or test ret aaa loopne stos nop add ja sti jne mov cmp dec je and add clc outsl add rcl scas (bad) and fld lahf dec add decl and cmp paddd xor test jns orl ljmp add add and outsl add popa fisttpl in mov and xor cmpsl or jp mov sti clc mov add mov mov mov add stos test lcall inc mov mov cmp ja sbb fstp push out fild subw and xor xchg (bad) js mov pop add pop mulb dec cmpsl ljmp and pushl (bad) mov shl shld shl mov cmovne mov shrd jge incb shr add adc mov out and shrb xor jb shrb and pop inc mov adc jnp mov inc and sbb sbb inc test add das or (bad) jg lahf xor cmp ja mov mov test js sbb mov add dec je bt repnz mov mov xor mov or je adc adc add out mov test jle inc dec je cmp mov pusha clc dec jbe add or jmp nop dec ja,pt inc cmp jmp adc mov mov inc cmc fimul ljmp xchg jo (bad) iret push pushl mov adc inc and lea movb loopne jb inc inc and jle es inc movsb add mov rorb or xchg cmovg xor imull fisubl jg jl add adc sub je mov mov jb jmp sar push cmp jge cli push sub pop pusha mov test cs jne imulb jne std xor jne test pop loopne pop mov in sbb add fidivl push addps testb je xchg fnstenv push lea or jmp fisttp mov sbb test (bad) jo push jbe je xor ljmp pop std pop xchg cmp je sub movsbl cmp std push mov cld cmp je nop shr (bad) (bad) jmp icebp pusha ja lahf ret inc or or out mov push call or mov pop cltd call add mov cld xchg movsl ja ss adc adc sbb pop movb cli xchg aas jnp mov xor or je and mov mov push enter int jmp das loope (bad) decl lods rolb shr mov mov mov lea xor or jne mov mov adc or jmp ss mov call jmp das push (bad) sti je popa cmp or (bad) arpl pop mov sbb ret add je mov mov cmp fstp and lcall add pop lods dec cmp (bad) call mov xor or nop callw or jmp loope out jp movl pop mov in cwtl lods xchg and ja out out jl aas aam lds gs cld xor subl je mov adc and (bad) mov sbb sbb lahf btr ja cmp pop lods and mov lcall push dec mov lahf or lds pop fs jmp pop test js das mov loop test fidivl loope addr16 cltd cmp jge push sbb mov popf mov adc (bad) aas cmp push or test lea je cmp sbb out pushl push and call sbb mov xchg nop sub out je popa out xchg inc and insb add cmp cmpsb pop or mov fild and mov push mov (bad) incl add inc loopne pop ja jbe movzbl in pop inc cmp pop movzbl loope xorl mov jmp test jne jo dec fnsave test adc jmp pop rcrl sbb dec pop xor pop femms enter jge mov fucomip adc dec arpl inc je add ljmp pop test je fldt lea push mov fistpl add scas nop or xlat adc xor pop pop adcb inc aaa cld ja icebp aas dec or test popa pop jne mov fdivr fldl lea stos push test jmp and xor adc test hlt jp adc push mov stos push test jp pand add add cmp jne int add sbb mov inc adc int3 inc add fsubrl int3 mov fisttp test int3 mov jne push dec mov dec cmp xorb test pop scas call push fucomi aas mov mov loop (bad) incl and add je iret inc in and add test lock aas or mov jne sar mov jmp hlt mov add mov cwtl mov xor je dec add pop je push bound add (bad) mov inc and mov mov cmp lea sbb and je mov fstpl (bad) daa mov je cmp sbb inc lds inc xchg iret das das test jne int3 sbb pushf and or ret faddl xchg jg mov stc ss xor test lcall adc std add sbb dec and aaa mov add inc or pop add hlt loope pop mov cmpb std je mov out and dec xchg jecxz outsb roll adc jne sbb or pop mov incb mov inc xor aas in sarb aas sub leave push xor and sub pop push push add mov fistpll fmull call cltd mov test outsl cmc xchg outsl pop (bad) cmp push (bad) pop dec pop cmp add inc mov test je and outsb cwtl decl test jge inc mov (bad) js pop pop (bad) jnp outsl lock push push xor mov (bad) popf push mov add ja add icebp pusha test js jle cmpsb call cmp xchg inc cmpsl cmp aam aad ljmpw data16 dec cld dec roll clc sub cmp nop or add or or das pop test iret inc divl pop add ljmp movsb std dec in jbe and mov xor adc pop cmp ja cs inc jns sbb icebp stos cld xchg mov mov mov adc ljmp (bad) xor mov jmp iret inc xchg sti add xbegin fsubr mov push loopne push sarl pop hlt mov cmpb je insb mov pop and mov imul inc fcomp call sti xchg dec mov jmp stos pusha lret xor dec xchg call lcall (bad) decl mov sub mov jmp and pusha mov loopne rcrb pop mov add aad inc mov mov mov jmp jne lea dec add xchg jo sbb arpl mov jno inc sub out push loopne adc rclb push cmpsb mov loopne (bad) aam and mov push subl mov daa xor imul jg jle movzwl divl pop sbb lods insb jno clc pop mov cli iret dec mov add mov test mov mov rcrb or negl adc lcall (bad) fldl ja out icebp fwait jmp nop mov mov jle lock incl or rolb cmp jl mov call push inc sbb add ret sub loopne lahf push inc jl rolb mov inc pop mov (bad) xor xchg dec (bad) sarl pop push ljmp mov mov lea cmpsl dec adc (bad) incl test mov mov je incl popl add add test je mov add (bad) mulb push test sub arpl dec cld sub shl mov push stc add lock pandn mov mov xor cmp jl aas inc and mov lea lea add fist pusha cltd sarl add sbb add mov jmp in subb xor dec adc xor div xchg jecxz jne mov je or in mov xor adc add lcall lret cmp adc jmp sti jmp inc and adc xor arpl xlat add popf mov sbb (bad) cwtl addl stos out out decl and cmp sahf sbb fisttpl (bad) out cmp dec roll cld cmp jae mov adc mov lea shl sub sub sub shr sub mov jmp mov test jne sub cmp jne mov mov js dec in mov rcrb xlat mov movsl mov scas jbe ret es nop push lcall mov xor sub sbb mov out fisubrl lock sbb add xor and push or xor inc cld mov jae lods dec jle mov add lea mov mov lea cmp (bad) (bad) out shrb in jne mov mov sub sub dec sub mov icebp mov add fisttp je cld test jne sbb fmuls lock push rolb pop in push xor stc lahf popf mov xor mov pop cmp ja pusha adc dec clc jg or mov cmp ja loop jle or ret (bad) jg mov mov pop stos out and idiv and lds adc clc add adc jnp aas mov push cmp inc inc add rorl sub mov sar jmp ljmp aas outsl test mov je decl je bsr fdivrp call mov shl mov xor xor call mov fwait jl and test dec fdivrl mov and or and adc jge cltd scas or push aaa mov sub sbb stos movntq or adc out add inc xor cltd loop inc or in aam inc jg rcr xor push movl and xchg or pop jl pop add mov add dec cld jb mov xchg and pop cmova or add lock add (bad) mov cmpl mov and shrl or mov fistl faddp jle enter adc adc or outsb movzwl jg and mov call insb fistl pop outsb fldz fucomip cmpsb add ljmp mov jo mov add loopne add mov mov ja mov add rclb fstp jbe push xchg cltd dec sbbl and pop cmpl xor adc cmpsb sub xor add ret es pop or and push rclb popf addl adc loop insl clc pusha cs or mov lcall jg stc testl rcrb or mov or jae adc notb add add lcall push jno pusha flds (bad) xor xchg ret test mov jle sbb fisttpll jl enter adc cmp cmp sub sub je and mov rorl pop sub and test loopne aaa inc cmpb sbb std and adc push rcrl inc and jo and (bad) je fcos jge xchg xchg outsl push xor fcoms fadd fadds or inc jmp out lcall dec iret xor test or xor pop lahf sti scas jnp jbe movaps add mov push xor fxch sbb pop sbb movb push fsubrs cmp lds les lea adc sub out mov dec add add fld fsubrs fucomi fstp jbe cmp ja fsubr gs flds leave stos mov fxch push xchg pop outsb ret idiv imul fsubrp fxch mov dec mov sti ja xor xchg or inc and add cmp clc rolb jl cmpsl popa jmp (bad) bnd add jmp add jmp mov add call lods push (bad) xchg add sub sti and sbb shr jo movl mov insb fistpl (bad) mov add adc lret push (bad) or and jne addr16 push push cs cs ljmp iret je and cs cmpsb (bad) mov mov cmp jl arpl adc add shrl pop test movsb sbb pop sahf fmuls fxch lods and push add xrelease and adc add xor mov cmp je xor rolb add (bad) push movb mov or test or mov and or jb sbb xchg scas in loope mov sub sbb lods push mov pop add shr lret and adc adc and hlt loopne idivl jg jmp das sub lea (bad) ja jecxz push add push jl icebp sub cmp jge mov std and je les inc inc fbstp setg into inc lahf ret je sub ficompl add std stos inc cmpsl add mov and clc lret loopne fstps dec (bad) mov test jle adc (bad) mov cmovle sub push xlat and repnz sub xor mov ss test (bad) cld aas inc bound enter ret (bad) mov add mov adc jle call add jge sete add push setle and xor pop test jne jg or and addr16 sub and add push aam rol jl jle xchg into xor adc jl jno add jle push and loopne or mov setg cmp pop pop inc and (bad) out cmp xchg mov pusha sbb adc hlt cmpsb sbb add fucomi inc shll popf int3 std or test and jmp cmp fisttpll adc neg popa xor or and (bad) push mov dec inc mov test jne dec push cmp mov mov stc jl repnz or rcr ret mov out jmp push and xor or sbb test jle jne mov mov bsr xor jmp (bad) jle xchg inc and sub fstpt ret ret or call sbb (bad) sti icebp test in es or add jecxz ja out pushf jnp inc call mov aas in rorb mov or movb push and mov lock test dec or adc testb je loopne in lea jle cmpl jne push push (bad) and imul add out or imul out add add mov lds fdivr or loopne out call mov cmp mov cmc popf cmp ret mov je push (bad) out call sbb add inc adc xchg (bad) and inc xor xchg or jg ret jle,pt mov (bad) sarb and pop icebp loope loope call (bad) je adc clc es jmp in (bad) mov jmp cmpb add mov stos (bad) dec in xor fwait (bad) sub cmp jge mov sub xor add mov out push rorb cmp adc loope shl fdivr sbb jg clc lret pop mov jl ds and jns sbb sbb add inc test pusha xchg mov sahf shlb dec jnp and aaa push or rolb dec push add adc or sbb and add jmp dec outsb adc jno fmuls lds xchg (bad) or pop and jl pop push add leave mov pusha add test mov sbb mov decl test psubb sbb add cli adc seto sbb jg mov decl lea je add loop push arpl mov jae dec call xchg ret mov (bad) test cmp cmp je and xor jmp jmp loopne (bad) (bad) out jmp xchg mov adc repnz xchg xor add cmp push je pop xchg sbb out sarb je jo cmp push xor jmp push xchg adc clc movd loop mov (bad) jl or loop rcr pop and xor and mov mov cli sub add mov jmp into in push adc jle cmp add call ret jno sbb pop pop adc daa mov pop and into mov sbb push inc cmp add sub and cmp fsubs sbb (bad) ja push xchg pop mov sub mov aam js rol inc cltd call jmp fs (bad) mull dec negb stos add mov call fmuls mov sbb rorb (bad) jmp cmp push xor fadds mov clc add test rorl orl inc rclb adc cmp rsm clc (bad) fldl decl push pushl push negl daa xor jmp push adc adc fcoml jmp fstp or repnz cld and cmp fmulp xor mov cmp jbe jl push pop mov incl aam mov movzbl mov fld insl jmp sbb sbb mov push test mov push jbe adc push faddl mov subl (bad) decb jne mov mov test fcmove lcall flds lret fucomi fstp ja sbb xchg mov into hlt (bad) mov call imul add pushl xchg cmc mov jmp call out cmpl subl sbb jne jmp xchg andb sub or sub jmp mov (bad) cmove call jo imul repz cmp xabort and aaa xor mov adc (bad) or push add push popa xor (bad) orl cmp cmp test mov popa ret mov mov mov jmp cmpsb frstor loop shl mov push test add xlat lcall ja inc sub (bad) das ss testb jne pop repz psubsw sbb xor push add rclb push repnz sti pop sarb sub jmp cmp xchg decl push (bad) cmp jo cli jmp sbb xor push rolb test rorl (bad) clc call pop sub ret add sbb mov inc sbb and sbb jecxz adc pop loope mov mov rol pop or add es insl je test rol pop pusha imul xchg mov mov js mov orb loope inc add das push pop jmp insb aam movb lahf jmp ret lods push and push inc xor dec and mov (bad) mov mov mov xor (bad) fcmovnu sarb jp jne dec xchg loope and pop push bound add divl call adc popa mov into dec scas pop dec push or xor cmp jg cmpl mov mov rol xchg inc lods sarl jbe lea xor stc mov fild jmp test xor jmp mov mov mov mov push xor les jo mov sub xchg sbb call add les inc out mov pop adc xor and adc cwtl pushf and xlat das mov rcrl push ljmp mov xor test sub mov js add add (bad) not jge and jmp cltd sub test daa xorl inc pop jne or lea in mov icebp sub je,pt sbb push cmpsl clc sbb fstps sub stc es or xchg rolb inc xor inc and jmp push mov jae or sbb mov imul ret sti in pop fidivrl test outsl sbb jmp fiadd mov cmp ja sti mov add pushf jmp call xchg scas adc in outsb add sub pop adc xlat add lret jle jge pop lea rcl daa aad fisttp mov ja cmp mov clc fiaddl or jo (bad) aas test addr16 call mov inc (bad) (bad) fbstp add add shl movzbl or mov mov decl fildll pop and adc add decl add ret add shrl (bad) push mov leave orl or inc jg repz gs mov jbe scas movsl cmp ja mov cmp not add shr lea push mov inc adc (bad) (bad) jg cmovs lea lea cmp jae mov xor test je jmp dec push mov or add push lock cmp ja pop ret tzcnt add sbb js fbstp lret mov add push lcall dec add adc or hlt jne mov sahf cmp add dec sub inc subl std cmp add lds test add sub arpl xor (bad) in jmp adc pop clc add cmpsb mov sub call sub pop out test or pop dec add (bad) pop dec mov js test (bad) cld fwait mov add ret push push inc push push push sbb sub les movb add push sbb call jg mov mov mov cmpl adc dec adc jmp sbb popa add jmp xchg mov addl (bad) shl lea xorl call dec sbb pop or adc bound pop fwait adc rorb inc clc (bad) call ljmp sar shr add cmp cmp clc add mov std or lcall sub cs iret addr16 add mov adc pop arpl je adc or mov push jg jmp sbb pop and push xor add pop add pop rorl adc pop sbb cltd xlat inc lea ja dec mov ss clc pop adc decl scas fdiv jle add adc mov (bad) out add xor add orb push mov bnd fstpl push or sbb sbb je adc adc mov cmc push es push pusha loop add mov je stos mov inc loop and adc or (bad) adc jo repnz into call mov mov jmp out adc or dec adc push into shrl and sbb mov mov add ret sbb sub dec pop sbb stos pusha shll adc cmp jge mov mov mov mov vlddqu add cmp xor pushf (bad) rclb adc push data16 je mov inc cmp cmp std fild mov add add cmp ja lea sti sbb push cmp lea lea or cmp icebp pop inc inc sub adc jg fst add imul or mov test je xchg cmpl sub xchg mov add mov mov sbb cld xor add adc add adc xor dec inc loope mov xchg lcall sub (bad) mov push ja int test jle into cmp pop cld test jne lea adc mov rorl nop xlat inc mov ljmp sub or xor sbb xchg int das adc add loopne pop add test sti add cmp cli sbb test mov jne (bad) (bad) psrlw je mov test je mov sbb or dec mov add (bad) je sbb inc sbb mov fisttp cmp outsl fucomip cmpsb add xor push arpl cmp mov test lahf pop mov dec insl call mov sahf stos cli cltd mov insl jne pushf arpl loope mov call pop je repnz xor jg mov cmp out and cmpsb push testl jle out jo dec add (bad) aaa push (bad) je movl outsl (bad) mov xor movl cltd jg inc xor jg push or dec jne push mov incb lock jg mov or ret jle inc inc add xchg xor jg imulb (bad) xchg add (bad) jle mov xlat movl add clc jne add and lea mov icebp arpl les pop and sub les fsubrl and shlb (bad) jg (bad) push and fimull cld shr cmp ja mov (bad) mov subl sti inc fcoms bound jmp mov out call push xchg mov js cmp jbe add imul int mov jmp (bad) leave pop push nop or inc clc call mov mov sub jne lea adc lea (bad) (bad) aas fldpi or adc add xor xor rolb bound loope leave inc pop pop and adc jne pop xchg (bad) xchg lea lea lea jmp cmp (bad) fldl call sub and out jb adc dec xor mov fistpll and mov mov jnp lea lea cld out and jbe sub and xor fdiv fisttpll shrb (bad) lea mov jmp adc inc and mov sbb cld xor xor mov sbb inc cld add cli or fild dec cli insb and mov (bad) mov outsl xor ja outsl enter enter loope dec mov jno mov inc add inc push sub sbb and pop outsl add notl loop xchg xchg adc int (bad) mov call sub mov sbb call ret pushf stos push iret (bad) fnstcw (bad) incl sub mov sub mov test je mov push or mov adc ret lock js,pt jge jns or repz js cli pusha mov inc (bad) aam xor je enter popa out cltd push push adc js ljmp rcrl lcall adc mov push cld lea bsr xor sub sub push std clc or mov js ret scas pop sub shr adc mov jae mov shr lea shl or fisttpll aad xor sub and leave (bad) test and dec mov mov shl mov clc fwait and and or cli shr mov fistpll or xchg shl push add (bad) jae and (bad) decl shr or jmp test jne xor xorl and jmp aas ffreep aas or sub inc and fstpl call imul mov shr inc sar daa (bad) iret mov or and je inc rol fstpl cwtl sub div bsf test lock sub icebp shr shr or mov test (bad) (bad) call mov setne movzbl add test mov je lea movsl and xor int outsb mov (bad) pop push jne inc sbb popa lret test lea mov sti jne bsr jge out add out xor shl mov aas xor icebp and popl pop adc or loopne push (bad) jmp movzbl test mov je seto out mov inc pcmpeqw repz mov nop nop push push xor sub loop subl test je leave je movzbl mov movl aaa jg test je cmpl jbe jne xchg xchg push lret in call push mov dec or stos xor gs jp test ret xchg jo test dec add pop sbb inc and test je mov pop jmp call push inc and fdiv mov inc movzbl pop inc data16 jo call jg test and jb inc and lea das ljmp jae sub call jae fwait aaa and call mov sbb jo in (bad) jmp xor add sbb or adc mov and xchg cs mov sbb jg fsubs mov call test mov push scas cmp repnz ja daa adc scas inc nop push push mov mov cmovl fild pusha test cmove xor call shll test adc pop jo je ja imul sub jnp pop inc pop push push gs push pop mov add add add cmp mov jbe add insl xchg ja cs addl mov clc pop int call jg cmp jbe (bad) rcrb outsb mov add sub (bad) xor insb lea ljmp ds or add or xor iret or jae add xchg mov jg push out cli sbb dec cs dec mov call ret jg sarl test mov add shr inc ficoml sbb or imul add (bad) ljmp sar cmpb mov jne jmp fdivrs adc mov sub cmp jb sbb sub insl call push test movsl sub sbb cmp adc and push mov test and add add xchg leave mov scas addr16 cmovo cmp cwtl xchg sbb sbb adc and test add ja popf call mov push lds add push call mov stos cli ret sbb cmp jl xchg or or scas mov fucomip rcll es call jecxz dec push jl mov mov arpl pop adc jmp ss mov xlat vmovhps movl add ja pop push scas mov jbe and lret jne sbb pop or mov mov adcb call ficoml lret incl call mov jl sub cmp test add cmpb je add lds popf sub add insb push aam or test fsubrs inc cmp xchg push mov add sub or int adc push mov or (bad) bnd and cmpl aaa lock divb jmp scas cmpw je fstpt ret daa jae bnd add add and and int3 pop enter xor sarb mov or enter mov pushf cwtl xchg enter nop mov test enter push fs pop xor and and and sub or enter sbb enter or enter add cmpsb (bad) xor sbb pop hlt lock fs inc (bad) int3 fs inc push enter inc push sbb fs mov push popl sbb jo push fs push inc cmp nop mov push sahf add pusha (bad) mov iret add add pop and adc adc dec inc adc add mov movsb test mov call imul push incb jp fistp mov adc lock loopne dec sbb cmp adc add dec inc mov ja sbb loopne jmp pop out daa bound mov sub sub and adc je mov jge jae movsb ja dec mov jae mov nop xlat add arpl je inc mov sub clc fildll push adc addr16 test test ret ret aas movl movl push adc movl mov dec (bad) call lcall icebp pop mov mov mov mov lret (bad) (bad) (bad) call mov mov mov mov mov mov mov mov mov mov xor inc and ljmp loop add mov icebp mov pop pop pop pop outsl and andl add stos test push stc pop add pop and in jo pusha jo inc xor jbe shrl and ds pusha pop cmp pop or mov pop aas mov cmp cmp ja lea je (bad) jbe add mov push mov sar add cld cmp loope movsb sti (bad) incl insl xor ficomp outsl mov lcall enter inc sbb add ret xchg andl or (bad) ljmp rclb sbb cli adc das mov push outsb pop add push push shll call xor cs call daa hlt and bound ja and push outsl dec cmp adc sub ret inc sahf push inc mov sbb mov subb xor sub and std cmp jo jmp jnp,pt out mov and and or cmp sub rorl dec data16 scas and inc push (bad) fucomp push fldl cmp sldt sti mov decb xchg rorb add or add scas jbe movsb inc hlt lock jne enter and add mov call in pop ja push or mov clc pop stos decl add mov test jne mov loope and xor push icebp adc adc jmp mov call js fistl fdivs es std and cld jne xchg je mov (bad) xor jmp lock xchg xchg mov call (bad) loope add mov inc ret (bad) iret fsubp nop mov jg lds mov loope cmpl mov call incb add shr vpperm enter pop cwtl sti dec incl in mov call andb and rclb insl lret je push push add xor iret dec mov push cmp push fwait loopne pop adc jp push push loope in mov sti cmpsb out call (bad) xor call (bad) mov xor mov lea cmp jbe cld inc pushf adc std xchg test jne je incl sbbl push jbe sub sbb cmp jbe cmp mov ja mov mov or pop (bad) xchg cmpsb addr16 aas (bad) jo cmp mov ja xor imul lahf sahf daa jne sub scas movups (bad) test and scas add jg add inc enter inc and jne add sub ret or and pop xor mov ljmp movsl bsf pushl mov dec add mov (bad) sub leave xchg das mov stc add jg iret js call (bad) jne sbb call out leave je mov xor shrl icebp cmp jne sub movl jmp (bad) mov adc ret int jmp sub mov incl mov xor jmp js sahf movsb xchg dec adc jg and push adc mov xor test cmc popa ret add jns and mov les mov mov cmp cmc ret jne sbb je mov mov (bad) jne cmp stos inc popf imul stos jg iret cmp adc jne and sarb add cli add xchg rorb mov xor pop sub mov clc and and iret scas enter mov (bad) jbe pop popa orb push jle in jo mov cmp mov (bad) pushl inc xlat test mov cwtl adc jl add sbb and fcmovb loopne inc je pop mov push adc (bad) je jns add add jmp jg mov or mov (bad) call je cmp ja mov and or aaa repz mull lahf jg adc out pusha pop shr add jg notl and mov cmp ja std and rolb dec cmovne andl ret fbstp lcall or mov pop (bad) mov mov and sbbl lock sti sbb mov and or mov jle xchg mov enter hlt fwait scas mov adc mov shl and add (bad) xchg adc sarb inc cmpl xor ret push cmpsb aas out push push mov push in clc mov call mov je cmp dec adc pushl jmp cmp mov je mov repz sub cmpl jecxz pop cmp inc sub adc inc or inc or xchg jmp nop mov repz loopne into dec inc xchg lret jb jae adc pop test mov or cmp pop inc xchg pavgb jmp je add ret call mov out sbb xor out push mov lea jne jmp (bad) (bad) xor or lret jb lea shr lea cmp je ja lea xor jae js (bad) int3 les cmp jne mov pop scas mov or and mov scas aad push add pop maxps das mov mov mov out mov mov (bad) jb test jne push pop jbe push icebp fistl mov je pop neg shl mov add add fsubr sbb mov mov test push (bad) arpl jne test je jmp jne ss scas cmp jae mov mov mov sub icebp rcll inc pusha ja cld mov cs jg push and call sbb (bad) add mov loopne testb mov mov clc das fsubrs or fisttpl lea lea push cwtl add in std in adc out loopne iret mov inc push cmp cmp mov jne mov jmp push mov (bad) in sbb rorl adc ljmp cld rcr mov push jb (bad) jne mov call xor int and out fmuls jnp mov xor push (bad) push xchg cmp inc clc fwait mov add rep mov xorb mov popa jo fadds push sbb sbb mov outsb (bad) scas lea xorb sub cmp mov jmp cmp je mov rorl (bad) aas lea (bad) mov cld (bad) call je jb lea jmp scas imul sbb xchg cmp ja out inc cmc jnp test mov mov call jo cmp movl dec aas sub lea loope cmpl pop push or pop mov clc stos popa out (bad) (bad) jmp das jne aaa sub ljmp aam sbb and push hlt cmp jne sub xchg cmp mov mov std xchg sarl setne test jne ss ret decb outsb or je inc (bad) and pop rorb inc mov (bad) jg fisttpl mov mov call add seto and cltd ficoml add out sbb cs out fdivs fucomi lea add stos test fldt add xchg and das cmpsb mov rcrl adc jns mov jne pop xchg and xor inc aas sbb cmp loope push aas inc insb pop aad xorl movsb lahf fsub repz daa shr nop in sbb pop adc call pop subl jne js xchg mov fldl jnp xor cwtl outsl sub push cmpl movsb (bad) and cmp add je jb in adcb sbb aam mov or rorb and mov (bad) in pop cmp and add fisttp sub cmpb mov and jg cmp xchg cmpb jne cmp jne mov call (bad) in (bad) inc inc add or add mov aas mov adc jge cmpl out adc (bad) jmp sbb sub daa or add cmc and loope sub je test cmp mov cmc pop or xor enter jbe mov push aas lahf cmpl imul je mov pusha mov ret je roll or mov push lahf mov mov fcoml ljmp stos cltd call (bad) and (bad) out lcall andl mov lea sub (bad) fwait ds movl sbb movl daa movl test jne je mov call lea rol test pop mov cld sub mov and ja cmpsb dec mov sub push aam daa je mov fistp mov movzbl movl push enter and cmp push fs in cmp lds call loopne add das stos cmp leave xor dec int fisttp adc adc dec rorl or fisttpl cmpsb pop xchg (bad) jo mov cmp lea mov fcomps push call sub inc fstps cmp in jmp (bad) (bad) decl add cmp jae mov cmpb je mov mov lea (bad) aad pop call ja shr test sbb add add jo out add pop mov adc loopne mov mov dec push add xchg and cmpsb push int3 decl js push push mov mov (bad) aam sub fdivrs subl stos repz js sarb call (bad) lods or mov pop mov adc cmp int3 inc syscall aad fisttp jae clc add mov adc int inc add mov (bad) testb je test dec sbb inc adc sub inc icebp or dec je es xor sbb add inc dec movl (bad) add call cmp cltd sti popa loopne loop mulb xor push inc rcr je cwtl mov imul adc in xchg movl or iret mov cld hlt stos or call shr or push push test imul add es xchg push lock inc and lea lea jg stc movl inc out add sbb mov out mov shll leave je pop sub (bad) xlat psubsw data16 das pop cmp call cli (bad) pushl mov ja call xlat inc nop jo das mov and cmpl negb call pop addr16 dec and dec inc incl in pushl push fsts dec cmpsl dec pop dec push (bad) mov lea pop out ret shr punpckhwd pop fisubl jbe nop jne jne leave xor daa lock adc push push in inc cmp cwtl xchg add out inc mov inc sbb sti flds jae inc add std insb call mov arpl add (bad) je push pop add nop int3 push or decl adc movl mov test cmpl pcmpgtd movl out add cmp xor shll add sbb (bad) mov sbb mov mov sbb pushf adc call mov xor or ret repz pop add push test (bad) call into jmp icebp jge movl pop or cld (bad) scas sub adc cmpl xchg adc inc rsqrtps ljmp test cwtl outsb jb flds movsb adc mov inc push and aam xchg add mov cmpb stos xor adc add aaa adc xor jl adc or push sbb push push pop call mov sti les inc pusha push sub inc dec cmp std xor xor dec dec and call test adc stos pusha iret fistpll jb stos and test js or pop cmp ljmp fsubp ds je mov je xor (bad) decl add rolb shr jne test out inc add aas cmove mov push pop push push lahf mov sub sub out xlat and js lock call push xor mov sbb fistl and add cmp jle test je or vpsubsb dec xor lds mov mov in or or lahf popf and pop test mov add je add rorl push scas cli jbe push jg push jne adc cmp fbld dec pop mov call rolb loopne mov jo sbb xor or xchg mov rcrb das pusha jmp mov into decb sbb orl call adc add sti fcoms adc (bad) call mov std clc stos call adc or inc sbb add or test pop lea setg dec xor dec cmp push insl pop sub ja insl cmpsl or enter jae mov pop lea lea mov mov mov jmp rolb adc add cmp jne mov loopne test je mov xchg rcr mov inc add shr sbb mov sarb cmp jne cmp and test lea add add cmove cmp lock rorb mov data16 and sbb clc sub sub xchg add sbb call sbb sbb sbb mov lahf cmp test (bad) mov mov mov mov jge sub add rolb push ret sbb push pop sub push or les out push and push mov xchg sub cmp bound rorl inc lea add or cmp add testb add mov sub or mov popa xor adc adc lea int3 je mov ret jg dec sub adc adc add jmp adc int3 inc mov cmp jne inc push add push adc add or popa (bad) loopne iret pop (bad) subb add fild cmp sub sub add mov or mov xor je mov mov int3 cmp dec out outsl sbb adc mov or or das fist aaa lds call arpl jno (bad) jno mov adc jg mov jnp add in xor push call shll ja push ret jne pop outsb add add gs (bad) push sbb and dec mov jmp add je mov mov hlt (bad) outsl and enter xchg and call lods mov sub xchg mov ljmp push push and sbb sub push icebp or inc xor dec mov ret loope ss pusha dec or push mov icebp inc mov add test sbb mov cmp daa aas jmp aas pushf je add std call iret insl je mov cwtl mov mov mov pop out mov cmp xor pop and lahf scas jb out dec inc jo pop es jne loop les sub dec (bad) je int dec sub out (bad) sar inc ret dec add adc pop mov push clc inc (bad) out out fucomip loop pop je stc bound jne testb inc adc xor add scas and or cmc scas cmp xor test jnp add je test mov or ret sbb cmp jbe ret shr stc mov sbb mov subb cld add jmp popa andl insl push cmp pop xchg jne mov push jmp xor adc scas mov adc clc xchg or test mov je adc xor iret (bad) out inc and or cmp out testb je jmp mov aas dec clc jg or add test jle lock push adc xchg nop lock lahf test pushl jno call push and or mov loopne sub jo mov subl and je mov adc sub jo call cltd push push push call loope xchg pop push call jle lcall testb mov jne mov cmc or fist lret adc pop dec mov out pop cwtl push adc add or (bad) push (bad) (bad) call mov aas call mov orl push orl call scas mov je mov test je mov test jg and pushf sti push and or mov mov jge push jmp test insb lret push (bad) call fstps xor test push test (bad) hlt divl jl sbb clc sti incb call daa bound inc ret and dec ljmp dec pop outsl ret nop call andl pusha jg lahf sub call (bad) das clc (bad) ja mov call mov je call subl aas aas std fcomps jmp jg and call mov call scas popf inc or add or (bad) call insb cwtl sub and shrb icebp pop out sub and or mov aaa sbb sub incl stos cmpsl orb pop loope xchg nop xchg aad add lea or push loopne mov sub cmp por mov loop cmp je test jne and or jecxz addl inc xchg insl push call inc loopne loope mov outsl test sbb mov loopne cmp mov or xchg shrb or aam pcmpeqw aaa aam mov add sbb inc xor out fisttpll rolb jo les std adc test cmp push or and adc xchg andl and out mov call dec jp into inc xchg mov and les test and mov mov jp fwait push enter mov call mov mov fwait call (bad) call jmp xchg lds fnsave mov test jne mov mov and clc std ja push mov test je sub cmp ja and pop pop jmp data16 call mov dec scas fucomip shr cmp add and push inc addb dec push (bad) incl test jne and xor or mov pop sbb pop push push test and inc outsb cmc aas and pop or add scas sub ret das push and jo mov test enter daa pop add mov xor jnp scas ds in in (bad) decl enter jne mov and fcoml popa pop das scas dec or sbb stos fs call or adc mov sub andnps push jg push add loop sbb jg add or call (bad) testl decl xor adc pop ret das add insl inc and ja sbb orl lods add jo loope cmp mov das lret icebp jb mov pushfw loopne xor jg call lcall inc add dec ds aam jg (bad) adc in sub xchg out je push mov test je stos call xchg and mov xlat sub scas movl movl mov dec and cmp jl push pushf mov jne pop push add xor out incl add jmp adc inc cld jmp inc stos adc xchg or inc cli movl test ss leave loop pop (bad) je add or or jne js inc or inc insb mov xor cltd cmp add sub mov loopne and sarl pushl pusha mov fcoms dec or dec insb bound jle out movl ret xor inc push test je rorb call inc icebp loopne notb loopne decl sub mov mov das incl cmp cmp push mov mov mov loope and adc adc push pushf xchg clc dec mov aaa lock testb jne mov or cmp fcoms loopne pop cs scas pop sub and or push xchg cmpl call sahf js ljmp xchg inc insb dec daa loop or stc add lds call jb mov xor dec out mov mov lret push and or and mov in pop cmp inc mov hlt test (bad) gs loopne push movsb dec push lret ja,pt daa and adc mov stos and decb inc or xor add scas cmpsl xorb sbb jb xchg add (bad) jne loop pop xor loope jmp mov and mov mov out lahf jle js jmp jmp lahf cmp and call or or add loope pop or cmp jne mov cmpsb mov push and je pop mov divb push pusha or lahf push test sbb or (bad) mov sbb mov and sbb scas pop loopne sbbl push lea cld xchg pop in mov (bad) incl xchg xchg pusha pusha nop (bad) and das inc rcrb pop std xchg imul iret pop test sub inc hlt jmp push out scas adc test js or pusha sub arpl sub fisttpl test xchg xchg cmp loopne xchg je adc push out jne push adc dec js andl dec mov pop shrl xor sbb jb push arpl out loop dec add mov cmp sbbl lahf call arpl dec adc fsubrs xor inc ret cmpsl inc jmp xor outsl jmp pop or pushf push dec iret mov adc or inc mov cmpsb jle imul mov mov xchg roll mov ret jne push lds mov test (bad) aas jb dec mov push into pop inc push or fwait js rorl inc cmp popa pop rorl mov and imul mov test jne or inc and add (bad) push add into inc sbb mov or adc add dec (bad) dec adc pop pop leave jle nop mov iret lret adc movsb (bad) inc add dec (bad) sbbl loope dec icebp sub or or pop jge (bad) adc dec adc push in mov jle test js mov lcall call rorl shrb sarb add incl je movzbl test jne jmp (bad) or js loop test je and push lock test loopne cmp inc incl mov clc add out das jae lahf adc ret xchg daa and pusha inc push add enter mov in fbstp adc xchg mov inc xchg xchg jmp les icebp das dec cltd mov pop daa (bad) lock enter addl jl adc jbe push sbb or sub sub and adc ja leave jb mov push jg jne or iret test lahf adc mov lock mov inc and push pop sbb push add push aad fs and add sbb ss nop fildll push push ja mov scas sub std aas mov (bad) dec mov jne dec jl sub (bad) xor cmp dec test das pop and inc mov adc cs into mov ret push add (bad) xor les incl pop push push mov test je dec ja and add imul sbb idivb test jne aam mov lea cmp jbe (bad) push (bad) jg ljmp (bad) (bad) jl cmp je cmp sti scas addl jg sbb call adc test or mov and jg add xor jmp std jg mov jmp aas lahf jg (bad) mov sbb fsubs dec add ret je mov lds (bad) imul mov mov sub adc push imul sbb xor cmp cmp xor setne lea pop mov mov mov (bad) fist je testb xorl divb addb ja cmp ljmp and add xor les xor outsl inc ret inc movl adc jmp cmpsl cmp iret sub push xchg popf dec add es pop shrl out sub xchg pop xor clc add cmp cmp pop cmpl sbb pop add add adc mov mov imul mov movsb fnstcw pop ret cmp jle mov pushf jecxz and pop inc dec add cmp xchg sbb push mov ljmp mov clc add cli mov add add lcall mov aas dec jg movl mov out iret (bad) adc cmpsb sbb je test test or push mov test sub movsl dec mov and inc in and scas cmp jl pop or lds mov clc mov cmp add dec adc stos (bad) jl or push rolb call hlt and sbb fsubl (bad) ljmp inc xchg xchg or xchg sbb dec jb or js les fs fiaddl push push cmp pusha mov add and (bad) jmp mov push fsubrl out cltd call xchg loopne or pusha and aad inc pop inc loope add dec add inc pandn xchg mov lds idiv fs imul push mov dec and sar aas adc decl add adc dec call xchg push ret rolb jle std add sub add out imul mov pop cmp jmp inc and inc lea push cmp popf stos lcall inc add push and sub js sub inc out add call and popf mov jae lahf pop loopne dec je mov cmp mov mov mov pusha add sbb push sti inc mov fdiv cs (bad) decl mov mov mov sar mov sub mov cltd add mov adc add adc daa push inc jl xlat sbb mov xlat out pop sarb ds jo or adc cmp push mov pushf mov inc mov or pop sub test call pop js jp ja cmp jge xchg jmp inc (bad) adc jb xchg sbb inc fild inc imul sub (bad) aaa add lea mov mov cltd mov jg cwtl sbb xlat or jne jmp adc cmp (bad) lahf loopne xor (bad) jbe dec xor sub outsl jp ja sbb call or jne sub (bad) sbb mov je push sbb aaa test sub and cmp arpl adc roll adc fiaddl add mov (bad) (bad) roll or (bad) aad or ret mov mov add (bad) xor push inc inc aas aaa icebp cmc jo mov adc rcll or fadd sbb sub aaa sbb cwtl inc mov mov inc test mov jne inc cmp sbb dec xor xor jmp (bad) in jo adcl xor loopne call les fstps leave lock jmp add fiaddl dec enter mov fdivrs lahf movsb icebp or ds xor mov lds or mov mov ds cld jl xor das push fdivr addl mov mov mov adc into adc iret mov int xor mov sbb mov xchg (bad) cmc (bad) xor add and add sbb cli ja jae fwait (bad) jge and xorb out cmp jbe push push lcall push rclb push push mov push mov pop je mov xor push adc sub and je cmpl mov rcrl jo xor xor sbb mov jmp scas addr16 jbe mov (bad) xor mov imul mov inc test mov add cmp jnp cwtl sbb je or std push addl xor fwait bound inc popa je,pn add loop or js dec cld ljmp jp sbb je mov add mov jb out mov sbb daa movsl leave mov jge ret lock aas rcrb ret adc pop cmp cs js jle (bad) call negl fcompl pop fs testl fist mov add push adc call adcb mov or adc add or and sbb add xchg pop adc mov mov pop or enter sahf jge or xlat test in call push add add fadds and sub mov push icebp pop mov js mov call imul jb les ret push mov and scas (bad) xor leave dec push sub icebp add jp mov (bad) dec push xchg sub inc aas aam sbb call push mov mov sub inc or inc pusha jne jns sbb sarb cmpsl push call sub ret movl mov aas mulb aam cmp cmp call cmc arpl lds lea push mov mov xor add add scas faddl test adc mov mov cmp jl aas mov jecxz dec call inc xchg and pop mov fwait iret in or sub mov adc (bad) popw dec or or clc aad or pushl adc pop hlt mov ret nop cmp xor popa xlat call push inc (bad) fld1 inc and loope adc cmp je sub mov and or je push call adc shll rclb lahf call jb jbe (bad) je jmp iret xor xor mov cld mov call mov call scas pop notl mov mov test je jmp cld cmp xchg ret jne mov cmp jg mov ljmp icebp push mov mov es ret test scas or inc outsb fsubs div xchg cmp sbb push adc xchg call add mov fisttpl cmp out add call push mov cmc add call out fistpll and xor scas je cmpl lea or (bad) ds ret push lock cmpl jg and or adc xor pop jmp inc test ja sarl xlat (bad) ljmp (bad) mov sub aad sbb scas and jmp (bad) lahf popf je add mov mov ret mov (bad) lea out cmp lcall jae cmp pusha movsl xor lahf sbbb in sub xchg cmp popa aas fisttp and sub jmp (bad) popa fdivrs (bad) (bad) jmp pop push pop rclb (bad) mov or push push pop test mov outsl ret dec mov pop fsubl test xor stc scas mov or push lahf xorl rcll pop jo out cmp arpl mov jne mov mov mov mov inc or sarb sub (bad) rorl sarb shlb or sbb dec jp sti or outsl je jmp nop push enter lds add or add shr in (bad) pop and aam std scas dec clc cmc jne mov mov add lock fcompl sbb (bad) mov cmpsl aas lea test dec stc ret mov scas add cmp sbb mov mov js loope pop sbb gs out xchg add sbb or in mov inc (bad) xor (bad) cmp loopne pop data16 lcall (bad) push xor cltd push mov sbb out mov jne dec xor (bad) lret jne mov leave enter push jg mov outsb push mov call insb out idiv and outsl add mov mov lea lea call rcr out pusha jo ja call and or jmp and and or mov mov sbb call je loopne or inc push and mov loopne pop sbb lret jmp jbe call sub mov add inc dec inc scas subps test je pusha ljmp je jnp inc and in sbb jo lahf (bad) test mov inc and xchg (bad) xchg js (bad) scas fldt mov sbb jno add les mov lahf dec or or (bad) clc cmp andb jmp mov or je cmp lahf dec sbb and icebp scas shll sbb idiv decl out notl jno inc in sub xchg ret jno jns mov and sbb loop sbb add sbb cmovge mov test js sbb call push bound or mov mov jmp cmp inc jge xchg mov imul cld add and or xor xchg add lcall incl je and fildll outsl das cmp ja jbe int3 hlt test pop das nop add mov pop (bad) jnp (bad) push jg xor mov xchg out add rorb clc jmp fist add rolb mov add loopne mov (bad) shr aas pop jne decl test iret mov mov sub rcrl (bad) push push mov mov (bad) ljmp inc mov mov cltd add adc cmp jl jle ret and inc test rolb fistp cmpl lock test js (bad) mov jae sub add mov neg sub add push loope loopne cmovg loopne add pusha cmp inc mov fistl cmp lods ja test pop pusha je mov fsubl xor mov mov add adc xchg jg cltd jp pop mov adc testl sub mov dec jle add mov push in loopne imul inc mov nop mov sub push inc icebp pusha xor fucomip or push (bad) adc lahf je mov mov adc js mov cmp mov test dec add add testb lock adc cli jl (bad) mov (bad) lcall ja cmp mov jbe mov and sbb sub lret call fucomip bound inc and sbb cmp jae mov push add cmp bound imul outsb jmp orb dec aas ja cmp jbe mov scas jne jmp sbb push xchg xchg pop dec add sub (bad) out popl xchg pusha maxps and mov flds mov cmp jb (bad) test lock push dec adc add je hlt (bad) cmp movl (bad) pop mov inc pop add movl loopne push pop sahf cmp addr16 push xchg mov fiaddl fs pop inc push je lods dec lea mov mov call lea mov sub out fiadd push movl mov pop aam mov les jg insb sub mov xor clc in je adc mov (bad) jne and loope gs dec les mov xor adcl sarl adc addps mov sub jmp sbb (bad) testb mov push out lock pop adc jnp (bad) arpl and mov adc add pop jmp out mov ljmp or push stos pop and cmp push aam mov sbb mov orb scas loope add mov pop mov add adc inc popa clc gs pop add push mov je ljmp mov sbb out adc xor incl (bad) cmp (bad) je call test add pop ret push andl inc mov and sub int3 push and fistpl push xchg sbb ss and cmp (bad) cmp sti adc xchg adc inc sbb push mov cwtl push mov push pop mov movsl cmp je call inc rorl inc mov sbbb dec (bad) (bad) (bad) call cmp cmpsb je notb outsb push insl cwtl sbb sbb out push ljmp inc mov push add insl int3 pop sbb xor jge mov call sbb incl aaa setne jmp mov mov add loop fbld test sbb outsb push push je movsl pop sub pop push sub xor jmp mov jne cmp scas jmp ret pop sub cmp sti jge mov push or ret in or add call lds inc roll ljmp setne lods sets lahf cmp mov lcall adc jmp je adc mov shll pop cmp cltd push pop pop es and (bad) orl and inc push jne mov or test js loopne adc and mov cmp pop xlat divl xlat mov das push test jne or inc orl call mov jmp lahf je inc mov mov imul (bad) je lea lea mov jo xor pop mov pop xorl loopne test rorb pop push mov push ljmp pushl call add cmp loopne mov mov pusha divb (bad) jmp lahf push adc lock sub mov cmp jle sbbl test and jmp adc pushf dec clc xor pop adc pop cmp aas ficompl jb std inc in mov bound add pop mov or cmovle inc les sub and leave pop stos add cmp (bad) out add push cmp addr16 jmp sbb and jle inc sbb jge cmp mov push pop movups sbb mov mov xor jge jae jle or dec dec ds add jae add mov (bad) pop pop lea add lcall pop pop pop jmp lcall push pusha (bad) sub xor or stos (bad) jne mov clc inc loop mov je sub cmpsb sub movl mov jmp out dec int3 (bad) and add and cmovno shrl xor mov add jg iret or mov sbb xchg and lds inc inc jo pop pop das sbbb pop jnp adc add pop dec js pop mov sbb jmp lods repz add pop das int imul ja pop (bad) adc jmp and xchg sbb adc pop inc movsl (bad) jg dec push (bad) cmp push fist and or pusha je mov cld sbb jae xor (bad) jl dec add inc xchg les and je cmpl adc jbe lea clc add xchg inc or jo fsubl push icebp mov jno loopne sbb mov rcrl int3 and ret dec jo jno and dec jmp jmp call cmp sahf sbb scas jge adc xchg sti popa aaa xchg call aas call mov or orl call add mov cmpsl mov lea add pop mov push dec adc jle xor inc adc push lea pusha (bad) cmpl outsl test add in je lea dec cmp adc outsl clc cmp jne sbb ret pusha imul pusha icebp (bad) jne mov lods push push mov mov xorl loopne xorl leave push dec lds aas xor cmp pop insb add call ret jno pop jg lea pop cmp mov sti jmp jns and in inc stc (bad) fcomp adc sub sub outsb js movsb mov call push or outsb ret add test sarl lods xchg and (bad) mov dec mov or sbb (bad) fdiv jmp dec rorb test jo lret (bad) andb lock mov sbb arpl clc dec ja cmp cmc loop cli add cmp inc sbb lcall dec inc sbb dec out jo fadds lea stc xchg call push pcmpgtd mov ret sub lret sbb sbb jne mov sub adc add add mov addr16 or add std lds and mov mov lret lret ret sbb cmp cmp jae jo loopne sbb fsubs enter fisttpll xchg loope xchg dec in faddl jmp fwait add adc jbe pop inc adc or and test push sbb out out jecxz sbb inc sbb jmp out xor test leave and pop push (bad) (bad) sub xchg pop dec jmp mov mov inc leave dec push pop xchg add pushf xor repnz add sub loopne push sub add dec dec jg mov jns neg pop fnsave outsl sar aad neg mov jno test cmovl mov fistp fmuls not neg mov mov test aam adc mov jne js inc hlt cmp jbe (bad) pop jae or jecxz jne jmp iret cmp jbe pop mov out test add pushl ficoml mov mov test je cs add xor test je negl icebp xchg adc inc dec and mov inc jl fldl xor (bad) inc sar mov jne cmp setle adc mov sub jbe loope aaa in xchg das cmp divl cli and pushl (bad) xor div sbb add (bad) mov div mov ljmp nop mov (bad) (bad) fist mov std mov mov mov shr mov or shl fstp std fisttp or jmp and shl mov es cld ja icebp or mov mov shl cmp mov divl mov hlt sbb outsl cmp mull cmp mov out or or cmp jae lea sub sbb mov ret cmpsl sbb ljmp sub sbb rcrl xor shr shll sahf and mov test adc ja push sub mov outsb sub and pop or imul inc icebp dec addr16 nop push add jmp ffree jmp and (bad) mov ret push inc jmp call sub push fistpll or call pusha out xchg add xchg jg jmp ja add mov nop sub mul xor xadd test pop nop rcl or loopne push call sbb mulb pop push pop dec icebp jnp cmp (bad) mov jle and sti outsl ljmp mov call (bad) mov inc add aam adc decl push add adc jo mov mov dec add pop add xchg outsl in add call mov mov push out push jae and add (bad) mov (bad) dec dec dec push add jo pop iret aam les pop sub aaa pop call add andl sub add and enter or jae pop pop jmp adc test repz aas test add aam sub lea sbb dec and xchg je dec add pop sbb call fmuls push into jge push xchg inc dec orl divl push movl (bad) xor sub das jae jbe ret por dec jb add jns or lret sbb or or roll out pop movsb sar call or lahf jmp dec pcmpeqb and or push psllw std ja and add pop jmp (bad) into repz add idiv das psraw lahf and int3 iret sub add scas jnp pop push push sbb mov xor or mov add pop lea inc in out int3 fs pcmpeqb xorb sti jb cmp pop in sti pop mov sbb scas xchg loopne add out pop inc pop pusha mov dec mov orb cmp stos adc test in add (bad) fldl shll jmp mov xor loop mov mov lock out je pcmpeqb xchg pop int aas and cmpl push pop ret add pop call pop ret push adc cmp stos aas ja mov rsm repz enter pop js adc and xor ret xor (bad) sbb je es cmp pcmpeqb inc pop xchg out jo cmp popa pop xchg push shrb out cs pop enter test inc aaa out adc hlt push stos sub stos sbb stos rcrl sub stos das pop jbe cmp mov je and mov mov cmpsb cmovb je ljmp lea push pop inc test jbe cs xor clc sar out outsb add popf call dec push add or xchg inc pop sbb aam cpuid mov ss outsl add push loope cs mov ret mov push fs adc fmull pcmpeqb outsb popf cmp pop fildll jge mov xor pushw (bad) popa lret lahf call sahf inc incl sub ret mov cmp pop jnp mov imul mov int3 sbb jb je mov dec (bad) je negb push int3 fs popa and je xchg insb ljmp push pop (bad) (bad) adc inc int3 popf pop inc push cs pop pop or cmpsb enter cwtl fwait inc ds sub push stos jle rcr lcall cmp cmpsb adc pop outsl pop insb dec jo call je sbb je pcmpeqb xchg push ljmp cmp es cs pop cmpb insb pop stos inc and push pop pop clc mov dec rsm arpl xor jg cmp nop loopne call je add jno subl stc je sbb add inc sbb decl pop movzbl cmp je mov ljmp ljmp dec cmp je cmp jne mov or add flds dec or push dec cmp add bound add mov clc iret (bad) lea neg jmp pushl leave jmp mov leave jne add mov pop adc iret mov clc ja add mov jno mov call test aaa add add daa rcl push mov sahf (bad) add call sub mov mov mov cmp cmp cmp add shrb adc mov roll loope add gs add mov add jne cmp jne mov push add mov (bad) jns cmp mov jb sub pop add shll test js add mov lea movzbl daa mov mov orl std popa add mov mov rclb (bad) mov pop lea jbe and movzbl test call mov adc int3 push shr call and test (bad) push or sbb xchg iret arpl scas loop xlat push pushl push inc or and not add pop add pop jg movsb pop stos pop push add xorb mov mov dec fisttpl cli call xchg cmp pop jg orps loopne mov jbe cmp stos (bad) incl adc push je cmp jne mov call push add enter out and out adc sahf ret xchg sbb or xchg or (bad) ljmp and add ja lock jne mov lea hlt pop add add fcos shlb inc jg pop leave ret mov ret (bad) sbb scas xor adc mov mov push pop popa iret mov dec lahf and adc push xchg nop cld mov or stos adc nop mov dec adc push and call ficoml cmp add call ret call fidiv call pop call nop nop mov xlat add lret xor lods fstpt test mov (bad) dec std sub sbb add dec pop mov mov cmp mov aas sub cmc mov fdivrl outsl cmp out sub outsl push out add out scas push sbb outsl out call inc imulb dec mov scas lea sbb dec int add xchg ss lea call call insb ret idiv xor sahf push aas mov push aaa aas dec pop add xlat lret std or inc pop sbb pop rolb and add push jne lea test (bad) inc je mov lea cmp ja je mov (bad) mov into jae pop jae jmp xchg cmp mov jae mov mov cmpb lea test jne sbb jg mov add cmp push inc add imul inc (bad) (bad) popf mov push pop mov jmp add mov iret sbb cmp lahf decl out cwtl jne addl inc add cs pop mov xend mov jmp ret scas loope aas xor mov jg inc jmp ds mov push mov jmp jo cwtl call nop bound into mov or loopne int aam sub es cld ljmp add inc je call call call jo mov push dec inc push (bad) fcoml push scas pop lret pop outsl or and mov (bad) mov or inc rolb lock je mov cmp ja jmp mov mov fidivl mov mov icebp xor cwtl and dec adc incl add mov sub cmp jbe (bad) (bad) call lea mov mov mov mov mov lea jmp mov mov jmp (bad) mov enter lret dec flds xchg cltd scas nop add or sbb divb sub jecxz imul (bad) xor shll pop lahf (bad) mov jg adc add fadd inc add push xor push pusha test in aaa test xlat movb ret nop mov fdivs xchg mov cmp and into or (bad) pop or push outsl cmp and mov call (bad) (bad) (bad) mov sub lea and lea mov mov sar dec mov sub mul shr lea add sub test movzbl pushl rorl fidivr jne ja mov je or lock (bad) sahf adc push mov decl mov sbb jle adc pop add inc cmc insb and repz fist lea mov jmp nop mov addl pop shr (bad) aaa pop jae sti pmaxub cmp mov in mov add cmp je cmp sete add jmp jg dec loop mov sbb mov test je mov sub add jmp ja leave pop cmp je mov ret add pop adc in fdivl aas sbb (bad) jne movb mov lea inc std scas mov jne test pop sbb into inc rcl mov sub inc shr add cwtl inc test jle add (bad) or sbb mov sub iret mov add out das movl dec loopne das mov mov sub dec ret and flds xlat call out mov outsl sub (bad) int3 jmp sbb mov jge mov sub push or and fisttp mov pop popa mov lea dec rep xor xchg in decl mov (bad) cmp lea lock lea rep mov mov popa cmc adc pop cld and mov inc add xor or dec and cmp (bad) fucomip jne or call mov mov cmpb je xorb (bad) xor sbb push (bad) sahf call mov mov pop or and mov and and stos xchg sti call daa add xchg add dec call add cmp int3 or xor cmpsb jb je call adc ret sti bound sbb in out jo cmp call add xchg in ds and ds jbe cmp mov dec cs jne call mov sar or les (bad) mov pop xor pusha inc mov test xchg add mov mov lods call jmp call pop (bad) enter out pop and inc call loopne into lahf inc fnsave loopne into mov lock xchg out mov mov cmp adc or nop mov mov mov cmp sete lds push push out ljmp mov test push decl divb sar ljmp pop ret mov shl test jge sar add std mov stos or (bad) mov add cmp jbe enter mov cmp cmovae lock icebp out and roll mov jl inc test sub clc jl ljmp or mov call add sub sbb cld pop adc mov and test clc add mov jmp xor ds lock cmp dec mov mov bound das sbb data16 add add or test cmpb mov je jp mov mov lock mov sbb clc ja mov movb testb mov and rcrb push and adc mov dec add (bad) jge inc mov test popa outsb adc cmp ja fmull test jne mov sub idiv (bad) decl and out add jno mov lea cmp ja jae inc or xchg clc outsl test ljmp ljmp movb je nop adc inc push sub in dec in and inc pop in add sbb adc sub ljmp and aas push add adc roll jmp adc sub lea cmp cmovb xchg jb push in mov jecxz sbb orb sbb cmp repz pop cmpb mov ds or cmp xlat mov fistp mov inc cmp mov mov ljmp cmp test add add (bad) lea shr add sub adc aad push add cli cmovae mul js adc cmp xor mov add mov mov jmp ss add lea add push inc dec movsl push (bad) rorl add rcrl jmp sub pusha lret push imul adc lea or adc lea cmp cmp xchg cmovg out mov sbb mov lods mov cltd (bad) mov mov mov mov xchg and dec insb das add in xor addr16 xor inc push dec sbb lcall add add xor data16 dec into adc fstpl std push popf test sbb dec loope add popf add jno mull jmp sbb push leave push and mov jmp mov mov push lahf adc fcmovbe mov mov stos cmp lods ds push mov mov jmp or xor adc out scas mov cmp xor (bad) and jbe addr16 test fsubs xchg adc out jle hlt mov cmp adc sbbl (bad) leave adc cwtl test and cwtl dec adc les mov (bad) out cmp xor (bad) fsubrl or in inc mov call mov mov or repnz sbb daa gs or push sbbb pop add cmpsl xchg and xor ret add pusha mov call outsl cmp add sbb fisub xchg inc daa jae adc xchg adc add or cwtl or and leave fisttpl int3 push aad and mov sbb (bad) mov loop insl push jbe push jg or in sbb mov aaa aam push movsl jb jle cmp pmaxub je test cmp je test push dec sub roll inc sbb jmp ljmp je jne cmp movswl add sbb je mov mov inc adc (bad) mov je mov add and inc adc add fcmovnb jbe add dec push cltd aas pop loopne mov sahf iret lea cmp cmp movsb sbb imul test dec inc xor in pop icebp cmp iret or pop add dec dec sbb mov jmp (bad) fbstp inc add out ja sbb test test (bad) ljmp fdivrl mov jne mov mov add mov lock push insl push add add aaa out or call out mov cmp mov movsb lea mov ja stos decl movb jg movb jmp add jmp iret mov cmp jb ja je inc sbb test lahf cld inc adc sub movl sbb or jl ret iret mov adc cmc aas jne add mov mov int3 inc inc les or push mov jl sti xor jnp jae or in sub mov fwait shlb mov (bad) mull daa bound jg mov mov add and add call cmp and and lcall cmc dec add incl push push ret adc add mov add ret arpl pushf test or push and or xor and test ret inc (bad) jg fsubs or pop add ja popa jbe or orb and ret cmp cmp pop inc jg and cmp jg mov or pusha call iret sbb dec add iret dec or push iret cmc ret or jo cmc iret (bad) adc adc sbbl push sbb mov das loope sbb add ja rol mov mov inc ret les call loope add mov jnp jmp test jnp out decl pop jne decl xchg xor jl mov mov (bad) mov movl inc ja pop add inc mov xchg mov pop push mov insl cmp pop imul xor aam cmpsl pop push movsb mov jg mov and mov cmp test stos xor aas das hlt mov or sub or adc jae loopne das dec sub dec and jae jne jmp adc push sti xor out jo jnp adc mov lret dec ror lcall ja lret nop sbb loope out push popl sti mov out cwtl jg cli (bad) lcall cs inc pusha les ret sbb in call lcall (bad) jg and add and and jbe sbb adcl xor or cmpl sahf mov adc jecxz jne cwtl sbb incl dec jg sbb and ljmp cmp jg test cmp or (bad) aas jp cmp ja test mov je add jmp sub outsl and clc sbb out pop jne adc add ret cmp jne cmp mov les cmp ja (bad) dec adc inc pop mov pop sbb push das jne cmp pusha ret xor (bad) test mov cld adc cmp or loope fdivl xor std inc sub add xchg idivb or sbb pop insb adc jmp fistp mov mov rolb int3 lock out rclb (bad) pop out test out std and faddl sub out add ja lds cld outsb int3 sbb out dec or sbb out hlt adc out orb mov xchg iret cmpl push jmp gs push lcall mov outsb sub ja dec xchg mov fsubrl xchg icebp jb jmp in fdivrl test insl inc dec out mov pop cs xchg jmp fbstp pop lods xchg outsb (bad) fldt cs es je (bad) fcmovu mov outsl mov fidivrl mov mov inc xor jno jae push (bad) fstpl ljmp shr mov andl dec and cmp cmpsb and jns dec or adc jg cmp add mov mov xor xor leave into popl outsl adc inc lret fsubs insb push xor jo xchg dec scas xor adc cmpl mov cmp xor jp scas mov mov inc call xchg xchg pop jae movsb fadd adc mov fnstcw adcl push jnp lea mov ficomp push add add xorl mov add push pop mov xchg icebp push popa xchg dec push cmpsl add sahf arpl inc cmpsl dec outsl add add mov jns imul cmp fs cmpsl inc dec imul add in addl dec cwtl fwait int3 aas push xor lock push cld leave fs dec dec or subl test adc cwtl sbb xor push pcmpgtb data16 and xor stos repnz mov pop cwtl mov and lock fiaddl sub pop shr add sub lea dec xor loope test add test gs call add mov xor sbb jmp fs cs dec adc clc or rcr hlt dec push dec cmp jae add out adc mov ret xchg sub fdiv sar call pop sub adc jnp mov lret lods (bad) icebp sub pop cmp mull jmp call fwait out jg sbb jne mov sbb fbld lea cmp jbe jne xor cmp mov jbe shrl xorb inc rcrl fadds cmp je jge adc sbb loopne rorl mov das pop jno mov ja bt jae push cmp leave pop adc mov call insb mov add push add mov mov mov mov xchg outsl xorb push dec or in imul pop mulb insb je orl pop jo shl push jmp ret mov incl enter add movl jae mov mov test jne test cli sub pop push add test aaa or add iret rolb sbb or pushf cltd into push push fisttp fcomp aad push out sti jmp add adc ja jg fisttpl mov pop je jae pop jb xor push fs push stos pop (bad) mov add popa add (bad) lock mov fmull xchg ja jae adc fcomi pusha push data16 lret add loopne (bad) cmp cli cmpsb cmp enter ja addr16 imul iret (bad) sub jo xchg xchg mov xchg stos or dec add or xchg jne mov test mov cwtl or or xchg aad adc out addr16 cwtl mov orl (bad) incl aad pushl xchg inc mov mov mov shl sub test mov or hlt decl inc incb jne ja (bad) mov (bad) lock jmp sbb add xor jmp dec cwtl adc es lahf movzbl cmp (bad) or rolb sbb cmc push pop cmp (bad) (bad) inc xorb jg daa fdivr into dec cs cmp jne mov xor call mov jb push push dec movsb jne call je pop inc jae xchg test lret adc cmp test std xor test daa in std jmp ljmp jmp cmp push or sbb out mov xor mov subl movzbl insb test mov pop out ja cmp jb test in adc (bad) jmp std mov shl sub test mov popa xor test or lock mov cmc jb fs dec arpl add andl and ja pop arpl sbb or ret pop sub (bad) incl shr add mov sub lea cmp cmovb test (bad) aas add and pushf pushw jo jmp sub in jmp into shlb aad cmp sar (bad) fisttpll pop adc jmp inc fstp sbb test cmp in shll dec adc mov inc outsb or mov arpl pop fldenv push inc dec hlt ret push mov sbb rorb pop (bad) push mov (bad) xchg and sub xor js (bad) jae je cltd xchg lcall iret sbb add shr push repz inc out (bad) (bad) fistp into sub add inc (bad) int3 push jo out and ds xchg xor ljmp cmp dec sub outsl negl jno mov test jp clc mov sub add push sbb insb push in add pop xor outsl mov adc pop outsb sub and adc loope or cwtl mov sbb scas and or mov bound imull xor fs fs sbb cmp adc and test dec xor mov jo orl test mov or mov inc hlt mov jmp mov arpl fadds mov sbb mov sbb adc mov loopne and mov fwait rolb jle adcb pop jo sbb jmp icebp out (bad) mov inc loopne sbb ss cmc or out (bad) sub pushl aad ds inc jecxz call and mov lea add call cld dec movsb flds jge test and test adc inc std or cmp inc inc or jmp ret adc rorb shrb data16 roll aaa adc jg jo,pn or mov test loopne js xchg and or sbb and addr16 clc imul xchg dec add dec sbb test jmp jnp jmp int3 mov jmp outsl and dec or xlat cltd imul and gs jle xchg sbb mov jae out mov xchg adc cwtl mov jmp cmp add jns call and ret sbb mov push jmp and lahf jl add cmp clc push mov mov stc pushaw xchg cmp mov xchg sbb test fmuls push dec jmp jo or jae add jle rolb adc mov adc ja fs or mov test or or rolb or repnz jg adc push (bad) (bad) call data16 es xchg cmp adc js sbb cltd pop push lret jae aam in sbb jmp xchg xorl insl and push test xchg popa adc cmp pop (bad) adc push mov lret inc jge and adc xor dec jb ret adc sbb push jae dec push call pop cld fwait sbb jae push push or adc pop repz outsb ret outsl int3 andl dec add dec lods movb dec sbb dec loope fwait lret jns fs add (bad) jo mov repnz jne mov push mov pusha incl jmp dec push popa jo ffreep adc xchg call outsl test popa test mov sarl ds jl sarb gs shlb mov xor sbb pop jae sbbb or loopne cltd adc jae pusha inc int js mov aaa leave loope imul ret or pop fsubrs sbb adc adc stc das jne gs xor mov or xlat inc xchg xchg lret or push cwtl mov and ja push lock test mov push mov push lea cmc dec push add sub aaa rorb mov mov mov jp je jle jle push daa cli das cmp je movl inc in cli mov lea sarl lea pop jmp call add je iret mov dec icebp (bad) jge add mov mov mov pop rcrb cmp int3 jne test mov mov call mov lea mov sub dec jns cmpsb mov mov nop (bad) pushl sub test and add movzbl push pop insl cli popf jae and mov jne add imul cmp mov lea mov addr16 loop call bnd mov and cmp je jle cmpsb ljmp xor mov into and xlat and mov push mov fdivl jle jns mov sub adc pop mov mov mov push xor incl cmp je sub jnp jnp xchg push imul mov enter dec jae and (bad) (bad) pop cmp cmp ja adc movzbl lea adc xor lea dec add lcall add into mov je xor les (bad) jbe mov mov movsb rorb (bad) out push stos test jne pop cld call les mov mov movl movl or ret lea mov cmpb jne add ja add jb lea push mov gs dec add and jns aas int clc ja and and nop add add int3 jge jne jne cwtl orl jle jg xchg pop dec inc and mov cli jmp nop mov test movl add mov xchg loope (bad) pusha das mov jg sbb (bad) out cmp je je movzbl sub cmp ja rorl xbegin or (bad) and mov je and andl imul or mov sub add incb je sub lea daa adc push shl pop cmc sbb lea sbb adc jp mov xchg dec andnps sbb (bad) icebp jae add repz jae lea add mov (bad) (bad) jae lea cmp mov je mov (bad) mov xor jbe mov add daa cmp jo sbb add jns mov push push mov mov cmp pop incb pop pop ds pop jne xchg cmp maxps and pop adc pop pop push or movsb dec mov test pop push pop scas scas cmp add cmp or and clc outsb lret mov or push decb inc bound add inc fldl pop pop popa jne ds fnsave test lea outsb add scas cmovle mov pop cmpsb pop js in outsb je xor mov (bad) ljmp and jae inc xor sbb popf push popa iret jg in xchg iret push dec jns addl sub (bad) push mov xor xchg mov mov adc sbb push adc pop iret ja imul push inc cmovb movsb mov das adc shr sbb push iret je lret cld mov jmp mov movl mov pop and movdqa pop sub mov lds pcmpeqb unpckhps jnp ss mov sub pop mov pop outsl je daa std adc por or into jne icebp add or add xlat enter pushl movl inc repnz jmp aam nop (bad) dec sub xchg and (bad) inc xor jg fcmovnb fsubrl mov hlt ja jae mov jne je mov jg divl cmp inc add dec sub lea push lock shr add mov sub lea hlt or adc ficoml add std call lock dec in adc mov inc (bad) cmp mov jge aas mov sbb scas stc dec cmp jb or mov inc ja (bad) cli int add mov jmp shrb or cmp andl cli loope (bad) sbb (bad) movaps mov sub loopne sub sub (bad) cmp sub movaps movaps daa or pushf mov cmp popf daa push mov je test cs mov js sub jne cmp movsl xchg mov sbb sub sbb dec xchg sub cmpsb sbb mov stc movaps cmc jge adc jbe mov sub pop fildll jb test or shrb popf cld call push out inc dec sbb mov stc fimul mov outsl lods xor movsl dec add popf sbb push jae jp xchg cli mov adc cli (bad) je inc add ja bt jae mov out and pop jge lock je outsb inc pop jle ljmp clc add test insb in mov je and inc push bt jae cmpsl dec cmp adc xchg stos jp call (bad) movzbl aam jne nop sbb fcmovnbe test add lea cwtl test mov jg and andl mov xchg jnp mov push adc loop cmp iret ds cs cmpsb inc add add (bad) jae push fsubr test pop push movsl (bad) ja sbbb fdivr and (bad) pop cmpb je outsl rorl out cmc out mov lds sbb (bad) or or test (bad) push lock orl cltd lock test lcall jns insb inc adc lret mov aas mov repnz and mov adc inc jg,pn mov pop adc hlt jbe cmp add push mov jo fsubl imul mov ja jae mov inc inc and pop jmp inc push enter add in enter mov aam test scas sbb mov mov faddl mov out add in daa or ret mov adc or adc sbb (bad) clc fnstsw cmp je push add inc jl bt punpcklwd and into aaa test (bad) sbb dec sub cmp arpl mov sbb sub insb ja mov cmp scas mov sub add (bad) adc sbb in mov mov xor inc mov je inc jbe arpl stos aaa jo inc repz push aas jl adc and mov jp (bad) mov out (bad) incl sbb mov test or mov test repnz dec or dec inc imul fs xchg sbb rcrl mov jg mov xchg movsb push cmpsb mov jle sub jge push jmp lods popa leave and ficomp shlb mov add andl push and or sbb sbb iret test jmp pop icebp andl or and sub test arpl inc in sbb lea mov (bad) out call and (bad) mov shl mov clc cmpsb (bad) in repz mov jnp jne dec dec inc sti lock inc mov dec mov adc cmp pop cmp nop mov pop fsubs cwtl (bad) fcomps jae xchg xchg sti stc scas push add test out xor call jbe pusha lea inc add out aaa mov xchg js push ret subl out sbb mov js mov and xchg or dec mov mov js dec adc pop out stos and mov jmp xchg test inc xchg cld xchg xor jge lds je xchg ret adc lea mov lock je movzwl mov rorl inc (bad) add jmp inc in push dec (bad) jo xor dec jge sbb and inc dec xor (bad) xchg xchg adc cwtl lret add mov dec fdivrl sbb or scas (bad) out rcll scas push js cs xchg sbb int3 lea or ja inc inc int3 adc cs sbb sbb js xor cs adc xchg and pop shr lds sbb mov nop jmp rol dec xor xor mov scas xchg rclb stc cmp cmp inc (bad) xor in shrb jne mov xchg nop mov mov call jb insb sbb jnp orb mov jne movzbl pop insl mov mov mov cmp cmp push mov cmp test mov cmpl out nop add ret rorl enter mov add adcl xchg add push ret shlb cmp das pop adc rol ja popa mov jns imul in and shl mov popa clc push ja jne xchg cmp inc and test je cli xchg jo mov repnz ss mov add ja enter adc out push cmp negl lea test cmp jae or dec adc call aad iret jae mov sub not and nopl ret pop or ja incl test push cmp je cmp je cmc sbbl cmpps sub jecxz jae or inc sbb dec insb call adc cli jbe stos and (bad) and aas (bad) and test daa insb adc (bad) cwtl orl jae arpl jo lea bnd inc mov inc inc sub dec mov sahf inc loopne push popa je lea inc sub ror xchg jmp sub loopne inc js xorb mov and adc mov sahf push aas inc dec jae sbb ds dec adc movzbl or xor sub mov inc add fadds ret mov push cld inc jbe mov pop add daa sbb sub sti pop mov jne add out push mov test sub sti sub call jp repz lea inc add and cli sub insb bt jae in mov add inc xchg and ret push or ret push rcll lcall and mov bt jae jnp sub or fcoms sub dec pop enter push cmp popa jae (bad) lock dec gs (bad) adc dec rdtsc dec push ja clc jae inc dec mov test insl jae ret push and fbld adc cli mov jb adc mov (bad) adc jno test jne cmp jne arpl mov mov jno mov shl mov sub test mov cmp adc inc incl mov mov mov mov addl jmp shr pop enter jo or outsl and (bad) adc pop adc rclb adc sub (bad) sbb push pop cmp gs je aaa or adc jg sti loop fsubl or je jmp nop add jge sbb adc pop outsl push mov jae jmp inc test sub pop or or rol and decl mov add jmp pusha mov mov lods cli sub gs add call pop adc sti cmovb pop fwait add out pop in je sti ds aam jg jge inc and fmuls xchg rcrl je addr16 push cmp mov pusha sbb or adc or rorb jmp pusha mov dec in add sbb dec roll mov cmp and popl add xlat cmc cmp jne dec xor into dec xor pop (bad) sub inc or in je dec aaa je dec iret cmp ss data16 (bad) dec dec (bad) jae incb add jmp loop lcall cmp mov je pop cmpsb jecxz mov pop loop xlat hlt pop jne pop mov adc scas mov lock clc add pusha adcl lret push xchg test int3 stc arpl std scas xor out inc shl (bad) decl add outsl fsubp mov pop add sbb sbb cmp adc jno add (bad) aas sub test inc ret jo add jmp cmp in in jmp (bad) cmp mov (bad) push mov ja scas outsl push fbstp inc movsb js pop jmp decl cmpsl dec or dec adc hlt jae test pop or aas and aas and push jo and incl sbb add jae,pn and pop lods cmpsb and push mov xchg es (bad) pop or jnp adc cmp mov pusha mov mov rorl add jl mov adc loope (bad) cld in jne out xchg mov mov es push push out jnp fdivrl xor dec or (bad) fwait dec and xchg jg ret hlt pop pop pop test mov in bound jne mov fs and add cmp aas cmp mov jns in (bad) jnp jmp cmovl mov iret in sbb jmp ja cmp pop or add aas push inc add push mov mov (bad) pusha xor shl popa pop xor jnp and decb test call and ja mov xor insl mov es jmp cmc aas jno incb test jmp sbb cmpsb jo push dec add ret sub sub faddl movsb fcoms popa movzbl push dec icebp test ret stos out add je and pop adc ja,pt dec popa or andl fldl sbbl ja push jae xchg (bad) mov mov add jecxz shll dec (bad) jmp xor or xor ja stc or add jp pop and aam jmp jae dec cmp arpl xor or lea add push stc scas loope sbb sti imul cmc sub jne cmpsl xchg and (bad) dec icebp sub xchg sbb sbb xchg adc jno fdivrs mov test pop bt jae push pop es dec xor aaa push sub movsb clc adc je ljmp or mov fdivl sbb mov xor jle clc mov in mov mov sub (bad) addr16 add and movl popf pop lods clc mov aaa rorb dec clc (bad) fisttp mov push xchg enter xor es or sbb lcall cmp ljmp jb mov scas (bad) mov add mov adc xor jns jne jge push add outsl scas add pop xchg imul add mov je mov movzwl push bsf cmove add jmp test std iret bnd sub jp inc daa aas sti adc inc sbb xchg ficom or rcrl and xor pop add (bad) sbb incb ljmp or mov jmp sbb dec das sub jp daa pop fnsave fdiv mov mov push or xchg xchg or dec je adcb or daa and ja (bad) cmp jmp mov and mov push sbb xchg aas adc je mov cmp enter (bad) mov push in adc mov les push jne es lret repz push xchg lcall sub and icebp loopne mov outsl lret and lds push jne das sub popa sub or mov loop mov and test push into aas or decb inc cli add jmp nop or roll inc sbb outsl cs (bad) jg jg add sbb and xor add popa pop pop orb (bad) ss (bad) dec dec xor cmp xor jmp cmp test jo repz insb push ja mov inc xor in pop sub cmp (bad) inc out inc inc je sub pmovmskb xor cmp add dec in gs stos std jg sti sti negl and jg pop dec in inc sbb fwait mov mov jmp xor and mov lock out dec fcmovnb jmp jnp nop sbb xchg and into add dec dec jo pushf xor pop or inc pop mov iret enter jno lret mov sub mov mov (bad) ficomp lods inc pop inc sbb add sbb xor ret push ja jmp (bad) jb mov daa lret in sbb shr in aaa sub mov test (bad) jb mov aaa mov enter aaa inc xchg sbb xor inc les aaa xor movsb add dec or sbb js imul fisttpll add or and sbb leave xor (bad) jmp adc mov jmp inc inc rcrl mov adc pop add add mov cmpb arpl not jmp adc cmp mov jmp (bad) push or jmp lea aas or test jae cmp jmp loopne mov imul or loopne mov outsb cmpb js mov pop ds or mov jle loopne jno jmp mov jp je pop int3 hlt cmpl push in push divb jbe inc jo mov push cwtl add jbe ja jmp sbb fdivrl xor inc loopne inc sub stos xchg jnp mov fisttp fdiv in fisttp movl in test aaa dec and (bad) sbb std mov xchg clc ret call jne xor jns dec xor fnstenv xchg xchg or push adc in push mov std out (bad) and mov mov mov loop add (bad) (bad) cli mov movsbl cmp jne cmp jb dec or decl add inc add pop and outsl add call ret xchg lea (bad) (bad) inc inc and add push add (bad) lea mov cmp rsm pop (bad) xchg push add cmp jbe add xor loop and cmpb lea cmp jg cmc decl ja mov movl idiv dec int3 int3 or cli movsbl ja lea add cmp inc shrl movsl lea mov pop add out aaa push sbb rolb dec jbe cwtl test mov int3 inc je push mov mov mov push rorb icebp sub add xchg cli notl push rorl mov and add arpl out cmp out (bad) scas or add xchg roll int3 or push adc lret mov je or cmp fdivrl lcall jl mov push and mov fildll (bad) fcomip cmp mov cmp movups comisd jae mov push adc sbb sbb into or mulps cmp jae cli (bad) cmp pop out leave sub cvtsi2sd out (bad) aaa sbb add addps ja pop ret jae jbe cmp or jle add push mov out out (bad) jle movsd add or add faddl daa mov scas jae mov cmp mov mov divl lea mov or mov out scas incl in add sbb aaa mov adc movzbl sbb jne sbb cmp pop lods das je push les and dec push out movlps or mov data16 ja jmp pxor loop mov subb add xchg cld or adc pop repnz jne,pn jbe mov xchg add add test sbb sbb sub add xchg sub mov dec shll add inc inc fucomp jne or add gs mov sbb loope sub pop push (bad) jg jnp mov mov mov imul jb das xchg lock test cld add das cmpb das cwtl cltd cltd sbb and dec das in or cmp mov cltd inc je arpl cltd add inc xor pushf adc ja in xchg xor mov sti dec jb xor xor leave pusha cmp js out icebp jmp jmp or mov inc add and or xchg mov sub mov inc inc out add out xor lock adc daa jp dec je and inc mov dec into hlt outsl shrl test jns fadds pop push jge inc inc je cmp add cmp (bad) add aad sub mov je loopne sbb mov push push aam aam in andl or push ffreep lds xchg cld mov sbb ja dec mov inc rcr adc mov lods xlat and pop inc cli inc add and test pop cli cmp mov into inc add test adc or cltd add fldenv ds notb mov push adc test out in outsl inc xor mov xlat aas loopne enter add add inc scas mov dec and or shld xchg xchg sqrtps leave dec adc (bad) add jb test mov inc test dec add sub mov int insb xor cli mov outsl push stos fdivrp or mov je sub (bad) cli or xor mov sbb dec add rolb test push jb cli inc sub aas inc sbb ret lea jo mov aas ret (bad) xor ret mov test cmp push jo add jg jo mov movsbl push orl add add cltd fwait ds jg lea mov mov cmp ja decl adc mov lcall movsbl lea cmp loop (bad) mov inc cmp add (bad) or inc and pop sub dec and cmp dec jl mov inc ja mov add and dec xor add xorps fwait clc incl lea cmp ja or rorb test push push mov imul call (bad) jne push push dec cmp pop rorl jno pop cmp cmp inc cmp pusha cmp mov pop call in adc lods dec jbe fild fs jmp jge fmuls test cmp add dec ffree inc sbb les dec cmp sbb and (bad) aaa sbbl jmp add lock and lea mov and ja pop lea rolb xor aaa cwtl js jmp cmp mov mov adc int3 push add out dec jne mov mov inc add xchg jo pop (bad) lock add push or ret nop cmp mov xchg test xchg int add test inc les mov push rolb test mov jg (bad) mov mov cmp mov push sub adc lea mov mov sbb xchg pop inc xor push xor inc or sbb add jae je xchg aad ds js pop add les cltd mov add add and pop push jge movsl cmp sub out daa stos add adc ret inc mov mov out out xor outsb add dec fcomps arpl lea jae or cmp push pop or cmp pop arpl mov jl or xchg push mov divps loopne sub dec ja mov imul mul xchg inc inc scas ljmp adcl cmp sub push push mov cmp cmp shlb xlat rcll sub std pop jg mov hlt (bad) pushl cltd ja push shr or inc arpl mov ret jne push sub (bad) sub das cmpb jne pop lcall add (bad) xlat and jl push add jo add sbb daa pop or or jae les addl adc inc pushf (bad) pop cltd mov outsl cltd test fwait decl add cwtl sbb call add push or scas and dec inc enter jge fdivs incl inc sbb mov psubsw push mov loope adc incb movsb cmp and jmp push (bad) mov inc ja sbb inc sbb ljmp adc add mov xchg popf call bound add popa mov pusha sbbb dec jbe into scas sbb mov cmpsb xchg xchg inc xor test mov dec add pop sbb orb ja jne sub sub mov and inc inc nop out add mov jmp cwtl inc ficoml mov lahf cmp sbb cmc enter int3 jo (bad) inc and xchg mov cmp jne inc xor fldt fwait lea pop add dec mov ss (bad) out jmp lcall inc ret jmp movsbl jmp (bad) jp aam sbb add and outsb je add hlt or out inc or jmp and and jp into mov das je stc sub mov push and cmp andb test andl dec mov jae mov and call and ret dec lea lea je popa cmpsb xor cs add jg mov iret or movzbl test mov je jg les test xor lea sub das dec aaa cmp iret jb or test push rorb idivl push push nop dec xlat neg mov mov (bad) out (bad) cmp lcall and sar (bad) testb jb mov jmp loop outsl dec inc dec add out int3 icebp movsb or push jmp add enter popa mov push and (bad) (bad) std mov xor (bad) fsubs loope and add jmp jne rcr xor xor jmp and (bad) fild sbb add jmp jae call xor (bad) (bad) in xchg adc stc inc movq xchg test jp or inc add sub ljmp adc outsl pop mov xor or or jns cmp outsb xor scas ja,pn insl push sub xchg lahf test popa or add mov (bad) pusha xlat push fild js add ja adc pop push mov outsb and jne add pusha ret or push ljmp imul sub fisttpl clc mov pop mov cmc mov mov cmp and mov jnp mov sbbl or jne jle mov sbb jg mov or push das scas and rorb test sub lea cld dec ja fldcw rolb pop adc and jg cmc jg adc call pop dec mov inc push or fldl (bad) incl lea mov add mov jmp (bad) mov ss jbe mov lahf mov jle inc jl nop cmp cltd sbb out dec jmp cmp test aad pop fldl or push sbbl lret pop mov jb (bad) (bad) mov dec push push inc loopne outsb add call shr sbb xor shll fisub ret add (bad) (bad) cmp add mov xor xor add loope push lock dec or dec and ja sub lea fisttp or mov aas sbb inc xlat ja or call or adc push mov rorl jmp and pop push dec add stc mov shll popf dec dec cmp and or jmp les cltd xchg cltd push xor mov push ds push (bad) dec cltd push jg inc and add cltd negb je dec add call add jl cmp daa mov mov push jmp push and jbe into lcall sbb aaa push cmp arpl jmp scas pop test jmp adc jle jmp sbb dec sub ficomp iret daa cmc daa mov jge out or mov (bad) movsb sbb xor add ss and push push and pusha cmpsb sub in or mov mov rolb jmp sbb pop idivb adc cmp mov xchg dec pop in popa pop repz pop pop fdivrs int3 negl rcrl mov xor jmp adc add jp fwait or ja outsl cli insl or jmp mov jmp or sti add dec adc inc das and andl push add or mov mov (bad) mov mov aaa ss scas incl add movsbl lea cmp icebp sbb lea add xor js outsl loopne pop add lea cmp lea jne lods or pop adc jge fild xor cmp lea add jg inc xchg lea movsbl xor jbe rcr fstpl lcall jb dec sbb sbb cmp pxor (bad) fldl pop add xor xor (bad) jne sub xor push mov clc cmp sbb sub sub sub and xchg pusha jmp adc rcrb jo jnp jmp stos pop testl xor xchg and or jecxz addps ret add movsbl mov cmpsl jbe out sbb sti gs and test inc cwtl into faddl je fnstsw and movsl xor rcr xorb inc and mov jg orl rcrb add mov sub mov push cli mov nop cli jg adc pop lea cmp jge mov fs mov stc mov xchg add mov mov mov push mov fwait loopne ret mov xchg cmpl fldl pop jmp enter cmp rclb lcall xchg sbb sti sub jo aam and xchg mov andl adc ret lcall sub stos je cmp test mov xor adc js shrb cmp jmp sbb fs add cmp popa orb (bad) neg add pop rcrb or cmp mov pushf loope xchg mov je mov jecxz add mov rcll push xor inc mov mov push (bad) sbb xor add add ret inc add pop sbb pop shlb lea pop ret and fcompl lods or mov cmp jmp daa pop mov sub scas lcall das int3 adc adc mov xchg mov jmp dec pop cmp xor roll sbb scas cmp mov cmp adc movsl inc inc sub dec int3 cmp comisd fcoml test sbb mov in mov movzbl xchg rorl and sbb jb sahf and adc lock jns jmp sbb (bad) add imul xchg inc pop mov mov jg cld push loope rorl mov add lea adc sbb cli addl sub sti out sbb arpl inc (bad) shrb mov mov sbb cmp inc jb roll jmp push or ret xchg int sbb push js inc adc fdiv jae cli (bad) dec scas (bad) xor dec rolb mov jo scas arpl pmuludq (bad) mov faddp adc fmuls mov add lcall es sti jmp mov ret inc les and fsubl insl jmp negl dec mov pop leave popa loopne (bad) xor scas jbe sub repz fadds pop mov rorb loopne aaa jne and test adc add cmp ja pushf addl leave jp je loopne sbb mov es jae,pn cmpsb (bad) push fiaddl neg test mov dec cmp inc mov ds mov mov jge add test jmp shrb or adc outsl movsbl shrb mov les cmp xor daa ficomp dec add mov jmp lea repnz sahf fnsave mov sbb fadds fsubr clc adc sbb aam mulb icebp shl push inc mov adcl sbb cmp sub neg mov mov sar and int (bad) out aad testb jnp mov jmp dec mov inc repz add pop inc or (bad) mov iret add cmpsl out mov popl xor mov scas sbb sbb cli jne std mov jmp dec rcrl into pop outsl sbb xor sbb and add mov iret and add ja mov cs neg inc or sbb lock aad lock push sahf sub lea shr add sub icebp ja xor cs mov cmp cmovb dec push or inc jl add add repz mov mov push and mov ss and pop mov pop sbb xchg and fimull sbb sbb sbb push inc jmp xor outsb and int3 popa and mov or xor mov insb push or push mov mov adc loope lret inc add mov xor mov sbb sbb pop mov inc icebp addr16 xor dec aad or icebp ret dec popf xchg mov push sub adc fcoms lea ja rcrl jmp xor pop fimull iret mov adc stc cmovae xor in add orb or ficom add mov inc sub inc mov jmp fistpll add call int3 inc cmp (bad) clc dec rclb dec push pushl pop inc lret push xlat sub lea inc adc stos cmp fneni(8087 (bad) cmp pop in fwait sub add or adc push xchg dec fwait dec mov xchg dec lcall jl xorl inc mov jmp mov xor jmp (bad) and loopne lret and lret lcall ret sbb je mov jmp mov std js test je push ja cs pushf add mov outsl and out (bad) xor cmp or mov and push cmp pop sbb test int3 pop and dec and mov dec or enter mov jmp jae and inc push and and inc icebp cmp or mov mov inc je ljmp (bad) dec cmp call and xor add mov or test pop stos fwait mov cmp sbb (bad) pop fstl xor mov mov jmp nop add mov mov mov lea cmp ja xchg mov add mov cmp cli pop je das or mov clc pop jbe mov (bad) out or mov push mov mov inc inc test out and cmp or inc popa clc lcall add mov mov jae in inc xchg xchg in push out cltd and xchg adc or sbb push jo stos pop sbb inc sub (bad) pop ja sbb shrl add (bad) inc mov cs and adc fistp (bad) pushl mov ds cmc inc or roll jmp inc mov mov mov cmp jb xor dec andl sub mov jb mov jne dec and test cld add add mov and push out jae adc mov pop outsb imul aaa push aad push mov add pop test adc popa lea pop push decl jae movb dec push jmp sar jg fisttp adc mov mov movzbl inc ret push mov movq roll push jmp or inc lock add ret ja and jmp xor jg mov xchg sub (bad) bound clc add lea fiaddl loop fsubrl push not add dec or loope out orb jo mov lea cmp ja lcall push and dec cmp mov movl add ja test test sub mov mov ljmp gs call mov ffreep or aas or fildll pop add pop sbb out cmp pop mov and das pop test and jnp mov mov add and push mov outsb and mov cmpsb add jae push icebp sbb aad lea and inc adc push add or fs and cwtl jbe inc adc xor loop stos imul sbb (bad) fsubrp pop mov es mov mov call sub enter stos das mov out pusha mov je sbb jge fist rorl add push pop je or mov mov incb push test mov add jne xor mov jmp popf outsl mov call mov (bad) sub cmp lock insb sbb adc cmp aad sarb shrl test jmp push mov and sbb push adc sub lea cmp cmovae xchg xor test je es outsb loope or insl js call and sbb push cmpb (bad) push shrb inc sarb mov jmp sub push mov cmp (bad) jmp es dec mov inc les sub sbb jmp dec mov inc test aad sub lea mov cmp scas mov icebp test je and call mov cmpsb lock add mov sbb mov add inc shr sub lea ret sub cmpsb sbb xchg mov ds jne add inc fdivr cmp sbb mov add fstpt push add ret add or fisttpll sbb push xorl dec add in jmp in jp ss mov cmp ja ret and or add adc lret cltd daa mov xor aaa push test std (bad) les xor adc decl dec lea cmp jbe lahf or mov flds aaa pushf mov shl add andl pop mov int3 adc or and inc out inc or inc adc mov popa roll lea adc test mov pop fnsave test fbld stos data16 add fucom (bad) addr16 xchg icebp add out fsubs cmp jbe cs push sub and shr cmp (bad) mov jno cmp lret shrb outsl cmp or sbb mov mov es lahf std mov lret cmpb adc xchg mov jmp aaa pop mov test je sbb mov test pop scas mov dec push cmp je in or icebp sub jmp mov or mov fdivrs and add xchg jnp sti jmp xor jl and dec sbb pop pop jg mov fldenv popf and addl push add jg lea arpl fucompp out xor sbb cs stos test pop scas arpl xor mov cs inc enter add dec dec cmp add ja and sub add int sbb and lret sub adc ds faddl push and mov jmp les inc pop and hlt adc or sub add stos pop les out (bad) lods or test mov scas and mov mov jns cmp or and adc stos inc adc cmpsl ret add pop decb mov mov cwtl sub cmp ja jae adcl test or xchg jp and and xor sub or push lret shl or dec js call popa mov (bad) jmp and stos mov dec out mov jp jg jp sbb and jp inc lea fxch or xor inc clc inc fwait and and imul je ja jge mov adc shl or ret add mov repnz xchg jmp (bad) or jge aaa incl add stos mov icebp xor xchg jnp dec lea jnp xchg movsb pop cs mov cmc sub dec ja add lcall sub sbb mov ljmp and push adc cltd cmp push adc jo pop (bad) or movsl or (bad) sub jno cmp (bad) xlat inc and adc jno and and jg sub pop rorb mov jae push add adc xor push adc pop push scas push test nop mov pusha ret data16 or cmpsb rol xor pop dec stc (bad) decl ret or lea jmp clc or shr or jbe fdivp jg sub (bad) nop sbb or jo js divl cli pop sbb and dec cld imul or inc popf inc and inc or sbb inc mov cmp cmp ljmp sbb or rol xchg sbb in inc cmp inc cltd mov and adc cmp insb les jmp xor xor pop jne fwait ljmp je add fildl nop hlt pop shll call lock dec fistl outsl add es (bad) jmp cmpb insb and les (bad) xchg inc or inc sbb je fcmovb sub mov push lcall test mov leave sbb and test pop out pop ja push and jmp jnp orl adc test sti fisubrl lahf stos cld leave popa xor jmp or xor sub and cmp jmp int3 add jmp or mov inc pop or inc lods shr mov ret sbb inc and sbb call sar (bad) xor out cli out loop aas add test mov inc adc jg mov jmp push add push inc xchg sti sbb arpl mov lods and fs sti inc adc xchg mov mov or push or data16 sub loop stos sbb pop push jmp pop addl push pop mov dec adc jae out pop mov addl mov add dec scas inc add mov or fisubl leave faddl pop adc scas xor fdivrp addb sub jbe pop mov xchg movsbl imul in mov call push data16 jmp xchg add ret sub mov and xchg test lock mov (bad) cmp mov fcoml sbb mov dec sbb ret add mov mov fwait je das lret sub add fwait sbb lods mov push sbb mov pop test ss loope cmp add jne xchg pop pusha bound idiv fist movdqu mov mov or and inc pop cmp aad and fistpll adc or add push sar jnp and cmp je test jg add and test movsl pop (bad) out sub loop movsbl cmp jbe inc icebp mov sub decl out bound (bad) cmp sub fildll mov push inc cmp je bound lcall or sbbb push sub mov insl pop sti out mov and lea cmp out mov ret mov je add dec jae in mov sti cmp jbe popa outsb mov out and lea loop adc lea push aam in xor sub mov add cmpsb mov mov outsl adc enter adc sub fs ret pop pop icebp push mov test or inc incl pop inc or imull jl push test aaa icebp decl lea jne (bad) push rol xchg movsl mov and aas dec mov lock mov cmp or ja mov fcomps push cwtl or nop mov scas loopne fdivrs pop cltd je xchg pop cltd mov cmp popf mov xor lret inc xor add inc cmpsb sti and (bad) mov movsbl cmp lret mov not mov and xor stos add xor bound dec arpl xchg sbb sbb push and push push jno inc rorb (bad) out orl or (bad) mov add mov loopne dec add lods mov dec jbe jae ja xchg mov inc je cmpsb xchg sbb mov add outsb repnz xchg cmp popf push lcall call push jae and test inc enter add add gs adc add lods fnstsw and fadds movdqa add inc rcr rol pmaxub movsww sarb jmp movups add int3 add or and je cmpb lds call lahf add jmp xlat repnz je movzwl mov ljmp call inc cmp mov je pop xchg loope lea fwait xor fwait dec aaa push push sub rorl xchg ret and fucomp lcall jbe neg and lea cmc or and ja je aaa jl cmpsb clc dec pop mov test outsl and movzbl lea fldenv je pop mov je popf sbb lea lea ffreep mov xchg sbb out add ret clc add jnp inc dec adc sbb and fnstcw sbb mov jg lea cmp lea add scas sbb lea cmp lea push lcall or pop lea cmp lea ljmp les lea cmp lea xor pslld or or fistpll je adc cmp lea or (bad) out and or clc or jnp adc (bad) mov jno cmp lea adc hlt out decl push lea or jno clc sbb int3 jl push nop mov add movb sub add cmpsb sub mov sub inc lea mov and dec push lea mov mov mov pop and add outsl (bad) (bad) adc inc and jae xor rorl mov sti or je push add je (bad) lahf lahf xor jne sbb sti test movups or inc lock dec xor pop pop dec add adc dec push inc idiv mov push sbb addb adcb xlat in jle nop movups or (bad) mov sbb mov and or and push loopne loopne popf push cmp fcomip jb sbb mov and lea mov std (bad) jg cmp je adc add and je cmp je cmp je (bad) decl cli add or pop cmp je movsb std (bad) jmp cmp je movzbl add add mov movzbl mov fwait aaa outsl fiadd cli mov sti mov cld mov std mov jmp int std decb clc mov jne scas mov fwait cli sub stc dec add add push jmp xor cld xchg pop mov mov and stos pop jmp shrl dec lds je push in lret lret stos out cmp in add dec mov cltd ljmp dec and mov inc push add add pop adc cmpsb mov jnp loop adc inc jo mov sub push stos out pop test jne push movl jae sbb sub xor adc mov sbb sbb dec push sub jmp jne jmp int3 mov rorb mov jb sbb jmp out addr16 into bound outsl and fisubr mov pop jmp adc incb clc test je movzwl jb movsb xor lret enter mov mov stos mov mov iret mov lea loope je roll adc ffree fwait jmp cmp js jne mov mov rorb cld aaa push push lea cmp jbe out xor or jae shl lea mov lea aaa xor xor xor scas xor les aaa and xor inc xor add inc xor sub pop mov test inc pushl les sub incl jmp mov cli jg xchg push cli lcall adc out shr or cmp cli mov ja rorb sbb jmp mov adc es dec dec adc hlt and movaps jmp shlb (bad) or jb push xor push xor (bad) xor adc rcll add jmp xchg pop xor push lds inc add icebp dec aaa jmp cmp push add loope jmp adc mov mov scas inc (bad) cld (bad) lcall mov jmp fwait aad jnp add pushf cmpb jne aam xlat or mov inc mov lea jne ja fisttpll sub dec add fstl cmp shl inc in ss cli xchg mov data16 mov ss inc or out dec sti cmp dec jb and adc cwtl add les ja inc ss mov mov and lcall push sub sti ja shl or cmc cld jg ds mov adc and mov shr or sbb jle incl and jbe jnp lcall ret pop shr mov or mov jae mov das test mov lea jmp or adc mov jmp dec lea jmp jae (bad) sbb sub jmp sbb dec in jl std push leave jmp out (bad) mov mov jno dec add mov jmp and (bad) lahf loop movsl movl out lcall fstpl sbb inc (bad) (bad) sbb (bad) repnz xor rol inc rorl push cmp push and xchg pop mov jmp cli sbb mov movl adc (bad) dec sbb push sbb xchg sbb inc xchg fadds mov push jmp sub and jmp sbb jmp lahf loope add xchg pop xor mov aam inc jmp adc or mov add iret push loope les dec push push inc adc adc add inc dec jl pop xor sub cmp cmp ja jns je iret or jmp minps inc js lcall ret cmp je mov fild mov cmp jb add jg mov jne mov mov push ja call and xor add push dec add push imul mov fwait scas mov pop add repnz sbb or fmuls add mov adc adc xor adc push add mov push or sbb daa pusha push add add jmp adc loop cmp cmp inc lock ja push je addr16 (bad) mov sub xchg or je mov jmp nop xor add fcmovu out lret (bad) mov sub lret mov pop std add scas cmp jae aaa lret add inc add push inc and lea jbe xchg sub stos sbbb popa add decl mov movzbl cmp jne cmp jb fmulp jne cmp iret or mov adc xchg add fiadd aas pop pop or adc xchg xchg dec decb jmp mov mov insb and sahf adc add jle in add adc add cmp or add ljmp add adc mov jns das push ds sub mov cmpsb cmp (bad) xor punpckhwd mov add aaa jl mov jmp adc inc jb jb cmpb je mov outsl mov mov or sub test mov mov (bad) ljmp pop lea push bt cli sbb mov test inc sbb fist dec mov lea pushl add mov lea add cmp ja mov pusha adc fwait sbb fdivr (bad) decl add cmc cmovae mov test je mov add jne sub jno sub inc jg stos jecxz add out sub mov or mov mov mov mov jmp loopne add mov sbb add mov push inc adc mov mov incl mov push or dec adc rorl ficomp lds sub add cmp jae es decl (bad) incl (bad) mov add into push nop jmp inc cltd lods xchg fnstsw (bad) jne and mov inc jmp mov test je adc scas jg fdivr ja les insl push or jmp mov jmp mov aas cmp lret sar inc iret cmp ja cmp xor (bad) xacquire add xchg movl outsl pop or jo add jno inc (bad) jp mov sbb sbb aam (bad) pushl rcrl xlat adc mov cmp jbe cmp mov ja call adc aam add adc or testl loope add pop je inc and jo xor data16 xchg and (bad) mov mov call call mov shr imul call mov mul mov pop mov mov mul shr shr imul sub mov cld sbb in inc hlt mov out add ret in jne and mov shr imul fist sbb jecxz clc mov dec jmp outsl sub mov std pusha pop add lds mov or jne adc and outsl sbb add jle sti stc mov sbb mov mov or testl inc add mov push or mov or adc or mov sbb aas or jle mov xorl inc adc cs jno loope push mov jnp clc and iret cmp jo xchg or out mul out es out lea (bad) lret into cmp push add cmc pushf push pop add inc add jo adc xchg and cmp push or inc fist adc add dec aas decb or sbb scas pop call inc inc pushf sub nop jg mov shr imul (bad) sbb push jb out and and jl and mov out jle sbb lret and iret mov (bad) xor sub (bad) sub loop imull test enter mul cmp inc dec and mov je iret sbb cmp jae dec outsb ret repz push aas jp jbe call jmp fsubs mov mov call ficomp adc sub mov lahf mov mul imul clc or int3 ja scas lcall testl sbb xchg mov sbb pop lea mov sbb lea mov mov mov xor jle sbb push into call mov xchg lea nop and inc jl (bad) sub fsubr jg movsb movaps (bad) arpl sbb imul sbb add rcll and mov mov fstpl lret mov lea pusha or sbb loop int3 in and cvttps2pi jge pop lods test shll mov mov jmp lock mov test mov icebp (bad) lcall mov lock std pop or add lea mov jmp adc addl cmpps std arpl xchg cmp nop cmp mov jmp cwtl stos das cmp xchg mov cmp xchg or arpl aaa jb ja adc adc and jg (bad) pop mov (bad) xor jmp jbe ja inc cmp jb cmp or mov mov jg jbe mov (bad) sbb sarb icebp mul mov imul mov ja jecxz adc mov insl lea ret mov mov or jmp cmp aas inc (bad) jbe mov mov jmp dec inc sub into add jbe cmpsl stos xchg (bad) shrl cmp sbb test lea mov sub inc add mov jbe out pop mov jmp push sti into out or sub xchg cmp aad add (bad) jne adcl sub jbe adc add cmc mov insb jecxz mov push adc or xor and mov fs call sub inc or add mov movl cs sti sbb or cmp aas sub sbb xor push and pop adc sti push scas aaa pop adc sbb lahf lret mov adc adc push inc xor adc loop cmp jne adc add in shrb push mov jae sub je pop cmp mov out shrl stc cli fcompl push inc movsb and xor pushf les mov les popa ret sub inc pop (bad) jae dec testb movsb aaa mov and sarb in aas mov lea ret lds nop jmp sbb xor cmp lods lahf or mov add add mov (bad) dec or call inc sbb add jae daa jmp sbbb adc arpl add adc enter pop or mov pop loopne pop call test sub test mov inc mov add pop xor add cmp rorl xor sub arpl push inc mov adc pop add and jnp push xchg mov xchg push pop inc pusha test jb add pop sub inc sbb jmp fsubl mov cmp jne movl shll out ja divb sbb ljmp lret inc gs mov jbe lock dec cmp je mov adc dec mov test mov adc and xchg inc and cmp pop testb les and push daa mov adc or mov int test dec mov pop lret jle adc (bad) add inc xor jle and nop nop pop sbb push fcomps mov jo fs xchg adc pushl movzwl mov mov push pop data16 aaa inc bound fdivr and inc loope inc nop mov ljmp push (bad) decl add sub jg add cmc inc adc movb mov mov push sub inc adc xchg and stos test movb mov mov mov shl test je mov fld1 sbb (bad) jmp por shl add cmp jne mov inc icebp incl mov lea mov mov leave add or je testb jne (bad) mov xor mov mov sub mov movsbl (bad) call shr mov imul mov lea cmp adc dec or and bound call mov lds sub jmp rolb out je inc or sbb gs fsubrs ja fstl add test jne mov aas sarl mov lea lea cmp jb int3 sbb add add outsl sub or add mov add adc mov jmp cmpl pop fmuls mov cmp mov outsl stos call cmp jbe mov loopne cmp jb jecxz (bad) mov je push cmp setle loop incl movzbl cmp mov sete or jne data16 je pop aam add test je (bad) call add mov movzbl mov movzbl xchg dec adc aaa lahf cli and or rorb outsl mov cmp sbb cmp je cs incl sti add test adc fistpl fcomps push ret cmp sete or dec maskmovq (bad) or out jno out push cmp fdivr jg jne lea mov mov mov je mov cs (bad) loope movzbl inc inc or jne sbb add iret pushf inc cmp mov xor jae pushl cmp je mov (bad) sti addr16 add testl gs xor fstpl pop lea popa (bad) xchg movups test (bad) (bad) dec mov add mov mov mov mov xchg adc add pop or test pop push jge add pop movl add lahf jb sbb clc pop jo cmp jb push jle mov outsb mov mov cmpsb pop mov or dec insb in rorb and adc or cmp iret outsl mov push in xor lods mov outsl jne inc jge mov orb movsb test add outsl jmp daa sbb enter push lea jg sbb mov movb lahf mov jg mov xor in je fiaddl idivl inc or push shrb mov aad (bad) fmuls adc jle mov (bad) mov test out call jg add jl (bad) leave je lea cmp jmp push (bad) ja add push loopne inc sub mov das call lock xor rorb xchg loopne add popa cli (bad) (bad) mov pop testb je add mov jmp or and pusha xor jg dec mov mov out roll cs jno popa or (bad) decl lea mov movb jmp pop dec cmp ja ss ja mov (bad) adc add pop and popf jg pop jne cs cmp inc and mov lea jb mov lock cwtl mov leave jb lock shr add test mov in cmp or xchg por in jb in mov cmp xlat pop push setle mov in cmp aam and jle je xlat ret xchg xchg (bad) cmp sarl nop push rolb test fwait andl jns cli add (bad) xor sub lods pop add push iret inc or add stos xorl data16 push and cmp cmp push pop stos psraw lcall jle (bad) xlat (bad) inc and and push xor pop dec xlat jne in push test mov cmp add adcl xadd jg (bad) notb rolb in add mov fdivrs lret mov leave fild add dec ljmp insl sub movsl jnp pop movsb dec test mov dec std inc mov inc inc fadd loopne add push pop push test sti insb inc (bad) mov mov clc lea aaa test je mov sahf out mov inc add cmp test or mov loope jmp aas aaa mov jge dec adc mov push xor mov add int3 iret out orb add addl movb and gs xor jg sbbb loopne pop pop cmp mov mov push std push add or adc test aaa lock pop loopne loopne hlt push or jp mov xor out mov sub incl pop mov lahf movzbl mov ja (bad) jge mov adc mov mov mov push mov xchg cmp jmp or fdivrs mov and je outsl aam inc lock aam cmc pcmpeqb flds lock (bad) cmp pmaxub or (bad) por pmovmskb test jne ja mov sub sub shr and mov lea addl mov stc mov lods adc push pop dec outsl pushf test clc push stc add pushf push rorl in sub ret aam (bad) fs cltd movsb movsl dec lea fwait dec je imul lods movups mov pop sbb add out pop scas pop hlt push fiadd outsb xchg cltd lret pop jp mov outsl push cmpsb aad dec sbb pusha add sub mov jne pop lea cmp inc adc out fmull test mov rcrl fldl cmp notl cmc xchg fwait in adc (bad) pop ret jae xchg rol fcomp fcoms (bad) inc cmp ret (bad) outsl dec (bad) je add mov mov inc imul xor in (bad) adc and inc ja test mov jne mov jmp test stc mov inc and rcr sar mov push aam mov bsf out (bad) adc adc test cwtl je mov mov in inc adc (bad) setae negl or je push jbe lock lret neg and je stos (bad) aam ljmp push add dec xchg sub inc add add test sbb clc jg (bad) push add stos push or inc add sti add decb add push add mov inc push cmp mov je pop cmpl jbe sti or cmovno or inc or test sqrtps cmp mov je xlat jmp (bad) sti or inc push or or test cmp cmp mov je cmp mov jnp rorb inc push mov mov xor lahf sbb or movl loope xchg add add jno outsl push icebp pop inc lock add jbe pop jne mov mov inc jbe mov movups xchg fild push push jb movups inc nop movups repz jp movups mov adc rorb push aas ja (bad) sub outsl inc loopne test pop mov cmpl push adc push lock add and movzbl mov sub cmp jbe setp add stc dec (bad) (bad) je hlt push sbb cli add xor cmp je outsl movzbl mov add xor fildl dec mov pop aam mov cwtl and or mov es in addr16 cmp jbe inc movzbl mov push pop add add imul addr16 push pop orb (bad) ja mov add add jmp jb jg sbb loope jne std xchg jb mov pop mov mov sbb inc rolb mov cmpsl mov fwait xchg add jmp mov test add test mov jne test jl dec add loop mov mov jne aaa cmc push and les pop or push adc jb pusha push add loope pop fstl mov mov cmp fsubrl aas sub leave lea sub jmp scas or mov cmp add mov test gs inc jno lock adc jo arpl cmp setb jmp push incb jne sub push mov orl jo mov rclb daa out add push pushf or aam push stc xchg push mov mov in (bad) je nop inc mov out xor jecxz je lret loopne mov inc hlt mov push stc pop out fwait or pop leave bound faddl cmpsb or fs dec inc cmpsb (bad) xor jae cmpsb scas dec xor dec sbb nop mov push push push daa outsl jge xor repz add int3 cmpl mov fdivrs cmpsb mov xlat int aas cmpsb repnz inc outsl xor rcrb push push dec inc inc outsl shll push (bad) aad iret push cmp push mov or inc int jae fwait or rol xchg dec xchg das out xor sbb lcall icebp nop lcall push jge je xchg cli add push inc cmp xlat (bad) bound and decl mov lea test (bad) outsb pop jne test lea cmp mov jae ret rorb je xchg aaa jne scas add neg and stos les mov sarl push incl je cmp mov pusha pop lcall sqrtps cmp mov or jg inc add xchg mov (bad) loopne jmp add dec inc add inc ljmp push push cmp mov arpl loopne pusha mov pop cmp mov xchg (bad) or pop push or or test or pop lcall xchg jmp decb mov pop pop lcall cmovno cmp mov fisttpll lcall call cmp mov ret cmovno inc subl jecxz scas dec lea sbb or nop rolb mov repnz sbb sub adcb push sarb mov adc jae je pop push push jb inc repz pop pop out xchg and repnz setb clc fwait imul pop cmp js jbe jo dec cld je add aaa inc pop iret repz or fmuls cwtl cmp sarl cmp jbe aas jb popa rolb jns push enter push push push in xchg dec jb ret fiadd fsubrp aaa jo and cmp ret in (bad) inc lret iret pop (bad) pop sbb (bad) lods incb movzbl bound (bad) push push sbb xchg jmp pop (bad) push or inc adc adc add add mov movsbl mov sub ffreep jb push mov shr imul sub adc call xchg imul and or in je add cmp (bad) call mov mov loope mov js pop in data16 jle loopne test lcall jl rorb test out cltd dec adc dec or jmp je and into movsbl mov rclb dec stos pop xor add or jmp nop mov mov mov mov jmp lea (bad) (bad) mov mov inc mov cmp mov mov setle clc add rorl test jb mov jmp call adc movb fisttpll mov dec sbb inc icebp arpl cmc or add fimul movl jmp cmp aaa jmp ja (bad) hlt dec adc xor mov fadds pop loopne inc add add aaa mov test adc inc add adc (bad) cmp inc test push decl aas push mov jmp test mov (bad) (bad) jg test (bad) sub mov lea shr add sub lea mov cmp pusha inc imul cmovae and je dec and push ret scas xchg push mov pushl add add lea mov jmp decb inc stos cmp add sub lea loopne fwait xchg enter (bad) pop sub mov sub loop mov call (bad) dec aam ret or lock loop aas sbb pop or movups mov mov aas xor loopne xchg cmp push in movd das (bad) (bad) decl fadds jg stc add pusha clc decl mov add cmp ja cmp inc or roll fimul test (bad) decl jg rorb add xor add movb add cld inc call std mov mov sub addr16 sub jmp je nop pop repz xor loopne dec jmp push iret mov pop mov mov lea sbb cmpb sbb add dec push lock enter neg movb cmp xor fdiv out fimul daa add movb paddb jbe in sub inc mov add add inc add pushf sahf sbb inc or (bad) lea sub pop inc gs pop adc and clc cmp aas cmc sbb je cmp pop clc add clc out add out cmp aam rolb movzbl mov mov daa cmc aaa fstps mov add add mov or or mov add inc pusha es je outsl ljmp dec pop in pop adc mov cmpsb fmul pop pop dec adc adc pop adc mov dec adc push adc (bad) xchg in dec adc adc add cmp jne jmp ljmp je imul or inc adc sub cmp adc xchg or jbe mov lods xchg test aas inc add push icebp lret push bound mov mov sbb jl xor lahf (bad) fwait lret pushf sbb pop fimul jge or into out fsubrp test inc fwait daa imul cld (bad) incl inc sahf xchg pop icebp (bad) sbb mov loop or dec fldt test lock mul mov icebp aas ja (bad) ret adc fmuls (bad) fist enter sub cmp mov jbe scas out ret pop ret lea test jmp out inc mov sub pop out notl mov mov ret sbb jp mov lods lea mov loope ret lahf xchg push add data16 mov cwtl (bad) cmp loopne shr add sub add ss mov inc push neg pop pop mov nop loopne ret sub (bad) jmp mov sub inc adc enter lock mov mov push add mov sub add ds mov push dec loopne pop enter mov jmp or rorb (bad) adc mov and pop or sub cmp popf mov out add dec inc inc or fmuls fyl2xp1 lea jmp lret push insb xlat inc jg lahf jo call lock das or call dec mov fisttpll or add push dec fnstcw push call mov cltd push pop test mov cmp sub movswl xchg out in mov mov das insl loopne push movsb ja cli sbb mov icebp mov orl adc loop les fmull add lea pop sub add sbb mov fmuls add (bad) pushl push inc fadds faddl add and jne jg jnp jg movsb ret jmp je adc shl mov cmp (bad) mov push mov icebp mov movl incl je dec rolb mov je mov inc fdivrs into out inc lcall sub sub mulsd (bad) lcall sti addsd cvtsi2sd subsd comisd seta add mov pop ss jmp jg and mov sub mov mov mov add or mov into xor mov mov pop shld shl xor add or popa ret inc rorl and lea (bad) (bad) decl mul mov mov mov mov mov mov mov mul mov mov ret mov push mov pop loopne inc test push lods add mov push cwtl dec inc sbb sbb jecxz dec mov fisttpl aam sarb mov fidivrl add xor mov mull out or enter mov pop ja decl add adc cmp adc mov insb in fcos enter adc mov add (bad) mov cmp (bad) imul pop insl jne mov cs jbe adc movsb cli add std mov xor adc mov sbb mov ja mov not mov jnp not in sub sbb icebp mov pop fmull xchg mov add adc mov mov mov mov movswl lcall add nop rorl jecxz ret inc repz mov ja cwtl mov xor mov ja shrb xor xor sti sbb mov mov test sbb sarl fiaddl inc loopne pop (bad) push imull test (bad) dec pop mov pop pushf mov shrd shr adc sti sbb cmovne sbb mov callw ja mov mov in in add outsl call or cmp cmp or jbe cmp icebp loop cmp les dec les cmp and dec jb xorl and or add jbe xor cmp ret or jge faddl cmp ja jmp push in mov inc movl xor test sbb aad push dec xor (bad) ds sub cmp jb and xor rorb fadds jge mov movsb (bad) jge shld add shl add mov cmovne out out test lea int3 mov cmp pop inc xor jb fild inc xchg mov sub (bad) (bad) (bad) (bad) jmp pop int3 js loopne repz ja cmp jb mov mov sub mov out mov jge sbb lea mov mov mov enter mov jo (bad) pop cmp dec cmp mov ja push std jb cmp ja push sti (bad) (bad) out imul sub mov sbb mov cmp jb ja fistl mov mov add test cld ja loope mov push cmp jg jle add mov add pop mov divb add movb lea aaa std or inc enter pop imul shr sbb loopne imul ret jno (bad) xor leave pop sbb jmp (bad) jbe sbb loope adc call jmp mov mov fistpll add (bad) mov outsl stos insb dec enter cmpsl cmp cmp mov mov cmc fldenv xor imul jp inc fisttp imul jmp lahf sbb inc xor lea add jmp call push sbb test fiaddl ljmp jae movl mov sbb xorl (bad) sbb xchg jmp sub or bound imul faddl dec fmull incl (bad) mov test jne sbb ret ror push mov add lods jmp mov subl mov and dec and mov (bad) aaa cmp ror fdivl (bad) fwait or lahf mov mov inc hlt call clc mov jl inc (bad) fisttpl pop mov icebp imul mov les dec les loopne out sbb cmp ja jae ja je sbb sbb jne add jb jb (bad) (bad) ljmp cwtl mov sbb sub lea mov sbb decb push jge fstps inc fmul add outsl xchg jl rcrb (bad) ja ss ja dec mov (bad) jne push les mov in (bad) pushl sbb mov cmp ja jb add or dec jg dec pop lock sub test pushl ja icebp sbb cmp ja jb cmp jbe cmp (bad) adc stos subb jmp xlat loop ss fsubr imul dec test pop in incl pop cmp loopne cmp ja jb arpl cmp in inc outsb xchg pop jmp adc test sub add sbb popa in aas test cmp aas jle dec or mov in dec shrl in add dec xor mov xchg jmp sbb xor jmp lret in cmc mov push or push cmpsb jmp mov jg sbb mov dec push pop sbb xlat test sbb fs (bad) outsb mov adc dec aam mov pop aas enter dec aam xchg (bad) lea or push cmpsb hlt lods lea mov fnstsw fldcw adc push pop or or mov xor cmp mov test inc cli sub aam das lea mov sbb sbb mov jmp out jo call jmp add jl and cmpsb and push jecxz add pop sub pop in mov lea mov adc inc add mov rclb adc or addr16 add fsubs pusha mov sbb cmpsb add xorb loope add loop movzbl mov int fmuls mov add sbb sti mov add dec push push push fdivr add pop fcomp jne jmp mov push enter jg mov shr add les mov enter add cmp push mov test xor (bad) sbb daa leave (bad) lods (bad) decl or enter sbb mull cmp mov sub and call imul add hlt test ret cmc inc and xor fcmovb cmp inc or ret dec cmpsl out fisubr jmp jmp loopne cmp jg sbb sti (bad) (bad) jmp bsr in (bad) hlt aaa adc and loopne sti arpl xchg fnop dec enter inc out (bad) sub negb adc adc aaa adc jbe aaa std cmp js mov mov neg in mov out or incl dec add test adc mov push cmc or sub mov scas scas fisttp and call xchg jg (bad) fwait pop or lea jns aas movb add (bad) out leave fildll repz (bad) jle (bad) pop or xor jmp aam mov shr imul xor cmp std and inc movzbl adc mov movsb dec inc cli inc add mov xor rorl cli ja ror mov imul sub mov leave xor lods (bad) push lea mov pop lea nop dec lea insb mov or js pop outsb xchg inc jo mov and dec jne xor jmp add push inc lods (bad) pop mov jo stos push enter cwtl sahf cmp mov pop fs mov enter cmp repz call jmp js push and cli fisub xchg xor pop mov insb ret test sbb jnp jne lock inc sub jl push pop loopne cmp inc and iret adc gs ja xchg test jmp cmp fnop mov loop,pn sbb cs xchg popa and mov dec push xchg cltd in mov inc fprem xchg ret push fmuls xchg mov xor ret pop fdivs or cltd loopne inc and sub sbb or xor inc movsb pop mov fdivl push pop add cmp mov pop (bad) out icebp and or jmp cli movsd xor adc lds inc aam movups jmp hlt rcrl pop push out pop sbb xchg mov jmp fcmovbe mov xor adc pop call push enter add (bad) mov jmp ljmp bound out and dec dec sbb xor bound scas je call sbb push fisttpll adc mov add sub aas addl inc or fcomp rorl inc addr16 add add pushf jmp andl jg xchg xchg call pop add test push sbb xchg scas jnp icebp hlt and adc xchg mov call xor loope jmp cs and bnd aaa rorl icebp mov cmp rdtsc jo icebp inc roll mov jbe cmpsb pusha in enter cwtl rcll or xor mov sub or add xchg cmp cwtl adcl jle xchg jnp enter jno lret sub sub mov movsl gs test gs dec cmp pop jge pop fs mov js or sti xor jmp leave jmp jb jge jno mov jmp add imul cmp dec push int ja fistp mov mov lea lock aam push test sub mov add mov add fwait inc (bad) out fnop jle sub leave mov add add mov mov (bad) (bad) adc out popf jmp sbb or aas (bad) stc or xchg or fimull or into iret mov imul lea mov mov inc sub mov add cmp cmovae inc add nopl call xor sbb jg inc adc sbb xor push dec add push jmp jmp popa mov lods dec mov cmp bound mov je icebp mov repnz outsb lea cmp sbb pop cmpsb mov add mov inc mov jmp decb sar fisttp call sub lahf sub or jmp xchg out jns sbb add pop sbbl pop nop imul imul rclb add cmp cltd je lret test ret lret mov dec andb add jmp sarb sbb sub jl jmp lea out pop (bad) dec loopne test pop fistpll or inc loopne inc add jle mov or test sub lea inc cmp sub fdivrs adc inc fmuls test and add fnsave dec add sub pop inc ret cmpsb mov jmp xchg jp daa and rcll mov push add je adc shlb dec (bad) jge out in aad add mov jmp fadds xor cmp stos out or push add fs mov lea xor pop decl sbb fmuls fimul hlt jo fucomi lahf mov dec mov movb mov add lea jns movsb clc into adc dec ret jge add jb jg mov pop je pop pop (bad) jmp or push imul and and dec jg push aam add jne int3 lock sbb push pop addr16 or mov je lcall sti cmp xor sub xor cmpb lea jne or rcr xor std jne cld cld jne sti aaa int jae jne cli cli jne stc stc je inc add decl push add out loop push sbb rcll pop notb imul and mull dec test popa mov xor sub imul inc adc xchg je jp imul aam dec mov rorb test imul mov fstps xor add adc andl cmp mov xor xor mov mov adcb fsubr adc jmp sub loope or xor sub jmp xlat movsb add js addl insb adc jo mov lods jnp aam lds loopne int pop sub fsubl or or es icebp incl addl pop std pop xchg lea mov sub push mov fwait scas and xor and je xchg mov (bad) (bad) stc add stc add and cmp je movb jne (bad) or add add sahf out mov cs add add lahf out add push pop xor jb cmpb push mov imul lea cmp jle aam jl sar or push inc pop incb lea inc fs push cmpsl mov cmpb (bad) (bad) out lsl add je cmp je cmp je cmp je ret dec cli and jns out push add test aas daa jge sbb push dec pop pop pop xor daa in loopne cmovns add (bad) data16 dec sbb lea cmp mov je bound (bad) and mov fwait pushf enter jne or mov in inc inc cld jne and jne (bad) or test dec inc stc je es cmp xchg pop je dec dec xor loope adc pop std or sbb nop mov aam popf mov inc adc (bad) jmp flds (bad) out jb cmp dec and mov je adc call mov jae jmp and mov mul inc add jmp ljmp fsubr cmc sub cmp adc andl loopne mov or scas pop test cltd hlt jne,pt adc pop push mov pop adc add dec or fmull cmpsl mov jb jmp jge cmpl je mov jmp or sbb jmp int3 jmp ret jae mov cmpsb pop stc std lea jmp iret popa daa fwait dec inc or gs test aam jae mov int3 cmc jg cmpsb mov jmp add jmp (bad) (bad) cmp adc or repz xor (bad) dec call cmp (bad) push and sahf cmpsl aad dec add jbe mov dec or sti stos jnp push mov pop out orl sarl gs mov inc add sub scas cmp cmp jne cltd mov mov fcomp push (bad) xchg fisub jmp dec sbb mov in sbb sbb inc jbe outsl rclb mov js and cmp sbb subb add lea mov loopne sahf add fdivrs aaa cltd idiv add shrb loopne pop insb lcall pop jge mov sub add aas mov add mov mov in cld add inc daa cli mov jmp jb push or int3 popa scas jo (bad) jl xchg mov or cli inc push jae sbb or nop sbb mov sbbb cmpl sbb push loopne nopl inc add repnz or in pusha outsl shrl (bad) sbb ficompl mov ret fdivrl jmp add mov mov call push shlb or test and mov call add or ljmp push sti xchg lock in or ja int push rcr push (bad) rorl rolb jo push mov jmp inc add pop mov adc mov out mov in xchg cli movzwl (bad) mov popf cld in add sbb test jle sbb je mov cmpb fnstenv loop push jecxz add cmp ja outsl test stos mov sub push clc mov sbb fist clc mov lea cmpsb xchg lret add test mov add add inc mov or outsb jne push and xchg adc adcl jle pop subl push xchg add jl leave jmp xorb or add out lahf add xchg dec das daa push aad add pop test cmp mov shrb mov mov cmp inc shr je xchg (bad) je xor add je scas loopne loopne pop xor aam jae pop nop rolb mov mov outsl or jne loope insl stos stos je jg and mov xor jno loopne add mov out movq test or or add mov push fildl es int3 or sbb cld subl inc sbb pop add test loope pop je outsl push negl or add or test movb in adc adc sbb pusha mov je jle sbb jno lret movsb das and scas call add or cmpsl lea mov aam aaa dec add movsb add (bad) lock lcall mov movb mov dec lea mov movb add pop es dec mov nop cltd dec outsb enter and jbe xchg lahf sbb dec lahf dec cs cmp add dec jae,pn push lahf popa jne sbb add aas add fistp mov rorb add inc jbe scas or out sbb lcall loopne dec fnsave pop (bad) mov scas test jb (bad) cmp loopne (bad) dec ja mov inc call xchg sub pop leave and arpl call mov add push orb xchg add dec or cli scas xchg xchg xchg ja cmp decl je xchg jbe std lea je ja lahf ret in pop add xchg cmp lea lea or mov sbb adc mov mov and loopne lods addb jo and or jb sbb scas add leave add cmp bound subb push dec sbb add fwait xor and scas invd sbb inc stc loope and mov push das mov je test mov ljmp jg dec aam dec test test test jne mov pop aam or int3 jne jmp rolb add lea adc incl ja fmuls loopne add test ret dec or pop adc pop idivl adc add cmp cmp test shl mov mov fisubl inc je fimul pop sbb mov sub lea sub mov inc cmp outsl mov jne add pop pop add add rcrl fisttpll xchg rcrb scas jne add add das leave and fisub mov stos sub pop outsl comisd add jo add mov adc inc adc mov addb test mov ss push adc jmp and loopne loopne push or jle movzbl lock or loop add add xor mov xchg sbb out fs inc or das mov jbe rclb movzbl dec push inc insb bound xchg xchg das sub or rorb mov or cwtl jo loop jle loopne arpl out out mov xchg push pop das push or negb jg movsl in mov (bad) sqrtps mov add das hlt push orb adcl nopl mov nop rol add and inc and add mov mov lock cmp repnz call cmp iret mov outsb mov jmp jb mov add ficompl ret and ret xor pop sbb ret sbb ret (bad) loopne or pusha arpl inc add xor fimull adc or lock jbe pushf add in adc bound ret add jo ret test mov cmpltps int3 pusha insb adc fcomps inc lar cmc js or std and add pop or dec ret ret les cmc cmpps ret bound invlpg ret push aam sbb mov cmpb in dec or pusha push inc movb call pop push test or sbb push (bad) fmuls jmp call in (bad) (bad) cmp jne jmp loop jl jg lret sbb and add inc in sbb hlt and rorl imul cmp data16 roll cs add sbb fldl nop sub cmp aas mov leave scas push in (bad) (bad) jmp add popa es out ror xor out inc mov mov movzbl mov jmp (bad) jbe jbe out les aaa cld leave jbe dec or (bad) out (bad) cmp pusha je pop orl jmp popa mov jg cld sahf adc es test mov loopne (bad) (bad) jns negl mov lea adcl movb negl mov mov mov or add lock lock pushf (bad) decl mov sub cmp add add add das stc (bad) dec adc clc pop inc xor pop movb jmp loop adc push adc add stc lea adc and rcr in pusha pop loop scas scas or adc cmp call les mov cmp movsd fist aam loopne test ljmp mov push loopne test je inc mov jbe leave mov dec or inc clc loopne mov mov and add mov lret mov lds or xchg and icebp mov sar inc or loope (bad) (bad) jg rorl test testb lds adc jmp lcall ja adc dec push (bad) (bad) add mov cmp dec dec mov mov ja fsubrs and in cld dec dec rcrl arpl daa rclb cli pushl pop ss or neg movb cmp fisttpl xchg push enter into adc out mov push lea jbe dec dec inc fwait dec add adc sbb xchg ljmp rolb mov or insb aas sub lea stos scas sub or inc push or xchg dec mov add add movzbl dec jo in repz decl fistl ret fistpl mov sub pop mov mov repz mov mov ja xchg lret icebp inc in or xor ror inc and punpckldq jg (bad) jo mov movzbl push lea cmp add sbb jno rcr or fsubp in fsubrp xchg incl sub jmp pop adc aad stc or add std addb mov push outsl roll jne int jo cmc (bad) cmp inc ss gs adc in mov pusha adc fldcw jne mov popa push int3 call or jge lods call push rorb dec or push add es (bad) jmp out in ja mov std ja mov movsb ja aam lock jg push in mov and mov shr mov and shll sbb push lea push sub test js jg movsl ds add mov mov push int3 sbbl roll jne jno ljmp repz sub push add shr adc mov fild inc mov inc (bad) mov push mov add test mov mov xlat push out jbe ret incl jno mov cmp xor (bad) sub shld mov xor mov cmp mov sub mov cvtpi2ps movl dec pop sub push cld pushl (bad) subsd comisd seta add sar rorb pop add mov aad pop cwtl sub icebp mov hlt mov ja add fucom rorb test ret bsr xchg adc xor shld xor cmp add add mov mov mov cmp fsubrl mov jl scas pushl je lods lea mov iret mov xchg nop mov mov mov es enter mul mov xor mov cmp inc mov mov fiadd mov and mov lods mul (bad) dec faddl jg clc mul mov mov mov or nop adcb stos orb out cmp mov pop (bad) std iret cmpsb or int3 aas adc mov add mov es insb rcll das jge mov or outsb pop int3 nop (bad) xor sub add (bad) jbe xor fistp int sub lahf dec mov (bad) jb rorb pushl not mov fs adc jo shrl ret mov dec mov mov loopne fcomip cwtl mov mov pushf lret fstpl lret mov or std (bad) pusha jbe mov cmovne cmovne sbb mov lods fwait jo mov gs test (bad) call push mov in leave mov lods mov cltd fcmovnu test mov mov stc xchg adc int3 xor adcl les dec pushf bt add cwtl mov add adc into dec mov add iret mov and and cmp mov iret add sbb jbe cmp dec cmpl rolb (bad) call (bad) xor adc jbe cmp outsb aad cmp rcl xor cmp adc mov movl adc dec add sbb pop push lret fidivl add loopne nop xorl lret fidiv orl jne inc gs mov pusha jb (bad) lds add rolb ljmp jo (bad) fiadd mov rolb dec cmp sahf dec push sbb or add jp add or pop je xor cmp add fidiv dec mov sub (bad) mov inc sbb fidiv sbb (bad) jne test and add pop popa add xchg rorb inc push les inc lahf mov les push and xor fistpll (bad) cs push push push or iret pop test loopne es mov inc jle incl jne ja jns jmp inc sbb shrl adc jb outsb or cmp mov dec add stos sbb loopne inc xchg mov dec call jmp call test ficomp dec push aaa push sarl sub add rcrb cmp clc pop dec call out dec lea mov inc or push cltd sbb loopne sub and mov add jbe or inc adc fcomps inc mov loopne dec aam jg or adc lret cmp pminsw ja pop out mov mull leave lods outsl in push loopne lock inc or cmp jg pop fcoml frstor test or add add loope cwtl icebp add push loopne jle popa arpl add call mov je sbbl cmpsb mov jmp sbb pushf rcrl test mov fwait in nop jl outsb (bad) ljmp xlat out addb or mov jle jo mov inc push mov sbb mov (bad) cmp jmp imul push sbb xchg xlat xor jmp lds std add or jmp popa add dec cmpsl out push xlat sbb push mov xchg js push movsl mov sub xor lock cli mov dec enter std mov mov enter movzbl jmp ror add and jnp movsb mov aam pop and cmp test or aad or lret mov daa add ret mov incb cmpb lock fdiv add and clc outsl (bad) shrb lret cmpl shl mov jle add out mov (bad) loope jmp add pop lret push add cmc mov xchg jl mov sbb dec add or mov xchg das xchg xor int3 sub xchg icebp insb loop push pop dec fmuls lock cmp movsl lret movzbl mov mov jmp fs xor or cmpl sbb ret and stc imul jo mov cmpsb addl movzbl mov or loop sub addl add or pusha mov sub cmovae mov mov add jbe adc (bad) sub add pop add out dec shr in (bad) jmp bsr xor or mov inc or push imul ja shlb push adcl xchg rcrb (bad) (bad) aam rcl adc add fbld jg aaa or or inc fdivrs rolb inc lock arpl xchg sbb add and fcos or pop cmp mov ja sti aad rorb mov jmp imul aad mov or sbb adc adc les jae and rol adc fildll dec jbe loop and inc inc cltd and mov in enter out aaa lock mov rorb les mov loopne jnp jae dec (bad) in jmp scas fcomps jmp ja aad and pop aad into pop sbb mov ror cmp adc mov pop loopne add push ljmp inc (bad) lock (bad) fild ret fisubr ret mov jne or mov pop out and andb aad or add or mov push mov xor sbb hlt pop adc mov and mov adc add js aam movsd pxor push les sti mov movups add in test daa loope clc mov mov call jecxz mov and cmp mov push enter mov outsb jbe jo jmp enter jge or jbe jmp mov sub xorb inc push mov cmp sbb sbb scas add in outsb out adc and lcall pop cmp jl jns sbb pop add push or lock add sub mov mov xchg ja scas loope std imul sub sbb pop mov insl inc and loope or jmp inc scas mov adc and inc rol and (bad) sbb mov xlat sub out add bound push mov repz ja in roll lods mov adc adc jmp fstl shr push add add push cli cmp add add and sbbl inc fsubr in cs push addb sub dec data16 jmp les test call xchg shrl dec data16 adc pushf daa pop insb xor repnz and fcmovnbe jnp jns push adc sahf and pop xchg xchg daa xor add push mov int push call pop jae lea jmp fld1 bndstx das mov (bad) mov in out out sub mov jmp cld loopne xor adc xor add add rorb iret fisub or inc pushf push inc and idivb sbbl notl pusha xor push loopne fs sub mov shl jmp je mov in inc mov and loope hlt xlat sub ja jmp jmp andb loope loopew aaa pop add shr mov cmpsb sub sbb mov (bad) jg xchg mov mov jmp adc xor call (bad) icebp notl mov jle movsl mov inc push rorb movsb bound add loopne call movl jle push cmp sbb xchg cli rolb pop jno cli and mov leave cmc loope push xor and cmp lret jmp pusha jp inc fsubrp and (bad) test and xor cmpb les movb xchg loopne popa pop cld mov (bad) mov (bad) jmp clc add sbb and loope xor pop pop mov adc popf sub mov or or cmp roll enter js (bad) incl subb mov add jl mov je add rolb mulb loope dec jne xor sub test or movsl lock add xor fisub mov movsl xorb aad mov movsl es rclb add push or and sarb or out or int jo movsl data16 adc test or movsl adc movsl (bad) xor aaa add dec jle cmp data16 cmpsb jmp icebp or add dec or jo subl (bad) xlat xchg test sub mov or cmpsb test push shrb mov lea and rcrl cmp push sbb push sub scas dec adc pop xchg rolb inc jae mov aam inc adc jns pop pop leave xchg sbb je scas fs push (bad) mov mov outsb push ja in jmp fsubs aaa hlt add push mov jmp test add in inc adc test push aad xchg sti hlt aas lock test xor mov pop and inc push aam fimull xchg rcl mov sub and out loopne pop add test mov je cli mov or call dec adc mov rorl xlat pop and jmp add outsb inc xchg mov ss cmpb stos test in pop jg inc or jbe sbb in ss pop in jmp mov clc add jne fmuls fwait je sub or hlt sbb xchg cmp inc cmpsb in pop cmp adc lea jmp frstor int add or mov push adc or psrlw jmp mov mov faddl adcl or ret fnsave (bad) ja out mov dec and pop push aaa (bad) or xor sbb mov adc xadd test xchg pop rcll and jmp add xor aaa xor cwtl or aaa cwtl jb stos (bad) dec pusha xor pop rclb or loopne push jne leave inc adc je,pt aam orl lret push sbb clc cmovae test imul and push add ret cmp jmp add push mov add push aam push or inc or rcll call push or mov sub lahf mov adc call add cld imull fcmovnbe call or aaa add loopne shll dec add jmp fxch pop negb mov lock fcoms adc xchg subb xchg push movsb or lret lea rol je mov pop and loope pushf mov push mov inc pop mov mov loopne arpl pop inc cmpsb push jmp cmpl jne push push mov cld sub pop add adc cmp inc adc add jg sbb sbb adc cmp cmpl lds (bad) fdivp pop dec fsubr xor into jb out test das pop aas xlat add (bad) push data16 inc lret cld pop (bad) or jnp pop jmp (bad) (bad) in test fxch xor fcoms inc xor inc out bound pusha gs pusha out test mov insb rorb ljmp pop jmp loopne (bad) mov adc mov loope cmp aam push or int3 (bad) jne xor fmuls dec adc push es add adc cld (bad) pushl cmp ja add cmp seta pop ret inc add cmpsb push sbb mov adc jno and (bad) mov push inc mov pop mov or or mov jle adc xor ljmp add mov test je test je jg cli sbb cmp cmovbe jmp dec test lea je add ljmp mov mov movsbl arpl loop sbb jns fild adcb sub or aad push adc mov mov or add add mov mov call mov lcall mov lock push hlt test je (bad) in (bad) (bad) incl cmp cmovbe jmp lea cmp je mov cmp jne pop pop cmp outsl lea xchg pop and decl (bad) jle cmp jb jmp xchg add cmp lock pop scas sbb jo adc xchg popa adc inc int3 add fnop add xor test jo scas (bad) movsbl add dec in add repnz nop nop mov sbb pop adc and cmp jb subl and pop and nop add enter insl push pop mov inc or js push push and mov mov xor pop call inc (bad) es mov sub push jg sbb call adc test xor jne lods aas or add xchg adc cld lahf test cmova jmp test inc arpl ja je mov cmp je dec lea inc sbb dec mov and sub mov jnp jae jecxz,pn cmp or and out push mov pop inc imul cmc and andl pop adc jae mov cmp mov je jmp in mov cmp jne andl and cmp fwait shll mov cmp jae add shlb xor and dec add mov mov add ret rcr ja decb pop adc test setg adc add lea adc fidivl and and lock mov and pop hlt inc dec sub mov cmova mov je inc add adc inc pop push jl in (bad) incl out sbb pusha sub lea movzbl and push adc pop and sbb add lret add js call add rcrb or or scas sub sub mov mov mov test jne cmp jnp inc and add dec add pop jbe lea mov push and lea sub cmp movzbl jo pop (bad) mov sub add mov je mov sbb sbb (bad) sbb mov das cmova pop xor mov dec sar or ds cmp ja add jo and sub and and adc mov cli add or pop sbb lock jmp movsb sbb mov push lcall push sub xchg jecxz mov loopne call cmp jae mov sub add movsbl in nop sbb sbb es fiaddl mov mov push xchg loopne mov (bad) mov adc iret fistpll enter imul paddw nopl inc add cmp xchg add push mov cmp ja sub rorb loopne mov or imul add jne mov dec push adc add scas mov outsl mov or push pop movsb test sub adc sarb mov aam inc (bad) sub sub inc inc jne mov imul xchg das add insb mov add xor cwtl and call in mov (bad) iret loopne or outsl sbb pop outsl call dec (bad) (bad) cmp push lock cld jle stos add movsb cmp call loopne aad and pop ret xchg jno (bad) ja jg mov mov mov mov faddl test je adc sbb (bad) push and or inc (bad) popa (bad) cmp out mov cmp test fidiv sub cmp cmova mov gs mov ret jmp (bad) mov and in loopne mov lret nop es cmp out mov popf mov mov call xor (bad) adc pop popf dec mov add cmp das adc (bad) pushl sub fdivs sub mov cmp cmova fiadd aaa xor jne mov adc cmp push mov rcrb add and sub mov out jle adc mov dec dec jg jle je,pt and push sub js fimul lock mov cmovbe test jne push or cltd jb test nop ja js mov cmpsb dec popa push add (bad) push pop or stos sub mov sbb or inc inc sbb (bad) flds mov jbe cmp dec xlat ret and cmova xchg xor mov cmp popf lds test clc ret add add adc xor xchg std dec scas push add adc or adc push xchg or add out pop (bad) mov ret pop inc sbb sbb sub mov xchg into nop xchg imul lock inc ret push inc inc ficompl inc clc incl movsb xorb movq jle jo lret aas mov or mov cmp lcall fs push mov inc and inc or ljmp mov inc hlt sub mov cld push or xchg (bad) jbe call and loope mov mov sarb cld leave aas push les lea sub adcb mov outsl in add pop sbb hlt and std mov push push mov call pusha push xchg add pop sbb add jge add dec pop incl pusha and clc fcomip sbb je cmp inc test je sub mov scas dec or lock mov add rcl ficom pop fbld sbb push lds and cmp outsl mov outsl push xor movzbl test jl mov fild jmp mov xchg cmp je and clc pushl lock pop scas add sbb inc aas aas mov and add divl mov jmp inc add negl popf push push aas inc cmp or xor sbb ret cmp fisubl or dec rolb adc or and aas fistp (bad) (bad) (bad) jg inc add mov les addb add and fbld or mov (bad) daa pushf mov sub xor add jae xor pusha adc adc add mov inc add lahf push subl outsl sbb lds mov cmp dec or aas ret jecxz shr scas pop imul jecxz cmp or outsl lock xchg or dec outsl test (bad) adc pop movsl popa shrb dec repz cmp dec loopne enter cmp xchg into xchg cmp add mov add mov call fldl add inc add inc add push adc push cmp les and fdivs mull push mov add lds mov sbb cltd mov and mov cmp frstor mov out (bad) pusha push out call call adc arpl in dec sarl adc jo cmc adc add mov (bad) cmp and rcrl or (bad) cmp loop out jno int movzbl lea add sub loopne idivl sti unpcklps push (bad) mov je mov idivl mov movsbl jmp fsubrl add call sub popa rclb sbb adc mov and xor mov xchg rol mov and pop int daa out call sub xor pusha addb or lock dec push or das outsl push sbb inc dec test xor push and aas out add cmpsb dec cmp pushf inc rolb call lock faddl or insb rcrb sbb add mov fmuls inc and nop inc cmp inc dec or orb add add mov sub mov orb sub jg aam inc lcall mov mov cmp mov lret or cmp fwait mov aaa sbb add add pop popa rcr sbb inc and sub (bad) mov shl fistpll add xor call loopne push push mov fs fistp arpl ja enter cmp mov loopne addl ds push and and fcom aaa pusha std xor ret inc shrl inc pop cmp jo or and (bad) sbb inc pop std aas pusha add je and fidiv sub mov call pop inc cmp rcrb or ret jne loope adc call lods pop rol lds pop sbb cwtl cli xor or add popf fbstp add ss orl les ret hlt enter addb sbb add repnz je andl sbb cmp mov decl dec push xor adc sub add fbld and cmp sub negb fistp (bad) jg and mov arpl call push ja sub jle orb cmpl rcll xor insb imul jmp fidivl cmp sub cmp paddb sub inc (bad) stos inc clc mov cmp cmovbe into add leave sub insl pop ret addb test and call add loopne das adc mov lock (bad) int3 add pop add pop sbb fwait call mov std cmp call leave inc fbld add cmp pop sbb loopne scas cmp je mov or mov cltd push mov enter add adc out sbb mov nop popf mov (bad) push (bad) jp call add or fdivrl push dec dec nop nop xor rorb pop insb push mov mov mov sub incl rolb inc add rolb and xchg ret cmp cmp loop mov lret xchg jns jp jg mov test jle lds ret dec mov jae jmp add aad call add add cld xor jnp push pop lret pop jg push stos xchg jp cmp cmp mov push or fild js je cmpl scas out and inc inc cmp movsbl (bad) mov call push pushl add or loope ret mov mov iret lock or loope add jl jae xor in jae sti and adc push jp or das add pop call cltd push nop pop test and lock sti (bad) (bad) (bad) jmp movzbl jo insl and sbb mov add inc inc mov pop cmp sti in fcmovnb lahf sbb jp pop add adc movsb cmp and cmp int inc cmp lds jae add popa push mov pusha xchg xor mov sbb xor loopne jg hlt mov cwtl jae jne ljmp sub push adc test (bad) movzbl mov and inc roll inc pop (bad) ss push lret iret mov jle cmp jb bnd add in lret mov call add ret das xchg sbbl cld add leave jmp mov addl mov ja mov xor (bad) sti aas sub sbb clc hlt cmp ja aaa xor and inc adc add icebp je adc aaa and and mov (bad) jg aaa mov pop pop push test (bad) in mov xchg lahf adc (bad) push rolb mov cmp int3 sarl add sahf aaa pop std and lcall aas ja movzbl inc clc add push movsbl loop cwtl push or mov cmc mov mov hlt cmp jae fcoms (bad) mov call rol cmpsl add pop pop ret jle jnp ret push pusha je (bad) aas (bad) cltd das pop out or cld cli (bad) decl add dec xchg sti or xchg or jg iret insl mov adcb push adc sbb pusha add cwtl imul dec add xor adc je addl lea pop rolb flds outsl xchg punpcklbw ds jl jae mov movb orl push or test js adc insl or data16 or add rorl je rcrl and add xchg out and dec jle ret mov lea movsb sbb ret adc call sbb call mov mov loopne inc decl ret mov mov or inc or push inc mov nop out insb mov inc lods or (bad) jg add aas ja cmp lea jbe lea cmp call push sbb std sbb jbe cmp jae add mov in sub cmp inc fdivs sub jg pop add mov int3 pop stos add leave in outsl lock add add (bad) hlt mov lea dec in push orb add dec insb xor mov adc test das fxch adc adc das jl add (bad) jne or jns movl mov mov test pavgw (bad) dec mov mov xor test icebp push pop pop rcrl jl mov xor sbb and mov out es inc dec out pop add xchg add xchg insb and aaa adc out or ret call pop push loopne jmp add pop js mov nop das cmp jne mov mov faddl sub mov dec mov imul jns jo adc or adc dec cltd lret das inc hlt mov sub cmp rcpps cmp ja jge lea jb call xor and pop outsb xor push add jo jne dec jo jg dec or or adc push cld push les jge decb push fdivl (bad) push les sbbl cmpsl add lahf push sbb je mov in push sub cs fidivrl aad xchg clc jbe cmp jb mov add cmp jbe daa icebp call stos jo sbb jnp jle inc jmp movzbl mov mov pop lret movb or das (bad) stos lock push mov mov rol lds jmp iret sbb push inc cld and icebp sub call push jmp and or jo mov dec adc jecxz push gs mov test je xchg jo add cmp sub mov mov call insl in mov sbb aas xor adc lret cmp pop xchg jg dec cld test mov xor out clc add add rcrb les clc cmpsb fcmovbe loope adc jmp jg pcmpeqw inc mov mov add cmp jae or icebp call xor sti ret xchg sti add test mov js cmp insb inc aas fldt jmp data16 (bad) imul iret inc dec insl in push (bad) outsb dec clc mov mov add outsb or jno mov mov push sub add xor push fdivp addr16 xor cli jb add inc mov jbe aas or xor dec or cmp add jo xor jmp inc sbb clc lea pop rorl add mov jmp jge mov and mov jmp in aam rcr fucomi mov jbe ds and pusha adc daa jg xor int3 dec stos inc call and and push add hlt int and fist cmp jb lea cmp jbe ja add mov pusha or mov andl nop icebp cmpsb add mov test jg push cmp ja or jne andl mov pop mov call or (bad) xor cs out and dec outsl test je inc sbb xor inc inc lret sub aam sbb dec mov jmp push add mov xchg mov xchg dec scas (bad) mov sbb sbb push cld lea lea pop pushf clc mov xchg mov mov incb clc jle mov add ljmp das pop (bad) (bad) loopne mov jb push or sbb sbb push jmp scas mov and add hlt sub (bad) adc sar ret add lea jle (bad) decl add mov je lock mov fmulp iret (bad) imul adc fsubr dec xor jg ret mov xchg sbb add insb cmpsb push inc popf add inc or mov pop in popa loope mov lahf rorb (bad) mov imul and call mov adc inc and (bad) jne imul aas xor inc cmp or cmp xlat add je (bad) hlt pop push ret dec adc mov call rolb addl cmp loop sub and hlt cmp ja xchg cmp sub cmp ja cmp (bad) jb add cmp jbe cmpsl imul dec mov fidivrl or push sub loop push push xlat pop jg mov sub push je dec call cmp sbb cmp (bad) jg out mov mov lea add lea cmp jbe cmp orl incb jo mov xchg test adc repz (bad) sub fsubr mov xor cmpsb cmpb jmp mov (bad) or xlat aam test jne mov add add sub and push cmpb xchg cmp sub adc inc add push and jmp movzbl out jo adc movzbl mov jge xchg sbb or loop dec cwtl jge,pt inc jmp data16 data16 mov xor adc (bad) in push out cmovne pop mov ficompl pop xchg incb adc inc gs and dec dec and and sbb sbb dec scas stos movups xorps cvttps2pi andl pop ljmp push hlt cmp ja add stos cmp sbb or adc or fdivp mov fcoms sti push or mov add adc popa push xchg push fildll loope (bad) cmp push push jno add rorb scas (bad) pop ret pop and cmp ja mov jb xor dec jp sub aas adc sub popl add movsl push pop movsbl sub leave push adc xchg and pop sbb push pop mov loope or and or cmc pop dec adc or test jne pop jg adc jmp cmp pusha loopne inc repz add add aad mov dec inc mov jmp je data16 das in out pop shll push and add ja addl or ret das cwtl jmp pop add fcmovnb jnp subl in mov push sub xchg sti xchg sub adc add adc dec inc enter outsl rcrl js insb xchg cmpsl sub mov push ja sub push fwait orl data16 sub pop fcom call scas xchg jp mov xchg add das fadd dec push ret push cwtl arpl mov nop test mov (bad) or outsl jne add lea inc mov je xchg jo and mov es add mov and pop rcrb les mov mov cmp ja sbb shrb clc add fsubrs rolb std daa ja inc adc xchg mov fcomip lret jbe mov push mov test add call movb rol gs (bad) jg pop mov jg add lea cmp mov ja idivl aam dec push ret sti ret das lock push or push in rolb xlat cmpl (bad) ss test popf mov pop imul or (bad) out call mov cmp jb cmp enter fldt fcomp jmp iret lea (bad) stos loopne je jo mov and sub aad dec or rol push iret dec pusha icebp call inc or jge mov (bad) inc inc xchg pop or jg outsl pop add loopne add hlt lahf sbb pop jmp mov pop add daa cs sbb pop stos jp add loope mull ret cmpsb xchg sub call je sub sbb movlps iret hlt idivb sbb std test pushf and hlt inc cld sbb int adc adcl sub leave adc fildl mov das pop sbb adc mov xor rcl popa dec push mov add pop fldl je jl sub sbb adc dec cmp ja push loopne push push cwtl and jmp sub pop or aam (bad) xor mov cmp je cmp lea add cmp pop inc (bad) sub (bad) fchs call call decl dec cld test jle mov xor or test cld pop sub mov popa or incl sbb fisttpll jg jmp lahf loopne mov lea cmp ja ds les aam add lahf mov mov icebp ffreep or add mov xor pusha daa int sub pop sub xor ds pop (bad) int (bad) mov and decl adc cmp sbb jmp sub mov mov add sub add ja mov test jle das sbb cmp inc add sbb mov push lea pop adc jl push add test loopne jbe mov mov test adc push add sbbb dec mov xchg pop lea add lcall daa lods faddl cmp add inc add pop pop mov movb add xchg rcrl xorb inc les add or dec sbb js loopne inc fwait lock (bad) mov and call fstp (bad) ljmp jne push mov inc std popf test inc and je mov add int3 aam flds ret int3 je push lea mov push mov jmp cmp lret and lret mov mov add psubb jo ja fnstcw sahf loopne (bad) sub mov mov mov sbb add mov out add xor shll leave xor adc addb add or sbb (bad) jmp sub push or cmp pop shll pop into je in xor (bad) incl fmuls andl sbb xor xor je sub (bad) cmp dec adc aaa jne cmp mov cmp fildl inc jbe add jg fdivrs cltd int enter add mov cmp mov pop scas add adc add repnz add cli xor push or jmp mov and sbb and jg add adc ret sub fcom ret sbb inc popa or sub push sub or in cmp add cli in pop jmp dec aas shrb jge and mov sub (bad) in (bad) jg add add cmp ja lea add outsb sbb pop pusha call or outsb fisubr pop (bad) dec cmp neg outsl and sti bound bound rorb cmpl add sub dec push popa scas and sbb pop add mov cwtl mov push sbb mov xchg or or sahf pop enter dec loop das cmp mov pop ret call fcoms aaa jmp sub fwait and test xor or das xor add adc hlt adc and cmp jmp pop and or xchg or loopne pop mov add push push int test aam (bad) push push and xchg push ss mov push mov mov dec or in hlt push fucomip mov cmpsl ffreep mov (bad) fidivr outsl mov pop cs cltd xor mov fldcw cmp mov ret push roll repz jmp je rcll stos subl or (bad) loopne mov fild mov push mov data16 cmc jge (bad) decl mov jo sbb sbb xor mov cmp inc and or or xchg arpl mov orb test add hlt and inc and mov or mov add adc outsl test arpl add lahf mov add lcall cltd cmp jp fild push (bad) mov popl into enter jb std and movsl repz decl (bad) rorb cli pop sbb jo,pt (bad) vphaddudq adc mov pusha pop movl mov ret dec dec add call pusha cmp adc jmp cmp lea mov out dec lea sub movl mov xor test hlt lea pop pop movsl mov mov call loopne dec call add jg xor add add roll mov add add push xchg adc add test mulb push jp sti xor call call pop cmp pop (bad) aas sbb add xadd test jle in enter dec push adc andl mov inc mov lock adc iret dec sbb imul inc mov jg in sub call lahf movb jp pop out ret xor jle,pn mov pop shr movl mov daa pop les addr16 cmp pop mov out push pop dec out sub xlat ror inc sbb mov dec pop subl ret fistl lcall lds and popa mov xor adc out sub xchg ss inc mov les pop xor and rcl xor inc test fild in mov mov cmpsl (bad) (bad) decl je mov mov mov mov mov mov movl add inc or out sbb (bad) fisttpll pop or pop adc into nop pop mov mov jb or and loopne or stc push nop push lea mov and mov mov add es jo adc loopne (bad) dec inc ss adc das or add mov mov sbb call adc mov in xchg scas movl mov mov add je pop add dec jge lods (bad) dec ret and shr jg ja mov jecxz mov adc mov lea cmp std (bad) push je cmp je mov mov test mov mov mov or adc jnp (bad) nop add movb or mov push cmc out xor mov mov add mov ds mov add sbb sub add (bad) mov jmp mov cmpsl xor push pop pmaxsw cltd or sbb add scas loope idivl xchg das movl stos call push mov or mov lods scas or inc and pop (bad) and xor fistp loope jle call pop ss mov jmp orb adc ljmp pusha pop movl ffreep add call aaa nop push sbb and pop cmp mov cmp adc shrl mov add out sarb dec jne mov push jmp xchg mov (bad) call call shlb insb add mov add cmp jne (bad) jmp lock add add or mov xchg decl (bad) incl je sbbb add cwtl mov sub mov pop dec pop and pop scas add push movsl push mov jne pushf pushf pop mov xor mul (bad) std pop popf xor and sub jge les and loopne test mov je fdivr dec adc sub cmp shlb divb aas xor loop cltd sbbb xor cpuid cmp jne test je jle pop in jp pop loope inc je cmp test jmp dec xchg xchg xor je and cli daa das and in test out cmp xor cmp loop dec inc dec ja decl push sub push mov loop out jmp mov lcall jl jl lcall movsb addr16 xchg xlat cltd jge js mov inc movl mov sub dec fcomps cmp (bad) int3 dec pop and sbbl stos mov dec clc adc or lahf add setle cmp mov cmpsl loop inc (bad) add out push mov push pop movl cli in mov je xlat push mov jmp xor or pop add push inc stos (bad) mov inc das movl or inc sbb gs add push rorb outsb out xchg das movl (bad) data16 loope push pop sbb test sub call lahf imul mov lcall and imull mov sar lds test cmp mov scas sbb xor add js inc aaa xor outsl into mov push add clc (bad) call fsubrs ffreep clc add rorb loop (bad) mov push (bad) cmp jbe or adc loopne aad lea mov cmpsb inc lods adc (bad) mov (bad) fwait add sub add movb inc jo sbb add pop and adc and cmp stc add adc (bad) or xor inc adc insb (bad) mov sub cmp imul mov ja mov add scas das or int (bad) loop mov add sbb mov inc rcrb hlt or xor push adcl fwait test jne mov jno xor mov jmp xlat adc push cs push xchg cld (bad) icebp push add mov test cs mov pop sbb adc cmp pop rcll inc dec xchg xchg push outsb adc test das pop sbb pop dec xchg sbb mov jbe test cs dec das pop mov push pop xchg lcall add dec dec or cs pop fmull push andl inc sbb sahf sar lret inc je aas cmp mov mov fildl mov outsl pushf sbb lock movsb push lea test add scas dec adc clc je addl movzwl mov cmp pop sbbb adc xor and mov sub and lea je lock or scas inc addr16 and sahf adc out or inc and dec loopne fstl cmpsl mov mov sbb mov jle jg push ja adc popf out push jbe nop jo cmp jge addl sbb inc push nop scas lret cmp mov inc call dec or sub rorl out mov sar adc ljmp dec add enter sbb adc xor ljmp mov rcrl push cmp daa lea xor sub inc fbstp mov cwtl (bad) outsb ja (bad) call xchg sbb sbb data16 dec and call test je fiadd call inc icebp fist add mov mov jmp pushl movsb (bad) call cmp or ret lcall call add jmp leave bound scas test inc jo cmpb xchg ja aas mov pop aaa test lcall jne mov or (bad) call pop push push sub sahf adc adcl in dec lret das or adc or dec lea cmp ja adc add call add inc clc das cld adc adc dec or stc jb and inc add push sbb cmc setne sub xor setne and or inc and jae test je adc cmpl ja add test inc rcll lock inc arpl or arpl insb mov push cmp jne adc sub add mov pusha push adc add bound adc cmc mov pop inc test fs aam or (bad) aad mov std dec stos call movzbl movsl or pop add imul test mov cmp call add push inc and cmc outsl and dec add add cmp ucomiss mov sub jbe sbb or cmp and jne cmp cmp jmp or fldcw test call adc add push cwtl or lock add pop inc cmp stos js cwtl jmp stos jnp test jge stos inc dec test bsf add int3 jns mov iret pop test std (bad) jmp fadds xor je (bad) mov mov je test jne mov mov sub add add cmp je rol std dec test je out stos test call fdivrl in xor lret push jmp sub adc mov jmp outsb ljmp lods push mov fsubl mov pop (bad) mov pop jns movl call push and sub adc stos mov inc sub add add mov and cli emms pop mov test je push xor ss mov decb call and adc inc pusha sub mov xor shlb icebp mov movsl fwait dec aaa mov xor into call or jle mov in mov jmp stc pop add and mov sub cmp mov ja mov cmp mov je test dec loope test sbb inc xchg mov push push jne mov popf add jg and push cmovbe ja bound nop cld jmp jmp mov (bad) lods pop xor or das mov movd sub push mov cwtl adc and jmp fistp icebp or mov (bad) sbb leave data16 stos mov je fmuls lahf jp or lahf adc jle or daa jb dec adc test dec aas ficoml and lods js test je cwtl mov ret jmp dec mov fwait popa or mov jl mov mov adc sbb iret mov std or add push jb in mov or push xor idiv mov lea cmp inc testl cmp jb repz pop push add loope fistp fisttp inc fwait inc and push inc or cmp jl shrl or inc loop orl lea sub add pop sub in sbb cmp xor roll sub je cmp je add or add xchg je (bad) idivb add or mov add daa inc pop rclb mov xchg add ljmp sub xor loopne mov xor mov movzbl mov mov mov call das inc mov adc mov ja sub mov pop adc and aam pushf and push xor decl ja jmp clc pop arpl push loopne cmp jae cmp out jbe shrb jnp out mov mov (bad) (bad) (bad) (bad) jg sub (bad) je mov lea mov lea cmp je cmp mov je jnp adc mov mov mov aam xorb jno adc cmpsb xchg pop pop dec (bad) jg idivl cli je xor jo imul add imul outsl or sar mov mov mov mov jle add mov andb divb mov pop push adc mov mov mov sub sbb push out pop or and leave hlt pop or add jmp jg cmp add mov jp mov mov mov test cwtl sub shr sbb mov mov mov mov xorb add add (bad) out jb mov mov mov mov mov cmp adc shr ffreep jnp xor push inc jg mov pop fadds mov movb jmp insb enter aam mov into scas push mov or sbb call push mov pop and iret push movsb adc sar mov roll push add (bad) je sub mov fadd je or mov movb pop les lds mov push inc idiv jg xor (bad) ja cmp je test je sub bound lret rcr add out dec aam arpl rorb add adc mov xor das jae xor dec push popf stos sbb in jecxz mov mov jg je and fsubr cmpsb loopne std pushl jg push loop sbb push sub sub pop cmp push pop clc sbb jmp in xor sub xchg and inc dec sbb mov test xor das loop and mov in (bad) cs dec ss push add lret (bad) call mov mov sub js aam popf cmp ja mov sbb mov xor mov xchg sbb fcomps sub call mov push and xor xor mov or sbb imul or pop ja or add pusha sub out xchg add iret or inc add jge dec aad and cmc call inc or inc sbb jge xor sub add int jge adc (bad) or (bad) or add xorb pop aam mov add xchg mulb add (bad) add sbb jae sub sub mov inc xor lds ret inc and lock push lahf fistp mov ret pop aaa fs rol cmp add and mov ja aas inc xor ss lds adc call loopne imul pushf push dec in sub mov sub (bad) ja mov inc pop push mov dec out pop cmpsb inc xor add out stos mov ja ljmp and jle shrl aam xor adc ja stos xchg push mov inc imul jecxz adc pusha addr16 jne add ret sub stos sbb jns xchg mov cli pop dec or (bad) ret popa fs leave push sub sbb or stos aad and outsb push or ss bound (bad) adc sbb dec ljmp xor cmp lcall adc mov sub cmp cmovbe and add fbstp ret mov mov xor mov in inc and push adc jns (bad) sub xchg cli addr16 xor rcrl out push int (bad) lock xor popa push or out push ret xchg add cwtl jp jnp adc loopne or mov xchg cmpb or (bad) mov hlt jg pop and cmp jb jbe lcall ret iret inc sbb jne call push mov test xchg pushf inc test pop in mov add mov sub mov add aam sub ret sub mov mov sub or pop mov dec and test add lret dec pop inc xor lcall mov lods nop popl leave adc cmpsl push arpl (bad) dec adc pushl aas inc mov cwtl loope mov mov movb inc lds fidivl add mov pop mov inc mov sub arpl push adc loope cli pop add push fdivr or inc jmp ljmp push mov xor ljmp gs cmova cmp fdiv push inc inc insb cwtl jae add lret and add adc pusha sahf sub jmp jmp pusha outsb das pop lock pop jg rorb push (bad) mov mov sub cmp push mov dec jecxz js cltd nop sbb int shlb test lahf or insl dec test dec test leave call and std sub (bad) mov or dec pop and imul popf or fbstp sub cmp cmp add push test push adc shrl ja je and push scas mov ljmp or lock dec sarl subl and enter mov adc push and andl xor lock orl jns mov sub cmp icebp out inc add sti ja fisubl mov or in push inc xor xchg pop outsb add adc cmp add mov clc mov iret push pusha and or push fdivr sub lods ljmp aaa pop test outsb pop mov and cmp jae (bad) xor rorb fldl cmp je mov ja decl cmp je cmp mov ja cmp jb adc ja inc jnp test nop pop pusha push mov mov adc add inc cltd add lea cmp push push (bad) push adc adcb faddl (bad) fildll sub (bad) je inc js es mov mov dec or adc aaa or shrl popf ss out adc mov mov (bad) (bad) call call jbe jmp (bad) aas cmp aam outsb mov into cld inc mov (bad) fist icebp sub sub call pop cmp lea lea xchg je,pt dec leave mov call ja mov cmp sub out inc jmp out or xchg movzbl mov out or fidiv inc push jl push sbb sub andl jo dec std ret push push lea adc sub jb (bad) and call dec or mov ja test je add lcall les repnz (bad) xor faddp or dec push clc or pop or popa add add adc enter pop in dec in jl add sub push add cmpsb pop mov out add rcll xchg sti stc je mov scas sub psubq das inc cld jg mov cmp mov jb test jne mov or jae jne sub inc inc mov jmp sbb ret jge adc inc adc in or aad adc sbb addr16 (bad) cmp xchg arpl push or add orb cmp add enter sbb add cmp dec cmp jbe add call inc push idivl bound adc popa add and (bad) jno add jg or xchg mov movl scas and call ret iret ljmp pop sub shrb push mov add sub add cmp sub xchg jbe mov xor jae cmp clc ret aas add test movzbl mov jge test je add push push js addl add je jne pop mov jg mov mov jecxz ja aaa sub xchg test mov je daa push add add add add pop gs sti cmp jne pop push mov roll into popf mov xor jmp fcoms pop sub shrl xchg cmp loop in loop cmp int3 push les scas adc and call xor xchg lock mov cmc nop inc iret push push fbstp cmpb adc add hlt (bad) aas mov or cld mov cmp lea inc xchg test cmp jbe outsb and jbe push pop leave xor jmp mov mov mov pop inc dec xchg popf out ffreep (bad) or aaa and mov inc leave fidivl push push ss add adc jp outsl repnz or pop mov outsl push or lcall pop mov pop inc lret hlt daa cmp sub test je fistpl out jp out scas loopne or fcoms rorl incl pop data16 (bad) or inc inc xor ds lea daa push iret rorb in in and adc jb test mov add add add push xchg roll in call or cmp mov lret sub pop cli dec jecxz stos adc clc popf das or nop push lea sbb arpl mov loopne ja add shr push jge loop or negl pop jmp roll add inc pop push cmp push outsl rcll jg cmc and loop add push cmp ja aaa sbb push cmp pop and inc movl hlt push popf fldcw push push push pop fsub and sub add pop shll jge call js jp mov jnp xchg add push mov sbbl ja insl inc mov and mov js mov rclb sbb adc mov adc xchg adc mov bound dec outsl jmp xchg mov addl test or dec dec add and frstor mov sub outsl jne pop adc outsl push dec xor lret dec jnp in push push dec outsl (bad) stos cmpsb dec outsl mov subb fs pop pop jno adc sbb es test xchg outsl or cltd add jb mov inc adc mov es and outsl xchg push aam shr outsl out pop enter inc jae xor nopl mov ret pop dec mov cmp push mov mov je cmp jg inc mov (bad) sysexit push lret mov aas lret pop mov test add loop loope sub dec inc dec hlt xchg add pop (bad) ja mov fdivs adc movsl cli add add cmpsb shlb (bad) mov aaa or call dec or cmp or fmuls mov mov repz pop adc add iret rorl xchg pop mov pushf mov or cmp inc stos pop outsb das imul stos pusha jnp sbb or inc sbbb je mov and pop ljmp into dec or into jbe mov enter inc rorb (bad) sbb dec inc std cmpsl sbb into cmpsl xchg mov mov mov push jo movb ljmp lea jo subl fild mov inc fwait add inc adc push (bad) (bad) cmp jle xor cmp mov je dec add jmp call cmp mov fcomps jle jnp (bad) mov sbb sbb (bad) jae mov iret sub rcl mov (bad) lcall mov cmp jle mov xor jmp pop jge adc push or cli aas sbb test insb lods insb cmp pop lea sbb jne jmp pop xor imul dec push sbb pop mov std decb imul sarb std (bad) das mov test je mov inc mov cmp add cmp inc adc mov pop mov in mov add and cmp sbb jmp push cmp jae mov sbb (bad) je mov rorl adc iret jle mov test jmp rorb cmp jg dec adc mov mov cmp jb jg popf ja orl sub jg cmp jbe lahf mov lret (bad) cmovne cmovne xor scas sahf add jl cmove inc add subl mov shlb mov push test sbb xchg and popf adc add inc mov mov mov mov ja sub adc in push or mov mov jmp lahf cmp jb push mov inc test mov jne cmp add (bad) fnstsw xor mov mov jmp mov sarl cmpsb in cmovne cmove jmp mov jg mov (bad) or pop fldl clc std (bad) (bad) jmp outsl mov cmp jp mov push sub mov xchg rorl mov rcrb loop adc mov cmp fdivs sub shlb pushl iret cmp jl jg cmp ja mov ss mov mov jmp sti (bad) (bad) out mov mov push and cmpb mov je jmp mov xor jmp add mov xor xchg sbb pop sub lahf (bad) call test je mov cld push mov test dec sub test lods mov jecxz adc push and je or fstpt (bad) jecxz icebp and test jnp test push lahf sbb pop sbb ja rorl dec je mov arpl popa ficompl and add and call mov jae shr cmc outsl sub (bad) mov jne mov cmp push repz adc jne inc rolb cs add call cmp in mov jne out sbb adc or (bad) fsubrp leave adc sbb xor sub jle decl call js ja mov mov pop stos ljmp xor cmp je cmp jecxz jp mov mov mov sub inc fcoml jns call lock decl test bound push cwtl icebp or push jne mov and push mov loope add rorl push xchg mov jne mov repz decl je mov mov mov mov imul sbb cmp dec add pop add mov popl or dec cmp dec sbb or cmp pop cld adc (bad) add add sbbl add lret and pop cmovle out jge xor cmp or add add scas ds out pop push add daa or mov and mov ljmp movl call insl mov int3 push scas jle call bound sub orl aas xchg dec adc loopne sbb xor sub and push jg outsb xchg popf mov aas stc pop lock pop das xchg das insl aas adc rorl jo (bad) ds roll mov cmp incl or or inc and mov push jbe std sbb sub out pop add sar inc sub jge push lea lea lea lea movzwl lea jle (bad) decl mov add divl cmp mov jle jmp cmp adc adc jg xchg jmp insl lea mov push (bad) sar cmp jle movzwl or and cmp ja jmp scas sbb (bad) mov push jbe mov lea lea mov shr bound incl ret sar cmp jl movzwl sbb adc (bad) ljmp push sub jne mov shr add sar cmp je lea (bad) xor adc outsl fmuls sbb test jne pop add lea mov mov mov cmpsb and jnp test je inc jmp or mov sub mov dec in or je cmp mov and neg mov clc je cmp adc mov je sub mov lea shl lea fdivp incl iret mov mov sub mov icebp or jg mov add pop cld cmp les clc jg jb ja int3 or pop and jbe shl mov xchg or (bad) ja xchg mov cld mov jle push dec push ret mov xor and mov mov mov jg cld pop pop pop (bad) sub fwait inc lea mov (bad) jbe fnsave repz je scas test iret lea mov shr subl add sar sarl adc test jbe mov sbb sar lea sbb fstpl ljmp adc jae push add aaa inc xchg adc cld jg mov inc je add loopne popa (bad) lea mov (bad) (bad) mov inc mov shr sub add sar cmp jge divb rorb call pop std outsl clc jg clc mov mov jb ja add jbe jmp nop lea adc (bad) fidivr loopne lea sub mov push add ffreep pop cld sub mov mov mov jmp mov mov and loopne rolb pusha out mov fstl (bad) mov out jmp pop out lcall mov ja decl in mov sub cmp jle and fild add mov sar out clc incl movzwl subl lea mov sbb mov (bad) mov (bad) cmp jae fisttpll xchg cmp xchg pushl mov mov mov mov movzwl mov (bad) jg and movzwl icebp jb cmp lea jbe lea mov (bad) fucomp ret sub push add ja cmp jae mov mov movzwl (bad) mov cmp inc cmp jb (bad) ja fnop mov inc std cmovae (bad) mov mov das mov mov rcrb mov and sub mov clc add mov jae mov shr add rcr push inc (bad) std mov and je outsl or out dec add in add inc and aam sarb inc sti jno add test (bad) pop dec cmp je je mov push incb push je movzwl or call add cltd inc inc lcall pop movsb mov xchg pop adc ja jg outsl add outsl add cmp or cmp jb xchg adc out lea xor mov jmp mov mov and or cvtpi2ps stc (bad) decl inc std int in mov sti and inc cli and dec testb icebp sub enter sub in inc arpl push imul inc in inc add shl (bad) into aaa mov dec arpl aaa mov push (bad) jmp ljmp ja sub adc je lea cli ja hlt cmp je rcll sub repz es or mov pop add into cmc (bad) rolb es add mov ljmp je movzwl cmp jb jp cmp jb jmp lret mov mov hlt out mov push decb out mov inc cmpsb shll je rclb shlb push add pusha inc and fnop es sub add sub add and add test sub repnz shr jo cmp cli xchg push cmp inc andl adc inc xchg adcl decl adc mov cmp jb sub adc mov mov cmp jae inc jae jbe je mov call sub ss das push shrl ret xchg adc nop push jae sbb (bad) jb rolb add outsl sub push and outsl sub cli add lds cmp es (bad) idivb xor cmp lea jmp dec (bad) cmpsb das outsb adc shrb ds adc push add add pop jae mov mov sub push cmp push addb rorb xchg xchg mov sbb or add xchg sub or flds cmp xchg lock ja ret push movzwl mov sbb mov insl aas stos pusha jbe inc fimul dec xor orl daa jne add cli div jmp ret or xchg xchg jle xchg pop dec pop flds jnp popa adc sbb adc dec jge mov xchg adc add add fwait pop js or mov cmc fs rcll dec das jl and popa ds rorb mov mov cmp seta jae jo negl add outsl and add inc or (bad) jne jmp out ljmp push call mov test jne js mov cmp aas mov add decl or idivb inc or inc ret sar dec or sbb fildll test lahf scas adcb (bad) adc inc sub call shrb add rorb adc xor mov add mov add add pop mov add push mov mov or adc in xchg push pusha in lret repz call call mov mov decl sbb in mov clc inc mov adc pop push dec dec adc mov add fnop icebp add xor out or add add xor cmpl sete add cmp jne test ficom push or sti (bad) incl enter add add dec add add addb cmp je mov mov mov movnti adc (bad) enter sbb mov mov (bad) icebp in adc add cmpb aad pop (bad) or clc js pusha inc in inc pop int3 and xchg inc push mov add fs jl (bad) lods xor sbb pusha scas sub lahf pop dec in inc clc rolb dec or mov and add or xchg add adc push sbb data16 rorl iret pusha lahf jle rorb pusha sahf sub adc xor xor mov xchg pop sbb inc jg aad jbe cld (bad) js xor call dec enter mov inc and nop xchg popf xor cld or inc cwtl fs xchg pop dec xor and pop notl inc dec lods and pop fld (bad) fsubp xchg out mov inc out icebp aaa cwtl bound adc sar lea jbe add add loopne call sub lea lea ja mov or out sub lock mov outsl inc xor sbb mov call fs inc pop push lea bound inc push adc mov mov hlt fdivr push mov test mov jne sbb mov push jg dec mov cmp fstps out ja decl push add jp je or cmp pop inc lahf cltd lret or mov ret sar mov mov test jne jmp cmc mov mov mov (bad) mov jmp xchg mov sbb or adc je imul mov mov je inc jl fs add pop cltd jnp pop pop mov mov and mov pop add mov adc mov add mov mov mov mov pop mov test jne jmp sbb add pop jp jne test movl add out jne add fstpl cmp test mov test inc mov mov sbb lcall fiaddl aas add test push add cmp cmpsb mov rol mov push add lret inc test and sbb cmpsb cmp xor in mov xor sarl ds pusha lcall jg cmp add inc (bad) iret mov mov mov or add jmp add and cmpl or or mov jne ficomp mov (bad) push add cwtl decl ja leave mov pop add dec add dec add pop adc dec adc fadds xor jns ret jnp sti or or (bad) mov test jne (bad) lock or and sbb sbb es dec clc (bad) jns mov mov nop test je cwtl cltd sbb ret mov or (bad) (bad) (bad) (bad) aas push xor or sti jmp add add loopne xor jg mov mov jmp pop pop push outsl call mov jmp push enter das lret mov stos jne jmp or mov jmp jae adc add mov outsl xchg fwait add icebp test cmp leave add mov loope dec aas mov jne mov dec sbbl xor dec fisttpl ja xor pop add push dec mov mov je outsb js jno push push or adc jmp dec (bad) pop cmpl je scas mov mov mov pop mov mov lods sbb ds je jl ret ljmp repz mov mov mov pop jmp idivl out mov jmp imul lret fcomip out or jmp decl out or push mov jmp ja or pop sub cld maskmovq idivl jmp lods mov jmp outsl ret mov mov jmp and sti jmp nop pop sub mov and rol loop faddl adc add movl je hlt adc scas dec or and fistpll jmp (bad) xor test cmc in cmpsb (bad) sbb popa test je leave jne mov adc adc xor out aaa mov add movl fisub jg or inc or fwait mov jmp (bad) iret cmp je jnp idivl add ret mov pop (bad) inc mov fbld js out mov mov clc mov and sbbl pushl aas add es cmpsb xchg add jmp (bad) (bad) (bad) decl (bad) test mov adc outsb cmc jne mov add clc xchg cmp sbb jmp add add jo jmp sbb lret js jb dec jle lock pop mov mov test mov jo lock xor mov cmp cmp xchg sahf cmp jb dec lock xchg dec add rorl test jmp ret pop adc jmp sbb jmp xor lods sbb mov inc jnp cmp (bad) lock add jns cmp insb mov mov mov mov pop jno mov (bad) lock jmp sbb (bad) or mov ds jmp ds or dec (bad) dec int jmp in dec mov jmp sbb xchg mov jmp or pop xor add bound mov mov or inc mov inc (bad) xor or mov mov (bad) (bad) outsb inc push (bad) sbb mov or xlat inc cmc and jmp insb jl xchg inc inc adc pop shrb decl std decl add scas ds or push add add pop or pop mov mov sub pop push add xor mov sub xchg dec inc out mov inc and mov rorl in or jge fistpll pop mov adc push in test mov clc pushf or scas (bad) pushl sbb mov mov lea mov mov or inc add adc xlat jne add fld1 dec mov mov pop jl rcl (bad) mov mov cmp lds mov xchg cmp push or dec insb mov adc gs fcmovne (bad) decl push clc mov movsbl fldln2 pop xchg mov enter dec fnsave pushf adc test or ds popf outsl fcoms cmp paddusb mov inc js jne ss lea ja adc ret gs lcall mov push es mov call jbe mov mov adc sbb mov xchg mov or and jg inc out sub call push cwtl pop inc fs pop add repnz adc loop bound decb rep add sub popa clc push pop pop inc add dec jle (bad) addr16 outsb outsb call ret (bad) (bad) dec or jae (bad) jecxz fidivl sbb idivb jg or iret cmp fild inc clc xorl mov call call hlt rcrl adc cld cmp lret lds aas and fnstcw call xchg in pop pop cltd sbb cltd pop add sub call ret test ljmp nop push lea daa mov xchg cld push push inc mov imul pop jne sbb mov push ja sub jae call mov add mov cmp (bad) enter xchg mov loop popa mov jmp adc sub das push rorb pop lods cmove sarb test je dec call fsubr (bad) decl loop cmp pop adc movl adc outsb nop push jle scas jae xor call mov je lea sahf aam inc xor and inc std (bad) outsl xor and sub add shr rep js rcrb xchg mov cmp es jne call xchg pop xor push bound xchg sub pusha jns incl ret mov call call or sbb mov jnp lea add decl add adc incl icebp ffreep xor xor (bad) lea sub cmc (bad) jg or mov subl cmp je mov mov mov push sbb je loopne out jne mov add mov call jg add je jl sbb add push add jge cli add call adc clc add mov repnz call mov in insl scas pop and mov inc hlt mov jno push mov mov mov mov mov and scas fldl lods or adc decl add mov lea mov xor call add inc sysenter or pop (bad) jmp mov sbb jecxz ret call outsb call std fsubrl js ljmp xor mov xor inc pop mov cmp add jo fsubs je call adc inc xor mov je mov aaa add mov jbe shr cmp sub imul popf pop add lcall addb dec cld pop mulb (bad) pop pusha sub pop xor sar and insb sar add cmp ja mov test js xorl mov jmp dec mov mov ret add pop and add cs sub test sub add jne ret mov sbb int dec adc mov pusha fistpll add notl mov rorl cmp jbe add mov add cmpsl mov (bad) jmp leave xor xor push inc insb das inc adc push gs jae xchg (bad) fistpl or sub and outsl dec adc inc mov sbb inc mov mov jle out ficom inc mov inc loopne sub inc mov lea cmp mov push dec inc movl add jo mov sbb mov adc inc (bad) into add popa and mov addl xor jbe xchg lea xchg in pop mov aaa nop sbb call push roll negl in add jg jecxz popa loope rcr inc sub mov adc mov call in ficomp movl add enter or inc inc mov mov xor call add push cs mov outsb clc add mov xor cmp std adc je add dec dec lock and add and pop cwtl and inc pop add inc push sete test ffree and mov je loope test mov test sti or jne adc jae pop dec (bad) fistpll mov mov leave dec adc or sub sbb fisttpl mov jb dec outsb sbb clc adc decl das jb cmp push popa aas jp stos sbb and imulb pushf jl cld xchg mov (bad) mov je pop mov push int call mov insb mov xor cmp jne jo pop pusha mov add (bad) jg add jl dec add cmp paddb (bad) fldl and movzbl xor mov cmp je mov call inc or mov adc addr16 mov fsts mov dec xlat sbb or jmp ficoml stos dec out bndldx adc std mov mov xor call mov inc mov xchg push decl xor (bad) cmp pop movsb dec add cmp jbe testb add test rclb ret sbb sbb xor add ja cmp add xchg es sbb js stos outsl or mov js inc adc (bad) mov inc mov sbb std nop (bad) incl pop cmp loopne adc xor pop popl jne ja inc pop sbb movzbl mov call aaa movsb ror std pop dec sahf pop push and cmp je fdiv cmp jmp and cmpsb je push sbb sbb (bad) pop mov dec outsl xor pop or (bad) repz test mov je jae mov test es jb aaa adc daa test call mov fs xor leave dec add out xor and cmp and add testb mov pop inc loopne adc ja xchg arpl in xor fist cli aas test cmp ja and je fistpll outsb and shl neg or mov fidivl imulb aas sbb ret aas movzbl add mov movb fisttpll mov inc out cmp (bad) ja icebp je jg xchg and je dec inc push (bad) xor sbb ljmp add insb fisub mov fisttp pop jmp jmp and mov (bad) jne test je xor xor aaa mov sub jmp push pop mov mov jl call adc arpl movl test stos (bad) clc mov push scas (bad) xadd jo or leave ja arpl mov out sbb pusha adc insb xor xor call add mov pop imul jne and fisttpl or test call sti pop jo sbb mov inc adc pop adc xorl int frstor mov das pusha movsb add rol inc inc cli push xor dec (bad) jbe popa jmp push call cltd test push cmc (bad) (bad) jmp ffree push sub jle gs loopne cs mov cwtl inc sarl adc cmc incl mov add in cld xchg adc movl add add call pushf sub adc push out xor call push hlt sbb add in pushl push lcall lock push sub jno call add (bad) (bad) popa ja outsb mov stos call jg mov gs mov pop pop pop pop lea mov push mov push push mov xchg nop subl sub call test push push je mov icebp jg mov jns adc push push xor jg in fimul call add rolb nop nop mov add sbb jbe add sbb mov jne jmp or adc sub icebp or push adc rorl inc xor jp leave mov xchg dec add movl cmpsb cmp or (bad) jae and and (bad) cs lods xor cmp les fidivr movl push mov dec jne dec inc test gs lea mov lods rclb std xchg cmp mov jle pushf sti sbb movsl std (bad) call or push mov mov insl mov add ja lcall orb inc and testb sub pushl std or or in or scas push and leave ret stmxcsr xchg mov iret pushf pushf pop mov xor (bad) and push popf pushf pop popf xor test xor cpuid sub test je jp inc (bad) loop mov push mov test outsl push jmp mov add hlt mov and mov add dec add add dec add scas sbb adc add (bad) incl inc popa out aas or add add or fist (bad) pop add icebp (bad) call add add add mov jl add mov sldt fwait pop int3 adc mov jns (bad) and fildl sbb jg sub or add mov inc decl add sub outsl add xchg add outsl add out add add decb add add add cmp (bad) lcall add push jb add add add add std out mov add add add jl dec xchg sbb outsl pusha into scas sahf or add pop mov or add or std jle,pn or insb add int3 sub sbb aaa add jno jbe test iret incl or push sub add jae or add in jae wrmsr sbb add pop test sbb add fs push xchg lahf add daa sbb mov xor inc es mov or pop cmp jne mov or add sub incl adc mov add add ret sub sub add push lea add jg xor add out cmp inc add push add xlat and andb adc (bad) jg add mov add mov add test xchg lds add ja out adc inc add imul dec add jae jnp sbb cmp loopne dec inc dec lret push cmp pop add daa mov adc iret std test dec add pop lahf neg cwtl jnp and mov (bad) fstpt add dec add imul add pusha adc jo dec add outsl dec add outsb dec add pop push (bad) or inc mov add xchg and loopne mov dec add jg cmp inc dec out mov adc cmp add addr16 (bad) (bad) jmp jae fs sub insb add jb imul jb insl gs imul outsw adc (bad) (bad) (bad) jg outsl outsl insb add je insl add outsb add imul jb outsl (bad) (bad) (bad) pushl insb outsl add outsb outsb arpl outsb add popa insb add addr16 je (bad) (bad) ljmp gs fs push popa je add add jb mov sti pushl bound outsb add js xor jae arpl je add jb dec (bad) (bad) (bad) xor xor xor imul jo add add outsl add addr16 (bad) fstp popa addr16 outsl outsb push pop insb gs insb add pop arpl jb mov (bad) outsb je jae popa mov or popa jbe pop leave nop gs adc in jbe jne jle xchg rcrl cld fnstenv lock or add fbstp or mov add jl push popa mov sti out movups lcall xor add aas jnp scas inc loope test (bad) std push add addb adc fwait (bad) flds mov inc and push dec inc dec push push and arpl fucom jmp jbe fs gs je sbb dec sbb add or push sbb pop xor cmp xor sbb std jo jne gs adc or neg mov or je cmp jne sub sub daa jb sbb jg into in xor insl inc sub inc je insb sub cld xchg mov and and jne (bad) lock sub and fs dec insl mov in fucomip add fs and cmp jg jg and and sbb xor sarb sti pushf add xor dec enter add add aad dec add pop pop (bad) (bad) fstps and and and and outsl (bad) (bad) ljmp jo and and xor sub insl gs outsl sbb (bad) inc insb xchg adc and cmp aas std mov add bound insb outsl bound je jb gs jmp outsl jo fdivl and insb imul add cmp call cmp fs cmpsb (bad) cmp and push outsb popa jne push arpl add jne and and and scas fs and gs and insb jns mov jp fs incl gs arpl gs jmp and jne jo jb gs (bad) dec seto xor jge mov stos cmp xor mov add sbb fwait (bad) jg leave jbe sbb fs outsw jne and std add (bad) dec add add pop rorl mov dec add add cmpsb imul push cmp push dec add xor mov js roll clc arpl into iret (bad) int scas add jae add pop iret push es mov mov in (bad) pop dec cmp jne jne insl imul and divb push sub outsb outsl outsb arpl push insb je ret or outsb outsl ja cs arpl inc add lock dec push dec dec and pusha cmp test data16 lods enter or add and std (bad) cmpsb arpl outsb je gs jo jns pop ret out decl jb outsl je insl jne je outsb or cltd lcall outsl ja bound outsl mov jbe insb jne jae xlat mov outsb or cmova jae mov and outsb mov bound jg (bad) push inc insl bound and and insb outsl outsb lret loopne popa data16 xor xor (bad) pop pop das insl insl popa and and jge ss nop or jb popa sbb and gs push nop dec outsb arpl arpl pop in pushl gs imul and arpl gs loopne jbe jae sahf addr16 sub fstps (bad) imul loope adc add inc rcr push arpl popa arpl push les push pop fildll jno ret ret and jb pop outsl pop in rcrb mov push sti push push popa ret bound pop and jae outsl jb es jne insb gs and bound inc jmp mov or outsb cmp gs outsl outsb les xor sbb add insl imul xor fs dec add ja jno gs cs jo arpl imul sbb outsb je js out add dec dec (bad) xor add jo mov dec repz add pushf enter sarl dec add jns mov dec pop outsl es jle lcall scas sbb fiadd cltd mov jg iret loopne shr sbb xor and xchg ret add or xor fs push (bad) push inc pop insl aaa je and sbb push stos mov insl pop xor int or mov sbb jae fs cwtl jae adc sbb mov dec cmp mov sub jbe fs add out push aaa cmovl jg push jo cld aaa mov imul or dec dec and lds xor bound gs (bad) push andl mov aas cmp test jae push imul push outsl and xor cmp cmp jo lds arpl jle push xor mov mov adcl int3 test (bad) es inc mov inc add js data16 jb arpl add das das add std mov insl sub push outsb imul mov cs gs push sar aas addr16 jb and inc and sub jo scas outsl xor outsw jb popa and fldl stc pop dec push out jg call jne insb je push dec outsl jbe xor and (bad) pushl xor aaa and je and inc add add and std (bad) cmp (bad) cmp imul inc push sub or call pop jp jbe xchg jns je outsb out add add insb imul pop addr16 cli xchg jmp outsb popa outsl pop outsl jo outsb fxch rolb (bad) (bad) les cld or sub fidivr js dec and stos dec or sub jle xchg daa and clc iret sbb dec and push outsb and sbb test xchg cmp adcl adc dec in dec add insb movsb xor aaa dec mov or dec add push rol call xor lret xor mov xchg adc pop js add jae sub outsb mov sub lock add lahf inc lea add pop enter inc mov cli jne insb dec mov add cmc xchg jb xor push sbb mov cmp mov pop outsl adc movsb test sbb add (bad) ja mov rorl add lcall xor je jbe bound imul call push push add jne popa data16 (bad) jle je or jb outsl jb (bad) cs cltd sub lcall mov sub add js jne,pt jle pop push push add outsb je xchg jb rcr mov gs je jns and adc mov add jae push inc out in pop jb cmp mov sbb jbe (bad) pushf imul unpcklps push xor cmpl ja std cmp or test xchg inc out xor lea icebp setl insb adc movsl paddsb mov out add jmp in add mov rolb add das xlat xchg adc adc cld adc sbb and arpl imul es sbb sub adc cmpsb andl jb push or sbb jg xchg lock repz arpl jg aas add popa fs xor (bad) ljmp ljmp pandn test mov and out out inc mov push pop dec comiss add mov (bad) incl sub imul cmp cmp fsub (bad) call jae je push cmp jne dec cmp push insb cmp add cmp mov and push push dec dec dec push pop or jae or and das inc mov inc dec and add pop test and fs jne je mov sbb outsl leave pop xor insb cmp sbb leavew and jb cs das dec jle cmp imul and inc inc jne push push inc push dec inc dec xor inc inc mov (bad) bound jns xor mov fwait std push push push dec push inc xor sbb es pop cmp add add jb add jge and jbe popa jbe cli sbb jl and push jb mov sub xor popa jne outsl cmpsb insb arpl arpl add push mov outsb and fs jb fnop jg outsb je shrl je sub cmp insb add sti sbb jb sub repnz ret inc jae xchg or or jae std loopne xchg arpl xchg jne movsl (bad) and (bad) adc and add cmp out push je bound jl sti imul (bad) out or jae je jo outsl arpl jae and xor push and jl (bad) mov and jae and js push adc cmp xor inc jmp or cmp aas fld faddl pop sbb xor imul sub xor outsb lds and fcompl outsb outsl sub mov and imul jne addr16 xchg xor inc insb pop xor adc sbb les pop adc clc sub frstor xor xor imul mov jg mov pop arpl je cs in outsl insl and mov ret jmp or cmp jb outsb push addr16 add or and mov mov cmp (bad) std cmp and insb outsl popa and lahf xor jne sub aad jne pushf out lds and inc insb or pop pushf fiaddl divb popa xchg pop insb and lods popa xor and sbb adc aaa adc jne and loope cmpsl sbb mov arpl (bad) leave clc pop mov fs aaa out pusha out shrb sub js adc push inc popa nop mov jbe je fmull adc jb jl pusha outsl sbb inc sub add sbb lret insl sbb ds add fild xor cwtl adc ret and cmpl bound das jb and mov jnp insb fs imul xor repz push lret sub imulb add inc push dec xor push and sbb cmp imul movb jb shl andb imul jo popa jns sbb jae pop bound sub ret (bad) xor xor rolb and inc movsb cwtl inc dec jg sub xchg add xor dec in adc sbb aas sti cmpsl or insl and and aaa insl push inc push push psllw movsl cmp das cmp fldenv and and popa scas add aaa das daa les iret push cmp insl push fs pop xchg xor scas adc dec idiv xor jbe imul pop mov ds (bad) leave xchg add dec mov mov ljmpw dec push inc inc inc push cli adc insl and fdivl cmp aaa insl sub and and loopne add push inc movsl mov ret das jge inc cwtl je test push popa xchg fwait andb pop sbb loop and arpl movsl test or or ficom jnp decl inc inc and inc inc (bad) mov mov jb pushf outsb bound and mov xor push ja in ja aaa and dec xor and sahf and inc das pop jle and pop dec and pop sbb cltd xor dec popa (bad) fistpll cwtl cmp insb pop pop push dec dec dec and and rcrl out test add xor je or jg dec dec dec inc dec and xor add cmp add sub and cmpl push xor or pop bound out cltd clc dec loopne push daa jo int3 xchg lods add cmp jle add outsb das popa mov insl jae mov jl and cs jae xor mov mov or sarl xlat sub in pop xor and and xor dec cmp ret cmp jae xor or and pop (bad) aas lcall dec bound ja rcrb mov mov (bad) jmp das clc pop push add dec add jg std add imul or add push add imul ja insb adc dec jne and and jae arpl jne insb jns cmp bound push fist gs imul int and add outsb add add pop inc or pop add push je inc gs mov or and push imul mov jmp dec push and add ljmp push stc push icebp adc inc loopne cmp adc cs jl add (bad) test je add and inc adc (bad) aas data16 mov fsubs enter insb fwait std jnp add mov addb add orb fmuls adcl mov mov pop sbb fstpl jae cmp aas jnp xor arpl add fsubs add outsl mov ja adcb scas or xchg add add (bad) (bad) (bad) incl add push (bad) xor movsl hlt xchg movsl xabort xchg test pop mov mov cltd (bad) (bad) (bad) (bad) out idivb lea pop or (bad) or mov ficom enter mov (bad) (bad) (bad) ficom cmp nop lock lock pop add add loopne,pn loopne test into push roll push out sub sub sbb mov cmpsb bound jl out lcall in pop mov mov lcall add mov pop mov inc rorb (bad) (bad) (bad) decl xchg out xchg out sarb adc mov es jg mov into inc leave inc pop leave (bad) (bad) (bad) decl sbb outsb das in das (bad) in inc mov test mov inc sbb sbb std (bad) (bad) (bad) lcall pusha and inc and fidivrl push push add add mov (bad) (bad) (bad) jmp fwait jbe pop in sub pop ret ret lds and sbb cmp jp (bad) (bad) (bad) (bad) cmp mov (bad) out pop out fcomps jle ret inc ret cld inc jle repz add icebp add (bad) (bad) push adcl rcrl in in pop push pop mov pop xor mov call stc loope or jmp scas xchg scas fist jae dec jae bound push (bad) (bad) (bad) jmp imul push aas sub sbb or adc xchg arpl push divb push xchg inc jmp gs (bad) (bad) incl jg pop loop pop popf xor sub sub aaa iret clc mov or adc adc (bad) (bad) (bad) decl das jmp mov pop mov push adc or and pop ss dec ss lods mov mov fwait (bad) (bad) (bad) lcall fistp cmp es es cmc mov dec jg dec int dec (bad) (bad) (bad) (bad) jg push mov ljmp sbb sbb cmp je mov (bad) (bad) (bad) lcall inc jb jb cs inc ja ja sub mov mov sub sub (bad) (bad) (bad) pushl mov pop movsb movsl add add movsb jbe xlat dec xlat in dec jbe adc popa mov (bad) pushl dec cli into jge fisttp push fstpl fstpl xchg jno mov lcall mov xchg mov mov cmc cmpsb mov imul or mov sub cltd sub inc loopne pusha mov jmp jecxz and and pop jecxz cmp inc repnz sub sub in mov or (bad) (bad) (bad) (bad) mov inc lret lea jo jo fldenv scas fisttpll in jb in jns jns (bad) (bad) (bad) (bad) ficom sub cwtl mov and and mov pop fimul adc mov insl (bad) (bad) (bad) ljmp lds sub dec jnp in sahf in in xlat cmp cmp push in xchg push lds (bad) (bad) inc xchg das xlat lcall push adc xchg adc (bad) (bad) (bad) dec mov fnstenv adc leave adc add or or push add cbtw sbbl pop (bad) (bad) (bad) push mov int3 lock js lock aad mov jecxz xchg jecxz mov pop (bad) (bad) (bad) push mov sbb pop rcrb addb mov in jle (bad) (bad) ljmp mov jo fmuls loopne jo std or or add arpl jp jp (bad) (bad) (bad) (bad) fbld das pop rcrl ja xor scas inc out arpl jo xor (bad) (bad) (bad) pushl and lret sbb rcrl in out adc adc push std mov gs mov aam (bad) (bad) (bad) decl and adc xor es xor ret mov das jno das ret mov addr16 (bad) (bad) jmp mov std push xor dec or mov gs cmp cmp xchg push push stc cmp push xchg push pop or push cld popa popf (bad) popf jecxz cld jp leave inc leave hlt inc jp daa out lods out mov (bad) (bad) ljmp xor mov jge sub out movsb xchg movsb xlat xchg out cmp mov (bad) jmp cwtl mov cwtl sbb daa rcrl sbbl data16 mov (bad) (bad) jmp push (bad) (bad) jle test push cmp out out stos cmp xchg sahf sbbl inc lret (bad) (bad) (bad) dec mov mov sub imul imul inc cmp push cmp cmpsl sub jns push (bad) (bad) (bad) (bad) jns mov arpl mov daa sub push lods aaa lcall xchg dec cmp (bad) (bad) (bad) (bad) cmp fs cli push cli enter cmpsb rorb call and and push adc in (bad) (bad) (bad) (bad) (bad) fistl push sbb or cld mov mov insb dec mov imul lahf js pop out (bad) (bad) (bad) lcall mov popa outsb mov sub icebp cmpsb icebp xchg cmpsb les (bad) test jb (bad) (bad) ljmp movsb mull xor mov pop mov xchg aad push xor (bad) (bad) (bad) pushl aad dec lds or jmp jmp pop outsb ficompl ret scas mov add (bad) (bad) (bad) decl lods jns mov icebp insl shrb rcrb xchg loopne fcomps (bad) mov stos (bad) (bad) (bad) pushl adc cli or or pop repz mov and scas ljmp lret mov inc addr16 and sub sub sbb outsl or fdivrp (bad) (bad) call outsl lock mov sti mov mov outsl dec pop lret xchg mov insb and jo (bad) (bad) jmp push pop or or push (bad) push out jae fs repz and (bad) (bad) (bad) jmp lret mov pop jl call lret pushf call arpl xchg ljmp (bad) (bad) fstl jg fsubl pushf xchg xchg fwait xchg test stos nop stos (bad) (bad) (bad) call inc xabort jl es les les sub stos in stos int3 nop jecxz fdivs (bad) (bad) (bad) (bad) fcoms (bad) add add cmc add sbb adc cmp sbb cmp mov (bad) jmp pop loope pop push mov stc scas imul shrb mov (bad) (bad) (bad) call pop call push imul daa not mov fsts (bad) (bad) (bad) (bad) cmp jmp xor jmp in mov push mov and xor xor rolb mov (bad) (bad) mov jo dec jo pop xchg pop xor repnz repnz xor pop (bad) (bad) (bad) pushl and and sub and and xchg fistl dec xchg dec ljmp mov mov push jp add (bad) (bad) (bad) decl clc adc fwait sbbb cmp cmp sbb jne jne (bad) (bad) (bad) (bad) fisubl test push mov xlat test push (bad) push adc test add mov (bad) fcompl pop pop (bad) (bad) (bad) inc (bad) sub lret mov push mov pop ret cltd ja mov pop push sub adc jnp inc lret inc test (bad) dec jnp mov cld pop dec cld test or (bad) popa fcmovbe insl sub dec cmp cmp adc (bad) (bad) (bad) ljmp and or adc add cmp movsb (bad) xor or (bad) (bad) (bad) jmp sub adc cmp push mov mov lods rcr jl mov test pop or (bad) lcall sub pop or or or push femms or or or (bad) (bad) ffreep add push or or add push add pop add add or add or push add add or add femms add or or or add (bad) out decb or add pop add add push or push add add or (bad) decl or add add push add push femms or add or or add and incl push add add add (bad) (bad) aas dec das addr16 push scas addr16 cmp dec movsl jg push push (bad) (bad) (bad) decl sbbl int pop fcomps jl pop fnsave cmp divl or (bad) cmp ljmp (bad) stc movsb dec cli lock (bad) aas and jb fisub jnp adc push subl xchg dec lahf dec (bad) sub cwtl cmp pop inc cli pushf add rcrb data16 (bad) (bad) mov adc mov mov pop lcall or add (bad) (bad) lcall jmp pop out fcoml mov imul gs or cmp (bad) (bad) (bad) ljmp mov roll pop or frstor pushf xchg rclb (bad) (bad) (bad) (bad) ljmp inc lods rcr gs arpl cld and loopne sbb add in test icebp add decl xchg mov addl fildl xor sub sub mov jae clc (bad) (bad) (bad) (bad) mov jb sarb vunpckhps jne outsl cmpsl (bad) adc mov (bad) (bad) (bad) jmp mov cmpsb mov xor pop push and mov mov (bad) (bad) (bad) lcall std ss push inc sub into sub cmp jae dec cmpsl (bad) cmc pop pop outsl (bad) (bad) (bad) decl xchg popf lods subl xor push or mov inc je es (bad) (bad) (bad) incl jle (bad) jle jnp push or xchg jecxz lahf xchg mov sahf xchg adcl (bad) aam sahf pop inc repz (bad) cld lahf pop in inc push and in add hlt leave test xchg cmc popf (bad) (bad) (bad) (bad) cli xchg fcoms jle and push movsl pop fbstp mov cmc jg shld mov mov (bad) (bad) (bad) decl cs jle test sub jo imul pop xchg icebp sbb sbb push (bad) (bad) (bad) (bad) mov inc call jge call repnz jp fwait xor rcrl (bad) (bad) (bad) fcompl loopne and dec repnz (bad) mov mov mov add cmp (bad) (bad) (bad) mov ret shl mov imull xor inc nop icebp xor jno add (bad) (bad) (bad) incl jmp das cwtl dec mov arpl roll scas (bad) jle dec icebp loop (bad) (bad) decl (bad) xor mov int3 outsb mov movsb aad push mov popf test sbb xor (bad) (bad) jmp call pop and repnz push loope xor push pop lcall and (bad) (bad) (bad) ljmp jnp into lods jg roll mov push lcall lahf cmp (bad) (bad) incl mov or jle mov ljmp divl sbb (bad) (bad) (bad) call jbe inc ret jge add xor fadds in in and andl (bad) (bad) (bad) (bad) cmp test ret cmp subl inc cmp sbb inc repz inc lock sub dec insb sar (bad) (bad) jmp dec std mov push pop out lea jmp pop mov jo jge scas sarb (bad) (bad) decl jmp mov adc push or pop sahf jne in pop xchg push (bad) (bad) (bad) call pop push clc mov cmp jne hlt (bad) jb sbb fs lods sub (bad) (bad) (bad) pushl insl insb xor push mov popa loop adc xor jne sbb mov (bad) dec aas mov add inc mov or mov mov dec mov push pop xchg cmp (bad) jns push jns jne mov scas aas ljmp and or push mov (bad) (bad) pushl cmp inc mov aad mov cmpsb scas repnz or imul clc jl jb (bad) (bad) incl ds or imulb cwtl xor sub movsw out (bad) out push hlt mov mov rcl je (bad) adc std rorl push leave imul rcll (bad) (bad) (bad) jmp cli push jle scas cmp ror repnz fwait rorb stos into xor sub repnz (bad) (bad) jmp xor jecxz clc lcall jns call outsb add push push out (bad) (bad) call cmpsb repz or mov sbb cmp push test add lret mov (bad) (bad) (bad) incl inc incl (bad) and pop pop dec pop gs jl cld xchg xor inc sar (bad) (bad) decl lret inc or mov cmp in cmp add (bad) (bad) call clc outsl mov lahf fsubp mov xchg fnstcw inc mov stos (bad) (bad) (bad) jmp mov push lea stos ds stos and imul sbb stc rcrb pop (bad) (bad) (bad) decl movsl xchg dec xor push mov xor inc adc mov lcall (bad) call popf mov outsl rorl add add mov pop lea (bad) (bad) call adc mov popa mov sbbb test insl sbbb (bad) (bad) (bad) (bad) pushl cmpsb test clc cmp add add inc mov mov outsl out adc rol (bad) (bad) (bad) incl mov pop rcrl mov push cmpsl push mov mov jecxz cld (bad) (bad) (bad) (bad) incl inc js mov dec dec push cmp fcoms cmp dec fiadd push incl lret and (bad) addr16 scas enter mov xor inc dec ss push mov (bad) (bad) (bad) decl in (bad) and cmp push fwait jg daa fildl sahf cld mov push pop lahf ret (bad) (bad) (bad) ljmp mov jns call hlt cmp fst jp test (bad) (bad) (bad) pushl xchg xchg insb aas mov jmp mov jmp int jnp mov rcrl xchg pusha (bad) (bad) (bad) call (bad) cli add add mov dec aam xchg ja mov es (bad) (bad) ljmp jp lock (bad) das test mov dec jne adc or jge bound jbe divl (bad) (bad) jmp xchg xchg mov inc subb pop pop daa sub push test push add shll (bad) (bad) (bad) jmp ljmp xlat imul jl (bad) sbb xor movsb adcl mov xor push mov data16 data16 outsl into sahf mov fcoml call (bad) (bad) pushl outsb adc xchg test cli push rcrl sbb inc mov mulb cltd (bad) xchg movsl lods (bad) (bad) (bad) (bad) ljmp leave push lcall xchg xchg pushf in lock (bad) (bad) (bad) ljmp fdiv frstor adc fldt mov test xor dec popa (bad) (bad) (bad) jmp fwait scas movsb addr16 sub add in push bound movsb out sarl cmp jo loop mov in xor mov add adc rorb mov sub (bad) (bad) jmp roll lret mov sbb jne sbb mov adc jno and ss (bad) (bad) call add lods cmp push por fwait andl rcll mov (bad) (bad) (bad) jmp aas dec pop (bad) dec lcall xchg mov mov (bad) negb nop push cmovle mov (bad) (bad) (bad) (bad) aas sti out nop fwait inc or pop mov mov xor fadds in push or add (bad) (bad) (bad) incl sti mov and sbb mov lea nop repz cmp (bad) (bad) (bad) std into dec test out addl and mov adc mov mov (bad) (bad) call jl xchg inc (bad) xchg dec (bad) (bad) lar add add repz outsl js jl xor sbb (bad) incl in mov xchg cmp xor xchg (bad) or xchg lcall cld in push popf mov push aas xchg dec fldl rcrb mov mov xor addb (bad) (bad) (bad) (bad) jl jnp imul add (bad) xlat stos jbe (bad) leave jge pop inc lock aam scas pushf movsb jb mov (bad) (bad) (bad) std xchg es (bad) int3 xor in jno xor sbb and daa mov or (bad) (bad) incl pop mov sub das test add and mov push mov iret sar (bad) (bad) (bad) out stos sti inc dec xor push cmp test mov cmp mov push ror (bad) (bad) (bad) decl in pop xchg inc pop les sbb orl inc out mov fneni(8087 (bad) (bad) (bad) pushl cmp dec push and ret bound enter aad test gs or js cs mov call mov mov dec add push popa xor sbb (bad) (bad) clc cwtl adc mov push sub mov inc push mov mov (bad) jmp movsl clc jl test ja cltd idivb (bad) push repnz fisubr mov vandpd (bad) (bad) pushl xor add add addr16 out (bad) sbb stos stos out jbe lcall lret (bad) (bad) popf mov leave inc cli jge xchg cli cli adc mov leave sti lock (bad) (bad) ljmp aam pop mov scas ljmp movsb mul jb xchg fwait rol jne (bad) (bad) pushl std sbb xchg xchg scas dec es ss jle aas inc cmc div add (bad) (bad) (bad) pushl pop push movsl movsl hlt shl in stc icebp icebp or jno xchg stos fcomp jae xor push sub (bad) (bad) incl or mov gs ret ret pop xor sbb aaa xchg xchg mov das lcall incl pop or adc sbb loop int jmp dec daa daa imul jne adc (bad) (bad) decl or sbb sub je sbb cs sub mov pop out pop mov (bad) (bad) call divb cmp (bad) (bad) popa jge mov push sub jnp jecxz ds das das jno test cld push push cmc mov shr sub and pusha jecxz cld pop (bad) (bad) (bad) (bad) jns mov mov pop in aam push (bad) lret lret inc addr16 cmp dec dec ficomp (bad) (bad) pushl iret iret dec mov out out sub stos in sti sti push xchg lds (bad) (bad) jmp xor test iret jmp add push (bad) jg andl (bad) (bad) jmp test jecxz push push repz mov inc rolb xchg lods and (bad) pushl cmp cmc cmc add mov mov scas fcmovu jne and arpl adc xor (bad) lcall (bad) (bad) (bad) (bad) std repz mov int dec sbb adc adc xor mov xchg xchg mov mov cs pop cmp cmpsl cmpsl repnz jle (bad) jp cmp lods mov (bad) (bad) pushl sbb sub jae xchg shlb sbb dec shll and push sub jle (bad) (bad) (bad) cmp mov (bad) out out sub mov cmp (bad) jns pop pop loop (bad) (bad) call or sbb fneni(8087 loopne xor push je cmp or push xchg dec dec fisttpl push or (bad) (bad) decl and mov ret mov lods lods out les cmpsb cmp xchg movsb (bad) (bad) (bad) call in aaa bnd mov out xor aaa aaa pop fisubrl mov lea fs (bad) (bad) lcall test mov push push cli repz hlt pop iret ljmp hlt jp mov (bad) (bad) incl scas jmp outsl mov js dec and jb,pn sbb and cmpsb cmpsb icebp (bad) (bad) (bad) pushl mov xchg mov lret call fnstsw je ds pop and mov (bad) decl mov nop jl ds jno mov int3 data16 nop dec dec fadds add add div testb push push adc popa popa mov scas push push stc imul rcrl (bad) (bad) cmp sahf mov jmp clc adc cwtl cwtl mov adc xor imul (bad) (bad) (bad) incl mov cmpsl sub push push and jmp into dec stos push push (bad) (bad) (bad) (bad) call sub (bad) jp mov or or fcmovbe out xor (bad) (bad) incl push ret sub sub adc mov test push cld imul push cmp cmpsb imul imul cmpsb imul adc imul mov lcall lcall dec pop hlt imul imul imul cmpsb imul lahf sbb cs mov sti (bad) dec cmpsb imul imul roll pusha pop enter (bad) xor inc (bad) aam xor (bad) xor imul push (bad) xor rol xlat push xchg iret dec (bad) xor adc xor (bad) xor repz mov xor shrl dec (bad) xor (bad) jne xor push xor (bad) xor dec adc das (bad) xor shl mov (bad) xor repnz inc lods out xor (bad) xor mov xor shll stos or (bad) xor sub cmp loop xor (bad) xor cmp push (bad) xor rcr or xor sarl rcl out cmpsb test aaa dec sarl xor out inc pop mov xor (bad) xor shl mov (bad) xor roll and (bad) xor sbb mov and dec (bad) xor (bad) push and jl pushf and pop pop fstp xchg nop inc les roll dec (bad) xor stc rclb dec (bad) xor adc dec (bad) jo cmpsl mov dec (bad) xor xchg and js xor (bad) xor clc adcb (bad) xor (bad) xor mov xor ja lret cld (bad) cmp ja repnz xor shrl lds add xor addr16 xlat stos jbe dec (bad) xor (bad) leave jge (bad) xor rcrl lock aam (bad) xor mov rcl (bad) xor std xchg scas cmp (bad) xor aas (bad) int3 xor in dec (bad) xor jno xor add and sbb xor xchg add xor (bad) xor jmp mov (bad) xor rorl subl dec (bad) xor outsb pop mov dec (bad) xor sub das test sar in add imul imul imul cmpsb imul imul imul cmpsb imul fisubl adc repz cmpsb imul imul lcall pop sbb lcall and nop mov lcall pop or imul imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb mov call lcall imul imul imul cmpsb imul cmpsb imul imul cmpsb imul inc push imul xor inc clc out divb ficom roll into push out dec mov popl dec (bad) xor out mov sti push scas dec roll pop scas add dec (bad) xor and fwait jne xor (bad) xor dec insb jle (bad) xor roll dec rcll bound or popf xor (bad) xor rorl das push and dec (bad) xor (bad) dec jg adc xor (bad) xchg imul pop push add jbe (bad) xor mov push fstpl push xadd xchg dec (bad) xor roll mov xor (bad) xor addr16 cwtl (bad) xor (bad) mov mov xor in xchg dec (bad) xor add mov shll dec (bad) xor add arpl inc and (bad) xor sar mov (bad) xor ret mov xor (bad) xor cld jp mov xor rolb dec sahf mov add (bad) imul xor shll dec (bad) xor fs xchg or xor (bad) xor lahf mov dec sarl xor repnz (bad) xor mov add xor fsubrs ror hlt inc adc (bad) xor lock pop cmp xor (bad) xor lret mov dec rcll in xor jl int3 nop add xor (bad) xor negl push (bad) xor shrl cltd cmp dec (bad) xor fldpi sub shrb pop xor dec ror xchg xor add sbb xor (bad) xor rolb imul jnp add insl mov daa or mov rcll popa jo mov outsb das aad inc outsl outsb je outsb je ds sub add add sub sub inc cmpsl sub imul ljmp jae inc jne push push shrb or dec gs fs (bad) jmp jae inc gs jb jb add push push and insl outsl outsb loopne lock je and js or mov out (bad) lret add arpl pop and and sub adcl add add jae jae gs daa mov add add (bad) out pushl inc dec inc add inc inc inc push push inc inc push dec dec push push inc or (bad) dec push inc push inc dec dec or push push insb in ja out or inc dec dec push dec pop inc das inc inc dec dec dec pop push mov inc inc inc inc dec inc inc push dec pop or dec mov dec dec push inc inc dec inc inc dec inc inc xor (bad) (bad) fmuls inc dec inc dec dec push dec dec dec inc inc push inc pop xor sub xor dec push inc push (bad) fistpll testb push or push dec push dec inc dec mov push push dec inc test or dec push pop push or movsl lret fsubr pushf push xchg inc inc push push or inc dec inc push push roll dec dec dec inc inc dec push push pushf or int loope inc inc or push loope (bad) mov push add pop dec push push add inc push dec push dec mov dec push push push dec jno dec add push add jmp mov dec pop inc dec sbb popf or dec push add pop push push inc push dec pop mov fcomip aas jmp dec dec cltd dec inc push inc dec push outsb loope es push dec xor inc push inc push or jg daa inc push add dec inc dec xchg inc cmp cmp or cwtl lea inc push pop xor cs pop inc dec push push sbb xchg sub inc push inc push dec add dec dec dec or adc push jno inc dec inc (bad) mov pushf push dec push rcll push push ds dec dec inc inc dec push scas push pop push inc xchg pop inc xchg dec dec dec out dec stos dec pop xor dec dec dec dec add or push cli popa add imul xor insb outsl outsb add jae add adc outsb imul jp mov and inc nop int3 adc push pop xchg or (bad) adc ja mov and dec add jb (bad) dec jmp outsl jne arpl pop jo jb jb and jns jne jg hlt jb add imul and push inc add add or inc push out inc (bad) jno loop popa outsb arpl jo xchg cmc ljmp lcall pop flds jns mov rolb ret fcmove fs jb imul scas dec bound data16 gs insb outsl ja insb and scas call je arpl in (bad) or cmp add movsb les jbe and sub inc shll and mov outsl addr16 jae fist gs jb jo outsl jb fild (bad) jb jne jns insb sbb ret or sbb and jl dec cs push outsb imul sbb jae data16 bswap in or sub fildl pop in jb add jb and sar mov and gs pushf je inc int3 inc mov data16 mov (bad) mov (bad) sbb hlt add jle jo jg arpl insb and cmp adc cmp (bad) imul bound xor ja je jb jne je inc pop or pop imul jo mov (bad) ja sbb pop add imul ret ffreep adc and arpl and fild xchg insl popa outsb jns jae insl roll bound imul jae das jne xchg int3 xor dec lds dec mov add popa addr16 mov sub outsb gs std mov outsl ja add adc je cmp fidiv jae popa mov mov in push inc cld cmpsl sbbb outsb outsl jne push inc outsl xor arpl jnp sbb inc jnp sbb xchg add shll (bad) insb data16 bound jl jne or imul sbb sbb mov ja inc rcrl push pop ds jb cmpsb pop inc cmp lret pop add xor xchg ja and dec outsl pop cmp inc insl imul bound and add insb orl xor ja fstpl or or cwtl rol fs subl test es cmp popa outsb jae je adc sbb and jne es jecxz gs dec pop dec es je insl and mov push push add je (bad) icebp jg inc jae outsl jae sub pop dec mov or sti add inc jb jo dec cmp inc pop push daa push mov mov xchg je and dec push cmpsb jmp xlat inc add add loopne mov pop mov das jne sub mov arpl xor popa jae outsb (bad) cmp jmp arpl arpl data16 gs or insb insb add popa outsb sub adc pop xlat gs mov jae (bad) cld decl mov jo sub je jns jne jo jae outsb popa setns popf mov dec (bad) xor add add fsubp in repnz idiv add dec add pop (bad) xor pop sbb jae mov xor cmp add paddb sbb and je add iret sbb cmp or hlt pop push inc insl add mov cwtl test xchg add lahf fs cld aas push fistl xor xor xor add imul inc push and xor dec mov pop dec inc dec inc dec inc pop inc dec dec push inc inc sub and pop xchg mov and and rcr inc daa dec and add push jne jne fs outsl sbb adc je je movsbl cmp sub inc push pop dec inc adc test inc dec inc push test inc gs sbb dec cmp add outsl add outsl outsl jo and pop sbb pop jae dec add and test push or push push inc push inc lock sbb sub es js mov jle push imul xchg and and pop pop push dec imulb pop fs (bad) sub mov cs sub sub daa jle je sub or push push (bad) or add (bad) call addb loope adc pop mov mov adc out add xor inc add addr16 add jmp jo push pop pop scas imul inc roll sti xor inc add inc add and or inc mov jae and add mov test outsl arpl jae inc or or or inc pop ss xchg adc ffree pushl add pop jo je pop scas and and ja and std dec push dec dec and btr roll cli sub pop inc push mov dec xor ds pop jo pop cmp sub xor pusha jne cmc add add add or in popf sbb sub jbe dec push inc dec add outsb fmuls stos or inc add pop inc (bad) mov sbb test inc data16 fs inc add fcmovb push insb (bad) sub dec cmp jo push xor jb je je mov outsb jmp sbb adc add add bound (bad) (bad) (bad) jmp add data16 push add insb add outsb add jo jno jb (bad) lcall daa je jne jbe ja js jns jp inc add inc add add (bad) (bad) (bad) incl dec add dec add dec add dec add push add push add push add push add jmp add xor xor xor xor xor add add jle pushf popa inc sarb sbb and cmp cmp or into jge les nop daa inc add sub or idivl adc or inc add and and shlb inc add leave outsl mov and mov ss (bad) je (bad) mov pusha add out jae out push xor test add mov inc inc out xor mov xchg data16 push jle pop jae and jae (bad) cld add setg ja (bad) mov icebp and and jno cmp mov scas mov pop mov mov pop add add pop add or pop cmp add adcb add ret pop or je js decl jne pop jo jb sub test fwait call jne inc (bad) xchg inc cli and jnp or sub dec and popf adc ds xchg mov arpl cmp or xchg (bad) add movsb inc mov xor add fs add lahf stc and bound mov jnp les daa add and outsl or mov hlt sub jb sub sub dec cmp ret and push out mov or push inc push inc push inc jg pusha dec loopne inc dec inc inc dec and pusha jb dec sarb sbb divb sahf push add ret dec dec dec inc inc out xorl cs xor inc sub xor xor stos dec sbb orl dec cmp mov add and pop popa push imul shlb push inc inc inc adc ja jp push dec xor movsb cs mov ret mov out test add and push inc dec inc sub xor pop jne adc je inc or clc add dec push inc fs xor fcomip imul cs lds push pop inc push sub fidivr ret bnd add xor or jae jb outsl jb inc rolb xor add and mov jge std dec dec dec pop es inc push push inc loope faddl add push pop or cmpxchg and je or push pop pop aas pop mov jne pop and push xchg sub sub cmp sub push inc push (bad) push or jmpw jmp cmp sub in or insb jbe fnstenv xor xchg aad mov xchg sbb sbb inc pop test xor pusha and (bad) xor in or inc dec sarl fildl jmp jge ds outsl data16 arpl sbb push enter dec and orl push aaa add sub push inc push push inc push pop std jae and push inc push pop cwtl orb xchg ret adc add inc mov jg gs add sub and xlat jl lcall imul push jb ja popa je pop pop inc or cwtl mov fwait and pop scas push jne imul mov cmp je popa insl nop loope adc aas xor nop popa pusha xchg xchg mov jb or pop sub xchg xchg fnstsw add or shrl inc add xchg adc inc pop jge dec push xor ljmp loop sbb les data16 cmp pop arpl cmp xor adc add popa cmp cmp jnp adc and pop mov adc sub cmovns popa cwtl cmpl dec sub jae and movsb aas jo sahf inc inc dec inc adc inc mov dec negb sub loop sbb pop sbbl cs cwtl lock dec or jns inc and sbb push xor in mov sub and std pop pop clc or xor jae je test movsb (bad) jae xor pop jmp xor mov mov stos iret adc add (bad) mov stc aam rclb mov insb xor fs cwtl jb inc mov add mov jns xor jmp xchg mov mov das add sub imul dec push (bad) call call sub je arpl add ret (bad) incl dec int3 push add je outsb hlt xchg cmp outsb sbb arpl outsl add jo adc add fistpll add mov xchg add popa pop gs bound stos idiv sti cmp add jbe movsb aad mov jae outsl jo das lods mov incl jbe jb outsb insl outsb je popa jb pop push xor leave push sub lcall ret mov push outsb rcrl js popa imul mov sahf test jg sub jae aam push dec ss push push pop inc inc push inc push inc fcoml push inc push inc dec adc (bad) cmc call dec inc dec push push pop dec dec inc push inc lcall popa sbb push inc inc jb inc push inc push dec inc dec push int3 lock push sub push add push add cmp inc aas add inc jae push mov call outsb (bad) push (bad) ss outsl jb in insb gs inc roll stos mov (bad) or dec add inc add enter dec add add gs sub ja dec dec inc add push dec push push mov pop xor pusha or mov dec test sbb imul in or adc jae or je inc repz aas dec jg add jo rclb xchg add sub and push push dec add dec aad mov xor dec cmc dec int3 mov add scas sti and dec dec add add pop push pop out mov or xchg add mov pop pop mov adc add dec adc add or jmp (bad) dec dec add add and cmp pop push out iret jne bound push jbe mov cmp pop mov pop pop add inc add jp adc jle popa insb jns adc pusha movsl lods push lds dec inc dec inc scas push sbb (bad) (bad) mov imul outsb jnp mov jne and gs mov adc addr16 inc or mov pop xor xor sbb push mov add cmp arpl (bad) jmp push add fstp mov mov gs dec pop jbe dec push cmp pop dec dec inc pop or mov or mov and lods dec push and rcll decl xor roll or fs insl and and push out add leave or popl and ret bound or add (bad) int3 loope adc adc sbbb and and mov int adc gs push sbb push push sub push int3 dec inc pop ja push inc xor fwait or xchg push js call int cmpsb adc outsb sbb mov add je addr16 repz inc jo sub cmpsb or nop add sbb and push das daa xor xchg bound iret pop aaa sbb push notl inc dec push pop dec inc dec inc pop xor out pop mov push xchg push gs popa jo outsl jb mov sbbb je pop xor rcll adc or pop or and stos outsl mov sbb jns das mov adc inc or leave jbe jp mov adc xorb jecxz inc xor jmp cmovg or sub add inc fmul mov mov lahf jb adc imul inc in das and in pusha mov stos mov push add mov nop inc add mov cmp inc add lea adc add enter inc add test mov add fsubl ja xchg outsl ffreep data16 jg inc add xchg pop or inc idivb pop movsl xchg inc add fstps outsl stos xchg sahf mulb ret orl sbb (bad) out sbb xor add mov xor xor xor xor xor fsubr fdivs xor cmp xor xor pop mov or cmp xor pop xor stc jl and or xor cmp cmp jbe in xor xor pop aaa fsubr enter xor xchg xor mov xor push xorl cmp and push xorb push mov pop inc push jg inc or lods cmp xor mov mov sbb ss sbb xor jbe push cmp leave fnstenv xor inc jbe into jle cmp fdivrs cmp cmp mov leave fnstenv jge ss into leave fnstcw xor arpl xor lock cmp sbb xor pop push pop xrelease and add or and or or int add movsl inc add std inc pusha add movsb inc add add ja push mov add or pop outsl push inc mov daa out add inc cmpps sti out lcall add inc add add adc (bad) ud2 mov jmp iret das adc pop enter mov pminsw jle push and add lcall add mov add add mov inc fnstenv dec ljmp and pop add add inc mov sbb subl sub data16 mov icebp pop jb ja ja imul push mov xor or addr16 call adc lods mov and test test lods and dec testl lods xlat outsl push xchg pop mov jge add inc push push aas insb gs outsb add xor rol mov xor inc inc enter mov and js arpl andl jae and rcl pushf pop pop js mov push add add adc inc and add jne jae addb push mov jo sbb add lods xor je mov pop je je gs add push xchg and jnp jo imul push add pop inc add fnsave inc add inc adc dec add dec pop js add add add inc add adc jb popa add add jne ret and jb and dec add cmp inc push adc push hlt push inc pop pop sub jns stos ret jns add dec mov idivl pop cwtl dec dec popa insl insl push add loope add outsb add mov popf nop and inc pop dec adc lcall dec push pop push inc push pop dec inc dec inc push flds std pop push cld add push pop or je insb insb cs fwait enter outsl fs lds je dec je push outsl inc mov jae sbb mov data16 inc xchg push pop mov jbe imul fdivs adc push sub sub jg jne jb push outsl insb jne xor cmp push std psubusb gs gs xor push push loope iret cmp xchg mov or push cmp pushf rcrl jo pop gs out ds decl cmp imul loopne outsl je std out inc dec outsb imul stc or push jbe (bad) pop xchg add gs inc push sbb call push push push add imul insb xor mov lds adc arpl (bad) pushl imul lcall popa je dec popa insl test lret jo ja or sbb addl outsl ja jb push jne inc js xor pop sti sbb add push push inc (bad) jb jne add add cmp add (bad) cmp addr16 outsl jo add outsl jae or je (bad) jg inc add frstor mov jbe mov icebp jge mov sub lods lret iret adc jae cmp je sub add xchg fdivrl insb insb pop sbb push add xor add mov cmp test ret dec pusha (bad) out cmp and xor inc inc (bad) mov inc mov adc arpl jb mov xor add and or mov mov movsl push ljmp cs push push sbb xchg popf push add add pop repnz and mov pop nop das sub outsl aas and pop (bad) mov adc repnz test mov and sub or dec add sub aam popa pusha xchg mov inc jb aam loopne std xchg sub bound dec inc inc pop inc pop push jl pop fdivrs xor push outsl outsb add addr16 fs insb cli dec aad das xor xor dec mov add inc pop add jmp and or je push cmp and (bad) jae nop sbb and xor inc add xor jne add sbb dec push xor out data16 inc aad lahf push (bad) add outsb outsb jns lock push fwait dec outsb addr16 add fldl insb jne js sub outsb aad add add movsb add push cmp inc imul clc das insl push imul push sub xor bound adc inc andl push dec sbb popa insb mov and and outsb outsl and inc call and imul sub mov jae pop add push push hlt pop nop int3 and outsb gs push adc dec jg or xor je outsb jne or ret andl and or jmp and imul sbb out push pusha stos scas or mov and data16 js gs (bad) adc and flds inc pusha mov jae dec dec or push sub cmp jecxz dec inc add (bad) enter adc in rorb mov pop cmp popa outsl lsl push inc add push pop cmpsb jmp rolb loopne pusha mov rep inc je push or adc daa (bad) (bad) pop add ja je xor (bad) ljmp je dec dec inc pop inc dec dec dec push pop push push inc push inc inc inc and xchg add popa sbb aas push gs jge mov push fs jg fidiv push gs outsl outsb jae cmp dec mov push push add insl movl cmp je insb ds ds mov gs gs jae push cmp add iret sahf sbb bound jns pop outsl jne and rcll dec cmp jp jns je pop cmp arpl fwait sahf mov outsb inc outsl imul inc scas movsb add outsb xchg idivl jae shrb mov repz push mov imul movsb pusha pshufw outsl mov gs outsl jb outsl outsb pop popa imul jae cmp bound leave andl adc xor xor ds mov punpcklbw jae daa and ret imul add and sub fsubr cmp das dec aaa loope (bad) cmp outsb xorl sub mov push sub arpl popa and add scas mov sbb mov insb popa arpl mov popa mov push add sbb push mov insb add cmp add xchg nop xlat ficoml or pop dec shrl stos int3 inc pop push jle mov sub or call sub mov mov jo das pushf mov and outsl insb test pop push push inc push inc cmp arpl and (bad) pop nop js ret outsb fs hlt inc add mov imul pusha jo xchg call xor scas jnp dec into xchg cmp arpl or and jmp or bound roll xchg jp pop pop sub adc pop icebp arpl pushf cmp xorb xchg xchg icebp jbe popa and dec enter insl insl jne imul and stc push sub add pop fldl adc push insb gs aas cltd mov fs xchg dec aad insb jbe push bound cmp push (bad) inc cmp ja jo jno mov and loope inc dec push orl sbb test bound rcrl fsubrs outsb popa addr16 or adcb xchg xor add (bad) sub ror fs loopne inc add inc add pop out mov add add inc pop inc add pop inc add or and mov or mov pop inc add add movsb pop inc pop inc add out or push fs add lsl jmp inc cmp sub sbb xchg or mov insb fcomps sysret adc pshufw push das pusha loopne (bad) pop mov and push sub mov ljmp and les jnp jne add sbb jne add add add imul imul inc inc dec dec out (bad) jmp add bound dec popa jb inc jo pop jns dec mov dec jne add add jo dec arpl add adc jo jnp je js dec (bad) je jl test rcll fwait inc xor inc sbb neg and add xorb add xor aaa dec je loopne dec add and adc add pusha jo add inc jne adc arpl inc jne leave je dec aam rcr icebp or and ja jns jb adc add mov sbb push aam pushf add push adc add pop mov je inc insb jae and outsl je pop jae jae data16 subl jb add jo inc gs jmp roll fs and iret inc call popa inc js cwtl add add dec xchg xor and dec sbb xor lcall add jbe xchg cmpsb push fldz cld adc cmp sbb add or cmp pop jnp cmp sbb inc outsl jb imul inc outsl jne add and and inc mov cmp mov aas add outsl js and pop (bad) dec and jns sub insb imul add adcl loopne sahf and ljmp outsl and loopne sti add dec and push pusha loopne sub dec gs fwait (bad) lcall popa outsb addr16 imul jl inc fcompl scas jo dec imul and mov add shlb and or xacquire arpl jne fildll jb inc outsl insb sub in enter push fcmovu cmp jecxz dec mov adc jae add aad inc pop and and gs pop out pop int3 sub std dec outsl push pop mov je push dec add inc and sbb and aaa in enter movsl insb and jb and (bad) fsubrl xlat out jb adc and dec je addr16 aaa jae xor sarl xor sarl dec add daa sub push (bad) xor shll xchg addl movnti fcomp jne test pop pop pop sub add inc pop or scas sbb mov insb adc cmp push jo and outsl imul jb sbb cmp jl jns ljmp rcrb dec dec jb dec daa data16 xor inc xlat push arpl add jne inc call push call add jne je push dec cwtl popa dec mov std test mov ss (bad) xor (bad) cli dec dec jo cmp iret fs ror inc mov imul and add in adc or add cmp push sub add lahf add sbb add dec dec and add or add jbe (bad) xor orl mov xor insl jp pop (bad) xchg jae sbbl into int dec inc mov cltd scas push add or adc or out insl cmp (bad) aad fldl cmp popa jb cmp add lea mov sub imul mov (bad) add pop gs mov add mov xor pop mov inc and mov ds add add dec jbe fdivs and fwait xchg pusha push cld and sub adc mov mov push pop ja and shll sbb push aam in repnz out mov dec dec push mov xor dec out cltd bound xor fs inc outsl data16 imull xchg jo es les push pop loop dec dec popa scas pop (bad) subl mov fs js adc pop nop sub int dec dec pop jg fadd xor xchg push inc insb popa push cmc jg sub inc inc dec push dec inc pop inc dec adc adc out and arpl jbe or push push pusha adc outsl jb pop and test idiv add push dec inc push pop inc dec dec inc dec push insb sbb pop ret push jge and jae test sahf ret push push loope ret fistl les push aam std jg test inc and sub and jne ljmp mov loope and aam jle cmp inc aas sub mov push mov add inc add scas cmp rclb mov lcall jo push inc xor fsubs and or add dec testl aaa ja out cmp pop add pusha pop or add pop inc pop mov mov adc add jnp in adc sub nop das sbb jl arpl outsb jbe gs aaa hlt insb jns popa arpl push test dec mov xor and pusha movl sbb call jp or gs mov adc popa xor push imul (bad) push inc jl je jo je sub cli dec mov push gs jae xchg rclb add lcall adc xor and in mov and and cmp pushf push mov inc and mov dec jp (bad) hlt (bad) iret addr16 fs xor out imul sbb mov add pusha and and mov fisubr inc popa je and je jle inc arpl call and rcrb adc stc scas fist stos aas and fs mov push jno inc or outsb bound or inc mov roll fwait (bad) scas mov test pop repnz outsb cmp and gs add andb add arpl or fnstenv xchg or jmp mov pushf outsl lcall popa je inc dec push push push subb pop pusha jo or and pusha lret repz jae xchg pop (bad) dec cmp outsb imul cmpsl jle movsb fimul push imul add rolb dec outsl icebp icebp sbb (bad) cs addr16 add jo push and inc insl jo push (bad) jns jae sbb cmp leave sub ret push push lcall add jo insb adc cmp int dec dec push (bad) adc (bad) gs mov cmp outsb popf add or into push xchg (bad) add es jmp fiaddl gs mov push cmpsb dec add cli lock loope inc jge fs adc fs add adc cs mov sub mov mov popf cmpsb jae sbb mov pushf push cmp cmp ja jl push push (bad) pop push inc push push dec inc and add add sbb addr16 inc xchg mov mov cmp je aas and jne aam add je add aam andl pop xor sub ret lret mov ret mov mov ret insb mov cmc shrl insl gs lret outsl jne fs je outsl bound pusha add fs jae clc lds pusha pop or outsb xor jnp outsb push es jo rclb mov mov ja jecxz dec and jae fwait xor mov cmp pushl outsb pop data16 insl jg hlt sbb cli inc fs mov push and (bad) jno imul or and adcl xchg imul daa dec push inc or jno xlat (bad) cmp adc ds adc pop inc rolb inc lret aas jg pusha or dec cs aad mov jns fcompl inc ljmp pop cmp mov out lret and dec xor jne stos sbb add sub fdivs adc insb icebp inc dec xchg push icebp or cmp mov je jns jmp add xchg and jbe (bad) lret inc dec inc lcall or (bad) sub shrb and outsb arpl mov pop ret roll (bad) fldl imul mov jne gs add adc xchg shlb mov outsb outsl jb addl xchg fsubrs iret xor fsubl xor je push pop fwait jo cmp mov add inc sbb in and lds jae push push iret lods push out add outsb cmp xor and insl ds push test sti pop dec push jb movsb insb and inc pusha sbb lahf arpl outsb jne std loopne inc or and mov (bad) shlb sub je or ret pop adc or jbe add xor xor cwtl ret es add or or psubusb pop add lds testb add xchg or jb dec gs loopne inc (bad) jns inc mov scas es sbb jl nop xchg inc mov and add dec sbb outsl sbb addl cmp mov adc jo sub fs dec sbb mov cwtl andl add mov jnp add cmp cmpsl add nop cmp and insb popa xchg mov mov adc jbe sub pop imul mov lods sahf push js cwtl mov leave and (bad) pop insl mov mov xchg or in jne pop lods mov orl mov outsb outsl ja gs sub sbb adc je jae push dec and ds js je inc gs and mov pop lret and cmp and push adc add and adc pop idivl pop lock ret shlw wrmsr ljmp fstpl insb popa lret push rclb jnp sub inc jge loope adc jge add out cltd and cwtl aas mov ss enter popa loopne sbb xchg and and xchg dec icebp sub mulb adc jb ret adc sbb inc addl mov mov bound adc lods cwtl or xchg pusha pop sahf fchs xchg adc sbb and outsb and jp test movsb mov fwait add jb dec add sbb or pushf fs adc adc sbb cmpsl inc lds and add or (bad) push outsl and pop adc test adc cmc pop data16 lea fcomps jae ja mov gs imul and push je insb gs stos loopne or sbb sub or adc jae bound and and pop adc adc cltd stos and sbb add arpl data16 and iret mov push inc jb imul and add idivl aas jne je jo ret les bound push je arpl outsl das arpl jne mov testl fsub imul (bad) xchg xor fsubrl mov add popa jp lcall cmp test xchg add dec dec push loop sub mov xor inc popa mov enter xchg jbe (bad) les sbb fisttpl xchg push xchg lock js and int3 add cmp cmp or xchg push adc xchg addr16 imul mov push outsl push adc lds jns jae mov push mov inc sub or inc cld inc mov sub imul cmp es fs xor adc arpl mov jns gs mov js es add add dec and inc mov mov push imul sub mov outsl sub xor mov jle xor push push data16 fwait orl int and pop inc in pop xor das out adc mov shlb insb or pop mov fs jle ror xor outsl outsb imul sbb dec incb pop adc out fs xor add push sub or ret add daa popa mov add sub pshufw jae popa jo and arpl nop cmp mov xchg daa sub adc clc xchg and imul shlb (bad) inc hlt dec in ret stos sbb dec and cmp dec pop shlb dec ljmp dec daa inc adc mov or adc iret ja sub (bad) xor xor jbe jo cwtl adc or das and add jo loope out or jg pop das add push mov mov pop or and inc loopne add jmp or or add jo gs xchg jmp or pop in cmp (bad) jne xor sbb scas add testl jge push pop jae pop add add add push pop add (bad) out add add out mov add add mov (bad) fisttpl jecxz adc jnp jae or pop or adc addr16 jge adc jnp mov (bad) or add inc cmpsb loopne outsb gs lock mov arpl (bad) cmc jg xchg add inc jns imul decb sbb adc js inc jb ja jnp inc push jmp jne push dec js fdivrs notl inc and daa ret sti ja add popa jne dec popa jne jae paddw or add sbb push and lock adc inc outsl fs out or inc adc iret mov and mul or jg inc or adc xorps and add inc pusha mov iret adc pop dec lock cmp adc xlat iret push (bad) xor xor pop daa lret pop pop fcomi mov pop xorps pop out mov inc inc cmova loope and mov mov aam addr16 cmp inc dec iret jge test and xlat cltd cmpb pop or and int3 or pop out ret jge shrl and cmp cmp aad cmp sti (bad) fisttp dec push push inc push dec dec pop cmp xor push dec inc dec dec dec push xor push fildl push out pop inc or in mov inc or fisubl add loope mov jmp or xor inc pop or adc add adc jae xchg pop pop pop cmp inc outsl std (bad) (bad) pushl sub and insl pop pop xor xor inc dec pop push pop aaa jl and inc push push add xor ja imul iret or jne insb and mov fsubs adc movb and mov and dec pop or sbb jg add pop pop xor pop and and pop add pop dec inc pop pop xor adc jne aas xchg add add out pop or scas jns loop xor xor xlat or in imul dec shl jg (bad) pop outsl outsb add mov push add outsl insl cmp imul push icebp fcompl adc cmp push inc mov out pop cmc bts addr16 psubw and sbb mov push adc loop push push jg adc (bad) iret bound mov cmc fildll out mov xchg mov add add inc mov faddl imul cmp jg push mov jg jo out and jg pop add pop (bad) es ja pop jnp adc sub sub cmp pop outsl pop out mov pop ret pop mov mov or mov scas adc dec push dec push dec add fldl add push dec dec inc inc add push push pusha fbstp dec inc push inc add fwait dec push lcall add push pop dec cmpsl add gs decl inc pop push dec dec dec add inc dec dec inc pop adc out lcall inc push sbb push dec dec inc inc inc dec inc add mov dec fild push pop dec add inc inc cmp dec or jge push pop dec push push or insl push dec inc dec pop (bad) aas fnstcw pusha xchg inc add dec push inc push push dec dec push dec (bad) jg incl inc dec inc dec dec dec inc push dec dec addr16 dec dec inc push dec inc push add inc inc push les pop je fild cwtl dec add mov dec shll xchg jmp daa daa ret bswap pop pop dec (bad) jne fadds fmuls loop fpatan fcmovbe jl xor fisttpl dec add adc fstpl fisub fildll scas (bad) xor pop loope fcoml ja pop pop arpl outsl jo addr16 push cmp cmp jo ljmp je insl paddsb or outsb and or stos and mov out push inc (bad) mov je add cmp js popa outsb shrb pop cli decl data16 insb and addr16 mov sub out (bad) fistpll arpl outsb jne outsl jb das and sub and cmp hlt pop std jae cmp es popa insb insb outsl orb out sahf arpl fmuls cli (bad) out lahf mov pop push pop arpl cmp pop pop arpl arpl stos fstpl pop cmp bound in adc outsb and mov test mov std jg adc add dec add (bad) inc add jne out mov rclb and int3 add imul (bad) std jb cmpsb jae add mov ljmp push mov js popa jl je mov daa add or push in loopne mov push jbe mov add and popa sarb ret lock sub insb sbb pop mov sub imul sub ds sub and jae ds and add bound imul cmp sbb and inc outsb and enter enter (bad) adc popa jb insb mulps pop push pop scas pop gs mov sub jb jo popa or js mov std and jae jb adc mov or adc cltd or jo adc cs mov mov pushf dec mov and push cmp add (bad) mov add fs jne popa outsb outsl insl int inc cwtl mov adcl pop pop daa imul sbb dec sub jae and dec push fcos ja sub jb add xor cmp aaa jb dec sbb int3 popf dec daa mov add lcall sub popa je add add adc push pusha mov sub pusha pusha add xchg es enter xor shr dec inc (bad) iret or add add jae notb add add mov add aas jnp insb nop add imul jae cmp adc jnp mov sub popa outsl outsl and sbb mov fidiv add add pop in mov pop or dec add out out jno adc inc or outsl adc mov or jae pusha xor add xchg and aaa and pop daa cmpsl cmp mov pop call add dec dec inc ret outsl (bad) add popa outsb outsl outsb jns outsl jne and std (bad) jo add in dec add add psubusb sahf sti pop fiadd add bndstx or pusha add adc mov add popa out lea add or ljmp add push add add jo add adc adc jb insb push jbe sub add in mov sub xor add ja jl ds add cmp add or xor or out in xchg add inc jae pop add xor jne rorb inc inc rorb add sbb adc xor fiadd int3 das add daa fsubl ficom add mov ss ret or dec inc stos das cwtl cmp sbb pop dec sub in mov daa or add add pop cmc aas adc push mov xor frstor mov insb imul add jne je test dec dec add dec dec add negl xor les daa pop daa push dec add dec and bound add jbe mov aas and pusha pop add sub push aas pusha fildll outsl and repz pop rclb add sti pop ja and and pop add add add add popa xor sbb sbb pop popa bound or fs and jge cmp dec inc jb popa jns pop pop add add popf (bad) incl outsw jb add push cmp cmp paddsb and sub xor xor xlat sub fsts data16 adc sub addr16 jne imul adc jbe outsb je xchg je jb sub (bad) mov cmc popa jbe and inc adc cs adc add fbld stc nop xor jb mov sbb pop jg addr16 jns and mov fisub popa insb push push jae je jae popa outsl (bad) or outsb gs fcompl mov push popa je add arpl insl add jb add lock test outsl jb and popa inc icebp pushl mov add sub imul pop mov jne add insb add insb call add add or or and add cs cmpsb cli (bad) jnp popa jb and insb outsl bound (bad) iret xchg jae imul ret sbb mov sbb insb popa insl bound add and jnp outsb jg jo fnsave pop incb dec je add fnstenv insl dec add insb dec add sub mov into push add imul jl push jno add movsb jo add mov outsl dec add outsb dec add jb add (bad) xor push or cmpsl pop dec add in fwait roll cmp adc add (bad) dec add dec add add test add imul bound jle popa dec add (bad) jl cmpsb cmp add pop dec add cmp add pop dec add mov (bad) mov dec cmp (bad) pop dec add pop dec add pop dec add int iret jge outsl or add sbb loopne aaa call dec add mov inc rorb add add pop loopne rcrl add outsb outsl lahf sbb add es cmc sbb outsb popa jb and sub and fcomp add jbe inc sub xor in pop aaa inc inc push mov and mov lock dec add mov sahf dec add mov pop adc jae adc popf cmpsl pop mov xor pcmpeqw sub sub xor mov movsb popa je or adcb pushf rol insb and fisubr pop ss push sub jb fmuls pop icebp imul ds insb adc ss popa insl or adc sub daa cmp ror out sub outsl dec add pop and dec sub imul push popa outsb fadds sub in mov je pop outsb mov iret mov das mov adc rorb sbb push out xor in (bad) ljmp or scas dec add jne cmp sbb inc adc jb jmp push pop xor xchg neg out add xchg or movsb pop lods mov sbb or pop jmp scas fwait pop (bad) mov es add add add add add sarl js outsb outsl data16 arpl outsb out outsl and sub insl add pop loope incl jle fs add cmp add ffree jg pop and arpl fs imul shlb (bad) pushl out pop jae sub add das add add add cmp outsl add gs cmp add add jb add std (bad) cmp add cmp cmp jo jb (bad) out jg and and insb jae add cmp insl dec add add js pushl imul add add int3 (bad) icebp mov and add add push add fcomip ljmp add outsl outsl add dec jl jo add cmp sub (bad) mov sub jo add or add jb add test ds jb add das jo mov xor jb add test outsl data16 jae mov push icebp or pop jae add pop fdivl xor ja je inc inc mov add add dec add add add or mov (bad) ud2 push lods addr16 or pop add push scas sti xchg pop pop bndldx int mov or sub xchg out pop (bad) xor xlat jge ud2 add or add (bad) pop (bad) (bad) or add add inc ret jne jae sbb inc or repz jne pop push or mov iret jne add add insb add sti pop pop std pcmpeqb ja sub mov (bad) jp sbb jl jg xlat sbb or testl pop mov (bad) imul out sbb xchg or add xor xchg sets lcall mov in mov test jae sbb add pop push jp iret jne pop sbb (bad) cmp or jl dec add (bad) or or add add xlat jge jne lret add bswap or add pop idivl (bad) add add push jae (bad) faddl das fimul jnp sti xchg loope in or ds mov add mov jmp repz add or out outsl das stc paddb or (bad) xlat jge clc or or negl cmp or push add add jae adc adc cmp push or xor jge add add pop add mov or pop pop sub sub out out or or pmaxsw jecxz aas xor pop add out out cltd xor inc or add sti sahf jmp add aas add cmovae out xor scas inc add mov aas subps pop add sbb jmp add bound decl decl insb sbb xchg lcall incl or xchg jecxz mov (bad) or scas adcl sti daa dec sbb imul outsl insb add lahf sbb gs jns add sbb scas add and test lock outsl add pop xor cmp jne dec rclb (bad) mov inc sbb pop pop and cmp inc adc (bad) iret xchg mov outsl imul in pop je and or adc pusha insb xor jnp mov xor push inc adc cld fdivl ss or xor je jo jb cs push lahf mov loopne dec add jge in adc icebp pop (bad) jge cmp incb add push jmp add jae sbb fmull adc adc sarb pop adc out jbe pop adc lret divb mov arpl cmp add adc pop sbb push sub dec out popa iret pop mov inc push adc jae mov pop bound inc pop ret pop mov mov jnp add add jo mov dec adcl sbb adc xchg mov cmpsl pop imul xchg aaa lahf adc out out fdivl outsl test popa jo scas sysret outsl fdivs cmp outsl pop nop movb sarb pop adc lahf push out xchg dec loopne pop stc xchg pop adc rcr andl add sti dec add stc dec add dec add cmp add add popa je or sub ja jae imul cmp cs and sub mov jb ljmp outsl push in decl test and inc dec dec inc dec dec sub push aam pop xchg cmp popa jb je and jb add sbb data16 ja jb cmp loopne insl xchg sub adc mov jo scas sub inc fldl mov sbb add or push dec inc adc mov push add popa insb ljmp sbbb jbe push push and sbbl insb outsl and sar add mov inc fs (bad) xor fisttp outsb addr16 ja xor jb outsb andl add jmp call outsl and gs popl movb and add add jo pop das stos sbb lock (bad) or std cmc and into xor outsl pusha and xchg lds bound and xor punpcklwd mull and jo gs ja les adc jo push hlt add xorl xor add pop xor imul jg lret dec add dec add or (bad) or cmp add adc add (bad) xor push int add into dec add nop mov jl je xor adc mov xor dec add repz rcll add icebp fnstsw dec add and dec aam add or add sti pop shll fisttpl jnp add xor cltd cmpsb imul adc sti mov fisub add negl inc mov pop mov fmulp faddl and pop add fsubl sbb adc dec pop ja ret or nop pop addb xor push gs add inc gs add mov ja xchg jecxz fild ret pop adc pop or xor aaa sbb imul dec add add lock ja loope add add xor (bad) bndstx and sub jmp add jg mov loop add jecxz add push jne sti out or repnz add lods or fstl add add sbb or add push dec pop dec pop cmp inc mov xchg or mov enter and notb arpl (bad) mov aas outsl gs daa je je imul or and loopne sub popa insl bound jne xor sbb mov push (bad) lcall or gs mov push and add fadd (bad) pop dec cmp jne outsb add outsl add push pop xorb inc neg call add je imul data16 in or iret add add add fisttp popa add cmp and and pop jae inc sub sub std out mov or js jo push sub aas jns xor (bad) add inc add push nop jmp ja aad (bad) dec scas add sub dec sti (bad) (bad) decl inc pop inc pop push dec dec inc dec push pop inc dec inc dec push push add dec add data16 fcmovnu fild add add xor add cmp inc (bad) ss mov adc pop loopne xor adc or pop push pop or fisttp xchg pop aam push cmp xor pop in jae push addb test xchg cwtl cmp mov sbb mov scas sbb add aas mov and inc iret jge jmp rolb sub jmp lock and add stos pop jnp jne add aas pusha movhps add push outsl fmuls pop roll jnp mov add cmp add (bad) fbstp add or aas popa inc outsl arpl jg push dec pusha mov mov aas sti xchg jge push arpl xor push xchg cmpb inc add inc inc add loopne mov jp mov mov xchg mov in pusha addr16 aas and adc mov add mov pop (bad) mov addb arpl test inc hlt out xchg gs and add (bad) jnp jbe aaa pop mov in xor (bad) dec mov imul and jns inc inc add jbe add dec (bad) (bad) (bad) jmp shrl in loope inc mov inc push out loop in dec inc xchg aad (bad) cmp push iret lock add mov rcrb xor dec cmp shld popf xchg mov or lods sub enter scas mov (bad) (bad) aas pop outsb add inc cmc stc aas jmp xor (bad) pop cmp jae (bad) adc fst adc jbe arpl je xorb es jae je mov je data16 mov pop inc outsl jne adc scas push popa cmp inc xor pop in test lret insb es (bad) jbe and pop insb arpl inc shrl pop dec pop pop push add add (bad) mov and and popl sub outsb movb (bad) and and imul je pop test sar add ljmp fidivrl or push (bad) cld and add out std and cmp das insl xchg stos (bad) pop jbe or cmpsl mov das ja outsb jo jae testb ret jb sub sub sub pop je sub sub sub imul pop push push dec dec inc dec dec jle dec pusha sub pusha adc pop dec aaa gs or mov fldl imul (bad) jae and or push mov dec movsb pusha or divb jb and add sub or movsb jg sub add cld (bad) (bad) mov iret mov and pop adc dec add rcr iret xor lret inc pop test push cltd mov or lds or int3 dec add adc add or pop add iret or push fs or int3 sbbb cwtl sbb mov ja or loopne (bad) fwait adc fdiv or add das hlt fwait mov xor pop pop popa bound jbe xor fs jne sub pop xor mov pop sub adc pop and dec or push lock cmp imul xchg cmp aas xor popa out stos jae pop arpl jne enter xor nop movsl (bad) aas or inc pop inc roll xor mov (bad) imul imul (bad) rdmsr ljmp and push push push stos jge sub pop outsl pop ds xor dec mov and loope call outsl mov sbb adc xor or or sbb lock mov cmp push je or ffree into pop inc sbb jle cmp in lds sub add dec add and fwait pusha and sbb jbe repz push add xchg dec add rolb jae lock mov sbb mov sbb add add pop pusha sysret rolb pusha rcrb sub (bad) mov mov mov push xor pusha xor inc add jno pop out jns nop add jne out add cmp pop mov xorb aas int3 jne add adc xorps mov add fsubr fwait loopne cmp inc add cmp pop pop popf jns pop fimul lock sarb (bad) xor (bad) xor jo adc mov push pusha inc add inc aas int3 xor add adc push and adc sbb sbb inc aaa inc mov gs adcb xor pop mov add shrb sub jle add mov add mov jne add xor cmp outsl jg xor add xor dec add dec add cltd outsl lcall (bad) xor pop add mov xchg add loopne inc nop dec add dec xor fwait stos fnsave lock rolb xchg popa add add mov loopne push dec add adc pop es ficoml pop and push pusha fild lea dec add adc pop neg clc cmp dec add loopne add or mov lock daa sub cmp scas or push add lahf adc cli lods jmp add adc dec ret fdivrl adc mov dec add adc std mov adc rclb adc rcrl int pop arpl and adc test sbb lcall add mov rol inc add jmp adc or mov dec adc mov xor adc add or loopne mov add add pop aam sub jp or mov int jbe or sub and cmp flds lcall add leave nop and mov pop and add or or mov je jne jb jecxz rolb fwait mov lahf cmp test push dec lret fistpll (bad) ljmp xor xor xor xor xor xor xor xor xor (bad) (bad) (bad) pushl xor xor xor xor xor xor xor xor xor xor xor xor xor (bad) pushl aaa xor xor xor xor xor xor xor xor xor xor xor xor xor (bad) (bad) (bad) pushl xor xor xor xor xor xor xor xor xor xor pushl xor xor xor xor xor cmp cmp xor xor xor xor xor (bad) (bad) pushl xor aaa cmp cmp xor xor xor xor xor xor cmp cmp cmp mov jle pop cmp cmp (bad) (bad) jg outsl cmp push sti jb mov cmpsl sti sar sti idiv adc sub inc (bad) (bad) (bad) (bad) cld popa cld jnp xchg cld mov lret cld out add sbb xor std test mov std out (bad) (bad) (bad) (bad) std or and (bad) je (bad) (bad) test (bad) stc (bad) adc decl arpl jle cltd (bad) (bad) (bad) (bad) pushl incl add add add insl add add add add (bad) (bad) (bad) incl pop add xchg add cld add add add add add add push (bad) (bad) incl push add add add jo mov movsl add add add add add (bad) incl add mov mov scas mov (bad) call and push mov xor inc iret sub mov lcall sbb lret (bad) (bad) lcall stos dec fdivrl or imul push mov lods pop rorb (bad) call sub mov cmpsb lods (bad) lods jno lret mov and pushf ljmp int3 scas push into (bad) (bad) (bad) pushl (bad) aaa push sti dec ss adc dec cwtl dec cmp xchg nop (bad) cmp xlat hlt xchg (bad) (bad) (bad) (bad) mov mov cwtl or mov cmp (bad) enter (bad) (bad) (bad) call sbb inc ffree xchg leave and xchg test lods fcomi ficompl pop stos mov (bad) inc ficom cmp test mov mov insb add xor xor (bad) mov (bad) (bad) (bad) mov xchg mov ja fisttp mov je iret pop test (bad) (bad) ljmp mov clc lock push and jnp (bad) loop cltd push cmp (bad) (bad) ljmp sub adc xchg jae cltd and stos push lret repnz std jmp adc int3 mov add call or mov loop pop mov (bad) (bad) mov add adc bound or (bad) cmp xorl pop ljmp sub movsb cmp aad and (bad) jmp dec lahf daa sti (bad) aam mov enter fidiv mov movl lcall sbb ljmp fimull out lcall jge jnp (bad) (bad) (bad) js bnd fnstsw in mov lds xchg push xor cli pop (bad) (bad) (bad) pushl cltd mov mov (bad) fwait movsl pop lahf cwtl mov into mov (bad) (bad) (bad) mov and pop repz mov into and fist jnp pop push cwtl cmp pop xchg fdivr (bad) (bad) pushl jecxz push rcr test inc cmpsl movsb fnstcw adc dec dec jbe sbb (bad) decl push cmpsb adc pop shrb xor fwait popf or mov sub cmp (bad) (bad) (bad) jmp sub dec inc subb and das pushf mov mov pop xor test fistpl sahf fnstenv mov imul fwait cmp adc lock push add dec inc dec pop (bad) dec loope add fcos (bad) (bad) (bad) jns js inc xchg add sub mov inc xor lods push inc add inc adcl ljmp out rolb out loopne hlt inc ljmp inc and or (bad) lcall movsb push pushf leave inc and cmpsb enter fsubr fwait sar inc (bad) dec (bad) jb (bad) (bad) jmp xor and stc adc sbb inc mov mov rolb dec pushf hlt (bad) (bad) (bad) incl pop ret icebp sub dec out sbb cli pop jb popa mov cmpsb dec jns sbb (bad) (bad) (bad) call mov dec dec jge pop (bad) out adc pop inc lock inc dec (bad) xor push jl pop mov (bad) jmp test mov (bad) cmp or sbb fs push sbb sar jbe (bad) (bad) call popa test jge adc mov (bad) lock into leave adc xchg and inc cld sbb (bad) (bad) (bad) jmp cmp nop dec adc pop ds pusha popf icebp dec jge dec insl mov (bad) jmp repz jmp repz sbb dec xchg popa xchg aas pop icebp imul (bad) jecxz bound inc sti cmp mov std mov shrl mov cmp lods or stos enter cmp (bad) (bad) (bad) ljmp ja or xchg mov lods dec cmpsl inc (bad) sbbl jne mov dec adc dec dec dec adc in (bad) scas orl sbb sarb mov (bad) (bad) incl push jg daa (bad) sti lock out cld mov popf ss adc inc add lcall push jnp add push insl push ret adc js push enter sbb shrl mov pop lret or add icebp cs cmp imul (bad) (bad) (bad) ljmp push sbb mov sub lods popa repnz mov push in pop (bad) (bad) (bad) ljmp lods call arpl fstl jo pop or cmp ljmp push cs xchg jge xchg and pop hlt stc outsb sbb out jae mov (bad) call mov repz mov push xchg push js stos out push aas adc fs (bad) (bad) (bad) pushl push push fdivs push adc int3 cmp adc lahf or inc xor (bad) (bad) decl push cmp pushf cli push data16 mov sub es fs loopne popf out (bad) (bad) (bad) (bad) std cltd push mov rclb pop xor dec add imul pop lds hlt imul outsl pop mov shll (bad) fcmove fcomps inc dec js sti push pop shrl jmp (bad) (bad) (bad) lcall icebp jb movsl and (bad) jbe das inc scas pop int3 sbb pop aas mov xor jmp sbb cmpsl mov inc jle jl sbb mov sahf sub in pop (bad) cld pop inc jge and cmp xchg pushf mov mov cmp (bad) decl dec pushf rcrl mov pop add pop dec test and sub into xchg mov jmp jl inc mov pop push adc sbb lret jae (bad) jo add push fiadd dec (bad) (bad) (bad) (bad) pushl loopne push les mov cmp aam adc push insl mov or jl and add pop (bad) (bad) push add mov pop jg out push dec (bad) (bad) (bad) (bad) fistp xchg push cs mov dec pop jb pop sbb mov out in (bad) (bad) (bad) pushl imul out in mov inc push aad pusha hlt push lahf mov push pusha mov xchg lods dec (bad) (bad) jmp push and test repnz ret cld outsl and hlt sti (bad) (bad) (bad) dec mov popa js aas mov (bad) pop (bad) sub cmp popa or mov ror sti popa xchg (bad) (bad) (bad) call jp pop xor add aam in push and pop push cmc shlb call ljmp mov cmp test arpl addr16 inc js movsb arpl inc (bad) (bad) (bad) incl push loopne arpl sub fs je aaa inc fs xor inc jns push loopne (bad) (bad) (bad) mov fs loopne mov inc fdivs sbb jae dec rcr dec gs (bad) (bad) (bad) (bad) push adc xor popa js pop mov or data16 (bad) (bad) (bad) pushl popw lea mov out fbld data16 mulb inc (bad) (bad) (bad) incl addr16 and mov xchg addr16 cmpsl icebp push push int3 adc (bad) (bad) decl push rorl lret jmp push lret push sahf pop mov (bad) (bad) (bad) mov push rorl scas dec lods lods loopne inc imul je icebp cmp (bad) (bad) dec or (bad) inc mov imul adc (bad) imul test jae (bad) (bad) (bad) lcall and jg or push lea push lock xchg and (bad) (bad) (bad) ljmp hlt cwtl ja imul mov push jg fisubr imul outsl pop lret add imul or jle daa insb (bad) or ret pop mov insb rol cmp (bad) stc movb (bad) insb aaa mov clc nop and std insb and cmp xor dec inc leave stos test xchg mov jo (bad) (bad) (bad) (bad) cmp or mov mov push outsb (bad) jb xor stos cmp addr16 fist jno jg (bad) (bad) (bad) (bad) sti xchg out movsl outsb fbld jge add outsb sub mov outsl jbe imul sbb xchg cmp (bad) incl mov bound cmp jge outsl int3 push insl int pushf in jg enter sbb cmp (bad) (bad) (bad) jge push sbb inc mov push stos ret adc jmp jae jo (bad) (bad) (bad) incl shll inc xor xchg pop jno pop xchg std mov xlat jp xor ret jno (bad) (bad) (bad) (bad) lcall push ret jno icebp lahf fwait jb sub mov mov xchg mov outsb xchg jb xor (bad) (bad) (bad) cli jmp dec int or jae dec add jbe (bad) xor ss push jb mov je (bad) (bad) inc and push jns jecxz (bad) jae cmpsb push xchg sbb or neg jno inc je jp std (bad) pushl (bad) jne sahf cwtl shr addl xor (bad) (bad) decl or dec jne insl xchg or xorb ja dec mov icebp lret (bad) (bad) jmp std add jne decb inc and mov jbe dec enter mov popa jp (bad) (bad) ljmp sarl sub repz pushf das mov sub cmp push add xor pushf adc xchg ja jle ret cltd cmp ja sahf out inc dec (bad) ja ret enter mov (bad) ljmp cmp stos mov xchg popf js pop dec jo jl js negb sbb jns xor (bad) (bad) jg loop jns mov jb cmp nop cmpsb jns jp or xor jns lods mov (bad) (bad) jmp mov sub jp lods cmp mov gs and mov jg sub (bad) (bad) lcall add in pop pop mull inc out jnp xchg cmp sarb test lea (bad) (bad) (bad) incl dec cmp mov imul pop push jp into test testb jl push iret (bad) (bad) (bad) ljmp or (bad) stos or jl hlt jae push or nop data16 push das jge xchg sbb (bad) (bad) inc imul mov ja jge mov pop enter mov cltd cmp sbb jle jne (bad) (bad) (bad) decl add insl jle pop inc dec dec stos mov sbb push xlat jle popl (bad) (bad) jmp sbb or outsb push cmp sub jbe xor pop jnp jg enter add test int3 loope adc dec push push or xchg or (bad) fild dec mov inc sldt cmpb repnz inc inc inc cmp sub jbe sub inc inc (bad) repnz dec push pop push xor lock or or leave ss add sub test pop add sub scas ss push pop mov and ret add sbb xchg add xor mov push adc or push push add jl add mov add or add add ficom push (bad) aas jne inc inc xchg xor adc mov add and test push add or jno inc or add xorb fadds repz and jp add sbb sub push pop add repz push or add add add add ret inc movb lds call add (bad) jmp negl pop mov dec pop jnp jmp push add ja xchg mov and add jbe mov in adc das imul inc arpl testl aaa addl ljmp inc ret push add iret (bad) inc scas rcrb jno pop push adc mov mull scas loopne aas aas outsl push sbb rcl push or or inc bound stos aaa inc mov fdivr xor xchg push sbb dec push inc or mov lret cmp les test int3 je pushl pop (bad) (bad) (bad) cmp add or add adc addl add push adc jg ja adc push or movl mov pusha dec add add dec or hlt push outsl test push dec add jl pushf inc mov and xchg subl mov pop inc jne cmp inc add push cmp in xchg push add loopne xor mov addr16 mull pop xchg pop addl lock mov in adc or add or aam adc repz jo push dec push xor push adc incl bound sub xor out sbb xor or incl shrl inc push xchg inc clc addb arpl inc outsl xor aaa je test repz lahf movsb adc inc inc mov ja pop inc or das movsb daa repz jae stc rcrb add dec or pushl bound test sbb or jmp inc push nop add mov xchg inc sub sbb cmp cwtl inc dec push mov lock ret xor insb inc lods pop repz jmp mov add add add lsl or (bad) jl inc adc add adc add add or inc (bad) adc inc or loopne (bad) mov clc push pop repz fild cltd jmp push dec inc js mov dec mov inc insb pusha repz xchg add push pusha add push pop inc push pusha dec add add adc cmp pusha or dec jae xlat cmpsl mov jne fildll nop movsl push sub pop ss lock std decl in jo mov xchg cmpsl jecxz add xor int (bad) mov or imul popl (bad) imul outsl lcall lock call xor mov pusha sbb iret dec sbb andl into idivl out dec or popl pop adc movsb cmovp add das inc xchg shll das inc xchg inc push cld mov cld in xchg push push add icebp popf sbb jecxz test lahf lock addl movsl ret mov lret iret inc xchg lock add or pop negl jo addr16 pusha pop je push mov add inc faddl iret int sbb dec shlb in out cltd test addr16 xor dec and or popa repz add cmp popa sub add mov loope arpl sbb adc push aaa and or mov dec mov arpl mov inc inc das pop movsbl pusha pop ljmp dec adc ret add or punpcklbw inc rcrb int int loopne jg or jb pop ret push (bad) nop push push rcll (bad) add loopne add pop add incl in nop dec inc push and fidivrl movsb adc dec or push cmp test (bad) movb aas inc or repnz inc repz (bad) (bad) adc aas andl add ja popa pop inc push pop add xor repz fs sbb pop fisttp pop insb repz xchg sbb repz mov push and cmp mov add xor pop inc or jl fidiv mov add lods and (bad) (bad) loope pop daa xor popa cwtl or rorb sub xor (bad) mov outsl ret movsl add dec or mov and lock or insb repz call jg add mov repz clc pop jecxz and frstor push sub outsb push push sub push xor (bad) lea je add sub test pop sub jae out push mov aas mov (bad) call jae repz daa or inc add loopne ret jno xchg pop mov sbb (bad) jnp jecxz or fistl jb fmull inc or dec or add sub or lock ret inc add push xchg jnp fcoms loopne mov stos fdiv pop cmpsl mov outsl xchg loopne cmp inc test movsb outsl inc xchg ret xor mov sbb mov and dec or test push out jl repz (bad) cmp push inc push adc jmp (bad) out push inc push sbb gs outsl int3 enter decl pop scas xchg addl scas mov hlt add sub pusha and push jno incb xchg push add or dec or fwait inc aas sub les lcall or push add push and inc cwtl out addl hlt pusha pop xor outsl dec push and inc ret cmpb adc or ljmp les stos mov jno lahf push inc and push sbb out scas push dec pop mov pop push mov sahf sbb ret mov pop push je inc xor mov mov and inc clc adc pop add xor fst adc mov pop pop sub fcomps dec push lock dec pop sub and out adc lret push add sub ja mov adc mov frstor push fldt aam adc sub or pop sbb lods jnp push push xor pop add ffree fmull inc pop add das orb je inc push or sets push add jae popa dec push cmp sbb inc add repz iret and pop xor add dec inc daa in push (bad) fild fisub sti inc addl ret les mov adc and dec jbe lret js (bad) xor add stos into sarl jb add or arpl mov cmp lahf das pop add pushf adc imul mov ja mov add fdivl inc or fimull loope fldcw jge inc clc inc ja call movl mov repz adc add fnop dec sbb xor add out sbb pusha ret loop repz add test push and xchg fcomp sarl pop (bad) pusha mov in jg sahf sbb aas mov imul add mov sbb inc mov popa cs inc or mov add sbb dec jge repz and scas icebp jo push call and (bad) xor fsubrs repz add pop fwait cmp hlt jle add inc or adc ret sbb cmp repz xchg out cmp jo outsl sub ja arpl pop add add mov adc decb inc add fild hlt add or push pop dec or inc mov dec or and in xchg repz dec and loop xor popa cmpb add add clc cwtl xchg repz cmp xor fwait sbb les dec jl add jge mov (bad) jnp xor flds push sub outsl pushf jecxz or (bad) je int3 mov lcall cli jbe js or dec xchg repz enter lock xchg dec outsb push inc mov mov pushf stos cmc or pop or push pop daa mov cmp add fildll jmp jnp mov jae jnp push jo push add mov fs push jo pop sti (bad) fdivrp inc or repnz push push and (bad) add insb dec push jo adc mov xlat sbbl and push inc add js mov add inc hlt dec cmpsl repz (bad) or fbld add movsb nop and out cmp sarl test adc je addr16 adc fldl arpl xor out mov or out loopne repz (bad) xlat (bad) aam xor push push adc ret dec jo enter loop pusha mov cmp cmp lock out (bad) push pop dec push pusha add inc or (bad) lock push in mov or pop add mov jo add mov rorl imul add dec ja push faddl dec pop add or mov add repz mov repz xchg cwtl or push mov push lret sahf int3 loope sbb or mov int sbb int3 popf dec or out or mov ljmp jmp in push int3 lods xor sbb push fadds ret (bad) xlat inc fisttpll test test subb inc pop fs stos add adc jecxz jae in pushl arpl aas dec mov add dec push dec mov cwtl jae notl push cmp inc (bad) xlat and sub stos mov and pushl xchg dec inc mov pop mov sub xchg mov sbb les outsl lock std inc cwtl xchg xor dec mov mov rcrb or int3 pop (bad) jae or je (bad) incl dec mov fwait pop jl enter inc test inc sbb and or or subl cmp fwait push push decl fwait or (bad) out add leave rorb push out mov orl adc adc pop insb inc std dec shrl adc or push addr16 dec mov or pop push and stos es dec push mov std pushl inc call adc or inc inc add inc push sbb push sbb adc sbb cmp loope dec dec scas out pusha shr add dec outsl mov pop mov jg dec or js and push lods and pop movsl mov or repz xlat xor repz pop rcll retw sti jp lret out nop and push pop jecxz call dec (bad) aaa sub lret jno inc outsb adc inc insb jmp dec pushf out incl adc pusha sub dec aas loope leave xor jmp (bad) inc jbe xchg push add mov mov cli into inc cmp inc or scas xor xchg cmp mov test lahf push mov nop dec dec xchg mov inc stos inc dec or in repnz out pop shll or inc ljmp dec pop dec pop and ret push and or sbb imul mov movsb adc (bad) add adc rep int3 pop inc pcmpgtb jg push pusha fstl outsl sbb pop mov es mov setnp push and push xor inc or cmp gs dec and or div (bad) aas dec or push imul add js dec sarb outsb adc clc repz stos mov (bad) xor (bad) in pusha dec dec mov mov aad dec add dec (bad) insb (bad) ret xor inc enter (bad) imul les dec cwtl addr16 jne in pop jecxz mov dec xchg xchg jp inc fwait or repz out xor test rorb jo (bad) mov (bad) aad dec lea enter xchg adc imul scas clc mov dec jg dec or out sub scas sti pusha pop mov dec iret add ja mov dec push jle inc push insb push fadds or adc jo dec fcoms lcall sti (bad) fmulp je (bad) rcr adc es fistl push (bad) sbb icebp or pop jge add pop xchg gs push or mov test cld repz (bad) sub cmp inc push xor or nop fs cmp adc cmp std call and push pop icebp cmp pop jae ret sub pop scas push adc sbb scas comiss xor sbb xor xlat (bad) mov jo mov mov mov dec addl dec mov imul push or pop inc sub and xor aas loopne enter addr16 xor mov (bad) sbb mov inc push daa xorb es adc sub loop lret imul notb lahf add dec or jno or addl rcrl ja lret (bad) add cmpsl pop hlt pop sarl mov mov xchg icebp das push dec push rolb add push mov loopne in outsb push les dec push int3 add inc out fiadd dec pop cmp push cmp repz (bad) aaa jge add inc add inc addl orl test sbb push xor aam dec add cwtl sub enter popf and sbb and out negb mov dec pop std (bad) and jmp std and pop jmp adc adc jnp add cwtl adc roll add inc cwtl dec xchg adc test mov cwtl dec aas mov (bad) xor scas das add fs hlt push inc add push add lea in xchg nop insb dec or mov icebp fist enter scas sub adc xchg add inc push and test sahf cmp pop ja arpl aas adc adc repz dec adc inc lret add adc or adc loopne pushf push or push jge push out pushf aaa push sbb adc orl sub sbb adc das sti adcb xor enter or push mov sti test add sti or adc adc inc dec add push sahf and pop ja adc adc adc orb push push xchg int3 push sbb sbb xchg ret xor call push jnp push stos (bad) (bad) fstpl push dec push pop dec push pusha add mov pop mov insl or je add and fimull adc pop and push pop mov push xchg loope stos pop pop add and imull add das xchg std mov aaa jo inc lret dec test das xor outsl push adc mov addr16 es xchg or lret push push pop add add pop mov dec aas movl sti jl pop adc js in mov add or test insb adc subl ljmp inc bound out fs mov insb and or movsb sub int3 xor push iret rcrb pushf adc xorb (bad) jne xchg scas xchg adc out or and popa pop les mov pushl mov aad xchg add adc sbb push and daa adc push and rcrb add pop cmpl out or sub aaa mov add mov cmpsl add mov mov popw and punpcklbw xor aaa pop lahf adc jno cmp stos mov push rorb inc or out add dec jae add incl pop inc adc sti push outsl popa rclb add (bad) test xor xor adc mov fs testl add jg ret ds add loopne loopne add xchg mov push mov xchg pusha xchg loopne outsl pop insb pop dec orb jb mov lods xchg add call add inc gs ret sbb mov out fcmovne pop sub sub cmp sub jl or sub jnp sub (bad) or jl mov lcall jg add pop ja loopne cld incl jnp push das add jo std mov loop or popa push pushf adc mov ret jnp fmull iret and pop xor (bad) fmull adc sahf push fisttpl pop or sbb inc cmp dec inc or icebp (bad) pop enter mov and (bad) (bad) hlt add call addr16 pop cmp hlt (bad) std sbb loopne ret add pop push sbb push and adc pop stc pop add movsl sub or enter sub jmp dec push or add or lcall mov push hlt lcall pop add mov xchg mov pop cld daa jae mov addl notl dec ret andl aas cmp dec dec cld rolb out adcl sbb pop hlt pushl gs inc add add enter and fldl jp jnp or daa push pop and inc or mov jo hlt jmp pop rcrl mov jmp ret js push addb push dec xor mov add add fmuls mov pop push push mov add mov lock incl pop (bad) adc daa andl and add mov ljmp (bad) lea mov add sub into mov cmp ss push arpl add out dec roll sahf jae cmpb (bad) mov xchg cli jle xchg push rorb push cld aas shrb or xchg push inc inc push push add pop inc sub bound rclb add sbb dec dec add add inc or xchg xchg call or inc push loop in imul add mov hlt call xchg fs stos negl stos sub inc pop jae and cli ret add ja xchg hlt or mov std jmp dec fwait jg xorb dec fbld scas shlb cld jmp add std mov cmp dec sub inc or (bad) push inc insb inc inc vmwrite push test es ud2 mov rclb and xorb mov xchg and fist pop adc test and and sub std call outsl add add push add repz xor dec or popf in add add negb (bad) jg inc push dec inc push push bound pop or add and mov inc js inc jnp xchg andl mov add dec or add jle fucomp pusha and stos outsb stc call outsb andb cs or pop pop aas add push xor push xchg jno jp mov push sbb add add jp xor (bad) cmc cmp add cmp les add sbb inc mov (bad) arpl test pop pop pusha das hlt call fsubrs fmull dec or ret cmp les or imul dec push or cld add adc pop stos fs fbld mov lret and jb inc push mov inc lret out mov add gs inc out (bad) push dec pusha arpl inc push jnp pop cmp sbb adc incl push iret add cmp rolb xchg push pushl push adc cltd andl pop sti inc mov mov cmp push sbb inc sub adc push fistpl ss ljmp dec pop pop mov cli das dec push rolb fiaddl pop adc test aaa and cmp jmp aas iret dec or inc or (bad) mov stos test std call push adc inc and enter pop dec cmpsl and notl ds xchg adc arpl inc out cmp mov pop or cmp sub (bad) mov dec adc or andl aaa inc iret pop cmp decl and pusha push inc movl into add cmp pop mov inc ljmp out hlt incl jg or pop inc lsl push jne nop clc adc add out inc add shll call inc or add lahf mov mov lcall (bad) pop inc push jo int in push cmpxchg inc or add push out ja inc hlt lcall mov add jae push lods outsl das je xlat xchg mov pop aaa xchg jno movl adc mov jmp add out inc pop push nop dec ret ja inc or test xchg add lret mov fbld add mov call mov pusha sbb mov pop lret and mov fs pop xor fs xor sub dec push and ret aaa and hlt pushl add in (bad) mull dec clc pop (bad) pusha std dec call imul rcll push (bad) xlat push dec hlt ljmp adc pop adc push flds sar faddl pusha rorb mov decl or test stos inc or stos pop jo push jmp xlat (bad) hlt pop jge push hlt (bad) js out shlb push xor mov inc aaa hlt push sbb add pop jmp add loope inc sbb add or hlt ljmp xor (bad) inc xchg or jg js lret jo xor jo add icebp pop xlat jge jl insb pop dec pop pop daa dec cmpsb or cmp sbb xchg add or loope add aaa inc mov add dec xchg or and (bad) mov adc pop cmp push sbb dec mov mov or dec pop add (bad) jecxz in pusha sub or jne push loopne pop clc ret add fs add lcall or les adc dec cli or push sbb jb repz push hlt call or mov jnp fldenv decl mov add lods add bound bound jecxz pop add ja push hlt incl dec mull jbe push out and xlat icebp inc or mov xchg loope jae inc inc loop aas add inc in loope pop fwait lock lods das pop das push pop xchg pop sbb xor jae push jb cmc push (bad) call xchg pop xor mov pop add hlt je sbb fild je and pop xlat pop out pop inc call movsb das rcr sti jg mov (bad) push dec dec push pusha jne jnp enter dec or fs pop outsb push dec dec push pusha jbe jbe adc push dec arpl cmc push add cmp incl leave jno insl add pop push sbb or js and orl addl mov xchg inc jl xor and cli jmp lret and hlt cmpsb and pop lds nop jno or inc insb test mov dec add mov xor imul or mov jle or ret cwtl std push mov push cmovl sbb arpl push mov addb imul arpl push jo push shlb jo mov or mov insl cmp (bad) mov fs jl add insb pop jae inc pushf popf push dec adc push cmp push add push push dec or dec push insb push inc push cli shll jbe jb push jl push mov jnp pushf pop hlt call xchg cmp stos pop or jae push xor jo ds mov adc jnp xchg mov cmp das xchg adc or add rolb push push enter and ret test sub out pop hlt xchg aad pop mov iret jmp in iret je lret pop sbb sahf xor ds xchg cmp push je mov sub adc xrelease aad cmp outsl test dec xchg js roll jecxz mov jmp pop hlt jmp and nop push add and xchg inc stos iret pop jg cmpsb or mov (bad) clc xor xor cmpsl or dec push rolb out daa mov or hlt call cmp aas inc mov inc xor jns sar push jge adc cld xchg ljmp and les incl hlt mov pop adc cltd hlt call aas outsl dec pop popf push xor inc je adc pushf mov push or jns das nop nop lds je fadd pop fwait and sar push xor int3 or cmp (bad) hlt decl (bad) jmp movlps jmp add aas xlat jg pop dec fildl int3 hlt call das test jecxz dec lahf or scas add cmp mov hlt incl cmovns aaa inc mov inc cmpsl inc and popl clc xlat hlt ljmp adc and or (bad) js cmpl inc jp or test dec or cmp ret test jmp inc mov stos dec push add jge add or inc pop mov sarb push (bad) xor hlt call adc and mov hlt push pop sbb add add rcll rcll adc insb cwtl in aas pxor fstps mov divl hlt hlt (bad) mov (bad) mov or sub dec cli das pop mov test pushl fcompl lea xchg dec pop mov sbb lret jecxz nop inc data16 das mov inc and push inc xlat pop test cmc xlat mov popl push add push out ds add insb push pop and inc add adc adc add add in xchg hlt sub and loop hlt inc nop xor ljmp push jns or xchg and aaa push push nop dec cmc (bad) jmp rol sub das cli xlat imul push mov sarb pop das add imul inc inc js cmc call or or mov add lods inc or push fstl xor pop inc pop inc add cmp or insl cmp test or negb or rorl lock mull sarl mov adc idiv xchg ss sbb aas and std add push mov test idiv das add mov mov or mov insb aas push daa dec (bad) idiv add out adc mov jb pop adcl lret adc mov test and arpl stos loop mov pop out or ret jg dec addl lahf or mov cld inc testl fild add mov ret or pop (bad) pop and rcrl (bad) incb add and aaa xchg in lahf pop call and add add shll fmuls jmp jl fs imul push pusha or ret ljmp fwait nop dec mulb xchg sar out add push fwait mov out push idiv jp out pop inc mov iret add jge adc inc dec cmp push xchg xchg cmpsl das dec mov les push fsubrs lahf jp insb push sub negl cmpsl pusha bound xor in mov imul cwtl adc and jmp addr16 cwtl test call das cli dec push inc cmp lock (bad) mov pop das scas cmp mov (bad) (bad) movsb inc xor xchg and jge daa (bad) verr call cs (bad) outsl ja cli out das pop jo idiv outsl imul ss sbb adc inc push mov or dec idiv cmpsl (bad) jge push stos (bad) xlat (bad) mov testl dec lock and or sbb jecxz iret fdivs ret loopne,pn addr16 adc push idiv dec gs dec adc push mov adc pop jne daa inc cmp and leave repz inc adc (bad) and or sub les dec or xchg roll cmc sbb inc jnp outsl faddl scas mul push idiv (bad) jnp inc sbb xlat stos call loopne cmp xor inc or das pop jnp push idiv sub (bad) jnp xchg (bad) xor sub dec mov rclb mov icebp mov (bad) xchg push xchg xor outsl xchg ret and dec sub or lock sub push idiv pop mov fwait inc push push add pusha dec dec mov lock out jge divl jg sub pop pop mov mov push out xchg nop loopne mov mov subl fadds inc jne sarl pop dec repz xor mov xor push push xor andl push and cmp push iret dec pop arpl pop aas popa iret (bad) aaa adc aas push cltd jmp popl adc inc aaa mov addl jae mov and pusha inc and cwtl jmp lods cwtl adc inc pusha mov mov cmp adc mov ja,pt adc in daa pop pop idiv cmpsb adc cmp idiv std mov dec push and sbb push and daa mov movsb mov decl lret and inc sbb push mov cmp cld mov pop cmp sub adc idiv lret inc inc cmpsb jnp test sub inc xchg ds jmp jge or fstl int3 and fmull or movsb adc dec mov inc or lock add and xlat mov xchg aas dec imul jb mov add or push pop mov popa cltd outsb push or pusha mov adc pop ja add inc add or aas sbb cmp cwtl outsb mov rclb adc and lea adc mov cmp adc xchg imul pop adc bound adcl test adc sarb dec adc jecxz dec push xor pop je sarl mov cwtl adcb or and adc cmpl sbb (bad) cmpsb adcb mov rorb (bad) das adc mov add clc (bad) mov aaa out call dec sub idiv or and insl add inc mov inc or dec je mul lock and negl bound sub test int3 xor cmp push lahf aas or ja add (bad) push add jmp pop in or dec (bad) dec add aaa adc pusha mov and mov imul popa scas pop sub (bad) jb pop mov add jae adc idivl arpl subb leave or daa out (bad) out sub xchg dec mov pop inc pushf cmp add shrb roll add fwait int std stos (bad) adc idiv ret sbb cwtl leave fisubl inc cmp xorl invd xchg icebp and add pusha add push push arpl xor xchg jo outsl pop and movsb pop adc adc dec sar inc jo (bad) incl outsb mul or call jge sbb dec pop incb andb sti cmpsl add notl inc push dec push jp aad add inc or inc or mov xor pop lret dec inc push loopne add enter pusha adc ds inc or negb ret mov sti shrb call or inc add sub dec and jg jo incl add add xor fistl movsl xlat addl ja mov dec cltd jmp inc push inc subb dec jb jae sahf xor add pop push psubusw (bad) lret add or mov mov orl adc jmp sbb mov dec imul (bad) stos xchg and jnp imul adc adc scas int3 adc xchg push xor das (bad) or pop mov adc inc or add dec pusha lock or les sti and out (bad) rcr iret call cmpsl mov arpl sub push inc and or ret cs push inc scas mov xor cmp jmp out jmp enter add pminsw xor (bad) ror adc push outsl leave lock aaa mov push mov inc inc xor pop jo push pop cmp pushl popf inc dec out inc das ret mov push js divl mov scas inc push inc add jecxz push cs inc or mov popl rclb imull dec and sbb push sub xor pop mov and add loop add mov test dec je mov mov movsb dec cmpsl add (bad) fwait or xchg mov add push int3 pop jo sti add xchg les push dec or pop push mov add push rorb push mov test or icebp mov pusha insb or mov and inc pusha mov push subl pop (bad) (bad) mov adc nop sti mov push xorl inc or jp xor test fdivrs push add lea sahf jecxz decl push push or xor sub or call ret jb xor (bad) jnp sub dec mov fisttp inc mov xchg test dec push dec adc lcall aaa pusha sbb mov pop sbb insb push dec rolb xchg inc or jmp loope and inc sahf push mov adc push rolb jnp addb or mov sbb out inc sbb aad mov dec std fisttpll add les add int3 add mov pop xchg add addb add daa rolb or mov or pusha xor pop pop push or inc add push sbb xchg fist pop inc mov jo jmp cmpsl add pop cli dec repnz add add adc sbb test adc push bound addb inc adc xchg idiv jecxz (bad) sbb mov pop sarb xacquire mov idiv test or xor jmp add cmp sbb dec push nop add mov int3 jge sarb das pop push sub push test xchg or sub or idiv jecxz adc pop out add xor push sub pushf idiv mull jg push rolb inc push movsb inc rolb push mov adc lods or mov je add or inc or xchg xchg popf mov add add adc pusha cmp fstps (bad) mov in inc lahf add les punpcklbw mov sub add add addb add pushw aam sbb aam push cld adc arpl nop pop sahf popa push loopne add or xor sti (bad) push cld inc inc jns xchg jbe xor or pop pop hlt push sahf xor stos inc push nop (bad) in mov mov inc mov inc adc dec or mov sar fadds sbb js test ss outsb lock add add insb repnz xchg jne cld sub bound in pusha sbbl fwait dec inc add inc ja fstl sub lods add add push sti jae inc adc iret add add divb pop add add cwtl sub cld pop fadd push mov add pushf sub out jbe aas jb pop insl add pop jbe pop add mov dec push lock fs mov dec jmp iret jne push pop inc dec pop dec (bad) pop neg pusha lahf (bad) inc outsb rclb sub add div sahf bound add add pop inc (bad) pusha fist inc movhps add push js idiv test jne or in cltd (bad) pop and add idiv or adc out add xchg sbb cmp lods (bad) dec adc add scas and cli andl sub test out stos clc jg sub add inc (bad) idiv testl inc add lret or xor inc or push adc outsb or adcb enter sbb mov idiv ljmp lret jbe add add ja inc mov aad xchg or add jnp sbb into dec jp lahf gs das test inc xchg push push xchg cmpb iret pusha push nop mov imull mov inc add ret sub or xchg pop dec or add iret notl and jae mov sarb dec jno inc repz mov loop idiv dec jae add xor test insb jae or jns push inc add dec lcall dec xchg or add idiv jl mov inc push jo pushf std les lcall jle xor or mov mov incl test mov push mov and jnp fisub jge out mov push movsb pop mov adc lret or jnp shr or cli add adc sarb mov inc lret and add push inc xchg in test aas in out and pop push dec sbb add pusha jmp inc mov sub outsl push fnop xchg in fild push adc add pop test out idiv sbb xor inc jge mov sti add add clc add and push (bad) xor adc pop add je cmp inc xor sub mov push cmp or cmc cld repz jo in add arpl xchg jbe sub in aam inc das inc dec test jnp push xchg cld pusha adc add mov and mov xchg adc or dec out inc sar adc add adc loopne mov xor jp mov or (bad) mov call and add add jno scas nop pop push add jne xor dec dec push es add push jge dec cmpsl into lock or add inc imul outsb sub sti pop cmp clc push cmc add lcall pushf bound xchg and mov jmp and pusha daa add cs pop std movhlps adc push dec inc push pusha add (bad) push jo push push add add inc or rorb and aaa xchg and and loopne clc incl lds mov fs pop les sub push addr16 push or loope sbb mov sub shr push sbb xor imul xchg push pop and dec sub or or sub jl xchg dec or inc sbb sub jns das sub sbb inc or inc sbb in push push inc dec push sub sarb ja pusha add dec fadds clc punpckhdq mov fimul inc lea (bad) xlat (bad) adc mov addl push fiaddl mov ret frstor addl imul ret and shlb add sbb dec (bad) movsb aaa les aaa (bad) outsb icebp inc mov dec test push inc ret fdivl cmp mov or clc out rolb sub push (bad) inc mov sbb shrb mov scas out in fildl xor int3 jne or xlat inc add aaa add clc ljmp cmp mov jmp add jnp push add or add mov out pop xchg push pop sbb jg push add mov fadd push jno push jo test mov orb sub add push pop add scas xor sti mov or inc sub insl mov xor jecxz imul push and cld push mov and dec or test add pop push sbb sub or stos jg push mov and imul cmp inc or aas adcb (bad) int or cmp xchg sbb inc aaa add pop inc push clc ljmp stos pop mov add pusha add or push inc push pusha mov and andl xchg pusha add dec xor xor cmp (bad) pop mov add adc pusha sub scas push mov dec xor push add rolb or gs add inc pop pop inc mov add add repz loop sbbb ljmp xchg sbb xor push push push (bad) es pop jo clc ljmp jecxz out add inc les xor or inc dec jae and lock inc mov pop pop jae insb pop pusha inc jge int3 adc (bad) add ljmp mov or lahf push and inc pop mov pop mov inc push clc decl data16 mov push add push and (bad) xor arpl xchg mov loopne inc push inc jnp dec outsb cmp inc add sbb push inc dec and clc incl jo (bad) or add add adc add nop sbb (bad) out or icebp outsl xor sub mov xor or test inc cmp in lcall (bad) pusha sbb aam xlat jg cmp add xor cs cmpsl pushf (bad) mov dec loop xorb pop adc fisttp loopne add push rolb into or int3 or faddl psubq sub or inc push roll and loope jle pusha pop jnp jp enter add add sti add sbb jle cmp adc xchg mov mov clc inc cmp push mov dec dec inc mov push push mov adc mov ret inc mov dec inc pusha vmptrst inc data16 cmp add and add or xor mov sti xchg pop xchg pop jge add inc pop mov mov clc dec repz addl int3 jo dec test sbb test sbb and inc outsl movsb push push xchg iret pop into push jg lcall or ret test stc add push adc out cld jnp es (bad) in cmpl stos cli addb test in call mov (bad) inc adc decl add mov jl push subb push add (bad) fsub xchg adc sub (bad) sti or rorl outsl mov cmpsb or out out decb xchg mov cmp push add push add xor add add inc or dec add aad push dec inc inc xor jg adc add or clc jmp adc in lods push pusha add push push sahf stc add clc add add ja jne (bad) insb pop and clc ljmp jp lods out jmp pop add scas test notl xchg daa cmp scas xor js scas adc dec jo or sbb cmp and das pop pop das sub add inc xor xlat mov or inc add movl iret push cmp push nop fwait add (bad) shlb add fidiv aas dec das inc xor call add cmp xchg jmp sbb sub movb inc mov shrb bswap jg jns and push xchg lret or xorl int3 inc jnp xor jg push roll dec stos ret mov aas das rcrl push popa or inc or jo or outsl shrb cmp orl push pop stos add adc (bad) lock cmp inc or mov (bad) fcomps or sub mov rclb adc mov cmp clc inc lock mov loopne add jo jne adc sbb mov add add xor mov inc or faddl hlt pop add clc inc testl mov sub push xor add xchg and xor or js mov add ds jmp inc mov je adcb insl inc or mov dec inc test clc decl or add xor sub and inc int3 dec les xor push inc or movsb dec or ja mov or inc ret add mov jecxz lock mov clc lcall jmp sbb subl ljmp popf (bad) (bad) pop adc or clc decl rorl inc adc dec addl mov in inc or add push xchg add or cmp or ds sub jo push push add loopne and or xchg push movsb inc clc decl inc jg inc push enter mov or and nop adc push stos add aas jo mov (bad) std mov les fstl cmp mov cwtl dec dec cmp mov roll dec clc push rclb gs clc mov dec or push inc icebp dec adc or testl cmpsb rorl sbb sbb cmp push jmp call adc repz lcall push addr16 rorl mov push adcb inc invd inc addr16 mulb inc xor push aam sub pusha xor insb and sbb clc inc aas ds sub sub gs push mov adc inc or adc sbb das outsl (bad) mov in adc int3 nop jno adc rcll (bad) ljmp adc inc cmp mov push scas mov push in push add dec jo (bad) aas xchg pop xchg add adc cmp add push or (bad) mov pop fldcw add xchg popf add pop cmovno es mov incl (bad) inc inc bound loop dec lcall dec push mov push clc incl pop push pop sub mov movl push clc dec call shlb movl int3 lock adc pop dec pusha xchg push mov sub pop inc xchg fs jge push pop js mov mov inc pushf cmp and or das adc clc (bad) sti cmp adc pushf add jg dec or fcmovne xor (bad) mov add mov add pushw nop loopne jno das adc lahf dec and dec push clc ljmp inc mov push inc dec xchg inc jne add xor xchg mov (bad) lret push (bad) cltd sub pop inc push inc pusha jb lret rolb (bad) dec outsb or pop xor mov daa pop (bad) jg cmpsl mov inc xlat das insb in push add pop dec inc pop clc jmp addr16 lock sub push cltd dec sbb push push push flds or mov pop aas sbb dec push orb dec imul xchg push mov movsl lods mov inc adc outsl xchg daa dec xor into pop fist push insb pop clc incl inc roll xor or sub test lods add roll inc lret xor pop clc incl pop loope call inc gs push testl inc addl add rolb fidiv pop popa sbb inc pusha cmpb mov aaa cmp lods sub das xor dec mov jb push add adc mov and xchg sub or or mov pushf mov sbb xor push mov sub fistpll sub sbb push and add add adc and push pop push sub mov rcl mov fmuls dec lds in lock add push enter arpl add pop add stos lock in add sbb in push or fadds cmp sahf xchg ja mov inc or add add inc sub cwtl xor sub insb jb (bad) call inc inc push jae inc inc push or test sub jno cmp cmp adc xchg push je inc add insb daa jnp mov xchg rolb push mov mov push rolb add xchg mov xor pop test inc xlat mov pop subb bound (bad) dec or sbb push and inc or sub nop and paddq sbb lahf mov addl pusha add cmp add fwait sub push xor js sahf sbb mov or xchg inc or out outsb aad add insl mov xchg xor dec out les dec cmp dec pop arpl inc xor mov dec dec sbb cmp data16 or jecxz jbe dec and cmp repz test mov mov sahf mov add lret imul pusha ja incl or cmp pop out cmp bswap and popf in inc mov pop xchg mov cwtl js mov inc inc adc add aam or dec mov repz cmova xchg (bad) jno jne inc or mov std ja sbb call xor lahf push xor sbb arpl dec or dec adc or dec dec or add jae and cmp sub or push xorb or inc jecxz mov push sub mov (bad) jae jmp sbb nop lahf in and jo (bad) pop xchg enter add or mov adc test ret sub shll xchg mov cmpb add add adc xchg daa add out push push fwait test not jae push xlat add imul or add lahf jl and loopne pop xchg jecxz sub dec rorb pop and xor add mov mov jbe pop scas sbb add clc dec add dec inc push pusha add adcb xor out sbb mov dec fist inc repz rcrb xor inc pop mov loop add xchg mov inc xchg sub loop and cmp roll inc push and push mov shlb push add lds ret jmp (bad) xchg mov andl bound cmpsl outsl add subl dec xchg lret add ja cmp clc incl xor imul mov sbb subl out lock pop jg ret ret mov test mov and push or dec dec push movsl mov lock repz arpl test adc jecxz push xlat adc sarb lret sub dec pop dec ret and scas mov or mov add inc int test xchg adc adc inc ja outsl enter scas imul stos dec daa loopne push pop pop or js stos jmp add add add fldenv and add add or pop xor cmp mov out enter clc jmp jnp fadds xchg (bad) adc sarl push rolb xor xchg adc mov ja fiadd pop testl adc inc inc or add cmp cmp inc or sub xorb (bad) clc lcall imul or jne dec xor roll jl nop clc lcall aaa add adc aaa (bad) or push mov (bad) or test daa cmp inc push push or mov xlat outsl fs loopnew push inc and outsb and push enter cli push add mov mov aam adc rol pop inc or xchg add dec mov adcl pop cmp ret dec or hlt or (bad) mov daa mov dec xchg nop je test push add xchg dec jb mov (bad) pop push cmp add cmp clc call xchg and mov push add adcl out mov push adc clc jmp arpl xor push push xor or or sbb jb inc add lock xlat push or clc incl inc add roll int loop shrl add pop dec pop pop sahf clc inc dec inc mov sbb add xchg arpl imul (bad) jae test or xchg pop inc loopnew les inc scas bound loopne and pop inc sahf pop aas arpl mul add inc ss push in add pop inc and add je push xchg cs imul andb out dec or pop in jo hlt dec or and rcrb push push and shlb clc (bad) sti outsl push or pop add add addl sbb add mov xchg add push pop lods push mov or jmp shld dec or aad (bad) repnz push imul and popa push sbb fisttpll out lods pop nop xor push pusha add xchg mov xor cmp adc xor pop cmpsb clc (bad) (bad) nop and arpl sbb xor test call or jo imul pop sbb ds popa jmp inc cli add gs mov pop or push adc fadds mov inc or cltd andl add es and out cmpsl clc (bad) out add sub imul xchg aaa jg sbb sbb pop inc aaa pusha adc pop and add out les cli push push sbb push dec and cltd stos xchg sbb or xchg ja in repz xor cmpsl push stc and sahf call aaa int3 and cmp arpl xor sbb xor add cmp out orl imul mov sbb cmp mov adc and mov inc xchg pop faddl loop push pop mov int3 pop imul or sbbl lret sbb mov inc inc xchg dec push dec jg add rcrb lahf sbb sar data16 pop imul jmp add xor dec add push sbb fadd mov xchg inc push and movsb and xchg sbb or hlt arpl mov fist dec inc out xor push cmpsb shr ficom ret or repnz xlat inc cmp or test aas xor xor pop xchg aas xor js and cmp and mov sarl mov push test bswap jne dec fdivrl pop jo and je push jae jmp mov (bad) pop pop addr16 sbb daa aaa mov mov test jge dec pop loopne xor movb mov jno iret adc clc ljmp icebp int pop xchg xchg and das pusha (bad) out pop pop outsl pop mov inc push pop dec (bad) int loop xlat aam push ret ret negl xlat push mov push push pop pop and add add addr16 or push and aas xchg dec or out in imul and ret push aaa dec les loope or ret adc stos clc jmp push movsb mov mov dec int3 mov pop jecxz lock hlt adc lods xor mov cmpsl (bad) xor (bad) push bound mov jg aas or inc push inc add sbb push stos sub stos mov add outsb data16 add aas loopne loopne hlt mov xchg js inc inc or call pop sbb movsb sbb pop xor clc lcall data16 and inc mov push shll (bad) pop fdivrs push pop (bad) pop leave push push cmp push inc bound xor push mov imul jb mov addr16 cwtl mov adc mov int3 xchg xchg jo rcll xchg fimull pushl jno xor xlat push fwait in push lahf je or or xor mov xor ja sbb or add icebp (bad) lret popa ret ss ret outsl or jo xchg xor (bad) mov sub adc sub cmp pop sub dec xchg dec outsl or ja or popa inc push arpl das inc fistpl cmp stos push and popa add add inc or jecxz cmpsb and jb and mov mov call mov cmp inc or xchg mov cmp mov add loop xor mov test lret test mov or mov dec pusha iret mov rol ret adc inc (bad) add scas aaa arpl mov ljmp push addl dec int bound add mov push cmpsl cmpsl sub pop push iret inc shll fildll in test inc addr16 jo and inc stos daa inc mov xor and (bad) dec xlat add loopne scas sbb push cmp adc mov inc push push push jns add cmpsl add push push push addl push fidivr sub lret inc mov pop xlat xchg cmp popl mov add mov out cmp sbb clc push (bad) repz pop adc mov pushf sub or outsb mov inc jnp mov add mov add xchg pop or jge inc push test dec push lods pop fwait adc push test test mov and push xchg scas xor ljmp dec nop mov imul add inc sbb add test push jmp inc mov cmp push inc dec add push mov in or mov cmpsl inc inc stos jecxz or rorb das ret sub mov push pusha andl jno enter pop icebp (bad) xor push aas shll jnp (bad) cs add jg push xorb shrl pop fmuls repnz jmp dec inc jmp ret xor aad pop lods mov test add movsb and cltd sbb and enter dec inc or inc movsb sub pop jo and fcomps sarb inc arpl dec push inc sbb push mov xor inc mov jmp (bad) jmp inc push sbb addl mov push sub ret gs sub xor or movsl add cwtl sub add arpl fldenv add mov or inc rorb xor clc inc pop jl mov jo add push js inc sbb pop lret inc xchg or push lock ret ja or ror cmp enter and (bad) push jg jno jae sbb fnop pushl add dec and test xlat mov pop test les mov stos fldl enter add push das cmp adc fdivr call cwtl fwait inc push dec add les cmpl cltd pop mov insb push mov xor push mov add adc push jo push add rcrl outsl enter xor dec (bad) pop mov aad into mov (bad) push cmpsl mov pop inc or popa popf fild mov repnz pop sub pop sbb nop popf es push adc addr16 clc (bad) mov mov stos dec push xor mov adc lret dec clc dec mov adc adc hlt clc (bad) out jecxz pusha lahf mov inc push pusha jnp dec or ljmp cwtl pop aam fsubrs jns push (bad) ds pusha jle pop cs sbb push idiv (bad) jp iret mov loopne js dec cmp mov pop adc dec xor (bad) movsb rcll mov clc call ret jl out inc jns or xlat push mov inc or in inc mov add mov sub inc mov les pop loope dec jo scas mov (bad) fcmovnb cmp xor push aas sub sbb push jmp sbb add pop pop test and lcall sbb mov sub sti clc pushl (bad) push in ret add shrb inc add sahf mov clc jg inc sub pop mov add sbb push das inc cmp nop addl fsubrs pop sub pop jmp mov (bad) mov bound cwtl arpl out push (bad) push inc or scas add shrl dec orb scas and test (bad) fdivr (bad) addl rolb pop fs mov inc push (bad) jno mov or mov les es inc mov jo inc sti pop leave (bad) pop rcrb (bad) out dec inc mov repz xchg mov inc add add and jnp dec push ret xor fwait mov push sbb scas add shlb xor inc or mov add dec daa sbb or inc in scas test add pop enter test stc imul gs inc add pmaxsw out mov daa lods daa lock pop xchg and test (bad) stos xchg gs aad lock xor pusha aad jcxz out add jecxz xor mov mov bound xor add add sub arpl or mov add adc cmpsl dec outsl xorl mov add dec add pop movsb and xchg sub mov pop repz cwtl jmp sbbb in xchg jmp pop xchg or inc shl icebp or mov lock js (bad) sbb stc lcall push pusha sbb (bad) xor jmp dec lods mov hlt sbb xor stc (bad) cmp pusha add or in lcall inc sbb inc fsubl outsb call mov (bad) xor pusha pop xchg xor push dec sahf mov ret mov push dec jmp fidiv fmuls stc incl arpl add orl pop jns add in popf and mov pusha xchg adc push jp inc pushf (bad) sti pop cmp mov stc pop inc jle sbb inc (bad) out pop inc mov je pop sub or lret jbe jg pushf test push push aaa push fwait xor pop lods fcmovnb add aas and push pusha xor adc add xchg iret shlb stc jmp jmp shlb daa pushf xchg fstl inc add dec stos add test add shrb sbb xchg sbb fnop popf jo add inc xor (bad) or or or outsl movsb mov jl adc adc notl xchg adc ss rclb mov or inc xchg mov roll mov push cmpsb push (bad) out das or sbb and fs movsb xchg push xlat cwtl pop fimul dec dec cld and adc add mov xor rclb push pop pop pop lret pop inc sbb js mov stc jmp adc dec icebp inc dec in dec shrb and adc out popa push loope (bad) xor inc lock cmpsl xchg cmp xor add adc neg xchg inc add inc stos add inc cmp sbb jg arpl es mull fcoml jae enter add add pusha and cs nop jnp popa add cmpb and repz lds fneni(8087 adc pushl scas sbbl test (bad) jle mov or mov aad adc mov in or push adc les adc sbbb adc stos mov (bad) xchg push cmp add or and and dec push sub loope mov adc push xchg popf inc xor test mov dec jl xor pop mov push adc lret pusha xor pop into stc add add (bad) arpl rorl lahf add inc add push sbb sub (bad) inc je and inc out or incl sbb and scas xlat push fisub or test bound mov stc inc btc adc jge push push scas sub fldl sub sub mov ud2 es mov push daa clc dec or add scas add add (bad) sti fucomi clc daa and jns enter jg ret adc mov imul imul andl cltd inc inc cmp inc test mov stc jg pop rcl inc out jb lcall cwtl in adc mov lock add nop add add sbb jno inc stos inc or add adc pop nop add enter add pop shll dec cld push stc lds subl pop repz adc add xor rcl add push sti or rolb pop inc rolb push pop bound pop addb or push lret push mov and pushl pop jmp jbe add aaa gs fs pusha or sub outsl js stc add push add jmp jg adc addl mov push add mov lcall push faddl dec push lahf xor stc jg mov dec push mov loope ret aad insb xchg xorl xor add ja push mulps je inc push dec or inc xor test cmp jb (bad) dec push and stos in adc stc (bad) jg push xor xlat ja inc push nop rol std pop push push mov inc pop add orb adc (bad) sub jmp push cld push das jg clc jnp inc movb push add or lcall add add (bad) out xchg and subl push andl xor test or dec test ja int3 arpl mov fildl or jnp ljmp les inc push rorb jo pop push int3 xorps dec inc dec push mov pop push and pop mov and popa cwtl mov scas adc or jmp push or add stc dec subl rcrl add inc push in or shlb (bad) or and movsb pop roll jne xor andl xorl and rolb (bad) xchg dec inc or les inc adc cwtl mov push mov inc or inc scas bound shrl out jecxz gs inc push xor jae movsb add je add xor decl or add jmp daa inc fsubr and pusha inc push dec or pop inc pop cmp cmp mov ja mov aas jg add inc push (bad) sti or add add or sub adc inc sub ja jnp or sbb pop add dec push and inc lret mov add and pop sub and mull shrl stc call mov sub push mov lds or rcrl pop cs pushl fildl rorb push mov outsl push sbb mov or lods pop pusha push mov nop and jnp adc or ja popf bound scas inc xor enter call adc stc decl scas mov jecxz jle pop push mov xchg popa js xor dec or push push cmp push (bad) jo jle push inc int3 lods mov pop fwait rclb daa dec daa or shlb jno outsl or daa dec push push mov (bad) mov mov pusha mov cmp push pusha aas scas jnp mov mov inc pop arpl adc dec mov xchg pusha xchg inc fwait les stc (bad) in cmpsb xchg rol pop dec cmpsb out scas (bad) add popa push cwtl dec jb imul pop push dec jne cmpsb and inc dec cltd jnp test inc or les mov push push push roll clc decl jns push pop inc push pusha dec push pop inc push pusha sti (bad) popl sbb hlt aaa pop cmp add and adc inc and mov fs add test das jp lock jo stc call pop mov lock shrl das fmul jne jecxz das shrb inc cmp das push mov sbb aaa pop nop cmp testl mov xchg mov inc roll add sbb adc or adcl stc and add add stc push adc cmp push scas mov aas jbe sub inc mov adc scas adc mov jge mov pop mov sub push xchg fistl push mov jge loopne mov stc jb add in or imul adc test mov pop inc cmpsb scas test cmpsl jae sbb mov xchg sbb cwtl add dec inc cmp add adc inc stc dec pusha push jl outsl addb into jle mov or adc or inc fbstp xor add inc inc stc arpl mov adc sti rolb xchg aas xchg adc push scas inc mov pop add add insb inc das push adc rcll inc stc daa lds sbb shll xlat add addb and cmovne mov inc repz or sub stc jb,pn movsb jae sub lock rclb fldenv das cwtl inc inc addr16 mov scas addl sbb roll lock arpl mov push aaa pop adc stc pop imul cs add xchg rolb or add or adc ljmp loopne fcos xor lock call inc stc inc fildl lods out inc push xor xor add or jle inc or xor iret arpl cli or aas jp jmp leave lret push inc add cs pop data16 arpl out rolb outsb and dec xchg push mov test test popl push inc ja inc shrb inc push mov sub inc inc or int3 push ret mov add push xchg add dec or or in push push test add (bad) add push (bad) add sbb push or loopne add fwait adc add mov jmp and inc or xor sbbl jmp imull dec push js sbb insb inc push jo add jo ds clc or inc or pop (bad) movb js out dec stc (bad) fistl iret loope push ja ja adc bound fild test aaa xor fdivrl imul arpl pop daa pop (bad) and cmp addl add sub jge jmp push stc incl orl add dec inc or xchg rolb inc roll repz mov test dec aad int les pop jmp call push or xchg and (bad) push pusha adc push add mov or add in pusha pop add repz xor jle pop stc jmp add scas outsl xor mov stc or jg xlat xor flds xchg xor add dec cs arpl pop add push jmp stc pushl mov pop aaa ret push andb or stos (bad) mov cmp or (bad) cmp mov inc rcll shll inc mov ret and jae mov push inc scas rolb ja sub mov dec push pop add and mov or aas addb in cmp scas and adc cmp sbb sbb (bad) rcrl daa push push mov sbb sbb fadds int add jne push add pusha pusha add pop add sti jg xchg add add insb stc (bad) mov push adc inc je inc inc lds int jbe pop insl pop inc and jne les adc inc ret adc add call fwait ret fstp dec xchg add dec push and enter scas push (bad) jge hlt aas aas adc incl or dec stos scas or outsl xor stc call fs add sar arpl add or ljmp (bad) jo pop push mov jns pusha es add test push loopne loop addr16 add pop jo (bad) fistp clc xor xchg push pop dec push jo push add pop and popa add addr16 adc stc add add pusha nopl add mov push cmp push cmpsl adc cld pop fdivs or push insb inc push jo or pop xchg out xchg pop data16 or aam xor dec or add lods add fdivl mov popf pand addr16 das add (bad) orl or dec xchg xlat movl inc adc ds or or add push lret loopne stc call push adc dec inc (bad) jo xchg adcl pop outsb out inc dec jo adc ljmp hlt ja pop push sub stc call addl pop scas xor xor sbbl cmp (bad) outsb mov dec push inc pop int add push insl testb xor dec pushf inc or or shlb repnz cld push add aaa cmp pop ljmp pusha jl dec xchg mov jae or sbb mov xorl scas stos mov into cmp cmp bound jp (bad) (bad) int3 pop nop imul add push inc adc pushf jnp xor pop or ret and xorl adc dec or pop dec mov add xor xor or xchg les aaa les scas xlat xadd push out rclb or inc in (bad) mov in mov push inc push adc addl scas sub stc decl jmp fs adcl inc or sbb mov adc mov cmp sahf or das inc and ret and push xor pushf les add xchg fmuls push adc mov addb cmpb fidivr fbld arpl mov inc push inc js add inc arpl jns add inc add or pop lret inc push inc sbb inc cmpsb pop sarb dec dec mov rolb or je add add ja push stos pop mov sub mov repz gs push jae inc add xlat or adc jmp test mov xchg out pop scas sub pop add xor (bad) fs sbb adc enter mov pop ja cmp or or sbb push fcomps add push add pop inc mov (bad) push sbb cmpsl mov push adc push jo in in in add nop or roll aad add scas loopne stc decl inc jo ret mov push pop cmp push add xor push add cmp rcrl adc add add mov sbb add data16 push xlat aam stc push jnp cmpl lock adc in jle mov push in push push call pop adc or dec add sti inc (bad) popa inc testb dec xchg jge pop add add add jbe jbe ret or jle inc mov dec clc mov xor lret or add cmpsl xor lret outsl add xchg insl loop adc push push and sub xor pop pop iret mov xchg aad cmp imul jl adc jl mov add ficom push pop inc test (bad) jno inc or mov push mov add lahf sub add test stc dec push adc int3 mov dec adc sub push notl fwait xlat mov mov jl mov and inc pop das inc push xchg sub pop dec or in or mov add sbb inc or loopne sub pop adc jae dec or out ljmp lcall rep (bad) lcall iret add add push cld ret pop dec (bad) jbe add xchg inc or mov into dec push and pop inc movsb mov outsl movl jae adc mov jp mov mov push mov js mov fsubrl and (bad) call cmc or adc add cld dec (bad) sarb lret or add insb pop jno (bad) push lret xchg add xor nop nop xor mov jge push mov fdivs or jmp (bad) mov add stos xchg xor add push inc add dec mov loopne or push xor pop sbbl inc fcompl inc cmc ds bound sbbl les (bad) jnp or cwtl or add ror stc (bad) jle push mov sub inc mov dec push lods push pop test or sub add cltd inc aaa popa pop fs push add jbe sbbl add std adc add mov stos popa psubusw mov xor inc mov dec pop add cmp push popa xchg jne sub enter add or or pop or add and (bad) cmp and add test adc aaa imul movsb sbb dec loopne pushl cmp lea je imul jb mov or fldl int3 das fadds sarl adc in jmp sbb adc jge inc sbbb jb cmp adc scas fnsave add test mov insb sub pop (bad) js stc mov push push adc add inc dec sbb cmp add rcll mov add lea outsl inc outsb mov lahf add dec mov ss jbe into and push shrl and js mov sub mov int3 add lods jl je push fs nop in or add xchg xor test push out sub or out in stos sbb or sub sbb sub loopne jno out dec push and jo sti pop lock xor and and mov inc xor or pop dec cwtl adc jmp and les mov sbbl xor jno gs or loope or inc or andl and jae cmp fcmovne inc adc jb mov repnz jnp push adc lods push mov jecxz les sub loope sub sub push in std pop push sub je sub popf push mov push add jo mov sbb repz adc mov ljmp push adc out lea (bad) fcmovu pop jg mov mov pusha xchg stc dec mov pusha fbld cmpsl test gs jle jb pushf inc (bad) dec in push sub ja add fwait lods dec add mov push movsl icebp mov inc (bad) fldenv pop adc push fsubl mov xorl inc inc push sbb add sahf mov cmp dec lods out mov aas add add outsb pusha mov dec dec cmp add xchg call or arpl aad mov add dec or add je ret cmp add xchg les jge add inc aam addr16 fadds add inc or mov cli mov mov jg add out mov add scas xchg and imul inc sub push addb cmp push mov push and cmc inc xor xchg inc or dec sbb out pop push inc mov iret pusha js cwtl fwait mov movaps stc pushl aas loopne out and pop cmp stc mov sar movl jle imul or gs repz inc push lahf popf sub outsb push jl push adc xchg out inc les sub js inc pop cmp push add jno pop ret sti push shlb cmc stc jmp or imul add andl lods enter sbb push cltd hlt mov lcall fcmovnu nop loope in xchg addr16 lods sub ret pop adc pop mov jo ljmp gs or stc negl pushf cmp and or fisttp mov push adc mov jecxz mov mov pcmpgtb pusha inc (bad) add cmp fstl sub cwtl jnp and dec dec pop inc std cmc dec adc aaa fildl pusha inc andl add sbb out add out push movsb popa fist add and dec iret aam fcoms pop adc xor cmpsl (bad) or jb mov in add lret push sub push add movsl aas jecxz adc or mov add adc cwtl jae or push arpl popa dec mov cmp dec inc add jmp xor (bad) adc inc or mov loop mov cwtl push jb iret hlt arpl (bad) adc inc push inc add jb push es imul cmp cwtl ret stc lcall push subl pusha cvtdq2ps pop xor cmp test mov jnp xchg dec inc cmp inc je stos inc out enter add sti stc pushl mov jo or dec pop inc inc (bad) fwait jecxz dec sub cltd or dec dec or inc bt mov inc ret or push push inc insb and enter cld stc (bad) stc stos pop addr16 xchg cmp inc or orl mov cmpl aad push mov or aaa push mov stc pop mov fdivr in inc push addl mov push shr loopne or incb or jo cmp jle and popf inc xchg int3 in dec shll sbb enter test sti sarl (bad) stc ljmp scas adc mov pushf dec sahf test sbb inc or pop push sub adc mov push adc stc lahf dec fsubrl dec or push mov or push sti add adc inc or add lret hlt mov mov pop push and adc in pop cli inc xchg pop (bad) fcmovnbe add pop sbb not pop inc les jmp (bad) fsubp aam jae aas out xchg add cmp pusha inc in lret sbb sub and push inc xchg iret adc cmpsb add mov xchg fs sti das inc add inc (bad) cli inc mov mov das jmp test fist dec sub push das sbb push lock int mov push (bad) (bad) notl pop (bad) pop inc xchg bound and or scas pop or pop inc addl ret andb stos jmp and cmpsl inc add add jnp in imul and lahf inc xchg addl mov mull push inc ret inc inc jo cmp (bad) mov pop mov sbb inc addl mov push mov jecxz ja cmc xchg cmp xchg jo add mov flds jl sub mov mov (bad) ljmp js gs mov add or add (bad) push (bad) or or add imul or adc call mov adc addl add mull imul add or sub jne add sub out push (bad) mov pop xlat inc xchg jns fcoml scas push (bad) and rcll popl fidivr push sub (bad) out outsl jmp lods imull notl sbb adcl sub lock mov pop mov mov jg or ret xchg movsb cmp mov mov ja xchg std ljmp out or sti pop mov pop jnp icebp hlt sar decl mov or aaa lret xchg sbb loop cld push adc push nop and inc outsl or sbb call mov or dec pusha push mov cld call aaa push or pop or and dec inc or pop dec push test xchg mov popa jae xor cmp push imul push rcrb xor sub jmp std (bad) jp jnp divl pop xor out inc adc and or popf loope ljmp sub pop inc js add cmp popa add jo adc repz bound lea scas out dec mov or inc and add ret call push push dec or iret icebp dec loop push lock inc push lret jmp dec nop sti das lods and mov pusha addr16 mov lret insb aaa ret adc lar mov dec sub adc sti (bad) cmpsl cmp std lcall or adc dec hlt loopne sub adc or insb cltd std aaa je aas sahf sti cmp inc or daa cmpsl xchg lcall xchg pop mov add add sbb add loop mov pop inc pop add jl std lcall fnstcw fwait aas lock dec pusha pop mov loopne mov int cmp jp dec add pop add add dec add lock adc sti xor mov roll les ret aaa and and sub (bad) movsb pop inc and ja jmp sub rorb add or adc mov add and daa iret and mov add stos push inc sub fs icebp iret rcrb in inc (bad) sbb inc or and push (bad) inc mov enter and adc imul in loope lahf inc adc or and fsubs add mov inc sub and popl inc and ret cmp pop iret xchg inc (bad) add inc shlb test cmp push lahf add inc rcl cmovnp inc das jbe addl mov pop addl push iret cmp xchg das incl popf and jnp pop push es pop or xor lods sbb and push and adc movsb mov cmp aas adc mov in sbb setae push dec mov scas in xchg cmp movaps in aas mov sub cld push sbb (bad) lahf push add add ja inc mov clc hlt pop aad mov enter divl sub push dec das outsl mov sbb arpl push out repnz or (bad) (bad) ja pop pop dec push mov hlt sbb mov loopne lret add pop (bad) ja mov mov cld xchg inc jmp js jo gs (bad) dec or pusha inc sub dec mov test push mov cld jo outsl cld jle (bad) push or ret sub insb push cwtl sub hlt jnp add lret inc arpl add pop mov inc lret (bad) movhps scas jmp push pop cmp push roll pop fwait ja inc sbb (bad) lret add sti incl add add sbb test das and xchg inc add dec pop daa pop and xchg cwtl insl add aam sti pushl mov mov or fnstsw repz sbb dec std xlat lock (bad) dec push and mov jg inc mov mov ja xchg imul add inc sub pop mov pop xor out mov aas and mov or pop out xchg aas inc (bad) jne inc inc aas inc pop sbb (bad) imull mov out add daa aas dec fwait test scas add dec mov mov aaa and mov add dec ljmp inc adc mov lret cld cmc xchg std inc lods or addr16 test std dec mov aaa pushf push mulb lock pop push mov mov sti mov push jae adc das sub pop add fs jmp add inc cwtl adc mov jo push aas jo pusha pop jg adc inc (bad) jo dec pop mov sarb mov pop or stos (bad) jmp push xor dec cwtl push std jnp and call aam or or jno mov cmp inc push shll sti adc sbb addb cld mov call add mov pop les push push cmpl nop scas imul add inc push and dec add dec inc inc nop xlat push rorb xlat in mov fsts and stos stc scas mov mov add imul push inc push stos adc and imul add imul sub inc or push sahf std lcall adc inc idivb aas inc push push pop cmpsl aas jo xchg add push and dec inc fistpl pop scas out mov clc or sti pop repz sti (bad) xor mov gs popa fsubs and mov loope mov test idivl adc adc add xchg adc mov xor sbb xor out jge mov pop inc or push push (bad) or (bad) cmp adc inc loopne xor pop adc push pusha daa aas lds add add ja aas xchg repz popa ret sbb lsl jecxz fmull mov adc mov lret enter or inc cltd or lret push cmpl loopne std incl popw pop push add xor mov dec lret hlt cmp mov dec push xor ss cmp or xor push ret fistl je out data16 out adc pop pop aas imul push jg add push loopne cmc outsw pop lahf in std lcall mov daa jg push int3 roll pop lahf test pop or and xchg xchg not out movsb pop pop add adc adc xorb (bad) or aas ficom pop push cmpsl test sub add lcall xlat adc adc sbb cld sbb push out test cld pop xor enter xor outsl xchg (bad) decb push sub rolb add jecxz or push cmp (bad) mov cmp ss add in add sbb nop xchg (bad) lret cmp (bad) adc or mov aas xor push flds iret jo add js cmpsl push out mov nop cmp mov xchg or pop mov or sti fwait xchg push adc add stos dec repnz and cmp rcrl ret out pop (bad) je std lcall sub add mov push xchg adc inc add mov push (bad) js sub sbb jae cmpsb cmpsb sti andb or add cmp add das push and pop inc mov jge loopne xor jmp push sub cwtl test gs fisub (bad) hlt rep xor ja inc push mov lods dec mov adc or jb adc sbb jnp sbb in lcall stos inc cltd iret scas adc push sbb pop add mov or xchg roll lock jp sub (bad) pop dec jp mov mov fwait jecxz aas jae jne das push fcomip lret inc cwtl inc mov push (bad) push icebp das lret add add stos stos pusha sbb das jecxz mov lahf add pop das xchg mov out xor aas add fistl xor dec push pop test pxor mov fistl jo and fwait insb fcomps outsl je outsl sbb dec lods aaa lret pop decb (bad) jmp js lahf inc addl jle call inc or fnsave push fwait addb cmpsl sti incl (bad) mov xor in or pop sbb scas ljmp inc sub cmpsb sti cmpsl adc push add in adc adc mov sahf stos jae insb push fstpt pop inc scas xchg or aas push adc ss add stos push mov pop jmp sub mov xchg arpl or out add das mov inc das jae loopne sub insb das pop xchg scas mov adc pop pop (bad) sbb cmpsl jnp add mov test or ja sbb js das (bad) xchg mov add fsubrl testl (bad) jo add cmpsl add push cmpsl rolb pusha sbb scas xchg adc arpl lret mov xchg cld das mov xor and xlat adc in inc xchg (bad) xor mov add (bad) stos iret sbb xchg xchg sub mov xchg sbb dec aaa sub cltd out rclb (bad) dec ja pop fcoms dec pop xchg shrb mov cmp xchg testl das xchg inc pop add push adc and negl sbb dec arpl sbb movsb das out stos xchg xchg mov das imull add mov cmpsl rolb orl and (bad) mov cmp arpl jmp test cld inc jl cmp das cmp pop (bad) jmp in das cmp jne add cmpsl mull cmp sbb (bad) iret mov fnop or nop das scas xchg pushf das out sub cld das call testl mov xchg hlt dec fstps xchg lods arpl and lahf xchg mov sub mov inc adc fwait mov out add hlt cld jp or sbb push xchg lods (bad) sub repz and andl fmuls mov out push lea mov (bad) xor xor cmp (bad) mov pop pop or cld adc pop out xchg pop std inc cltd and ret enter shrb sbb mov std push gs stos sub aam push ret sub cld adc add adc ljmp repz pop es sbb add jecxz adc and clc and hlt js or sub out cld das adc jnp in push adc hlt aam cld inc sub sbb sbbl and adc xchg inc cmp xor or int3 jo (bad) xor or sub rolb cwtl in cld out xchg cli sub in icebp cld cmpsl jmp inc pop sub inc xchg jp test push out and pop xor mov sbb push xor jb pusha and push mov dec xor addl movl push push push xchg das addr16 adc (bad) scas cmp and mov push or (bad) aas or test add adc sub add ret jo push or add fst pusha shrl cmpsl lret or addb inc adc and pop inc jnp int3 adc sub adc loopne ja adc dec adc and mov lahf inc adc and push enter out jae sub or push fwait out rclb out addl push sbb dec and (bad) out xlat dec inc iret (bad) xchg adc cmp enter or adc adc or jnp add aaa subb and sbb iret movl jae mov cld pushf adc push and mov popa and inc sbb imul inc sbb test pop roll jg jecxz xor stos pop inc (bad) (bad) aas mov inc or adc jecxz or inc aas repnz pop pusha faddp and aas push cmp lods push cmp mov sti aas mov (bad) daa enter scas or out jg push xor mov mov xchg stos das addb xchg adc push imul xchg jno pop push and out xor add shll lods fbstp cwtl dec rorb punpcklwd cld bound inc and loope cmpsl jnp pop push add cld (bad) jnp fisttpll dec outsl or adc addl lret in ja mov xlat stos movsb pop and xlat and shrl or inc adc enter adc loop lods cmpsl iret adc push mov push fwait outsl jns lods rolb fcoml scas and cltd mov je ret push sbb jl inc or or enter push adc nop dec bound jmp cmc xchg inc enter lods cli idiv sub push mov jae frstor or addl daa add cmp out sub sub inc insb pop rolb add push and push mov push xor and push add or pop jnp in xchg int3 or decl clc mov push inc jnp push push or stos ja inc jae mov dec (bad) xor sub repz ljmp rclb mov call dec aad sub mov incl std fistp popa ret push (bad) mov sbb sti cld lcall adc sbb add mov inc add xor jecxz aaa add and das test div inc rclb ja push adc or cmc fildll add adc (bad) mov add jmp test mov cld ret mov push lock and mov std lcall sub and enter sbb lock inc popa or (bad) sub xchg or in or stos sub and cmp ja popa (bad) add and inc sbb stos add inc mov add inc mov cmp pop cmpsl push and xor mov ret or inc loope cmpl dec pusha in popa les mov pop xchg addps dec lea pop push sbb or pop and inc cwtl push and push mov dec xlat inc inc push xor adc mov and xor xor or outsl add js mov fdivr mov sbb sub mov xor arpl push add mov js std mov and loopne dec mov dec iret xor sbb push pop iret imul inc mov add mov add cmp bound inc add (bad) xchg pop faddl testl ja add cld cld cmpsl and mov fs mov mov xchg and repz shlb adc or adc sbb jnp addl or outsb stos push xor sbb in packsswb adc and jg push movsl xor add mov insb adc cmpsb and aaa or and arpl cwtl jecxz push sub mov ds adc ret and jo sub mov dec add cmp cmovg inc inc add pusha add inc mov call sbb cmp popl add inc lahf sbb daa (bad) mov add fmulp jo enter push and adc sbb pop aaa add add xchg xor push cwtl mov aaa mov les inc ljmp fwait inc or or push aaa (bad) pop cmc notl add std pop (bad) adc (bad) lea fwait xor jo aaa pusha xchg ljmp mov shll outsl rolb pop or push or add fisttpl xchg flds xor inc inc and dec fistpll cld (bad) mov pop shr sub push push pop jnp sub xchg pop das cmp inc out pop stos cmpb and mov ja jnp xor cld incl sbb movl add xchg and inc xchg cmp jnp lret push inc out loopne dec xlat mov push inc push push popa iretw inc add mov imul sarl fsubr cld call int3 (bad) dec add mov or inc or or addr16 lock (bad) (bad) jl sub out fwait arpl sub push or push inc mov mov (bad) jmp or xchg dec jge or xchg push movsb add and aaa xchg out cld punpckhbw mov pop jle sti dec and in or push arpl jo add sarl add or inc fistpll cmp insb stos or mov mov add cmpsl cwtl sub das shrd sbb data16 mov mov adc pop and (bad) inc push pop push stos or add inc (bad) sbb add adc and addr16 sub add nop dec mov in dec nop and or rorb push and bound and xor cld or nop pop dec inc or mov adc push sbb dec and jae add hlt cld daa push and lcall aad inc pop push in or mov pop cmp insb test ret inc cmp ja (bad) xor scas sbb or adc shrl inc call and dec inc or add js cmpsb add push pop jae popa xor int3 jg add arpl dec pusha xor inc adc mov test outsl aaa xor or cs clc jecxz xor jg pushf arpl cmp mov cmpsl push or push iret imul jo jb inc aas sub inc and fs incl fildl add push pop and pop mov push sarb cmpsl xchg and (bad) pop add push loopne in and and jg sbb cld lds dec pop sbb cli aam inc jl adc dec add push (bad) ljmp data16 xchg aaa jo push sbb push xchg js add or add inc lret jnp ret (bad) pushf mov fistp and sbb dec (bad) pop pop inc jl inc pop cli cld roll imul sub cmp sbb xor xor inc xchg and or jecxz sbb aad cld fwait out addr16 adcl or lods nop scas xchg sar and mov cld (bad) jl add pop add sbbl xchg push cmp mov xchg mov fmul (bad) cmpsl mov and testb jecxz add and sub sbb xor add enter add pop add push addr16 push loopne add movsb icebp cld inc adc pop mov and (bad) and and lods aaa cmpsl inc add sub das jl ret and mov (bad) mov pusha out mov fildll inc fcoms add jmp dec sub mov loope loope repz (bad) jne imul push aam cld or sub pop inc add (bad) jo ret mov mull sub out pop fsubl adc push movsb jmp and adc pop dec idiv lcall add sbb push and outsl adc inc repz jb xchg add iret mov cmpsb push sbb jo jmp xlat out or and js aaa pop lds sti shld adc repz aas fcoms (bad) jmp ret test or loope dec mov sbb imul jo dec mov out and shlb inc push and adc bound inc fisttp and add inc daa pop test cmp (bad) and fisub pop outsl pop add int3 push rolb pop in ljmp pusha fcoms cmpsl and lret adc push push pop mov ret test and scas dec jae and out (bad) leave (bad) cmp mov (bad) aas int3 jbe mov sub add and push xor dec or icebp (bad) bound repz and ret cmc shrb out xlat dec adc adc adc sub push pusha subl and push xchg push pop (bad) out in popa test cltd fwait adc hlt adc aam movsb adc or (bad) cmp jae sub stos xchg or stos cli inc or jb cmc jnp sub cmpl or pop mov iret aaa pop mov sub pop das mov fmull outsl and les jnp das das das sbb and pusha inc stos and jge dec mov cmpsb or and test fcmovnb orb call sbb add pop or or dec iret xor add cld fldt push xchg or mov and pop and sub sbb mov ja nop mov sub adc shrl and mov mov or loopne sbb add inc rolb inc sub and lcall icebp rolb sub mov inc push das and fs dec inc push push (bad) dec std pusha adc and mov inc push push jnp orb sub mov dec and push and push add pop dec dec dec icebp dec inc inc push inc add aas inc movsb adc ja fs and jecxz data16 jmp jecxz lock sub push andb add sub push mov sub (bad) xor inc cwtl mov aaa fsubl adc xlat and inc or fs aas je aas push xchg cmp mov adc inc lock gs cmp inc out rol inc mov fist pusha push sbb loop push das nop loope inc das inc fist mov jecxz out adcl pop adc sub dec cmp inc sub fwait mov push add (bad) xchg push lahf push cmp test add or orl xchg test arpl inc pusha push pop mov out adc or and faddl pop sbb pop add push imul fwait and out lret fstpt movntps scas push xchg lcall arpl xchg sbb pop nop mov push inc or mov clc push push sub in xor mov jle mov std roll xchg popl popa and mov push push mov sbb add call mov pop and jo add adc mov add sbb sbb mov inc and pusha rclb mov xorl vmread les mov and das pop je pop inc add xor pop aam lods xor pop nop push and push sbb ja add pop (bad) jp and mov xor movl jg lahf sbb push add test roll inc fwait push add (bad) out adc lcall push out adc pusha insl lret inc or lahf in and adc pop loop sbb push push sbb and lret faddl inc xchg cmp dec or testl add sbb fwait xchg insl xchg and pop mov movsb push repnz test push xchg push mov or mov mov xchg push push or cmp aaa arpl add jg pop paddw daa mov adcb testb inc or push inc jb mov push nop adcb clc jnp xor jl std rolb insb nop scas and sbb lret mov addr16 jnp and pop int (bad) add imull and inc fistpll lock inc or pop mov push cmp dec xor cwtl adc push add xchg ret push rolb orl popa ret insb fbld loopne aas in cld push add or aaa adc sbb inc push or das jle adc or imul ret mov stc inc xchg push cmp push decl into lcall pop icebp popa jnp and andl cmp and mov stos ret or lret inc xor shrl sbb or fs sti add pop pop addb (bad) inc add inc and dec out int insb and outsl mov push ret ja xchg pop add or subl pop xor loopne jo aaa les jecxz outsl xor and xchg push cmpl ret sub (bad) pop pop and leave pop and loopne adc imul pop arpl cwtl sub cs xor ret adc add or scas xor mov sbb or das pop sti push sub (bad) imul cmp nop mov xchg enter xchg iret dec add sbb dec and inc leave popa jecxz xlat xor jg rclb jge popa xor pop aam inc or add ja pop inc xor inc pop mov xchg inc jecxz sub fadds adc js nop inc sub sbb jecxz (bad) pop subl sub sarb add andl mov inc sbb hlt or mov inc ret mov fs pop mov sub divl jl dec pop jno scas adc mov cld adc bound jae sub or aaa adc push or aaa cmpsl add mov mov sbb mov lock cld in pop xchg dec fstpt sbb and adcl mov or (bad) loope jmp xchg lret call (bad) fdivs aas xor ds mov scas cld mov rcrl or add mov inc cli lods adc movsb and push or cld ljmp sub sbb cmc dec mov pop mov mov outsb or add dec orb xchg jmp daa pop xchg xor cld lods cld incl sub adc mov pop fisttpl mov xor sbb pop repz adc sub mov sbb xchg adc jg inc or xor adc inc adc rorb dec and loopne dec or aam or xorl jg push mov xchg dec mov nop cmp mov jle jecxz cmp daa add xchg sub stos (bad) sti fimul add imul and push cmpsb jnp fsubl and xchg dec mov loopne add outsb (bad) sub inc xchg hlt imul mov aas movsb jg nop inc pusha cmp xchg loopne add aas pop imul sbb daa test lahf add or popa test xchg clc imul pusha inc out mov sbb dec push xchg dec add and mov and add cwtl mov in stos and aas pop mov shlb imul xchg dec adc popa or mov das inc pop aas (bad) push cmpsb inc sbb sub sub movsb call cld ja and inc inc ja jo adc xor dec popa jnp andl lret insb test addr16 adc fisttp xchg movsb pop add cmpsb jmp add mov inc cltd jg sub call and fmuls add enter add inc movaps mov dec shll je sub lea inc pop popa xchg in mov lcall inc std sub jmp mov sbb and aam xor ret in jae inc lds or ss push mov in out pmuludq pop std call inc ret inc fwait and xchg xchg add (bad) popa or jg xchg lds add movsl adc add lret xchg xchg push shl add jno and jle clc adc xchg sti jl std inc add ret shlb mov daa shlb aaa sub add push pusha push mov adc or add push xchg inc dec mov dec lods inc lret xchg dec sbb inc inc add dec push cwtl or mov cmpb push add xor or pop and and add js xchg xor or mov or adc xor push and jecxz nop inc (bad) sub insb push mov add xor push inc dec subl xchg ret push leave add std push ja add jl mov lahf cld add sbb iret mov adc adc shll jg add daa fcoml add stos add push inc imull add inc or push push adc jo sti and and out push das inc push adc push (bad) sub inc rcll popf adc mov daa dec cmp inc ja push adc stos (bad) or pop or mov dec inc or add mov inc pusha adc push xor (bad) dec mov xor inc lret inc push xor insl dec inc push mov cmp and mov insl lahf xchg stc out pusha cs xchg pop inc dec sub inc aad jg sub or xlat push je dec add xor adc addl add pushf das and mov and xor insb in add push pop inc adc adc pop insb and (bad) jle dec inc xlat adc test rorl dec mov jle cld dec push and pop or inc or xlat adcb rcrl mov stc mov xor mov jns in dec add iret cmp xor rorl sbb adc sub pop inc or loopne pop adc sahf mov adc (bad) inc push sbb xchg aam je stc std lock out push repz pop inc or aam fwait push dec add sbb daa scas addl and push push or xchg add daa call cs jbe outsb inc aaa inc mov stc push adc scas add cmpsl ret xor pop xchg push stos cmpsl jecxz pop adc addb pop inc push push out push push test dec add push sbb lahf aaa xchg orl xchg shrb inc jb adc insl jg and inc pop pop add lcall (bad) outsl wbinvd add inc push popl cmp inc xlat daa pushf cmp movsb dec (bad) pop int3 mov cmp pusha add inc or adc xor inc or pop (bad) fist pop or repnz add add (bad) in adc pop inc or xchg test xor pop mov fwait xlat inc push inc add adc loopne cmp test adc sub add sbb sbb sub xchg cmp dec pop pusha add or adc addr16 fldl mov ret jg mov and pop das loopne es aad jnp push stos pop rorb addl sub or insb subb push mov or fsubrs add (bad) std jp adc xchg outsl pop push add pop notl jo inc and push xchg and dec pop out and inc push fildll pusha sub mov mov xchg pusha xchg les or inc dec push dec or shrb or mov incl in add fildl pop pusha sbb or mov adc xor mov sbb mov sbb dec pop (bad) mov dec mov and and inc nop sub inc or pusha sub jge call jne mov inc push adc xchg ret cmp mov test mov push xor (bad) jnp xlat xor mov ljmp sbb xor daa inc dec fistpll mov pushw inc xchg outsl (bad) or cmp pop push pop pusha rcrl rclb mov push push lock aam sti js stc incl jge inc add add outsl rolb lds adc inc inc or inc add rolb dec pop pop or add nop sub and push mov dec xor or mov inc or mov add loope incl cmpsl mov addb inc or xor jle pop insl push dec or dec aas inc add add jo nop inc rorl cli or push sbb jnp add scas insb aas xor cli lcall je verw sub fwait xchg mov lods push inc mov movsb and xor lock (bad) cli decl xor mov fsincos insl decl xor add pushf adc call mov sbb mov mov test cmp adc (bad) in cli (bad) je mov mov push inc mov lcall dec aaa faddl adc inc add mov pusha dec add inc sahf sub out in enter je ja and sub or rolb (bad) cli aaa add and add or and scas xorl pop inc add cmp mov add cli inc sub add or adc pop std daa pusha dec inc jmp jp add iret mov std (bad) jae and sub popa dec adc rcll or and push in jp icebp sbb test outsb mov aaa cmc push cmp lahf jnp push add xchg push mov dec xchg add or cmpsl adc mov and pop pop adc add cmpsl jb icebp add daa mov xchg mov jle out and xlat ja pop cli fs das out jae stos cmp adc test ljmp push jge sub sbb pushl sbb loopne sbb fldl jge adc push adc test ret mov add push cmpsb and dec push adc mov adc push scas xchg sbb out and negl dec inc fnstcw sub sub inc jbe mov dec push cmc ficom mov xchg jmp data16 add or inc inc or push adc mov and add mov lret inc or idivl scas inc je aam push jae or add mov pop stos dec xchg cmp push mov jle inc or (bad) in mov mov sbb inc pop inc adc jnp sti fisubr rcr stos xchg sbb mov dec cmp out loope add out pop out and sti inc dec adc ja push push mov xchg out push out xchg pusha mov (bad) push inc mov daa pop adc mov (bad) lock fildll daa std incl cmp push idivl and inc div lds lea adc inc movsb jmp inc adc sub jg jae xor cli ljmp mov jae or adc lods adc repz or call (bad) mov stos push inc ret cmp mov aad push xor mov cli adc add xor push and jo cmp and sbb out or sbb daa jecxz dec mov mov jp add dec or xor test mov and call pusha add push cltd fstpt inc in pop movsl lds data16 mov cmp cmp iret inc ret cmpl sbb sbb cld add pop popa subb pusha adc outsl push mov clc push pop jmp or jecxz addr16 cli das inc in pop out adc pop mov add int3 jge jmp sub fisttpl or (bad) xor cs adc loope add or push pop arpl push add jge js loopne mov add mov inc jb daa rclb fwait loop test fildl push cmp mov adc cli pushl cs sub adc cs inc jae fbld fadds push jo inc pushf (bad) subb and add pop inc add out popa cmp or (bad) pop mov lock jmp or cli ljmp adcl shl jmp nop sbb or pop mov xor add inc add fildll sub incl jae or push je (bad) pusha xor pop adc into dec xor adc inc push adc xchg (bad) mov cmp mov adc (bad) add test push sub call stos adc mov cli mov cmp adc xlat adc pop inc or cmp cmpsb jl inc js std mov lcall sarl lahf adc adc inc add add dec push pusha add out inc or sub and pop les lcall inc cmp lcall push or lret stos dec push rolb jo sbb pusha ds call cmp dec push rolb add cwtl add enter add add xchg mov dec sbb test push push addb inc or ljmp inc cli ds ret sub inc push adc xor pop mov inc or xor add hlt sub ja or rcl xchg xchg movl inc lock imul adc aaa and inc pop aas dec push nop add out cmp adc add or cli pushl ja adc test add dec lods cmpsl movsb push ret mov imul addb xchg pop xor push ja inc mov add jmp (bad) pop (bad) mov add push mov enter mov rcrl push cmp (bad) iret dec mov pop xor mov loopne pop adc jo adc in adc xlat adc jnp adc adc add cmp add mov add dec dec xor sub add imul daa hlt adc mov add fwait lock fldt add jnp (bad) and push outsl cmpsl sbb cwtl inc cli ljmp ret pop mov add push jnp inc xchg xor inc addb cmpsl or mov dec or out (bad) loopne xchg add rolb inc cli mov inc lret imul inc cmp cmp push mov ja inc cli enter mov sbbl mov cwtl or dec jmp push rorb pop dec or lea jecxz cmp loope stos inc pop add pop and nop pop in mov iret (bad) pop push dec add xchg add mov lock iret outsl jmp dec cli incl and add (bad) adc or inc aas xlat mov (bad) xchg pop xchg or out sbb mov mov or inc push inc add mov lahf sbb adc jmp loopne or jae pop mov stos inc les sbb dec cli fs xchg test mov mov add lcall adc sbb adc clc incb imul pop cmpb jno sub sti ret test lret sbbb push xor popa inc xchg push add mov inc bound jg cmp or dec cli call fadds fwait sets pushf outsl and (bad) dec or jmp pop mov aas add xchg lret cmp cmp or jmp jns inc cmp add movsb add add dec cli mov testl fdivs lret push adc (bad) push lret mov push adc or jg mov inc push jno mov mov dec xor in push cli jg xor push sub push dec fisttpl and push cli mov jmp add add lret rcll nop and fstl aas lret movsb adc sbb dec lret xchg or pusha arpl inc adc pop sub pop add inc inc add imul add add add pop dec inc pushf pop fstl outsl dec pop rol jne sbb pop jmp xor enter and enter xchg sbb or movsb push cli daa push in js mov adc or sub jecxz dec subb pop mov fs (bad) arpl arpl decl jns inc or push fsts mov cmpsl jg mov cli imul das mov insl pop pop xlat add bswap (bad) xor leave test cmpl sub adc sbb cmp mov das or sarl xlat jecxz pop cli mov ss pop push dec sbb ret nop cmp loopne or or sub sub add and pop cli xchg pushf xor jge repz and add xor (bad) icebp mov ljmp and mov cmp (bad) je outsb dec arpl jge out sbb cli jmp fbld and aam add cmp sub add dec or inc lret test push (bad) je inc scas cmpsl sub arpl dec pusha mov xchg inc je inc jb out adc gs sbb add addr16 adc mov or popa outsl fs push inc aas mov data16 pusha inc sbb call cmp add dec inc rcll mov mov add outsl dec inc or mov push or or jae add and inc or lret movsb or scas movsb pop pop or or pusha dec cmpsl cmp mov dec stos add lahf inc outsl inc push rolb popa addr16 pusha xchg popa jb mov mov lock ret (bad) addr16 or imul dec adc cld cmp stos dec push push pop adcl add je scas adc pop cli adc ret xor push pop adc stc cmp xor cmp jg add xor add pop and add fs test sub cmpsl mov sub mov add pop icebp add ja imul inc outsl sbb inc or mov or add mov inc push pusha pushf fbstp (bad) mov (bad) mov inc sbb push push testl mov xor xchg adc or cmp loop add inc cmp popf or lret adc cmp ret mov xor inc imul aas stos and add inc mov push pop pop push dec arpl addr16 add dec insb cli (bad) jl roll xchg nop or iret decl cwtl or xor stos fwait mov outsl cli cmp minps sahf movsb or dec dec or (bad) push dec nop ja stos mov mov pop popl adc mov push inc call adc pusha andb popf arpl inc xor fdivs mov sbb cmpsl jbe jo mov inc or iret sub scas add je clc push (bad) mov jmp iret jne push adc inc or inc or fistpll jo add test jmp push sbb inc xchg push jno les (bad) stc push mov dec inc je sbb gs push jb (bad) cmp loopne aas push jle inc adc test inc add (bad) pop sub add xchg pop pushl xrelease (bad) loopne jg push jnp xchg call es add jmp mov add jp das das fs addr16 inc sahf mov adc inc xor das jo add shrb scas inc aas inc lea mov lcall push adc popa pop enter add push add inc rclb clc sub cwtl add inc daa enter sub nop sahf jo add or push fwait dec addl mov inc daa add or xchg cmpl test xor aam jb xor jp add outsl push adc xchg ljmp push and popa and test es fcmovu inc xlat push (bad) testl inc adc xor pushf nop pop loopne inc or out mov mov mov pop add cli popf dec or adc and push addr16 xor outsl sti inc inc (bad) jo pop cmp mov dec xchg add cli fcomps add (bad) popa push add add pop jl pusha add shlb jp mov add loopne pop sbb xor daa mov jb sub loop adc sub adc inc aaa pushaw push push mov mov lock add cmp scas sub or add imul and sbb and insb rcll add push aaa jno inc daa daa repz cli push or das push add aaa pop mov inc rol je dec pusha aam sub adc or adc jae dec or sub mov add push push push adc jnp push les xor out loope aaa push lret and xchg add mov sub cmpl mov xchg inc add add dec cmpsb jl testl iret test mov jbe add outsb lods sub scas and inc insb sub pop inc xchg nop fisub mov xorb inc pop or outsl pusha add mov test mov sbb cmp cli pushl and nop out mov cmp jg pop or ret jmp mov (bad) mov out (bad) pop out outsl add push or add dec push xor cmp push add xor and sub dec or out add fcomip xor and lds or int3 mov dec dec adc dec or lock arpl cli add sbb loopne cli sub and lock fcoml stos ds jnp lods aas sub sub jnp add mov popa aas add xchg clc (bad) pusha push cmp sbb and and push scas inc jg lcall sbb sti clc cmp xlat hlt xchg inc rclb jmp sub jge fsubrs addr16 inc mov mov jnp lods fwait mov adc bound (bad) cli cmpsl rorl addl or (bad) dec aad (bad) sarb mov jae aaa adc jae movsl cmpsl nop sub int3 inc int jnp and or dec out loope or dec dec sub jecxz sbb adc and add jecxz lods (bad) xor and add add or mov aas imul or sub adc (bad) sti or daa add xor mov push inc negl adc or mov or icebp ja aam jae test jb sub pop inc push es push or push mov nop/reserved push roll (bad) jbe xor js stos daa inc or xor adc scas (bad) jno pop push sub push xor (bad) mov cli ljmp mov adc xor add call pop add xorl call inc mov decl std or sbb xor push es cmp push imul push (bad) xor push andb test sub or mov (bad) cmp mov adc push leave (bad) aad pop mov test sub inc das inc aad push mov xlat cmovo fistl pop mov adc adc pop adc jle push je pop adc xor adc adc sub cmp xor adc add push repz mov jmp das mov int3 sbb adc pop add ret outsl inc stos sub fdivrl dec aas pop sub out lock cmpsb push sub and xorl mov add cmpsl mov cli or push add sub scas nop add ljmp inc push and roll arpl mov dec or or push dec leave inc pop sbb add ret mov cwtl dec pop (bad) jb ss add xor inc scas push cwtl xchg test or mov ljmp cmpsb xchg incb inc add mov mov pushl sub sbb cmc mov xchg adc pusha mov xor mov xlat mov mov adc mov inc cli cmp cmp mov sti sub cmp and mov and lock jo xchg xchg inc mov das movsb and addl xchg les ret push mov inc push mov push add stos pop mov or and pop and xchg daa (bad) scas (bad) push mov (bad) mov sbb adc xchg inc inc inc xchg lea pop sbb pusha add inc push and (bad) mov xchg aam test cli jnp insb cmp and std addr16 xchg sti sbb sub mov add lahf repnz push es inc mov loopne daa inc xor cli ljmp xchg das mov or (bad) cmc adcl jo or nop or sbb dec (bad) sbb (bad) push mov push add jp dec mov jbe or inc hlt mov fs (bad) xor test xlat xor mov jecxz push add pop sti jo push (bad) adc dec pop xchg sbb sub pusha mov insl or jo or pop outsl call sbb add fs ret in sti dec pop and ds xor push sbb push (bad) cmpsl and cli incl add pop pop scas pop lds add push and shrl imul or gs cli hlt lds or push and leave sub nop and add add scas xchg popf or add outsl cmpsl xor adc loopne daa (bad) dec scas inc add and sub ret clc xor and xchg pop add inc (bad) xlat inc clts dec lahf das clc rorl and and cli decl mov adc ljmp inc scas mov in lahf ret loope jae sbb adc (bad) enter fstpt cmp test adc femms fildll xchg pop hlt xor in mov or jl mov aas sbb push fisttp jbe (bad) int3 sbb cmp add pusha scas mov sub adc orl add mulb aam gs mov (bad) incb and pushw sbb push pop testl aas int3 push inc cltd incb call push aas mov add jecxz pop or add or pop mov pop xlat pop adc (bad) sbb inc and xchg xchg pop adc rcll into in jae sbb nop inc loop dec inc push sub add mov shl pusha jg pop and push pop mov mov xor dec aas js and pop inc or adc jp inc adc lods mov adc shlb les inc or cvttps2pi sub mov test pusha add push xor push and incb add push cld or push nop rolb in mov push cli dec or push inc sarl push popa push add fs pop insb jbe cld popl or add (bad) cli lcall mov push xor dec in lea cmp (bad) and jge cwtl adc mov repz je das mov inc xor xor jl and or cwtl adc lret jae or add fsubrs pop cmpsb sbb pusha and jae and aaa jae adc xchg fsubs (bad) fdivl frstor xor dec js sbb sbb mov mov daa mov jnp daa add enter imul or jecxz lods into pusha dec jno adc dec pop in inc or lret out inc push inc jo xchg imul xchg jno fwait dec jne dec inc sbb push stos stos add add xor add test inc or dec push lods mov loopne add add (bad) mov out pop and sub and xlat pop das push xor push scas (bad) mov jne push inc push pop pop pusha and rolb add loopne jmp in and jae jnp dec push adc push insb pop dec inc jle (bad) adcl pop mov lret subb inc arpl inc lds outsb pop adc mov fdivs cmp stos dec dec fmuls cmp cwtl shl jae daa (bad) into je mov add add mov push sbb into mov gs cli cmpsl dec xor (bad) xor fdivrl pop pop insb lret cli repz aam sbb nop xor push dec dec adc aaa rcrb sbb xchg int3 cli jle mov pop pop xor mov push add inc or adc jge dec xor adc js (bad) pop adc pop jae xor je enter cmp stos nop adc lods adc push xchg enter mov adc (bad) cmp dec add (bad) dec or cmpsl testl addr16 xchg pusha aaa adc jne ss mov cwtl xor adc loope and cmp arpl stc or fwait or inc scas fsubrs jg pop cltd jo adc sub xchg dec push mov cmp imul ja dec jmp cmp aaa sbb inc sub and inc add xchg push rcll sbb rorb ja push add mov inc cmc jo pop pushf jo jmp lds outsl sbb cmc sbb dec insb inc push jo cmpsb mov inc push add adc jmp enter popf int3 adc dec or cmp add paddq cmp xchg jae add mov cmp stc dec sbb push inc inc outsb clc and addr16 xor cli decl loope and notl cmp cmpsl add add add dec popa push jae push push inc cld mov sar pop bound mov add adc daa shll add dec insl (bad) mov mov mov push rorb mov xchg into dec adc ret adc add jg outsl scas add cli jne cmpsb nop mov out and sbb into repnz or hlt pop sti pop aaa add sub jecxz das xor incl push push inc xlat add test add and addr16 push jo faddl pop adc inc sbb inc loopne inc sub dec push xor mov dec inc cmc dec or (bad) jb lret mov xor xlat adc aaa lret mov ret push stc lret adc jp aas daa adc adc sub jae adc loopne inc sbb pushw dec sti adc adc jae inc ljmp nop ljmp push add out inc rcrb jae aad stos or xchg sbbb mov lret adc mov pop inc sub or je iret add push pop adc movsl xor add push push out or pusha mov xchg add pop adc and add dec push sub xlat push lcall bswap jo add fsubrl sub adc imul les sbb push fcoms sub adc cli (bad) jbe orl loopne test adcl inc push es and cmc sbb xchg insb lahf xor rolb inc push push push sbb or or ret aad roll daa or xchg and jno mov jbe jecxz fstps aaa and cmp adc adc scas orl repnz sub sbb js and sub in bound cmp das ja iret daa lcall sbb ds lock pusha fdivs divl adc mov scas jnp sub push add aaa mov xlat inc arpl xchg mov add add jecxz or xchg jno rorl or sub dec inc push clc mov sbb cli push lret inc mov push pop daa or xor js xor mov cmp (bad) test jo lahf mov pop inc mov enter hlt adc add fistpl jo add inc pusha pop scas mov push cmp or or cmp aas sub mov jae jae scas enter adc out loopne add push adc cmp enter mov pushf jmp and sbb dec adc daa pushaw or sbb dec out adc out loop push xchg or add jo or push dec js sbb mov cmc inc xor mov (bad) iret dec bound inc call or test mov (bad) ss adcl sub in fs fadds pusha in cmp pusha xor push fsubr add in stos clc addl test pop xlat add jo std (bad) pop (bad) jae sbb and cmp jl lret movb cltd mov xor lahf add imul inc and and xchg shll and sbb pop inc lea movl in jp bound pop pop cmp cmc xchg loopne jmp fwait xchg arpl jnp shll inc pop pop push fldl push xor leave orb or fwait or pop and pop out ss or or xchg or outsl pcmpeqb insb ret inc js inc jl push xchg es and cmp scas addl scas pop movsb adcl inc mov push pop adc or push xor cmpsb inc dec inc push push fadds add sbbb mov xor add pop push pusha or mov push or insl sbb dec jle mov stos ret dec nop jecxz add test dec push ret movsb inc stos inc pop fldenv (bad) push pusha or and push pusha stc (bad) test rolb stc outsl or in adc add in adc add roll mull cmpsb and cmp inc std pop movsl nop cmovnp loope ds add inc or ret test push sub and pop std or out and and inc push and cli sub lds mull test or (bad) in lds add mov pop push mov push daa jle sbb adc (bad) mov add shrb pop add add add (bad) fucomp (bad) incl add stc pop add std pop add pop sar add neg ja add add add (bad) adc cmp cmp cmp pop add scas jmp add sub push inc out pop divl push pop nop mov push dec inc sti out jbe shrb nop arpl add mov sub dec xlat mov mov adc add inc test xor out or push insb (bad) xor roll xor aaa dec call add xor xor shll mov dec rcr push adc decl add add add add (bad) fldl pop mov add add add or imul adc (bad) jg add mov add add add add add add add sbb add (bad) (bad) (bad) incl and and and and and add jb addr16 add inc pop popa fs outsl outsb outsb arpl outsb adc jae outsl outsb jae pop outsw outsl aas enter gs push jb popa je out psubusb xor jne addr16 aaa inc fdivrs pop jb insl pop bound data16 sti adc popa insb insb bound imul je sbb sbb xor add popa je outsl data16 je or mov fs add push dec (bad) pcmpgtb je outsl jns push addr16 mov adc imul das in dec imulb jae fs gs outsl outsb sub mov xor test out sbb jb int3 leave or fisubr scas test add imul pavgw sub jb xor je pop jne gs (bad) cmp popa jo imul gs jae jo outsl jb mov ret xchg insb outsl outsl imul jecxz gs mov jne jne adc fldcw push gs stc adc jecxz pusha inc adc outsb pop xchg jae insb aam and pop outsl jo sbb lcall mov jo outsb imul inc ret dec jnp inc sbb jae popa jb mov or sbb and jo outsb xchg push push dec jl pop popa popl mov add jg icebp add cmp ltr adc add push aam mov lret (bad) pop mov and fs (bad) cmp (bad) hlt and imul sub add mov dec ja scas or push pushf adc adc xor and inc (bad) clc and std addl xchg add xor cli adc verw xor (bad) xor inc pop data16 mov mov imul sub dec cmpsb imul imul sub imul imul lcall outsb xchg mov (bad) imul dec fs imul cmpsb stc add lldt inc pop je imul pop fwait out xor and cmpsb imul imul cmpsb imul cmpsb imul (bad) adc verr dec pusha imul out cmpsb loop or add ds imul insb lcall and cmpsb imul imul into insl adc xchg add cmp imul imul push cmpsb imul jge pushf arpl into repz (bad) xor ljmp dec (bad) xor xor dec pop push xor (bad) xor nop mov dec sarl sbb dec idiv or repz dec (bad) xor cmp pop push jb mov stos mov enter xor fsub in idiv or je cmp add and xor push pop fs xor shrl (bad) nop pushf dec (bad) xor cmpsb mov (bad) into fdivs dec (bad) xor in hlt cld add cmovge xor add sbb ss xor (bad) xor push pusha push (bad) xor sarl xchg pushf cmpsb dec (bad) xor scas mov cmp xor testb fwait or (bad) imul add (bad) je pusha pop outsb jle mov (bad) rcr call xor adc xor (bad) xor dec pop data16 xor roll dec (bad) xor mov out adc mov (bad) (bad) jg pop add fs jae push outsl imul jb jbe insb gs (bad) jmp add jo inc arpl imul gs inc add test jg outsb push popa outsb outsl insl add mov push and addr16 popa jae add inc gs dec outsb outsw jb popa cli (bad) fistp push adc dec popa insl gs add xchg mov js movsl push add add fs arpl jne je imul adc gs mov lods or push outsl insb imul (bad) std arpl outsl arpl jae add and push gs dec gs jge fiadd push or push add push jne jb imul (bad) bound aas add je jb jg mov or str arpl jg pop std gs js gs dec add add add pop int3 lock imul dec bound pop hlt out and gs dec outsl testl add push mov or jo js jo inc lock outsl adcl add gs je inc jg jns xchg (bad) das test inc jbe outsb lea xor xchg or psadbw dec popa jb dec imul dec outsl inc outsl insl jo gs push in jg push outsl jb add fwait sbb lods movsb adc xorl lods adc xor inc mov insl popa jo xor (bad) lea push outsl outsl ja std ljmp insb jo xor popa jo push inc push je inc scas or jb je arpl push dec and pop (bad) icebp push jbe arpl outsb je outsl insb add add add fs add jb mov sub daa push imul jae gs or add lcall mov jae insb gs jne jo je je jb bound mov or push and and add jne push add arpl inc jge (bad) sbb dec mov gs add gs aas idivb sbb push jb jb add out jl jne jae jb add mov sbb outsl mov in insb (bad) push outsb jb mov push fcom je pop mov ja add icebp fadds (bad) adc jb pop mov adc leave adc cmp dec fs adc add int fildll adc add adc jb outsb insl out arpl out outsl push popa jb popa bound je ficoml push out popa outsb add adc lods arpl icebp adc and jns add sbb sbb inc add dec sbb add pop pop dec popa jae inc jb outsl jb add movq push popa fnop mov sbb push insb gs sub sbb jne imul adc (bad) mov lret sub xchg das cmp inc clc (bad) sbb bound dec data16 outsb scas ret jnp enter pop add pop jae add inc inc data16 mov je dec popa jae add push sbb pop lods add push pop xlat pop rcrb jae fs jne fs xchg (bad) hlt std jne add push pushf je push adc add jbe nop adc push fild add sti inc mov dec xor jle enter test jg fidivr and mov push gs jo sbb sbb addps ljmp xchg adc imul adc inc jns adc incl pop imul enter outsl bound dec gs outsl jb sbb mov cli inc js add add imul scas mov lock fs jo outsb pop fcomip (bad) aas or dec jae inc inc push dec gs fs jns gs or gs ja (bad) bound addr16 enter add popa jo push (bad) in jbe outsb fldl xor add bound clc dec add test in (bad) psubb insb outsl arpl add inc incl xor add dec outsl jbe mov add insb je cmp jmp (bad) push outsl push imul mov inc add aas sbb add imul psadbw (bad) jae xor movsb add xor cs jb mov pop xchg clc out add push gs notb inc add and out enter outsb mov adc push outsl jb dec xchg add add imul imul rcrb addb add adc iret psrlq bound pop outsb lret rclb outsb add or or sti jb popa imul imul insb gs push cs mov insl or and lock cmpsl mov add and je pop ret (bad) testl ja add push add jmp stc outsb int3 inc je insb dec jb sbb add pop or pop fdivs popa dec test add sbb daa das adc add push cwtl dec add sbb mov pusha and adc adc inc pop mov les inc outsl inc jns add dec or outsl imul pop or lock add pop popf sub notb adc inc loopne mov not sub (bad) sbb test aas inc insb popa jae adc dec je or lock jns shrb cmp mov jp orb sub push outsb push adc or jg cltd add insb gs mov cld psadbw add je push cmpsl add gs imul jb add insb jae dec outsl mov lods or add push lock or xor jns mov popa movsb add sbb and pop inc testb les ror add gs sbb xchg xchg sti imul or add imul fmuls or fmull dec pop imul fist dec add out test out pop movsb popa or out shlb add push push outsl inc sub or or inc xchg push add outsl cwtl cmp adc ret add add pop popa jb jbe pop pop fs outsb fstl mov add pop fs jb outsb jge ja in or popa (bad) jb jae cmp mov outsb jbe inc or outsb jbe adc sarl add insl bound jne pop insl popa xchg imul xor pop je add mov (bad) jne adc add pop jne popa arpl insb outsb add pop mov in str arpl xchg adc mov cld fsubs test sahf add fsubrl xchg (bad) mov pop arpl mov pop xor pop fildl pop outsb fs pand jg mov and adc testl jo outsb add jp aaa hlt add insl int3 add xor pop add jae fwait bound lock insl add or add roll fldcw lret daa in loop xchg xor pop outsl push push add inc test pop push dec mov and jo and outsb ja jb (bad) out pop push add (bad) or jo out outsb imul add outsl popa add and jmp inc sub add jae inc idivb jg add arpl add dec jg out jle sub xchg jb jbe les insl imul pop out add dec add aam (bad) lcall loopne insl sbb bound add je imul ret sarl add add aas add cmp scas inc add inc add repz xchg dec rol ja jne arpl dec pop jae out aaa loopne popa add pop jmp aas or fcompl popa add outsb add ja add insl je add outsl add jae outsl ja jb ja ja jae popa arpl jae jo adc (bad) popa insb arpl cmp mov insl add add gs arpl mov or sti (bad) stc jo add xchg xor xchg or add fwait add add add adc add add int3 sbb add mov pop in outsl add insb add mov jae mov jae vmovq popa add test testb sub jmp or xor jne (bad) outsb adc sub or jle outsl lret add into or iret or jl aas jne add add add add sahf fcmovnb (bad) incb hlt add arpl (bad) or sti or (bad) (bad) insl decb insl decl sbb fistpl add imul or or pop je je insl (bad) add jb (bad) mov addl dec dec jg in (bad) or inc outsl js add or aam add ja sbb rcr push dec imul js add pop push add xor push add add inc inc add ss add or imul xor push add mov outsl arpl or arpl inc or scas out pop inc jb insl add push pop add mov into jle outsl add je push adc add xchg loopne push (bad) addr16 pop lahf inc inc dec jae call out jg add add xchg bound loope in jmp add jae add push or sbb je loopne popa insl ficomp jns add gs xor roll or xchg add outsl (bad) jnp imulb add add sub add mov add add or add je idivl imulb dec cmpsb add jne outsl ja cmpsl add inc data16 add fildl jb,pn aas inc inc push inc push dec xor mov adc dec push dec dec push adc add xor xor gs dec inc push dec inc dec jnp add or jbe jb and cmpsl push push and std mov inc push sarl cmovne aas test lea mov add xor fs popa fwait jmp (bad) cltd test rcll adc nop mov jg mov dec add mov dec std subb adc jo (bad) fild push cld dec add push cltd add xchg in dec add push add add dec mov pop sbb pop int3 sbb add and jp test add pop jae jnp push jo aas mov and loopne or add add syscall pop fldcw push adc pop xor sbb popa pop inc ficoml insb out or add or call fnstenv sub das sbb out or inc push test paddusb dec sbb (bad) rcrb clc cmpsl sldt pop jae push add (bad) adc out seto aas int3 imul scas verw pop in imul add inc add add pushf mov sbb xchg repz pop sub into sub (bad) (bad) (bad) (bad) jmp mov add push push push push push sub cld aaa mov push push push mov adc scas jg push insl insl insl pop ret ret ret add out inc gs arpl aaa lahf xchg fisttpll nop out dec dec std add std xor popa mov gs xchg rcrb pop mov pop pop iret stos cld aas xchg test push push push lds pop push mov and mov out inc add (bad) pusha pusha pusha add and imul jb por sub dec and add aas sti push push push mov jge fwait and sub addb nop out sbb lahf fnstenv mov das cmp dec jmp sbb insb adc dec dec dec jecxz (bad) je xchg fistpll lea sbb sub sub jle bound sub xchg dec inc (bad) std or outsb adc fildl dec mov jl jl push (bad) inc sub or jg xchg mov outsl outsl outsl sub push scas add mov stos push (bad) ja add lods js js ret sbb rolb ja mov pop adc jnp or std sbb push push push test jg pop pop pop jno sub and sti add aas sbb pop adc es xor pop aas jo xchg ret sti add ja cmp add push js dec pop dec xchg decb add push push testb add incl adc mov mov ss ret mov or test loope or jbe incl lsl mov mov or mov scas and sub add ss pop mov (bad) lock jno popa mov cmpb mov mov or (bad) (bad) cmpsl add mov fldl jnp and add cmp insb pop xchg mov add fdivr fnstsw daa mov adc std add sti (bad) pop nop movsl xor mov pusha mov addr16 and pop fdivrs pop pop pop stos mov (bad) dec adc aas add sbb add bswap mov xadd mov ja add dec addl pop adc sbb add fisttp add jnp test add pop ret ja inc std add sarb adc (bad) mov mov or lret inc pusha outsl test mov jecxz dec add or ret xchg mov or mov imul push add orl ret mov mov adcl mov fsubs data16 sti xchg adc imul jo insb addb cmp and xor inc or ja xor add (bad) dec add sub popa mov and ret mov cmp dec xchg incl mull mov insb pop mov add (bad) sub dec rcll add movsl mov outsb and pop mov mov and ret inc ss cmp mov push jae dec daa inc mov or ss mov adc aas adc ret mov pusha test incl fild push outsb sub mov inc xchg mov xchg mov add jmp pop mov outsl mov insb fadd mov in lock (bad) decl jae stos imul or or pop imul movsb pop rcrl jmp imul punpcklbw incl ss xor pop popa ret mov and test xchg icebp and push test aaa loope cmp xchg std nopl inc add stc mov pusha inc jg addr16 sbb xor hlt mov inc idiv ret xchg (bad) stc pop jae dec fadds sbb pop ret mov dec pop add sbb cmpsl mov adc jne inc push out sbb sbb cli add add jnp and pop or addr16 cmp cld and pop mov adc pop mov nop cmpb jb pop test call (bad) adc add (bad) das mov mov movq ja or rorl adc sub decb adc mov jmp add repz dec push push xchg incl popa mov pop mov sub outsb push (bad) jne (bad) jg stos add mov add (bad) cmp (bad) or cmpsl or je inc dec xchg imul xor test and popf push test inc cmpsl pop xchg lcall xorl add xor push mov push push push movsl dec dec dec lds roll ret pop mov sbb das scas scas scas xor scas sti data16 dec pop aaa add inc sub xor lahf and imul xchg xchg xchg add push addr16 pop mov and cmp inc adc or push arpl adc add add jg push push push stos gs pop pop sbb outsl sbb pop repz (bad) pop bound adc negb mov packssdw and add cmp adc mov aaa dec jg add inc popa aas dec dec dec sti jg (bad) dec enter adc push (bad) xor subl ret sbb out or addr16 sbb jg sarb test mov pop lret mov out sbb fwait or (bad) enter mov mov (bad) lock add jo inc out add in xor add jp xor mov adc sbb jg dec std sbb arpl pop je aaa aas mov rolb movntps imul pop xor xchg outsl jg mov push add pop in inc ss mov push or lea testl add inc arpl pusha jg push lods xchg out or jnp idivb jne insl jmp add mov sbb ret iret push imul insb cmp push push test call jg mov xchg loopne adc xadd nop nop dec mov add popa dec pop addl mov addr16 fmulp inc pushl push ret jae addl ret push xor jg mov jg add subl test decb sbb cmpsl or xchg add mov movl pusha jnp cmp or orl fsin dec jg (bad) pop test push pusha pop addl decl mov adc inc ss or incb add jnp and xorl incb jge cli push sub push xchg cmp mov jnp pop or or subl sbb jg imul pop add jbe pop add stos test pusha outsl jg cmpsl cli cvttps2pi cmp addr16 and dec push popf adc hlt push and pop idivb or insb pushl add xchg pop ja mov add jg pop add dec xchg idivl sarb pop cmpsl in adc sbb jae sbb in aas mov ja pop jae sub incl xchg or jb and jo popa or sbb inc mov not xor pop push or jmp xlat xor adc repz ja xchg pusha and call pop scas subl mov ja in xor push js cmp je stos stos (bad) fwait mov pushf aaa daa in fstl mov jg movq dec cmp push sub pop mov xchg stos push and push cmpsl ret jg popa fs xchg or push movsb jmp mov lds in sbb sbb adc mov arpl add ret test stos pop stc add xor and pusha jmp bound das xchg sti xorl push push jne mov icebp inc and dec add out and xor adc mov decl xor dec mov push imul pcmpgtw jne nop aas out arpl fucomp pusha pop aas xchg cmp cmp sbb iret aas ss mov inc aas jne popa sbb push out pop (bad) add aas push push push gs mov jnp adc push in add aas jmp rcl xchg mov in (bad) jnp add incl sbb stos inc push aas repz scas fstpt pop hlt mov jle imul dec mov and imul incl jne xor lahf mov sub mov or scas (bad) pushl jne sti dec cmc out xor xchg add inc jnp inc sti mov cmp lret push (bad) aad or scas outsb pusha sbb mov (bad) push mov daa ret outsl fldl ja cmp add insl ljmp xlat jne push (bad) addr16 or adc pop sub pop add mov mov xor jmp into in push cmp add add add cmc or or add (bad) out mov add push add push or dec aad pop adc inc or fistpll (bad) push add stos popa into shlb add addr16 add add lcall add add imul ja ja imul dec or out leave out mov add xor xor bound out out mov add add add insl add popa das jns dec pop mov fstpt ja add insl pop xor add add xor lahf jmp xlat cmp imul xorl jae add dec inc pop add imul push add dec test sub push add pusha inc push jb jae xor xlat jne xor xor and dec and pop xlat jne insb dec outsl mov inc pop push lods add and sub (bad) out cmc xor add fcomi add or push stos popa insb (bad) cmp push jmp jnp cmp sbb gs cmp and outsl add adc mov out add mov add ret shll (bad) in cmpsb sub and jnp sbb adc push mov outsb cltd add lahf push hlt or insb and (bad) (bad) ljmp xor and arpl imul inc sub je outsb fs insb outsl outsb gs and jae aas or jae gs bound aas outsb jae and outsb cmp (bad) (bad) jmp gs popa jae insl imul je arpl cmp insl jbe,pn and insl popa outsb lahf int clc imul or sbbl je dec mov (bad) push xor cmp arpl imul adc jno bound push outsb faddl sbb sbb sti fwait sub insb and and dec outsb push fadd (bad) jbe imul das xor das push cmp xchg cmp das les cmp insb xchg mov imul mov cmp jg jnp jle outsl outsb adc and and in (bad) decl and insb outsl ja imul gs sub mov and jb dec jbe (bad) mov leave and (bad) incl gs push and cmp xor xor xor sub icebp jmp sub sub jb xor jge fs add decl xor cmp xor fs sub pushl xor xor xor cmp (bad) jg xor xor cmp sub sub sub cmp arpl xor xor ss cs jmp mov mov data16 arpl ss sub cmpsb xchg (bad) ljmp sub data16 and sub mov xor mov (bad) call cmp data16 popa xor sub sub sub jg sub xor popa cmp cld or xchg js das in pop bts dec das dec or add (bad) mov and sub xor xor dec xor jne jp jg (bad) (bad) (bad) decl ret xor cmp inc xor xor pop xor xor xor xor xor (bad) (bad) ljmp xor xor xor xorl xchg xor xor xor xor xor dec xor (bad) (bad) pushl xor xor xor xor xor xor xor xor xor sbb (bad) (bad) (bad) pushl test xor xor xor xor inc xor push xor (bad) (bad) (bad) (bad) jge mov mov mov mov xor pop ss ss ss xorb (bad) (bad) call ss out add and aaa push aaa mov idivl cmp push aas stos jb loop aas decb (bad) (bad) out out lret xchg xor push sahf xor icebp xor mov xchg aaa (bad) (bad) (bad) pushl xchg xchg cmp cmp cmp js xchg cmp cmp cmp (bad) out cmp cmp cmp fnstsw dec aas mov mov add cmp call test or xor xor xor xor (bad) (bad) (bad) mov jnp jbe xlat aaa mov cmp cmp cmp push cmp cmp mov xor lea andl xor (bad) (bad) dec xor xor xor xor cmp cmp mov sbb gs cmp lock xor ljmp sub outsl ss (bad) decl adc sbb aaa xorl aaa mov pushf cmp cmp cmp (bad) (bad) fnstsw insb int cmp jecxz add cmp cmp cmp cmp cmp cmp cmp std (bad) (bad) cmp sarl ds aas bound xchg xchg nop (bad) jmp inc jnp xor cld xor push sbb mov (bad) (bad) (bad) pushl int3 xor loop lock divl jbe jl sahf cmp cmp fs cmp cmp std fcomip cmp cmp sbb loopne inc ds adc (bad) (bad) ds ds fidivr repz aas xor ja mov out addr16 decl xor xor xor xor int cld (bad) pushl adc sub xor xor xor xor xor xor (bad) (bad) (bad) pushl xor xor test int in or ss ss in ss aaa lea mov (bad) pushl dec cmp inc cmp mov dec cmp cmp cmp in cmpl stos (bad) sbbl xorl cmp xor xor xor xor in xor xor bound int lcall xor mov sahf xor xor xor xor (bad) jg pushl xor mov ss ss ss decl repnz and cmp cmp cmp (bad) cmp mov int or (bad) (bad) (bad) cmp cmp cmp cmp inc cmp aad ljmp (bad) fnstsw jo pop aas addr16 jo jbe cmpb aas fbld rcrl jmp xor mov lret (bad) pushl xor xor xor inc xor xor xor xor data16 xor xor adc push and clc add pop aaa inc (bad) (bad) (bad) pushl outsb aaa jg std aaa push cmp cmp outsb cmp cmp cmp cmp cmp inc cmp (bad) (bad) cmp cmp cmp cmp cmp cmp cmp cmp aas cli (bad) (bad) cmp mov call ds add (bad) (bad) (bad) decl xor dec xor xor xor aaa clc cmp xor cmp cmp cmp add xor ljmp xchg xor cmp cmp cmp cmp cmp cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp mov add xor xor xor xor xor pop aaa sub mov aaa cmp aaa fs mov cwtl cmp jge cmp mov pusha cmp cmp outsl cmp cmp cmp (bad) in cmp (bad) (bad) (bad) decl lahf cmp mov cmp and sub cmp cmp sbb pop in (bad) (bad) (bad) incl xor xor xor xor xor xor xor xor cli decl dec xor xor xor xor out cli pushl xor xor xor xor xor xor jmp xor clc (bad) mov lds xchg scas ss ss add cs inc mov xorl aaa ret aaa out aaa add sub mov out mov outsl cmp cmp cmp ja cmp (bad) (bad) jmp cmp cmp pop cmp cmp cmp and cmp cmp cmp fsubs clc out mov ds ds ds add clc xor xor add mov push xor jge lahf (bad) lcall pop xor xor xor xor lahf xor (bad) jg popa jle test pushl add adc inc cmp int3 cmp cmp cmp (bad) fbstp cmp cmp cmp cmp cmp bound push test (bad) (bad) (bad) (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp loop jmp and lock outsl fnstcw repnz aas mov add (bad) (bad) mov xor xor push ret xor xor xor mov sti xor ljmp push xor xor outsl test cmp cmp cmp cmp cli jmp ds ds aas cltd aas mov add xor (bad) (bad) ljmp xor xor xchg xor xor xor scas cmp cmp cmp cmp cli (bad) lcall xchg daa cmp pop cmp jle xchg loop add and dec cmp in aad and fdivs loope jg pushl divb aas xor adc sbb (bad) cmp fstp push js (bad) cmp sub push cmp stos cmp cmp or hlt jg cmp inc cmp and aaa ds cmp (bad) ljmp ds sub aas cmpl aas les add cli mov adc xor dec (bad) lret xor xor push (bad) ljmp inc xor xor xor xor pop cmp loopne out sbb mov jo add outsl mov and cmpsl cmp popf pop xor mov mov and xor xor or pop mov aaa inc cmp cmp cmp cmp out incl cmpb cmp sarl cmp cmp (bad) (bad) jmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp decl cmp cmp cmp jne cmp cmp cmp cmp cmp cmp cmp cmp (bad) scas push cmp cmp cmp inc cmp jns lock cmpl cmp pop ds addb fcomip aaa add xor fcmovbe xchg lcall cmp cmp cmp mov mov mov cmp (bad) sbb aas sbb inc ds cmp xchg mov xlat pop jecxz cld sbb in ds aas add aas aaa xchg xor inc xor bound jb out cli xor xor xor xor xor xor ret (bad) fcomip xor xor pop nop xor xor xor xor xor xor xor xor (bad) (bad) jg xor mov aaa (bad) aaa call cmp cmp cmp cmp test rolb jge out add add sub pop adc jl ret pushl adc adc xor xor jge inc push xor sbb xor aas pop mov fdivl loop (bad) (bad) pushl cmc ss ss aaa jno mov xchg aaa lds into aaa jmp aaa and arpl (bad) pushl cmp (bad) cmp cmp cmp cmp cmp cmp cmp cld sbb cmp cmp xchg cmp mov or lock xor outsb cmp add cmp iret pop cmp aaa std lcall sub inc cmp js enter in cmp xchg cmp ffreep (bad) (bad) cmp cmp cmp cmp cmp cmp cmp ret cmp rol (bad) xor ds ds ds mov jle,pn decl aas fs lea sahf xchg icebp aas add push or push xor xor pushf xor mov pushf xor xor or xor mov pushf xor xor xor xor xor xor xor xor jae jnp xorl xor xor test xor xor and xor xor stos or sbb push fistpl xor xchg movsl ss shlb pushl adc inc aaa pop aaa outsb sbb sti and rolb xor clc cmp rorb push ror aas jnp loopne arpl outsb xor lock (bad) push lock add aas cmp (bad) fstp dec xchg adc sbb push aas pop xlat movsl aas lret aas idivb std aaa inc les adc add xor cmp inc xor jbe jge mov xchg xor xor xor xor sbb (bad) in outsl jns xor aaa std pop jl aam cmp cmp xor pop jg pushl and xor inc xor arpl jo scas xor sbb sub xchg jg xor inc loop (bad) jg xor xor xor xchg xor enter (bad) cmp jg pop ss ss imul inc fidivl loope push aaa or (bad) out clc cmp insl aaa je xchg aaa mov mov aaa add or dec cmp ja incl out cli jle mov cmp mov cmp cmp cmp cmp cmp mov cmp sbb cli jmp cmp adc sbb xor inc cmp mov mov jmp (bad) mov (bad) inc cmp cmp cmp cmp cmp cmp mov and push cmp cmp sti cmp (bad) pop dec ds ds ds sarl (bad) hlt ds xor inc aas dec mov jne (bad) cmp add pop sbb add or pop pusha xor xor xor xor xor xor push aas xor lcall loope xor xor sbb and sub push xor push (bad) cmp xor xor xor xor fisttp mov (bad) (bad) cmp xchg xor xor xor xor xor xor xor xor xor (bad) out clc mov repz xor pop and cmp inc xor mov mov xor sub add add fcomip fild xor mov (bad) aaa hlt aaa add hlt (bad) cmp cmp aaa cmp pop cmp xchg cmp jg cmp (bad) out inc add (bad) pushl inc sub xor jo repz decl jae xor lea movsb xor xor (bad) lcall add in cmp cmp add (bad) es (bad) jle xchg cmp jo add and add (bad) out push xor xor cmp cmp jno mov incl add (bad) xor cmp nop pop std or xor pop sarl icebp cmp mov imul mov push xor cmp adc aaa add outsl stos jb ljmp cmp add add jns jmp add adc xor xor scas (bad) dec xor fidivl pop ss ss ss ss mov add push cmp adc cmp cmp inc cmp pop mov sub popf cmp cmp scas (bad) (bad) incl xor xor xor pop xor xchg mov mov inc cli out loop (bad) xor xor xor xor xor mov sbb mov xor xor daa mov mov add push and mov ljmp sbb (bad) ljmp aaa (bad) aaa fwait aaa fstpt adc daa mov jecxz add cli mov lds out rolb add (bad) mov mov xchg rolb add jg xor xor xor jl xchg pushl leave xor xor xor xor test int (bad) ffreep xor int xor xor xor xor rcl das icebp xor xor xor xor sar jg xor xchg aad fdivl out pushl adc xor xor xor hlt (bad) (bad) fistpll xchg xor xor xor xor xor xor dec xor je sbbb ja mov les adc pop ss ss ss xchg (bad) pushl lock ss int3 ss ss or adc aaa imul aaa mov aaa les testl cmp popf push lret cmpb cmp cmp xlat ja dec cmp pop and cmp lock pop xor cmc cmp and (bad) movq (bad) (bad) cmp cmp cmp cmp cmp cmp cmp std (bad) ffreep cmp pop mov cmp cmp cmp cmp cmp jne ja xchg cmp shr icebp cmp (bad) adc cmp inc ds ds ds lret fistpll add sbb and inc mov ja test mov mov decl out xchg add dec orl xor jnp xchg ja aaa lock xor xor xor inc push xor xor in notb xor (bad) cmp push xor jo scas xor xor xor pop xor call movsl xor or das ds xor mov push xor xor xor pop call xor outsb jae aaa daa insl push aaa pop jnp sbb cli fwait mov fdivs fildll and mov lods cmp sti cmp cmp cmp outsl xor cmpsl cmp cmp cmp cmp insl cmp call mov cmp cmp push mov mov cmp cmp cmp cmp cmp cmp andl cmp cmp cmp jne push push mov push add push jnp mov jne xchg fidivrl loope push aas es aas adc mov aas test lcall lock addl and imul xor xor leave stc dec sub cmp sar (bad) jg xor xor xor xor sub dec xor pusha xor test std jg xor xor xor xor xor xor xchg inc push (bad) jg xor xor xor xor xor stc cmp lahf xor cmp sub xor jns xchg dec cmpsl out cmc xor test cmpsl fwait jle aaa sbb ss adc sub pop aaa test xchg (bad) lcall aaa cld aaa xor cmp dec cmp pusha cmp sarl loope fist xlat add arpl push test mov hlt aaa or in add rcll cmp hlt cmp cmp cmp cmp pushl cmpl or cmp cmp cmp cmp cmp push mov cmp pop loope cmp movsb cmp fistpll and xor inc jae,pt les sarb jecxz mov sbb and das loope aas arpl lcall pop xchg mov add mov pop (bad) lcall xchg xor xor xor xor xor xor arpl jo or xor xor xor xor xor xor xor arpl js mov test (bad) pushl (bad) xor xor xor xor pop xor xor xor xor xor adc dec xor loope xor xor fisttpll xor and movsb cmp xor sub fnop pushl cmp push imul (bad) fnstenv jecxz divl adc sbb cmp ffreep aaa inc adc cmp aaa in ret ja ret sbb sub inc cmp data16 bound imul jne pushf aas mov aas cmc aas decl adc xchg adc pop xor xor add cmpsb out clc mov inc ljmp xor lcall mov xor xor xor xor xor call fnsave inc xor push xor lea xchg xor lahf sbbl xor xor incl pop jae adc pop ss lods ss (bad) ss xchg add or popa aaa push aaa scas aaa mov ljmp pop cmp push xchg mov mov xchg fidivr hlt xchg pop xor inc cmp (bad) ljmp mov cmp cmp cmp cmp inc cmp pop cmp incl cmp cmp cmp cmp jbe mov xchg cmp call fdivrl call cmp cmp cmp cmp cmp cmp mov fistpll cmp cmp cmp aaa cmp mov test cmp and ds (bad) decl ds mov aas cmp dec aas push aas mov inc (bad) mov aas mov aas loop add add rcl pop aaa pop adc mov cmpsl xor imul jg ja push mov xor xor and sbb xor xor xor rcll pop add adc outsl lcall xor xor in repnz xor fnop pop cmpsl push xor out lock es sbb ss cltd cmpsb outsl aas push ja (bad) ss cmp push pop jnp mov stos inc or aaa mov sub std jg cmp cmp jnp (bad) (bad) (bad) pushl cmp cmp pop cmp cmp cmp cmp adc sbb cmp ffreep (bad) (bad) cmp cmp (bad) cmp xor pusha rcl (bad) (bad) cmp cmp cmp cmp push fbstp (bad) fnstsw out sbb and push aas imul shlb mov sarb loope stc aas jl add std pop je add inc xor xor cmc pushl pushl fdivl in xor xor xor jne jl xchg mov fdivs fild aaa xor xor (bad) imul (bad) jg xor fnsave repnz xor decl cmc xor xor xor xor xor xor xor lcall sbb xor xor (bad) sysexit and inc xor jg pushl xchg xor divl sbb arpl jno jnp xlat pushl xchg stos ss mov ss ss jmp aaa cmp lock mov int3 push sti push cmp ffreep sbb pop cmp test scas cmp lds pop cmp mov xchg cmp (bad) fistp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov sbb cmpsl cmp pop call cmp std pop cmp jno pushl mov cmp cmp cmp cmp cmp cmp aaa mov cmp in add sbb and sub pop jg,pt fdiv (bad) xchg xchg ds ds ds aas adc ds inc mov aas mov pop ja aas xchg aas fwait aas scas jmp aas clc and aaa aam mov xor mov negb pop xor cmc aaa xor bound mov imul xor xor jge xor clc pushl insl jg xchg xchg xor xor jnp xor mov xor lea cltd xor test xor xor xor jmp in int3 clc (bad) (bad) cmp repnz xor xor xor xor enter mov xor and cs stos push ss call clc fidiv in clc adc aaa cmp push aaa pop aaa js (bad) aaa test shrl popf cmp cmp cmp cmp cmp (bad) decl cmp cmp cmp cmp cmc movsl cmp cmp cmp cmp bound (bad) (bad) (bad) cmp iret cmp push xor dec outsl jbe,pt (bad) cmpsl ds aaa (bad) or sbb inc aas push jle cmpsl sub sbb add add pop xor cmp mov pushl mov jecxz ljmp xor fs xor xor xor xor (bad) pushl sub xor jns lea lods xor sub jne aaa and test push pop icebp and mov xor xor xor xor notl cmp push xor mov loop repz cmpsb lcall ss shlb aaa je jg aaa push aaa das aaa inc aaa add je pushl lock add cmp inc mov aas mov loope cmp cmp cmp cmp cmp push lea (bad) ffreep (bad) cmp cmp cmp cmp cmp mov insb cmp lcall rcrl pop out cmp cmp or out int fistpl pop je sbb cmp cmp cmp (bad) idivl cmp aas jno inc (bad) cmp xchg sub push cld (bad) fbstp jle test xor cmp aas jp cmp mov aas aam out cld or add scas push cmp add xor xor xor xor and sub cmp inc xor insb orl (bad) sbb ljmp xchg xor xor outsl mov mov mov subl xor xorl icebp xor xor (bad) or dec xor pshufw popf jg xor aaa lock std (bad) ss ss adc sbb aaa pop (bad) (bad) lcall aaa fidivl call cmp cmp cmp pop cmp jns mov ffreep cmp cmp cmp popa cmp xchg mov aaa lock cmp cmp cmp cmp dec dec cmp mov int3 cmp cmp std dec aaa xor inc stc fwait cmp lcall cmp dec cmp cmp cmp icebp outsl mov cmpsl pop cmp addr16 je mov mov cmp sbb dec ds ds cmp pop (bad) aas add inc xor push xor jnp (bad) outsl jg (bad) jg xor xor xor xor xor int xor xor xor cmp adc xor push cmp test or fsubrl (bad) (bad) (bad) in xor and das cmp pop ss ss ss xchg ss ss sbb push inc or xchg aaa stos adc cwtl call std aaa sbb rclb sarl fnstsw repnz and (bad) mov cmp cmp cmp cmp inc cmp jp push (bad) mov cmp cmp cmp sbbl cmp out adc xor cmp (bad) (bad) incl push cmp cmp cmp cmp cmp cmp cmp dec cmp jbe lcall mov repz add inc ds jle,pt or ds sarb adc ds lock lret cmp inc aas dec aas mov fdivrl in aas add add or adc push das push xor (bad) jg jnp xor xor xor xor xor js dec jne xor divl mov xor xor outsl (bad) xor xor (bad) (bad) decl mov xor xor imul xor xor jmp (bad) push pop xorl cli out outsl lds test cmpl jmp lcall jge jnp cmp cmp out ljmp idivb or push das cmp pop cmp hlt or cmp repz inc std inc nop add mull insl xor adc xor sbb xor pop (bad) out sbb fs shr xor xor xor xor xor xor sti (bad) call pop xor xor xor xor xor xor xor xor push mov decl xor loop out xor je decl ss ss ss aaa adc pop cmp aaa cmovns mov enter divl (bad) aaa or (bad) (bad) (bad) cmp cmp cmp cmp cmp jle test mov cli cmp cmp cmp cmp inc dec (bad) pushl pop cmp cmpl mov sarl cmp cmp sub hlt jg cmp test nop cmp (bad) xor or cmp cmpb cmp aad in negl or cmp cmp cmp cmp cmp mov adc sbb loop pushl sub inc xor push xor xorb xor sar jmp xor imul xor xor xor xor (bad) cmp sbb rdpmc push in xchg xor xor xor hlt jmp xor xor xor xor xor xor push (bad) or loopne ljmp xor insb dec std lcall xchg xor mov sbb sub cmp inc pcmpgtb aas push pushl outsb xorb mov ss lock iret cmp fdivl idiv cmp cmp cmp cmp cmp cmp mov mov std aam lret mov add inc and (bad) pushl xor test cltd xor sbb cmc xor xor xor xor ja xor ja xor xor xor xchg and sub pop xor ja std xor xor mov loop or and aam fidiv out aaa divb push cmp cmp cmp cmp push jp (bad) cmp cmp cmp mov cmp (bad) xor cmp lock mov push or cmp mov jmp push cmp push ds adc add (bad) inc mov aas push aas inc aas fs mov mov pop xlat xor xor fwait cli outsl dec mov call xor xorl outsl mov loope icebp xor test xor xor xor incl (bad) insb xor xor xor (bad) mov (bad) xor xor xor xor xor out ljmp popa xor xchg xor shrl icebp xor and xor inc dec popa ljmp lcall mov icebp add adc outsb loop cli and xor inc jecxz aaa sub mov cmp stos fwait lahf out sbb mov outsb push xor inc cmp jno xchg cmp loopne cmp ret icebp cmp cmp test popa cmp push xchg lret mov rol (bad) mov cmp inc cmp jno cmpl mov sarl adc and lcall push ds cmpl mov sarl loope,pt icebp ds mov aas add add insl ss ja (bad) decl aaa mov cmp xchg int3 cmp cmp decl cmp dec cmp cmp cmp sub inc cmp lods cmp add cmp cmp cmp cmp cmp sbb cmp or or out adc ljmp rcl add xor je rcr xchg xor pop sbb inc decl or xor xor xor inc aaa lock cli xor xor xor xor jne xchg xor jg xor xor xor xchg cmp int3 aaa sar call pushl sub cmp into cmp cmp cmp cmp cmp cld pushl xor adc and gs add lock push xor xor xor cmp std sbb xchg aaa repnz and imul cmp imul cmp je jnp mov cmp mov gs xchg rcrl pop mov adc test das jbe mov out gs adc or xor xor xor xor lock xor jge pushl fdivs pop cmp or sbb ret cmp roll leave cmp lock daa aas cwtl aas ret adc lret or xor call decl pushl mov sub dec xor in xchg jo mov repz xor cmc xor mov cwtl lds fsubr cmc adc xor (bad) jg cmc je jnp lret cmp cmp cmp cmp cmp lock cmp cmp pop mov cmp jns lods clc pop pushl ret ds aas push aas negb and push outsb (bad) and mov out shll mov xor xor xor xor xor xor xor push lcall mov lahf xor xor aaa sbb (bad) jmp aaa sbb je sub push cmp cmp cmp aas inc iret jns sbb scas push movsl aas sarb xlat lret add add das add lcall ss int3 ss jb xchg stos mov cli push pop mov aas setg cmpsb cmp leave cmp daa imul jecxz (bad) dec cmp cmp cmp sarl add jnp jae (bad) (bad) mov mov cwtl xor xor xor je and inc xchg cmp cmp cmp cmp lock cmp cmp cmp push and pop jmp sub inc aas dec aas mov push add xor (bad) (bad) decl push xor pop xor cmpsl xor adc cmp xor xor pop jne inc andl ss xorb lock aaa mov cmp mov cmp inc cmp (bad) add cmp cmp or je fdivrl jecxz adc fiadd pusha add xor (bad) mov loop ljmp xor xor xor cltd (bad) incl pushf cmp cmp outsb (bad) lcall mov cmp cmp cmp xor (bad) cmpsb aaa leave jno add out loopne loopne xor add pop xor xor mov xor outsl clc push mov cld add push xchg aaa in aaa test aaa and cmp cmp cmp cmp cmp cmp cmp ret mov cmp cmp lods adc aas in decl je (bad) xor xor xor xor xor lods xor sti fnsave in in mov xor jno cltd adc lods jae lods cmp cmp jg jmp icebp cmp inc cmp cmp cmp cmp push jg sbb lahf mov xchg ds aas push or (bad) xor nop add xor (bad) es pushf xor mov xor xor xor jne fdivl jecxz mov mov gs add call ss ss ss mov jg jg aaa lock dec cmp aad hlt cmp cmp pop (bad) (bad) aas push fistpll daa cmp imul add sub sbb xlat cmp push (bad) aaa test push popa jnp mov subl fist jb mov aas sub adc (bad) mov rolb xor xor xor xor (bad) mov pushf xor dec xor (bad) xor xor push daa xor xor fdivrl subl fild xor nop xor jecxz les cmc xor push ss ss scas aaa mov pop std ja xor nop cmp imul cmp xchg (bad) cmp leave cmp cmp jg ds inc cmp jecxz ds test fptan ja out out ds add xor xor je (bad) incl mov and lcall xor incl add xor xor xor xor test pushl jns repnz xor pop aaa jg sbb fstpl aaa ret int aaa loop or outsl cli outsl cli push cmp cmp cmp cmp cmp fucom cmp cmp bound xchg mov loopne scas sbb jmp ds adc xor cmp je jnp xchg imul (bad) dec dec rolb aas mov xor arpl xor or lcall xor lds test mov movsl jg pushl (bad) ss aaa inc cmp jb jns stos cmp cmp cmp ffreep ja cmp cmp inc cld cmp cmp sarl (bad) mov fdivrl pop imul xor jg (bad) pushl xor and cmp xor xor xor xor xor xor xor daa xor call xor dec ss ss xorl ss ss jmp lods test cmp cmp pop cmp cmp clc pop loopne cmp cmp dec cltd or sub mov cs nop cmp sbb cmp lcall adc jle inc xchg add ja xor xor xor xor jmp pop xor xor xor xor xor xor or xor imul ja xor insb ss lea xchg ss ss ffreep (bad) aas and xor ds dec aaa push aaa pop aaa gs insl mov cmp xorl sbb mov in cmp or push push xchg insb xor aas jle or (bad) aas ret aas lret aas in aas add add adc (bad) (bad) jg xor out xor xor xor xor dec xor or xor (bad) lahf call xor sbb jp (bad) xor scas imul pop ss ss ss (bad) (bad) jmp out aaa (bad) aaa xor dec cmp sarb cmp cmp cmp cmp (bad) out call jmp cmp ljmp aas mov add ret cmp je jge jg fistpll out cmp xor xor xor xor xor sbb push xlat jbe jle mov (bad) pushl add and xor xor xor mov (bad) ss fdivrl jecxz add cmp incl xlat cmp dec xor cmpsb cmp add pop cmp (bad) (bad) (bad) cmp mov and cmp jl,pt mov xchg les lret ds and stc push push or adc pop xor xor aad fst xor push xor aaa fcompl xor movsl inc xor xchg int les xlat inc jg pushl loop in ss ss aaa push (bad) xchg aaa popf aaa sbb and arpl mov xchg cmpl inc (bad) hlt cmp cmp insl outsb cmp mov negl jmp mov arpl test add push (bad) (bad) incl jle test or adc push xor xor xor xor jg aaa cmc xor xor xor pushf mov xor or sbb sub les push in (bad) decl cmp cmp cmp cmp jno (bad) cmp cmp cmpsl or cltd repz cmp cmp cmp (bad) mov dec cmp sarb jmp andl xor loop mov aas loopne xor pop and xor and mov pop xor jle aas xor xor xor jl xorl xor or push ss ss (bad) out loop aaa arpl xchg cmp test cld cmp push cmp mov sarb clc (bad) out and and ja adc gs mov outsl or cvttps2pi xor jne xor ffreep adc inc xor jl xorl lret cmp xor xor xor xor mov jmp aaa sub inc aaa dec aaa xchg aaa fwait aaa cld aaa push cmp cmp cmp mov and fnstsw mov cmp jns pop sub cmp aaa cmp cmpsl loopne mov lods cmp aas int push push fild lds add xor xor adc (bad) jg xor cmp bound imul lret xor xor pop xor push (bad) lea mov leave xor mov icebp pushl enter call cmp cmp cmp sbb (bad) (bad) (bad) cmp cmp dec cmp cmp cmp cmp cmp jle mov xlat mov xlat cmp push dec cmp cmp ja sbb jo mov cmp aaa sub ds ds ds ret pop dec pop flds push mov pusha push push cmp push xor cld jg xor xor xor sar (bad) xor cmpsl xor xor xor xor xor or sub xor xor xor push add pushl xor xor adc ss addr16 (bad) incl sbb inc aaa insl pop cmp sarl fdivrs add add out cmp inc flds mov xor xor xor xor sub ds xor xor xor xor xor shrl cld aaa (bad) hlt arpl bound jno ja mov pushl add cmp lds cmp cmp cmp or inc inc lea xchg cmp lret pop (bad) cmc (bad) cmp cmp cmp push cmp push (bad) outsl call cmp cmp cmp cmp adc and pop mov ds aas pop aas jg mov pop cmove outsl xor xor xor xor xor xor and outsl leave fdivrs jecxz in cmp popa sbb push mov xor imul jl push fdivl xor xchg (bad) xor xorb hlt call aaa out cmp outsl lcall cmp outsl push cmp cmp cmp outsl sti lea pushf cmp cmp pop cmp cmp cmp cmp cmp and (bad) (bad) ljmp adc jnp mov mov (bad) cmp enter and pop loopne cli daa aas dec aas push sub aas add cli ljmp xor jl xorl xor xor rcll jmp insb xor xor xor xor mov xchg xor mov sub dec ss xchg int (bad) (bad) fild aaa push aaa jne lcall cmp cmp js popf cmp insl std add fbstp cmp mov pop inc ja fistpll stos cmp cmp cmp mov cmp fcos (bad) jg cmp cmp cmp cmp cmp cmp mov ds xchg (bad) cmp jecxz out cmp xor jb,pt cwtl ds ds mov xchg inc inc aas dec aas insl aas jl fwait int and clc leave aas fdivrs (bad) lret mov add add and xor push xor lea test lds xlat xor xor xor xor popa xor test ds int repz pop xor mov dec xor jnp lea lahf xor xor (bad) (bad) decl xor xor xor xor xor xor xor xor mov ja lock jne std aaa adc aam cld cmp cmp cmp (bad) cmp cmp xor (bad) cmp xchg cmp cmp cmp cmp fildl (bad) mov mov lcall ds orl mov xchg jne aas repz push add mov xor jae xchg xor xor xor xor dec loopne (bad) xor mov test xor rcrb push or pop std (bad) jns xor or pop (bad) pop ja adc and bound call cmp push lcall cmp cmp cmp cmp mov imull out ljmp jbe loopne out call imul pop xor xor xor xor xor sar (bad) xor cmpsb ss or jae movsl aaa adc xor in cmp (bad) cmp (bad) (bad) jg cmp cmp cmp cmp cmp cmp cmp cmp sarl xor es sub cmp dec aas popa aas addr16 int3 pop push decl xor mov xor xor (bad) pushl and xchg xor xor xor mov or xor rol aaa add mov jo sbb add ss aaa add cmp hlt decl cld cmp cmp cmp out daa push aaa ffree (bad) sbb jnp cmpsb adc xor sub rol pushl xor les xor (bad) stc mov cld ja pushl and sub xor dec cmc js (bad) ss jb jns std decl aaa xor cmp rorb fs sub inc roll pop mov cmp cmp cmp repnz xor cmc cmp xchg jne add push (bad) fild loop or test lahf xor (bad) clc out loopne cwtl xchg mov mov xor xor add xor aas xor pop xor push pop (bad) jg xor xor xor xor xor cmp shrl sub mov insb xor (bad) decl mov xor cmp xor xor xor xor popa rcl (bad) pushl xlat xor dec ss imul jae (bad) (bad) (bad) (bad) and xchg cmpsb aaa ret aaa loop or and push cmp cmp jg loope xor pushl cmp fnstcw adc arpl test iret cli jg ja add adc jmp xor xor fdivl add scas sbb in jmp add sbb xor decl (bad) test xor dec mov out pop arpl js mov jne aaa mov xchg scas (bad) lcall inc mov je sub jge adc cmp call and outsl inc lods xorl fwait xor cmp xor xor xor xor xor xor xor xor xor xor push xor outsb xor test mov xchg xor xor xor mov xor xor pop out loopne rolb pop xor cli cmpsb lds das fwait ljmp lods mov mov ss ss incl (bad) sub pop aaa jge fisubrl add sub pop cmp mov add or aad fwait lahf inc cmp cmp cmc dec cmp ja (bad) cmp and cmp inc ds movsl or push aas mov pop mov sti xor xor nop xor xor es out mov push xor xor xor sbbl mov aad mov cmp cmp cmp dec cmp dec mov cmp cmp cmp clc lock fnstsw cmp out cmp fs inc pop incl xor popf int in xor xor xor cmp mov ret xor lret cmp (bad) incl and cmp cmp cmp jb lahf sarl ffree lahf std loop jb add add (bad) xor fcomip or xor xchg xor xor jns (bad) jg je mov xor xor ret ss aaa aas cmp cmp lock cmp cmp rcll cmp cmp (bad) (bad) sub xchg sbb das ds ds ds pusha jg pop rolb add mov xor xor xor lcall xor in cmp cmp sahf cmp cmp cmp cmp out mov cmp cmp hlt cmp aam mov (bad) mov fnstenv aaa cmp cmp lret ss (bad) out cli in add arpl or cmp insb cmp cmp cmp lcall divl test lret lods scas addb mov clc aad loop cmc cmpsl inc xor jno stos xor pushf xor xor mov aas xor xchg cltd stc xor mov test out sbb cmp pop mov cmp cmp cmp xor mov fwait clc es cmp xor inc aas push aas pop cli out loopne pop jbe jnp xorl cmp dec xor xor xor ja adc sub mov xor popa xor jns (bad) xor out testl call inc xor xor xor xor xor fwait clc xchg push aaa jg divl push addr16 cmp data16 cmpb cmp nop cmp cmp cmp cmp mov cmp or es mov sbb cmp cmp cmp cmc pop sarl cmp cmp cmp cmp add pop (bad) (bad) cmp sbb cmp pop cmp xchg shll mov aaa xor xor xor xor xor jnp mov xchg xor pushl jno pop xor xor xor push xchg loopne cli cmp cmp popf mov cmp cmp in call cmp cwtl clc outsl stos aas (bad) iret cmp lock cmc pop arpl xlat mov aas push aas pop incl inc cmpxchg (bad) cmpsl xor jb icebp (bad) (bad) jg xor xor cmp push cmp push jae test les loopne hlt cmp or in jecxz fnop lock cmp sarl shll jb jnp lahf cmp cmp aaa je pop out int cmp std sbb rorl cmp test cmp cmp cmp jg decl frstor cmp and cmp cmp cmp jl adc cmp push cmp jne add pop add (bad) (bad) pushl pop jp lcall xor xor adc sbb xor jg pop ja adc cmpsl xor xor push inc mov out xor xor xor xor xor out xor xor call pop cmp xor cmp xor cmc fnop ss testl adc adc aaa xor inc aaa push aaa pop aaa insl aaa jbe test xchg aaa test aaa out (bad) jg pushl push cmp cmp mov faddl sbb inc cmp pop cmp std aaa aad cmp cmp mov cmp (bad) (bad) (bad) (bad) sbb insb cmp xchg cmp ret cmp pop ds into js (bad) xor push ds call sbb mov jg xor xor xor dec xor mov xor mov xor xor xor xor sbb xor xor xor dec xor mov mov repz or lcall jg cmp lret xor jg (bad) xchg leave jmp xor pushl fidiv icebp fcoml pushl adc sub sub xor dec add mov or aaa in lea mov data16 insb aas jbe xchg cmpsl scas aas leave aas rolb lock lret loop add loopne (bad) jo call ss aaa pop aaa mov aas sub outsb pushl cld dec inc mov cmp insb cmp cmp cmp jg dec std cmp cmp jp mov cmp cmp rcl aad jp mov cmp cmp push inc jge arpl idiv or cmp pop cmp test mov aaa cmc (bad) (bad) cmp sbb sub cmp jnp,pt mov cmpsl imul fmul or xchg push jno push cld (bad) aas cmpl mov sarl aas loope pop (bad) (bad) call ret add adc and xchg xor xor xor xor xor push xchg int add xor mov lcall xchg xor xor xor dec cmp es cmp cmp hlt jg ja repz lcall ds ds aas mov mov or (bad) xor xorl outsl call xor cltd xor xor xor xchg jno xorl xchg xor cmp jo (bad) aaa mov out xor xchg cmp cmp add add cmp (bad) jmp sub xor push aaa jle mov cmp mov cmp cmp sarb mov ds add or xor cmp inc aas dec aas push aas pop aas outsl aas add or (bad) (bad) mov xor xor cmp cmp cmp cmp nop aas add sbb mov xor xor clc das call cmp add fild call xchg xor xor imul (bad) adc push cmp push or xor (bad) jg dec out mov cmp fstpt loopne push cmp or hlt (bad) cmp dec cmp cmp cmp cmp mov test leave pusha or xor (bad) movsb xor out ds inc ss xchg mov std cmp cmp loop jecxz cmp out cmp fs cmp adc fcoml pop ds fdivrs dec aas dec aas mov jne or xor (bad) cmp stos xor pushf xor jecxz cmp cmp insl cmp cmp lahf cmp aas sub cmpsb scas (bad) mov incb mov xor arpl xor aam and aaa (bad) xchg cmp arpl mov aam pxor adc cmp lea add adc mov aaa add cmp cmp push daa insl xchg cmp cmp cmp out scas popf ds cmp jge add ja mov xor pop and (bad) pushl or push cmp cmp cmp cmp push aas add jg aam add mov pushl es ss inc (bad) decl aaa pop aaa jno (bad) aaa xchg fwait (bad) aaa jmp cld aaa add or sbb cmp pushl pop decl cmp cmp (bad) (bad) cmp cmp cmp push cmp cmp cmp cmp xchg out bound cmp cmp pop cmp push (bad) (bad) jg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp out cli test loopne lock cmp cmp fwait cmp cmp int3 out in repz adc mov xchg cmp add or cwtl add push xor arpl loop test xor pop add xor xor cmpsb outsb das imul out xor xor xor xor xor pop xor jnp stc dec xchg ja xor pop outsb xor xor xor xchg xor xor xor ret jno jg test xor (bad) mov xor pop add and xorl sub jae cmp rolb aaa mov inc mov ljmp xor xor xor xor std push xor in sbb dec cmp add add pop lock cmp mov pushf xor xor xor xor inc xor mov mov jg pusha loopne xor or dec ss decl (bad) cmp cmp cmp cmp lock mov cmp ljmp repz or jge cld push xor xor xor xor xor xor xor sbb and sub (bad) incl pop loop in xor xor xor arpl xchg xor xor xor xor ja je xor xor xor xor ret xor and sub hlt jg ss aas mov inc aaa mov mov pop cli cmp (bad) (bad) (bad) cmp cmp cmp cmp lds fnstsw or sub bound mov hlt (bad) cmp cmp cmp cmp cmp cmp (bad) push cmp cmp cmp cmp cmp or in cmp cmp cmp inc cmp (bad) inc pop pushl pushf cmp sub xor icebp pushl rolb test aas sub xor inc aas js ffreep ja cmpsl aas mov mov aas out cmp add adc or xor xor ja std jg xor xor xor pusha xor sti xor cld fist inc gs jle test mov mov cltd xor push (bad) xor xor xor xor xor push xor arpl imul xchg xchg aaa cmpsl aaa (bad) aaa jmp cmp cmp cmp ret (bad) cmp cmp daa cmp sbb add or cs fdivp xor dec das (bad) cmp xor cmpl pop cmp inc or xor lahf gs xor jmp aad push xor xor xor xor xor sbb ss clc cmp add add adc dec std pushl bound iret xor xor xor aaa dec aaa pop lahf xorl les adc aaa loope in aaa pop dec pop popf fild jg cmp insl cmp andb cmp jge jg cmp cmp cmp cmp jne cmp hlt (bad) sbb mov (bad) pushl dec inc xor xor xor xor xor cmc ss ja fistp cmp cmp cmp cmp arpl cmp cmp cmp cmp cmp lret hlt cmp cmp outsl dec cmp pop cmp mov (bad) cmc xchg cmp xchg (bad) cmpsb mov lret cmp cmp cmp aad lcall adc sbb and sub xor inc mov cmp mov jp (bad) cmp cmp js (bad) mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp imul cmp (bad) (bad) incl cmp cmp cmp cmp cmp cmp cmp pop (bad) out cli incl dec cmp cmp cmp cmp cmp pop jbe cmpl cmp xchg cmp repz aas enter mov stos jo add (bad) incl arpl xor xor xor xor pop mov out xor xor xor xor xor xor xchg xor out ljmp xor loopne cmc aaa call aaa adc and mov cmp cmp cmp cmp ljmp mov mov cmp jg mov sti sub outsl daa adc sbb push jne mov std cmp (bad) out call cmp cmp cmp mov int fdivrl outsl mov cmp inc ds js,pt mov call fnstcw aas (bad) aas mov sbb xor dec fadd xor mov cltd xor jmp xor xor imul xor xor and xor cmp xor xor xor xor push push pushl xor xor xor sub jne mov pushl lds (bad) ss ss cmpsb aaa loop inc cmp cmp or cmp cmp cmp imul jge mov fnstsw push cmp mov es cmc ffreep or int cmp cmp cmp cmp je pusha (bad) ds aas jae mov add (bad) push mov into xor xor insl rorl cmpsb xor xor xor xor fidivl out sbb ljmp aaa lods aaa mov pop mov loop cmp cmp cmp cmp cmp cmp (bad) out clc mov mov cmp cmp cmp jno,pt movsl add sub jbe mov (bad) xor xor xor xor xor outsl call xor xor xor xor or jbe cli mov mov fnsave or xor fs ss mov aaa lahf cmp sbb cmp cmp cmp cmp cmp decl cmp jo ret cmp cmp cmp jle adc mov fidivl test (bad) divl cmp mov cmpsl ss ss out cmp int3 cmp jg and cmp cmp stc ds roll lahf mov fnsave push add (bad) aas js mov xor xor xor push neg adc xor xor xor xor mov dec cmp sbb jg pushf cmp lahf ds bndstx or incl (bad) pop das xor xor out xor jl rdpmc sub jg test xor negl cmp out iret cmp mov cmp cmp cmp cmp cmp or out loopne cmpsb pop jnp xchg cmp cmp cmp fwait cmp push (bad) int3 cmp repnz or (bad) mov dec jmp in sub xor scas lcall lds in xor xor inc fldcw sub dec xor xor xor fcoml or shlb divl lcall arpl mov mov and mov xor xor cmp cmpsl cmp rcrl cmp cmp pop push cmp lods jae add or (bad) aas push ret nop xor xor rcll pop adc add ja pop xor xor xor lock mov cmp fcomip inc std aas push aas add inc xor dec pop dec xor fnop pushl adc in idivl cmp push cmp lahf dec fwait stos cmpsl ljmp or fistpll mov xor mov sahf daa (bad) pop inc enter add cli cmpsb mov lahf cmp fadd fist hlt cmp (bad) adc cmp cmp dec cmp je jg or cmp jg sub cmp cmp cmp cmp or push cmp cmp cmp cmp jae cmp sub cs sbb cmp or mov aad call xor or pop cmp mov iret out cmp cmp cmp cmp cmp cmp ds je,pt test sub cmp push push aas fs mov loopne push xchg mov xor xor push cmp cmp push (bad) fistpll loopne ljmp aas sbb and add or jg arpl rcll xor xor inc xor push xor out clc aaa mov mov sarb cmc add rolb out call inc xor pop xor mov inc es inc loopne stos cmp pop (bad) lds push aas push aas mov jno aas jmp add lock xor xor jg rcrl cmc xor lock xor xor aaa mov (bad) (bad) dec jmp cmp cmp cmp mov aas xor aas push aas popa out bound imul mov insl ljmp incl xor xor xor push xor (bad) out aas sti inc adc inc cmp cmp cmp push inc ds ds cli mov inc aas sarb fldenv and aas add xor xor aaa aaa (bad) lcall xor popa cmp cmp cmp cmp cmp es aam ds arpl ret xchg add (bad) xor cmpb cli mov (bad) cmp cmp cmp cmp add ja mov xchg sub jmp xor jbe jge mov cmc fild aaa ja cmp cmp cmp cmp mov mov mov decl cld xor xor mov xor cmc (bad) pushl bound cmpsl cmp cmp cmp cmp cmp mov sbb dec cld or cmp cmp mov cmp adc add cmp cmp cmp ja cwtl scas xlat mov pop aas sub inc aas addr16 xchg aas mov sbb adcl or incl xor inc xor popa mov clc (bad) loop cmp inc cmp cmpb cmp xchg test scas cmp lcall cmp icebp cmp cmp cmp mov cmp movsl and sbb aas repz cli testl inc sbb pop xor xor xor push adc (bad) cmp cmp pop pop call xchg fistl cld ljmp aaa xchg aaa test (bad) aaa inc lock xchg jno xchg xchg xor xor xor ljmp sub xor xor xor xor xor xor xor (bad) xchg push mov aaa adc mov addr16 ljmp cmp cmp (bad) (bad) jg add xor xor xor xor divb cmp lcall add pusha cmp cmp cmp sbb adc push jge shlb xor daa (bad) xor xor xor adc loope xor std (bad) lcall xor xor xor xor xor xor pusha xor jnp mov movsl xor or jg pushl xor xor ss or xor jg (bad) jg xor xor cmp cmp inc xor cmp xor add xor xor xor xor fucomip xor xor xor xor sbb clc or add or fwait push push xor pusha xchg push subl js jl and sub xor (bad) out (bad) (bad) cld xor xor or adc and sub xor cmpsb (bad) cmp call cmp cmp cmp sbb add or or adc sbb sbb and loopne mov mov aas lock hlt aas clc pop jg scas loop or addl add pop adc adc stos psubq sbb sbb xlat pusha xor loopne out loopne incb xor xor xor pop adc and mov xor xorb xor xor xor cmp clc cs mov xor dec add (bad) (bad) call xor xor xor xor xor xor xor xor xor xor xor dec loopne sub sub inc sbb adc fdivs fsubrl pop pop aaa std add or lock imul inc xor dec cmpsl push xor pop (bad) lcall lods fs insb xor je js jl xor xor cmp cmp cld fcomip ss ss xchg dec ss ss ss ss ss lds jge pushl insb ss je js xorb mov ss ja (bad) pushl cwtl ss mov lods ss mov mov ss (bad) ss ss ss xchg test mov cmp cmp cmp mov sbb cs mov cmp mov fcomps cli cmpsb in in cmp cmp adc adc push out loop sbb and cmp cmp sub cmp inc cmp cmp sbb loopne mov cmp cmp cmp cmp cmp or aaa xor xor dec cmp cmp cmp cmp push or xor ret or jno xor xor ja lock hlt xor xor xor xor xor xor fcomip or sbb (bad) and sub xchg xor cmp ret ffreep or fistl push xor xor cmpsl jl aaa jl xor xor lods je js jl test xor xor mov pushf mov lods (bad) loope pop enter aam fdivs xor xor xor xor call sbb hlt xor xor cmp inc xor (bad) (bad) pushl push xor pusha xor insb xor js jl xorb (bad) pushl xchg xor mov xor mov mov cmp (bad) (bad) cmp cmp cmp cmp cmp cmp ja fisttp cmp cmp mov mov add cmp cmp cmp cmp cmp cmp cmp mov sub xor xor cmp dec cmp cmp cmp jns cmp jo js jg xchg cmp cmp cmp cmp cmp add adc loopne in call ss ss inc cmp (bad) decl dec cmp pop cmp fs cli ljmp js jl cmpb cmp cwtl daa mov jmp mov mov mov cmp int3 cmp fdivrs (bad) decl or pop ds ds sarb ds sarb (bad) cmpsb (bad) call fdivrs fdivrl loopne in call imul dec cli mov fwait pusha xor xor push out imul xor scas out cli les enter aam fdivs fcompl fucomi push stos in arpl loope imul lock adc adc sbb sbb and sub and aas lret xor and cwtl mov arpl adc push roll in cmp xchg and push push movsb pop mov movsb iret mov (bad) inc push (bad) (bad) aam in sub cmp dec and pop pushl pop aaa push (bad) mov mov mov scas cld cmp (bad) (bad) mov cmp xor cmp inc cmp cmp cmp sarb cmp cmp cmp cmp cmp cmp cmp cmp mov pop add cwtl xor (bad) ljmp xor (bad) xor xor xor sbb clc xor xor xor or or sub ffreep sbb and sub sub xor cmp cmp and xor std mov nop xor mov xor (bad) mov (bad) xor xor xor xor xor xor in push out call lock out mov or or adc adc sbb and sub clc cmp xor xlat inc xor xor test pop out xor xor clc es jl test mov mov lret sbb mov pop sbb xor nop stos cwtl jl ffreep xor lods xorl les sbb pop adc std (bad) xor (bad) (bad) fisttp fdivs in call xor cld xor or loop pushl or adc adc sbb sbb and and sub sub and and (bad) decl cld add add or or adc adc sbb sbb and and mov aaa xor cmp inc aaa inc mov fwait mov xchg pop aaa pusha aaa fs insb aaa jo je ds mov test mov mov nop aaa xchg aaa cwtl lea lods aaa mov mov mov aaa les enter (bad) aaa aam fdivs (bad) (bad) (bad) (bad) fdivl loopne in call aaa hlt aaa clc aaa cld aaa add add or or adc adc sbb cmpsb lcall and sub sub xor xor cmp (bad) decl inc cmp dec cmp cmp cmp cmp cmp cmp cmp cmp cmp (bad) (bad) (bad) (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and (bad) (bad) (bad) cmp sub sub xor xor cmp cmp inc cmp cmp cmp cmp (bad) (bad) (bad) (bad) cmp cmp cmp cmp cmp nop cmp mov cmp push in call adc hlt or cmp (bad) (bad) (bad) jg js jl cmpb mov cmp cmp cmp cmp cmp cmp cmp cmp cmp (bad) (bad) pushl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp (bad) (bad) push cmp cmp cmp cmp cmp or adc sbb and sub adcl cld xor daa fistl (bad) jmp push aas test mov cwtl aas mov cmc jg aas les sarb fdivrs loopne in jg aas add cltd or lahf fwait jmp xlat jmp xchg (bad) mov xor aam mov and and ja xor (bad) aad imul movsb lcall (bad) xor pop xchg js and xor dec and adc push sub scas pop cmpsl daa pushl mov jp push (bad) xor aas loopne in shll inc xor xor sub xor push mov pusha xor pop xorb xor push xor pop xor aam lock xlat add aad pop stos cmpsl mov jecxz fcmovnbe shlb lret outsb mov and xor cmp push aaa pop jecxz lcall cwtl aaa mov xchg mov jecxz or and (bad) mov pushf fcmovnb lret fcomps cmc or cmp call sub cmp push mov or shll mov and scas icebp call andl insb cmp cmp cmp mov (bad) (bad) (bad) (bad) call cmp cld cmp or or adc adc sbb sbb and sar (bad) jmp sub sub xor xor cmp cmp inc ds ds ds ds ds ds (bad) incl jl,pt cmpb mov mov nop ds ds ds mov movsb ds lods ds mov mov hlt (bad) (bad) (bad) ds ds ds add add or or adc adc sbb sbb and and sub (bad) ja xor xor cmp sar sbb aas pop aas pop aas pusha aas outsl insb jno aam je aas js xorb nop aas xchg pushl xor movsb subl rclb dec mov aas int3 (bad) aam fcoml pop rorb roll or pop ret and push xor xor loop and mov add inc out add jle or cmp addl adc adc sbb sub xor (bad) out test dec stos push lods pop cmp cmp cmp or pushl je js jl cmpb cmp add punpckhbw or shlb push add inc aas pop rorb imul dec cmpsl xor daa cmpsb dec addb cmpsb or aas setle nop push or aas or pop add add rorb pusha sbb mov adc and out or mov mov sbb in push push negl push pop (bad) (bad) (bad) pushl xchg cmp gs lods sarl cmc sbb cmp aas test (bad) lcall adc xor xor xor xor jns jg (bad) (bad) (bad) cmp cmp repz cmp ds aas jne lea mov fadds int jmp xor (bad) (bad) pushl popf xor xor lods xor xor xor xor adc jne movsl ss decl mov loope inc cmp inc push lret ss hlt lcall cmp aas mov pop jbe (bad) jg xor cmp cmp cmp lcall int inc aaa popa aaa dec cmp (bad) jg inc push adc arpl xorl pop ss add icebp dec icebp arpl add adc adc add ret push jmp xor sub add cs outsl out out mov insl or add jb je insb or addr16 add jb gs add arpl gs push outsl ja xor lock push pushf inc add stos jge mov sub add add push icebp out cld pop gs arpl je sti mov jbe cmp popa jbe adc and jae arpl das das pushl imul das insb imul push sub cmp cmp or fs lahf or fs sbb jb xor dec idivl and ja inc push dec inc outsb outsl outsb jns outsl jne (bad) (bad) (bad) ljmp daa jns dec push gs outsb cmp dec aaa xor inc pop cmp inc push popa push dec js xor adc (bad) cmp sub or sbb ret movd icebp pop ret add inc add aas mov xor push loop fs out xor popa jo bound insb ja sbb inc orb fwait adc inc push push inc rcll sub push sub add inc stc sbb cli adc inc imul cld inc js add or push imul bound sbb inc dec sbb js dec outsb addr16 inc adc test adc inc add push gs outsl jb sti int3 sbb jne add imul add inc sbb pusha sbbl add and shlb add inc fs sub jnp jb outsl inc mov push adc push add daa insb xlat dec jb gs add adc cmp jo inc aas dec fnsave push popa je addb jae jae (bad) pop loope jns,pn outsb addr16 push imul inc mov shrb inc add mov jg aaa dec insb jae jb jo outsb push dec outsl imul and ret pop pop fwait cmpsb sti addl iret add sti adc fnsave inc add pop fdivl mov repz rcll loopne pop add fbstp lret stc int3 loope test mov lret ffree loopne int sti (bad) (bad) (bad) mov shrb mov test in std xlat jmp shr (bad) (bad) out std xlat jmp (bad) mov fcom jmp repz shl repnz mov lods lret mov adc out shll aam inc lret not std (bad) mov shlb idiv das sti lods mov ror mov mov into cmpsl add mov mov mov mov fmul mov repnz pop (bad) pop sti idivl rcl out mov mov mov aad or sti std inc lret mov iret mov mov stc mov fistpll and (bad) sti mov ret inc dec dec dec mov (bad) mov aad mov into repz pushl mov mov lret mov enter adc inc push mov (bad) movsl lds (bad) mov jmp sar rol iret ret sbb mov pop jge lret sahf std sbb std mov into stos xor rcl mov (bad) mov mov mov les aaa into mov ret mov lret stc shr shrb adc pop js loope jae popf inc add sar xor outsl addr16 insl and (bad) ficom outsb popa insb and and sti incl cmp and or mov mov inc lock fst jecxz add data16 and ljmp add aad add rol iret and sub popa arpl outsl cmp xchg cmpsl mov jne cmpsb (bad) fdivrl (bad) jmp adc (bad) out stos mov xor clc xlat not fild add push dec jmp inc aas dec and outsb andl hlt and cmp lcall (bad) fidiv mov (bad) cmp and (bad) and lods sti cmp sbb dec int les ret ret (bad) mov sbb cs jmp jmp (bad) fnstsw shrl lret mov and add and pushl and fs add mov add sbb dec or push add inc into add xchg ja mov add jo dec sbb fisub add imul incl and cs outsb imul data16 popa jb pop dec dec pusha mov pop pop inc jae cmp sub push pop pop mov jg add imul add xchg jnp add rclb test mov cld push mov aas pop jg cltd sub roll or arpl aas inc push inc dec outsl push jb aas mov test inc inc sbb pop inc inc pop sbbb pop push dec dec pop push push inc push inc inc cmp inc inc insl fs popa jb gs push mov mov pop fsubl inc jo sbb push scas das ss pop sbb (bad) pop mov pop iret scas inc push dec xor (bad) adc inc inc inc inc aaa mov fwait pop add std ja push dec and push push inc add add adc aaa inc inc xor sahf xor and inc imul sbb popa rcrl pop adc push inc add sub xchg inc daa fs mov pusha daa push inc push imul inc pop aas inc mov sahf push pop inc sarb aas push gs jne arpl adc nop cmp jg xchg mov (bad) mov mov xchg dec dec inc push dec inc push add pop pop inc mulb and inc inc push inc pop dec hlt inc rolb inc jb sbb add mov lret pusha iret cmp and or inc hlt inc jb popa jns enter pop cmp sahf xor sbb push outsb adc add aaa fsubs int3 cmpsb pop or aas pop dec outsl je fwait add push jne inc std movsb invd (bad) inc push inc mov jb ret addr16 gs add jnp cmp cmpsl inc inc or (bad) iret jecxz push sub popa cli ss test je push outsl add aas mov outsb jne pop outsl mov cld lods inc add jne add jae push pop sub in add add pop nop and add push mov push pop and sarl jnp loopne pushl fimul add pop add pusha push fprem pusha add enter paddd add add add pusha (bad) jns or adc mov cli add sbbl mov mov ror flds cmp nop and (bad) aaa add mov call scas fist pop adc jg jle xor add push ficompl and pop fisubrl incl push adc add xor mov cmp inc add (bad) mov lods test dec (bad) xor cwtl nop test fs (bad) xor pop pop push push (bad) xor rorl inc cmp (bad) xor cmp and adc mov pop add clc cmp add fmul enter cmpsb imul imul ja stos push pop xchg addl add or pop add mov adc or ficomp out sbb pop sbb aam push hlt pop xor push cmp icebp adc mov add setne dec inc mov inc iret inc sub mov inc flds or icebp or pop gs jo sti jnp jg insl pop dec jo negl adc and out das orb addl lds orl add jae push inc cltd add jne sub aad push cmp (bad) mov outsl cmp stos add add sbb xlat sbb xchg daa pop sbb inc shl jl movhps sbb or lea pop mov pop nop add (bad) nop fwait pusha add shrb pop xchg or mov and (bad) loope test fs (bad) push das and inc add jae out sub and pop inc (bad) inc pop idivl sti addb pop push adc pop pop add pop add xlat aas inc clc aad add scas and pusha pop (bad) je negl sub jns xchg jmp sub pop sbb ja fldl call hlt fistl inc add adc cmpb enter in sbb add pop or test pop inc arpl add fiadd pop push std add push adcl add nop in loopne loope and sub sbb int3 ja sbb flds adc test add or addl stos fild inc int3 shlb add add ret add (bad) mov sub jnp push cmpsl fwait pop loope out add push fs push pusha fistl pop pop push add mov dec pop pop inc pop push jo add out lret jge pop xchg sub out and in outsb add fs (bad) pop (bad) iret adc orl add mov cld xchg mov pop (bad) in pop pop out add out pop paddusb call inc in jo push int3 pop cmp (bad) jne les leave (bad) jne scas jmp and pop adc pop push add jg add call add shld add rcr mov adcb jmp or xor (bad) pop add int3 add test lret add js mov loopne add (bad) or adc pushf add sti and daa loopne or add ss cltd sbb or sbb out int sbb pop add add clc arpl lock (bad) call jae mov fs push inc aas or ljmp pop rcrl mov ud2 loope sub pop and xchg pop mov adc adc out mov mov sbb mov jne xchg add dec xlat daa das add adc xchg adc add cld decl js orl orl or pusha push out cmp repnz out mov add repnz inc pushf or ret mov adc psubw adcb sbb (bad) jg add leave sbb into sbb rorl and sahf mov sub (bad) (bad) (bad) incl pop std and sbb addl xlat xchg inc push add inc stc mov adc (bad) (bad) decl mov decl js roll (bad) loopne jmp xchg test mov (bad) call cmp inc mov popf sti jmp stos push inc mov repnz test incl pop stos clc scas adc (bad) inc jmp aam imul loope jp iret inc gs (bad) xchg push cmpsb scas (bad) (bad) (bad) jmp or addl cmpsl xchg cmp xor dec cmpsl in (bad) (bad) lcall lds mov cmpsb lock mov popa sar mov fsubs push (bad) (bad) jmp xchg clc repz mov subb fwait xchg and and in int int add aas jno or mov incl aas pop fs dec lea aas ret shrl mov icebp aas rorb and (bad) (bad) incl cmpsl out aas inc cmpsb mov insb scas add aas xor aad mov (bad) (bad) aas ret into popa test ja stos in das dec pop loope les aas xchg les jne int (bad) (bad) call lcall cmp push mov xchg aas and (bad) loop mov jp popa push pop (bad) (bad) (bad) inc jle push jl mov das lea mov inc aas and movsl jmp jg sub (bad) (bad) (bad) aas jge mov inc rcr push arpl int3 and call cmp jp and inc xor lods cmp mov cmp std xlat cmp mov sbb add movb pop mov jne fldt cmp jno shlb (bad) out dec nop pop cmp fisubl (bad) (bad) (bad) pushl loop mov cmpsl push lahf inc pop mov sub dec in ss push scas into imul faddp (bad) (bad) (bad) (bad) jge call mov xchg cmp push andl dec dec gs std orl in faddp sbb enter fmuls push scas add sub pop push push aas adc inc add add mov add inc insb outsl bound inc gs gs inc je insl add dec outsb je jb outsl arpl dec dec fdivr fs outsb arpl insl outsb je inc gs (bad) (bad) decl popa insb inc jb add inc insb jne push inc jne data16 add insb jae mov arpl outsb inc gs jne insb push popa je dec popa insl gs jmp mov inc insb addr16 imul inc jb pop mov ja push arpl outsb add push insb jae mov and push sub dec gs jbe call jnp dec inc in inc push gs fs push popa insb jne mov out addr16 dec inc insb popa addr16 mov push mov imul add jb outsb addr16 mov inc jne jb inc imul cmp loope je imul ud2 ret cmp xor push jb arpl jae pop sbb call gs outsl push jns je insl or sti or and add inc jb outsl (bad) lock jb outsl fimul push dec outsb outsw sahf dec inc dec mov push or popa jb jne sbb outsb ja test ja add push popa imul jo dec gs jo idiv lea mov inc cmp outsb fs gs jl xchg and jbe cmp icebp imul pop mov push mov pop (bad) cmp ret fisttpl inc outsl lds (bad) jne fstl adc mov jns clc pop push popa jb popa bound cld push xchg rolb outsl jns add jb ret lock add push imul out mov sbb iret clc rcll inc popa pcmpeqb cmp mov loope or pop dec pop sub ret inc stos push dec iret inc outsl and jo jb inc cmp nop push cwtl sarl loop xchg mov adc sbb or push push mov adc aas pop xor outsb gs sbb popa sbb mov xchg je dec sti das (bad) aas lea insb gs add outsb ret lock inc jbe aaa push gs imul add addr16 mov pop aad outsl imul mov imul outsb pusha (bad) lcall leave or imul outsl dec jne je or jns add push outsl pop xchg dec add inc gs std js outsb ljmp push outsl ja fnstcw es gs adc gs jo sbbl (bad) add dec outsl popa fs imul push in stos or daa cmp outsb test jb dec out gs fs outsl jae in iret mov jb je pop cmovle push hlt mov (bad) bound lds ss in das (bad) cli adcb add push dec push imul gs jne sub mov mov das or push dec push adc sbb inc js je or xchg rorl inc add sbb and maskmovq negl shll sbb push outsl jb jg and cltd jmp imul xchg mov inc adc pop push sahf or pop nop or sbb sbb xor insb add push push lcall scas data16 ljmp push xor popa jo push fwait (bad) xor pusha fiaddl add cmpsl lahf lods add and jns pop mov dec outsl outsl imul out mov jmp les and xor push ljmp ret loope add inc fs jae negb sti push outsl imul loop lret push or add sub add addl imul shrb push js jne push mov or je jae popa nop out loope inc insb imul bound mov pusha push je arpl add add mov data16 xor add fisttp imul mov insl popa pop push sbb push mov jb or iret or cmp insb outsl push or xor or gs sbb gs outsl test dec jb inc test adc ds mov ljmp mov cmp gs xchg testb push decl rorb mov inc outsl mov popa outsb arpl add ja mov push inc insb inc js arpl sub jo arpl outsl insb fs mov jo dec out outsb addr16 outsl je data16 cmpsb sarl fldl arpl pop mov xlat jae add outsl sbb jne negb popa pop push dec inc xchg push jne adc fild sub pop imul inc int3 jne add or je dec loop sbb je jb loope into inc or sbb fwait outsl jo push data16 mov push outsl arpl inc xor cmp xchg add mov lock arpl dec cwtl jae hlt mov outsl jb xor add cmp (bad) cmc sahf fwait shll cmc fistpll cwtl sbb adc insb addr16 je pop mov jb push cmp add xor int3 fs std sarl jb ja push popa bound fs xor or in xor (bad) mov dec cwtl jnp jb and or int inc popa insb insb xor arpl jbe ret andl gs dec inc cmp sbb add or inc into xor push xchg popa pop ss hlt gs dec jae imul sub insb popa arpl lcall jae cmpsb inc outsl arpl outsb outsb jne push popa jb inc pop out inc cmpsl outsb jae sbb xchg pusha sub loopne adc sbb ret jae or loopne xor and xchg addb imul xchg push shrl test adc insl outsl push out adc loopne or inc lcall xor gs ljmp xchg ss je jne adc in outsb inc sub gs fwait mov cmovle int3 sub int dec std es aam push popa jb insl gs jae pop cs jne rcll insb gs jae outsb fld fisubr xchg pop jo mov jg dec or sbb es jnp push sbb addr16 fs jae jb lcall xchg xchg pop jmp imul test push jb outsb jae jno jg rcll imul adc insl ljmp je or icebp jae and cltd outsb add gs mov jl and adc std ret push int mov addr16 cltd cmp cmp push rorb push outsb jb adc or loopne jp clc mov aas mov add sbb jg jge adc gs imul incl dec add pushf cmpsb push pop lsl add add add add add adc xor mov mov add add add lds add and adc add sub int3 daa pop or add add cld imul add enter add add scas sub pop cmpsl adc cmp cs mulb pop int3 pop rcll add add pusha jb,pn in fdivl scas popa add pop inc adc lahf insl sbb push add pop add out or sbb pop and fsubr faddl daa shrb jae arpl jmp xor repz push adc daa add add jmp and add add add movsb das and and add incl pusha mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp 